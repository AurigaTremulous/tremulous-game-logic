!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	src/qcommon/md4.c	/^	uint32_t A, B, C, D;$/;"	m	struct:mdfour	file:
A	src/qcommon/vm_powerpc_asm.c	557;"	d	file:
A3D_RenderGeometry	src/renderercommon/tr_public.h	/^	void    (*A3D_RenderGeometry) (void *pVoidA3D, void *pVoidGeom, void *pVoidMat, void *pVoidGeomStatus);$/;"	m	struct:__anon108
AAcidTube_Think	src/game/g_buildable.c	/^void AAcidTube_Think( gentity_t *self )$/;"	f
ABHM	src/game/tremulous.h	231;"	d
ABUILDER_BLOB_DMG	src/game/tremulous.h	44;"	d
ABUILDER_BLOB_REPEAT	src/game/tremulous.h	45;"	d
ABUILDER_BLOB_SPEED	src/game/tremulous.h	46;"	d
ABUILDER_BLOB_SPEED_MOD	src/game/tremulous.h	47;"	d
ABUILDER_BLOB_TIME	src/game/tremulous.h	48;"	d
ABUILDER_BUILD_REPEAT	src/game/tremulous.h	38;"	d
ABUILDER_CLAW_DMG	src/game/tremulous.h	39;"	d
ABUILDER_CLAW_K_SCALE	src/game/tremulous.h	43;"	d
ABUILDER_CLAW_RANGE	src/game/tremulous.h	40;"	d
ABUILDER_CLAW_REPEAT	src/game/tremulous.h	42;"	d
ABUILDER_CLAW_WIDTH	src/game/tremulous.h	41;"	d
ABUILDER_COST	src/game/tremulous.h	160;"	d
ABUILDER_HEALTH	src/game/tremulous.h	158;"	d
ABUILDER_REGEN	src/game/tremulous.h	159;"	d
ABUILDER_SPEED	src/game/tremulous.h	156;"	d
ABUILDER_UPG_COST	src/game/tremulous.h	166;"	d
ABUILDER_UPG_HEALTH	src/game/tremulous.h	164;"	d
ABUILDER_UPG_REGEN	src/game/tremulous.h	165;"	d
ABUILDER_UPG_SPEED	src/game/tremulous.h	162;"	d
ABUILDER_UPG_VALUE	src/game/tremulous.h	163;"	d
ABUILDER_VALUE	src/game/tremulous.h	157;"	d
ABarricade_Die	src/game/g_buildable.c	/^void ABarricade_Die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod )$/;"	f
ABarricade_Pain	src/game/g_buildable.c	/^void ABarricade_Pain( gentity_t *self, gentity_t *attacker, int damage )$/;"	f
ABarricade_Shrink	src/game/g_buildable.c	/^void ABarricade_Shrink( gentity_t *self, qboolean shrink )$/;"	f
ABarricade_Think	src/game/g_buildable.c	/^void ABarricade_Think( gentity_t *self )$/;"	f
ABarricade_Touch	src/game/g_buildable.c	/^void ABarricade_Touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
ABooster_Touch	src/game/g_buildable.c	/^void ABooster_Touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
ACFF_MODULATE_ALPHA	src/renderergl1/tr_local.h	/^	ACFF_MODULATE_ALPHA$/;"	e	enum:__anon136
ACFF_MODULATE_ALPHA	src/renderergl2/tr_local.h	/^	ACFF_MODULATE_ALPHA$/;"	e	enum:__anon18
ACFF_MODULATE_RGB	src/renderergl1/tr_local.h	/^	ACFF_MODULATE_RGB,$/;"	e	enum:__anon136
ACFF_MODULATE_RGB	src/renderergl2/tr_local.h	/^	ACFF_MODULATE_RGB,$/;"	e	enum:__anon18
ACFF_MODULATE_RGBA	src/renderergl1/tr_local.h	/^	ACFF_MODULATE_RGBA,$/;"	e	enum:__anon136
ACFF_MODULATE_RGBA	src/renderergl2/tr_local.h	/^	ACFF_MODULATE_RGBA,$/;"	e	enum:__anon18
ACFF_NONE	src/renderergl1/tr_local.h	/^	ACFF_NONE,$/;"	e	enum:__anon136
ACFF_NONE	src/renderergl2/tr_local.h	/^	ACFF_NONE,$/;"	e	enum:__anon18
ACIDTUBE_BP	src/game/tremulous.h	274;"	d
ACIDTUBE_BT	src/game/tremulous.h	275;"	d
ACIDTUBE_CREEPSIZE	src/game/tremulous.h	280;"	d
ACIDTUBE_DAMAGE	src/game/tremulous.h	281;"	d
ACIDTUBE_HEALTH	src/game/tremulous.h	276;"	d
ACIDTUBE_RANGE	src/game/tremulous.h	282;"	d
ACIDTUBE_REGEN	src/game/tremulous.h	277;"	d
ACIDTUBE_REPEAT	src/game/tremulous.h	283;"	d
ACIDTUBE_REPEAT_ANIM	src/game/tremulous.h	284;"	d
ACIDTUBE_SPLASHDAMAGE	src/game/tremulous.h	278;"	d
ACIDTUBE_SPLASHRADIUS	src/game/tremulous.h	279;"	d
ACIDTUBE_VALUE	src/game/tremulous.h	285;"	d
ACT	src/tools/lcc/cpp/lex.c	26;"	d	file:
ADD	src/qcommon/vm_sparc.c	/^	ADDI, ADD,$/;"	e	enum:sparc_iname	file:
ADDI	src/qcommon/vm_sparc.c	/^	ADDI, ADD,$/;"	e	enum:sparc_iname	file:
ADDR	src/server/sqlite3.c	10844;"	d	file:
ADDRESS_LENGTH	src/master/master.c	550;"	d	file:
ADDRLEN	src/game/g_admin.h	103;"	d
ADD_COPY_TARGET	GNUmakefile	/^define ADD_COPY_TARGET$/;"	m
ADM	src/game/tremulous.h	36;"	d
ADMBP	src/game/g_admin.h	30;"	d
ADMBP_begin	src/game/g_admin.h	31;"	d
ADMBP_end	src/game/g_admin.h	32;"	d
ADMF_ACTIVITY	src/game/g_admin.h	63;"	d
ADMF_ADMINCHAT	src/game/g_admin.h	68;"	d
ADMF_ALLFLAGS	src/game/g_admin.h	67;"	d
ADMF_CAN_IP_BAN	src/game/g_admin.h	62;"	d
ADMF_CAN_PERM_BAN	src/game/g_admin.h	61;"	d
ADMF_FORCETEAMCHANGE	src/game/g_admin.h	58;"	d
ADMF_IMMUNITY	src/game/g_admin.h	55;"	d
ADMF_IMMUTABLE	src/game/g_admin.h	65;"	d
ADMF_INCOGNITO	src/game/g_admin.h	66;"	d
ADMF_NOCENSORFLOOD	src/game/g_admin.h	56;"	d
ADMF_NO_VOTE_LIMIT	src/game/g_admin.h	60;"	d
ADMF_SPEC_ALLCHAT	src/game/g_admin.h	57;"	d
ADMF_UNACCOUNTABLE	src/game/g_admin.h	59;"	d
ADMITDEFEAT_VOTE	src/game/bg_public.h	/^  ADMITDEFEAT_VOTE,$/;"	e	enum:__anon360
ADMP	src/game/g_admin.h	29;"	d
AFRAFRC_MASK	src/qcommon/vm_powerpc_asm.c	567;"	d	file:
AFRALFRC_MASK	src/qcommon/vm_powerpc_asm.c	570;"	d	file:
AFRB_MASK	src/qcommon/vm_powerpc_asm.c	561;"	d	file:
AFRC_MASK	src/qcommon/vm_powerpc_asm.c	564;"	d	file:
AGEN_CONST	src/renderergl1/tr_local.h	/^	AGEN_CONST$/;"	e	enum:__anon133
AGEN_CONST	src/renderergl2/tr_local.h	/^	AGEN_CONST,$/;"	e	enum:__anon15
AGEN_ENTITY	src/renderergl1/tr_local.h	/^	AGEN_ENTITY,$/;"	e	enum:__anon133
AGEN_ENTITY	src/renderergl2/tr_local.h	/^	AGEN_ENTITY,$/;"	e	enum:__anon15
AGEN_IDENTITY	src/renderergl1/tr_local.h	/^	AGEN_IDENTITY,$/;"	e	enum:__anon133
AGEN_IDENTITY	src/renderergl2/tr_local.h	/^	AGEN_IDENTITY,$/;"	e	enum:__anon15
AGEN_LIGHTING_SPECULAR	src/renderergl1/tr_local.h	/^	AGEN_LIGHTING_SPECULAR,$/;"	e	enum:__anon133
AGEN_LIGHTING_SPECULAR	src/renderergl2/tr_local.h	/^	AGEN_LIGHTING_SPECULAR,$/;"	e	enum:__anon15
AGEN_ONE_MINUS_ENTITY	src/renderergl1/tr_local.h	/^	AGEN_ONE_MINUS_ENTITY,$/;"	e	enum:__anon133
AGEN_ONE_MINUS_ENTITY	src/renderergl2/tr_local.h	/^	AGEN_ONE_MINUS_ENTITY,$/;"	e	enum:__anon15
AGEN_ONE_MINUS_VERTEX	src/renderergl1/tr_local.h	/^	AGEN_ONE_MINUS_VERTEX,$/;"	e	enum:__anon133
AGEN_ONE_MINUS_VERTEX	src/renderergl2/tr_local.h	/^	AGEN_ONE_MINUS_VERTEX,$/;"	e	enum:__anon15
AGEN_PORTAL	src/renderergl1/tr_local.h	/^	AGEN_PORTAL,$/;"	e	enum:__anon133
AGEN_PORTAL	src/renderergl2/tr_local.h	/^	AGEN_PORTAL,$/;"	e	enum:__anon15
AGEN_SKIP	src/renderergl1/tr_local.h	/^	AGEN_SKIP,$/;"	e	enum:__anon133
AGEN_SKIP	src/renderergl2/tr_local.h	/^	AGEN_SKIP,$/;"	e	enum:__anon15
AGEN_VERTEX	src/renderergl1/tr_local.h	/^	AGEN_VERTEX,$/;"	e	enum:__anon133
AGEN_VERTEX	src/renderergl2/tr_local.h	/^	AGEN_VERTEX,$/;"	e	enum:__anon15
AGEN_WAVEFORM	src/renderergl1/tr_local.h	/^	AGEN_WAVEFORM,$/;"	e	enum:__anon133
AGEN_WAVEFORM	src/renderergl2/tr_local.h	/^	AGEN_WAVEFORM,$/;"	e	enum:__anon15
AGGREGATE	src/server/sqlite3.c	12483;"	d	file:
AGGREGATE2	src/server/sqlite3.c	12486;"	d	file:
AGeneric_Blast	src/game/g_buildable.c	/^void AGeneric_Blast( gentity_t *self )$/;"	f
AGeneric_CreepCheck	src/game/g_buildable.c	/^void AGeneric_CreepCheck( gentity_t *self )$/;"	f
AGeneric_CreepRecede	src/game/g_buildable.c	/^void AGeneric_CreepRecede( gentity_t *self )$/;"	f
AGeneric_CreepRespawn	src/game/g_buildable.c	/^void AGeneric_CreepRespawn( gentity_t *self )$/;"	f
AGeneric_Die	src/game/g_buildable.c	/^void AGeneric_Die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod )$/;"	f
AGeneric_Pain	src/game/g_buildable.c	/^void AGeneric_Pain( gentity_t *self, gentity_t *attacker, int damage )$/;"	f
AGeneric_Think	src/game/g_buildable.c	/^void AGeneric_Think( gentity_t *self )$/;"	f
AHM	src/game/tremulous.h	151;"	d
AHive_CheckTarget	src/game/g_buildable.c	/^static qboolean AHive_CheckTarget( gentity_t *self, gentity_t *enemy )$/;"	f	file:
AHive_Pain	src/game/g_buildable.c	/^void AHive_Pain( gentity_t *self, gentity_t *attacker, int damage )$/;"	f
AHive_SearchAndDestroy	src/game/g_missile.c	/^void AHive_SearchAndDestroy( gentity_t *self )$/;"	f
AHive_Think	src/game/g_buildable.c	/^void AHive_Think( gentity_t *self )$/;"	f
AHovel_Blocked	src/game/g_buildable.c	/^qboolean AHovel_Blocked( gentity_t *hovel, gentity_t *player, qboolean provideExit )$/;"	f
AHovel_Die	src/game/g_buildable.c	/^void AHovel_Die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod )$/;"	f
AHovel_Think	src/game/g_buildable.c	/^void AHovel_Think( gentity_t *self )$/;"	f
AHovel_Use	src/game/g_buildable.c	/^void AHovel_Use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
ALC_ALL_DEVICES_SPECIFIER	src/client/qal.h	44;"	d
ALC_DEFAULT_ALL_DEVICES_SPECIFIER	src/client/qal.h	43;"	d
ALC_ENUMERATE_ALL_EXT	src/client/qal.h	42;"	d
ALC_NO_PROTOTYPES	src/client/qal.h	34;"	d
ALDRIVER_DEFAULT	src/client/snd_openal.c	2229;"	d	file:
ALDRIVER_DEFAULT	src/client/snd_openal.c	2231;"	d	file:
ALDRIVER_DEFAULT	src/client/snd_openal.c	2233;"	d	file:
ALDRIVER_DEFAULT	src/client/snd_openal.c	2235;"	d	file:
ALIENSENSE_RANGE	src/game/tremulous.h	345;"	d
ALIEN_BHLTH_MODIFIER	src/game/tremulous.h	230;"	d
ALIEN_BUILDER_SCOREINC	src/game/tremulous.h	658;"	d
ALIEN_CREDITS_PER_KILL	src/game/tremulous.h	359;"	d
ALIEN_HLTH_MODIFIER	src/game/tremulous.h	150;"	d
ALIEN_MAX_CREDITS	src/game/tremulous.h	358;"	d
ALIEN_MAX_FRAGS	src/game/tremulous.h	357;"	d
ALIEN_POISON_DIVIDER	src/game/tremulous.h	350;"	d
ALIEN_POISON_DMG	src/game/tremulous.h	349;"	d
ALIEN_POISON_TIME	src/game/tremulous.h	348;"	d
ALIEN_REGEN_DAMAGE_TIME	src/game/tremulous.h	354;"	d
ALIEN_REGEN_NOCREEP_MOD	src/game/tremulous.h	355;"	d
ALIEN_SPAWN_REPEAT_TIME	src/game/tremulous.h	352;"	d
ALIEN_TK_SUICIDE_PENALTY	src/game/tremulous.h	360;"	d
ALIEN_VALUE_MODIFIER	src/game/tremulous.h	153;"	d
ALIEN_WDMG_MODIFIER	src/game/tremulous.h	35;"	d
ALIGN_CENTER	src/ui/menudef.h	24;"	d
ALIGN_LEFT	src/ui/menudef.h	23;"	d
ALIGN_NONE	src/ui/menudef.h	27;"	d
ALIGN_RIGHT	src/ui/menudef.h	25;"	d
ALLBITS	src/server/sqlite3.c	13341;"	d	file:
ALLOWBUILD_VOTE	src/game/bg_public.h	/^  ALLOWBUILD_VOTE,$/;"	e	enum:__anon360
ALT1PORT_MASTER	src/qcommon/qcommon.h	270;"	d
ALT1PORT_SERVER	src/qcommon/qcommon.h	271;"	d
ALT2PORT_MASTER	src/qcommon/qcommon.h	272;"	d
ALT2PORT_SERVER	src/qcommon/qcommon.h	273;"	d
ALTERNATE_CURL_LIB	src/client/cl_curl.h	36;"	d
ALTERNATE_CURL_LIB	src/client/cl_curl.h	41;"	d
ALWAYS	src/server/sqlite3.c	138246;"	d	file:
ALWAYS	src/server/sqlite3.c	138249;"	d	file:
ALWAYS	src/server/sqlite3.c	138254;"	d	file:
ALWAYS	src/server/sqlite3.c	169283;"	d	file:
ALWAYS	src/server/sqlite3.c	9441;"	d	file:
ALWAYS	src/server/sqlite3.c	9444;"	d	file:
ALWAYS	src/server/sqlite3.c	9447;"	d	file:
AL_NO_PROTOTYPES	src/client/qal.h	33;"	d
ANCHOR	src/tools/lcc/src/symbolic.c	27;"	d	file:
AND	src/qcommon/vm_sparc.c	/^	ANDI, AND,$/;"	e	enum:sparc_iname	file:
AND	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
AND	src/tools/lcc/src/c.h	/^	AND=38<<4,$/;"	e	enum:__anon305
AND1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
ANDI	src/qcommon/vm_sparc.c	/^	ANDI, AND,$/;"	e	enum:sparc_iname	file:
ANDN	src/qcommon/vm_sparc.c	/^	ANDNI, ANDN,$/;"	e	enum:sparc_iname	file:
ANDNI	src/qcommon/vm_sparc.c	/^	ANDNI, ANDN,$/;"	e	enum:sparc_iname	file:
ANGLE2SHORT	src/qcommon/q_shared.h	1183;"	d
ANGLE_DOWN	src/qcommon/qfiles.h	352;"	d
ANGLE_UP	src/qcommon/qfiles.h	351;"	d
ANIM_FORCEBIT	src/game/bg_public.h	834;"	d
ANIM_TOGGLEBIT	src/game/bg_public.h	833;"	d
AOvermind_Think	src/game/g_buildable.c	/^void AOvermind_Think( gentity_t *self )$/;"	f
AP	src/game/g_admin.h	26;"	d
APSF	src/qcommon/msg.c	1194;"	d	file:
APropHovel_Blocked	src/game/g_buildable.c	/^static qboolean APropHovel_Blocked( vec3_t origin, vec3_t angles, vec3_t normal,$/;"	f	file:
ARCH	GNUmakefile	/^  ARCH=mips$/;"	m
ARCH	GNUmakefile	/^ARCH=$(COMPILE_ARCH)$/;"	m
ARCH	src/master/Makefile	/^	ARCH=$(shell uname -m | sed -e s\/i.86\/x86\/)$/;"	m
ARCH_STRING	src/qcommon/q_platform.h	102;"	d
ARCH_STRING	src/qcommon/q_platform.h	104;"	d
ARCH_STRING	src/qcommon/q_platform.h	129;"	d
ARCH_STRING	src/qcommon/q_platform.h	131;"	d
ARCH_STRING	src/qcommon/q_platform.h	155;"	d
ARCH_STRING	src/qcommon/q_platform.h	158;"	d
ARCH_STRING	src/qcommon/q_platform.h	163;"	d
ARCH_STRING	src/qcommon/q_platform.h	188;"	d
ARCH_STRING	src/qcommon/q_platform.h	192;"	d
ARCH_STRING	src/qcommon/q_platform.h	194;"	d
ARCH_STRING	src/qcommon/q_platform.h	196;"	d
ARCH_STRING	src/qcommon/q_platform.h	198;"	d
ARCH_STRING	src/qcommon/q_platform.h	200;"	d
ARCH_STRING	src/qcommon/q_platform.h	202;"	d
ARCH_STRING	src/qcommon/q_platform.h	204;"	d
ARCH_STRING	src/qcommon/q_platform.h	206;"	d
ARCH_STRING	src/qcommon/q_platform.h	208;"	d
ARCH_STRING	src/qcommon/q_platform.h	210;"	d
ARCH_STRING	src/qcommon/q_platform.h	212;"	d
ARCH_STRING	src/qcommon/q_platform.h	214;"	d
ARCH_STRING	src/qcommon/q_platform.h	216;"	d
ARCH_STRING	src/qcommon/q_platform.h	252;"	d
ARCH_STRING	src/qcommon/q_platform.h	256;"	d
ARCH_STRING	src/qcommon/q_platform.h	258;"	d
ARCH_STRING	src/qcommon/q_platform.h	283;"	d
ARCH_STRING	src/qcommon/q_platform.h	285;"	d
ARCH_STRING	src/qcommon/q_platform.h	306;"	d
ARCH_STRING	src/qcommon/q_platform.h	322;"	d
AREA_DEPTH	src/server/sv_world.c	72;"	d	file:
AREA_NODES	src/server/sv_world.c	73;"	d	file:
ARENAS_PER_TIER	src/game/bg_public.h	1291;"	d
ARG2_FLOAT	src/qcommon/vm_powerpc.c	764;"	d	file:
ARG2_INT	src/qcommon/vm_powerpc.c	763;"	d	file:
ARG_DISP22	src/qcommon/vm_sparc.c	69;"	d	file:
ARG_DISP30	src/qcommon/vm_sparc.c	67;"	d	file:
ARG_FLOAT	src/qcommon/vm_powerpc.c	762;"	d	file:
ARG_IMM22	src/qcommon/vm_sparc.c	68;"	d	file:
ARG_INT	src/qcommon/vm_powerpc.c	761;"	d	file:
ARG_NONE	src/qcommon/vm_sparc.c	62;"	d	file:
ARG_RD	src/qcommon/vm_sparc.c	65;"	d	file:
ARG_RS1	src/qcommon/vm_sparc.c	63;"	d	file:
ARG_RS1_RS2	src/qcommon/vm_sparc.c	75;"	d	file:
ARG_RS1_RS2_RD	src/qcommon/vm_sparc.c	73;"	d	file:
ARG_RS1_SIMM13_RD	src/qcommon/vm_sparc.c	74;"	d	file:
ARG_RS2	src/qcommon/vm_sparc.c	64;"	d	file:
ARG_RS2_RD	src/qcommon/vm_sparc.c	76;"	d	file:
ARG_SIMM13	src/qcommon/vm_sparc.c	66;"	d	file:
ARG_SWTRAP	src/qcommon/vm_sparc.c	70;"	d	file:
ARITH	src/tools/lcc/cpp/eval.c	19;"	d	file:
ARMOURY_BP	src/game/tremulous.h	599;"	d
ARMOURY_BT	src/game/tremulous.h	600;"	d
ARMOURY_HEALTH	src/game/tremulous.h	601;"	d
ARMOURY_SPLASHDAMAGE	src/game/tremulous.h	602;"	d
ARMOURY_SPLASHRADIUS	src/game/tremulous.h	603;"	d
ARMOURY_VALUE	src/game/tremulous.h	604;"	d
ARRAY_LEN	src/qcommon/q_shared.h	203;"	d
ARROW	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
ART_FX_BASE	src/ui/ui_shared.h	85;"	d
ART_FX_BLUE	src/ui/ui_shared.h	86;"	d
ART_FX_CYAN	src/ui/ui_shared.h	87;"	d
ART_FX_GREEN	src/ui/ui_shared.h	88;"	d
ART_FX_RED	src/ui/ui_shared.h	89;"	d
ART_FX_TEAL	src/ui/ui_shared.h	90;"	d
ART_FX_WHITE	src/ui/ui_shared.h	91;"	d
ART_FX_YELLOW	src/ui/ui_shared.h	92;"	d
ASAND	src/tools/lcc/cpp/cpp.h	/^		ASRSH, ASOR, ASAND, ELLIPS,$/;"	e	enum:toktype
ASCIRC	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
ASG1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
ASGN	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
ASI_REG	src/qcommon/vm_sparc.h	75;"	d
ASLSH	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
ASM	src/tools/asm/q3asm.c	/^ASM(ADDRESS)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(ADDRF)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(ADDRL)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(ALIGN)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(ARG)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(BSS)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(BYTE)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(CALL)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(CODE)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(DATA)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(ENDPROC)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(EQU)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(EXPORT)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(FILE)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(IMPORT)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(LABEL)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(LINE)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(LIT)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(POP)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(PROC)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(RET)$/;"	f
ASM	src/tools/asm/q3asm.c	/^ASM(SKIP)$/;"	f
ASM	src/tools/asm/q3asm.c	1263;"	d	file:
ASM	src/tools/asm/q3asm.c	1264;"	d	file:
ASM	src/tools/asm/q3asm.c	822;"	d	file:
ASMDIR	GNUmakefile	/^ASMDIR=$(MOUNT_DIR)\/asm$/;"	m
ASMINUS	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
ASM_ERROR_OPC	src/qcommon/vm_powerpc_asm.c	51;"	d	file:
ASOR	src/tools/lcc/cpp/cpp.h	/^		ASRSH, ASOR, ASAND, ELLIPS,$/;"	e	enum:toktype
ASPAWN_BP	src/game/tremulous.h	242;"	d
ASPAWN_BT	src/game/tremulous.h	243;"	d
ASPAWN_CREEPSIZE	src/game/tremulous.h	248;"	d
ASPAWN_HEALTH	src/game/tremulous.h	244;"	d
ASPAWN_REGEN	src/game/tremulous.h	245;"	d
ASPAWN_SPLASHDAMAGE	src/game/tremulous.h	246;"	d
ASPAWN_SPLASHRADIUS	src/game/tremulous.h	247;"	d
ASPAWN_VALUE	src/game/tremulous.h	249;"	d
ASPCT	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
ASPECT_NONE	src/ui/menudef.h	26;"	d
ASPLUS	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
ASRSH	src/tools/lcc/cpp/cpp.h	/^		ASRSH, ASOR, ASAND, ELLIPS,$/;"	e	enum:toktype
ASSERT_SZLEAF_OK	src/server/sqlite3.c	176851;"	d	file:
ASSET_GRADIENTBAR	src/ui/ui_shared.h	94;"	d
ASSET_SCROLLBAR	src/ui/ui_shared.h	95;"	d
ASSET_SCROLLBAR_ARROWDOWN	src/ui/ui_shared.h	96;"	d
ASSET_SCROLLBAR_ARROWLEFT	src/ui/ui_shared.h	98;"	d
ASSET_SCROLLBAR_ARROWRIGHT	src/ui/ui_shared.h	99;"	d
ASSET_SCROLLBAR_ARROWUP	src/ui/ui_shared.h	97;"	d
ASSET_SCROLL_THUMB	src/ui/ui_shared.h	100;"	d
ASSET_SLIDER_BAR	src/ui/ui_shared.h	101;"	d
ASSET_SLIDER_THUMB	src/ui/ui_shared.h	102;"	d
ASSLASH	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
ASSTAR	src/tools/lcc/cpp/cpp.h	/^		ASPLUS, ASMINUS, ASSTAR, ASSLASH, ASPCT, ASCIRC, ASLSH,$/;"	e	enum:toktype
AS_FAVORITES	src/qcommon/q_shared.h	1503;"	d
AS_GLOBAL	src/qcommon/q_shared.h	1500;"	d
AS_GLOBAL	src/ui/ui_main.c	37;"	d	file:
AS_GLOBAL	src/ui/ui_main.c	39;"	d	file:
AS_LOCAL	src/qcommon/q_shared.h	1502;"	d
AS_LOCAL	src/ui/ui_main.c	38;"	d	file:
AS_LOCAL	src/ui/ui_main.c	40;"	d	file:
AS_MPLAYER	src/qcommon/q_shared.h	1501;"	d
AS_OVER_RT3	src/game/g_cmds.c	1957;"	d	file:
ASpawn_Think	src/game/g_buildable.c	/^void ASpawn_Think( gentity_t *self )$/;"	f
AT1_MASK	src/qcommon/vm_powerpc_asm.c	584;"	d	file:
AT2_MASK	src/qcommon/vm_powerpc_asm.c	585;"	d	file:
ATTACKER_HEAD_TIME	src/cgame/cg_local.h	56;"	d
ATTRIBUTE_UNUSED	src/qcommon/vm_powerpc_asm.c	227;"	d	file:
ATTR_BITS	src/renderergl2/tr_local.h	/^	ATTR_BITS =	ATTR_POSITION |$/;"	e	enum:__anon32
ATTR_BONE_INDEXES	src/renderergl2/tr_local.h	/^	ATTR_BONE_INDEXES =   1 << ATTR_INDEX_BONE_INDEXES,$/;"	e	enum:__anon32
ATTR_BONE_WEIGHTS	src/renderergl2/tr_local.h	/^	ATTR_BONE_WEIGHTS =   1 << ATTR_INDEX_BONE_WEIGHTS,$/;"	e	enum:__anon32
ATTR_COLOR	src/renderergl2/tr_local.h	/^	ATTR_COLOR =          1 << ATTR_INDEX_COLOR,$/;"	e	enum:__anon32
ATTR_DEFAULT	src/renderergl2/tr_local.h	/^	ATTR_DEFAULT = ATTR_POSITION,$/;"	e	enum:__anon32
ATTR_INDEX_BONE_INDEXES	src/renderergl2/tr_local.h	/^	ATTR_INDEX_BONE_INDEXES   = 8,$/;"	e	enum:__anon31
ATTR_INDEX_BONE_WEIGHTS	src/renderergl2/tr_local.h	/^	ATTR_INDEX_BONE_WEIGHTS   = 9,$/;"	e	enum:__anon31
ATTR_INDEX_COLOR	src/renderergl2/tr_local.h	/^	ATTR_INDEX_COLOR          = 5,$/;"	e	enum:__anon31
ATTR_INDEX_COUNT	src/renderergl2/tr_local.h	/^	ATTR_INDEX_COUNT          = 13$/;"	e	enum:__anon31
ATTR_INDEX_LIGHTCOORD	src/renderergl2/tr_local.h	/^	ATTR_INDEX_LIGHTCOORD     = 2,$/;"	e	enum:__anon31
ATTR_INDEX_LIGHTDIRECTION	src/renderergl2/tr_local.h	/^	ATTR_INDEX_LIGHTDIRECTION = 7,$/;"	e	enum:__anon31
ATTR_INDEX_NORMAL	src/renderergl2/tr_local.h	/^	ATTR_INDEX_NORMAL         = 4,$/;"	e	enum:__anon31
ATTR_INDEX_NORMAL2	src/renderergl2/tr_local.h	/^	ATTR_INDEX_NORMAL2        = 12,$/;"	e	enum:__anon31
ATTR_INDEX_PAINTCOLOR	src/renderergl2/tr_local.h	/^	ATTR_INDEX_PAINTCOLOR     = 6,$/;"	e	enum:__anon31
ATTR_INDEX_POSITION	src/renderergl2/tr_local.h	/^	ATTR_INDEX_POSITION       = 0,$/;"	e	enum:__anon31
ATTR_INDEX_POSITION2	src/renderergl2/tr_local.h	/^	ATTR_INDEX_POSITION2      = 10,$/;"	e	enum:__anon31
ATTR_INDEX_TANGENT	src/renderergl2/tr_local.h	/^	ATTR_INDEX_TANGENT        = 3,$/;"	e	enum:__anon31
ATTR_INDEX_TANGENT2	src/renderergl2/tr_local.h	/^	ATTR_INDEX_TANGENT2       = 11,$/;"	e	enum:__anon31
ATTR_INDEX_TEXCOORD	src/renderergl2/tr_local.h	/^	ATTR_INDEX_TEXCOORD       = 1,$/;"	e	enum:__anon31
ATTR_LIGHTCOORD	src/renderergl2/tr_local.h	/^	ATTR_LIGHTCOORD =     1 << ATTR_INDEX_LIGHTCOORD,$/;"	e	enum:__anon32
ATTR_LIGHTDIRECTION	src/renderergl2/tr_local.h	/^	ATTR_LIGHTDIRECTION = 1 << ATTR_INDEX_LIGHTDIRECTION,$/;"	e	enum:__anon32
ATTR_NORMAL	src/renderergl2/tr_local.h	/^	ATTR_NORMAL =         1 << ATTR_INDEX_NORMAL,$/;"	e	enum:__anon32
ATTR_NORMAL2	src/renderergl2/tr_local.h	/^	ATTR_NORMAL2 =        1 << ATTR_INDEX_NORMAL2,$/;"	e	enum:__anon32
ATTR_PAINTCOLOR	src/renderergl2/tr_local.h	/^	ATTR_PAINTCOLOR =     1 << ATTR_INDEX_PAINTCOLOR,$/;"	e	enum:__anon32
ATTR_POSITION	src/renderergl2/tr_local.h	/^	ATTR_POSITION =       1 << ATTR_INDEX_POSITION,$/;"	e	enum:__anon32
ATTR_POSITION2	src/renderergl2/tr_local.h	/^	ATTR_POSITION2 =      1 << ATTR_INDEX_POSITION2,$/;"	e	enum:__anon32
ATTR_TANGENT	src/renderergl2/tr_local.h	/^	ATTR_TANGENT =        1 << ATTR_INDEX_TANGENT,$/;"	e	enum:__anon32
ATTR_TANGENT2	src/renderergl2/tr_local.h	/^	ATTR_TANGENT2 =       1 << ATTR_INDEX_TANGENT2,$/;"	e	enum:__anon32
ATTR_TEXCOORD	src/renderergl2/tr_local.h	/^	ATTR_TEXCOORD =       1 << ATTR_INDEX_TEXCOORD,$/;"	e	enum:__anon32
AT_CENT	src/cgame/cg_local.h	/^  AT_CENT,$/;"	e	enum:__anon236
AT_PARTICLE	src/cgame/cg_local.h	/^  AT_PARTICLE$/;"	e	enum:__anon236
AT_STATIC	src/cgame/cg_local.h	/^  AT_STATIC,$/;"	e	enum:__anon236
AT_TAG	src/cgame/cg_local.h	/^  AT_TAG,$/;"	e	enum:__anon236
ATrapper_CheckTarget	src/game/g_buildable.c	/^static qboolean ATrapper_CheckTarget( gentity_t *self, gentity_t *target, int range )$/;"	f	file:
ATrapper_FindEnemy	src/game/g_buildable.c	/^static void ATrapper_FindEnemy( gentity_t *ent, int range )$/;"	f	file:
ATrapper_FireOnEnemy	src/game/g_buildable.c	/^static void ATrapper_FireOnEnemy( gentity_t *self, int firespeed )$/;"	f	file:
ATrapper_Think	src/game/g_buildable.c	/^void ATrapper_Think( gentity_t *self )$/;"	f
AUTHORIZE_TIMEOUT	src/server/server.h	217;"	d
AVG_FALL_DISTANCE	src/game/tremulous.h	666;"	d
AVI_LINE_PADDING	src/qcommon/qcommon.h	1016;"	d
AVM	src/game/tremulous.h	154;"	d
A_MASK	src/qcommon/vm_powerpc_asm.c	558;"	d	file:
AddAdditiveLightToScene	src/renderercommon/tr_public.h	/^	void	(*AddAdditiveLightToScene)( const vec3_t org, float intensity, float r, float g, float b );$/;"	m	struct:__anon108
AddLightToScene	src/renderercommon/tr_public.h	/^	void	(*AddLightToScene)( const vec3_t org, float intensity, float r, float g, float b );$/;"	m	struct:__anon108
AddLoopingSound	src/client/snd_local.h	/^	void (*AddLoopingSound)( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx );$/;"	m	struct:__anon96
AddPointToBounds	src/qcommon/q_math.c	/^void AddPointToBounds( const vec3_t v, vec3_t mins, vec3_t maxs ) {$/;"	f
AddPolyToScene	src/renderercommon/tr_public.h	/^	void	(*AddPolyToScene)( qhandle_t hShader , int numVerts, const polyVert_t *verts, int num );$/;"	m	struct:__anon108
AddRealLoopingSound	src/client/snd_local.h	/^	void (*AddRealLoopingSound)( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx );$/;"	m	struct:__anon96
AddRefEntityToScene	src/renderercommon/tr_public.h	/^	void	(*AddRefEntityToScene)( const refEntity_t *re );$/;"	m	struct:__anon108
AddRemap	src/game/g_utils.c	/^void AddRemap( const char *oldShader, const char *newShader, float timeOffset )$/;"	f
AddScore	src/game/g_combat.c	/^void AddScore( gentity_t *ent, int score )$/;"	f
AddSkyPolygon	src/renderergl1/tr_sky.c	/^static void AddSkyPolygon (int nump, vec3_t vecs) $/;"	f	file:
AddSkyPolygon	src/renderergl2/tr_sky.c	/^static void AddSkyPolygon (int nump, vec3_t vecs) $/;"	f	file:
AddWindingToConvexHull	src/qcommon/cm_polylib.c	/^void	AddWindingToConvexHull( winding_t *w, winding_t **hull, vec3_t normal ) {$/;"	f
Address	src/tools/lcc/src/c.h	/^	enum { Blockbeg, Blockend, Local, Address, Defpoint,$/;"	e	enum:code::__anon290
AdjustTree	src/server/sqlite3.c	/^static int AdjustTree($/;"	f	file:
AdminFlagListEntry_t	src/game/g_admin.c	/^} AdminFlagListEntry_t;$/;"	t	typeref:struct:__anon374	file:
Aflag	src/tools/lcc/src/main.c	/^int Aflag;		\/* >= 0 if -A specified *\/$/;"	v
AggInfo	src/server/sqlite3.c	/^struct AggInfo {$/;"	s	file:
AggInfo	src/server/sqlite3.c	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo	file:
AggInfo_col	src/server/sqlite3.c	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo	file:
AggInfo_func	src/server/sqlite3.c	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo	file:
AimAtTarget	src/game/g_trigger.c	/^void AimAtTarget( gentity_t *self )$/;"	f
AllocOperator	src/qcommon/parse.c	1891;"	d	file:
AllocValue	src/qcommon/parse.c	1881;"	d	file:
AllocWinding	src/qcommon/cm_polylib.c	/^winding_t	*AllocWinding (int points)$/;"	f
AngleDelta	src/qcommon/q_math.c	/^float AngleDelta ( float angle1, float angle2 ) {$/;"	f
AngleMod	src/qcommon/q_math.c	/^float	AngleMod(float a) {$/;"	f
AngleNormalize180	src/qcommon/q_math.c	/^float AngleNormalize180 ( float angle ) {$/;"	f
AngleNormalize360	src/qcommon/q_math.c	/^float AngleNormalize360 ( float angle ) {$/;"	f
AngleSubtract	src/qcommon/q_math.c	/^float	AngleSubtract( float a1, float a2 ) {$/;"	f
AngleVectors	src/qcommon/q_math.c	/^void AngleVectors( const vec3_t angles, vec3_t forward, vec3_t right, vec3_t up) {$/;"	f
AnglesSubtract	src/qcommon/q_math.c	/^void AnglesSubtract( vec3_t v1, vec3_t v2, vec3_t v3 ) {$/;"	f
AnglesToAxis	src/qcommon/q_math.c	/^void AnglesToAxis( const vec3_t angles, vec3_t axis[3] ) {$/;"	f
Apply	src/tools/lcc/src/c.h	/^typedef void (*Apply)(void *, void *, void *);$/;"	t
ApplyCostMultiplier	src/server/sqlite3.c	125707;"	d	file:
ApplyCostMultiplier	src/server/sqlite3.c	125709;"	d	file:
ArraySize	src/server/sqlite3.c	10226;"	d	file:
ArraySize	src/server/sqlite3.c	169280;"	d	file:
AsciiTokenizer	src/server/sqlite3.c	/^struct AsciiTokenizer {$/;"	s	file:
AsciiTokenizer	src/server/sqlite3.c	/^typedef struct AsciiTokenizer AsciiTokenizer;$/;"	t	typeref:struct:AsciiTokenizer	file:
AsmCall	src/qcommon/vm_powerpc.c	/^	long int (* AsmCall)( int, int );$/;"	m	struct:VM_Data	file:
AsmCall	src/qcommon/vm_sparc.c	/^	int (*AsmCall)(int, int);$/;"	m	struct:VM_Data	file:
Assemble	src/tools/asm/q3asm.c	/^static void Assemble( void ) {$/;"	f	file:
AssembleLine	src/tools/asm/q3asm.c	/^static void AssembleLine( void ) {$/;"	f	file:
AssetCache	src/ui/ui_main.c	/^void AssetCache( void )$/;"	f
Asset_Parse	src/ui/ui_main.c	/^qboolean Asset_Parse( int handle )$/;"	f
Assets	src/ui/ui_shared.h	/^  cachedAssets_t Assets;$/;"	m	struct:__anon506
AttachKey	src/server/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	s	file:
AuthContext	src/server/sqlite3.c	/^struct AuthContext {$/;"	s	file:
AuthContext	src/server/sqlite3.c	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext	file:
AutoincInfo	src/server/sqlite3.c	/^struct AutoincInfo {$/;"	s	file:
AutoincInfo	src/server/sqlite3.c	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo	file:
Autosprite2Deform	src/renderergl1/tr_shade_calc.c	/^static void Autosprite2Deform( void ) {$/;"	f	file:
Autosprite2Deform	src/renderergl2/tr_shade_calc.c	/^static void Autosprite2Deform( void ) {$/;"	f	file:
AutospriteDeform	src/renderergl1/tr_shade_calc.c	/^static void AutospriteDeform( void ) {$/;"	f	file:
AutospriteDeform	src/renderergl2/tr_shade_calc.c	/^static void AutospriteDeform( void ) {$/;"	f	file:
AuxData	src/server/sqlite3.c	/^struct AuxData {$/;"	s	file:
AuxData	src/server/sqlite3.c	/^typedef struct AuxData AuxData;$/;"	t	typeref:struct:AuxData	file:
AvailableCaptureSamples	src/client/snd_local.h	/^	int (*AvailableCaptureSamples)( void );$/;"	m	struct:__anon96
AxisClear	src/qcommon/q_math.c	/^void AxisClear( vec3_t axis[3] ) {$/;"	f
AxisCopy	src/qcommon/q_math.c	/^void AxisCopy( vec3_t in[3], vec3_t out[3] ) {$/;"	f
AxisToAngles	src/qcommon/q_math.c	/^void AxisToAngles( vec3_t axis[3], vec3_t angles ) {$/;"	f
B	src/qcommon/md4.c	/^	uint32_t A, B, C, D;$/;"	m	struct:mdfour	file:
B	src/qcommon/vm_powerpc_asm.c	573;"	d	file:
B	src/tools/lcc/src/c.h	/^	B=STRUCT$/;"	e	enum:__anon286
BA	src/qcommon/vm_powerpc_asm.c	250;"	d	file:
BA	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BANIM_ATTACK1	src/game/bg_public.h	/^  BANIM_ATTACK1,$/;"	e	enum:__anon343
BANIM_ATTACK2	src/game/bg_public.h	/^  BANIM_ATTACK2,$/;"	e	enum:__anon343
BANIM_CONSTRUCT1	src/game/bg_public.h	/^  BANIM_CONSTRUCT1,$/;"	e	enum:__anon343
BANIM_CONSTRUCT2	src/game/bg_public.h	/^  BANIM_CONSTRUCT2,$/;"	e	enum:__anon343
BANIM_DESTROY1	src/game/bg_public.h	/^  BANIM_DESTROY1,$/;"	e	enum:__anon343
BANIM_DESTROY2	src/game/bg_public.h	/^  BANIM_DESTROY2,$/;"	e	enum:__anon343
BANIM_DESTROYED	src/game/bg_public.h	/^  BANIM_DESTROYED,$/;"	e	enum:__anon343
BANIM_IDLE1	src/game/bg_public.h	/^  BANIM_IDLE1,$/;"	e	enum:__anon343
BANIM_IDLE2	src/game/bg_public.h	/^  BANIM_IDLE2,$/;"	e	enum:__anon343
BANIM_IDLE3	src/game/bg_public.h	/^  BANIM_IDLE3,$/;"	e	enum:__anon343
BANIM_NONE	src/game/bg_public.h	/^  BANIM_NONE,$/;"	e	enum:__anon343
BANIM_PAIN1	src/game/bg_public.h	/^  BANIM_PAIN1,$/;"	e	enum:__anon343
BANIM_PAIN2	src/game/bg_public.h	/^  BANIM_PAIN2,$/;"	e	enum:__anon343
BANIM_SPAWN1	src/game/bg_public.h	/^  BANIM_SPAWN1,$/;"	e	enum:__anon343
BANIM_SPAWN2	src/game/bg_public.h	/^  BANIM_SPAWN2,$/;"	e	enum:__anon343
BARRICADE_BP	src/game/tremulous.h	251;"	d
BARRICADE_BT	src/game/tremulous.h	252;"	d
BARRICADE_CREEPSIZE	src/game/tremulous.h	257;"	d
BARRICADE_HEALTH	src/game/tremulous.h	253;"	d
BARRICADE_REGEN	src/game/tremulous.h	254;"	d
BARRICADE_SHRINKPROP	src/game/tremulous.h	258;"	d
BARRICADE_SHRINKTIMEOUT	src/game/tremulous.h	259;"	d
BARRICADE_SPLASHDAMAGE	src/game/tremulous.h	255;"	d
BARRICADE_SPLASHRADIUS	src/game/tremulous.h	256;"	d
BARRICADE_VALUE	src/game/tremulous.h	260;"	d
BASEDIRNAME	src/tools/asm/cmdlib.c	38;"	d	file:
BASEGAME	GNUmakefile	/^BASEGAME=gpp$/;"	m
BASEGAME	src/qcommon/qcommon.h	592;"	d
BASEGAME_CFLAGS	GNUmakefile	/^BASEGAME_CFLAGS=$/;"	m
BASE_CFLAGS	GNUmakefile	/^  BASE_CFLAGS = -Wall -Wimplicit -Wstrict-prototypes -mmacosx-version-min=10.5 \\$/;"	m
BASE_CFLAGS	GNUmakefile	/^  BASE_CFLAGS = -Wall -fno-strict-aliasing -DUSE_ICON$/;"	m
BASE_CFLAGS	GNUmakefile	/^  BASE_CFLAGS = -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes \\$/;"	m
BASE_CFLAGS	GNUmakefile	/^  BASE_CFLAGS = -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes$/;"	m
BASE_CFLAGS	GNUmakefile	/^  BASE_CFLAGS=$/;"	m
BASE_CFLAGS	GNUmakefile	/^  BASE_CFLAGS=-Dstricmp=strcasecmp -Xcpluscomm -woff 1185 \\$/;"	m
BASE_FOV_Y	src/cgame/cg_view.c	843;"	d	file:
BATTPACK_MODIFIER	src/game/tremulous.h	505;"	d
BATTPACK_PRICE	src/game/tremulous.h	504;"	d
BA_A_ACIDTUBE	src/game/bg_public.h	/^  BA_A_ACIDTUBE,$/;"	e	enum:__anon337
BA_A_BARRICADE	src/game/bg_public.h	/^  BA_A_BARRICADE,$/;"	e	enum:__anon337
BA_A_BOOSTER	src/game/bg_public.h	/^  BA_A_BOOSTER,$/;"	e	enum:__anon337
BA_A_HIVE	src/game/bg_public.h	/^  BA_A_HIVE,$/;"	e	enum:__anon337
BA_A_HOVEL	src/game/bg_public.h	/^  BA_A_HOVEL,$/;"	e	enum:__anon337
BA_A_OVERMIND	src/game/bg_public.h	/^  BA_A_OVERMIND,$/;"	e	enum:__anon337
BA_A_SPAWN	src/game/bg_public.h	/^  BA_A_SPAWN,$/;"	e	enum:__anon337
BA_A_TRAPPER	src/game/bg_public.h	/^  BA_A_TRAPPER,$/;"	e	enum:__anon337
BA_H_ARMOURY	src/game/bg_public.h	/^  BA_H_ARMOURY,$/;"	e	enum:__anon337
BA_H_DCC	src/game/bg_public.h	/^  BA_H_DCC,$/;"	e	enum:__anon337
BA_H_MEDISTAT	src/game/bg_public.h	/^  BA_H_MEDISTAT,$/;"	e	enum:__anon337
BA_H_MGTURRET	src/game/bg_public.h	/^  BA_H_MGTURRET,$/;"	e	enum:__anon337
BA_H_REACTOR	src/game/bg_public.h	/^  BA_H_REACTOR,$/;"	e	enum:__anon337
BA_H_REPEATER	src/game/bg_public.h	/^  BA_H_REPEATER,$/;"	e	enum:__anon337
BA_H_SPAWN	src/game/bg_public.h	/^  BA_H_SPAWN,$/;"	e	enum:__anon337
BA_H_TESLAGEN	src/game/bg_public.h	/^  BA_H_TESLAGEN,$/;"	e	enum:__anon337
BA_NONE	src/game/bg_public.h	/^  BA_NONE,$/;"	e	enum:__anon337
BA_NUM_BUILDABLES	src/game/bg_public.h	/^  BA_NUM_BUILDABLES$/;"	e	enum:__anon337
BBO	src/qcommon/vm_powerpc_asm.c	577;"	d	file:
BBOAT2CB_MASK	src/qcommon/vm_powerpc_asm.c	598;"	d	file:
BBOATBI_MASK	src/qcommon/vm_powerpc_asm.c	602;"	d	file:
BBOATCB_MASK	src/qcommon/vm_powerpc_asm.c	597;"	d	file:
BBOAT_MASK	src/qcommon/vm_powerpc_asm.c	587;"	d	file:
BBOCB	src/qcommon/vm_powerpc_asm.c	591;"	d	file:
BBOCB_MASK	src/qcommon/vm_powerpc_asm.c	593;"	d	file:
BBOYBI_MASK	src/qcommon/vm_powerpc_asm.c	601;"	d	file:
BBOYCB_MASK	src/qcommon/vm_powerpc_asm.c	596;"	d	file:
BBOY_MASK	src/qcommon/vm_powerpc_asm.c	586;"	d	file:
BBO_MASK	src/qcommon/vm_powerpc_asm.c	578;"	d	file:
BB_MASK	src/qcommon/vm_powerpc_asm.c	789;"	d	file:
BCC	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BCS	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BD	GNUmakefile	/^BD=$(BUILD_DIR) # \/debug-$(PLATFORM)-$(ARCH)$/;"	m
BD	src/qcommon/vm_powerpc_asm.c	258;"	d	file:
BDM	src/qcommon/vm_powerpc_asm.c	263;"	d	file:
BD_DEBUG	src/master/Makefile	/^BD_DEBUG=debug-$(PLATFORM)-$(ARCH)$/;"	m
BD_RELEASE	src/master/Makefile	/^BD_RELEASE=release-$(PLATFORM)-$(ARCH)$/;"	m
BE	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BEGIN	src/tools/lcc/src/symbolic.c	23;"	d	file:
BF	src/qcommon/vm_powerpc_asm.c	268;"	d	file:
BFCC	src/qcommon/vm_sparc.c	93;"	d	file:
BF_AUTO	src/game/g_local.h	/^  BF_AUTO$/;"	e	enum:__anon314
BF_CONSTRUCT	src/game/g_local.h	/^  BF_CONSTRUCT,$/;"	e	enum:__anon314
BF_DECONSTRUCT	src/game/g_local.h	/^  BF_DECONSTRUCT,$/;"	e	enum:__anon314
BF_DESTROY	src/game/g_local.h	/^  BF_DESTROY,$/;"	e	enum:__anon314
BF_REPLACE	src/game/g_local.h	/^  BF_REPLACE,$/;"	e	enum:__anon314
BF_TEAMKILL	src/game/g_local.h	/^  BF_TEAMKILL,$/;"	e	enum:__anon314
BF_UNPOWER	src/game/g_local.h	/^  BF_UNPOWER,$/;"	e	enum:__anon314
BG	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BGE	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BGU	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BG_ActivateUpgrade	src/game/bg_misc.c	/^void BG_ActivateUpgrade( int item, int stats[ ] )$/;"	f
BG_AddPredictableEventToPlayerstate	src/game/bg_misc.c	/^void BG_AddPredictableEventToPlayerstate( int newEvent, int eventParm, playerState_t *ps )$/;"	f
BG_AddUpgradeToInventory	src/game/bg_misc.c	/^void BG_AddUpgradeToInventory( int item, int stats[ ] )$/;"	f
BG_AlienCanEvolve	src/game/bg_misc.c	/^qboolean BG_AlienCanEvolve( class_t class, int credits, int stage, int gameIsInWarmup )$/;"	f
BG_Alloc	src/game/bg_alloc.c	/^void *BG_Alloc( int size )$/;"	f
BG_Buildable	src/game/bg_misc.c	/^const buildableAttributes_t *BG_Buildable( buildable_t buildable )$/;"	f
BG_BuildableAllowedInStage	src/game/bg_misc.c	/^qboolean BG_BuildableAllowedInStage( buildable_t buildable,$/;"	f
BG_BuildableBoundingBox	src/game/bg_misc.c	/^void BG_BuildableBoundingBox( buildable_t buildable,$/;"	f
BG_BuildableByEntityName	src/game/bg_misc.c	/^const buildableAttributes_t *BG_BuildableByEntityName( const char *name )$/;"	f
BG_BuildableByName	src/game/bg_misc.c	/^const buildableAttributes_t *BG_BuildableByName( const char *name )$/;"	f
BG_BuildableConfig	src/game/bg_misc.c	/^buildableConfig_t *BG_BuildableConfig( buildable_t buildable )$/;"	f
BG_BuildableIsAllowed	src/game/bg_misc.c	/^qboolean BG_BuildableIsAllowed( buildable_t buildable )$/;"	f
BG_Class	src/game/bg_misc.c	/^const classAttributes_t *BG_Class( class_t class )$/;"	f
BG_ClassAllowedInStage	src/game/bg_misc.c	/^qboolean BG_ClassAllowedInStage( class_t class,$/;"	f
BG_ClassBoundingBox	src/game/bg_misc.c	/^void BG_ClassBoundingBox( class_t class,$/;"	f
BG_ClassByName	src/game/bg_misc.c	/^const classAttributes_t *BG_ClassByName( const char *name )$/;"	f
BG_ClassCanEvolveFromTo	src/game/bg_misc.c	/^int BG_ClassCanEvolveFromTo( class_t fclass,$/;"	f
BG_ClassConfig	src/game/bg_misc.c	/^classConfig_t *BG_ClassConfig( class_t class )$/;"	f
BG_ClassHasAbility	src/game/bg_misc.c	/^qboolean BG_ClassHasAbility( class_t class, int ability )$/;"	f
BG_ClassIsAllowed	src/game/bg_misc.c	/^qboolean BG_ClassIsAllowed( class_t class )$/;"	f
BG_DeactivateUpgrade	src/game/bg_misc.c	/^void BG_DeactivateUpgrade( int item, int stats[ ] )$/;"	f
BG_DefragmentMemory	src/game/bg_alloc.c	/^void BG_DefragmentMemory( void )$/;"	f
BG_EvaluateTrajectory	src/game/bg_misc.c	/^void BG_EvaluateTrajectory( const trajectory_t *tr, int atTime, vec3_t result )$/;"	f
BG_EvaluateTrajectoryDelta	src/game/bg_misc.c	/^void BG_EvaluateTrajectoryDelta( const trajectory_t *tr, int atTime, vec3_t result )$/;"	f
BG_EventName	src/game/bg_misc.c	/^const char *BG_EventName( int num )$/;"	f
BG_Free	src/game/bg_alloc.c	/^void BG_Free( void *ptr )$/;"	f
BG_GetClientNormal	src/game/bg_misc.c	/^void BG_GetClientNormal( const playerState_t *ps, vec3_t normal )$/;"	f
BG_GetClientViewOrigin	src/game/bg_misc.c	/^void BG_GetClientViewOrigin( const playerState_t *ps, vec3_t viewOrigin )$/;"	f
BG_GetLCannonPrimaryFireSpeed	src/game/bg_misc.c	/^int BG_GetLCannonPrimaryFireSpeed( int charge )$/;"	f
BG_GetPlayerWeapon	src/game/bg_misc.c	/^weapon_t BG_GetPlayerWeapon( playerState_t *ps )$/;"	f
BG_GetValueOfPlayer	src/game/bg_misc.c	/^int BG_GetValueOfPlayer( playerState_t *ps )$/;"	f
BG_InitAllowedGameElements	src/game/bg_misc.c	/^void BG_InitAllowedGameElements( void )$/;"	f
BG_InitBuildableConfigs	src/game/bg_misc.c	/^void BG_InitBuildableConfigs( void )$/;"	f
BG_InitClassConfigs	src/game/bg_misc.c	/^void BG_InitClassConfigs( void )$/;"	f
BG_InitMemory	src/game/bg_alloc.c	/^void BG_InitMemory( void )$/;"	f
BG_InventoryContainsUpgrade	src/game/bg_misc.c	/^qboolean BG_InventoryContainsUpgrade( int item, int stats[ ] )$/;"	f
BG_InventoryContainsWeapon	src/game/bg_misc.c	/^qboolean BG_InventoryContainsWeapon( int weapon, int stats[ ] )$/;"	f
BG_LIB_H	src/game/bg_lib.h	29;"	d
BG_LoadEmoticons	src/game/bg_misc.c	/^int BG_LoadEmoticons( emoticon_t *emoticons, int num )$/;"	f
BG_MemoryInfo	src/game/bg_alloc.c	/^void BG_MemoryInfo( void )$/;"	f
BG_PackEntityNumbers	src/game/bg_misc.c	/^void BG_PackEntityNumbers( entityState_t *es, const int *entityNums, int count )$/;"	f
BG_ParseBuildableFile	src/game/bg_misc.c	/^static qboolean BG_ParseBuildableFile( const char *filename, buildableConfig_t *bc )$/;"	f	file:
BG_ParseCSVBuildableList	src/game/bg_misc.c	/^void BG_ParseCSVBuildableList( const char *string, buildable_t *buildables, int buildablesSize )$/;"	f
BG_ParseCSVClassList	src/game/bg_misc.c	/^void BG_ParseCSVClassList( const char *string, class_t *classes, int classesSize )$/;"	f
BG_ParseCSVEquipmentList	src/game/bg_misc.c	/^void BG_ParseCSVEquipmentList( const char *string, weapon_t *weapons, int weaponsSize,$/;"	f
BG_ParseClassFile	src/game/bg_misc.c	/^static qboolean BG_ParseClassFile( const char *filename, classConfig_t *cc )$/;"	f	file:
BG_PlayerCanChangeWeapon	src/game/bg_misc.c	/^qboolean BG_PlayerCanChangeWeapon( playerState_t *ps )$/;"	f
BG_PlayerPoisonCloudTime	src/game/bg_misc.c	/^int BG_PlayerPoisonCloudTime( playerState_t *ps )$/;"	f
BG_PlayerStateToEntityState	src/game/bg_misc.c	/^void BG_PlayerStateToEntityState( playerState_t *ps, entityState_t *s, qboolean snap )$/;"	f
BG_PlayerStateToEntityStateExtraPolate	src/game/bg_misc.c	/^void BG_PlayerStateToEntityStateExtraPolate( playerState_t *ps, entityState_t *s, int time, qboolean snap )$/;"	f
BG_PositionBuildableRelativeToPlayer	src/game/bg_misc.c	/^void BG_PositionBuildableRelativeToPlayer( const playerState_t *ps,$/;"	f
BG_PrintVoices	src/game/bg_voice.c	/^void BG_PrintVoices( voice_t *voices, int debugLevel )$/;"	f
BG_RemoveUpgradeFromInventory	src/game/bg_misc.c	/^void BG_RemoveUpgradeFromInventory( int item, int stats[ ] )$/;"	f
BG_RotateAxis	src/game/bg_misc.c	/^qboolean BG_RotateAxis( vec3_t surfNormal, vec3_t inAxis[ 3 ],$/;"	f
BG_SlotsForInventory	src/game/bg_misc.c	/^int BG_SlotsForInventory( int stats[ ] )$/;"	f
BG_Team	src/game/bg_misc.c	/^const teamAttributes_t *BG_Team( team_t team )$/;"	f
BG_TeamName	src/game/bg_misc.c	/^char *BG_TeamName( team_t team )$/;"	f
BG_UnpackEntityNumbers	src/game/bg_misc.c	/^int BG_UnpackEntityNumbers( entityState_t *es, int *entityNums, int count )$/;"	f
BG_Upgrade	src/game/bg_misc.c	/^const upgradeAttributes_t *BG_Upgrade( upgrade_t upgrade )$/;"	f
BG_UpgradeAllowedInStage	src/game/bg_misc.c	/^qboolean BG_UpgradeAllowedInStage( upgrade_t upgrade, stage_t stage,$/;"	f
BG_UpgradeByName	src/game/bg_misc.c	/^const upgradeAttributes_t *BG_UpgradeByName( const char *name )$/;"	f
BG_UpgradeIsActive	src/game/bg_misc.c	/^qboolean BG_UpgradeIsActive( int item, int stats[ ] )$/;"	f
BG_UpgradeIsAllowed	src/game/bg_misc.c	/^qboolean BG_UpgradeIsAllowed( upgrade_t upgrade )$/;"	f
BG_VoiceByName	src/game/bg_voice.c	/^voice_t *BG_VoiceByName( voice_t *head, char *name )$/;"	f
BG_VoiceCmdByNum	src/game/bg_voice.c	/^voiceCmd_t *BG_VoiceCmdByNum( voiceCmd_t *head, int num )$/;"	f
BG_VoiceCmdFind	src/game/bg_voice.c	/^voiceCmd_t *BG_VoiceCmdFind( voiceCmd_t *head, char *name, int *cmdNum )$/;"	f
BG_VoiceInit	src/game/bg_voice.c	/^voice_t *BG_VoiceInit( void )$/;"	f
BG_VoiceList	src/game/bg_voice.c	/^static voice_t *BG_VoiceList( void )$/;"	f	file:
BG_VoiceParse	src/game/bg_voice.c	/^static voiceCmd_t *BG_VoiceParse( char *name )$/;"	f	file:
BG_VoiceParseCommand	src/game/bg_voice.c	/^static voiceTrack_t *BG_VoiceParseCommand( int handle )$/;"	f	file:
BG_VoiceParseError	src/game/bg_voice.c	/^static void BG_VoiceParseError( fileHandle_t handle, char *err )$/;"	f	file:
BG_VoiceParseTrack	src/game/bg_voice.c	/^static qboolean BG_VoiceParseTrack( int handle, voiceTrack_t *voiceTrack )$/;"	f	file:
BG_VoiceTrackByNum	src/game/bg_voice.c	/^voiceTrack_t *BG_VoiceTrackByNum( voiceTrack_t *head, int num )$/;"	f
BG_VoiceTrackFind	src/game/bg_voice.c	/^voiceTrack_t *BG_VoiceTrackFind( voiceTrack_t *head, team_t team,$/;"	f
BG_Weapon	src/game/bg_misc.c	/^const weaponAttributes_t *BG_Weapon( weapon_t weapon )$/;"	f
BG_WeaponAllowedInStage	src/game/bg_misc.c	/^qboolean BG_WeaponAllowedInStage( weapon_t weapon, stage_t stage,$/;"	f
BG_WeaponByName	src/game/bg_misc.c	/^const weaponAttributes_t *BG_WeaponByName( const char *name )$/;"	f
BG_WeaponIsAllowed	src/game/bg_misc.c	/^qboolean BG_WeaponIsAllowed( weapon_t weapon )$/;"	f
BG_WeaponIsFull	src/game/bg_misc.c	/^qboolean BG_WeaponIsFull( weapon_t weapon, int stats[ ], int ammo, int clips )$/;"	f
BI	src/qcommon/vm_powerpc_asm.c	252;"	d	file:
BICC	src/qcommon/vm_sparc.c	92;"	d	file:
BIGCHAR_HEIGHT	src/qcommon/q_shared.h	384;"	d
BIGCHAR_WIDTH	src/qcommon/q_shared.h	383;"	d
BIG_INFO_KEY	src/qcommon/q_shared.h	235;"	d
BIG_INFO_STRING	src/qcommon/q_shared.h	234;"	d
BIG_INFO_VALUE	src/qcommon/q_shared.h	236;"	d
BINDING_REFRESH_INTERVAL	src/cgame/cg_tutorial.c	698;"	d	file:
BINEXT	GNUmakefile	/^  BINEXT=.exe$/;"	m
BINEXT	src/master/Makefile	/^  BINEXT=$/;"	m
BINEXT	src/master/Makefile	/^  BINEXT=.exe$/;"	m
BINEXT	src/tools/lcc/etc/bytecode.c	10;"	d	file:
BINEXT	src/tools/lcc/etc/bytecode.c	8;"	d	file:
BITVEC_HASH	src/server/sqlite3.c	41055;"	d	file:
BITVEC_MXHASH	src/server/sqlite3.c	41050;"	d	file:
BITVEC_NBIT	src/server/sqlite3.c	41044;"	d	file:
BITVEC_NELEM	src/server/sqlite3.c	41042;"	d	file:
BITVEC_NINT	src/server/sqlite3.c	41047;"	d	file:
BITVEC_NPTR	src/server/sqlite3.c	41057;"	d	file:
BITVEC_SZ	src/server/sqlite3.c	41027;"	d	file:
BITVEC_SZELEM	src/server/sqlite3.c	41040;"	d	file:
BITVEC_TELEM	src/server/sqlite3.c	41038;"	d	file:
BITVEC_USIZE	src/server/sqlite3.c	41031;"	d	file:
BI_MASK	src/qcommon/vm_powerpc_asm.c	253;"	d	file:
BL	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BLANK	src/tools/lcc/src/lex.c	/^enum { BLANK=01,  NEWLINE=02, LETTER=04,$/;"	e	enum:__anon281	file:
BLASTER_DMG	src/game/tremulous.h	380;"	d
BLASTER_K_SCALE	src/game/tremulous.h	377;"	d
BLASTER_REPEAT	src/game/tremulous.h	376;"	d
BLASTER_SIZE	src/game/tremulous.h	381;"	d
BLASTER_SPEED	src/game/tremulous.h	379;"	d
BLASTER_SPREAD	src/game/tremulous.h	378;"	d
BLE	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BLEU	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BLINK_DIVISOR	src/qcommon/q_shared.h	297;"	d
BLIPX	src/cgame/cg_scanner.c	109;"	d	file:
BLIPX2	src/cgame/cg_scanner.c	166;"	d	file:
BLIPY	src/cgame/cg_scanner.c	110;"	d	file:
BLIPY2	src/cgame/cg_scanner.c	167;"	d	file:
BMPHeader_t	src/renderercommon/tr_image_bmp.c	/^} BMPHeader_t;$/;"	t	typeref:struct:__anon110	file:
BMS	src/server/sqlite3.c	13334;"	d	file:
BN	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BNE	src/qcommon/vm_sparc.c	/^	BA, BN, BNE, BE, BG, BLE, BGE, BL, BGU, BLEU, BCC, BCS,$/;"	e	enum:sparc_iname	file:
BNEG	src/qcommon/vm_sparc.c	/^	BPOS, BNEG, BVC, BVS,$/;"	e	enum:sparc_iname	file:
BO	src/qcommon/vm_powerpc_asm.c	280;"	d	file:
BODNZ	src/qcommon/vm_powerpc_asm.c	864;"	d	file:
BODNZF	src/qcommon/vm_powerpc_asm.c	846;"	d	file:
BODNZFP	src/qcommon/vm_powerpc_asm.c	847;"	d	file:
BODNZM4	src/qcommon/vm_powerpc_asm.c	868;"	d	file:
BODNZP	src/qcommon/vm_powerpc_asm.c	865;"	d	file:
BODNZP4	src/qcommon/vm_powerpc_asm.c	869;"	d	file:
BODNZT	src/qcommon/vm_powerpc_asm.c	850;"	d	file:
BODNZTP	src/qcommon/vm_powerpc_asm.c	851;"	d	file:
BODZ	src/qcommon/vm_powerpc_asm.c	866;"	d	file:
BODZF	src/qcommon/vm_powerpc_asm.c	848;"	d	file:
BODZFP	src/qcommon/vm_powerpc_asm.c	849;"	d	file:
BODZM4	src/qcommon/vm_powerpc_asm.c	870;"	d	file:
BODZP	src/qcommon/vm_powerpc_asm.c	867;"	d	file:
BODZP4	src/qcommon/vm_powerpc_asm.c	871;"	d	file:
BODZT	src/qcommon/vm_powerpc_asm.c	852;"	d	file:
BODZTP	src/qcommon/vm_powerpc_asm.c	853;"	d	file:
BOF	src/qcommon/vm_powerpc_asm.c	855;"	d	file:
BOFM4	src/qcommon/vm_powerpc_asm.c	857;"	d	file:
BOFP	src/qcommon/vm_powerpc_asm.c	856;"	d	file:
BOFP4	src/qcommon/vm_powerpc_asm.c	858;"	d	file:
BOOSTER_BP	src/game/tremulous.h	262;"	d
BOOSTER_BT	src/game/tremulous.h	263;"	d
BOOSTER_CREEPSIZE	src/game/tremulous.h	268;"	d
BOOSTER_HEALTH	src/game/tremulous.h	264;"	d
BOOSTER_REGEN	src/game/tremulous.h	265;"	d
BOOSTER_REGEN_MOD	src/game/tremulous.h	269;"	d
BOOSTER_SPLASHDAMAGE	src/game/tremulous.h	266;"	d
BOOSTER_SPLASHRADIUS	src/game/tremulous.h	267;"	d
BOOSTER_VALUE	src/game/tremulous.h	270;"	d
BOOST_TIME	src/game/tremulous.h	271;"	d
BOOST_WARN_TIME	src/game/tremulous.h	272;"	d
BOT	src/qcommon/vm_powerpc_asm.c	859;"	d	file:
BOTCFLAGS	GNUmakefile	/^  BOTCFLAGS=-O0$/;"	m
BOTH_DEAD1	src/game/bg_public.h	/^  BOTH_DEAD1,$/;"	e	enum:__anon341
BOTH_DEAD2	src/game/bg_public.h	/^  BOTH_DEAD2,$/;"	e	enum:__anon341
BOTH_DEAD3	src/game/bg_public.h	/^  BOTH_DEAD3,$/;"	e	enum:__anon341
BOTH_DEATH1	src/game/bg_public.h	/^  BOTH_DEATH1,$/;"	e	enum:__anon341
BOTH_DEATH2	src/game/bg_public.h	/^  BOTH_DEATH2,$/;"	e	enum:__anon341
BOTH_DEATH3	src/game/bg_public.h	/^  BOTH_DEATH3,$/;"	e	enum:__anon341
BOTM4	src/qcommon/vm_powerpc_asm.c	861;"	d	file:
BOTP	src/qcommon/vm_powerpc_asm.c	860;"	d	file:
BOTP4	src/qcommon/vm_powerpc_asm.c	862;"	d	file:
BOU	src/qcommon/vm_powerpc_asm.c	873;"	d	file:
BOX_BRUSHES	src/qcommon/cm_load.c	47;"	d	file:
BOX_LEAFS	src/qcommon/cm_load.c	49;"	d	file:
BOX_MODEL_HANDLE	src/qcommon/cm_local.h	29;"	d
BOX_PLANES	src/qcommon/cm_load.c	50;"	d	file:
BOX_SIDES	src/qcommon/cm_load.c	48;"	d	file:
BO_MASK	src/qcommon/vm_powerpc_asm.c	281;"	d	file:
BPOS	src/qcommon/vm_sparc.c	/^	BPOS, BNEG, BVC, BVS,$/;"	e	enum:sparc_iname	file:
BR	GNUmakefile	/^BR=$(BUILD_DIR) # \/release-$(PLATFORM)-$(ARCH)$/;"	m
BSPSurfaceCompare	src/renderergl2/tr_bsp.c	/^static int BSPSurfaceCompare(const void *a, const void *b)$/;"	f	file:
BSP_IDENT	src/qcommon/qfiles.h	314;"	d
BSP_VERSION	src/qcommon/qfiles.h	317;"	d
BSS	src/tools/lcc/src/c.h	/^enum { CODE=1, BSS, DATA, LIT };$/;"	e	enum:__anon288
BSSSEG	src/tools/asm/q3asm.c	/^	BSSSEG,		\/\/ 0 filled$/;"	e	enum:__anon266	file:
BSUIT_PCLOUD_PROTECTION	src/game/tremulous.h	518;"	d
BSUIT_POISON_PROTECTION	src/game/tremulous.h	517;"	d
BSUIT_PRICE	src/game/tremulous.h	516;"	d
BTALLOC_ANY	src/server/sqlite3.c	55850;"	d	file:
BTALLOC_EXACT	src/server/sqlite3.c	55851;"	d	file:
BTALLOC_LE	src/server/sqlite3.c	55852;"	d	file:
BTCF_AtLast	src/server/sqlite3.c	55345;"	d	file:
BTCF_Incrblob	src/server/sqlite3.c	55346;"	d	file:
BTCF_Multiple	src/server/sqlite3.c	55347;"	d	file:
BTCF_ValidNKey	src/server/sqlite3.c	55343;"	d	file:
BTCF_ValidOvfl	src/server/sqlite3.c	55344;"	d	file:
BTCF_WriteFlag	src/server/sqlite3.c	55342;"	d	file:
BTCURSOR_MAX_DEPTH	src/server/sqlite3.c	55291;"	d	file:
BTREE_APPLICATION_ID	src/server/sqlite3.c	10493;"	d	file:
BTREE_AUTOVACUUM_FULL	src/server/sqlite3.c	10377;"	d	file:
BTREE_AUTOVACUUM_INCR	src/server/sqlite3.c	10378;"	d	file:
BTREE_AUTOVACUUM_NONE	src/server/sqlite3.c	10376;"	d	file:
BTREE_AUXDELETE	src/server/sqlite3.c	10595;"	d	file:
BTREE_BLOBKEY	src/server/sqlite3.c	10456;"	d	file:
BTREE_BULKLOAD	src/server/sqlite3.c	10538;"	d	file:
BTREE_DATA_VERSION	src/server/sqlite3.c	10494;"	d	file:
BTREE_DEFAULT_CACHE_SIZE	src/server/sqlite3.c	10488;"	d	file:
BTREE_FILE_FORMAT	src/server/sqlite3.c	10487;"	d	file:
BTREE_FORDELETE	src/server/sqlite3.c	10565;"	d	file:
BTREE_FREE_PAGE_COUNT	src/server/sqlite3.c	10485;"	d	file:
BTREE_HINT_RANGE	src/server/sqlite3.c	10523;"	d	file:
BTREE_INCR_VACUUM	src/server/sqlite3.c	10492;"	d	file:
BTREE_INTKEY	src/server/sqlite3.c	10455;"	d	file:
BTREE_LARGEST_ROOT_PAGE	src/server/sqlite3.c	10489;"	d	file:
BTREE_MEMORY	src/server/sqlite3.c	10404;"	d	file:
BTREE_OMIT_JOURNAL	src/server/sqlite3.c	10403;"	d	file:
BTREE_SAVEPOSITION	src/server/sqlite3.c	10594;"	d	file:
BTREE_SCHEMA_VERSION	src/server/sqlite3.c	10486;"	d	file:
BTREE_SEEK_EQ	src/server/sqlite3.c	10539;"	d	file:
BTREE_SINGLE	src/server/sqlite3.c	10405;"	d	file:
BTREE_TEXT_ENCODING	src/server/sqlite3.c	10490;"	d	file:
BTREE_UNORDERED	src/server/sqlite3.c	10406;"	d	file:
BTREE_USER_VERSION	src/server/sqlite3.c	10491;"	d	file:
BTREE_WRCSR	src/server/sqlite3.c	10564;"	d	file:
BTS_EXCLUSIVE	src/server/sqlite3.c	55266;"	d	file:
BTS_INITIALLY_EMPTY	src/server/sqlite3.c	55264;"	d	file:
BTS_NO_WAL	src/server/sqlite3.c	55265;"	d	file:
BTS_PAGESIZE_FIXED	src/server/sqlite3.c	55262;"	d	file:
BTS_PENDING	src/server/sqlite3.c	55267;"	d	file:
BTS_READ_ONLY	src/server/sqlite3.c	55261;"	d	file:
BTS_SECURE_DELETE	src/server/sqlite3.c	55263;"	d	file:
BUFFER_OFFSET	src/renderergl2/tr_local.h	43;"	d
BUFSIZE	src/tools/lcc/src/c.h	14;"	d
BUILDABLE_SOUND_PERIOD	src/cgame/cg_buildable.c	1298;"	d	file:
BUILD_CLIENT	GNUmakefile	/^  BUILD_CLIENT     =$/;"	m
BUILD_CLIENT	GNUmakefile	/^  BUILD_CLIENT = 0$/;"	m
BUILD_DELAY_TIME	src/cgame/cg_draw.c	770;"	d	file:
BUILD_DIR	GNUmakefile	/^BUILD_DIR=bld$/;"	m
BUILD_GAME_QVM	GNUmakefile	/^  BUILD_GAME_QVM   =$/;"	m
BUILD_GAME_QVM	GNUmakefile	/^  BUILD_GAME_QVM=0$/;"	m
BUILD_GAME_QVM_11	GNUmakefile	/^  BUILD_GAME_QVM_11=$/;"	m
BUILD_GAME_SO	GNUmakefile	/^  BUILD_GAME_SO    =$/;"	m
BUILD_MASTER_SERVER	GNUmakefile	/^BUILD_MASTER_SERVER=0$/;"	m
BUILD_ONLY_CGUI	GNUmakefile	/^  BUILD_ONLY_CGUI  =$/;"	m
BUILD_ONLY_GAME	GNUmakefile	/^  BUILD_ONLY_GAME  =$/;"	m
BUILD_RENDERER_OPENGL2	GNUmakefile	/^  BUILD_RENDERER_OPENGL2=$/;"	m
BUILD_SERVER	GNUmakefile	/^  BUILD_SERVER     =$/;"	m
BUILTIN_DATE	src/qcommon/parse.c	176;"	d	file:
BUILTIN_FILE	src/qcommon/parse.c	175;"	d	file:
BUILTIN_LINE	src/qcommon/parse.c	174;"	d	file:
BUILTIN_STDC	src/qcommon/parse.c	178;"	d	file:
BUILTIN_TIME	src/qcommon/parse.c	177;"	d	file:
BURG_INCLUDED	src/tools/lcc/lburg/lburg.h	2;"	d
BUTTON_ANY	src/qcommon/q_shared.h	1348;"	d
BUTTON_ATTACK	src/qcommon/q_shared.h	1334;"	d
BUTTON_ATTACK2	src/qcommon/q_shared.h	1343;"	d
BUTTON_DODGE	src/qcommon/q_shared.h	1344;"	d
BUTTON_GESTURE	src/qcommon/q_shared.h	1337;"	d
BUTTON_SPRINT	src/qcommon/q_shared.h	1346;"	d
BUTTON_TALK	src/qcommon/q_shared.h	1335;"	d
BUTTON_USE_EVOLVE	src/qcommon/q_shared.h	1345;"	d
BUTTON_USE_HOLDABLE	src/qcommon/q_shared.h	1336;"	d
BUTTON_WALKING	src/qcommon/q_shared.h	1338;"	d
BVC	src/qcommon/vm_sparc.c	/^	BPOS, BNEG, BVC, BVS,$/;"	e	enum:sparc_iname	file:
BVS	src/qcommon/vm_sparc.c	/^	BPOS, BNEG, BVC, BVS,$/;"	e	enum:sparc_iname	file:
BYTESWAP32	src/server/sqlite3.c	51964;"	d	file:
B_MASK	src/qcommon/vm_powerpc_asm.c	574;"	d	file:
BaseWindingForPlane	src/qcommon/cm_polylib.c	/^winding_t *BaseWindingForPlane (vec3_t normal, vec_t dist)$/;"	f
BeginFrame	src/renderercommon/tr_public.h	/^	void	(*BeginFrame)( stereoFrame_t stereoFrame );$/;"	m	struct:__anon108
BeginIntermission	src/game/g_main.c	/^void BeginIntermission( void )$/;"	f
BeginRegistration	src/client/snd_local.h	/^	void (*BeginRegistration)( void );$/;"	m	struct:__anon96
BeginRegistration	src/renderercommon/tr_public.h	/^	void	(*BeginRegistration)( glconfig_t *config );$/;"	m	struct:__anon108
BenignMallocHooks	src/server/sqlite3.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	src/server/sqlite3.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
BigFloat	src/qcommon/q_platform.h	370;"	d
BigFloat	src/qcommon/q_platform.h	381;"	d
BigFloat	src/qcommon/q_platform.h	390;"	d
BigLong	src/qcommon/q_platform.h	369;"	d
BigLong	src/qcommon/q_platform.h	380;"	d
BigLong	src/qcommon/q_platform.h	389;"	d
BigShort	src/qcommon/q_platform.h	368;"	d
BigShort	src/qcommon/q_platform.h	379;"	d
BigShort	src/qcommon/q_platform.h	388;"	d
Binding	src/tools/lcc/src/c.h	/^} Binding;$/;"	t	typeref:struct:binding
BindingFromName	src/ui/ui_shared.c	/^void BindingFromName( const char *cvar )$/;"	f
BindingIDFromName	src/ui/ui_shared.c	/^int BindingIDFromName( const char *name )$/;"	f
BitDepth	src/renderercommon/tr_image_png.c	/^	uint8_t  BitDepth;$/;"	m	struct:PNG_Chunk_IHDR	file:
BitFlagAllTest	src/server/sqlite3.c	183074;"	d	file:
BitFlagTest	src/server/sqlite3.c	183075;"	d	file:
Bitmask	src/server/sqlite3.c	/^  typedef SQLITE_BITMASK_TYPE Bitmask;$/;"	t	file:
Bitmask	src/server/sqlite3.c	/^  typedef u64 Bitmask;$/;"	t	file:
Bitvec	src/server/sqlite3.c	/^struct Bitvec {$/;"	s	file:
Bitvec	src/server/sqlite3.c	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec	file:
Blob	src/server/sqlite3.c	/^struct Blob {$/;"	s	file:
Blob	src/server/sqlite3.c	/^typedef struct Blob Blob;$/;"	t	typeref:struct:Blob	file:
BlockCopy	src/qcommon/vm_powerpc.c	/^	void (* BlockCopy )( unsigned int, unsigned int, size_t );$/;"	m	struct:VM_Data	file:
BlockCopy	src/qcommon/vm_sparc.c	/^	void (*BlockCopy)(unsigned int, unsigned int, unsigned int);$/;"	m	struct:VM_Data	file:
Blockbeg	src/tools/lcc/src/c.h	/^	enum { Blockbeg, Blockend, Local, Address, Defpoint,$/;"	e	enum:code::__anon290
Blocked_Door	src/game/g_mover.c	/^void Blocked_Door( gentity_t *ent, gentity_t *other )$/;"	f
Blocked_Train	src/game/g_mover.c	/^void Blocked_Train( gentity_t *self, gentity_t *other )$/;"	f
Blockend	src/tools/lcc/src/c.h	/^	enum { Blockbeg, Blockend, Local, Address, Defpoint,$/;"	e	enum:code::__anon290
BloodSpurt	src/game/g_weapon.c	/^static void BloodSpurt( gentity_t *attacker, gentity_t *victim, trace_t *tr )$/;"	f	file:
Blow_up	src/game/g_weapon.c	/^void Blow_up( gentity_t *ent )$/;"	f
BodySink	src/game/g_client.c	/^static void BodySink( gentity_t *ent )$/;"	f	file:
Bool	src/server/sqlite3.c	/^typedef unsigned Bool;$/;"	t	file:
Border_Paint	src/ui/ui_shared.c	/^static void Border_Paint( Window *w )$/;"	f	file:
BoundingSphereOfSpheres	src/renderergl2/tr_extramath.c	/^void BoundingSphereOfSpheres(vec3_t origin1, float radius1, vec3_t origin2, float radius2, vec3_t origin3, float *radius3)$/;"	f
BoundsIntersect	src/qcommon/q_math.c	/^qboolean BoundsIntersect(const vec3_t mins, const vec3_t maxs,$/;"	f
BoundsIntersectPoint	src/qcommon/q_math.c	/^qboolean BoundsIntersectPoint(const vec3_t mins, const vec3_t maxs,$/;"	f
BoundsIntersectSphere	src/qcommon/q_math.c	/^qboolean BoundsIntersectSphere(const vec3_t mins, const vec3_t maxs,$/;"	f
BoxOnPlaneSide	src/qcommon/q_math.c	/^int BoxOnPlaneSide(vec3_t emins, vec3_t emaxs, struct cplane_s *p)$/;"	f
BtCursor	src/server/sqlite3.c	/^struct BtCursor {$/;"	s	file:
BtCursor	src/server/sqlite3.c	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor	file:
BtLock	src/server/sqlite3.c	/^struct BtLock {$/;"	s	file:
BtLock	src/server/sqlite3.c	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock	file:
BtShared	src/server/sqlite3.c	/^struct BtShared {$/;"	s	file:
BtShared	src/server/sqlite3.c	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared	file:
Btree	src/server/sqlite3.c	/^struct Btree {$/;"	s	file:
Btree	src/server/sqlite3.c	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree	file:
Buffer	src/renderercommon/tr_image_png.c	/^	byte *Buffer;$/;"	m	struct:BufferedFile	file:
BufferedFile	src/renderercommon/tr_image_png.c	/^struct BufferedFile$/;"	s	file:
BufferedFileRead	src/renderercommon/tr_image_png.c	/^static void *BufferedFileRead(struct BufferedFile *BF, unsigned Length)$/;"	f	file:
BufferedFileRewind	src/renderercommon/tr_image_png.c	/^static qboolean BufferedFileRewind(struct BufferedFile *BF, unsigned Offset)$/;"	f	file:
BufferedFileSkip	src/renderercommon/tr_image_png.c	/^static qboolean BufferedFileSkip(struct BufferedFile *BF, unsigned Offset)$/;"	f	file:
BuildChallenge	src/master/messages.c	/^static const char* BuildChallenge (void)$/;"	f	file:
BuildShaderStateConfig	src/game/g_utils.c	/^const char *BuildShaderStateConfig( void )$/;"	f
BusyHandler	src/server/sqlite3.c	/^struct BusyHandler {$/;"	s	file:
BusyHandler	src/server/sqlite3.c	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler	file:
Byte4Copy	src/qcommon/q_shared.h	608;"	d
ByteRangeLockPB2	src/server/sqlite3.c	/^struct ByteRangeLockPB2$/;"	s	file:
ByteToDir	src/qcommon/q_math.c	/^void ByteToDir( int b, vec3_t dir ) {$/;"	f
ByteToFloat	src/renderergl2/tr_extramath.h	56;"	d
BytesLeft	src/renderercommon/tr_image_png.c	/^	int   BytesLeft;$/;"	m	struct:BufferedFile	file:
C	src/asm/qasm.h	33;"	d
C	src/qcommon/md4.c	/^	uint32_t A, B, C, D;$/;"	m	struct:mdfour	file:
C0	src/client/snd_wavelet.c	26;"	d	file:
C1	src/client/snd_wavelet.c	27;"	d	file:
C2	src/client/snd_wavelet.c	28;"	d	file:
C2M_GETMOTD	src/master/messages.c	62;"	d	file:
C2M_GETSERVERS	src/master/messages.c	57;"	d	file:
C3	src/client/snd_wavelet.c	29;"	d	file:
CACHE_STALE	src/server/sqlite3.c	16026;"	d	file:
CALL	src/qcommon/vm_sparc.c	/^	CALL, NOP, SETHI,$/;"	e	enum:sparc_iname	file:
CALL_THUNK_INSN_OFFSET	src/qcommon/vm_sparc.c	1406;"	d	file:
CAPSULE_MODEL_HANDLE	src/qcommon/cm_local.h	30;"	d
CA_ACTIVE	src/qcommon/q_shared.h	/^	CA_ACTIVE,			\/\/ game views should be displayed$/;"	e	enum:__anon477
CA_AUTHORIZING	src/qcommon/q_shared.h	/^	CA_AUTHORIZING,		\/\/ not used any more, was checking cd key $/;"	e	enum:__anon477
CA_CHALLENGING	src/qcommon/q_shared.h	/^	CA_CHALLENGING,		\/\/ sending challenge packets to the server$/;"	e	enum:__anon477
CA_CINEMATIC	src/qcommon/q_shared.h	/^	CA_CINEMATIC		\/\/ playing a cinematic or a static pic, not connected to a server$/;"	e	enum:__anon477
CA_CONNECTED	src/qcommon/q_shared.h	/^	CA_CONNECTED,		\/\/ netchan_t established, getting gamestate$/;"	e	enum:__anon477
CA_CONNECTING	src/qcommon/q_shared.h	/^	CA_CONNECTING,		\/\/ sending request packets to the server$/;"	e	enum:__anon477
CA_DISCONNECTED	src/qcommon/q_shared.h	/^	CA_DISCONNECTED, 	\/\/ not talking to a server$/;"	e	enum:__anon477
CA_LOADING	src/qcommon/q_shared.h	/^	CA_LOADING,			\/\/ only during cgame initialization, never during main loop$/;"	e	enum:__anon477
CA_PRIMED	src/qcommon/q_shared.h	/^	CA_PRIMED,			\/\/ got gamestate, waiting for first frame$/;"	e	enum:__anon477
CA_UNINITIALIZED	src/qcommon/q_shared.h	/^	CA_UNINITIALIZED,$/;"	e	enum:__anon477
CBEQ	src/qcommon/vm_powerpc_asm.c	879;"	d	file:
CBGT	src/qcommon/vm_powerpc_asm.c	878;"	d	file:
CBLT	src/qcommon/vm_powerpc_asm.c	877;"	d	file:
CBRA	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
CBSO	src/qcommon/vm_powerpc_asm.c	880;"	d	file:
CC	GNUmakefile	/^        CC=i386-apple-darwin13-cc$/;"	m
CC	GNUmakefile	/^      CC=$(strip $(foreach MINGW_PREFIX, $(MINGW_PREFIXES), \\$/;"	m
CC	GNUmakefile	/^      CC=$/;"	m
CC	GNUmakefile	/^      CC=gcc$/;"	m
CC	GNUmakefile	/^      CC=x86_64-apple-darwin13-cc$/;"	m
CC	GNUmakefile	/^  CC = c99$/;"	m
CC	GNUmakefile	/^  CC=gcc$/;"	m
CC1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
CC2	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
CCON	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
CCR_REG	src/qcommon/vm_sparc.h	74;"	d
CC_AND	src/server/sqlite3.c	132003;"	d	file:
CC_BANG	src/server/sqlite3.c	131994;"	d	file:
CC_COMMA	src/server/sqlite3.c	132002;"	d	file:
CC_DIGIT	src/server/sqlite3.c	131982;"	d	file:
CC_DOLLAR	src/server/sqlite3.c	131983;"	d	file:
CC_DOT	src/server/sqlite3.c	132005;"	d	file:
CC_EQ	src/server/sqlite3.c	131993;"	d	file:
CC_GT	src/server/sqlite3.c	131992;"	d	file:
CC_ID	src/server/sqlite3.c	131981;"	d	file:
CC_ILLEGAL	src/server/sqlite3.c	132006;"	d	file:
CC_KYWD	src/server/sqlite3.c	131980;"	d	file:
CC_LP	src/server/sqlite3.c	131996;"	d	file:
CC_LT	src/server/sqlite3.c	131991;"	d	file:
CC_MINUS	src/server/sqlite3.c	131990;"	d	file:
CC_PERCENT	src/server/sqlite3.c	132001;"	d	file:
CC_PIPE	src/server/sqlite3.c	131989;"	d	file:
CC_PLUS	src/server/sqlite3.c	131999;"	d	file:
CC_QUOTE	src/server/sqlite3.c	131987;"	d	file:
CC_QUOTE2	src/server/sqlite3.c	131988;"	d	file:
CC_RP	src/server/sqlite3.c	131997;"	d	file:
CC_SEMI	src/server/sqlite3.c	131998;"	d	file:
CC_SLASH	src/server/sqlite3.c	131995;"	d	file:
CC_SPACE	src/server/sqlite3.c	131986;"	d	file:
CC_STAR	src/server/sqlite3.c	132000;"	d	file:
CC_TILDA	src/server/sqlite3.c	132004;"	d	file:
CC_VARALPHA	src/server/sqlite3.c	131984;"	d	file:
CC_VARNUM	src/server/sqlite3.c	131985;"	d	file:
CC_X	src/server/sqlite3.c	131979;"	d	file:
CCurHint	src/server/sqlite3.c	/^struct CCurHint {$/;"	s	file:
CDIR	GNUmakefile	/^CDIR=$(MOUNT_DIR)\/client$/;"	m
CF_3DNOW	src/qcommon/qcommon.h	/^  CF_3DNOW      = 1 << 3,$/;"	e	enum:__anon426
CF_3DNOW_EXT	src/qcommon/qcommon.h	/^  CF_3DNOW_EXT  = 1 << 4,$/;"	e	enum:__anon426
CF_ALTIVEC	src/qcommon/qcommon.h	/^  CF_ALTIVEC    = 1 << 7$/;"	e	enum:__anon426
CF_MMX	src/qcommon/qcommon.h	/^  CF_MMX        = 1 << 1,$/;"	e	enum:__anon426
CF_MMX_EXT	src/qcommon/qcommon.h	/^  CF_MMX_EXT    = 1 << 2,$/;"	e	enum:__anon426
CF_RDTSC	src/qcommon/qcommon.h	/^  CF_RDTSC      = 1 << 0,$/;"	e	enum:__anon426
CF_SSE	src/qcommon/qcommon.h	/^  CF_SSE        = 1 << 5,$/;"	e	enum:__anon426
CF_SSE2	src/qcommon/qcommon.h	/^  CF_SSE2       = 1 << 6,$/;"	e	enum:__anon426
CGAME_EVENT_EDITHUD	src/cgame/cg_public.h	/^  CGAME_EVENT_EDITHUD$/;"	e	enum:__anon229
CGAME_EVENT_NONE	src/cgame/cg_public.h	/^  CGAME_EVENT_NONE,$/;"	e	enum:__anon229
CGAME_EVENT_SCOREBOARD	src/cgame/cg_public.h	/^  CGAME_EVENT_SCOREBOARD,$/;"	e	enum:__anon229
CGAME_EVENT_TEAMMENU	src/cgame/cg_public.h	/^  CGAME_EVENT_TEAMMENU,$/;"	e	enum:__anon229
CGAME_IMPORT_API_VERSION	src/cgame/cg_public.h	73;"	d
CGDIR	GNUmakefile	/^CGDIR=$(MOUNT_DIR)\/cgame$/;"	m
CGEN_BAD	src/renderergl1/tr_local.h	/^	CGEN_BAD,$/;"	e	enum:__anon134
CGEN_BAD	src/renderergl2/tr_local.h	/^	CGEN_BAD,$/;"	e	enum:__anon16
CGEN_CONST	src/renderergl1/tr_local.h	/^	CGEN_CONST				\/\/ fixed color$/;"	e	enum:__anon134
CGEN_CONST	src/renderergl2/tr_local.h	/^	CGEN_CONST				\/\/ fixed color$/;"	e	enum:__anon16
CGEN_ENTITY	src/renderergl1/tr_local.h	/^	CGEN_ENTITY,			\/\/ grabbed from entity's modulate field$/;"	e	enum:__anon134
CGEN_ENTITY	src/renderergl2/tr_local.h	/^	CGEN_ENTITY,			\/\/ grabbed from entity's modulate field$/;"	e	enum:__anon16
CGEN_EXACT_VERTEX	src/renderergl1/tr_local.h	/^	CGEN_EXACT_VERTEX,		\/\/ tess.vertexColors$/;"	e	enum:__anon134
CGEN_EXACT_VERTEX	src/renderergl2/tr_local.h	/^	CGEN_EXACT_VERTEX,		\/\/ tess.vertexColors$/;"	e	enum:__anon16
CGEN_EXACT_VERTEX_LIT	src/renderergl2/tr_local.h	/^	CGEN_EXACT_VERTEX_LIT,	\/\/ like CGEN_EXACT_VERTEX but takes a light direction from the lightgrid$/;"	e	enum:__anon16
CGEN_FOG	src/renderergl1/tr_local.h	/^	CGEN_FOG,				\/\/ standard fog$/;"	e	enum:__anon134
CGEN_FOG	src/renderergl2/tr_local.h	/^	CGEN_FOG,				\/\/ standard fog$/;"	e	enum:__anon16
CGEN_IDENTITY	src/renderergl1/tr_local.h	/^	CGEN_IDENTITY,			\/\/ always (1,1,1,1)$/;"	e	enum:__anon134
CGEN_IDENTITY	src/renderergl2/tr_local.h	/^	CGEN_IDENTITY,			\/\/ always (1,1,1,1)$/;"	e	enum:__anon16
CGEN_IDENTITY_LIGHTING	src/renderergl1/tr_local.h	/^	CGEN_IDENTITY_LIGHTING,	\/\/ tr.identityLight$/;"	e	enum:__anon134
CGEN_IDENTITY_LIGHTING	src/renderergl2/tr_local.h	/^	CGEN_IDENTITY_LIGHTING,	\/\/ tr.identityLight$/;"	e	enum:__anon16
CGEN_LIGHTING_DIFFUSE	src/renderergl1/tr_local.h	/^	CGEN_LIGHTING_DIFFUSE,$/;"	e	enum:__anon134
CGEN_LIGHTING_DIFFUSE	src/renderergl2/tr_local.h	/^	CGEN_LIGHTING_DIFFUSE,$/;"	e	enum:__anon16
CGEN_ONE_MINUS_ENTITY	src/renderergl1/tr_local.h	/^	CGEN_ONE_MINUS_ENTITY,	\/\/ grabbed from 1 - entity.modulate$/;"	e	enum:__anon134
CGEN_ONE_MINUS_ENTITY	src/renderergl2/tr_local.h	/^	CGEN_ONE_MINUS_ENTITY,	\/\/ grabbed from 1 - entity.modulate$/;"	e	enum:__anon16
CGEN_ONE_MINUS_VERTEX	src/renderergl1/tr_local.h	/^	CGEN_ONE_MINUS_VERTEX,$/;"	e	enum:__anon134
CGEN_ONE_MINUS_VERTEX	src/renderergl2/tr_local.h	/^	CGEN_ONE_MINUS_VERTEX,$/;"	e	enum:__anon16
CGEN_VERTEX	src/renderergl1/tr_local.h	/^	CGEN_VERTEX,			\/\/ tess.vertexColors * tr.identityLight$/;"	e	enum:__anon134
CGEN_VERTEX	src/renderergl2/tr_local.h	/^	CGEN_VERTEX,			\/\/ tess.vertexColors * tr.identityLight$/;"	e	enum:__anon16
CGEN_VERTEX_LIT	src/renderergl2/tr_local.h	/^	CGEN_VERTEX_LIT,		\/\/ like CGEN_VERTEX but takes a light direction from the lightgrid$/;"	e	enum:__anon16
CGEN_WAVEFORM	src/renderergl1/tr_local.h	/^	CGEN_WAVEFORM,			\/\/ programmatically generated$/;"	e	enum:__anon134
CGEN_WAVEFORM	src/renderergl2/tr_local.h	/^	CGEN_WAVEFORM,			\/\/ programmatically generated$/;"	e	enum:__anon16
CGOBJ	GNUmakefile	/^CGOBJ = $(CGOBJ_) $(B)\/cgame\/cg_syscalls.o$/;"	m
CGOBJ11_	GNUmakefile	/^CGOBJ11_ = \\$/;"	m
CGOBJ_	GNUmakefile	/^CGOBJ_ = \\$/;"	m
CGVMOBJ	GNUmakefile	/^CGVMOBJ = $(CGOBJ_:%.o=%.asm)$/;"	m
CGVMOBJ11	GNUmakefile	/^CGVMOBJ11 = $(CGOBJ11_:%.o=%.asm)$/;"	m
CG_ACOS	src/cgame/cg_public.h	/^  CG_ACOS$/;"	e	enum:__anon230
CG_ADDCOMMAND	src/cgame/cg_public.h	/^  CG_ADDCOMMAND,$/;"	e	enum:__anon230
CG_ALIENS_SCORE_LABEL	src/ui/menudef.h	163;"	d
CG_AMOAnimation	src/cgame/cg_animmapobj.c	/^static void CG_AMOAnimation( centity_t *cent, int *old, int *now, float *backLerp )$/;"	f	file:
CG_ARGC	src/cgame/cg_public.h	/^  CG_ARGC,$/;"	e	enum:__anon230
CG_ARGS	src/cgame/cg_public.h	/^  CG_ARGS,$/;"	e	enum:__anon230
CG_ARGV	src/cgame/cg_public.h	/^  CG_ARGV,$/;"	e	enum:__anon230
CG_ATAN2	src/cgame/cg_public.h	/^  CG_ATAN2,$/;"	e	enum:__anon230
CG_AddBufferedSound	src/cgame/cg_view.c	/^void CG_AddBufferedSound( sfxHandle_t sfx )$/;"	f
CG_AddCEntity	src/cgame/cg_ents.c	/^static void CG_AddCEntity( centity_t *cent )$/;"	f	file:
CG_AddLagometerFrameInfo	src/cgame/cg_draw.c	/^void CG_AddLagometerFrameInfo( void )$/;"	f
CG_AddLagometerSnapshotInfo	src/cgame/cg_draw.c	/^void CG_AddLagometerSnapshotInfo( snapshot_t *snap )$/;"	f
CG_AddMarks	src/cgame/cg_marks.c	/^void CG_AddMarks( void )$/;"	f
CG_AddNotifyText	src/cgame/cg_main.c	/^void CG_AddNotifyText( void )$/;"	f
CG_AddPacketEntities	src/cgame/cg_ents.c	/^void CG_AddPacketEntities( void )$/;"	f
CG_AddPainTwitch	src/cgame/cg_players.c	/^static void CG_AddPainTwitch( centity_t *cent, vec3_t torsoAngles )$/;"	f	file:
CG_AddParticles	src/cgame/cg_particles.c	/^void CG_AddParticles( void )$/;"	f
CG_AddPlayerWeapon	src/cgame/cg_weapons.c	/^void CG_AddPlayerWeapon( refEntity_t *parent, playerState_t *ps, centity_t *cent )$/;"	f
CG_AddSpeed	src/cgame/cg_draw.c	/^void CG_AddSpeed( void )$/;"	f
CG_AddTestModel	src/cgame/cg_view.c	/^static void CG_AddTestModel( void )$/;"	f	file:
CG_AddTrails	src/cgame/cg_trails.c	/^void CG_AddTrails( void )$/;"	f
CG_AddViewWeapon	src/cgame/cg_weapons.c	/^void CG_AddViewWeapon( playerState_t *ps )$/;"	f
CG_AdjustFrom640	src/cgame/cg_drawtools.c	/^void CG_AdjustFrom640( float *x, float *y, float *w, float *h )$/;"	f
CG_AdjustPositionForMover	src/cgame/cg_ents.c	/^void CG_AdjustPositionForMover( const vec3_t in, int moverNum, int fromTime, int toTime, vec3_t out )$/;"	f
CG_AlienBuildableExplosion	src/cgame/cg_buildable.c	/^void CG_AlienBuildableExplosion( vec3_t origin, vec3_t dir )$/;"	f
CG_AlienBuilderText	src/cgame/cg_tutorial.c	/^static void CG_AlienBuilderText( char *text, playerState_t *ps )$/;"	f	file:
CG_AlienLevel0Text	src/cgame/cg_tutorial.c	/^static void CG_AlienLevel0Text( char *text, playerState_t *ps )$/;"	f	file:
CG_AlienLevel1Text	src/cgame/cg_tutorial.c	/^static void CG_AlienLevel1Text( char *text, playerState_t *ps )$/;"	f	file:
CG_AlienLevel2Text	src/cgame/cg_tutorial.c	/^static void CG_AlienLevel2Text( char *text, playerState_t *ps )$/;"	f	file:
CG_AlienLevel3Text	src/cgame/cg_tutorial.c	/^static void CG_AlienLevel3Text( char *text, playerState_t *ps )$/;"	f	file:
CG_AlienLevel4Text	src/cgame/cg_tutorial.c	/^static void CG_AlienLevel4Text( char *text, playerState_t *ps )$/;"	f	file:
CG_AlienSense	src/cgame/cg_scanner.c	/^void CG_AlienSense( rectDef_t *rect )$/;"	f
CG_AlignText	src/cgame/cg_draw.c	/^static void CG_AlignText( rectDef_t *rect, const char *text, float scale,$/;"	f	file:
CG_AllocMark	src/cgame/cg_marks.c	/^markPoly_t *CG_AllocMark( void )$/;"	f
CG_AllocateBeamNode	src/cgame/cg_trails.c	/^static trailBeamNode_t *CG_AllocateBeamNode( trailBeam_t *tb )$/;"	f	file:
CG_AmbientLight	src/cgame/cg_players.c	/^int CG_AmbientLight( vec3_t point )$/;"	f
CG_AnimMapObj	src/cgame/cg_animmapobj.c	/^void CG_AnimMapObj( centity_t *cent )$/;"	f
CG_AnnounceAlienStageTransistion	src/cgame/cg_servercmds.c	/^static void CG_AnnounceAlienStageTransistion( stage_t from, stage_t to )$/;"	f	file:
CG_AnnounceHumanStageTransistion	src/cgame/cg_servercmds.c	/^static void CG_AnnounceHumanStageTransistion( stage_t from, stage_t to )$/;"	f	file:
CG_AppendBeamNode	src/cgame/cg_trails.c	/^static trailBeamNode_t *CG_AppendBeamNode( trailBeam_t *tb )$/;"	f	file:
CG_ApplyJitters	src/cgame/cg_trails.c	/^static void CG_ApplyJitters( trailBeam_t *tb )$/;"	f	file:
CG_Argv	src/cgame/cg_main.c	/^const char *CG_Argv( int arg )$/;"	f
CG_AssetCache	src/cgame/cg_main.c	/^void CG_AssetCache( void )$/;"	f
CG_Asset_Parse	src/cgame/cg_main.c	/^qboolean CG_Asset_Parse( int handle )$/;"	f
CG_AttachToCent	src/cgame/cg_attachment.c	/^void CG_AttachToCent( attachment_t *a )$/;"	f
CG_AttachToParticle	src/cgame/cg_attachment.c	/^void CG_AttachToParticle( attachment_t *a )$/;"	f
CG_AttachToPoint	src/cgame/cg_attachment.c	/^void CG_AttachToPoint( attachment_t *a )$/;"	f
CG_AttachToTag	src/cgame/cg_attachment.c	/^void CG_AttachToTag( attachment_t *a )$/;"	f
CG_Attached	src/cgame/cg_attachment.c	/^qboolean CG_Attached( attachment_t *a )$/;"	f
CG_AttachmentAxis	src/cgame/cg_attachment.c	/^qboolean CG_AttachmentAxis( attachment_t *a, vec3_t axis[ 3 ] )$/;"	f
CG_AttachmentCentNum	src/cgame/cg_attachment.c	/^int CG_AttachmentCentNum( attachment_t *a )$/;"	f
CG_AttachmentDir	src/cgame/cg_attachment.c	/^qboolean CG_AttachmentDir( attachment_t *a, vec3_t v )$/;"	f
CG_AttachmentPoint	src/cgame/cg_attachment.c	/^qboolean CG_AttachmentPoint( attachment_t *a, vec3_t v )$/;"	f
CG_AttachmentVelocity	src/cgame/cg_attachment.c	/^qboolean CG_AttachmentVelocity( attachment_t *a, vec3_t v )$/;"	f
CG_Beam	src/cgame/cg_ents.c	/^void CG_Beam( centity_t *cent )$/;"	f
CG_BiSphereTrace	src/cgame/cg_predict.c	/^void CG_BiSphereTrace( trace_t *result, const vec3_t start, const vec3_t end,$/;"	f
CG_Bleed	src/cgame/cg_weapons.c	/^void CG_Bleed( vec3_t origin, vec3_t normal, int entityNum )$/;"	f
CG_BuildSolidList	src/cgame/cg_predict.c	/^void CG_BuildSolidList( void )$/;"	f
CG_BuildSpectatorString	src/cgame/cg_main.c	/^void CG_BuildSpectatorString( void )$/;"	f
CG_Buildable	src/cgame/cg_buildable.c	/^void CG_Buildable( centity_t *cent )$/;"	f
CG_BuildableAnimation	src/cgame/cg_buildable.c	/^static void CG_BuildableAnimation( centity_t *cent, int *old, int *now, float *backLerp )$/;"	f	file:
CG_BuildableInRange	src/cgame/cg_tutorial.c	/^static entityState_t *CG_BuildableInRange( playerState_t *ps, float *healthFraction )$/;"	f	file:
CG_BuildableParticleEffects	src/cgame/cg_buildable.c	/^static void CG_BuildableParticleEffects( centity_t *cent )$/;"	f	file:
CG_BuildableRemovalPending	src/cgame/cg_buildable.c	/^static qboolean CG_BuildableRemovalPending( int entityNum )$/;"	f	file:
CG_BuildableStatusDisplay	src/cgame/cg_buildable.c	/^static void CG_BuildableStatusDisplay( centity_t *cent )$/;"	f	file:
CG_BuildableStatusParse	src/cgame/cg_buildable.c	/^void CG_BuildableStatusParse( const char *filename, buildStat_t *bs )$/;"	f
CG_Bullet	src/cgame/cg_weapons.c	/^void CG_Bullet( vec3_t end, int sourceEntityNum, vec3_t normal, qboolean flesh, int fleshEntityNum )$/;"	f
CG_CEIL	src/cgame/cg_public.h	/^  CG_CEIL,$/;"	e	enum:__anon230
CG_CEntityPVSEnter	src/cgame/cg_ents.c	/^static void CG_CEntityPVSEnter( centity_t *cent )$/;"	f	file:
CG_CEntityPVSLeave	src/cgame/cg_ents.c	/^static void CG_CEntityPVSLeave( centity_t *cent )$/;"	f	file:
CG_CIN_DRAWCINEMATIC	src/cgame/cg_public.h	/^  CG_CIN_DRAWCINEMATIC,$/;"	e	enum:__anon230
CG_CIN_PLAYCINEMATIC	src/cgame/cg_public.h	/^  CG_CIN_PLAYCINEMATIC,$/;"	e	enum:__anon230
CG_CIN_RUNCINEMATIC	src/cgame/cg_public.h	/^  CG_CIN_RUNCINEMATIC,$/;"	e	enum:__anon230
CG_CIN_SETEXTENTS	src/cgame/cg_public.h	/^  CG_CIN_SETEXTENTS,$/;"	e	enum:__anon230
CG_CIN_STOPCINEMATIC	src/cgame/cg_public.h	/^  CG_CIN_STOPCINEMATIC,$/;"	e	enum:__anon230
CG_CLOCK	src/ui/menudef.h	170;"	d
CG_CM_BISPHERETRACE	src/cgame/cg_public.h	/^  CG_CM_BISPHERETRACE,$/;"	e	enum:__anon230
CG_CM_BOXTRACE	src/cgame/cg_public.h	/^  CG_CM_BOXTRACE,$/;"	e	enum:__anon230
CG_CM_CAPSULETRACE	src/cgame/cg_public.h	/^  CG_CM_CAPSULETRACE,$/;"	e	enum:__anon230
CG_CM_INLINEMODEL	src/cgame/cg_public.h	/^  CG_CM_INLINEMODEL,$/;"	e	enum:__anon230
CG_CM_LOADMAP	src/cgame/cg_public.h	/^  CG_CM_LOADMAP,$/;"	e	enum:__anon230
CG_CM_LOADMODEL	src/cgame/cg_public.h	/^  CG_CM_LOADMODEL,$/;"	e	enum:__anon230
CG_CM_MARKFRAGMENTS	src/cgame/cg_public.h	/^  CG_CM_MARKFRAGMENTS,$/;"	e	enum:__anon230
CG_CM_NUMINLINEMODELS	src/cgame/cg_public.h	/^  CG_CM_NUMINLINEMODELS,$/;"	e	enum:__anon230
CG_CM_POINTCONTENTS	src/cgame/cg_public.h	/^  CG_CM_POINTCONTENTS,$/;"	e	enum:__anon230
CG_CM_TEMPBOXMODEL	src/cgame/cg_public.h	/^  CG_CM_TEMPBOXMODEL,$/;"	e	enum:__anon230
CG_CM_TEMPCAPSULEMODEL	src/cgame/cg_public.h	/^  CG_CM_TEMPCAPSULEMODEL,$/;"	e	enum:__anon230
CG_CM_TRANSFORMEDBISPHERETRACE	src/cgame/cg_public.h	/^  CG_CM_TRANSFORMEDBISPHERETRACE,$/;"	e	enum:__anon230
CG_CM_TRANSFORMEDBOXTRACE	src/cgame/cg_public.h	/^  CG_CM_TRANSFORMEDBOXTRACE,$/;"	e	enum:__anon230
CG_CM_TRANSFORMEDCAPSULETRACE	src/cgame/cg_public.h	/^  CG_CM_TRANSFORMEDCAPSULETRACE,$/;"	e	enum:__anon230
CG_CM_TRANSFORMEDPOINTCONTENTS	src/cgame/cg_public.h	/^  CG_CM_TRANSFORMEDPOINTCONTENTS,$/;"	e	enum:__anon230
CG_CONSOLE	src/ui/menudef.h	168;"	d
CG_CONSOLE_COMMAND	src/cgame/cg_public.h	/^  CG_CONSOLE_COMMAND,$/;"	e	enum:__anon231
CG_CONSOLE_TEXT	src/cgame/cg_public.h	/^  CG_CONSOLE_TEXT,$/;"	e	enum:__anon231
CG_COS	src/cgame/cg_public.h	/^  CG_COS,$/;"	e	enum:__anon230
CG_CROSSHAIR_PLAYER	src/cgame/cg_public.h	/^  CG_CROSSHAIR_PLAYER,$/;"	e	enum:__anon231
CG_CVAR_REGISTER	src/cgame/cg_public.h	/^  CG_CVAR_REGISTER,$/;"	e	enum:__anon230
CG_CVAR_SET	src/cgame/cg_public.h	/^  CG_CVAR_SET,$/;"	e	enum:__anon230
CG_CVAR_UPDATE	src/cgame/cg_public.h	/^  CG_CVAR_UPDATE,$/;"	e	enum:__anon230
CG_CVAR_VARIABLESTRINGBUFFER	src/cgame/cg_public.h	/^  CG_CVAR_VARIABLESTRINGBUFFER,$/;"	e	enum:__anon230
CG_CalcEntityLerpPositions	src/cgame/cg_ents.c	/^static void CG_CalcEntityLerpPositions( centity_t *cent )$/;"	f	file:
CG_CalcFov	src/cgame/cg_view.c	/^static int CG_CalcFov( void )$/;"	f	file:
CG_CalcMuzzlePoint	src/cgame/cg_weapons.c	/^static qboolean CG_CalcMuzzlePoint( int entityNum, vec3_t muzzle )$/;"	f	file:
CG_CalcViewValues	src/cgame/cg_view.c	/^static int CG_CalcViewValues( void )$/;"	f	file:
CG_CalcVrect	src/cgame/cg_view.c	/^static void CG_CalcVrect( void )$/;"	f	file:
CG_CalculateBeamNodeProperties	src/cgame/cg_trails.c	/^static void CG_CalculateBeamNodeProperties( trailBeam_t *tb )$/;"	f	file:
CG_CalculateTimeFrac	src/cgame/cg_particles.c	/^static float CG_CalculateTimeFrac( int birth, int life, int delay )$/;"	f	file:
CG_CalculateWeaponPosition	src/cgame/cg_weapons.c	/^static void CG_CalculateWeaponPosition( vec3_t origin, vec3_t angles )$/;"	f	file:
CG_CapTrace	src/cgame/cg_predict.c	/^void  CG_CapTrace( trace_t *result, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end,$/;"	f
CG_CenterPrint	src/cgame/cg_draw.c	/^void CG_CenterPrint( const char *str, int y, int charWidth )$/;"	f
CG_CenterPrint_f	src/cgame/cg_servercmds.c	/^static void CG_CenterPrint_f( void )$/;"	f	file:
CG_ChargeProgress	src/cgame/cg_draw.c	/^static float CG_ChargeProgress( void )$/;"	f	file:
CG_Chat_f	src/cgame/cg_servercmds.c	/^static void CG_Chat_f( void )$/;"	f	file:
CG_CheckChangedPredictableEvents	src/cgame/cg_playerstate.c	/^void CG_CheckChangedPredictableEvents( playerState_t *ps )$/;"	f
CG_CheckEvents	src/cgame/cg_event.c	/^void CG_CheckEvents( centity_t *cent )$/;"	f
CG_CheckLocalSounds	src/cgame/cg_playerstate.c	/^void CG_CheckLocalSounds( playerState_t *ps, playerState_t *ops )$/;"	f
CG_CheckPlayerstateEvents	src/cgame/cg_playerstate.c	/^void CG_CheckPlayerstateEvents( playerState_t *ps, playerState_t *ops )$/;"	f
CG_ClearClipRegion	src/cgame/cg_drawtools.c	/^void CG_ClearClipRegion( void )$/;"	f
CG_ClearLerpFrame	src/cgame/cg_players.c	/^static void CG_ClearLerpFrame( clientInfo_t *ci, lerpFrame_t *lf, int animationNumber )$/;"	f	file:
CG_ClientIsReady	src/cgame/cg_main.c	/^qboolean CG_ClientIsReady( int clientNum )$/;"	f
CG_ClientList_f	src/cgame/cg_consolecmds.c	/^void CG_ClientList_f( void )$/;"	f
CG_ClientNumFromName	src/cgame/cg_draw.c	/^int CG_ClientNumFromName( const char *p )$/;"	f
CG_ClipMoveToEntities	src/cgame/cg_predict.c	/^static void CG_ClipMoveToEntities ( const vec3_t start, const vec3_t mins,$/;"	f	file:
CG_CompactAndSortParticles	src/cgame/cg_particles.c	/^static void CG_CompactAndSortParticles( void )$/;"	f	file:
CG_ConfigString	src/cgame/cg_main.c	/^const char *CG_ConfigString( int index )$/;"	f
CG_ConfigStringModified	src/cgame/cg_servercmds.c	/^static void CG_ConfigStringModified( void )$/;"	f	file:
CG_ConsoleCommand	src/cgame/cg_consolecmds.c	/^qboolean CG_ConsoleCommand( void )$/;"	f
CG_CopyClientInfoModel	src/cgame/cg_players.c	/^static void CG_CopyClientInfoModel( clientInfo_t *from, clientInfo_t *to )$/;"	f	file:
CG_CopyLine	src/cgame/cg_particles.c	/^static void CG_CopyLine( int *i, char *toks, size_t num, size_t size, char **text_p )$/;"	f	file:
CG_Corpse	src/cgame/cg_players.c	/^void CG_Corpse( centity_t *cent )$/;"	f
CG_CountBeamNodes	src/cgame/cg_trails.c	/^static int CG_CountBeamNodes( trailBeam_t *tb )$/;"	f	file:
CG_Creep	src/cgame/cg_buildable.c	/^static void CG_Creep( centity_t *cent )$/;"	f	file:
CG_CrosshairPlayer	src/cgame/cg_main.c	/^int CG_CrosshairPlayer( void )$/;"	f
CG_CustomSound	src/cgame/cg_players.c	/^sfxHandle_t CG_CustomSound( int clientNum, const char *soundName )$/;"	f
CG_Cvar_Get	src/cgame/cg_main.c	/^static float CG_Cvar_Get( const char *cvar )$/;"	f	file:
CG_DEMO_PLAYBACK	src/ui/menudef.h	165;"	d
CG_DEMO_RECORDING	src/ui/menudef.h	166;"	d
CG_DRAW_ACTIVE_FRAME	src/cgame/cg_public.h	/^  CG_DRAW_ACTIVE_FRAME,$/;"	e	enum:__anon231
CG_DamageFeedback	src/cgame/cg_playerstate.c	/^void CG_DamageFeedback( int yawByte, int pitchByte, int damage )$/;"	f
CG_DestroyBeamNode	src/cgame/cg_trails.c	/^static trailBeamNode_t *CG_DestroyBeamNode( trailBeamNode_t *tbn )$/;"	f	file:
CG_DestroyParticle	src/cgame/cg_particles.c	/^static void CG_DestroyParticle( particle_t *p, vec3_t impactNormal )$/;"	f	file:
CG_DestroyParticleSystem	src/cgame/cg_particles.c	/^void CG_DestroyParticleSystem( particleSystem_t **ps )$/;"	f
CG_DestroyTestPS_f	src/cgame/cg_particles.c	/^void CG_DestroyTestPS_f( void )$/;"	f
CG_DestroyTestTS_f	src/cgame/cg_trails.c	/^void CG_DestroyTestTS_f( void )$/;"	f
CG_DestroyTrailSystem	src/cgame/cg_trails.c	/^void CG_DestroyTrailSystem( trailSystem_t **ts )$/;"	f
CG_DoorAnimation	src/cgame/cg_animmapobj.c	/^static void CG_DoorAnimation( centity_t *cent, int *old, int *now, float *backLerp )$/;"	f	file:
CG_Draw2D	src/cgame/cg_draw.c	/^static void CG_Draw2D( void )$/;"	f	file:
CG_DrawActive	src/cgame/cg_draw.c	/^void CG_DrawActive( stereoFrame_t stereoView )$/;"	f
CG_DrawActiveFrame	src/cgame/cg_view.c	/^void CG_DrawActiveFrame( int serverTime, stereoFrame_t stereoView, qboolean demoPlayback )$/;"	f
CG_DrawAlienSense	src/cgame/cg_draw.c	/^static void CG_DrawAlienSense( rectDef_t *rect )$/;"	f	file:
CG_DrawBinaryShadersFinalPhases	src/cgame/cg_draw.c	/^static void CG_DrawBinaryShadersFinalPhases( void )$/;"	f	file:
CG_DrawBlips	src/cgame/cg_scanner.c	/^static void CG_DrawBlips( rectDef_t *rect, vec3_t origin, vec4_t colour )$/;"	f	file:
CG_DrawBoundingBox	src/cgame/cg_ents.c	/^void CG_DrawBoundingBox( vec3_t origin, vec3_t mins, vec3_t maxs )$/;"	f
CG_DrawBoxFace	src/cgame/cg_ents.c	/^static void CG_DrawBoxFace( vec3_t a, vec3_t b, vec3_t c, vec3_t d )$/;"	f	file:
CG_DrawBuildableStatus	src/cgame/cg_buildable.c	/^void CG_DrawBuildableStatus( void )$/;"	f
CG_DrawBuildablesProgress	src/cgame/cg_draw.c	/^static void CG_DrawBuildablesProgress( rectDef_t *rect, vec4_t color,$/;"	f	file:
CG_DrawBuildablesProgressLabel	src/cgame/cg_draw.c	/^static void CG_DrawBuildablesProgressLabel( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawCenterString	src/cgame/cg_draw.c	/^static void CG_DrawCenterString( void )$/;"	f	file:
CG_DrawCharModelProgress	src/cgame/cg_draw.c	/^static void CG_DrawCharModelProgress( rectDef_t *rect, vec4_t color,$/;"	f	file:
CG_DrawCharModelProgressLabel	src/cgame/cg_draw.c	/^static void CG_DrawCharModelProgressLabel( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawCinematic	src/cgame/cg_main.c	/^static void CG_DrawCinematic( int handle, float x, float y, float w, float h )$/;"	f	file:
CG_DrawClock	src/cgame/cg_draw.c	/^static void CG_DrawClock( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawConsole	src/cgame/cg_draw.c	/^static void CG_DrawConsole( rectDef_t *rect, float text_x, float text_y, vec4_t color,$/;"	f	file:
CG_DrawCountdown	src/cgame/cg_draw.c	/^static void CG_DrawCountdown( void )$/;"	f	file:
CG_DrawCrosshair	src/cgame/cg_draw.c	/^static void CG_DrawCrosshair( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawCrosshairNames	src/cgame/cg_draw.c	/^static void CG_DrawCrosshairNames( rectDef_t *rect, float scale, int textStyle )$/;"	f	file:
CG_DrawDemoPlayback	src/cgame/cg_draw.c	/^static void CG_DrawDemoPlayback( rectDef_t *rect, vec4_t color, qhandle_t shader )$/;"	f	file:
CG_DrawDemoRecording	src/cgame/cg_draw.c	/^static void CG_DrawDemoRecording( rectDef_t *rect, vec4_t color, qhandle_t shader )$/;"	f	file:
CG_DrawDir	src/cgame/cg_scanner.c	/^static void CG_DrawDir( rectDef_t *rect, vec3_t origin, vec4_t colour )$/;"	f	file:
CG_DrawDisconnect	src/cgame/cg_draw.c	/^static void CG_DrawDisconnect( void )$/;"	f	file:
CG_DrawFPS	src/cgame/cg_draw.c	/^static void CG_DrawFPS( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawFadePic	src/cgame/cg_drawtools.c	/^void CG_DrawFadePic( float x, float y, float width, float height, vec4_t fcolor,$/;"	f
CG_DrawField	src/cgame/cg_draw.c	/^void CG_DrawField( float x, float y, int width, float cw, float ch, int value )$/;"	f
CG_DrawFieldPadded	src/cgame/cg_draw.c	/^static void CG_DrawFieldPadded( int x, int y, int width, int cw, int ch, int value )$/;"	f	file:
CG_DrawFollow	src/cgame/cg_draw.c	/^static void CG_DrawFollow( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawFuel	src/cgame/cg_draw.c	/^void CG_DrawFuel( void )$/;"	f
CG_DrawHostname	src/cgame/cg_draw.c	/^static void CG_DrawHostname( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawHumanScanner	src/cgame/cg_draw.c	/^static void CG_DrawHumanScanner( rectDef_t *rect, qhandle_t shader, vec4_t color )$/;"	f	file:
CG_DrawIntermission	src/cgame/cg_draw.c	/^static void CG_DrawIntermission( void )$/;"	f	file:
CG_DrawItemSelect	src/cgame/cg_weapons.c	/^void CG_DrawItemSelect( rectDef_t *rect, vec4_t color )$/;"	f
CG_DrawItemSelectText	src/cgame/cg_weapons.c	/^void CG_DrawItemSelectText( rectDef_t *rect, float scale, int textStyle )$/;"	f
CG_DrawKiller	src/cgame/cg_draw.c	/^static void CG_DrawKiller( rectDef_t *rect, float scale, vec4_t color,$/;"	f	file:
CG_DrawLagometer	src/cgame/cg_draw.c	/^static void CG_DrawLagometer( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawLevelName	src/cgame/cg_draw.c	/^static void CG_DrawLevelName( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawLevelShot	src/cgame/cg_draw.c	/^static void CG_DrawLevelShot( rectDef_t *rect )$/;"	f	file:
CG_DrawLighting	src/cgame/cg_draw.c	/^static void CG_DrawLighting( void )$/;"	f	file:
CG_DrawLoadingScreen	src/cgame/cg_draw.c	/^void CG_DrawLoadingScreen( void )$/;"	f
CG_DrawLocation	src/cgame/cg_draw.c	/^static void CG_DrawLocation( rectDef_t *rect, float scale, int textalign, vec4_t color )$/;"	f	file:
CG_DrawMOTD	src/cgame/cg_draw.c	/^static void CG_DrawMOTD( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawMediaProgress	src/cgame/cg_draw.c	/^static void CG_DrawMediaProgress( rectDef_t *rect, vec4_t color, float scale,$/;"	f	file:
CG_DrawMediaProgressLabel	src/cgame/cg_draw.c	/^static void CG_DrawMediaProgressLabel( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawOverallProgress	src/cgame/cg_draw.c	/^static void CG_DrawOverallProgress( rectDef_t *rect, vec4_t color, float scale,$/;"	f	file:
CG_DrawPic	src/cgame/cg_drawtools.c	/^void CG_DrawPic( float x, float y, float width, float height, qhandle_t hShader )$/;"	f
CG_DrawPlane	src/cgame/cg_drawtools.c	/^void CG_DrawPlane( vec3_t origin, vec3_t down, vec3_t right, qhandle_t shader )$/;"	f
CG_DrawPlayerAmmoValue	src/cgame/cg_draw.c	/^static void CG_DrawPlayerAmmoValue( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawPlayerBoosted	src/cgame/cg_draw.c	/^static void CG_DrawPlayerBoosted( rectDef_t *rect, vec4_t backColor,$/;"	f	file:
CG_DrawPlayerBoosterBolt	src/cgame/cg_draw.c	/^static void CG_DrawPlayerBoosterBolt( rectDef_t *rect, vec4_t backColor,$/;"	f	file:
CG_DrawPlayerBuildTimer	src/cgame/cg_draw.c	/^static void CG_DrawPlayerBuildTimer( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawPlayerBuildTimerRing	src/cgame/cg_draw.c	/^static void CG_DrawPlayerBuildTimerRing( rectDef_t *rect, vec4_t backColor,$/;"	f	file:
CG_DrawPlayerChargeBar	src/cgame/cg_draw.c	/^static void CG_DrawPlayerChargeBar( rectDef_t *rect, vec4_t ref_color,$/;"	f	file:
CG_DrawPlayerChargeBarBG	src/cgame/cg_draw.c	/^static void CG_DrawPlayerChargeBarBG( rectDef_t *rect, vec4_t ref_color,$/;"	f	file:
CG_DrawPlayerClipsRing	src/cgame/cg_draw.c	/^static void CG_DrawPlayerClipsRing( rectDef_t *rect, vec4_t backColor,$/;"	f	file:
CG_DrawPlayerClipsValue	src/cgame/cg_draw.c	/^static void CG_DrawPlayerClipsValue( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawPlayerCreditsFraction	src/cgame/cg_draw.c	/^static void CG_DrawPlayerCreditsFraction( rectDef_t *rect, vec4_t color, qhandle_t shader )$/;"	f	file:
CG_DrawPlayerCreditsValue	src/cgame/cg_draw.c	/^static void CG_DrawPlayerCreditsValue( rectDef_t *rect, vec4_t color, qboolean padding )$/;"	f	file:
CG_DrawPlayerHealthCross	src/cgame/cg_draw.c	/^static void CG_DrawPlayerHealthCross( rectDef_t *rect, vec4_t ref_color )$/;"	f	file:
CG_DrawPlayerHealthValue	src/cgame/cg_draw.c	/^static void CG_DrawPlayerHealthValue( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawPlayerPoisonBarbs	src/cgame/cg_draw.c	/^static void CG_DrawPlayerPoisonBarbs( rectDef_t *rect, vec4_t color, qhandle_t shader )$/;"	f	file:
CG_DrawPlayerStamina	src/cgame/cg_draw.c	/^static void CG_DrawPlayerStamina( int ownerDraw, rectDef_t *rect,$/;"	f	file:
CG_DrawPlayerStaminaBolt	src/cgame/cg_draw.c	/^static void CG_DrawPlayerStaminaBolt( rectDef_t *rect, vec4_t backColor,$/;"	f	file:
CG_DrawPlayerWallclimbing	src/cgame/cg_draw.c	/^static void CG_DrawPlayerWallclimbing( rectDef_t *rect, vec4_t backColor, vec4_t foreColor, qhandle_t shader )$/;"	f	file:
CG_DrawProgressBar	src/cgame/cg_draw.c	/^static void CG_DrawProgressBar( rectDef_t *rect, vec4_t color, float scale,$/;"	f	file:
CG_DrawProgressLabel	src/cgame/cg_draw.c	/^static void CG_DrawProgressLabel( rectDef_t *rect, float text_x, float text_y, vec4_t color,$/;"	f	file:
CG_DrawQueue	src/cgame/cg_draw.c	/^static qboolean CG_DrawQueue( void )$/;"	f	file:
CG_DrawRangeMarker	src/cgame/cg_drawtools.c	/^void CG_DrawRangeMarker( rangeMarkerType_t rmType, const vec3_t origin, const float *angles, float range,$/;"	f
CG_DrawRect	src/cgame/cg_drawtools.c	/^void CG_DrawRect( float x, float y, float width, float height, float size, const float *color )$/;"	f
CG_DrawScoreboard	src/cgame/cg_draw.c	/^static qboolean CG_DrawScoreboard( void )$/;"	f	file:
CG_DrawSides	src/cgame/cg_drawtools.c	/^void CG_DrawSides( float x, float y, float w, float h, float size )$/;"	f
CG_DrawSnapshot	src/cgame/cg_draw.c	/^static void CG_DrawSnapshot( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawSpeed	src/cgame/cg_draw.c	/^static void CG_DrawSpeed( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawSpeedGraph	src/cgame/cg_draw.c	/^static void CG_DrawSpeedGraph( rectDef_t *rect, vec4_t foreColor,$/;"	f	file:
CG_DrawSpeedText	src/cgame/cg_draw.c	/^static void CG_DrawSpeedText( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawSphere	src/cgame/cg_drawtools.c	/^void CG_DrawSphere( const vec3_t center, float radius, int customShader, const float *shaderRGBA )$/;"	f
CG_DrawSphericalCone	src/cgame/cg_drawtools.c	/^void CG_DrawSphericalCone( const vec3_t tip, const vec3_t rotation, float radius,$/;"	f
CG_DrawStageReport	src/cgame/cg_draw.c	/^static void CG_DrawStageReport( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawStrlen	src/cgame/cg_drawtools.c	/^int CG_DrawStrlen( const char *str )$/;"	f
CG_DrawSurfNormal	src/cgame/cg_view.c	/^static void CG_DrawSurfNormal( void )$/;"	f	file:
CG_DrawTeamLabel	src/cgame/cg_draw.c	/^static void CG_DrawTeamLabel( rectDef_t *rect, team_t team, float text_x, float text_y,$/;"	f	file:
CG_DrawTeamOverlay	src/cgame/cg_draw.c	/^static void CG_DrawTeamOverlay( rectDef_t *rect, float scale, vec4_t color )$/;"	f	file:
CG_DrawTeamSpectators	src/cgame/cg_draw.c	/^static void CG_DrawTeamSpectators( rectDef_t *rect, float scale, int textvalign, vec4_t color, qhandle_t shader )$/;"	f	file:
CG_DrawTimer	src/cgame/cg_draw.c	/^static void CG_DrawTimer( rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
CG_DrawTimerMins	src/cgame/cg_draw.c	/^static void CG_DrawTimerMins( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawTimerSecs	src/cgame/cg_draw.c	/^static void CG_DrawTimerSecs( rectDef_t *rect, vec4_t color )$/;"	f	file:
CG_DrawTopBottom	src/cgame/cg_drawtools.c	/^void CG_DrawTopBottom( float x, float y, float w, float h, float size )$/;"	f
CG_DrawTutorial	src/cgame/cg_draw.c	/^static void CG_DrawTutorial( rectDef_t *rect, float text_x, float text_y, vec4_t color,$/;"	f	file:
CG_DrawUsableBuildable	src/cgame/cg_draw.c	/^static void CG_DrawUsableBuildable( rectDef_t *rect, qhandle_t shader, vec4_t color )$/;"	f	file:
CG_DrawVote	src/cgame/cg_draw.c	/^static void CG_DrawVote( team_t team )$/;"	f	file:
CG_DrawWarmup	src/cgame/cg_draw.c	/^static void CG_DrawWarmup( int ownerDraw, rectDef_t *rect, float textScale, int textAlign, int textStyle, vec4_t color )$/;"	f	file:
CG_DrawWeaponIcon	src/cgame/cg_draw.c	/^void CG_DrawWeaponIcon( rectDef_t *rect, vec4_t color )$/;"	f
CG_ERROR	src/cgame/cg_public.h	/^  CG_ERROR,$/;"	e	enum:__anon230
CG_EVENT_HANDLING	src/cgame/cg_public.h	/^  CG_EVENT_HANDLING,$/;"	e	enum:__anon231
CG_EntityEffects	src/cgame/cg_ents.c	/^static void CG_EntityEffects( centity_t *cent )$/;"	f	file:
CG_EntityEvent	src/cgame/cg_event.c	/^void CG_EntityEvent( centity_t *cent, vec3_t position )$/;"	f
CG_Error	src/cgame/cg_main.c	/^void QDECL CG_Error( const char *msg, ... )$/;"	f
CG_EvaluateParticlePhysics	src/cgame/cg_particles.c	/^static void CG_EvaluateParticlePhysics( particle_t *p )$/;"	f	file:
CG_EventHandling	src/cgame/cg_draw.c	/^void CG_EventHandling( int type )$/;"	f
CG_ExecuteNewServerCommands	src/cgame/cg_servercmds.c	/^void CG_ExecuteNewServerCommands( int latestSequence )$/;"	f
CG_FLOOR	src/cgame/cg_public.h	/^  CG_FLOOR,$/;"	e	enum:__anon230
CG_FOLLOW	src/ui/menudef.h	139;"	d
CG_FONT_THRESHOLD	src/cgame/cg_local.h	36;"	d
CG_FPS	src/ui/menudef.h	153;"	d
CG_FPS_FIXED	src/ui/menudef.h	154;"	d
CG_FS_FCLOSEFILE	src/cgame/cg_public.h	/^  CG_FS_FCLOSEFILE,$/;"	e	enum:__anon230
CG_FS_FOPENFILE	src/cgame/cg_public.h	/^  CG_FS_FOPENFILE,$/;"	e	enum:__anon230
CG_FS_GETFILELIST	src/cgame/cg_public.h	/^  CG_FS_GETFILELIST,$/;"	e	enum:__anon230
CG_FS_READ	src/cgame/cg_public.h	/^  CG_FS_READ,$/;"	e	enum:__anon230
CG_FS_SEEK	src/cgame/cg_public.h	/^  CG_FS_SEEK,$/;"	e	enum:__anon230
CG_FS_WRITE	src/cgame/cg_public.h	/^  CG_FS_WRITE,$/;"	e	enum:__anon230
CG_FadeColor	src/cgame/cg_drawtools.c	/^float *CG_FadeColor( int startMsec, int totalMsec )$/;"	f
CG_FeederCount	src/cgame/cg_main.c	/^static int CG_FeederCount( int feederID )$/;"	f	file:
CG_FeederItemImage	src/cgame/cg_main.c	/^static qhandle_t CG_FeederItemImage( int feederID, int index )$/;"	f	file:
CG_FeederItemText	src/cgame/cg_main.c	/^static const char *CG_FeederItemText( int feederID, int index, int column, qhandle_t *handle )$/;"	f	file:
CG_FeederSelection	src/cgame/cg_main.c	/^static void CG_FeederSelection( int feederID, int index )$/;"	f	file:
CG_FileExists	src/cgame/cg_main.c	/^qboolean CG_FileExists( char *filename )$/;"	f
CG_FillRect	src/cgame/cg_drawtools.c	/^void CG_FillRect( float x, float y, float width, float height, const float *color )$/;"	f
CG_FindLastBeamNode	src/cgame/cg_trails.c	/^static trailBeamNode_t *CG_FindLastBeamNode( trailBeam_t *tb )$/;"	f	file:
CG_FireWeapon	src/cgame/cg_weapons.c	/^void CG_FireWeapon( centity_t *cent, weaponMode_t weaponMode )$/;"	f
CG_FreeMarkPoly	src/cgame/cg_marks.c	/^void CG_FreeMarkPoly( markPoly_t *le )$/;"	f
CG_GETCURRENTCMDNUMBER	src/cgame/cg_public.h	/^  CG_GETCURRENTCMDNUMBER,$/;"	e	enum:__anon230
CG_GETCURRENTSNAPSHOTNUMBER	src/cgame/cg_public.h	/^  CG_GETCURRENTSNAPSHOTNUMBER,$/;"	e	enum:__anon230
CG_GETDEMONAME	src/cgame/cg_public.h	/^  CG_GETDEMONAME,$/;"	e	enum:__anon230
CG_GETDEMOPOS	src/cgame/cg_public.h	/^  CG_GETDEMOPOS,$/;"	e	enum:__anon230
CG_GETDEMOSTATE	src/cgame/cg_public.h	/^  CG_GETDEMOSTATE,$/;"	e	enum:__anon230
CG_GETGAMESTATE	src/cgame/cg_public.h	/^  CG_GETGAMESTATE,$/;"	e	enum:__anon230
CG_GETGLCONFIG	src/cgame/cg_public.h	/^  CG_GETGLCONFIG,$/;"	e	enum:__anon230
CG_GETSERVERCOMMAND	src/cgame/cg_public.h	/^  CG_GETSERVERCOMMAND,$/;"	e	enum:__anon230
CG_GETSNAPSHOT	src/cgame/cg_public.h	/^  CG_GETSNAPSHOT,$/;"	e	enum:__anon230
CG_GETUSERCMD	src/cgame/cg_public.h	/^  CG_GETUSERCMD,$/;"	e	enum:__anon230
CG_GET_ENTITY_TOKEN	src/cgame/cg_public.h	/^  CG_GET_ENTITY_TOKEN,$/;"	e	enum:__anon230
CG_GameCmds_f	src/cgame/cg_servercmds.c	/^static void CG_GameCmds_f( void )$/;"	f	file:
CG_GarbageCollectParticleSystems	src/cgame/cg_particles.c	/^static void CG_GarbageCollectParticleSystems( void )$/;"	f	file:
CG_GarbageCollectTrailSystems	src/cgame/cg_trails.c	/^static void CG_GarbageCollectTrailSystems( void )$/;"	f	file:
CG_General	src/cgame/cg_ents.c	/^static void CG_General( centity_t *cent )$/;"	f	file:
CG_GetBindings	src/cgame/cg_tutorial.c	/^static void CG_GetBindings( void )$/;"	f	file:
CG_GetBuildableRangeMarkerProperties	src/cgame/cg_buildable.c	/^qboolean CG_GetBuildableRangeMarkerProperties( buildable_t bType, rangeMarkerType_t *rmType, float *range, vec3_t rgb )$/;"	f
CG_GetColorCharForHealth	src/cgame/cg_drawtools.c	/^char CG_GetColorCharForHealth( int clientnum )$/;"	f
CG_GetCorpseNum	src/cgame/cg_players.c	/^static int CG_GetCorpseNum( class_t class )$/;"	f	file:
CG_GetKillerText	src/cgame/cg_draw.c	/^const char *CG_GetKillerText( )$/;"	f
CG_GetMenuBuffer	src/cgame/cg_main.c	/^char *CG_GetMenuBuffer( const char *filename )$/;"	f
CG_GetModuleAlternateSnapshot	src/cgame/cg_snapshot.c	/^static qboolean CG_GetModuleAlternateSnapshot( int snapshotNumber, snapshot_t *snap )$/;"	f	file:
CG_GetPlayerLocation	src/cgame/cg_players.c	/^centity_t *CG_GetPlayerLocation( void )$/;"	f
CG_GetRangeMarkerPreferences	src/cgame/cg_main.c	/^qboolean CG_GetRangeMarkerPreferences( qboolean *drawSurface, qboolean *drawIntersection,$/;"	f
CG_GetValue	src/cgame/cg_draw.c	/^float CG_GetValue( int ownerDraw )$/;"	f
CG_GhostBuildable	src/cgame/cg_buildable.c	/^void CG_GhostBuildable( buildable_t buildable )$/;"	f
CG_GhostBuildableRangeMarker	src/cgame/cg_buildable.c	/^static void CG_GhostBuildableRangeMarker( buildable_t buildable, const vec3_t origin, const vec3_t normal )$/;"	f	file:
CG_GibPlayer	src/cgame/cg_players.c	/^void CG_GibPlayer( vec3_t origin, vec3_t dir )$/;"	f
CG_HUMANS_SCORE_LABEL	src/ui/menudef.h	164;"	d
CG_HideTeamMenu	src/cgame/cg_draw.c	/^void CG_HideTeamMenu( void )$/;"	f
CG_HumanBuildableExplosion	src/cgame/cg_buildable.c	/^void CG_HumanBuildableExplosion( vec3_t origin, vec3_t dir )$/;"	f
CG_HumanCkitText	src/cgame/cg_tutorial.c	/^static void CG_HumanCkitText( char *text, playerState_t *ps )$/;"	f	file:
CG_HumanText	src/cgame/cg_tutorial.c	/^static void CG_HumanText( char *text, playerState_t *ps )$/;"	f	file:
CG_INIT	src/cgame/cg_public.h	/^  CG_INIT,$/;"	e	enum:__anon231
CG_ImpactMark	src/cgame/cg_marks.c	/^void CG_ImpactMark( qhandle_t markShader, const vec3_t origin, const vec3_t dir,$/;"	f
CG_InfoFromScoreIndex	src/cgame/cg_main.c	/^static clientInfo_t * CG_InfoFromScoreIndex( int index, int team, int *scoreIndex )$/;"	f	file:
CG_Init	src/cgame/cg_main.c	/^void CG_Init( int serverMessageNum, int serverCommandSequence, int clientNum )$/;"	f
CG_InitBuildables	src/cgame/cg_buildable.c	/^void CG_InitBuildables( void )$/;"	f
CG_InitConsoleCommands	src/cgame/cg_consolecmds.c	/^void CG_InitConsoleCommands( void )$/;"	f
CG_InitMarkPolys	src/cgame/cg_marks.c	/^void CG_InitMarkPolys( void )$/;"	f
CG_InitUpgrades	src/cgame/cg_weapons.c	/^void CG_InitUpgrades( void )$/;"	f
CG_InitWeapons	src/cgame/cg_weapons.c	/^void CG_InitWeapons( void )$/;"	f
CG_InitialiseBaseParticle	src/cgame/cg_particles.c	/^static void CG_InitialiseBaseParticle( baseParticle_t *bp )$/;"	f	file:
CG_InitialiseBaseTrailBeam	src/cgame/cg_trails.c	/^static void CG_InitialiseBaseTrailBeam( baseTrailBeam_t *btb )$/;"	f	file:
CG_InterpolateEntityPosition	src/cgame/cg_ents.c	/^static void CG_InterpolateEntityPosition( centity_t *cent )$/;"	f	file:
CG_InterpolatePlayerState	src/cgame/cg_predict.c	/^static void CG_InterpolatePlayerState( qboolean grabAngles )$/;"	f	file:
CG_IsParticleSystemInfinite	src/cgame/cg_particles.c	/^qboolean CG_IsParticleSystemInfinite( particleSystem_t *ps )$/;"	f
CG_IsParticleSystemValid	src/cgame/cg_particles.c	/^qboolean CG_IsParticleSystemValid( particleSystem_t **ps )$/;"	f
CG_IsTrailSystemValid	src/cgame/cg_trails.c	/^qboolean CG_IsTrailSystemValid( trailSystem_t **ts )$/;"	f
CG_IsUnacceptableError	src/cgame/cg_predict.c	/^static int CG_IsUnacceptableError( playerState_t *ps, playerState_t *pps )$/;"	f	file:
CG_KEY_EVENT	src/cgame/cg_public.h	/^  CG_KEY_EVENT,$/;"	e	enum:__anon231
CG_KEY_GETBINDINGBUF	src/cgame/cg_public.h	/^  CG_KEY_GETBINDINGBUF,$/;"	e	enum:__anon230
CG_KEY_GETCATCHER	src/cgame/cg_public.h	/^  CG_KEY_GETCATCHER,$/;"	e	enum:__anon230
CG_KEY_GETKEY	src/cgame/cg_public.h	/^  CG_KEY_GETKEY,$/;"	e	enum:__anon230
CG_KEY_GETOVERSTRIKEMODE	src/cgame/cg_public.h	/^  CG_KEY_GETOVERSTRIKEMODE,$/;"	e	enum:__anon230
CG_KEY_ISDOWN	src/cgame/cg_public.h	/^  CG_KEY_ISDOWN,$/;"	e	enum:__anon230
CG_KEY_KEYNUMTOSTRINGBUF	src/cgame/cg_public.h	/^  CG_KEY_KEYNUMTOSTRINGBUF,$/;"	e	enum:__anon230
CG_KEY_SETBINDING	src/cgame/cg_public.h	/^  CG_KEY_SETBINDING,$/;"	e	enum:__anon230
CG_KEY_SETCATCHER	src/cgame/cg_public.h	/^  CG_KEY_SETCATCHER,$/;"	e	enum:__anon230
CG_KEY_SETOVERSTRIKEMODE	src/cgame/cg_public.h	/^  CG_KEY_SETOVERSTRIKEMODE,$/;"	e	enum:__anon230
CG_KILLER	src/ui/menudef.h	137;"	d
CG_KeyBinding	src/cgame/cg_drawtools.c	/^char *CG_KeyBinding( const char *bind )$/;"	f
CG_KeyEvent	src/cgame/cg_draw.c	/^void CG_KeyEvent( int key, qboolean down )$/;"	f
CG_KeyNameForCommand	src/cgame/cg_tutorial.c	/^static const char *CG_KeyNameForCommand( const char *command )$/;"	f	file:
CG_LAGOMETER	src/ui/menudef.h	159;"	d
CG_LAST_ATTACKER	src/cgame/cg_public.h	/^  CG_LAST_ATTACKER,$/;"	e	enum:__anon231
CG_LITERAL_ARGS	src/cgame/cg_public.h	/^  CG_LITERAL_ARGS,$/;"	e	enum:__anon230
CG_LOAD_BUILDABLES	src/ui/menudef.h	144;"	d
CG_LOAD_BUILDABLES_LABEL	src/ui/menudef.h	145;"	d
CG_LOAD_CHARMODEL	src/ui/menudef.h	146;"	d
CG_LOAD_CHARMODEL_LABEL	src/ui/menudef.h	147;"	d
CG_LOAD_HOSTNAME	src/ui/menudef.h	151;"	d
CG_LOAD_LEVELNAME	src/ui/menudef.h	149;"	d
CG_LOAD_LEVELSHOT	src/ui/menudef.h	141;"	d
CG_LOAD_MEDIA	src/ui/menudef.h	142;"	d
CG_LOAD_MEDIA_LABEL	src/ui/menudef.h	143;"	d
CG_LOAD_MOTD	src/ui/menudef.h	150;"	d
CG_LOAD_OVERALL	src/ui/menudef.h	148;"	d
CG_LastAttacker	src/cgame/cg_main.c	/^int CG_LastAttacker( void )$/;"	f
CG_LaunchMissile	src/cgame/cg_ents.c	/^static void CG_LaunchMissile( centity_t *cent )$/;"	f	file:
CG_LerpValues	src/cgame/cg_particles.c	/^static float CG_LerpValues( float a, float b, float f )$/;"	f	file:
CG_Lev2ZapChain	src/cgame/cg_ents.c	/^static void CG_Lev2ZapChain( centity_t *cent )$/;"	f	file:
CG_Level2Zap	src/cgame/cg_event.c	/^static void CG_Level2Zap( entityState_t *es )$/;"	f	file:
CG_LightFlare	src/cgame/cg_ents.c	/^static void CG_LightFlare( centity_t *cent )$/;"	f	file:
CG_LightFromDirection	src/cgame/cg_players.c	/^int CG_LightFromDirection( vec3_t point, vec3_t direction )$/;"	f
CG_LightVertex	src/cgame/cg_trails.c	/^static void CG_LightVertex( vec3_t point, byte alpha, byte *rgba )$/;"	f	file:
CG_LightVerts	src/cgame/cg_players.c	/^int CG_LightVerts( vec3_t normal, int numVerts, polyVert_t *verts )$/;"	f
CG_LoadClientInfo	src/cgame/cg_players.c	/^static void CG_LoadClientInfo( clientInfo_t *ci )$/;"	f	file:
CG_LoadHudMenu	src/cgame/cg_main.c	/^void CG_LoadHudMenu( void )$/;"	f
CG_LoadMenus	src/cgame/cg_main.c	/^void CG_LoadMenus( const char *menuFile )$/;"	f
CG_LoadParticleSystems	src/cgame/cg_particles.c	/^void CG_LoadParticleSystems( void )$/;"	f
CG_LoadTrailSystems	src/cgame/cg_trails.c	/^void CG_LoadTrailSystems( void )$/;"	f
CG_Load_Menu	src/cgame/cg_main.c	/^qboolean CG_Load_Menu( char **p )$/;"	f
CG_MEMCPY	src/cgame/cg_public.h	/^  CG_MEMCPY,$/;"	e	enum:__anon230
CG_MEMORY_REMAINING	src/cgame/cg_public.h	/^  CG_MEMORY_REMAINING,$/;"	e	enum:__anon230
CG_MEMSET	src/cgame/cg_public.h	/^  CG_MEMSET = 200,$/;"	e	enum:__anon230
CG_MILLISECONDS	src/cgame/cg_public.h	/^  CG_MILLISECONDS,$/;"	e	enum:__anon230
CG_MOUSE_EVENT	src/cgame/cg_public.h	/^  CG_MOUSE_EVENT,$/;"	e	enum:__anon231
CG_MachinegunSpinAngle	src/cgame/cg_weapons.c	/^static float CG_MachinegunSpinAngle( centity_t *cent, qboolean firing )$/;"	f	file:
CG_MapRestart	src/cgame/cg_servercmds.c	/^static void CG_MapRestart( void )$/;"	f	file:
CG_MapTorsoToWeaponFrame	src/cgame/cg_weapons.c	/^static int CG_MapTorsoToWeaponFrame( clientInfo_t *ci, int frame )$/;"	f	file:
CG_Menu	src/cgame/cg_servercmds.c	/^void CG_Menu( int menu, int arg )$/;"	f
CG_Missile	src/cgame/cg_ents.c	/^static void CG_Missile( centity_t *cent )$/;"	f	file:
CG_MissileHitEntity	src/cgame/cg_weapons.c	/^void CG_MissileHitEntity( weapon_t weaponNum, weaponMode_t weaponMode,$/;"	f
CG_MissileHitWall	src/cgame/cg_weapons.c	/^void CG_MissileHitWall( weapon_t weaponNum, weaponMode_t weaponMode, int clientNum,$/;"	f
CG_ModelDoor	src/cgame/cg_animmapobj.c	/^void CG_ModelDoor( centity_t *cent )$/;"	f
CG_MouseEvent	src/cgame/cg_draw.c	/^void CG_MouseEvent( int x, int y )$/;"	f
CG_Mover	src/cgame/cg_ents.c	/^static void CG_Mover( centity_t *cent )$/;"	f	file:
CG_NewClientInfo	src/cgame/cg_players.c	/^void CG_NewClientInfo( int clientNum )$/;"	f
CG_NextWeapon_f	src/cgame/cg_weapons.c	/^void CG_NextWeapon_f( void )$/;"	f
CG_Obituary	src/cgame/cg_event.c	/^static void CG_Obituary( entityState_t *ent )$/;"	f	file:
CG_OffsetFirstPersonView	src/cgame/cg_view.c	/^void CG_OffsetFirstPersonView( void )$/;"	f
CG_OffsetShoulderView	src/cgame/cg_view.c	/^void CG_OffsetShoulderView( void )$/;"	f
CG_OffsetThirdPersonView	src/cgame/cg_view.c	/^void CG_OffsetThirdPersonView( void )$/;"	f
CG_OwnerDraw	src/cgame/cg_draw.c	/^void CG_OwnerDraw( float x, float y, float w, float h, float text_x,$/;"	f
CG_OwnerDrawHandleKey	src/cgame/cg_main.c	/^static qboolean CG_OwnerDrawHandleKey( int ownerDraw, int key )$/;"	f	file:
CG_OwnerDrawVisible	src/cgame/cg_main.c	/^static qboolean CG_OwnerDrawVisible( int parameter )$/;"	f	file:
CG_OwnerDrawWidth	src/cgame/cg_main.c	/^static int CG_OwnerDrawWidth( int ownerDraw, float scale )$/;"	f	file:
CG_PARSE_ADD_GLOBAL_DEFINE	src/cgame/cg_public.h	/^  CG_PARSE_ADD_GLOBAL_DEFINE,$/;"	e	enum:__anon230
CG_PARSE_FREE_SOURCE	src/cgame/cg_public.h	/^  CG_PARSE_FREE_SOURCE,$/;"	e	enum:__anon230
CG_PARSE_LOAD_SOURCE	src/cgame/cg_public.h	/^  CG_PARSE_LOAD_SOURCE,$/;"	e	enum:__anon230
CG_PARSE_READ_TOKEN	src/cgame/cg_public.h	/^  CG_PARSE_READ_TOKEN,$/;"	e	enum:__anon230
CG_PARSE_SOURCE_FILE_AND_LINE	src/cgame/cg_public.h	/^  CG_PARSE_SOURCE_FILE_AND_LINE,$/;"	e	enum:__anon230
CG_PLAYER_ALIEN_SENSE	src/ui/menudef.h	127;"	d
CG_PLAYER_AMMO_VALUE	src/ui/menudef.h	107;"	d
CG_PLAYER_BOOSTED	src/ui/menudef.h	125;"	d
CG_PLAYER_BOOST_BOLT	src/ui/menudef.h	118;"	d
CG_PLAYER_BUILD_TIMER	src/ui/menudef.h	109;"	d
CG_PLAYER_BUILD_TIMER_RING	src/ui/menudef.h	120;"	d
CG_PLAYER_CHARGE_BAR	src/ui/menudef.h	131;"	d
CG_PLAYER_CHARGE_BAR_BG	src/ui/menudef.h	130;"	d
CG_PLAYER_CLIPS_RING	src/ui/menudef.h	119;"	d
CG_PLAYER_CLIPS_VALUE	src/ui/menudef.h	108;"	d
CG_PLAYER_CREDITS_FRACTION	src/ui/menudef.h	135;"	d
CG_PLAYER_CREDITS_VALUE	src/ui/menudef.h	110;"	d
CG_PLAYER_CREDITS_VALUE_NOPAD	src/ui/menudef.h	111;"	d
CG_PLAYER_CROSSHAIR	src/ui/menudef.h	132;"	d
CG_PLAYER_CROSSHAIRNAMES	src/ui/menudef.h	161;"	d
CG_PLAYER_HEALTH	src/ui/menudef.h	105;"	d
CG_PLAYER_HEALTH_CROSS	src/ui/menudef.h	106;"	d
CG_PLAYER_HUMAN_SCANNER	src/ui/menudef.h	128;"	d
CG_PLAYER_LOCATION	src/ui/menudef.h	133;"	d
CG_PLAYER_POISON_BARBS	src/ui/menudef.h	126;"	d
CG_PLAYER_SELECT	src/ui/menudef.h	121;"	d
CG_PLAYER_SELECTTEXT	src/ui/menudef.h	122;"	d
CG_PLAYER_STAMINA	src/ui/menudef.h	112;"	d
CG_PLAYER_STAMINA_1	src/ui/menudef.h	113;"	d
CG_PLAYER_STAMINA_2	src/ui/menudef.h	114;"	d
CG_PLAYER_STAMINA_3	src/ui/menudef.h	115;"	d
CG_PLAYER_STAMINA_4	src/ui/menudef.h	116;"	d
CG_PLAYER_STAMINA_BOLT	src/ui/menudef.h	117;"	d
CG_PLAYER_USABLE_BUILDABLE	src/ui/menudef.h	129;"	d
CG_PLAYER_WALLCLIMBING	src/ui/menudef.h	124;"	d
CG_PLAYER_WEAPONICON	src/ui/menudef.h	123;"	d
CG_PRINT	src/cgame/cg_public.h	/^  CG_PRINT,$/;"	e	enum:__anon230
CG_PainBlend	src/cgame/cg_draw.c	/^static void CG_PainBlend( void )$/;"	f	file:
CG_PainEvent	src/cgame/cg_event.c	/^void CG_PainEvent( centity_t *cent, int health )$/;"	f
CG_ParseAnimationFile	src/cgame/cg_players.c	/^static qboolean CG_ParseAnimationFile( const char *filename, clientInfo_t *ci )$/;"	f	file:
CG_ParseBuildableAnimationFile	src/cgame/cg_buildable.c	/^static qboolean CG_ParseBuildableAnimationFile( const char *filename, buildable_t buildable )$/;"	f	file:
CG_ParseBuildableSoundFile	src/cgame/cg_buildable.c	/^static qboolean CG_ParseBuildableSoundFile( const char *filename, buildable_t buildable )$/;"	f	file:
CG_ParseColor	src/cgame/cg_particles.c	/^static qboolean CG_ParseColor( byte *c, char **text_p )$/;"	f	file:
CG_ParseCountdown	src/cgame/cg_servercmds.c	/^static void CG_ParseCountdown( void )$/;"	f	file:
CG_ParseDir	src/cgame/cg_particles.c	/^static qboolean CG_ParseDir( pMoveValues_t *pmv, char **text_p )$/;"	f	file:
CG_ParseFinal	src/cgame/cg_particles.c	/^static qboolean CG_ParseFinal( pLerpValues_t *plv, char **text_p )$/;"	f	file:
CG_ParseMenu	src/cgame/cg_main.c	/^void CG_ParseMenu( const char *menuFile )$/;"	f
CG_ParseParticle	src/cgame/cg_particles.c	/^static qboolean CG_ParseParticle( baseParticle_t *bp, char **text_p )$/;"	f	file:
CG_ParseParticleEjector	src/cgame/cg_particles.c	/^static qboolean CG_ParseParticleEjector( baseParticleEjector_t *bpe, char **text_p )$/;"	f	file:
CG_ParseParticleFile	src/cgame/cg_particles.c	/^static qboolean CG_ParseParticleFile( const char *fileName )$/;"	f	file:
CG_ParseParticleSystem	src/cgame/cg_particles.c	/^static qboolean CG_ParseParticleSystem( baseParticleSystem_t *bps, char **text_p, const char *name )$/;"	f	file:
CG_ParseScores	src/cgame/cg_servercmds.c	/^static void CG_ParseScores( void )$/;"	f	file:
CG_ParseServerinfo	src/cgame/cg_servercmds.c	/^void CG_ParseServerinfo( void )$/;"	f
CG_ParseTeamInfo	src/cgame/cg_servercmds.c	/^static void CG_ParseTeamInfo( void )$/;"	f	file:
CG_ParseTrailBeam	src/cgame/cg_trails.c	/^static qboolean CG_ParseTrailBeam( baseTrailBeam_t *btb, char **text_p )$/;"	f	file:
CG_ParseTrailBeamColor	src/cgame/cg_trails.c	/^static qboolean CG_ParseTrailBeamColor( byte *c, char **text_p )$/;"	f	file:
CG_ParseTrailFile	src/cgame/cg_trails.c	/^static qboolean CG_ParseTrailFile( const char *fileName )$/;"	f	file:
CG_ParseTrailSystem	src/cgame/cg_trails.c	/^static qboolean CG_ParseTrailSystem( baseTrailSystem_t *bts, char **text_p, const char *name )$/;"	f	file:
CG_ParseType	src/cgame/cg_particles.c	/^static qboolean CG_ParseType( pMoveType_t *pmt, char **text_p )$/;"	f	file:
CG_ParseValueAndVariance	src/cgame/cg_particles.c	/^static void CG_ParseValueAndVariance( char *token, float *value, float *variance, qboolean allowNegative )$/;"	f	file:
CG_ParseVoice	src/cgame/cg_servercmds.c	/^static void CG_ParseVoice( void )$/;"	f	file:
CG_ParseVoteStrings	src/cgame/cg_servercmds.c	/^void CG_ParseVoteStrings( int team, const char *conStr )$/;"	f
CG_ParseWarmup	src/cgame/cg_servercmds.c	/^static void CG_ParseWarmup( void )$/;"	f	file:
CG_ParseWarmupReady	src/cgame/cg_servercmds.c	/^static void CG_ParseWarmupReady( void )$/;"	f	file:
CG_ParseWeaponAnimationFile	src/cgame/cg_weapons.c	/^static qboolean CG_ParseWeaponAnimationFile( const char *filename, weaponInfo_t *weapon )$/;"	f	file:
CG_ParseWeaponFile	src/cgame/cg_weapons.c	/^static qboolean CG_ParseWeaponFile( const char *filename, weaponInfo_t *wi )$/;"	f	file:
CG_ParseWeaponModeSection	src/cgame/cg_weapons.c	/^static qboolean CG_ParseWeaponModeSection( weaponInfoMode_t *wim, char **text_p )$/;"	f	file:
CG_ParticleSystemEntity	src/cgame/cg_particles.c	/^void CG_ParticleSystemEntity( centity_t *cent )$/;"	f
CG_PlayBufferedSounds	src/cgame/cg_view.c	/^static void CG_PlayBufferedSounds( void )$/;"	f	file:
CG_PlayCinematic	src/cgame/cg_main.c	/^static int CG_PlayCinematic( const char *name, float x, float y, float w, float h )$/;"	f	file:
CG_Player	src/cgame/cg_players.c	/^void CG_Player( centity_t *cent )$/;"	f
CG_PlayerAngles	src/cgame/cg_players.c	/^static void CG_PlayerAngles( centity_t *cent, vec3_t srcAngles,$/;"	f	file:
CG_PlayerAnimation	src/cgame/cg_players.c	/^static void CG_PlayerAnimation( centity_t *cent, int *legsOld, int *legs, float *legsBackLerp,$/;"	f	file:
CG_PlayerCount	src/cgame/cg_main.c	/^int CG_PlayerCount( void )$/;"	f
CG_PlayerDisconnect	src/cgame/cg_players.c	/^void CG_PlayerDisconnect( vec3_t org )$/;"	f
CG_PlayerFloatSprite	src/cgame/cg_players.c	/^static void CG_PlayerFloatSprite( centity_t *cent, qhandle_t shader )$/;"	f	file:
CG_PlayerIsBuilder	src/cgame/cg_buildable.c	/^static qboolean CG_PlayerIsBuilder( buildable_t buildable )$/;"	f	file:
CG_PlayerNonSegAngles	src/cgame/cg_players.c	/^static void CG_PlayerNonSegAngles( centity_t *cent, vec3_t srcAngles, vec3_t nonSegAxis[ 3 ] )$/;"	f	file:
CG_PlayerNonSegAnimation	src/cgame/cg_players.c	/^static void CG_PlayerNonSegAnimation( centity_t *cent, int *nonSegOld,$/;"	f	file:
CG_PlayerShadow	src/cgame/cg_players.c	/^static qboolean CG_PlayerShadow( centity_t *cent, float *shadowPlane, class_t class )$/;"	f	file:
CG_PlayerSplash	src/cgame/cg_players.c	/^static void CG_PlayerSplash( centity_t *cent, class_t class )$/;"	f	file:
CG_PlayerSprites	src/cgame/cg_players.c	/^static void CG_PlayerSprites( centity_t *cent )$/;"	f	file:
CG_PlayerUpgrades	src/cgame/cg_players.c	/^static void CG_PlayerUpgrades( centity_t *cent, refEntity_t *torso )$/;"	f	file:
CG_PlayerWWSmoothing	src/cgame/cg_players.c	/^static void CG_PlayerWWSmoothing( centity_t *cent, vec3_t in[ 3 ], vec3_t out[ 3 ] )$/;"	f	file:
CG_PointContents	src/cgame/cg_predict.c	/^int   CG_PointContents( const vec3_t point, int passEntityNum )$/;"	f
CG_PoisonCloud_f	src/cgame/cg_servercmds.c	/^static void CG_PoisonCloud_f( void )$/;"	f	file:
CG_Portal	src/cgame/cg_ents.c	/^static void CG_Portal( centity_t *cent )$/;"	f	file:
CG_PositionAndOrientateBuildable	src/cgame/cg_buildable.c	/^static void CG_PositionAndOrientateBuildable( const vec3_t angles, const vec3_t inOrigin,$/;"	f	file:
CG_PositionEntityOnTag	src/cgame/cg_ents.c	/^void CG_PositionEntityOnTag( refEntity_t *entity, const refEntity_t *parent,$/;"	f
CG_PositionRotatedEntityOnTag	src/cgame/cg_ents.c	/^void CG_PositionRotatedEntityOnTag( refEntity_t *entity, const refEntity_t *parent,$/;"	f
CG_PrecacheClientInfo	src/cgame/cg_players.c	/^void CG_PrecacheClientInfo( class_t class, char *model, char *skin )$/;"	f
CG_PredictPlayerState	src/cgame/cg_predict.c	/^void CG_PredictPlayerState( void )$/;"	f
CG_PrependBeamNode	src/cgame/cg_trails.c	/^static trailBeamNode_t *CG_PrependBeamNode( trailBeam_t *tb )$/;"	f	file:
CG_PrevWeapon_f	src/cgame/cg_weapons.c	/^void CG_PrevWeapon_f( void )$/;"	f
CG_Print_f	src/cgame/cg_servercmds.c	/^static void CG_Print_f( void )$/;"	f	file:
CG_Printf	src/cgame/cg_main.c	/^void QDECL CG_Printf( const char *msg, ... )$/;"	f
CG_ProcessSnapshots	src/cgame/cg_snapshot.c	/^void CG_ProcessSnapshots( void )$/;"	f
CG_REAL_TIME	src/cgame/cg_public.h	/^  CG_REAL_TIME,$/;"	e	enum:__anon230
CG_REMOVECOMMAND	src/cgame/cg_public.h	/^  CG_REMOVECOMMAND,$/;"	e	enum:__anon230
CG_R_ADDADDITIVELIGHTTOSCENE	src/cgame/cg_public.h	/^  CG_R_ADDADDITIVELIGHTTOSCENE,$/;"	e	enum:__anon230
CG_R_ADDLIGHTTOSCENE	src/cgame/cg_public.h	/^  CG_R_ADDLIGHTTOSCENE,$/;"	e	enum:__anon230
CG_R_ADDPOLYSTOSCENE	src/cgame/cg_public.h	/^  CG_R_ADDPOLYSTOSCENE,$/;"	e	enum:__anon230
CG_R_ADDPOLYTOSCENE	src/cgame/cg_public.h	/^  CG_R_ADDPOLYTOSCENE,$/;"	e	enum:__anon230
CG_R_ADDREFENTITYTOSCENE	src/cgame/cg_public.h	/^  CG_R_ADDREFENTITYTOSCENE,$/;"	e	enum:__anon230
CG_R_CLEARSCENE	src/cgame/cg_public.h	/^  CG_R_CLEARSCENE,$/;"	e	enum:__anon230
CG_R_DRAWSTRETCHPIC	src/cgame/cg_public.h	/^  CG_R_DRAWSTRETCHPIC,$/;"	e	enum:__anon230
CG_R_INPVS	src/cgame/cg_public.h	/^  CG_R_INPVS,$/;"	e	enum:__anon230
CG_R_LERPTAG	src/cgame/cg_public.h	/^  CG_R_LERPTAG,$/;"	e	enum:__anon230
CG_R_LIGHTFORPOINT	src/cgame/cg_public.h	/^  CG_R_LIGHTFORPOINT,$/;"	e	enum:__anon230
CG_R_LOADWORLDMAP	src/cgame/cg_public.h	/^  CG_R_LOADWORLDMAP,$/;"	e	enum:__anon230
CG_R_MODELBOUNDS	src/cgame/cg_public.h	/^  CG_R_MODELBOUNDS,$/;"	e	enum:__anon230
CG_R_REGISTERFONT	src/cgame/cg_public.h	/^  CG_R_REGISTERFONT,$/;"	e	enum:__anon230
CG_R_REGISTERMODEL	src/cgame/cg_public.h	/^  CG_R_REGISTERMODEL,$/;"	e	enum:__anon230
CG_R_REGISTERSHADER	src/cgame/cg_public.h	/^  CG_R_REGISTERSHADER,$/;"	e	enum:__anon230
CG_R_REGISTERSHADERNOMIP	src/cgame/cg_public.h	/^  CG_R_REGISTERSHADERNOMIP,$/;"	e	enum:__anon230
CG_R_REGISTERSKIN	src/cgame/cg_public.h	/^  CG_R_REGISTERSKIN,$/;"	e	enum:__anon230
CG_R_REMAP_SHADER	src/cgame/cg_public.h	/^  CG_R_REMAP_SHADER,$/;"	e	enum:__anon230
CG_R_RENDERSCENE	src/cgame/cg_public.h	/^  CG_R_RENDERSCENE,$/;"	e	enum:__anon230
CG_R_SETCLIPREGION	src/cgame/cg_public.h	/^  CG_R_SETCLIPREGION,$/;"	e	enum:__anon230
CG_R_SETCOLOR	src/cgame/cg_public.h	/^  CG_R_SETCOLOR,$/;"	e	enum:__anon230
CG_Radix	src/cgame/cg_particles.c	/^static void CG_Radix( int bits, int size, particle_t **source, particle_t **dest )$/;"	f	file:
CG_RadixSort	src/cgame/cg_particles.c	/^static void CG_RadixSort( particle_t **source, particle_t **temp, int size )$/;"	f	file:
CG_RandomiseValue	src/cgame/cg_particles.c	/^static float CG_RandomiseValue( float value, float variance )$/;"	f	file:
CG_RangeMarker	src/cgame/cg_ents.c	/^void CG_RangeMarker( centity_t *cent )$/;"	f
CG_ReadNextSnapshot	src/cgame/cg_snapshot.c	/^static snapshot_t *CG_ReadNextSnapshot( void )$/;"	f	file:
CG_RegisterClientModelname	src/cgame/cg_players.c	/^static qboolean CG_RegisterClientModelname( clientInfo_t *ci, const char *modelName, const char *skinName )$/;"	f	file:
CG_RegisterClientSkin	src/cgame/cg_players.c	/^static qboolean CG_RegisterClientSkin( clientInfo_t *ci, const char *modelName, const char *skinName )$/;"	f	file:
CG_RegisterClients	src/cgame/cg_main.c	/^static void CG_RegisterClients( void )$/;"	f	file:
CG_RegisterCvars	src/cgame/cg_main.c	/^void CG_RegisterCvars( void )$/;"	f
CG_RegisterGraphics	src/cgame/cg_main.c	/^static void CG_RegisterGraphics( void )$/;"	f	file:
CG_RegisterParticleSystem	src/cgame/cg_particles.c	/^qhandle_t CG_RegisterParticleSystem( char *name )$/;"	f
CG_RegisterSounds	src/cgame/cg_main.c	/^static void CG_RegisterSounds( void )$/;"	f	file:
CG_RegisterTrailSystem	src/cgame/cg_trails.c	/^qhandle_t CG_RegisterTrailSystem( char *name )$/;"	f
CG_RegisterUpgrade	src/cgame/cg_weapons.c	/^void CG_RegisterUpgrade( int upgradeNum )$/;"	f
CG_RegisterWeapon	src/cgame/cg_weapons.c	/^void CG_RegisterWeapon( int weaponNum )$/;"	f
CG_RemoveNotifyLine	src/cgame/cg_main.c	/^void CG_RemoveNotifyLine( void )$/;"	f
CG_RenderBeam	src/cgame/cg_trails.c	/^static void CG_RenderBeam( trailBeam_t *tb )$/;"	f	file:
CG_RenderParticle	src/cgame/cg_particles.c	/^static void CG_RenderParticle( particle_t *p )$/;"	f	file:
CG_RequestScores	src/cgame/cg_consolecmds.c	/^qboolean CG_RequestScores( void )$/;"	f
CG_ResetEntity	src/cgame/cg_snapshot.c	/^static void CG_ResetEntity( centity_t *cent )$/;"	f	file:
CG_ResetPainBlend	src/cgame/cg_draw.c	/^void CG_ResetPainBlend( void )$/;"	f
CG_ResetPlayerEntity	src/cgame/cg_players.c	/^void CG_ResetPlayerEntity( centity_t *cent )$/;"	f
CG_Respawn	src/cgame/cg_playerstate.c	/^void CG_Respawn( void )$/;"	f
CG_RunBuildableLerpFrame	src/cgame/cg_buildable.c	/^static void CG_RunBuildableLerpFrame( centity_t *cent )$/;"	f	file:
CG_RunCinematicFrame	src/cgame/cg_main.c	/^static void CG_RunCinematicFrame( int handle )$/;"	f	file:
CG_RunLerpFrame	src/cgame/cg_animation.c	/^void CG_RunLerpFrame( lerpFrame_t *lf, float scale )$/;"	f
CG_RunMenuScript	src/cgame/cg_draw.c	/^void CG_RunMenuScript( char **args )$/;"	f
CG_RunPlayerLerpFrame	src/cgame/cg_players.c	/^static void CG_RunPlayerLerpFrame( clientInfo_t *ci, lerpFrame_t *lf, int newAnimation, float speedScale )$/;"	f	file:
CG_SENDCLIENTCOMMAND	src/cgame/cg_public.h	/^  CG_SENDCLIENTCOMMAND,$/;"	e	enum:__anon230
CG_SENDCONSOLECOMMAND	src/cgame/cg_public.h	/^  CG_SENDCONSOLECOMMAND,$/;"	e	enum:__anon230
CG_SETUSERCMDVALUE	src/cgame/cg_public.h	/^  CG_SETUSERCMDVALUE,$/;"	e	enum:__anon230
CG_SHUTDOWN	src/cgame/cg_public.h	/^  CG_SHUTDOWN,$/;"	e	enum:__anon231
CG_SIN	src/cgame/cg_public.h	/^  CG_SIN,$/;"	e	enum:__anon230
CG_SNAPSHOT	src/ui/menudef.h	158;"	d
CG_SNAPVECTOR	src/cgame/cg_public.h	/^  CG_SNAPVECTOR,$/;"	e	enum:__anon230
CG_SPECTATORS	src/ui/menudef.h	138;"	d
CG_SPEEDOMETER	src/ui/menudef.h	160;"	d
CG_SQRT	src/cgame/cg_public.h	/^  CG_SQRT,$/;"	e	enum:__anon230
CG_STAGE_REPORT_TEXT	src/ui/menudef.h	162;"	d
CG_STRNCPY	src/cgame/cg_public.h	/^  CG_STRNCPY,$/;"	e	enum:__anon230
CG_S_ADDLOOPINGSOUND	src/cgame/cg_public.h	/^  CG_S_ADDLOOPINGSOUND,$/;"	e	enum:__anon230
CG_S_ADDREALLOOPINGSOUND	src/cgame/cg_public.h	/^  CG_S_ADDREALLOOPINGSOUND,$/;"	e	enum:__anon230
CG_S_CLEARLOOPINGSOUNDS	src/cgame/cg_public.h	/^  CG_S_CLEARLOOPINGSOUNDS,$/;"	e	enum:__anon230
CG_S_REGISTERSOUND	src/cgame/cg_public.h	/^  CG_S_REGISTERSOUND,$/;"	e	enum:__anon230
CG_S_RESPATIALIZE	src/cgame/cg_public.h	/^  CG_S_RESPATIALIZE,$/;"	e	enum:__anon230
CG_S_SOUNDDURATION	src/cgame/cg_public.h	/^  CG_S_SOUNDDURATION,$/;"	e	enum:__anon230
CG_S_STARTBACKGROUNDTRACK	src/cgame/cg_public.h	/^  CG_S_STARTBACKGROUNDTRACK,$/;"	e	enum:__anon230
CG_S_STARTLOCALSOUND	src/cgame/cg_public.h	/^  CG_S_STARTLOCALSOUND,$/;"	e	enum:__anon230
CG_S_STARTSOUND	src/cgame/cg_public.h	/^  CG_S_STARTSOUND,$/;"	e	enum:__anon230
CG_S_STOPBACKGROUNDTRACK	src/cgame/cg_public.h	/^  CG_S_STOPBACKGROUNDTRACK,$/;"	e	enum:__anon230
CG_S_STOPLOOPINGSOUND	src/cgame/cg_public.h	/^  CG_S_STOPLOOPINGSOUND,$/;"	e	enum:__anon230
CG_S_UPDATEENTITYPOSITION	src/cgame/cg_public.h	/^  CG_S_UPDATEENTITYPOSITION,$/;"	e	enum:__anon230
CG_Say	src/cgame/cg_servercmds.c	/^static void CG_Say( int clientNum, saymode_t mode, const char *text )$/;"	f	file:
CG_ScalePainBlendTCs	src/cgame/cg_draw.c	/^static void CG_ScalePainBlendTCs( float* s1, float *t1, float *s2, float *t2 )$/;"	f	file:
CG_ScanForCrosshairEntity	src/cgame/cg_draw.c	/^static void CG_ScanForCrosshairEntity( void )$/;"	f	file:
CG_ScanForExistingClientInfo	src/cgame/cg_players.c	/^static qboolean CG_ScanForExistingClientInfo( clientInfo_t *ci )$/;"	f	file:
CG_Scanner	src/cgame/cg_scanner.c	/^void CG_Scanner( rectDef_t *rect, qhandle_t shader, vec4_t color )$/;"	f
CG_ScoresDown_f	src/cgame/cg_consolecmds.c	/^static void CG_ScoresDown_f( void )$/;"	f	file:
CG_ScoresUp_f	src/cgame/cg_consolecmds.c	/^static void CG_ScoresUp_f( void )$/;"	f	file:
CG_ServerCloseMenus_f	src/cgame/cg_servercmds.c	/^static void CG_ServerCloseMenus_f( void )$/;"	f	file:
CG_ServerCommand	src/cgame/cg_servercmds.c	/^static void CG_ServerCommand( void )$/;"	f	file:
CG_ServerMenu_f	src/cgame/cg_servercmds.c	/^static void CG_ServerMenu_f( void )$/;"	f	file:
CG_SetAttachmentCent	src/cgame/cg_attachment.c	/^void CG_SetAttachmentCent( attachment_t *a, centity_t *cent )$/;"	f
CG_SetAttachmentOffset	src/cgame/cg_attachment.c	/^void CG_SetAttachmentOffset( attachment_t *a, vec3_t v )$/;"	f
CG_SetAttachmentParticle	src/cgame/cg_attachment.c	/^void CG_SetAttachmentParticle( attachment_t *a, particle_t *p )$/;"	f
CG_SetAttachmentPoint	src/cgame/cg_attachment.c	/^void CG_SetAttachmentPoint( attachment_t *a, vec3_t v )$/;"	f
CG_SetAttachmentTag	src/cgame/cg_attachment.c	/^void CG_SetAttachmentTag( attachment_t *a, refEntity_t parent,$/;"	f
CG_SetBuildableLerpFrameAnimation	src/cgame/cg_buildable.c	/^static void CG_SetBuildableLerpFrameAnimation( buildable_t buildable, lerpFrame_t *lf, int newAnimation )$/;"	f	file:
CG_SetClipRegion	src/cgame/cg_drawtools.c	/^void CG_SetClipRegion( float x, float y, float w, float h )$/;"	f
CG_SetConfigValues	src/cgame/cg_servercmds.c	/^void CG_SetConfigValues( void )$/;"	f
CG_SetEntitySoundPosition	src/cgame/cg_ents.c	/^void CG_SetEntitySoundPosition( centity_t *cent )$/;"	f
CG_SetInitialSnapshot	src/cgame/cg_snapshot.c	/^void CG_SetInitialSnapshot( snapshot_t *snap )$/;"	f
CG_SetLerpFrameAnimation	src/cgame/cg_players.c	/^static void CG_SetLerpFrameAnimation( clientInfo_t *ci, lerpFrame_t *lf, int newAnimation )$/;"	f	file:
CG_SetNextSnap	src/cgame/cg_snapshot.c	/^static void CG_SetNextSnap( snapshot_t *snap )$/;"	f	file:
CG_SetParticleSystemLastNormal	src/cgame/cg_particles.c	/^void CG_SetParticleSystemLastNormal( particleSystem_t *ps, const float *normal )$/;"	f
CG_SetParticleSystemNormal	src/cgame/cg_particles.c	/^void CG_SetParticleSystemNormal( particleSystem_t *ps, vec3_t normal )$/;"	f
CG_SetScoreSelection	src/cgame/cg_main.c	/^void CG_SetScoreSelection( void *p )$/;"	f
CG_SetUIVars	src/cgame/cg_main.c	/^static void CG_SetUIVars( void )$/;"	f	file:
CG_SetWeaponLerpFrameAnimation	src/cgame/cg_weapons.c	/^static void CG_SetWeaponLerpFrameAnimation( weapon_t weapon, lerpFrame_t *lf, int newAnimation )$/;"	f	file:
CG_ShaderStateChanged	src/cgame/cg_servercmds.c	/^void CG_ShaderStateChanged( void )$/;"	f
CG_ShotgunFire	src/cgame/cg_weapons.c	/^void CG_ShotgunFire( entityState_t *es )$/;"	f
CG_ShotgunPattern	src/cgame/cg_weapons.c	/^static void CG_ShotgunPattern( vec3_t origin, vec3_t origin2, int seed, int otherEntNum )$/;"	f	file:
CG_ShowTeamMenu	src/cgame/cg_draw.c	/^void CG_ShowTeamMenu( void )$/;"	f
CG_Shutdown	src/cgame/cg_main.c	/^void CG_Shutdown( void )$/;"	f
CG_SizeDown_f	src/cgame/cg_consolecmds.c	/^static void CG_SizeDown_f( void )$/;"	f	file:
CG_SizeUp_f	src/cgame/cg_consolecmds.c	/^static void CG_SizeUp_f( void )$/;"	f	file:
CG_SortDistance	src/cgame/cg_buildable.c	/^static int CG_SortDistance( const void *a, const void *b )$/;"	f	file:
CG_SpawnNewParticle	src/cgame/cg_particles.c	/^static particle_t *CG_SpawnNewParticle( baseParticle_t *bp, particleEjector_t *parent )$/;"	f	file:
CG_SpawnNewParticleEjector	src/cgame/cg_particles.c	/^static particleEjector_t *CG_SpawnNewParticleEjector( baseParticleEjector_t *bpe,$/;"	f	file:
CG_SpawnNewParticleSystem	src/cgame/cg_particles.c	/^particleSystem_t *CG_SpawnNewParticleSystem( qhandle_t psHandle )$/;"	f
CG_SpawnNewParticles	src/cgame/cg_particles.c	/^static void CG_SpawnNewParticles( void )$/;"	f	file:
CG_SpawnNewTrailBeam	src/cgame/cg_trails.c	/^static trailBeam_t *CG_SpawnNewTrailBeam( baseTrailBeam_t *btb,$/;"	f	file:
CG_SpawnNewTrailSystem	src/cgame/cg_trails.c	/^trailSystem_t *CG_SpawnNewTrailSystem( qhandle_t psHandle )$/;"	f
CG_Speaker	src/cgame/cg_ents.c	/^static void CG_Speaker( centity_t *cent )$/;"	f	file:
CG_SpectatorText	src/cgame/cg_tutorial.c	/^static void CG_SpectatorText( char *text, playerState_t *ps )$/;"	f	file:
CG_SpreadVector	src/cgame/cg_particles.c	/^static void CG_SpreadVector( vec3_t v, float spread )$/;"	f	file:
CG_StartMusic	src/cgame/cg_main.c	/^void CG_StartMusic( void )$/;"	f
CG_StatusMessages	src/cgame/cg_players.c	/^static void CG_StatusMessages( clientInfo_t *new, clientInfo_t *old )$/;"	f	file:
CG_StepOffset	src/cgame/cg_view.c	/^static void CG_StepOffset( void )$/;"	f	file:
CG_StopCinematic	src/cgame/cg_main.c	/^static void CG_StopCinematic( int handle )$/;"	f	file:
CG_SublimeMarkedBuildables	src/cgame/cg_predict.c	/^void CG_SublimeMarkedBuildables( qboolean sublime )$/;"	f
CG_SwingAngles	src/cgame/cg_players.c	/^static void CG_SwingAngles( float destination, float swingTolerance, float clampTolerance,$/;"	f	file:
CG_TEAMOVERLAY	src/ui/menudef.h	134;"	d
CG_TESTPRINTFLOAT	src/cgame/cg_public.h	/^  CG_TESTPRINTFLOAT,$/;"	e	enum:__anon230
CG_TESTPRINTINT	src/cgame/cg_public.h	/^  CG_TESTPRINTINT,$/;"	e	enum:__anon230
CG_TIMER	src/ui/menudef.h	155;"	d
CG_TIMER_MINS	src/ui/menudef.h	156;"	d
CG_TIMER_SECS	src/ui/menudef.h	157;"	d
CG_TUTORIAL	src/ui/menudef.h	169;"	d
CG_TestGun_f	src/cgame/cg_view.c	/^void CG_TestGun_f( void )$/;"	f
CG_TestModelNextFrame_f	src/cgame/cg_view.c	/^void CG_TestModelNextFrame_f( void )$/;"	f
CG_TestModelNextSkin_f	src/cgame/cg_view.c	/^void CG_TestModelNextSkin_f( void )$/;"	f
CG_TestModelPrevFrame_f	src/cgame/cg_view.c	/^void CG_TestModelPrevFrame_f( void )$/;"	f
CG_TestModelPrevSkin_f	src/cgame/cg_view.c	/^void CG_TestModelPrevSkin_f( void )$/;"	f
CG_TestModel_f	src/cgame/cg_view.c	/^void CG_TestModel_f( void )$/;"	f
CG_TestPS_f	src/cgame/cg_particles.c	/^void CG_TestPS_f( void )$/;"	f
CG_TestTS_f	src/cgame/cg_trails.c	/^void CG_TestTS_f( void )$/;"	f
CG_Text_PaintWithCursor	src/cgame/cg_main.c	/^void CG_Text_PaintWithCursor( float x, float y, float scale, vec4_t color, const char *text,$/;"	f
CG_TileClear	src/cgame/cg_drawtools.c	/^void CG_TileClear( void )$/;"	f
CG_TileClearBox	src/cgame/cg_drawtools.c	/^static void CG_TileClearBox( int x, int y, int w, int h, qhandle_t hShader )$/;"	f	file:
CG_TouchTriggerPrediction	src/cgame/cg_predict.c	/^static void CG_TouchTriggerPrediction( void )$/;"	f	file:
CG_Trace	src/cgame/cg_predict.c	/^void  CG_Trace( trace_t *result, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end,$/;"	f
CG_Tracer	src/cgame/cg_weapons.c	/^void CG_Tracer( vec3_t source, vec3_t dest )$/;"	f
CG_TransitionEntity	src/cgame/cg_snapshot.c	/^static void CG_TransitionEntity( centity_t *cent )$/;"	f	file:
CG_TransitionPlayerState	src/cgame/cg_playerstate.c	/^void CG_TransitionPlayerState( playerState_t *ps, playerState_t *ops )$/;"	f
CG_TransitionSnapshot	src/cgame/cg_snapshot.c	/^static void CG_TransitionSnapshot( void )$/;"	f	file:
CG_TutorialText	src/cgame/cg_tutorial.c	/^const char *CG_TutorialText( void )$/;"	f
CG_UIMenu_f	src/cgame/cg_consolecmds.c	/^static void CG_UIMenu_f( void )$/;"	f	file:
CG_UPDATESCREEN	src/cgame/cg_public.h	/^  CG_UPDATESCREEN,$/;"	e	enum:__anon230
CG_UnregisterCommands	src/cgame/cg_servercmds.c	/^void CG_UnregisterCommands( void )$/;"	f
CG_UpdateBeam	src/cgame/cg_trails.c	/^static void CG_UpdateBeam( trailBeam_t *tb )$/;"	f	file:
CG_UpdateBuildableRangeMarkerMask	src/cgame/cg_main.c	/^void CG_UpdateBuildableRangeMarkerMask( void )$/;"	f
CG_UpdateCvars	src/cgame/cg_main.c	/^void CG_UpdateCvars( void )$/;"	f
CG_UpdateEntityPositions	src/cgame/cg_scanner.c	/^void CG_UpdateEntityPositions( void )$/;"	f
CG_UpdateMediaFraction	src/cgame/cg_draw.c	/^void CG_UpdateMediaFraction( float newFract )$/;"	f
CG_UpgradeSelectable	src/cgame/cg_weapons.c	/^static qboolean CG_UpgradeSelectable( upgrade_t upgrade )$/;"	f	file:
CG_VOIP_STRING	src/cgame/cg_public.h	/^  CG_VOIP_STRING$/;"	e	enum:__anon231
CG_Viewpos_f	src/cgame/cg_consolecmds.c	/^static void CG_Viewpos_f( void )$/;"	f	file:
CG_VoIPString	src/cgame/cg_main.c	/^static char *CG_VoIPString( void )$/;"	f	file:
CG_VoiceTrack	src/cgame/cg_servercmds.c	/^static voiceTrack_t *CG_VoiceTrack( char *voice, int cmd, int track )$/;"	f	file:
CG_WARMUP	src/ui/menudef.h	192;"	d
CG_WARMUP_ALIENS_READY	src/ui/menudef.h	194;"	d
CG_WARMUP_ALIENS_READY_HDR	src/ui/menudef.h	197;"	d
CG_WARMUP_HUMANS_READY	src/ui/menudef.h	195;"	d
CG_WARMUP_HUMANS_READY_HDR	src/ui/menudef.h	196;"	d
CG_WARMUP_PLAYER_READY	src/ui/menudef.h	193;"	d
CG_WeaponAnimation	src/cgame/cg_weapons.c	/^static void CG_WeaponAnimation( centity_t *cent, int *old, int *now, float *backLerp )$/;"	f	file:
CG_WeaponSelectable	src/cgame/cg_weapons.c	/^static qboolean CG_WeaponSelectable( weapon_t weapon )$/;"	f	file:
CG_Weapon_f	src/cgame/cg_weapons.c	/^void CG_Weapon_f( void )$/;"	f
CG_WorldToScreen	src/cgame/cg_drawtools.c	/^qboolean CG_WorldToScreen( vec3_t point, float *x, float *y )$/;"	f
CG_addSmoothOp	src/cgame/cg_view.c	/^void CG_addSmoothOp( vec3_t rotAxis, float rotAngle, float timeMod )$/;"	f
CG_scrollScoresDown_f	src/cgame/cg_consolecmds.c	/^static void CG_scrollScoresDown_f( void )$/;"	f	file:
CG_scrollScoresUp_f	src/cgame/cg_consolecmds.c	/^static void CG_scrollScoresUp_f( void )$/;"	f	file:
CG_smoothWJTransitions	src/cgame/cg_view.c	/^static void CG_smoothWJTransitions( playerState_t *ps, const vec3_t in, vec3_t out )$/;"	f	file:
CG_smoothWWTransitions	src/cgame/cg_view.c	/^static void CG_smoothWWTransitions( playerState_t *ps, const vec3_t in, vec3_t out )$/;"	f	file:
CHAINGUN_BULLETS	src/game/tremulous.h	434;"	d
CHAINGUN_DMG	src/game/tremulous.h	438;"	d
CHAINGUN_K_SCALE	src/game/tremulous.h	436;"	d
CHAINGUN_PRICE	src/game/tremulous.h	433;"	d
CHAINGUN_REPEAT	src/game/tremulous.h	435;"	d
CHAINGUN_SPREAD	src/game/tremulous.h	437;"	d
CHALLENGE_KEY	src/master/messages.c	403;"	d	file:
CHALLENGE_MAX_LENGTH	src/master/servers.h	39;"	d
CHALLENGE_MIN_LENGTH	src/master/servers.h	38;"	d
CHAN_ANNOUNCER	src/qcommon/q_shared.h	/^	CHAN_ANNOUNCER		\/\/ announcer voices, etc$/;"	e	enum:__anon473
CHAN_AUTO	src/qcommon/q_shared.h	/^	CHAN_AUTO,$/;"	e	enum:__anon473
CHAN_BODY	src/qcommon/q_shared.h	/^	CHAN_BODY,$/;"	e	enum:__anon473
CHAN_ITEM	src/qcommon/q_shared.h	/^	CHAN_ITEM,$/;"	e	enum:__anon473
CHAN_LOCAL	src/qcommon/q_shared.h	/^	CHAN_LOCAL,		\/\/ menu sounds, etc$/;"	e	enum:__anon473
CHAN_LOCAL_SOUND	src/qcommon/q_shared.h	/^	CHAN_LOCAL_SOUND,	\/\/ chat messages, etc$/;"	e	enum:__anon473
CHAN_VOICE	src/qcommon/q_shared.h	/^	CHAN_VOICE,$/;"	e	enum:__anon473
CHAN_WEAPON	src/qcommon/q_shared.h	/^	CHAN_WEAPON,$/;"	e	enum:__anon473
CHARGE_BAR_CAP_SIZE	src/cgame/cg_draw.c	990;"	d	file:
CHARGE_BAR_FADE_RATE	src/cgame/cg_draw.c	968;"	d	file:
CHAR_BIT	src/game/bg_lib.h	43;"	d
CHAR_HEIGHT	src/cgame/cg_local.h	70;"	d
CHAR_WIDTH	src/cgame/cg_local.h	69;"	d
CHASING_STRING	src/cgame/cg_draw.c	1370;"	d	file:
CHECK_PAGE	src/server/sqlite3.c	45200;"	d	file:
CHECK_PAGE	src/server/sqlite3.c	45211;"	d	file:
CIN_CloseAllVideos	src/client/cl_cin.c	/^void CIN_CloseAllVideos(void) {$/;"	f
CIN_DrawCinematic	src/client/cl_cin.c	/^void CIN_DrawCinematic (int handle) {$/;"	f
CIN_HEIGHT	src/client/cl_cin.c	/^	int					CIN_WIDTH, CIN_HEIGHT;$/;"	m	struct:__anon100	file:
CIN_HandleForVideo	src/client/cl_cin.c	/^static int CIN_HandleForVideo(void) {$/;"	f	file:
CIN_PlayCinematic	src/client/cl_cin.c	/^int CIN_PlayCinematic( const char *arg, int x, int y, int w, int h, int systemBits ) {$/;"	f
CIN_PlayCinematic	src/renderercommon/tr_public.h	/^	int		(*CIN_PlayCinematic)( const char *arg0, int xpos, int ypos, int width, int height, int bits);$/;"	m	struct:__anon109
CIN_ResampleCinematic	src/client/cl_cin.c	/^void CIN_ResampleCinematic(int handle, int *buf2) {$/;"	f
CIN_RunCinematic	src/client/cl_cin.c	/^e_status CIN_RunCinematic (int handle)$/;"	f
CIN_RunCinematic	src/renderercommon/tr_public.h	/^	e_status (*CIN_RunCinematic) (int handle);$/;"	m	struct:__anon109
CIN_SetExtents	src/client/cl_cin.c	/^void CIN_SetExtents (int handle, int x, int y, int w, int h) {$/;"	f
CIN_SetLooping	src/client/cl_cin.c	/^void CIN_SetLooping(int handle, qboolean loop) {$/;"	f
CIN_StopCinematic	src/client/cl_cin.c	/^e_status CIN_StopCinematic(int handle) {$/;"	f
CIN_UploadCinematic	src/client/cl_cin.c	/^void CIN_UploadCinematic(int handle) {$/;"	f
CIN_UploadCinematic	src/renderercommon/tr_public.h	/^	void	(*CIN_UploadCinematic)(int handle);$/;"	m	struct:__anon109
CIN_WIDTH	src/client/cl_cin.c	/^	int					CIN_WIDTH, CIN_HEIGHT;$/;"	m	struct:__anon100	file:
CIN_hold	src/qcommon/q_shared.h	334;"	d
CIN_loop	src/qcommon/q_shared.h	333;"	d
CIN_shader	src/qcommon/q_shared.h	336;"	d
CIN_silent	src/qcommon/q_shared.h	335;"	d
CIN_system	src/qcommon/q_shared.h	332;"	d
CIRC	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
CIRC1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
CInstIter	src/server/sqlite3.c	/^struct CInstIter {$/;"	s	file:
CInstIter	src/server/sqlite3.c	/^typedef struct CInstIter CInstIter;$/;"	t	typeref:struct:CInstIter	file:
CKCNSTRNT_COLUMN	src/server/sqlite3.c	104599;"	d	file:
CKCNSTRNT_ROWID	src/server/sqlite3.c	104600;"	d	file:
CKET	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
CLAMP	src/renderergl2/tr_extramath.h	96;"	d
CLEARBIT	src/server/sqlite3.c	41291;"	d	file:
CLIENTBIN	GNUmakefile	/^CLIENTBIN=tremulous$/;"	m
CLIENT_EXTRA_FILES	GNUmakefile	/^CLIENT_EXTRA_FILES=$/;"	m
CLIENT_LIBS	GNUmakefile	/^  CLIENT_LIBS = -lgdi32 -lole32$/;"	m
CLIENT_LIBS	GNUmakefile	/^  CLIENT_LIBS =$/;"	m
CLIENT_LIBS	GNUmakefile	/^  CLIENT_LIBS=$(SDL_LIBS)$/;"	m
CLIENT_LIBS	GNUmakefile	/^  CLIENT_LIBS=$/;"	m
CLIENT_LIBS	GNUmakefile	/^  CLIENT_LIBS=-L\/usr\/X11\/$(LIB) $(SDL_LIBS) \\$/;"	m
CLIENT_WINDOW_ICON	src/sdl/sdl_icon.h	/^} CLIENT_WINDOW_ICON = {$/;"	v	typeref:struct:__anon378
CLIENT_WINDOW_MIN_TITLE	src/qcommon/q_shared.h	37;"	d
CLIENT_WINDOW_TITLE	src/qcommon/q_shared.h	36;"	d
CLIP_EPSILON	src/qcommon/cm_polylib.h	39;"	d
CL_AddCgameCommand	src/client/cl_cgame.c	/^void CL_AddCgameCommand( const char *cmdName ) {$/;"	f
CL_AddReliableCommand	src/client/cl_main.c	/^void CL_AddReliableCommand(const char *cmd, qboolean isDisconnectCmd)$/;"	f
CL_AdjustAngles	src/client/cl_input.c	/^void CL_AdjustAngles( void ) {$/;"	f
CL_AdjustTimeDelta	src/client/cl_cgame.c	/^void CL_AdjustTimeDelta( void ) {$/;"	f
CL_BeginDownload	src/client/cl_main.c	/^void CL_BeginDownload( const char *localName, const char *remoteName ) {$/;"	f
CL_BindUICommand	src/client/cl_keys.c	/^static qboolean CL_BindUICommand( const char *cmd ) {$/;"	f	file:
CL_CDDialog	src/client/cl_main.c	/^void CL_CDDialog( void ) {$/;"	f
CL_CDDialog	src/null/null_client.c	/^void CL_CDDialog( void ) {$/;"	f
CL_CGameRendering	src/client/cl_cgame.c	/^void CL_CGameRendering( stereoFrame_t stereo ) {$/;"	f
CL_CM_LoadMap	src/client/cl_cgame.c	/^void CL_CM_LoadMap( const char *mapname ) {$/;"	f
CL_CaptureVoip	src/client/cl_main.c	/^void CL_CaptureVoip(void)$/;"	f	file:
CL_CgameSystemCalls	src/client/cl_cgame.c	/^intptr_t CL_CgameSystemCalls( intptr_t *args ) {$/;"	f
CL_CharEvent	src/client/cl_keys.c	/^void CL_CharEvent( int key ) {$/;"	f
CL_CharEvent	src/null/null_client.c	/^void CL_CharEvent( int key ) {$/;"	f
CL_CheckFileSize	src/client/cl_avi.c	/^static qboolean CL_CheckFileSize( int bytesToAdd )$/;"	f	file:
CL_CheckForResend	src/client/cl_main.c	/^void CL_CheckForResend( void ) {$/;"	f
CL_CheckPaused	src/client/cl_main.c	/^qboolean CL_CheckPaused(void)$/;"	f
CL_CheckTimeout	src/client/cl_main.c	/^void CL_CheckTimeout( void ) {$/;"	f
CL_CheckUserinfo	src/client/cl_main.c	/^void CL_CheckUserinfo( void ) {$/;"	f
CL_ClearMemory	src/client/cl_main.c	/^void CL_ClearMemory(qboolean shutdownRef)$/;"	f
CL_ClearPing	src/client/cl_main.c	/^void CL_ClearPing( int n )$/;"	f
CL_ClearState	src/client/cl_main.c	/^void CL_ClearState (void) {$/;"	f
CL_Clientinfo_f	src/client/cl_main.c	/^void CL_Clientinfo_f( void ) {$/;"	f
CL_CloseAVI	src/client/cl_avi.c	/^qboolean CL_CloseAVI( void )$/;"	f
CL_CmdButtons	src/client/cl_input.c	/^void CL_CmdButtons( usercmd_t *cmd ) {$/;"	f
CL_CompleteDemoName	src/client/cl_main.c	/^static void CL_CompleteDemoName( char *args, int argNum )$/;"	f	file:
CL_CompleteRcon	src/client/cl_main.c	/^static void CL_CompleteRcon( char *args, int argNum )$/;"	f	file:
CL_ConfigstringModified	src/client/cl_cgame.c	/^void CL_ConfigstringModified( void ) {$/;"	f
CL_Configstrings_f	src/client/cl_main.c	/^void CL_Configstrings_f( void ) {$/;"	f
CL_Connect_f	src/client/cl_main.c	/^void CL_Connect_f( void ) {$/;"	f
CL_ConnectionlessPacket	src/client/cl_main.c	/^void CL_ConnectionlessPacket( netadr_t from, msg_t *msg ) {$/;"	f
CL_ConsolePrint	src/client/cl_console.c	/^void CL_ConsolePrint( char *txt ) {$/;"	f
CL_ConsolePrint	src/null/null_client.c	/^void CL_ConsolePrint( char *txt ) {$/;"	f
CL_CreateCmd	src/client/cl_input.c	/^usercmd_t CL_CreateCmd( void ) {$/;"	f
CL_CreateNewCommands	src/client/cl_input.c	/^void CL_CreateNewCommands( void ) {$/;"	f
CL_DECODE_START	src/qcommon/qcommon.h	1183;"	d
CL_DeltaEntity	src/client/cl_parse.c	/^void CL_DeltaEntity (msg_t *msg, clSnapshot_t *frame, int newnum, entityState_t *old, $/;"	f
CL_DemoCompleted	src/client/cl_main.c	/^void CL_DemoCompleted( void )$/;"	f
CL_DemoFilename	src/client/cl_main.c	/^void CL_DemoFilename( int number, char *fileName, int fileNameSize ) {$/;"	f
CL_DemoFrameDurationSDev	src/client/cl_main.c	/^static float CL_DemoFrameDurationSDev( void )$/;"	f	file:
CL_DemoName	src/client/cl_main.c	/^void CL_DemoName( char *buffer, int size ) {$/;"	f
CL_DemoPos	src/client/cl_main.c	/^int CL_DemoPos( void ) {$/;"	f
CL_DemoState	src/client/cl_main.c	/^demoState_t CL_DemoState( void ) {$/;"	f
CL_Disconnect	src/client/cl_main.c	/^void CL_Disconnect( qboolean showMainMenu ) {$/;"	f
CL_Disconnect	src/null/null_client.c	/^void CL_Disconnect( qboolean showMainMenu ) {$/;"	f
CL_Disconnect_f	src/client/cl_main.c	/^void CL_Disconnect_f( void ) {$/;"	f
CL_DownloadsComplete	src/client/cl_main.c	/^void CL_DownloadsComplete( void ) {$/;"	f
CL_ENCODE_START	src/qcommon/qcommon.h	1182;"	d
CL_FinishMove	src/client/cl_input.c	/^void CL_FinishMove( usercmd_t *cmd ) {$/;"	f
CL_FirstSnapshot	src/client/cl_cgame.c	/^void CL_FirstSnapshot( void ) {$/;"	f
CL_FlushMemory	src/client/cl_main.c	/^void CL_FlushMemory(void)$/;"	f
CL_FlushMemory	src/null/null_client.c	/^void CL_FlushMemory(void)$/;"	f
CL_ForwardCommandToServer	src/client/cl_main.c	/^void CL_ForwardCommandToServer( const char *string ) {$/;"	f
CL_ForwardCommandToServer	src/null/null_client.c	/^void CL_ForwardCommandToServer( const char *string ) {$/;"	f
CL_ForwardToServer_f	src/client/cl_main.c	/^void CL_ForwardToServer_f( void ) {$/;"	f
CL_Frame	src/client/cl_main.c	/^void CL_Frame ( int msec ) {$/;"	f
CL_Frame	src/null/null_client.c	/^void CL_Frame ( int msec ) {$/;"	f
CL_GSRFeaturedLabel	src/client/cl_main.c	/^void CL_GSRFeaturedLabel( byte **data, char *buf, int size )$/;"	f
CL_GSRSequenceInformation	src/client/cl_main.c	/^int CL_GSRSequenceInformation( int alternateProtocol, byte **data )$/;"	f
CL_GameCommand	src/client/cl_cgame.c	/^qboolean CL_GameCommand( void ) {$/;"	f
CL_GameCommand	src/null/null_client.c	/^qboolean CL_GameCommand( void ) {$/;"	f
CL_GameConsoleText	src/client/cl_cgame.c	/^void CL_GameConsoleText( void ) {$/;"	f
CL_GenerateQKey	src/client/cl_main.c	/^static void CL_GenerateQKey(void)$/;"	f	file:
CL_GetCurrentCmdNumber	src/client/cl_cgame.c	/^int CL_GetCurrentCmdNumber( void ) {$/;"	f
CL_GetCurrentSnapshotNumber	src/client/cl_cgame.c	/^void	CL_GetCurrentSnapshotNumber( int *snapshotNumber, int *serverTime ) {$/;"	f
CL_GetFreePing	src/client/cl_main.c	/^ping_t* CL_GetFreePing( void )$/;"	f
CL_GetGameState	src/client/cl_cgame.c	/^void CL_GetGameState( gameState_t *gs ) {$/;"	f
CL_GetGlconfig	src/client/cl_cgame.c	/^void CL_GetGlconfig( glconfig_t *glconfig ) {$/;"	f
CL_GetGlconfig	src/client/cl_ui.c	/^static void CL_GetGlconfig( glconfig_t *config ) {$/;"	f	file:
CL_GetParseEntityState	src/client/cl_cgame.c	/^qboolean	CL_GetParseEntityState( int parseEntityNumber, entityState_t *state ) {$/;"	f
CL_GetPing	src/client/cl_main.c	/^void CL_GetPing( int n, char *buf, int buflen, int *pingtime )$/;"	f
CL_GetPingInfo	src/client/cl_main.c	/^void CL_GetPingInfo( int n, char *buf, int buflen )$/;"	f
CL_GetPingQueueCount	src/client/cl_main.c	/^int CL_GetPingQueueCount( void )$/;"	f
CL_GetServerCommand	src/client/cl_cgame.c	/^qboolean CL_GetServerCommand( int serverCommandNumber ) {$/;"	f
CL_GetServerStatus	src/client/cl_main.c	/^serverStatus_t *CL_GetServerStatus( netadr_t from ) {$/;"	f
CL_GetSnapshot	src/client/cl_cgame.c	/^qboolean	CL_GetSnapshot( int snapshotNumber, snapshot_t *snapshot ) {$/;"	f
CL_GetUserCmd	src/client/cl_cgame.c	/^qboolean CL_GetUserCmd( int cmdNumber, usercmd_t *ucmd ) {$/;"	f
CL_GlobalServers_f	src/client/cl_main.c	/^void CL_GlobalServers_f( void ) {$/;"	f
CL_Init	src/client/cl_main.c	/^void CL_Init( void ) {$/;"	f
CL_Init	src/null/null_client.c	/^void CL_Init( void ) {$/;"	f
CL_InitCGame	src/client/cl_cgame.c	/^void CL_InitCGame( void ) {$/;"	f
CL_InitDownloads	src/client/cl_main.c	/^void CL_InitDownloads(void) {$/;"	f
CL_InitInput	src/client/cl_input.c	/^void CL_InitInput( void ) {$/;"	f
CL_InitKeyCommands	src/client/cl_keys.c	/^void CL_InitKeyCommands( void ) {$/;"	f
CL_InitKeyCommands	src/null/null_client.c	/^void CL_InitKeyCommands( void ) {$/;"	f
CL_InitRef	src/client/cl_main.c	/^void CL_InitRef( void ) {$/;"	f
CL_InitRef	src/null/null_client.c	/^void CL_InitRef(void)$/;"	f
CL_InitRenderer	src/client/cl_main.c	/^void CL_InitRenderer( void ) {$/;"	f
CL_InitServerInfo	src/client/cl_main.c	/^void CL_InitServerInfo( serverInfo_t *server, netadr_t *address ) {$/;"	f
CL_InitUI	src/client/cl_ui.c	/^void CL_InitUI( void ) {$/;"	f
CL_JoystickEvent	src/client/cl_input.c	/^void CL_JoystickEvent( int axis, int value, int time ) {$/;"	f
CL_JoystickEvent	src/null/null_client.c	/^void CL_JoystickEvent( int axis, int value, int time ) {$/;"	f
CL_JoystickMove	src/client/cl_input.c	/^void CL_JoystickMove( usercmd_t *cmd ) {$/;"	f
CL_KeyDownEvent	src/client/cl_keys.c	/^void CL_KeyDownEvent( int key, unsigned time )$/;"	f
CL_KeyEvent	src/client/cl_keys.c	/^void CL_KeyEvent (int key, qboolean down, unsigned time) {$/;"	f
CL_KeyEvent	src/null/null_client.c	/^void CL_KeyEvent (int key, qboolean down, unsigned time) {$/;"	f
CL_KeyMove	src/client/cl_input.c	/^void CL_KeyMove( usercmd_t *cmd ) {$/;"	f
CL_KeyState	src/client/cl_input.c	/^float CL_KeyState( kbutton_t *key ) {$/;"	f
CL_KeyUpEvent	src/client/cl_keys.c	/^void CL_KeyUpEvent( int key, unsigned time )$/;"	f
CL_LoadConsoleHistory	src/client/cl_keys.c	/^void CL_LoadConsoleHistory( void )$/;"	f
CL_LocalServers_f	src/client/cl_main.c	/^void CL_LocalServers_f( void ) {$/;"	f
CL_MapLoading	src/client/cl_main.c	/^void CL_MapLoading( void ) {$/;"	f
CL_MapLoading	src/null/null_client.c	/^void CL_MapLoading( void ) {$/;"	f
CL_MotdPacket	src/client/cl_main.c	/^void CL_MotdPacket( netadr_t from, const char *info ) {$/;"	f
CL_MouseEvent	src/client/cl_input.c	/^void CL_MouseEvent( int dx, int dy, int time ) {$/;"	f
CL_MouseEvent	src/null/null_client.c	/^void CL_MouseEvent( int dx, int dy, int time ) {$/;"	f
CL_MouseMove	src/client/cl_input.c	/^void CL_MouseMove(usercmd_t *cmd)$/;"	f
CL_Netchan_Decode	src/client/cl_net_chan.c	/^static void CL_Netchan_Decode( msg_t *msg ) {$/;"	f	file:
CL_Netchan_Encode	src/client/cl_net_chan.c	/^static void CL_Netchan_Encode( msg_t *msg ) {$/;"	f	file:
CL_Netchan_Process	src/client/cl_net_chan.c	/^qboolean CL_Netchan_Process( netchan_t *chan, msg_t *msg ) {$/;"	f
CL_Netchan_Transmit	src/client/cl_net_chan.c	/^void CL_Netchan_Transmit( netchan_t *chan, msg_t* msg ) {$/;"	f
CL_Netchan_TransmitNextFragment	src/client/cl_net_chan.c	/^qboolean CL_Netchan_TransmitNextFragment(netchan_t *chan)$/;"	f
CL_NextDemo	src/client/cl_main.c	/^void CL_NextDemo( void ) {$/;"	f
CL_NextDownload	src/client/cl_main.c	/^void CL_NextDownload(void)$/;"	f
CL_OldGame	src/client/cl_main.c	/^static void CL_OldGame(void)$/;"	f	file:
CL_OpenAVIForWriting	src/client/cl_avi.c	/^qboolean CL_OpenAVIForWriting( const char *fileName )$/;"	f
CL_OpenedPK3List_f	src/client/cl_main.c	/^void CL_OpenedPK3List_f( void ) {$/;"	f
CL_PacketEvent	src/client/cl_main.c	/^void CL_PacketEvent( netadr_t from, msg_t *msg ) {$/;"	f
CL_PacketEvent	src/null/null_client.c	/^void CL_PacketEvent( netadr_t from, msg_t *msg ) {$/;"	f
CL_ParseBinding	src/client/cl_keys.c	/^void CL_ParseBinding( int key, qboolean down, unsigned time )$/;"	f
CL_ParseCommandString	src/client/cl_parse.c	/^void CL_ParseCommandString( msg_t *msg ) {$/;"	f
CL_ParseDownload	src/client/cl_parse.c	/^void CL_ParseDownload ( msg_t *msg ) {$/;"	f
CL_ParseGamestate	src/client/cl_parse.c	/^void CL_ParseGamestate( msg_t *msg ) {$/;"	f
CL_ParsePacketEntities	src/client/cl_parse.c	/^void CL_ParsePacketEntities( msg_t *msg, clSnapshot_t *oldframe, clSnapshot_t *newframe) {$/;"	f
CL_ParseServerInfo	src/client/cl_parse.c	/^static void CL_ParseServerInfo(void)$/;"	f	file:
CL_ParseServerMessage	src/client/cl_parse.c	/^void CL_ParseServerMessage( msg_t *msg ) {$/;"	f
CL_ParseSnapshot	src/client/cl_parse.c	/^void CL_ParseSnapshot( msg_t *msg ) {$/;"	f
CL_ParseVoip	src/client/cl_parse.c	/^void CL_ParseVoip ( msg_t *msg ) {$/;"	f	file:
CL_Ping_f	src/client/cl_main.c	/^void CL_Ping_f( void ) {$/;"	f
CL_PlayCinematic_f	src/client/cl_cin.c	/^void CL_PlayCinematic_f(void) {$/;"	f
CL_PlayDemo_f	src/client/cl_main.c	/^void CL_PlayDemo_f( void ) {$/;"	f
CL_PlayVoip	src/client/cl_parse.c	/^static void CL_PlayVoip(int sender, int samplecnt, const byte *data, int flags)$/;"	f	file:
CL_Rcon_f	src/client/cl_main.c	/^void CL_Rcon_f( void ) {$/;"	f
CL_ReadDemoMessage	src/client/cl_main.c	/^void CL_ReadDemoMessage( void ) {$/;"	f
CL_ReadyToSendPacket	src/client/cl_input.c	/^qboolean CL_ReadyToSendPacket( void ) {$/;"	f
CL_Reconnect_f	src/client/cl_main.c	/^void CL_Reconnect_f( void ) {$/;"	f
CL_Record_f	src/client/cl_main.c	/^void CL_Record_f( void ) {$/;"	f
CL_RefMalloc	src/client/cl_main.c	/^void *CL_RefMalloc( int size ) {$/;"	f
CL_RefPrintf	src/client/cl_main.c	/^static __attribute__ ((format (printf, 2, 3))) void QDECL CL_RefPrintf( int print_level, const char *fmt, ...) {$/;"	f	file:
CL_ReferencedPK3List_f	src/client/cl_main.c	/^void CL_ReferencedPK3List_f( void ) {$/;"	f
CL_RequestMotd	src/client/cl_main.c	/^void CL_RequestMotd( void ) {$/;"	f
CL_ResetPureClientAtServer	src/client/cl_main.c	/^void CL_ResetPureClientAtServer( void ) {$/;"	f
CL_SaveConsoleHistory	src/client/cl_keys.c	/^void CL_SaveConsoleHistory( void )$/;"	f
CL_ScaledMilliseconds	src/client/cl_main.c	/^int CL_ScaledMilliseconds(void) {$/;"	f
CL_SendCmd	src/client/cl_input.c	/^void CL_SendCmd( void ) {$/;"	f
CL_SendPureChecksums	src/client/cl_main.c	/^void CL_SendPureChecksums( void ) {$/;"	f
CL_ServerInfoPacket	src/client/cl_main.c	/^void CL_ServerInfoPacket( netadr_t from, msg_t *msg ) {$/;"	f
CL_ServerStatus	src/client/cl_main.c	/^int CL_ServerStatus( char *serverAddress, char *serverStatusString, int maxLen ) {$/;"	f
CL_ServerStatusResponse	src/client/cl_main.c	/^void CL_ServerStatusResponse( netadr_t from, msg_t *msg ) {$/;"	f
CL_ServerStatus_f	src/client/cl_main.c	/^void CL_ServerStatus_f(void) {$/;"	f
CL_ServersResponsePacket	src/client/cl_main.c	/^void CL_ServersResponsePacket( const netadr_t* from, msg_t *msg, qboolean extended ) {$/;"	f
CL_SetCGameTime	src/client/cl_cgame.c	/^void CL_SetCGameTime( void ) {$/;"	f
CL_SetModel_f	src/client/cl_main.c	/^void CL_SetModel_f( void ) {$/;"	f
CL_SetServerInfo	src/client/cl_main.c	/^static void CL_SetServerInfo(serverInfo_t *server, const char *info, int ping) {$/;"	f	file:
CL_SetServerInfoByAddress	src/client/cl_main.c	/^static void CL_SetServerInfoByAddress(netadr_t from, const char *info, int ping) {$/;"	f	file:
CL_SetUserCmdValue	src/client/cl_cgame.c	/^void CL_SetUserCmdValue( int userCmdValue, float sensitivityScale ) {$/;"	f
CL_ShouldIgnoreVoipSender	src/client/cl_parse.c	/^qboolean CL_ShouldIgnoreVoipSender(int sender)$/;"	f	file:
CL_ShowIP_f	src/client/cl_main.c	/^void CL_ShowIP_f(void) {$/;"	f
CL_Shutdown	src/client/cl_main.c	/^void CL_Shutdown(char *finalmsg, qboolean disconnect, qboolean quit)$/;"	f
CL_Shutdown	src/null/null_client.c	/^void CL_Shutdown(char *finalmsg, qboolean disconnect, qboolean quit)$/;"	f
CL_ShutdownAll	src/client/cl_main.c	/^void CL_ShutdownAll(qboolean shutdownRef)$/;"	f
CL_ShutdownAll	src/null/null_client.c	/^void CL_ShutdownAll(qboolean shutdownRef)$/;"	f
CL_ShutdownCGame	src/client/cl_cgame.c	/^void CL_ShutdownCGame( void ) {$/;"	f
CL_ShutdownInput	src/client/cl_input.c	/^void CL_ShutdownInput(void)$/;"	f
CL_ShutdownRef	src/client/cl_main.c	/^void CL_ShutdownRef( void ) {$/;"	f
CL_ShutdownUI	src/client/cl_ui.c	/^void CL_ShutdownUI( void ) {$/;"	f
CL_Snd_Restart_f	src/client/cl_main.c	/^void CL_Snd_Restart_f(void)$/;"	f
CL_Snd_Shutdown	src/client/cl_main.c	/^void CL_Snd_Shutdown(void)$/;"	f
CL_Snd_Shutdown	src/null/null_client.c	/^void CL_Snd_Shutdown(void)$/;"	f
CL_StartDemoLoop	src/client/cl_main.c	/^void CL_StartDemoLoop( void ) {$/;"	f
CL_StartHunkUsers	src/client/cl_main.c	/^void CL_StartHunkUsers( qboolean rendererOnly ) {$/;"	f
CL_StartHunkUsers	src/null/null_client.c	/^void CL_StartHunkUsers( qboolean rendererOnly ) {$/;"	f
CL_StopRecord_f	src/client/cl_main.c	/^void CL_StopRecord_f( void ) {$/;"	f
CL_StopVideo_f	src/client/cl_main.c	/^void CL_StopVideo_f( void )$/;"	f
CL_SystemInfoChanged	src/client/cl_parse.c	/^void CL_SystemInfoChanged( void ) {$/;"	f
CL_TakeVideoFrame	src/client/cl_avi.c	/^void CL_TakeVideoFrame( void )$/;"	f
CL_UISystemCalls	src/client/cl_ui.c	/^intptr_t CL_UISystemCalls( intptr_t *args ) {$/;"	f
CL_UpdateGUID	src/client/cl_main.c	/^static void CL_UpdateGUID( const char *prefix, int prefix_len )$/;"	f	file:
CL_UpdateMumble	src/client/cl_main.c	/^void CL_UpdateMumble(void)$/;"	f	file:
CL_UpdateVisiblePings_f	src/client/cl_main.c	/^qboolean CL_UpdateVisiblePings_f(int source) {$/;"	f
CL_UpdateVoipGain	src/client/cl_main.c	/^void CL_UpdateVoipGain(const char *idstr, float gain)$/;"	f	file:
CL_UpdateVoipIgnore	src/client/cl_main.c	/^void CL_UpdateVoipIgnore(const char *idstr, qboolean ignore)$/;"	f	file:
CL_Vid_Restart_f	src/client/cl_main.c	/^void CL_Vid_Restart_f( void ) {$/;"	f
CL_VideoRecording	src/client/cl_avi.c	/^qboolean CL_VideoRecording( void )$/;"	f
CL_Video_f	src/client/cl_main.c	/^void CL_Video_f( void )$/;"	f
CL_VoipNewGeneration	src/client/cl_main.c	/^void CL_VoipNewGeneration(void)$/;"	f	file:
CL_VoipParseTargets	src/client/cl_main.c	/^void CL_VoipParseTargets(void)$/;"	f
CL_Voip_f	src/client/cl_main.c	/^void CL_Voip_f( void )$/;"	f
CL_WalkDemoExt	src/client/cl_main.c	/^static int CL_WalkDemoExt(char *arg, char *name, int *demofile)$/;"	f	file:
CL_WriteAVIAudioFrame	src/client/cl_avi.c	/^void CL_WriteAVIAudioFrame( const byte *pcmBuffer, int size )$/;"	f
CL_WriteAVIHeader	src/client/cl_avi.c	/^void CL_WriteAVIHeader( void )$/;"	f
CL_WriteAVIVideoFrame	src/client/cl_avi.c	/^void CL_WriteAVIVideoFrame( const byte *imageBuffer, int size )$/;"	f
CL_WriteAVIVideoFrame	src/renderercommon/tr_public.h	/^	void	(*CL_WriteAVIVideoFrame)( const byte *buffer, int size );$/;"	m	struct:__anon109
CL_WriteDemoMessage	src/client/cl_main.c	/^void CL_WriteDemoMessage ( msg_t *msg, int headerBytes ) {$/;"	f
CL_WritePacket	src/client/cl_input.c	/^void CL_WritePacket( void ) {$/;"	f
CL_cURL_BeginDownload	src/client/cl_curl.c	/^void CL_cURL_BeginDownload( const char *localName, const char *remoteURL )$/;"	f
CL_cURL_CallbackProgress	src/client/cl_curl.c	/^static int CL_cURL_CallbackProgress( void *dummy, double dltotal, double dlnow,$/;"	f	file:
CL_cURL_CallbackWrite	src/client/cl_curl.c	/^static size_t CL_cURL_CallbackWrite(void *buffer, size_t size, size_t nmemb,$/;"	f	file:
CL_cURL_Cleanup	src/client/cl_curl.c	/^void CL_cURL_Cleanup(void)$/;"	f
CL_cURL_Init	src/client/cl_curl.c	/^qboolean CL_cURL_Init()$/;"	f
CL_cURL_PerformDownload	src/client/cl_curl.c	/^void CL_cURL_PerformDownload(void)$/;"	f
CL_cURL_Shutdown	src/client/cl_curl.c	/^void CL_cURL_Shutdown( void )$/;"	f
CL_handle	src/client/cl_cin.c	/^static int				CL_handle = -1;$/;"	v	file:
CMDIR	GNUmakefile	/^CMDIR=$(MOUNT_DIR)\/qcommon$/;"	m
CMD_ALIEN	src/game/g_local.h	730;"	d
CMD_ALIVE	src/game/g_local.h	732;"	d
CMD_BACKUP	src/cgame/cg_public.h	25;"	d
CMD_CHEAT	src/game/g_local.h	725;"	d
CMD_CHEAT_TEAM	src/game/g_local.h	726;"	d
CMD_HUMAN	src/game/g_local.h	731;"	d
CMD_INTERMISSION	src/game/g_local.h	733;"	d
CMD_MASK	src/cgame/cg_public.h	26;"	d
CMD_MESSAGE	src/game/g_local.h	727;"	d
CMD_SPEC	src/game/g_local.h	729;"	d
CMD_TEAM	src/game/g_local.h	728;"	d
CM_AddFacetBevels	src/qcommon/cm_patch.c	/^void CM_AddFacetBevels( facet_t *facet ) {$/;"	f
CM_AdjustAreaPortalState	src/qcommon/cm_test.c	/^void	CM_AdjustAreaPortalState( int area1, int area2, qboolean open ) {$/;"	f
CM_AreasConnected	src/qcommon/cm_test.c	/^qboolean	CM_AreasConnected( int area1, int area2 ) {$/;"	f
CM_BiSphereTrace	src/qcommon/cm_trace.c	/^void CM_BiSphereTrace( trace_t *results, const vec3_t start,$/;"	f
CM_BoundBrush	src/qcommon/cm_load.c	/^void CM_BoundBrush( cbrush_t *b ) {$/;"	f
CM_BoundsIntersect	src/qcommon/cm_test.c	/^qboolean CM_BoundsIntersect( const vec3_t mins, const vec3_t maxs, const vec3_t mins2, const vec3_t maxs2 )$/;"	f
CM_BoundsIntersectPoint	src/qcommon/cm_test.c	/^qboolean CM_BoundsIntersectPoint( const vec3_t mins, const vec3_t maxs, const vec3_t point )$/;"	f
CM_BoxBrushes	src/qcommon/cm_test.c	/^int CM_BoxBrushes( const vec3_t mins, const vec3_t maxs, cbrush_t **list, int listsize ) {$/;"	f
CM_BoxLeafnums	src/qcommon/cm_test.c	/^int	CM_BoxLeafnums( const vec3_t mins, const vec3_t maxs, int *list, int listsize, int *lastLeaf) {$/;"	f
CM_BoxLeafnums_r	src/qcommon/cm_test.c	/^void CM_BoxLeafnums_r( leafList_t *ll, int nodenum ) {$/;"	f
CM_BoxTrace	src/qcommon/cm_trace.c	/^void CM_BoxTrace( trace_t *results, const vec3_t start, const vec3_t end,$/;"	f
CM_CheckFacetPlane	src/qcommon/cm_patch.c	/^int CM_CheckFacetPlane(float *plane, vec3_t start, vec3_t end, float *enterFrac, float *leaveFrac, int *hit) {$/;"	f
CM_Checksum	src/qcommon/cm_load.c	/^unsigned CM_Checksum(dheader_t *header) {$/;"	f
CM_ClearLevelPatches	src/qcommon/cm_patch.c	/^void CM_ClearLevelPatches( void ) {$/;"	f
CM_ClearMap	src/qcommon/cm_load.c	/^void CM_ClearMap( void ) {$/;"	f
CM_ClipHandleToModel	src/qcommon/cm_load.c	/^cmodel_t	*CM_ClipHandleToModel( clipHandle_t handle ) {$/;"	f
CM_ClusterPVS	src/qcommon/cm_test.c	/^byte	*CM_ClusterPVS (int cluster) {$/;"	f
CM_ClusterPVS	src/renderercommon/tr_public.h	/^	byte	*(*CM_ClusterPVS)(int cluster);$/;"	m	struct:__anon109
CM_ComparePoints	src/qcommon/cm_patch.c	/^static qboolean CM_ComparePoints( float *a, float *b ) {$/;"	f	file:
CM_DistanceFromLineSquared	src/qcommon/cm_trace.c	/^float CM_DistanceFromLineSquared(vec3_t p, vec3_t lp1, vec3_t lp2, vec3_t dir) {$/;"	f
CM_DrawDebugSurface	src/qcommon/cm_patch.c	/^void CM_DrawDebugSurface( void (*drawPoly)(int color, int numPoints, float *points) ) {$/;"	f
CM_DrawDebugSurface	src/renderercommon/tr_public.h	/^	void	(*CM_DrawDebugSurface)( void (*drawPoly)(int color, int numPoints, float *points) );$/;"	m	struct:__anon109
CM_EDGE_VERTEX_EPSILON	src/qcommon/cm_load.c	439;"	d	file:
CM_EdgePlaneNum	src/qcommon/cm_patch.c	/^static int CM_EdgePlaneNum( cGrid_t *grid, int gridPlanes[MAX_GRID_SIZE][MAX_GRID_SIZE][2], int i, int j, int k ) {$/;"	f	file:
CM_EntityString	src/qcommon/cm_load.c	/^char	*CM_EntityString( void ) {$/;"	f
CM_FindPlane	src/qcommon/cm_patch.c	/^static int CM_FindPlane( float *p1, float *p2, float *p3 ) {$/;"	f	file:
CM_FindPlane2	src/qcommon/cm_patch.c	/^int CM_FindPlane2(float plane[4], int *flipped) {$/;"	f
CM_FloodAreaConnections	src/qcommon/cm_test.c	/^void	CM_FloodAreaConnections( void ) {$/;"	f
CM_FloodArea_r	src/qcommon/cm_test.c	/^void CM_FloodArea_r( int areaNum, int floodnum) {$/;"	f
CM_GeneratePatchCollide	src/qcommon/cm_patch.c	/^struct patchCollide_s	*CM_GeneratePatchCollide( int width, int height, vec3_t *points ) {$/;"	f
CM_GridPlane	src/qcommon/cm_patch.c	/^static int	CM_GridPlane( int gridPlanes[MAX_GRID_SIZE][MAX_GRID_SIZE][2], int i, int j, int tri ) {$/;"	f	file:
CM_InitBoxHull	src/qcommon/cm_load.c	/^void CM_InitBoxHull (void)$/;"	f
CM_InlineModel	src/qcommon/cm_load.c	/^clipHandle_t	CM_InlineModel( int index ) {$/;"	f
CM_LeafArea	src/qcommon/cm_load.c	/^int		CM_LeafArea( int leafnum ) {$/;"	f
CM_LeafCluster	src/qcommon/cm_load.c	/^int		CM_LeafCluster( int leafnum ) {$/;"	f
CM_LoadMap	src/qcommon/cm_load.c	/^void CM_LoadMap( const char *name, qboolean clientload, int *checksum ) {$/;"	f
CM_LumpChecksum	src/qcommon/cm_load.c	/^unsigned CM_LumpChecksum(lump_t *lump) {$/;"	f
CM_ModelBounds	src/qcommon/cm_load.c	/^void CM_ModelBounds( clipHandle_t model, vec3_t mins, vec3_t maxs ) {$/;"	f
CM_NeedsSubdivision	src/qcommon/cm_patch.c	/^static qboolean	CM_NeedsSubdivision( vec3_t a, vec3_t b, vec3_t c ) {$/;"	f	file:
CM_NumClusters	src/qcommon/cm_load.c	/^int		CM_NumClusters( void ) {$/;"	f
CM_NumInlineModels	src/qcommon/cm_load.c	/^int		CM_NumInlineModels( void ) {$/;"	f
CM_PatchCollideFromGrid	src/qcommon/cm_patch.c	/^static void CM_PatchCollideFromGrid( cGrid_t *grid, patchCollide_t *pf ) {$/;"	f	file:
CM_PlaneEqual	src/qcommon/cm_patch.c	/^int CM_PlaneEqual(patchPlane_t *p, float plane[4], int *flipped) {$/;"	f
CM_PlaneFromPoints	src/qcommon/cm_patch.c	/^static qboolean CM_PlaneFromPoints( vec4_t plane, vec3_t a, vec3_t b, vec3_t c ) {$/;"	f	file:
CM_PointContents	src/qcommon/cm_test.c	/^int CM_PointContents( const vec3_t p, clipHandle_t model ) {$/;"	f
CM_PointLeafnum	src/qcommon/cm_test.c	/^int CM_PointLeafnum( const vec3_t p ) {$/;"	f
CM_PointLeafnum_r	src/qcommon/cm_test.c	/^int CM_PointLeafnum_r( const vec3_t p, int num ) {$/;"	f
CM_PointOnPlaneSide	src/qcommon/cm_patch.c	/^static int CM_PointOnPlaneSide( float *p, int planeNum ) {$/;"	f	file:
CM_PositionTest	src/qcommon/cm_trace.c	/^void CM_PositionTest( traceWork_t *tw ) {$/;"	f
CM_PositionTestInPatchCollide	src/qcommon/cm_patch.c	/^qboolean CM_PositionTestInPatchCollide( traceWork_t *tw, const struct patchCollide_s *pc ) {$/;"	f
CM_ProjectPointOntoVector	src/qcommon/cm_trace.c	/^void CM_ProjectPointOntoVector( vec3_t point, vec3_t vStart, vec3_t vDir, vec3_t vProj )$/;"	f
CM_ProximityToBrush	src/qcommon/cm_trace.c	/^static void CM_ProximityToBrush( traceWork_t *tw, cbrush_t *brush )$/;"	f	file:
CM_ProximityToPatch	src/qcommon/cm_trace.c	/^static void CM_ProximityToPatch( traceWork_t *tw, cPatch_t *patch )$/;"	f	file:
CM_RemoveDegenerateColumns	src/qcommon/cm_patch.c	/^static void CM_RemoveDegenerateColumns( cGrid_t *grid ) {$/;"	f	file:
CM_SetBorderInward	src/qcommon/cm_patch.c	/^static void CM_SetBorderInward( facet_t *facet, cGrid_t *grid, int gridPlanes[MAX_GRID_SIZE][MAX_GRID_SIZE][2],$/;"	f	file:
CM_SetGridWrapWidth	src/qcommon/cm_patch.c	/^static void CM_SetGridWrapWidth( cGrid_t *grid ) {$/;"	f	file:
CM_SignbitsForNormal	src/qcommon/cm_patch.c	/^static int CM_SignbitsForNormal( vec3_t normal ) {$/;"	f	file:
CM_SnapVector	src/qcommon/cm_patch.c	/^void CM_SnapVector(vec3_t normal) {$/;"	f
CM_StoreBrushes	src/qcommon/cm_test.c	/^void CM_StoreBrushes( leafList_t *ll, int nodenum ) {$/;"	f
CM_StoreLeafs	src/qcommon/cm_test.c	/^void CM_StoreLeafs( leafList_t *ll, int nodenum ) {$/;"	f
CM_Subdivide	src/qcommon/cm_patch.c	/^static void CM_Subdivide( vec3_t a, vec3_t b, vec3_t c, vec3_t out1, vec3_t out2, vec3_t out3 ) {$/;"	f	file:
CM_SubdivideGridColumns	src/qcommon/cm_patch.c	/^static void CM_SubdivideGridColumns( cGrid_t *grid ) {$/;"	f	file:
CM_TempBoxModel	src/qcommon/cm_load.c	/^clipHandle_t CM_TempBoxModel( const vec3_t mins, const vec3_t maxs, int capsule ) {$/;"	f
CM_TestBoundingBoxInCapsule	src/qcommon/cm_trace.c	/^void CM_TestBoundingBoxInCapsule( traceWork_t *tw, clipHandle_t model ) {$/;"	f
CM_TestBoxInBrush	src/qcommon/cm_trace.c	/^void CM_TestBoxInBrush( traceWork_t *tw, cbrush_t *brush ) {$/;"	f
CM_TestCapsuleInCapsule	src/qcommon/cm_trace.c	/^void CM_TestCapsuleInCapsule( traceWork_t *tw, clipHandle_t model ) {$/;"	f
CM_TestInLeaf	src/qcommon/cm_trace.c	/^void CM_TestInLeaf( traceWork_t *tw, cLeaf_t *leaf ) {$/;"	f
CM_Trace	src/qcommon/cm_trace.c	/^void CM_Trace( trace_t *results, const vec3_t start,$/;"	f
CM_TraceBoundingBoxThroughCapsule	src/qcommon/cm_trace.c	/^void CM_TraceBoundingBoxThroughCapsule( traceWork_t *tw, clipHandle_t model ) {$/;"	f
CM_TraceCapsuleThroughCapsule	src/qcommon/cm_trace.c	/^void CM_TraceCapsuleThroughCapsule( traceWork_t *tw, clipHandle_t model ) {$/;"	f
CM_TracePointThroughPatchCollide	src/qcommon/cm_patch.c	/^void CM_TracePointThroughPatchCollide( traceWork_t *tw, const struct patchCollide_s *pc ) {$/;"	f
CM_TraceThroughBrush	src/qcommon/cm_trace.c	/^void CM_TraceThroughBrush( traceWork_t *tw, cbrush_t *brush ) {$/;"	f
CM_TraceThroughLeaf	src/qcommon/cm_trace.c	/^void CM_TraceThroughLeaf( traceWork_t *tw, cLeaf_t *leaf ) {$/;"	f
CM_TraceThroughPatch	src/qcommon/cm_trace.c	/^void CM_TraceThroughPatch( traceWork_t *tw, cPatch_t *patch ) {$/;"	f
CM_TraceThroughPatchCollide	src/qcommon/cm_patch.c	/^void CM_TraceThroughPatchCollide( traceWork_t *tw, const struct patchCollide_s *pc ) {$/;"	f
CM_TraceThroughSphere	src/qcommon/cm_trace.c	/^void CM_TraceThroughSphere( traceWork_t *tw, vec3_t origin, float radius, vec3_t start, vec3_t end ) {$/;"	f
CM_TraceThroughTree	src/qcommon/cm_trace.c	/^void CM_TraceThroughTree( traceWork_t *tw, int num, float p1f, float p2f, vec3_t p1, vec3_t p2) {$/;"	f
CM_TraceThroughVerticalCylinder	src/qcommon/cm_trace.c	/^void CM_TraceThroughVerticalCylinder( traceWork_t *tw, vec3_t origin, float radius, float halfheight, vec3_t start, vec3_t end) {$/;"	f
CM_TransformedBiSphereTrace	src/qcommon/cm_trace.c	/^void CM_TransformedBiSphereTrace( trace_t *results, const vec3_t start,$/;"	f
CM_TransformedBoxTrace	src/qcommon/cm_trace.c	/^void CM_TransformedBoxTrace( trace_t *results, const vec3_t start, const vec3_t end,$/;"	f
CM_TransformedPointContents	src/qcommon/cm_test.c	/^int	CM_TransformedPointContents( const vec3_t p, clipHandle_t model, const vec3_t origin, const vec3_t angles) {$/;"	f
CM_TransposeGrid	src/qcommon/cm_patch.c	/^static void CM_TransposeGrid( cGrid_t *grid ) {$/;"	f	file:
CM_ValidateFacet	src/qcommon/cm_patch.c	/^static qboolean CM_ValidateFacet( facet_t *facet ) {$/;"	f	file:
CM_VectorDistanceSquared	src/qcommon/cm_trace.c	/^float CM_VectorDistanceSquared(vec3_t p1, vec3_t p2) {$/;"	f
CM_WriteAreaBits	src/qcommon/cm_test.c	/^int CM_WriteAreaBits (byte *buffer, int area)$/;"	f
CMod_AddEdgeToBrush	src/qcommon/cm_load.c	/^static qboolean CMod_AddEdgeToBrush( const vec3_t p0, const vec3_t p1,$/;"	f	file:
CMod_BrushEdgesAreTheSame	src/qcommon/cm_load.c	/^static qboolean CMod_BrushEdgesAreTheSame( const vec3_t p0, const vec3_t p1,$/;"	f	file:
CMod_CreateBrushSideWindings	src/qcommon/cm_load.c	/^static void CMod_CreateBrushSideWindings( void )$/;"	f	file:
CMod_LoadBrushSides	src/qcommon/cm_load.c	/^void CMod_LoadBrushSides (lump_t *l)$/;"	f
CMod_LoadBrushes	src/qcommon/cm_load.c	/^void CMod_LoadBrushes( lump_t *l ) {$/;"	f
CMod_LoadEntityString	src/qcommon/cm_load.c	/^void CMod_LoadEntityString( lump_t *l ) {$/;"	f
CMod_LoadLeafBrushes	src/qcommon/cm_load.c	/^void CMod_LoadLeafBrushes (lump_t *l)$/;"	f
CMod_LoadLeafSurfaces	src/qcommon/cm_load.c	/^void CMod_LoadLeafSurfaces( lump_t *l )$/;"	f
CMod_LoadLeafs	src/qcommon/cm_load.c	/^void CMod_LoadLeafs (lump_t *l)$/;"	f
CMod_LoadNodes	src/qcommon/cm_load.c	/^void CMod_LoadNodes( lump_t *l ) {$/;"	f
CMod_LoadPatches	src/qcommon/cm_load.c	/^void CMod_LoadPatches( lump_t *surfs, lump_t *verts ) {$/;"	f
CMod_LoadPlanes	src/qcommon/cm_load.c	/^void CMod_LoadPlanes (lump_t *l)$/;"	f
CMod_LoadShaders	src/qcommon/cm_load.c	/^void CMod_LoadShaders( lump_t *l ) {$/;"	f
CMod_LoadSubmodels	src/qcommon/cm_load.c	/^void CMod_LoadSubmodels( lump_t *l ) {$/;"	f
CMod_LoadVisibility	src/qcommon/cm_load.c	/^void CMod_LoadVisibility( lump_t *l ) {$/;"	f
COAST_TIME	src/cgame/cg_weapons.c	942;"	d	file:
CODE	src/tools/lcc/lburg/gram.c	/^    CODE = 263,$/;"	e	enum:yytokentype	file:
CODE	src/tools/lcc/lburg/gram.c	120;"	d	file:
CODE	src/tools/lcc/src/c.h	/^enum { CODE=1, BSS, DATA, LIT };$/;"	e	enum:__anon288
CODEC1	src/server/sqlite3.c	44409;"	d	file:
CODEC1	src/server/sqlite3.c	44415;"	d	file:
CODEC2	src/server/sqlite3.c	44411;"	d	file:
CODEC2	src/server/sqlite3.c	44416;"	d	file:
CODEC_CLOSE	src/client/snd_codec.h	/^typedef void (*CODEC_CLOSE)(snd_stream_t *stream);$/;"	t
CODEC_LOAD	src/client/snd_codec.h	/^typedef void *(*CODEC_LOAD)(const char *filename, snd_info_t *info);$/;"	t
CODEC_OPEN	src/client/snd_codec.h	/^typedef snd_stream_t *(*CODEC_OPEN)(const char *filename);$/;"	t
CODEC_READ	src/client/snd_codec.h	/^typedef int (*CODEC_READ)(snd_stream_t *stream, int bytes, void *buffer);$/;"	t
CODESEG	src/tools/asm/q3asm.c	/^	CODESEG,$/;"	e	enum:__anon266	file:
COLFLAG_HASTYPE	src/server/sqlite3.c	12543;"	d	file:
COLFLAG_HIDDEN	src/server/sqlite3.c	12542;"	d	file:
COLFLAG_PRIMKEY	src/server/sqlite3.c	12541;"	d	file:
COLNAME_COLUMN	src/server/sqlite3.c	10827;"	d	file:
COLNAME_DATABASE	src/server/sqlite3.c	10825;"	d	file:
COLNAME_DECLTYPE	src/server/sqlite3.c	10824;"	d	file:
COLNAME_N	src/server/sqlite3.c	10829;"	d	file:
COLNAME_N	src/server/sqlite3.c	10832;"	d	file:
COLNAME_N	src/server/sqlite3.c	10834;"	d	file:
COLNAME_NAME	src/server/sqlite3.c	10823;"	d	file:
COLNAME_TABLE	src/server/sqlite3.c	10826;"	d	file:
COLON	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
COLOR_BLACK	src/qcommon/q_shared.h	411;"	d
COLOR_BLUE	src/qcommon/q_shared.h	415;"	d
COLOR_CHOCOLATE	src/qcommon/q_shared.h	423;"	d
COLOR_CYAN	src/qcommon/q_shared.h	416;"	d
COLOR_GOLD	src/qcommon/q_shared.h	424;"	d
COLOR_GREEN	src/qcommon/q_shared.h	413;"	d
COLOR_INDIGO	src/qcommon/q_shared.h	426;"	d
COLOR_MAGENTA	src/qcommon/q_shared.h	417;"	d
COLOR_ORANGE	src/qcommon/q_shared.h	419;"	d
COLOR_PINK	src/qcommon/q_shared.h	422;"	d
COLOR_PURPLE	src/qcommon/q_shared.h	420;"	d
COLOR_RED	src/qcommon/q_shared.h	412;"	d
COLOR_SILVER	src/qcommon/q_shared.h	425;"	d
COLOR_TEAL	src/qcommon/q_shared.h	421;"	d
COLOR_WHITE	src/qcommon/q_shared.h	418;"	d
COLOR_YELLOW	src/qcommon/q_shared.h	414;"	d
COLUMN_MASK	src/server/sqlite3.c	103152;"	d	file:
COM	src/qcommon/vm_powerpc_asm.c	905;"	d	file:
COM1	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
COM2	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
COM3	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
COM32	src/qcommon/vm_powerpc_asm.c	906;"	d	file:
COM4	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
COMMA	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
COMMAND_HISTORY	src/client/keys.h	40;"	d
COMPILE_ARCH	GNUmakefile	/^  COMPILE_ARCH=$(shell uname -p | sed -e s\/i.86\/x86\/)$/;"	m
COMPILE_ARCH	GNUmakefile	/^  COMPILE_ARCH=alpha$/;"	m
COMPILE_ARCH	GNUmakefile	/^  COMPILE_ARCH=ppc$/;"	m
COMPILE_ARCH	GNUmakefile	/^  COMPILE_ARCH=ppc64$/;"	m
COMPILE_ARCH	GNUmakefile	/^  COMPILE_ARCH=x86$/;"	m
COMPILE_ARCH	GNUmakefile	/^  COMPILE_ARCH=x86_64$/;"	m
COMPILE_ARCH	GNUmakefile	/^COMPILE_ARCH=$(shell uname -m | sed -e s\/i.86\/x86\/)$/;"	m
COMPILE_PLATFORM	GNUmakefile	/^COMPILE_PLATFORM=$(shell uname|sed -e s\/_.*\/\/|tr '[:upper:]' '[:lower:]'|sed -e 's\/\\\/\/_\/g')$/;"	m
COM_BeginParseSession	src/qcommon/q_shared.c	/^void COM_BeginParseSession( const char *name )$/;"	f
COM_CompareExtension	src/qcommon/q_shared.c	/^qboolean COM_CompareExtension(const char *in, const char *ext)$/;"	f
COM_Compress	src/qcommon/q_shared.c	/^int COM_Compress( char *data_p ) {$/;"	f
COM_DefaultExtension	src/qcommon/q_shared.c	/^void COM_DefaultExtension( char *path, int maxSize, const char *extension )$/;"	f
COM_GetCurrentParseLine	src/qcommon/q_shared.c	/^int COM_GetCurrentParseLine( void )$/;"	f
COM_GetExtension	src/qcommon/q_shared.c	/^const char *COM_GetExtension( const char *name )$/;"	f
COM_MatchToken	src/qcommon/q_shared.c	/^void COM_MatchToken( char **buf_p, char *match ) {$/;"	f
COM_Parse	src/qcommon/q_shared.c	/^char *COM_Parse( char **data_p )$/;"	f
COM_Parse	src/tools/asm/cmdlib.c	/^char *COM_Parse (char *data)$/;"	f
COM_ParseError	src/qcommon/q_shared.c	/^void COM_ParseError( char *format, ... )$/;"	f
COM_ParseExt	src/qcommon/q_shared.c	/^char *COM_ParseExt( char **data_p, qboolean allowLineBreaks )$/;"	f
COM_ParseWarning	src/qcommon/q_shared.c	/^void COM_ParseWarning( char *format, ... )$/;"	f
COM_SkipPath	src/qcommon/q_shared.c	/^char *COM_SkipPath (char *pathname)$/;"	f
COM_StripExtension	src/qcommon/q_shared.c	/^void COM_StripExtension( const char *in, char *out, int destsize )$/;"	f
COND	src/tools/lcc/src/c.h	/^	COND=41<<4,$/;"	e	enum:__anon305
CONSOLE_HISTORY_FILE	src/client/cl_keys.c	1388;"	d	file:
CONSTANTS	src/tools/lcc/src/c.h	/^enum { CONSTANTS=1, LABELS, GLOBAL, PARAM, LOCAL };$/;"	e	enum:__anon303
CONTENTS_AREAPORTAL	src/qcommon/surfaceflags.h	44;"	d
CONTENTS_ASTRAL_NOCLIP	src/qcommon/surfaceflags.h	41;"	d
CONTENTS_BODY	src/qcommon/surfaceflags.h	58;"	d
CONTENTS_BOTCLIP	src/qcommon/surfaceflags.h	53;"	d
CONTENTS_CLUSTERPORTAL	src/qcommon/surfaceflags.h	51;"	d
CONTENTS_CORPSE	src/qcommon/surfaceflags.h	59;"	d
CONTENTS_DETAIL	src/qcommon/surfaceflags.h	60;"	d
CONTENTS_DONOTENTER	src/qcommon/surfaceflags.h	52;"	d
CONTENTS_FOG	src/qcommon/surfaceflags.h	35;"	d
CONTENTS_JUMPPAD	src/qcommon/surfaceflags.h	50;"	d
CONTENTS_LAVA	src/qcommon/surfaceflags.h	32;"	d
CONTENTS_MONSTERCLIP	src/qcommon/surfaceflags.h	47;"	d
CONTENTS_MOVER	src/qcommon/surfaceflags.h	54;"	d
CONTENTS_NOALIENBUILD	src/qcommon/surfaceflags.h	67;"	d
CONTENTS_NOBOTCLIP	src/qcommon/surfaceflags.h	39;"	d
CONTENTS_NOBUILD	src/qcommon/surfaceflags.h	69;"	d
CONTENTS_NODE	src/renderergl1/tr_local.h	653;"	d
CONTENTS_NODE	src/renderergl2/tr_local.h	1090;"	d
CONTENTS_NODROP	src/qcommon/surfaceflags.h	64;"	d
CONTENTS_NOHUMANBUILD	src/qcommon/surfaceflags.h	68;"	d
CONTENTS_NOTTEAM1	src/qcommon/surfaceflags.h	37;"	d
CONTENTS_NOTTEAM2	src/qcommon/surfaceflags.h	38;"	d
CONTENTS_ORIGIN	src/qcommon/surfaceflags.h	56;"	d
CONTENTS_PLAYERCLIP	src/qcommon/surfaceflags.h	46;"	d
CONTENTS_SLIME	src/qcommon/surfaceflags.h	33;"	d
CONTENTS_SOLID	src/qcommon/surfaceflags.h	31;"	d
CONTENTS_STRUCTURAL	src/qcommon/surfaceflags.h	61;"	d
CONTENTS_TELEPORTER	src/qcommon/surfaceflags.h	49;"	d
CONTENTS_TRANSLUCENT	src/qcommon/surfaceflags.h	62;"	d
CONTENTS_TRIGGER	src/qcommon/surfaceflags.h	63;"	d
CONTENTS_WATER	src/qcommon/surfaceflags.h	34;"	d
CON_Back	src/sys/con_tty.c	/^static void CON_Back( void )$/;"	f	file:
CON_CONNECTED	src/game/g_local.h	/^  CON_CONNECTED$/;"	e	enum:__anon309
CON_CONNECTING	src/game/g_local.h	/^  CON_CONNECTING,$/;"	e	enum:__anon309
CON_ColorCharToAttrib	src/sys/con_win32.c	/^static WORD CON_ColorCharToAttrib( char color ) {$/;"	f	file:
CON_CtrlHandler	src/sys/con_win32.c	/^static BOOL WINAPI CON_CtrlHandler( DWORD sig )$/;"	f	file:
CON_DISCONNECTED	src/game/g_local.h	/^  CON_DISCONNECTED,$/;"	e	enum:__anon309
CON_FlushIn	src/sys/con_tty.c	/^static void CON_FlushIn( void )$/;"	f	file:
CON_HISTORY	src/sys/con_tty.c	66;"	d	file:
CON_Hide	src/sys/con_tty.c	/^static void CON_Hide( void )$/;"	f	file:
CON_Hide	src/sys/con_win32.c	/^static void CON_Hide( void )$/;"	f	file:
CON_HistAdd	src/sys/con_win32.c	/^static void CON_HistAdd( void )$/;"	f	file:
CON_HistNext	src/sys/con_win32.c	/^static void CON_HistNext( void )$/;"	f	file:
CON_HistPrev	src/sys/con_win32.c	/^static void CON_HistPrev( void )$/;"	f	file:
CON_Init	src/sys/con_passive.c	/^void CON_Init( void )$/;"	f
CON_Init	src/sys/con_tty.c	/^void CON_Init( void )$/;"	f
CON_Init	src/sys/con_win32.c	/^void CON_Init( void )$/;"	f
CON_Input	src/sys/con_passive.c	/^char *CON_Input( void )$/;"	f
CON_Input	src/sys/con_tty.c	/^char *CON_Input( void )$/;"	f
CON_Input	src/sys/con_win32.c	/^char *CON_Input( void )$/;"	f
CON_LogFree	src/sys/con_log.c	/^static unsigned int CON_LogFree( void )$/;"	f	file:
CON_LogRead	src/sys/con_log.c	/^unsigned int CON_LogRead( char *out, unsigned int outSize )$/;"	f
CON_LogSize	src/sys/con_log.c	/^unsigned int CON_LogSize( void )$/;"	f
CON_LogWrite	src/sys/con_log.c	/^unsigned int CON_LogWrite( const char *in )$/;"	f
CON_Print	src/sys/con_passive.c	/^void CON_Print( const char *msg )$/;"	f
CON_Print	src/sys/con_tty.c	/^void CON_Print( const char *msg )$/;"	f
CON_Print	src/sys/con_win32.c	/^void CON_Print( const char *msg )$/;"	f
CON_Show	src/sys/con_tty.c	/^static void CON_Show( void )$/;"	f	file:
CON_Show	src/sys/con_win32.c	/^static void CON_Show( void )$/;"	f	file:
CON_Shutdown	src/sys/con_passive.c	/^void CON_Shutdown( void )$/;"	f
CON_Shutdown	src/sys/con_tty.c	/^void CON_Shutdown( void )$/;"	f
CON_Shutdown	src/sys/con_win32.c	/^void CON_Shutdown( void )$/;"	f
CON_SigCont	src/sys/con_tty.c	/^void CON_SigCont(int signum)$/;"	f
CON_TEXTSIZE	src/client/cl_console.c	33;"	d	file:
CON_WindowsColorPrint	src/sys/con_win32.c	/^void CON_WindowsColorPrint( const char *msg )$/;"	f
COPYBINDIR	GNUmakefile	/^COPYBINDIR=$(COPYDIR)$/;"	m
COPYDIR	GNUmakefile	/^  COPYDIR="\/usr\/local\/share\/games\/tremulous"$/;"	m
COPYDIR	GNUmakefile	/^COPYDIR="\/usr\/local\/games\/tremulous"$/;"	m
COPYSAMPLE	src/renderergl2/tr_image.c	1216;"	d	file:
COPYSAMPLE	src/renderergl2/tr_image.c	508;"	d	file:
CORRUPT_DB	src/server/sqlite3.c	14092;"	d	file:
CO_EQ	src/game/g_maprotation.c	/^  CO_EQ,$/;"	e	enum:__anon321	file:
CO_GT	src/game/g_maprotation.c	/^  CO_GT$/;"	e	enum:__anon321	file:
CO_LT	src/game/g_maprotation.c	/^  CO_LT,$/;"	e	enum:__anon321	file:
CP	src/game/g_admin.h	27;"	d
CPx	src/game/g_admin.h	28;"	d
CR	src/qcommon/vm_powerpc_asm.c	288;"	d	file:
CRC_INIT_VALUE	src/tools/asm/cmdlib.c	1026;"	d	file:
CRC_Init	src/tools/asm/cmdlib.c	/^void CRC_Init(unsigned short *crcvalue)$/;"	f
CRC_ProcessByte	src/tools/asm/cmdlib.c	/^void CRC_ProcessByte(unsigned short *crcvalue, byte data)$/;"	f
CRC_Value	src/tools/asm/cmdlib.c	/^unsigned short CRC_Value(unsigned short crcvalue)$/;"	f
CRC_XOR_VALUE	src/tools/asm/cmdlib.c	1027;"	d	file:
CREEP_ARMOUR_MODIFIER	src/game/tremulous.h	236;"	d
CREEP_BASESIZE	src/game/tremulous.h	233;"	d
CREEP_DISTANCE	src/cgame/cg_buildable.c	98;"	d	file:
CREEP_MODIFIER	src/game/tremulous.h	235;"	d
CREEP_SCALEDOWN_TIME	src/game/tremulous.h	237;"	d
CREEP_SIZE	src/cgame/cg_buildable.c	97;"	d	file:
CREEP_TIMEOUT	src/game/tremulous.h	234;"	d
CRFD	src/qcommon/vm_powerpc_asm.c	270;"	d	file:
CROSSHAIR_ALWAYSOFF	src/cgame/cg_local.h	2322;"	d
CROSSHAIR_ALWAYSON	src/cgame/cg_local.h	2324;"	d
CROSSHAIR_CLIENT_TIMEOUT	src/cgame/cg_local.h	925;"	d
CROSSHAIR_RANGEDONLY	src/cgame/cg_local.h	2323;"	d
CROSS_COMPILING	GNUmakefile	/^    CROSS_COMPILING=0$/;"	m
CROSS_COMPILING	GNUmakefile	/^    CROSS_COMPILING=1$/;"	m
CROSS_COMPILING	GNUmakefile	/^  CROSS_COMPILING=0$/;"	m
CROSS_COMPILING	GNUmakefile	/^  CROSS_COMPILING=1$/;"	m
CROUCH_VIEWHEIGHT	src/game/bg_public.h	40;"	d
CS_ACTIVE	src/server/server.h	/^	CS_ACTIVE		\/\/ client is fully in game$/;"	e	enum:__anon186
CS_ALIEN_STAGES	src/game/bg_public.h	/^  CS_ALIEN_STAGES,$/;"	e	enum:__anon326
CS_BOTINFO	src/game/bg_public.h	/^  CS_BOTINFO,$/;"	e	enum:__anon326
CS_CLIENTS_READY	src/game/bg_public.h	/^  CS_CLIENTS_READY,$/;"	e	enum:__anon326
CS_CONNECTED	src/server/server.h	/^	CS_CONNECTED,	\/\/ has been assigned to a client_t, but no gamestate yet$/;"	e	enum:__anon186
CS_COUNTDOWN	src/game/bg_public.h	/^  CS_COUNTDOWN,                \/\/ server time when the match will be restarted$/;"	e	enum:__anon326
CS_FILENAME	src/master/stats.c	37;"	d	file:
CS_FREE	src/server/server.h	/^	CS_FREE,		\/\/ can be reused for a new connection$/;"	e	enum:__anon186
CS_GAME_VERSION	src/game/bg_public.h	/^  CS_GAME_VERSION     = CS_VOTE_CALLER + NUM_TEAMS,$/;"	e	enum:__anon326
CS_HUMAN_STAGES	src/game/bg_public.h	/^  CS_HUMAN_STAGES,$/;"	e	enum:__anon326
CS_INTERMISSION	src/game/bg_public.h	/^  CS_INTERMISSION,          \/\/ when 1, fraglimit\/timelimit has been hit and intermission will start in a second or two$/;"	e	enum:__anon326
CS_LEVEL_START_TIME	src/game/bg_public.h	/^  CS_LEVEL_START_TIME,      \/\/ so the timer only shows the current level$/;"	e	enum:__anon326
CS_LOCATIONS	src/game/bg_public.h	/^  CS_LOCATIONS        = CS_PLAYERS + MAX_CLIENTS,$/;"	e	enum:__anon326
CS_MAX	src/game/bg_public.h	/^  CS_MAX              = CS_LOCATIONS + MAX_LOCATIONS$/;"	e	enum:__anon326
CS_MESSAGE	src/game/bg_public.h	/^  CS_MESSAGE,               \/\/ from the map worldspawn's message field$/;"	e	enum:__anon326
CS_MODELS	src/game/bg_public.h	/^  CS_MODELS,$/;"	e	enum:__anon326
CS_MOTD	src/game/bg_public.h	/^  CS_MOTD,                  \/\/ g_motd string for server message of the day$/;"	e	enum:__anon326
CS_MUSIC	src/game/bg_public.h	/^  CS_MUSIC            = 2,$/;"	e	enum:__anon326
CS_PARTICLE_SYSTEMS	src/game/bg_public.h	/^  CS_PARTICLE_SYSTEMS = CS_SHADERS + MAX_GAME_SHADERS,$/;"	e	enum:__anon326
CS_PLAYERS	src/game/bg_public.h	/^  CS_PLAYERS          = CS_PARTICLE_SYSTEMS + MAX_GAME_PARTICLE_SYSTEMS,$/;"	e	enum:__anon326
CS_PRIMED	src/server/server.h	/^	CS_PRIMED,		\/\/ gamestate has been sent, but client hasn't sent a usercmd$/;"	e	enum:__anon186
CS_SERVERINFO	src/qcommon/q_shared.h	1218;"	d
CS_SHADERS	src/game/bg_public.h	/^  CS_SHADERS          = CS_SOUNDS + MAX_SOUNDS,$/;"	e	enum:__anon326
CS_SHADERSTATE	src/game/bg_public.h	/^  CS_SHADERSTATE,$/;"	e	enum:__anon326
CS_SOUNDS	src/game/bg_public.h	/^  CS_SOUNDS           = CS_MODELS + MAX_MODELS,$/;"	e	enum:__anon326
CS_SYSTEMINFO	src/qcommon/q_shared.h	1219;"	d
CS_VOTE_ACTIVE	src/game/bg_public.h	/^  CS_VOTE_ACTIVE          = CS_VOTE_CAST + NUM_TEAMS,$/;"	e	enum:__anon326
CS_VOTE_CALLER	src/game/bg_public.h	/^  CS_VOTE_CALLER      = CS_VOTE_ACTIVE + NUM_TEAMS,$/;"	e	enum:__anon326
CS_VOTE_CAST	src/game/bg_public.h	/^  CS_VOTE_CAST         = CS_VOTE_STRING + NUM_TEAMS,$/;"	e	enum:__anon326
CS_VOTE_STRING	src/game/bg_public.h	/^  CS_VOTE_STRING      = CS_VOTE_TIME + NUM_TEAMS,$/;"	e	enum:__anon326
CS_VOTE_TIME	src/game/bg_public.h	/^  CS_VOTE_TIME,             \/\/ Vote stuff each needs NUM_TEAMS slots$/;"	e	enum:__anon326
CS_WARMUP	src/game/bg_public.h	/^  CS_WARMUP,                \/\/ g_warmup$/;"	e	enum:__anon326
CS_WARMUP_READY	src/game/bg_public.h	/^  CS_WARMUP_READY,$/;"	e	enum:__anon326
CS_WINNER	src/game/bg_public.h	/^  CS_WINNER ,               \/\/ string indicating round winner$/;"	e	enum:__anon326
CS_ZOMBIE	src/server/server.h	/^	CS_ZOMBIE,		\/\/ client has been disconnected, but don't reuse$/;"	e	enum:__anon186
CTIMEOPT_VAL	src/server/sqlite3.c	15416;"	d	file:
CTIMEOPT_VAL_	src/server/sqlite3.c	15415;"	d	file:
CTRL	src/sdl/sdl_input.c	52;"	d	file:
CTRL_FREE	src/server/sqlite3.c	20058;"	d	file:
CTRL_LOGSIZE	src/server/sqlite3.c	20057;"	d	file:
CTX	src/qcommon/vm_powerpc_asm.c	605;"	d	file:
CTX_MASK	src/qcommon/vm_powerpc_asm.c	606;"	d	file:
CT_BACK_SIDED	src/renderergl1/tr_local.h	/^	CT_BACK_SIDED,$/;"	e	enum:__anon143
CT_BACK_SIDED	src/renderergl2/tr_local.h	/^	CT_BACK_SIDED,$/;"	e	enum:__anon27
CT_FRONT_SIDED	src/renderergl1/tr_local.h	/^	CT_FRONT_SIDED,$/;"	e	enum:__anon143
CT_FRONT_SIDED	src/renderergl2/tr_local.h	/^	CT_FRONT_SIDED,$/;"	e	enum:__anon27
CT_TWO_SIDED	src/renderergl1/tr_local.h	/^	CT_TWO_SIDED$/;"	e	enum:__anon143
CT_TWO_SIDED	src/renderergl2/tr_local.h	/^	CT_TWO_SIDED$/;"	e	enum:__anon27
CUBE_MAP_MIPS	src/renderergl2/tr_local.h	58;"	d
CUBE_MAP_SIZE	src/renderergl2/tr_local.h	59;"	d
CULLINFO_BOX	src/renderergl2/tr_local.h	1067;"	d
CULLINFO_NONE	src/renderergl2/tr_local.h	1066;"	d
CULLINFO_PLANE	src/renderergl2/tr_local.h	1069;"	d
CULLINFO_SPHERE	src/renderergl2/tr_local.h	1068;"	d
CULL_CLIP	src/renderergl1/tr_local.h	1090;"	d
CULL_CLIP	src/renderergl2/tr_local.h	1864;"	d
CULL_IN	src/renderergl1/tr_local.h	1089;"	d
CULL_IN	src/renderergl2/tr_local.h	1863;"	d
CULL_OUT	src/renderergl1/tr_local.h	1091;"	d
CULL_OUT	src/renderergl2/tr_local.h	1865;"	d
CURL_CFLAGS	GNUmakefile	/^    CURL_CFLAGS ?= $(shell pkg-config --silence-errors --cflags libcurl)$/;"	m
CURL_LIBS	GNUmakefile	/^    CURL_LIBS ?= $(shell pkg-config --silence-errors --libs libcurl)$/;"	m
CURL_LIBS	GNUmakefile	/^    CURL_LIBS ?= -lcurl$/;"	m
CURSOR_ARROW	src/ui/ui_shared.h	71;"	d
CURSOR_FAULT	src/server/sqlite3.c	55383;"	d	file:
CURSOR_INVALID	src/server/sqlite3.c	55379;"	d	file:
CURSOR_NONE	src/ui/ui_shared.h	70;"	d
CURSOR_REQUIRESEEK	src/server/sqlite3.c	55382;"	d	file:
CURSOR_SIZER	src/ui/ui_shared.h	72;"	d
CURSOR_SKIPNEXT	src/server/sqlite3.c	55381;"	d	file:
CURSOR_VALID	src/server/sqlite3.c	55380;"	d	file:
CURTYPE_BTREE	src/server/sqlite3.c	15907;"	d	file:
CURTYPE_PSEUDO	src/server/sqlite3.c	15910;"	d	file:
CURTYPE_SORTER	src/server/sqlite3.c	15908;"	d	file:
CURTYPE_VTAB	src/server/sqlite3.c	15909;"	d	file:
CVAR_ALTERNATE_SYSTEMINFO	src/qcommon/q_shared.h	1012;"	d
CVAR_ARCHIVE	src/qcommon/q_shared.h	990;"	d
CVAR_CHEAT	src/qcommon/q_shared.h	1006;"	d
CVAR_DISABLE	src/ui/ui_shared.h	266;"	d
CVAR_ENABLE	src/ui/ui_shared.h	265;"	d
CVAR_HIDE	src/ui/ui_shared.h	268;"	d
CVAR_INIT	src/qcommon/q_shared.h	996;"	d
CVAR_LATCH	src/qcommon/q_shared.h	998;"	d
CVAR_MODIFIED	src/qcommon/q_shared.h	1014;"	d
CVAR_NONEXISTENT	src/qcommon/q_shared.h	1015;"	d
CVAR_NORESTART	src/qcommon/q_shared.h	1007;"	d
CVAR_PROTECTED	src/qcommon/q_shared.h	1011;"	d
CVAR_ROM	src/qcommon/q_shared.h	1003;"	d
CVAR_SERVERINFO	src/qcommon/q_shared.h	994;"	d
CVAR_SERVER_CREATED	src/qcommon/q_shared.h	1009;"	d
CVAR_SHOW	src/ui/ui_shared.h	267;"	d
CVAR_SYSTEMINFO	src/qcommon/q_shared.h	995;"	d
CVAR_TEMP	src/qcommon/q_shared.h	1005;"	d
CVAR_USERINFO	src/qcommon/q_shared.h	993;"	d
CVAR_USER_CREATED	src/qcommon/q_shared.h	1004;"	d
CVAR_VM_CREATED	src/qcommon/q_shared.h	1010;"	d
CV_ERR	src/game/g_maprotation.c	/^  CV_ERR,$/;"	e	enum:__anon320	file:
CV_LASTWIN	src/game/g_maprotation.c	/^  CV_LASTWIN$/;"	e	enum:__anon320	file:
CV_NUMCLIENTS	src/game/g_maprotation.c	/^  CV_NUMCLIENTS,$/;"	e	enum:__anon320	file:
CV_RANDOM	src/game/g_maprotation.c	/^  CV_RANDOM,$/;"	e	enum:__anon320	file:
C_ALPH	src/tools/lcc/cpp/lex.c	32;"	d	file:
C_EOF	src/tools/lcc/cpp/lex.c	34;"	d	file:
C_NUM	src/tools/lcc/cpp/lex.c	33;"	d	file:
C_WS	src/tools/lcc/cpp/lex.c	31;"	d	file:
C_XX	src/tools/lcc/cpp/lex.c	35;"	d	file:
CalcMuzzlePoint	src/game/g_weapon.c	/^void CalcMuzzlePoint( gentity_t *ent, vec3_t forward, vec3_t right, vec3_t up, vec3_t muzzlePoint )$/;"	f
CalcSplit	src/renderergl2/tr_main.c	/^static float CalcSplit(float n, float f, float i, float m)$/;"	f	file:
CalculateRanks	src/game/g_main.c	/^void CalculateRanks( void )$/;"	f
CallThunk	src/qcommon/vm_sparc.c	/^	unsigned int *CallThunk;$/;"	m	struct:VM_Data	file:
CanDamage	src/game/g_combat.c	/^qboolean CanDamage( gentity_t *targ, vec3_t origin )$/;"	f
Capture	src/client/snd_local.h	/^	void (*Capture)( int samples, byte *data );$/;"	m	struct:__anon96
CaptureFunc	src/ui/ui_shared.h	/^typedef void ( CaptureFunc ) ( void *p );$/;"	t
Cbuf_AddText	src/qcommon/cmd.c	/^void Cbuf_AddText( const char *text ) {$/;"	f
Cbuf_Execute	src/qcommon/cmd.c	/^void Cbuf_Execute (void)$/;"	f
Cbuf_ExecuteText	src/qcommon/cmd.c	/^void Cbuf_ExecuteText (int exec_when, const char *text)$/;"	f
Cbuf_Init	src/qcommon/cmd.c	/^void Cbuf_Init (void)$/;"	f
Cbuf_InsertText	src/qcommon/cmd.c	/^void Cbuf_InsertText( const char *text ) {$/;"	f
CellArray	src/server/sqlite3.c	/^struct CellArray {$/;"	s	file:
CellArray	src/server/sqlite3.c	/^typedef struct CellArray CellArray;$/;"	t	typeref:struct:CellArray	file:
CellInfo	src/server/sqlite3.c	/^struct CellInfo {$/;"	s	file:
CellInfo	src/server/sqlite3.c	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo	file:
CheckCkitRepair	src/game/g_weapon.c	/^void CheckCkitRepair( gentity_t *ent )$/;"	f
CheckCvars	src/game/g_main.c	/^void CheckCvars( void )$/;"	f
CheckExitRules	src/game/g_main.c	/^void CheckExitRules( void )$/;"	f
CheckGrabAttack	src/game/g_weapon.c	/^void CheckGrabAttack( gentity_t *ent )$/;"	f
CheckIntermissionExit	src/game/g_main.c	/^void CheckIntermissionExit( void )$/;"	f
CheckParm	src/tools/asm/cmdlib.c	/^int CheckParm (const char *check)$/;"	f
CheckPounceAttack	src/game/g_weapon.c	/^qboolean CheckPounceAttack( gentity_t *ent )$/;"	f
CheckTeamStatus	src/game/g_team.c	/^void CheckTeamStatus( void )$/;"	f
CheckVenomAttack	src/game/g_weapon.c	/^qboolean CheckVenomAttack( gentity_t *ent )$/;"	f
CheckWinding	src/qcommon/cm_polylib.c	/^void CheckWinding (winding_t *w)$/;"	f
ChooseLeaf	src/server/sqlite3.c	/^static int ChooseLeaf($/;"	f	file:
ChopWinding	src/qcommon/cm_polylib.c	/^winding_t	*ChopWinding (winding_t *in, vec3_t normal, vec_t dist)$/;"	f
ChopWindingInPlace	src/qcommon/cm_polylib.c	/^void ChopWindingInPlace (winding_t **inout, vec3_t normal, vec_t dist, vec_t epsilon)$/;"	f
ClampChar	src/qcommon/q_math.c	/^signed char ClampChar( int i ) {$/;"	f
ClampShort	src/qcommon/q_math.c	/^signed short ClampShort( int i ) {$/;"	f
Cleanup	src/server/sqlite3.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
ClearBounds	src/qcommon/q_math.c	/^void ClearBounds( vec3_t mins, vec3_t maxs ) {$/;"	f
ClearLoopingSounds	src/client/snd_local.h	/^	void (*ClearLoopingSounds)( qboolean killall );$/;"	m	struct:__anon96
ClearScene	src/renderercommon/tr_public.h	/^	void	(*ClearScene)( void );$/;"	m	struct:__anon108
ClearSkyBox	src/renderergl1/tr_sky.c	/^static void ClearSkyBox (void) {$/;"	f	file:
ClearSkyBox	src/renderergl2/tr_sky.c	/^static void ClearSkyBox (void) {$/;"	f	file:
ClearSoundBuffer	src/client/snd_local.h	/^	void (*ClearSoundBuffer)( void );$/;"	m	struct:__anon96
ClientBegin	src/game/g_client.c	/^void ClientBegin( int clientNum )$/;"	f
ClientCommand	src/game/g_cmds.c	/^void ClientCommand( int clientNum )$/;"	f
ClientConnect	src/game/g_client.c	/^char *ClientConnect( int clientNum, qboolean firstTime )$/;"	f
ClientDisconnect	src/game/g_client.c	/^void ClientDisconnect( int clientNum )$/;"	f
ClientEndFrame	src/game/g_active.c	/^void ClientEndFrame( gentity_t *ent )$/;"	f
ClientEvents	src/game/g_active.c	/^void ClientEvents( gentity_t *ent, int oldEventSequence )$/;"	f
ClientForString	src/game/g_svcmds.c	/^static gclient_t *ClientForString( char *s )$/;"	f	file:
ClientImpacts	src/game/g_active.c	/^void ClientImpacts( gentity_t *ent, pmove_t *pm )$/;"	f
ClientInactivityTimer	src/game/g_active.c	/^qboolean ClientInactivityTimer( gentity_t *ent )$/;"	f
ClientIntermissionThink	src/game/g_active.c	/^void ClientIntermissionThink( gclient_t *client )$/;"	f
ClientShove	src/game/g_active.c	/^static void ClientShove( gentity_t *ent, gentity_t *victim )$/;"	f	file:
ClientSpawn	src/game/g_client.c	/^void ClientSpawn( gentity_t *ent, gentity_t *spawn, const vec3_t origin, const vec3_t angles )$/;"	f
ClientThink	src/game/g_active.c	/^void ClientThink( int clientNum )$/;"	f
ClientThink_real	src/game/g_active.c	/^void ClientThink_real( gentity_t *ent )$/;"	f
ClientTimerActions	src/game/g_active.c	/^void ClientTimerActions( gentity_t *ent, int msec )$/;"	f
ClientUserinfoChanged	src/game/g_client.c	/^char *ClientUserinfoChanged( int clientNum, qboolean forceName )$/;"	f
ClipSkyPolygon	src/renderergl1/tr_sky.c	/^static void ClipSkyPolygon (int nump, vec3_t vecs, int stage) $/;"	f	file:
ClipSkyPolygon	src/renderergl2/tr_sky.c	/^static void ClipSkyPolygon (int nump, vec3_t vecs, int stage) $/;"	f	file:
ClipWindingEpsilon	src/qcommon/cm_polylib.c	/^void	ClipWindingEpsilon (winding_t *in, vec3_t normal, vec_t dist, $/;"	f
CloseBufferedFile	src/renderercommon/tr_image_png.c	/^static void CloseBufferedFile(struct BufferedFile *BF)$/;"	f	file:
Cmd_ActivateItem_f	src/game/g_cmds.c	/^void Cmd_ActivateItem_f( gentity_t *ent )$/;"	f
Cmd_AddCommand	src/qcommon/cmd.c	/^void	Cmd_AddCommand( const char *cmd_name, xcommand_t function ) {$/;"	f
Cmd_AddCommand	src/renderercommon/tr_public.h	/^	void	(*Cmd_AddCommand)( const char *name, void(*cmd)(void) );$/;"	m	struct:__anon109
Cmd_AdminMessage_f	src/game/g_cmds.c	/^void Cmd_AdminMessage_f( gentity_t *ent )$/;"	f
Cmd_Argc	src/qcommon/cmd.c	/^int		Cmd_Argc( void ) {$/;"	f
Cmd_Argc	src/renderercommon/tr_public.h	/^	int		(*Cmd_Argc) (void);$/;"	m	struct:__anon109
Cmd_Args	src/qcommon/cmd.c	/^char	*Cmd_Args( void ) {$/;"	f
Cmd_ArgsBuffer	src/qcommon/cmd.c	/^void	Cmd_ArgsBuffer( char *buffer, int bufferLength ) {$/;"	f
Cmd_ArgsFrom	src/qcommon/cmd.c	/^char *Cmd_ArgsFrom( int arg ) {$/;"	f
Cmd_Argv	src/qcommon/cmd.c	/^char	*Cmd_Argv( int arg ) {$/;"	f
Cmd_Argv	src/renderercommon/tr_public.h	/^	char	*(*Cmd_Argv) (int i);$/;"	m	struct:__anon109
Cmd_ArgvBuffer	src/qcommon/cmd.c	/^void	Cmd_ArgvBuffer( int arg, char *buffer, int bufferLength ) {$/;"	f
Cmd_Build_f	src/game/g_cmds.c	/^void Cmd_Build_f( gentity_t *ent )$/;"	f
Cmd_Buy_f	src/game/g_cmds.c	/^void Cmd_Buy_f( gentity_t *ent )$/;"	f
Cmd_CallVote_f	src/game/g_cmds.c	/^void Cmd_CallVote_f( gentity_t *ent )$/;"	f
Cmd_Class_f	src/game/g_cmds.c	/^void Cmd_Class_f( gentity_t *ent )$/;"	f
Cmd_Cmd	src/qcommon/cmd.c	/^char *Cmd_Cmd(void)$/;"	f
Cmd_CommandCompletion	src/qcommon/cmd.c	/^void	Cmd_CommandCompletion( void(*callback)(const char *s) ) {$/;"	f
Cmd_CompleteArgument	src/qcommon/cmd.c	/^void Cmd_CompleteArgument( const char *command, char *args, int argNum ) {$/;"	f
Cmd_CompleteCfgName	src/qcommon/cmd.c	/^void Cmd_CompleteCfgName( char *args, int argNum ) {$/;"	f
Cmd_CompleteTxtName	src/client/cl_console.c	/^void Cmd_CompleteTxtName( char *args, int argNum ) {$/;"	f
Cmd_Damage_f	src/game/g_cmds.c	/^void Cmd_Damage_f( gentity_t *ent )$/;"	f
Cmd_DeActivateItem_f	src/game/g_cmds.c	/^void Cmd_DeActivateItem_f( gentity_t *ent )$/;"	f
Cmd_Destroy_f	src/game/g_cmds.c	/^void Cmd_Destroy_f( gentity_t *ent )$/;"	f
Cmd_Donate_f	src/game/g_cmds.c	/^void Cmd_Donate_f( gentity_t *ent )$/;"	f
Cmd_Echo_f	src/qcommon/cmd.c	/^void Cmd_Echo_f (void)$/;"	f
Cmd_Exec_f	src/qcommon/cmd.c	/^void Cmd_Exec_f( void ) {$/;"	f
Cmd_ExecuteString	src/qcommon/cmd.c	/^void	Cmd_ExecuteString( const char *text ) {	$/;"	f
Cmd_ExecuteText	src/renderercommon/tr_public.h	/^	void	(*Cmd_ExecuteText) (int exec_when, const char *text);$/;"	m	struct:__anon109
Cmd_FindCommand	src/qcommon/cmd.c	/^cmd_function_t *Cmd_FindCommand( const char *cmd_name )$/;"	f
Cmd_FollowCycle_f	src/game/g_cmds.c	/^void Cmd_FollowCycle_f( gentity_t *ent )$/;"	f
Cmd_Follow_f	src/game/g_cmds.c	/^void Cmd_Follow_f( gentity_t *ent )$/;"	f
Cmd_Give_f	src/game/g_cmds.c	/^void Cmd_Give_f( gentity_t *ent )$/;"	f
Cmd_God_f	src/game/g_cmds.c	/^void Cmd_God_f( gentity_t *ent )$/;"	f
Cmd_Ignore_f	src/game/g_cmds.c	/^static void Cmd_Ignore_f( gentity_t *ent )$/;"	f	file:
Cmd_Init	src/qcommon/cmd.c	/^void Cmd_Init (void) {$/;"	f
Cmd_Kill_f	src/game/g_cmds.c	/^void Cmd_Kill_f( gentity_t *ent )$/;"	f
Cmd_ListMaps_f	src/game/g_cmds.c	/^void Cmd_ListMaps_f( gentity_t *ent )$/;"	f
Cmd_ListModels_f	src/game/g_cmds.c	/^void Cmd_ListModels_f( gentity_t *ent )$/;"	f
Cmd_ListSkins_f	src/game/g_cmds.c	/^void Cmd_ListSkins_f( gentity_t *ent )$/;"	f
Cmd_List_f	src/qcommon/cmd.c	/^void Cmd_List_f (void)$/;"	f
Cmd_LiteralArgsBuffer	src/qcommon/cmd.c	/^void	Cmd_LiteralArgsBuffer( char *buffer, int bufferLength ) {$/;"	f
Cmd_Noclip_f	src/game/g_cmds.c	/^void Cmd_Noclip_f( gentity_t *ent )$/;"	f
Cmd_Notarget_f	src/game/g_cmds.c	/^void Cmd_Notarget_f( gentity_t *ent )$/;"	f
Cmd_PlayMap_f	src/game/g_cmds.c	/^void Cmd_PlayMap_f( gentity_t *ent )$/;"	f
Cmd_PrivateMessage_f	src/game/g_cmds.c	/^void Cmd_PrivateMessage_f( gentity_t *ent )$/;"	f
Cmd_Ready_f	src/game/g_cmds.c	/^void Cmd_Ready_f( gentity_t *ent )$/;"	f
Cmd_Reload_f	src/game/g_cmds.c	/^void Cmd_Reload_f( gentity_t *ent )$/;"	f
Cmd_RemoveCommand	src/qcommon/cmd.c	/^void	Cmd_RemoveCommand( const char *cmd_name ) {$/;"	f
Cmd_RemoveCommand	src/renderercommon/tr_public.h	/^	void	(*Cmd_RemoveCommand)( const char *name );$/;"	m	struct:__anon109
Cmd_RemoveCommandSafe	src/qcommon/cmd.c	/^void Cmd_RemoveCommandSafe( const char *cmd_name )$/;"	f
Cmd_RestoreCmdContext	src/qcommon/cmd.c	/^void Cmd_RestoreCmdContext( void )$/;"	f
Cmd_SaveCmdContext	src/qcommon/cmd.c	/^void Cmd_SaveCmdContext( void )$/;"	f
Cmd_SayArea_f	src/game/g_cmds.c	/^static void Cmd_SayArea_f( gentity_t *ent )$/;"	f	file:
Cmd_Say_f	src/game/g_cmds.c	/^static void Cmd_Say_f( gentity_t *ent )$/;"	f	file:
Cmd_Sell_f	src/game/g_cmds.c	/^void Cmd_Sell_f( gentity_t *ent )$/;"	f
Cmd_SetCommandCompletionFunc	src/qcommon/cmd.c	/^void Cmd_SetCommandCompletionFunc( const char *command, completionFunc_t complete ) {$/;"	f
Cmd_SetViewpos_f	src/game/g_cmds.c	/^void Cmd_SetViewpos_f( gentity_t *ent )$/;"	f
Cmd_Share_f	src/game/g_cmds.c	/^void Cmd_Share_f( gentity_t *ent )$/;"	f
Cmd_Team_f	src/game/g_cmds.c	/^void Cmd_Team_f( gentity_t *ent )$/;"	f
Cmd_Test_f	src/game/g_cmds.c	/^void Cmd_Test_f( gentity_t *humanPlayer )$/;"	f
Cmd_ToggleItem_f	src/game/g_cmds.c	/^void Cmd_ToggleItem_f( gentity_t *ent )$/;"	f
Cmd_TokenizeString	src/qcommon/cmd.c	/^void Cmd_TokenizeString( const char *text_in ) {$/;"	f
Cmd_TokenizeString2	src/qcommon/cmd.c	/^static void Cmd_TokenizeString2( const char *text_in, qboolean ignoreQuotes ) {$/;"	f	file:
Cmd_TokenizeStringIgnoreQuotes	src/qcommon/cmd.c	/^void Cmd_TokenizeStringIgnoreQuotes( const char *text_in ) {$/;"	f
Cmd_VSay_f	src/game/g_cmds.c	/^void Cmd_VSay_f( gentity_t *ent )$/;"	f
Cmd_Vote_f	src/game/g_cmds.c	/^void Cmd_Vote_f( gentity_t *ent )$/;"	f
Cmd_Vstr_f	src/qcommon/cmd.c	/^void Cmd_Vstr_f( void ) {$/;"	f
Cmd_Wait_f	src/qcommon/cmd.c	/^void Cmd_Wait_f( void ) {$/;"	f
Cmd_Where_f	src/game/g_cmds.c	/^void Cmd_Where_f( gentity_t *ent )$/;"	f
Code	src/tools/lcc/src/c.h	/^typedef struct code *Code;$/;"	t	typeref:struct:code
CodeError	src/tools/asm/q3asm.c	/^static void CodeError( char *fmt, ... ) {$/;"	f	file:
CollSeq	src/server/sqlite3.c	/^struct CollSeq {$/;"	s	file:
CollSeq	src/server/sqlite3.c	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq	file:
CollapseMultitexture	src/renderergl1/tr_shader.c	/^static qboolean CollapseMultitexture( void ) {$/;"	f	file:
CollapseStagesToGLSL	src/renderergl2/tr_shader.c	/^static int CollapseStagesToGLSL(void)$/;"	f	file:
CollapseStagesToLightall	src/renderergl2/tr_shader.c	/^static void CollapseStagesToLightall(shaderStage_t *diffuse, $/;"	f	file:
ColorBytes3	src/qcommon/q_math.c	/^unsigned ColorBytes3 (float r, float g, float b) {$/;"	f
ColorBytes4	src/qcommon/q_math.c	/^unsigned ColorBytes4 (float r, float g, float b, float a) {$/;"	f
ColorIndex	src/qcommon/q_shared.h	428;"	d
ColorIndexForNumber	src/qcommon/q_shared.h	427;"	d
ColorToRGBA16F	src/renderergl2/tr_bsp.c	/^void ColorToRGBA16F(const vec3_t color, unsigned short rgba16f[4])$/;"	f
ColorToRGBM	src/renderergl2/tr_bsp.c	/^void ColorToRGBM(const vec3_t color, unsigned char rgbm[4])$/;"	f
Color_Parse	src/ui/ui_shared.c	/^qboolean Color_Parse( char **p, vec4_t *c )$/;"	f
ColourType	src/renderercommon/tr_image_png.c	/^	uint8_t  ColourType;$/;"	m	struct:PNG_Chunk_IHDR	file:
Column	src/server/sqlite3.c	/^struct Column {$/;"	s	file:
Column	src/server/sqlite3.c	/^typedef struct Column Column;$/;"	t	typeref:struct:Column	file:
Com_AddStartupCommands	src/qcommon/common.c	/^qboolean Com_AddStartupCommands( void ) {$/;"	f
Com_BeginRedirect	src/qcommon/common.c	/^void Com_BeginRedirect (char *buffer, int buffersize, void (*flush)( char *) )$/;"	f
Com_BlockChecksum	src/qcommon/md4.c	/^unsigned Com_BlockChecksum (const void *buffer, int length)$/;"	f
Com_CharIsOneOfCharset	src/qcommon/q_shared.c	/^static qboolean Com_CharIsOneOfCharset( char c, char *set )$/;"	f	file:
Com_Clamp	src/qcommon/q_shared.c	/^float Com_Clamp( float min, float max, float value ) {$/;"	f
Com_ClientListAdd	src/qcommon/q_shared.c	/^void Com_ClientListAdd( clientList_t *list, int clientNum )$/;"	f
Com_ClientListContains	src/qcommon/q_shared.c	/^qboolean Com_ClientListContains( const clientList_t *list, int clientNum )$/;"	f
Com_ClientListParse	src/qcommon/q_shared.c	/^void Com_ClientListParse( clientList_t *list, const char *s )$/;"	f
Com_ClientListRemove	src/qcommon/q_shared.c	/^void Com_ClientListRemove( clientList_t *list, int clientNum )$/;"	f
Com_ClientListString	src/qcommon/q_shared.c	/^char *Com_ClientListString( const clientList_t *list )$/;"	f
Com_Crash_f	src/qcommon/common.c	/^static void Com_Crash_f( void ) {$/;"	f	file:
Com_DPrintf	src/qcommon/common.c	/^void QDECL Com_DPrintf( const char *fmt, ...) {$/;"	f
Com_DetectAltivec	src/qcommon/common.c	/^static void Com_DetectAltivec(void)$/;"	f	file:
Com_DetectSSE	src/qcommon/common.c	/^static void Com_DetectSSE(void)$/;"	f	file:
Com_DetectSSE	src/qcommon/common.c	2454;"	d	file:
Com_EndRedirect	src/qcommon/common.c	/^void Com_EndRedirect (void)$/;"	f
Com_Error	src/cgame/cg_main.c	/^void QDECL Com_Error( int level, const char *error, ... )$/;"	f
Com_Error	src/game/g_main.c	/^void QDECL Com_Error( int level, const char *error, ... )$/;"	f
Com_Error	src/qcommon/common.c	/^void QDECL Com_Error( int code, const char *fmt, ... ) {$/;"	f
Com_Error	src/renderergl1/tr_subs.c	/^void QDECL Com_Error( int level, const char *error, ... )$/;"	f
Com_Error	src/renderergl2/tr_subs.c	/^void QDECL Com_Error( int level, const char *error, ... )$/;"	f
Com_Error	src/ui/ui_atoms.c	/^void QDECL Com_Error( int level, const char *error, ... )$/;"	f
Com_Error_f	src/qcommon/common.c	/^static void __attribute__((__noreturn__)) Com_Error_f (void) {$/;"	f	file:
Com_EventLoop	src/qcommon/common.c	/^int Com_EventLoop( void ) {$/;"	f
Com_ExecuteCfg	src/qcommon/common.c	/^void Com_ExecuteCfg(void)$/;"	f
Com_Filter	src/qcommon/common.c	/^int Com_Filter(char *filter, char *name, int casesensitive)$/;"	f
Com_FilterPath	src/qcommon/common.c	/^int Com_FilterPath(char *filter, char *name, int casesensitive)$/;"	f
Com_Frame	src/qcommon/common.c	/^void Com_Frame( void ) {$/;"	f
Com_Freeze_f	src/qcommon/common.c	/^static void Com_Freeze_f (void) {$/;"	f	file:
Com_GameRestart	src/qcommon/common.c	/^void Com_GameRestart(int checksumFeed, qboolean disconnect)$/;"	f
Com_GameRestart_f	src/qcommon/common.c	/^void Com_GameRestart_f(void)$/;"	f
Com_GetEvent	src/qcommon/common.c	/^sysEvent_t	Com_GetEvent( void ) {$/;"	f
Com_GetRealEvent	src/qcommon/common.c	/^sysEvent_t	Com_GetRealEvent( void ) {$/;"	f
Com_GetSystemEvent	src/qcommon/common.c	/^sysEvent_t Com_GetSystemEvent( void )$/;"	f
Com_HexStrToInt	src/qcommon/q_shared.c	/^int Com_HexStrToInt( const char *str )$/;"	f
Com_Init	src/qcommon/common.c	/^void Com_Init( char *commandLine ) {$/;"	f
Com_InitHunkMemory	src/qcommon/common.c	/^void Com_InitHunkMemory( void ) {$/;"	f
Com_InitJournaling	src/qcommon/common.c	/^void Com_InitJournaling( void ) {$/;"	f
Com_InitPushEvent	src/qcommon/common.c	/^void Com_InitPushEvent( void ) {$/;"	f
Com_InitRand	src/qcommon/common.c	/^static void Com_InitRand(void)$/;"	f	file:
Com_InitSmallZoneMemory	src/qcommon/common.c	/^void Com_InitSmallZoneMemory( void ) {$/;"	f
Com_InitZoneMemory	src/qcommon/common.c	/^void Com_InitZoneMemory( void ) {$/;"	f
Com_IsVoipTarget	src/qcommon/common.c	/^qboolean Com_IsVoipTarget(uint8_t *voipTargets, int voipTargetsSize, int clientNum)$/;"	f
Com_MD5File	src/qcommon/md5.c	/^char *Com_MD5File( const char *fn, int length, const char *prefix, int prefix_len )$/;"	f
Com_Memcpy	src/qcommon/q_shared.h	330;"	d
Com_Meminfo_f	src/qcommon/common.c	/^void Com_Meminfo_f( void ) {$/;"	f
Com_Memset	src/qcommon/q_shared.h	329;"	d
Com_Milliseconds	src/qcommon/common.c	/^int Com_Milliseconds (void) {$/;"	f
Com_ModifyMsec	src/qcommon/common.c	/^int Com_ModifyMsec( int msec ) {$/;"	f
Com_ParseCommandLine	src/qcommon/common.c	/^void Com_ParseCommandLine( char *commandLine ) {$/;"	f
Com_Printf	src/cgame/cg_main.c	/^void QDECL Com_Printf( const char *msg, ... ) {$/;"	f
Com_Printf	src/game/g_main.c	/^void QDECL Com_Printf( const char *msg, ... )$/;"	f
Com_Printf	src/qcommon/common.c	/^void QDECL Com_Printf( const char *fmt, ... ) {$/;"	f
Com_Printf	src/renderergl1/tr_subs.c	/^void QDECL Com_Printf( const char *msg, ... )$/;"	f
Com_Printf	src/renderergl2/tr_subs.c	/^void QDECL Com_Printf( const char *msg, ... )$/;"	f
Com_Printf	src/ui/ui_atoms.c	/^void QDECL Com_Printf( const char *msg, ... )$/;"	f
Com_PushEvent	src/qcommon/common.c	/^void Com_PushEvent( sysEvent_t *event ) {$/;"	f
Com_QueueEvent	src/qcommon/common.c	/^void Com_QueueEvent( int time, sysEventType_t type, int value, int value2, int ptrLength, void *ptr )$/;"	f
Com_Quit_f	src/qcommon/common.c	/^void Com_Quit_f( void ) {$/;"	f
Com_RandomBytes	src/qcommon/common.c	/^void Com_RandomBytes( byte *string, int len )$/;"	f
Com_ReadFromPipe	src/qcommon/common.c	/^void Com_ReadFromPipe( void )$/;"	f
Com_RealTime	src/qcommon/common.c	/^int Com_RealTime(qtime_t *qtime) {$/;"	f
Com_RunAndTimeServerPacket	src/qcommon/common.c	/^void Com_RunAndTimeServerPacket( netadr_t *evFrom, msg_t *buf ) {$/;"	f
Com_SafeMode	src/qcommon/common.c	/^qboolean Com_SafeMode( void ) {$/;"	f
Com_Shutdown	src/qcommon/common.c	/^void Com_Shutdown (void) {$/;"	f
Com_SkipCharset	src/qcommon/q_shared.c	/^char *Com_SkipCharset( char *s, char *sep )$/;"	f
Com_SkipTokens	src/qcommon/q_shared.c	/^char *Com_SkipTokens( char *s, int numTokens, char *sep )$/;"	f
Com_StartupVariable	src/qcommon/common.c	/^void Com_StartupVariable( const char *match ) {$/;"	f
Com_StringContains	src/qcommon/common.c	/^char *Com_StringContains(char *str1, char *str2, int casesensitive) {$/;"	f
Com_TimeVal	src/qcommon/common.c	/^int Com_TimeVal(int minMsec)$/;"	f
Com_TouchMemory	src/qcommon/common.c	/^void Com_TouchMemory( void ) {$/;"	f
Com_TruncateLongString	src/qcommon/q_shared.c	/^void Com_TruncateLongString( char *buffer, const char *s )$/;"	f
Com_WriteConfigToFile	src/qcommon/common.c	/^void Com_WriteConfigToFile( const char *filename ) {$/;"	f
Com_WriteConfig_f	src/qcommon/common.c	/^void Com_WriteConfig_f( void ) {$/;"	f
Com_WriteConfiguration	src/qcommon/common.c	/^void Com_WriteConfiguration( void ) {$/;"	f
Com_sprintf	src/qcommon/q_shared.c	/^int QDECL Com_sprintf(char *dest, int size, const char *fmt, ...)$/;"	f
CommaParse	src/renderergl1/tr_image.c	/^static char *CommaParse( char **data_p ) {$/;"	f	file:
CommaParse	src/renderergl2/tr_image.c	/^static char *CommaParse( char **data_p ) {$/;"	f	file:
Comp	src/qcommon/qfiles.h	/^        unsigned char Comp[24]; \/\/ MC_COMP_BYTES is in MatComp.h, but don't want to couple$/;"	m	struct:__anon400
ComparePreviousCmdAngles	src/game/g_active.c	/^static void ComparePreviousCmdAngles( gclient_t *client )$/;"	f	file:
CompressionMethod	src/renderercommon/tr_image_png.c	/^	uint8_t  CompressionMethod;$/;"	m	struct:PNG_Chunk_IHDR	file:
CompressionMethod	src/renderercommon/tr_image_png.c	/^	uint8_t CompressionMethod;$/;"	m	struct:PNG_ZlibHeader	file:
ComputeColors	src/renderergl1/tr_shade.c	/^static void ComputeColors( shaderStage_t *pStage )$/;"	f	file:
ComputeDeformValues	src/renderergl2/tr_shade.c	/^static void ComputeDeformValues(int *deformGen, vec5_t deformParams)$/;"	f	file:
ComputeFogColorMask	src/renderergl2/tr_shade.c	/^static void ComputeFogColorMask( shaderStage_t *pStage, vec4_t fogColorMask )$/;"	f	file:
ComputeFogValues	src/renderergl2/tr_shade.c	/^static void ComputeFogValues(vec4_t fogDistanceVector, vec4_t fogDepthVector, float *eyeT)$/;"	f	file:
ComputeJointMats	src/renderergl1/tr_model_iqm.c	/^static void ComputeJointMats( iqmData_t *data, int frame, int oldframe,$/;"	f	file:
ComputeJointMats	src/renderergl2/tr_model_iqm.c	/^static void ComputeJointMats( iqmData_t *data, int frame, int oldframe,$/;"	f	file:
ComputePoseMats	src/renderergl1/tr_model_iqm.c	/^static void ComputePoseMats( iqmData_t *data, int frame, int oldframe,$/;"	f	file:
ComputePoseMats	src/renderergl2/tr_model_iqm.c	/^static void ComputePoseMats( iqmData_t *data, int frame, int oldframe,$/;"	f	file:
ComputeShaderColors	src/renderergl2/tr_shade.c	/^static void ComputeShaderColors( shaderStage_t *pStage, vec4_t baseColor, vec4_t vertColor, int blend )$/;"	f	file:
ComputeStageIteratorFunc	src/renderergl1/tr_shader.c	/^static void ComputeStageIteratorFunc( void )$/;"	f	file:
ComputeStageIteratorFunc	src/renderergl2/tr_shader.c	/^static void ComputeStageIteratorFunc( void )$/;"	f	file:
ComputeTexCoords	src/renderergl1/tr_shade.c	/^static void ComputeTexCoords( shaderStage_t *pStage ) {$/;"	f	file:
ComputeTexMods	src/renderergl2/tr_shade.c	/^static void ComputeTexMods( shaderStage_t *pStage, int bundleNum, float *outMatrix, float *outOffTurb)$/;"	f	file:
ComputeVertexAttribs	src/renderergl2/tr_shader.c	/^static void ComputeVertexAttribs(void)$/;"	f	file:
Con_Bottom	src/client/cl_console.c	/^void Con_Bottom( void ) {$/;"	f
Con_CheckResize	src/client/cl_console.c	/^void Con_CheckResize (void)$/;"	f
Con_ClearNotify	src/client/cl_console.c	/^void Con_ClearNotify( void ) {$/;"	f
Con_Clear_f	src/client/cl_console.c	/^void Con_Clear_f (void) {$/;"	f
Con_Close	src/client/cl_console.c	/^void Con_Close( void ) {$/;"	f
Con_DrawConsole	src/client/cl_console.c	/^void Con_DrawConsole( void ) {$/;"	f
Con_DrawInput	src/client/cl_console.c	/^void Con_DrawInput (void) {$/;"	f
Con_DrawSolidConsole	src/client/cl_console.c	/^void Con_DrawSolidConsole( float frac ) {$/;"	f
Con_Dump_f	src/client/cl_console.c	/^void Con_Dump_f (void)$/;"	f
Con_Init	src/client/cl_console.c	/^void Con_Init (void) {$/;"	f
Con_Linefeed	src/client/cl_console.c	/^void Con_Linefeed (qboolean skipnotify)$/;"	f
Con_PageDown	src/client/cl_console.c	/^void Con_PageDown( void ) {$/;"	f
Con_PageUp	src/client/cl_console.c	/^void Con_PageUp( void ) {$/;"	f
Con_RunConsole	src/client/cl_console.c	/^void Con_RunConsole (void) {$/;"	f
Con_Shutdown	src/client/cl_console.c	/^void Con_Shutdown(void)$/;"	f
Con_ToggleConsole_f	src/client/cl_console.c	/^void Con_ToggleConsole_f (void) {$/;"	f
Con_ToggleMenu_f	src/client/cl_console.c	/^void Con_ToggleMenu_f( void ) {$/;"	f
Con_Top	src/client/cl_console.c	/^void Con_Top( void ) {$/;"	f
ConcatArgs	src/game/g_cmds.c	/^char *ConcatArgs( int start )$/;"	f
ConcatArgsPrintable	src/game/g_cmds.c	/^char *ConcatArgsPrintable( int start )$/;"	f
ConsoleCommand	src/game/g_svcmds.c	/^qboolean  ConsoleCommand( void )$/;"	f
Console_Key	src/client/cl_keys.c	/^void Console_Key (int key) {$/;"	f
ConstFactorOk	src/server/sqlite3.c	12352;"	d	file:
ConstOptimize	src/qcommon/vm_x86.c	/^qboolean ConstOptimize(vm_t *vm, int callProcOfsSyscall)$/;"	f
Constant1	src/qcommon/vm_x86.c	/^static int	Constant1( void ) {$/;"	f	file:
Constant4	src/qcommon/vm_x86.c	/^static int	Constant4( void ) {$/;"	f	file:
Controls_GetConfig	src/ui/ui_shared.c	/^void Controls_GetConfig( void )$/;"	f
Controls_GetKeyAssignment	src/ui/ui_shared.c	/^static void Controls_GetKeyAssignment ( char *command, int *twokeys )$/;"	f	file:
Controls_SetConfig	src/ui/ui_shared.c	/^void Controls_SetConfig( qboolean restart )$/;"	f
Controls_SetDefaults	src/ui/ui_shared.c	/^void Controls_SetDefaults( void )$/;"	f
ConvertPixel	src/renderercommon/tr_image_png.c	/^static qboolean ConvertPixel(struct PNG_Chunk_IHDR *IHDR,$/;"	f	file:
Coordinate	src/tools/lcc/src/c.h	/^} Coordinate;$/;"	t	typeref:struct:coord
CopyLittleLong	src/qcommon/q_platform.h	364;"	d
CopyLittleLong	src/qcommon/q_platform.h	375;"	d
CopyLittleShort	src/qcommon/q_platform.h	363;"	d
CopyLittleShort	src/qcommon/q_platform.h	374;"	d
CopyLongSwap	src/qcommon/q_shared.c	/^void CopyLongSwap(void *dest, void *src)$/;"	f
CopyShortSwap	src/qcommon/q_shared.c	/^void CopyShortSwap(void *dest, void *src)$/;"	f
CopyString	src/qcommon/common.c	/^char *CopyString( const char *in ) {$/;"	f
CopyVert	src/renderergl2/tr_bsp.c	/^static void CopyVert(const srfVert_t * in, srfVert_t * out)$/;"	f	file:
CopyWinding	src/qcommon/cm_polylib.c	/^winding_t	*CopyWinding (winding_t *w)$/;"	f
CountCtx	src/server/sqlite3.c	/^struct CountCtx {$/;"	s	file:
CountCtx	src/server/sqlite3.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
Cplusplus	src/tools/lcc/cpp/unix.c	/^int	Cplusplus = 1;$/;"	v
CreateExternalShaders	src/renderergl1/tr_shader.c	/^static void CreateExternalShaders( void ) {$/;"	f	file:
CreateExternalShaders	src/renderergl2/tr_shader.c	/^static void CreateExternalShaders( void ) {$/;"	f	file:
CreateInternalShaders	src/renderergl1/tr_shader.c	/^static void CreateInternalShaders( void ) {$/;"	f	file:
CreateInternalShaders	src/renderergl2/tr_shader.c	/^static void CreateInternalShaders( void ) {$/;"	f	file:
CreatePath	src/tools/asm/cmdlib.c	/^void	CreatePath (const char *path)$/;"	f
CreateRotationMatrix	src/qcommon/cm_trace.c	/^void CreateRotationMatrix(const vec3_t angles, vec3_t matrix[3]) {$/;"	f
CrossProduct	src/qcommon/q_shared.h	/^static ID_INLINE void CrossProduct( const vec3_t v1, const vec3_t v2, vec3_t cross ) {$/;"	f
CsrFlagClear	src/server/sqlite3.c	183082;"	d	file:
CsrFlagSet	src/server/sqlite3.c	183081;"	d	file:
CsrFlagTest	src/server/sqlite3.c	183083;"	d	file:
Cte	src/server/sqlite3.c	/^  struct Cte {                    \/* For each CTE in the WITH clause.... *\/$/;"	s	struct:With	file:
Cvar_CheckRange	src/qcommon/cvar.c	/^void Cvar_CheckRange( cvar_t *var, float min, float max, qboolean integral )$/;"	f
Cvar_CheckRange	src/renderercommon/tr_public.h	/^	void	(*Cvar_CheckRange)( cvar_t *cv, float minVal, float maxVal, qboolean shouldBeIntegral );$/;"	m	struct:__anon109
Cvar_Command	src/qcommon/cvar.c	/^qboolean Cvar_Command( void ) {$/;"	f
Cvar_CommandCompletion	src/qcommon/cvar.c	/^void Cvar_CommandCompletion(void (*callback)(const char *s))$/;"	f
Cvar_CompleteCvarName	src/qcommon/cvar.c	/^void Cvar_CompleteCvarName( char *args, int argNum )$/;"	f
Cvar_FindVar	src/qcommon/cvar.c	/^static cvar_t *Cvar_FindVar( const char *var_name ) {$/;"	f	file:
Cvar_Flags	src/qcommon/cvar.c	/^int Cvar_Flags(const char *var_name)$/;"	f
Cvar_ForceReset	src/qcommon/cvar.c	/^void Cvar_ForceReset(const char *var_name)$/;"	f
Cvar_Get	src/qcommon/cvar.c	/^cvar_t *Cvar_Get( const char *var_name, const char *var_value, int flags ) {$/;"	f
Cvar_Get	src/renderercommon/tr_public.h	/^	cvar_t	*(*Cvar_Get)( const char *name, const char *value, int flags );$/;"	m	struct:__anon109
Cvar_InfoString	src/qcommon/cvar.c	/^char *Cvar_InfoString(int bit)$/;"	f
Cvar_InfoStringBuffer	src/qcommon/cvar.c	/^void Cvar_InfoStringBuffer( int bit, char* buff, int buffsize ) {$/;"	f
Cvar_InfoString_Big	src/qcommon/cvar.c	/^char *Cvar_InfoString_Big(int bit)$/;"	f
Cvar_Init	src/qcommon/cvar.c	/^void Cvar_Init (void)$/;"	f
Cvar_ListModified_f	src/qcommon/cvar.c	/^void Cvar_ListModified_f( void ) {$/;"	f
Cvar_List_f	src/qcommon/cvar.c	/^void Cvar_List_f( void ) {$/;"	f
Cvar_Print	src/qcommon/cvar.c	/^void Cvar_Print( cvar_t *v ) {$/;"	f
Cvar_Print_f	src/qcommon/cvar.c	/^void Cvar_Print_f(void)$/;"	f
Cvar_Register	src/qcommon/cvar.c	/^void Cvar_Register(vmCvar_t *vmCvar, const char *varName, const char *defaultValue, int flags)$/;"	f
Cvar_Reset	src/qcommon/cvar.c	/^void Cvar_Reset( const char *var_name ) {$/;"	f
Cvar_Reset_f	src/qcommon/cvar.c	/^void Cvar_Reset_f( void ) {$/;"	f
Cvar_Restart	src/qcommon/cvar.c	/^void Cvar_Restart(qboolean unsetVM)$/;"	f
Cvar_Restart_f	src/qcommon/cvar.c	/^void Cvar_Restart_f(void)$/;"	f
Cvar_Set	src/qcommon/cvar.c	/^void Cvar_Set( const char *var_name, const char *value) {$/;"	f
Cvar_Set	src/renderercommon/tr_public.h	/^	void	(*Cvar_Set)( const char *name, const char *value );$/;"	m	struct:__anon109
Cvar_Set2	src/qcommon/cvar.c	/^cvar_t *Cvar_Set2( const char *var_name, const char *value, qboolean force ) {$/;"	f
Cvar_SetCheatState	src/qcommon/cvar.c	/^void Cvar_SetCheatState(void)$/;"	f
Cvar_SetDescription	src/qcommon/cvar.c	/^void Cvar_SetDescription( cvar_t *var, const char *var_description )$/;"	f
Cvar_SetDescription	src/renderercommon/tr_public.h	/^	void	(*Cvar_SetDescription)( cvar_t *cv, const char *description );$/;"	m	struct:__anon109
Cvar_SetLatched	src/qcommon/cvar.c	/^void Cvar_SetLatched( const char *var_name, const char *value) {$/;"	f
Cvar_SetSafe	src/qcommon/cvar.c	/^void Cvar_SetSafe( const char *var_name, const char *value )$/;"	f
Cvar_SetValue	src/qcommon/cvar.c	/^void Cvar_SetValue( const char *var_name, float value) {$/;"	f
Cvar_SetValue	src/renderercommon/tr_public.h	/^	void	(*Cvar_SetValue) (const char *name, float value);$/;"	m	struct:__anon109
Cvar_SetValueSafe	src/qcommon/cvar.c	/^void Cvar_SetValueSafe( const char *var_name, float value )$/;"	f
Cvar_Set_f	src/qcommon/cvar.c	/^void Cvar_Set_f( void ) {$/;"	f
Cvar_Toggle_f	src/qcommon/cvar.c	/^void Cvar_Toggle_f( void ) {$/;"	f
Cvar_Unset	src/qcommon/cvar.c	/^cvar_t *Cvar_Unset(cvar_t *cv)$/;"	f
Cvar_Unset_f	src/qcommon/cvar.c	/^void Cvar_Unset_f(void)$/;"	f
Cvar_Update	src/qcommon/cvar.c	/^void	Cvar_Update( vmCvar_t *vmCvar ) {$/;"	f
Cvar_Validate	src/qcommon/cvar.c	/^static const char *Cvar_Validate( cvar_t *var,$/;"	f	file:
Cvar_ValidateString	src/qcommon/cvar.c	/^static qboolean Cvar_ValidateString( const char *s ) {$/;"	f	file:
Cvar_VariableIntegerValue	src/qcommon/cvar.c	/^int Cvar_VariableIntegerValue( const char *var_name ) {$/;"	f
Cvar_VariableIntegerValue	src/renderercommon/tr_public.h	/^	int		(*Cvar_VariableIntegerValue) (const char *var_name);$/;"	m	struct:__anon109
Cvar_VariableString	src/qcommon/cvar.c	/^char *Cvar_VariableString( const char *var_name ) {$/;"	f
Cvar_VariableStringBuffer	src/qcommon/cvar.c	/^void Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize ) {$/;"	f
Cvar_VariableValue	src/qcommon/cvar.c	/^float Cvar_VariableValue( const char *var_name ) {$/;"	f
Cvar_WriteVariables	src/qcommon/cvar.c	/^void Cvar_WriteVariables(fileHandle_t f)$/;"	f
D	src/qcommon/md4.c	/^	uint32_t A, B, C, D;$/;"	m	struct:mdfour	file:
D	src/qcommon/vm_powerpc_asm.c	294;"	d	file:
D	src/server/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
DAGCHECK_C	GNUmakefile	/^DAGCHECK_C  = $(B)\/tools\/rcc\/dagcheck.c$/;"	m
DAMAGE_DEFLECT_TIME	src/cgame/cg_local.h	43;"	d
DAMAGE_FRACTION_FOR_KILL	src/game/tremulous.h	686;"	d
DAMAGE_NO_ARMOR	src/game/g_local.h	958;"	d
DAMAGE_NO_KNOCKBACK	src/game/g_local.h	959;"	d
DAMAGE_NO_LOCDAMAGE	src/game/g_local.h	961;"	d
DAMAGE_NO_PROTECTION	src/game/g_local.h	960;"	d
DAMAGE_RADIUS	src/game/g_local.h	957;"	d
DAMAGE_RETURN_TIME	src/cgame/cg_local.h	44;"	d
DAMAGE_TIME	src/cgame/cg_local.h	45;"	d
DATA	src/tools/lcc/src/c.h	/^enum { CODE=1, BSS, DATA, LIT };$/;"	e	enum:__anon288
DATABASE_DATA_MAX	src/game/g_public.h	285;"	d
DATASEG	src/tools/asm/q3asm.c	/^	DATASEG,	\/\/ initialized 32 bit data, will be byte swapped$/;"	e	enum:__anon266	file:
DB_CLOSE	src/game/g_public.h	/^  DB_CLOSE,$/;"	e	enum:__anon365
DB_COUNT	src/game/g_public.h	/^  DB_COUNT \/\/Must be last enum$/;"	e	enum:__anon365
DB_EXEC	src/game/g_public.h	/^  DB_EXEC,$/;"	e	enum:__anon365
DB_Empty	src/server/sqlite3.c	12059;"	d	file:
DB_LAST_MAPS	src/game/g_public.h	/^  DB_LAST_MAPS,$/;"	e	enum:__anon365
DB_MAPSTAT_ADD	src/game/g_public.h	/^  DB_MAPSTAT_ADD,$/;"	e	enum:__anon365
DB_OPEN	src/game/g_public.h	/^  DB_OPEN,$/;"	e	enum:__anon365
DB_SEEN	src/game/g_public.h	/^  DB_SEEN,$/;"	e	enum:__anon365
DB_SEEN_ADD	src/game/g_public.h	/^  DB_SEEN_ADD,$/;"	e	enum:__anon365
DB_SchemaLoaded	src/server/sqlite3.c	12057;"	d	file:
DB_TIME_GET	src/game/g_public.h	/^  DB_TIME_GET,$/;"	e	enum:__anon365
DB_UnresetViews	src/server/sqlite3.c	12058;"	d	file:
DC	src/ui/ui_shared.c	/^displayContextDef_t *DC = NULL;$/;"	v
DCOORD	src/server/sqlite3.c	156898;"	d	file:
DCOORD	src/server/sqlite3.c	156900;"	d	file:
DC_ATTACK_PERIOD	src/game/tremulous.h	594;"	d
DC_BP	src/game/tremulous.h	589;"	d
DC_BT	src/game/tremulous.h	590;"	d
DC_HEALRATE	src/game/tremulous.h	595;"	d
DC_HEALTH	src/game/tremulous.h	591;"	d
DC_RANGE	src/game/tremulous.h	596;"	d
DC_SPLASHDAMAGE	src/game/tremulous.h	592;"	d
DC_SPLASHRADIUS	src/game/tremulous.h	593;"	d
DC_VALUE	src/game/tremulous.h	597;"	d
DEAD_VIEWHEIGHT	src/game/bg_public.h	41;"	d
DEBUGSTR	src/qcommon/vm_interpreted.c	317;"	d	file:
DEBUG_CFLAGS	GNUmakefile	/^DEBUG_CFLAGS=-g -O0$/;"	m
DEBUG_CFLAGS	src/master/Makefile	/^DEBUG_CFLAGS=-g$/;"	m
DEBUG_LDFLAGS	src/master/Makefile	/^  DEBUG_LDFLAGS=-ltdb$/;"	m
DEBUG_LDFLAGS	src/master/Makefile	/^  DEBUG_LDFLAGS=-lwsock32$/;"	m
DECOLOR_OFF	src/game/g_local.h	757;"	d
DECOLOR_ON	src/game/g_local.h	758;"	d
DEFAULT_ALIEN_BUILDPOINTS	src/game/tremulous.h	672;"	d
DEFAULT_ALIEN_MAX_STAGE	src/game/tremulous.h	676;"	d
DEFAULT_ALIEN_QUEUE_TIME	src/game/tremulous.h	673;"	d
DEFAULT_ALIEN_STAGE2_THRESH	src/game/tremulous.h	674;"	d
DEFAULT_ALIEN_STAGE3_THRESH	src/game/tremulous.h	675;"	d
DEFAULT_CIN_HEIGHT	src/client/cl_cin.c	42;"	d	file:
DEFAULT_CIN_WIDTH	src/client/cl_cin.c	41;"	d	file:
DEFAULT_CONSOLE_WIDTH	src/client/cl_console.c	59;"	d	file:
DEFAULT_CURL_LIB	src/client/cl_curl.h	35;"	d
DEFAULT_CURL_LIB	src/client/cl_curl.h	38;"	d
DEFAULT_CURL_LIB	src/client/cl_curl.h	40;"	d
DEFAULT_FREEKILL_PERIOD	src/game/tremulous.h	668;"	d
DEFAULT_GRAVITY	src/game/bg_public.h	33;"	d
DEFAULT_HASHTABLE_SIZE	src/tools/asm/q3asm.c	30;"	d	file:
DEFAULT_HASH_SIZE	src/master/servers.h	34;"	d
DEFAULT_HUMAN_BUILDPOINTS	src/game/tremulous.h	677;"	d
DEFAULT_HUMAN_MAX_STAGE	src/game/tremulous.h	684;"	d
DEFAULT_HUMAN_QUEUE_TIME	src/game/tremulous.h	678;"	d
DEFAULT_HUMAN_REPEATER_BUILDPOINTS	src/game/tremulous.h	679;"	d
DEFAULT_HUMAN_REPEATER_MAX_ZONES	src/game/tremulous.h	681;"	d
DEFAULT_HUMAN_REPEATER_QUEUE_TIME	src/game/tremulous.h	680;"	d
DEFAULT_HUMAN_STAGE2_THRESH	src/game/tremulous.h	682;"	d
DEFAULT_HUMAN_STAGE3_THRESH	src/game/tremulous.h	683;"	d
DEFAULT_JAIL_PATH	src/master/master.c	52;"	d	file:
DEFAULT_LIGHTMAP_SIZE	src/renderergl2/tr_bsp.c	200;"	d	file:
DEFAULT_LOW_PRIV_USER	src/master/master.c	55;"	d	file:
DEFAULT_MASTER_PORT	src/master/master.c	44;"	d	file:
DEFAULT_MAX_NB_SERVERS	src/master/servers.h	31;"	d
DEFAULT_SIZE	src/renderergl1/tr_image.c	1194;"	d	file:
DEFAULT_SIZE	src/renderergl2/tr_image.c	2668;"	d	file:
DEFAULT_VIEWHEIGHT	src/game/bg_public.h	39;"	d
DEFINED	src/tools/lcc/cpp/cpp.h	/^		DSHARP1, NAME1, DEFINED, UMINUS };$/;"	e	enum:toktype
DEFINEHASHSIZE	src/qcommon/parse.c	234;"	d	file:
DEFINE_FIXED	src/qcommon/parse.c	172;"	d	file:
DEFORM_AUTOSPRITE	src/renderergl1/tr_local.h	/^	DEFORM_AUTOSPRITE,$/;"	e	enum:__anon132
DEFORM_AUTOSPRITE	src/renderergl2/tr_local.h	/^	DEFORM_AUTOSPRITE,$/;"	e	enum:__anon13
DEFORM_AUTOSPRITE2	src/renderergl1/tr_local.h	/^	DEFORM_AUTOSPRITE2,$/;"	e	enum:__anon132
DEFORM_AUTOSPRITE2	src/renderergl2/tr_local.h	/^	DEFORM_AUTOSPRITE2,$/;"	e	enum:__anon13
DEFORM_BULGE	src/renderergl1/tr_local.h	/^	DEFORM_BULGE,$/;"	e	enum:__anon132
DEFORM_BULGE	src/renderergl2/tr_local.h	/^	DEFORM_BULGE,$/;"	e	enum:__anon13
DEFORM_MOVE	src/renderergl1/tr_local.h	/^	DEFORM_MOVE,$/;"	e	enum:__anon132
DEFORM_MOVE	src/renderergl2/tr_local.h	/^	DEFORM_MOVE,$/;"	e	enum:__anon13
DEFORM_NONE	src/renderergl1/tr_local.h	/^	DEFORM_NONE,$/;"	e	enum:__anon132
DEFORM_NONE	src/renderergl2/tr_local.h	/^	DEFORM_NONE,$/;"	e	enum:__anon13
DEFORM_NORMALS	src/renderergl1/tr_local.h	/^	DEFORM_NORMALS,$/;"	e	enum:__anon132
DEFORM_NORMALS	src/renderergl2/tr_local.h	/^	DEFORM_NORMALS,$/;"	e	enum:__anon13
DEFORM_PROJECTION_SHADOW	src/renderergl1/tr_local.h	/^	DEFORM_PROJECTION_SHADOW,$/;"	e	enum:__anon132
DEFORM_PROJECTION_SHADOW	src/renderergl2/tr_local.h	/^	DEFORM_PROJECTION_SHADOW,$/;"	e	enum:__anon13
DEFORM_TEXT0	src/renderergl1/tr_local.h	/^	DEFORM_TEXT0,$/;"	e	enum:__anon132
DEFORM_TEXT0	src/renderergl2/tr_local.h	/^	DEFORM_TEXT0,$/;"	e	enum:__anon13
DEFORM_TEXT1	src/renderergl1/tr_local.h	/^	DEFORM_TEXT1,$/;"	e	enum:__anon132
DEFORM_TEXT1	src/renderergl2/tr_local.h	/^	DEFORM_TEXT1,$/;"	e	enum:__anon13
DEFORM_TEXT2	src/renderergl1/tr_local.h	/^	DEFORM_TEXT2,$/;"	e	enum:__anon132
DEFORM_TEXT2	src/renderergl2/tr_local.h	/^	DEFORM_TEXT2,$/;"	e	enum:__anon13
DEFORM_TEXT3	src/renderergl1/tr_local.h	/^	DEFORM_TEXT3,$/;"	e	enum:__anon132
DEFORM_TEXT3	src/renderergl2/tr_local.h	/^	DEFORM_TEXT3,$/;"	e	enum:__anon13
DEFORM_TEXT4	src/renderergl1/tr_local.h	/^	DEFORM_TEXT4,$/;"	e	enum:__anon132
DEFORM_TEXT4	src/renderergl2/tr_local.h	/^	DEFORM_TEXT4,$/;"	e	enum:__anon13
DEFORM_TEXT5	src/renderergl1/tr_local.h	/^	DEFORM_TEXT5,$/;"	e	enum:__anon132
DEFORM_TEXT5	src/renderergl2/tr_local.h	/^	DEFORM_TEXT5,$/;"	e	enum:__anon13
DEFORM_TEXT6	src/renderergl1/tr_local.h	/^	DEFORM_TEXT6,$/;"	e	enum:__anon132
DEFORM_TEXT6	src/renderergl2/tr_local.h	/^	DEFORM_TEXT6,$/;"	e	enum:__anon13
DEFORM_TEXT7	src/renderergl1/tr_local.h	/^	DEFORM_TEXT7$/;"	e	enum:__anon132
DEFORM_TEXT7	src/renderergl2/tr_local.h	/^	DEFORM_TEXT7$/;"	e	enum:__anon13
DEFORM_WAVE	src/renderergl1/tr_local.h	/^	DEFORM_WAVE,$/;"	e	enum:__anon132
DEFORM_WAVE	src/renderergl2/tr_local.h	/^	DEFORM_WAVE,$/;"	e	enum:__anon13
DEF_COMHUNKMEGS	src/qcommon/common.c	42;"	d	file:
DEF_COMHUNKMEGS_S	src/qcommon/common.c	44;"	d	file:
DEF_COMSOUNDMEGS	src/client/snd_mem.c	36;"	d	file:
DEF_COMZONEMEGS	src/qcommon/common.c	43;"	d	file:
DEF_COMZONEMEGS_S	src/qcommon/common.c	45;"	d	file:
DEG2RAD	src/qcommon/q_shared.h	455;"	d
DEG2RAD	src/tools/asm/mathlib.h	45;"	d
DEMOEXT	src/qcommon/q_shared.h	51;"	d
DENYBUILD_VOTE	src/game/bg_public.h	/^  DENYBUILD_VOTE,$/;"	e	enum:__anon360
DEO	src/qcommon/vm_powerpc_asm.c	620;"	d	file:
DEPEND_CFLAGS	GNUmakefile	/^  DEPEND_CFLAGS = -MMD$/;"	m
DEPEND_CFLAGS	GNUmakefile	/^  DEPEND_CFLAGS =$/;"	m
DEP_DIR	GNUmakefile	/^DEP_DIR=dep$/;"	m
DE_MASK	src/qcommon/vm_powerpc_asm.c	621;"	d	file:
DFUNCTION	src/server/sqlite3.c	12471;"	d	file:
DGEN_BULGE	src/renderergl2/tr_local.h	/^	DGEN_BULGE,$/;"	e	enum:__anon14
DGEN_MOVE	src/renderergl2/tr_local.h	/^	DGEN_MOVE$/;"	e	enum:__anon14
DGEN_NONE	src/renderergl2/tr_local.h	/^	DGEN_NONE,$/;"	e	enum:__anon14
DGEN_WAVE_INVERSE_SAWTOOTH	src/renderergl2/tr_local.h	/^	DGEN_WAVE_INVERSE_SAWTOOTH,$/;"	e	enum:__anon14
DGEN_WAVE_NOISE	src/renderergl2/tr_local.h	/^	DGEN_WAVE_NOISE,$/;"	e	enum:__anon14
DGEN_WAVE_SAWTOOTH	src/renderergl2/tr_local.h	/^	DGEN_WAVE_SAWTOOTH,$/;"	e	enum:__anon14
DGEN_WAVE_SIN	src/renderergl2/tr_local.h	/^	DGEN_WAVE_SIN,$/;"	e	enum:__anon14
DGEN_WAVE_SQUARE	src/renderergl2/tr_local.h	/^	DGEN_WAVE_SQUARE,$/;"	e	enum:__anon14
DGEN_WAVE_TRIANGLE	src/renderergl2/tr_local.h	/^	DGEN_WAVE_TRIANGLE,$/;"	e	enum:__anon14
DIE	src/qcommon/vm_powerpc.c	49;"	d	file:
DIE	src/qcommon/vm_sparc.c	38;"	d	file:
DIGIT	src/tools/lcc/src/lex.c	/^       DIGIT=010, HEX=020,    OTHER=040 };$/;"	e	enum:__anon281	file:
DIRECT_MODE	src/server/sqlite3.c	50023;"	d	file:
DISP22	src/qcommon/vm_sparc.c	271;"	d	file:
DISP30	src/qcommon/vm_sparc.c	270;"	d	file:
DIST_EPSILON	src/qcommon/cm_patch.c	425;"	d	file:
DLF_ENABLE	src/qcommon/qcommon.h	1186;"	d
DLF_NO_DISCONNECT	src/qcommon/qcommon.h	1189;"	d
DLF_NO_REDIRECT	src/qcommon/qcommon.h	1187;"	d
DLF_NO_UDP	src/qcommon/qcommon.h	1188;"	d
DLIGHTDEF_ALL	src/renderergl2/tr_local.h	/^	DLIGHTDEF_ALL                  = 0x0001,$/;"	e	enum:__anon35
DLIGHTDEF_COUNT	src/renderergl2/tr_local.h	/^	DLIGHTDEF_COUNT                = 0x0002,$/;"	e	enum:__anon35
DLIGHTDEF_USE_DEFORM_VERTEXES	src/renderergl2/tr_local.h	/^	DLIGHTDEF_USE_DEFORM_VERTEXES  = 0x0001,$/;"	e	enum:__anon35
DLIGHT_AT_RADIUS	src/renderergl1/tr_light.c	27;"	d	file:
DLIGHT_AT_RADIUS	src/renderergl2/tr_light.c	27;"	d	file:
DLIGHT_MINIMUM_RADIUS	src/renderergl1/tr_light.c	30;"	d	file:
DLIGHT_MINIMUM_RADIUS	src/renderergl2/tr_light.c	30;"	d	file:
DLIGHT_SIZE	src/renderergl1/tr_image.c	1077;"	d	file:
DLIGHT_SIZE	src/renderergl2/tr_image.c	2551;"	d	file:
DLL_EXT	src/qcommon/q_platform.h	109;"	d
DLL_EXT	src/qcommon/q_platform.h	136;"	d
DLL_EXT	src/qcommon/q_platform.h	167;"	d
DLL_EXT	src/qcommon/q_platform.h	225;"	d
DLL_EXT	src/qcommon/q_platform.h	267;"	d
DLL_EXT	src/qcommon/q_platform.h	294;"	d
DLL_EXT	src/qcommon/q_platform.h	310;"	d
DLL_EXT	src/qcommon/q_platform.h	324;"	d
DLP_CURL	src/qcommon/q_shared.h	1555;"	d
DLP_IGNORE	src/qcommon/q_shared.h	1554;"	d
DLP_PROMPTED	src/qcommon/q_shared.h	1558;"	d
DLP_SHOW	src/qcommon/q_shared.h	1557;"	d
DLP_STALE	src/qcommon/q_shared.h	1559;"	d
DLP_TYPE_MASK	src/qcommon/q_shared.h	1553;"	d
DLP_UDP	src/qcommon/q_shared.h	1556;"	d
DOCID_CMP	src/server/sqlite3.c	140869;"	d	file:
DOT	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
DOTLOCK_SUFFIX	src/server/sqlite3.c	29569;"	d	file:
DOTS1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
DOUBLE_CLICK_DELAY	src/ui/ui_shared.c	77;"	d	file:
DO_AS	GNUmakefile	/^define DO_AS$/;"	m
DO_CC	GNUmakefile	/^define DO_CC$/;"	m
DO_CGAME_CC	GNUmakefile	/^define DO_CGAME_CC$/;"	m
DO_CGAME_Q3LCC	GNUmakefile	/^define DO_CGAME_Q3LCC$/;"	m
DO_CGAME_Q3LCC_11	GNUmakefile	/^define DO_CGAME_Q3LCC_11$/;"	m
DO_DED_CC	GNUmakefile	/^define DO_DED_CC$/;"	m
DO_GAME_CC	GNUmakefile	/^define DO_GAME_CC$/;"	m
DO_GAME_Q3LCC	GNUmakefile	/^define DO_GAME_Q3LCC$/;"	m
DO_OS_MALLOC_TEST	src/server/sqlite3.c	17946;"	d	file:
DO_OS_MALLOC_TEST	src/server/sqlite3.c	17953;"	d	file:
DO_Q3LCC	GNUmakefile	/^define DO_Q3LCC$/;"	m
DO_QVM_DEP	GNUmakefile	/^  DO_QVM_DEP=cat $(@:%.o=%.d) | sed -e 's\/\\.o\/\\.asm\/g' >> $(@:%.o=%.d)$/;"	m
DO_REF_CC	GNUmakefile	/^define DO_REF_CC$/;"	m
DO_REF_STR	GNUmakefile	/^define DO_REF_STR$/;"	m
DO_SHLIB_CC	GNUmakefile	/^define DO_SHLIB_CC$/;"	m
DO_TOOLS_CC	GNUmakefile	/^define DO_TOOLS_CC$/;"	m
DO_TOOLS_CC_DAGCHECK	GNUmakefile	/^define DO_TOOLS_CC_DAGCHECK$/;"	m
DO_UI_CC	GNUmakefile	/^define DO_UI_CC$/;"	m
DO_UI_Q3LCC	GNUmakefile	/^define DO_UI_Q3LCC$/;"	m
DO_UI_Q3LCC_11	GNUmakefile	/^define DO_UI_Q3LCC_11$/;"	m
DO_WINDRES	GNUmakefile	/^define DO_WINDRES$/;"	m
DP_C_LDOUBLE	src/game/bg_lib.c	2096;"	d	file:
DP_C_LLONG	src/game/bg_lib.c	2095;"	d	file:
DP_C_LONG	src/game/bg_lib.c	2094;"	d	file:
DP_C_SHORT	src/game/bg_lib.c	2093;"	d	file:
DP_F_MINUS	src/game/bg_lib.c	2084;"	d	file:
DP_F_NUM	src/game/bg_lib.c	2087;"	d	file:
DP_F_PLUS	src/game/bg_lib.c	2085;"	d	file:
DP_F_SPACE	src/game/bg_lib.c	2086;"	d	file:
DP_F_UNSIGNED	src/game/bg_lib.c	2090;"	d	file:
DP_F_UP	src/game/bg_lib.c	2089;"	d	file:
DP_F_ZERO	src/game/bg_lib.c	2088;"	d	file:
DP_S_CONV	src/game/bg_lib.c	2080;"	d	file:
DP_S_DEFAULT	src/game/bg_lib.c	2073;"	d	file:
DP_S_DONE	src/game/bg_lib.c	2081;"	d	file:
DP_S_DOT	src/game/bg_lib.c	2076;"	d	file:
DP_S_FLAGS	src/game/bg_lib.c	2074;"	d	file:
DP_S_MAX	src/game/bg_lib.c	2077;"	d	file:
DP_S_MIN	src/game/bg_lib.c	2075;"	d	file:
DP_S_MOD	src/game/bg_lib.c	2078;"	d	file:
DP_S_MOD_L	src/game/bg_lib.c	2079;"	d	file:
DRAWSURF_MASK	src/renderergl1/tr_local.h	764;"	d
DRAWSURF_MASK	src/renderergl2/tr_local.h	1290;"	d
DRAW_VOTE	src/game/bg_public.h	/^  DRAW_VOTE,$/;"	e	enum:__anon360
DRA_MASK	src/qcommon/vm_powerpc_asm.c	613;"	d	file:
DR_CANCEL	src/qcommon/qcommon.h	/^	DR_CANCEL = 1$/;"	e	enum:__anon430
DR_NO	src/qcommon/qcommon.h	/^	DR_NO = 1,$/;"	e	enum:__anon430
DR_OK	src/qcommon/qcommon.h	/^	DR_OK = 0,$/;"	e	enum:__anon430
DR_YES	src/qcommon/qcommon.h	/^	DR_YES = 0,$/;"	e	enum:__anon430
DS	src/qcommon/vm_powerpc_asm.c	299;"	d	file:
DSHARP	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
DSHARP1	src/tools/lcc/cpp/cpp.h	/^		DSHARP1, NAME1, DEFINED, UMINUS };$/;"	e	enum:toktype
DSO	src/qcommon/vm_powerpc_asm.c	616;"	d	file:
DS_MASK	src/qcommon/vm_powerpc_asm.c	617;"	d	file:
DS_NONE	src/qcommon/q_shared.h	/^	DS_NONE,$/;"	e	enum:__anon481
DS_NUM_DEMO_STATES	src/qcommon/q_shared.h	/^	DS_NUM_DEMO_STATES$/;"	e	enum:__anon481
DS_PLAYBACK	src/qcommon/q_shared.h	/^	DS_PLAYBACK,$/;"	e	enum:__anon481
DS_RECORDING	src/qcommon/q_shared.h	/^	DS_RECORDING,$/;"	e	enum:__anon481
DT_ARMOURYEVOLVE	src/cgame/cg_local.h	/^  DT_ARMOURYEVOLVE, \/\/ Insufficient funds et al$/;"	e	enum:__anon259
DT_BUILD	src/cgame/cg_local.h	/^  DT_BUILD, \/\/ build errors$/;"	e	enum:__anon259
DT_COMMAND	src/cgame/cg_local.h	/^  DT_COMMAND, \/\/ You must be alive\/human\/spec\/etc.$/;"	e	enum:__anon259
DT_ERROR	src/qcommon/qcommon.h	/^	DT_ERROR,$/;"	e	enum:__anon431
DT_INFO	src/qcommon/qcommon.h	/^	DT_INFO,$/;"	e	enum:__anon431
DT_INTERACTIVE	src/cgame/cg_local.h	/^  DT_INTERACTIVE, \/\/ team, class, armoury$/;"	e	enum:__anon259
DT_OK_CANCEL	src/qcommon/qcommon.h	/^	DT_OK_CANCEL$/;"	e	enum:__anon431
DT_WARNING	src/qcommon/qcommon.h	/^	DT_WARNING,$/;"	e	enum:__anon431
DT_YES_NO	src/qcommon/qcommon.h	/^	DT_YES_NO,$/;"	e	enum:__anon431
DUCK_TIME	src/cgame/cg_local.h	48;"	d
DateTime	src/server/sqlite3.c	/^struct DateTime {$/;"	s	file:
DateTime	src/server/sqlite3.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
Db	src/server/sqlite3.c	/^struct Db {$/;"	s	file:
Db	src/server/sqlite3.c	/^typedef struct Db Db;$/;"	t	typeref:struct:Db	file:
DbClearProperty	src/server/sqlite3.c	12045;"	d	file:
DbFixer	src/server/sqlite3.c	/^struct DbFixer {$/;"	s	file:
DbFixer	src/server/sqlite3.c	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer	file:
DbHasAnyProperty	src/server/sqlite3.c	12043;"	d	file:
DbHasProperty	src/server/sqlite3.c	12042;"	d	file:
DbMaskAllZero	src/server/sqlite3.c	13704;"	d	file:
DbMaskAllZero	src/server/sqlite3.c	13711;"	d	file:
DbMaskNonZero	src/server/sqlite3.c	13705;"	d	file:
DbMaskNonZero	src/server/sqlite3.c	13712;"	d	file:
DbMaskSet	src/server/sqlite3.c	13703;"	d	file:
DbMaskSet	src/server/sqlite3.c	13710;"	d	file:
DbMaskTest	src/server/sqlite3.c	13701;"	d	file:
DbMaskTest	src/server/sqlite3.c	13708;"	d	file:
DbMaskZero	src/server/sqlite3.c	13702;"	d	file:
DbMaskZero	src/server/sqlite3.c	13709;"	d	file:
DbPage	src/server/sqlite3.c	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr	file:
DbSetProperty	src/server/sqlite3.c	12044;"	d	file:
DecodeImageInterlaced	src/renderercommon/tr_image_png.c	/^static qboolean DecodeImageInterlaced(struct PNG_Chunk_IHDR *IHDR,$/;"	f	file:
DecodeImageNonInterlaced	src/renderercommon/tr_image_png.c	/^static qboolean DecodeImageNonInterlaced(struct PNG_Chunk_IHDR *IHDR,$/;"	f	file:
DecompressIDATs	src/renderercommon/tr_image_png.c	/^static uint32_t DecompressIDATs(struct BufferedFile *BF, uint8_t **Buffer)$/;"	f	file:
Deephemeralize	src/server/sqlite3.c	74548;"	d	file:
DefaultExtension	src/tools/asm/cmdlib.c	/^void DefaultExtension (char *path, const char *extension)$/;"	f
DefaultPath	src/tools/asm/cmdlib.c	/^void DefaultPath (char *path, const char *basepath)$/;"	f
DefineSymbol	src/tools/asm/q3asm.c	/^static void DefineSymbol( char *sym, int value ) {$/;"	f	file:
DeformText	src/renderergl1/tr_shade_calc.c	/^void DeformText( const char *text ) {$/;"	f
DeformText	src/renderergl2/tr_shade_calc.c	/^void DeformText( const char *text ) {$/;"	f
Defpoint	src/tools/lcc/src/c.h	/^	enum { Blockbeg, Blockend, Local, Address, Defpoint,$/;"	e	enum:code::__anon290
DirToByte	src/qcommon/q_math.c	/^int DirToByte( vec3_t dir ) {$/;"	f
DisableSounds	src/client/snd_local.h	/^	void (*DisableSounds)( void );$/;"	m	struct:__anon96
Display_CacheAll	src/ui/ui_shared.c	/^void Display_CacheAll( void )$/;"	f
Display_CaptureItem	src/ui/ui_shared.c	/^void *Display_CaptureItem( int x, int y )$/;"	f
Display_CloseCinematics	src/ui/ui_shared.c	/^static void Display_CloseCinematics( void )$/;"	f	file:
Display_CursorType	src/ui/ui_shared.c	/^int Display_CursorType( int x, int y )$/;"	f
Display_GetContext	src/ui/ui_shared.c	/^displayContextDef_t *Display_GetContext( void )$/;"	f
Display_HandleKey	src/ui/ui_shared.c	/^void Display_HandleKey( int key, qboolean down, int x, int y )$/;"	f
Display_KeyBindPending	src/ui/ui_shared.c	/^qboolean Display_KeyBindPending( void )$/;"	f
Display_MouseMove	src/ui/ui_shared.c	/^qboolean Display_MouseMove( void *p, float x, float y )$/;"	f
Display_VisibleMenuCount	src/ui/ui_shared.c	/^int Display_VisibleMenuCount( void )$/;"	f
Distance	src/qcommon/q_shared.h	/^static ID_INLINE vec_t Distance( const vec3_t p1, const vec3_t p2 ) {$/;"	f
DistanceBetweenLineSegments	src/qcommon/q_math.c	/^vec_t DistanceBetweenLineSegments($/;"	f
DistanceBetweenLineSegmentsSquared	src/qcommon/q_math.c	/^vec_t DistanceBetweenLineSegmentsSquared($/;"	f
DistanceSquared	src/qcommon/q_shared.h	/^static ID_INLINE vec_t DistanceSquared( const vec3_t p1, const vec3_t p2 ) {$/;"	f
DistinctCtx	src/server/sqlite3.c	/^struct DistinctCtx {$/;"	s	file:
DistinctCtx	src/server/sqlite3.c	/^typedef struct DistinctCtx DistinctCtx;$/;"	t	typeref:struct:DistinctCtx	file:
DoFCBI	src/renderergl2/tr_image.c	/^static void DoFCBI(byte *in, byte *out, int width, int height, int component)$/;"	f	file:
DoFCBIQuick	src/renderergl2/tr_image.c	/^static void DoFCBIQuick(byte *in, byte *out, int width, int height, int component)$/;"	f	file:
DoLinear	src/renderergl2/tr_image.c	/^static void DoLinear(byte *in, byte *out, int width, int height)$/;"	f	file:
DoRailCore	src/renderergl1/tr_surface.c	/^static void DoRailCore( const vec3_t start, const vec3_t end, const vec3_t up, float len, float spanWidth )$/;"	f	file:
DoRailCore	src/renderergl2/tr_surface.c	/^static void DoRailCore( const vec3_t start, const vec3_t end, const vec3_t up, float len, float spanWidth )$/;"	f	file:
DoRailDiscs	src/renderergl1/tr_surface.c	/^static void DoRailDiscs( int numSegs, const vec3_t start, const vec3_t dir, const vec3_t right, const vec3_t up )$/;"	f	file:
DoRailDiscs	src/renderergl2/tr_surface.c	/^static void DoRailDiscs( int numSegs, const vec3_t start, const vec3_t dir, const vec3_t right, const vec3_t up )$/;"	f	file:
DoSyscall	src/qcommon/vm_x86.c	/^static void DoSyscall(void)$/;"	f	file:
DotProduct	src/qcommon/q_shared.h	561;"	d
DotProduct	src/qcommon/q_shared.h	573;"	d
DotProduct	src/tools/asm/mathlib.h	61;"	d
DotProduct4	src/renderergl2/tr_extramath.h	49;"	d
DrawMultitextured	src/renderergl1/tr_shade.c	/^static void DrawMultitextured( shaderCommands_t *input, int stage ) {$/;"	f	file:
DrawNormals	src/renderergl1/tr_shade.c	/^static void DrawNormals (shaderCommands_t *input) {$/;"	f	file:
DrawNormals	src/renderergl2/tr_shade.c	/^static void DrawNormals (shaderCommands_t *input) {$/;"	f	file:
DrawSkyBox	src/renderergl1/tr_sky.c	/^static void DrawSkyBox( shader_t *shader )$/;"	f	file:
DrawSkyBox	src/renderergl2/tr_sky.c	/^static void DrawSkyBox( shader_t *shader )$/;"	f	file:
DrawSkySide	src/renderergl1/tr_sky.c	/^static void DrawSkySide( struct image_s *image, const int mins[2], const int maxs[2] )$/;"	f	file:
DrawSkySide	src/renderergl2/tr_sky.c	/^static void DrawSkySide( struct image_s *image, const int mins[2], const int maxs[2] )$/;"	f	file:
DrawStretchPic	src/renderercommon/tr_public.h	/^	void	(*DrawStretchPic) ( float x, float y, float w, float h, $/;"	m	struct:__anon108
DrawStretchRaw	src/renderercommon/tr_public.h	/^	void	(*DrawStretchRaw) (int x, int y, int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty);$/;"	m	struct:__anon108
DrawTris	src/renderergl1/tr_shade.c	/^static void DrawTris (shaderCommands_t *input) {$/;"	f	file:
DrawTris	src/renderergl2/tr_shade.c	/^static void DrawTris (shaderCommands_t *input) {$/;"	f	file:
EADDRNOTAVAIL	src/qcommon/net_ip.c	51;"	d	file:
EAFNOSUPPORT	src/qcommon/net_ip.c	52;"	d	file:
EAGAIN	src/qcommon/net_ip.c	50;"	d	file:
EAX	src/asm/qasm-inline.h	29;"	d
EAX	src/asm/qasm-inline.h	34;"	d
EBX	src/asm/qasm-inline.h	30;"	d
EBX	src/asm/qasm-inline.h	35;"	d
ECONNRESET	src/qcommon/net_ip.c	53;"	d	file:
EDI	src/asm/qasm-inline.h	32;"	d
EDI	src/asm/qasm-inline.h	37;"	d
EDIT_CURSOR_WIDTH	src/ui/ui_shared.c	3259;"	d	file:
EF_ASTRAL_NOCLIP	src/game/bg_public.h	325;"	d
EF_BLOBLOCKED	src/game/bg_public.h	332;"	d
EF_BOUNCE	src/game/bg_public.h	311;"	d
EF_BOUNCE_HALF	src/game/bg_public.h	312;"	d
EF_B_MARKED	src/game/bg_public.h	318;"	d
EF_B_POWERED	src/game/bg_public.h	317;"	d
EF_B_SPAWNED	src/game/bg_public.h	316;"	d
EF_CONNECTION	src/game/bg_public.h	331;"	d
EF_DEAD	src/game/bg_public.h	306;"	d
EF_FIRING	src/game/bg_public.h	327;"	d
EF_FIRING2	src/game/bg_public.h	328;"	d
EF_FIRING3	src/game/bg_public.h	329;"	d
EF_MOVER_STOP	src/game/bg_public.h	324;"	d
EF_NODRAW	src/game/bg_public.h	323;"	d
EF_NO_BOUNCE_SOUND	src/game/bg_public.h	313;"	d
EF_PLAYER_EVENT	src/game/bg_public.h	308;"	d
EF_POISONCLOUDED	src/game/bg_public.h	330;"	d
EF_TELEPORT_BIT	src/game/bg_public.h	307;"	d
EF_WALLCLIMB	src/game/bg_public.h	321;"	d
EF_WALLCLIMBCEILING	src/game/bg_public.h	322;"	d
EF_WARN_CHARGE	src/game/bg_public.h	320;"	d
EIGHT_BYTE_ALIGNMENT	src/server/sqlite3.c	10117;"	d	file:
EIGHT_BYTE_ALIGNMENT	src/server/sqlite3.c	10119;"	d	file:
ELF32	src/qcommon/vm_powerpc.c	132;"	d	file:
ELF64	src/qcommon/vm_powerpc.c	133;"	d	file:
ELLIPS	src/tools/lcc/cpp/cpp.h	/^		ASRSH, ASOR, ASAND, ELLIPS,$/;"	e	enum:toktype
ELSE	src/asm/ftola.asm	/^ELSE$/;"	l
ELSE	src/asm/snapvector.asm	/^ELSE$/;"	l
ELastCommand	src/qcommon/vm_x86.c	/^} ELastCommand;$/;"	t	typeref:enum:__anon444	file:
EMIT_FALSE_CONST	src/qcommon/vm_powerpc.c	810;"	d	file:
EMIT_FALSE_CONST	src/qcommon/vm_sparc.c	867;"	d	file:
EMPTY	src/ui/ui_shared.c	483;"	d	file:
EMPTY	src/ui/ui_shared.c	665;"	d	file:
ENC	src/server/sqlite3.c	12277;"	d	file:
END	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
END	src/tools/lcc/src/symbolic.c	24;"	d	file:
ENDIF	src/asm/ftola.asm	/^ENDIF$/;"	l
ENDIF	src/asm/snapvector.asm	/^ENDIF$/;"	l
END_CHUNK	src/client/cl_avi.c	/^static ID_INLINE void END_CHUNK( void )$/;"	f	file:
ENTITYNUM_MAX_NORMAL	src/qcommon/q_shared.h	1205;"	d
ENTITYNUM_NONE	src/qcommon/q_shared.h	1203;"	d
ENTITYNUM_WORLD	src/qcommon/q_shared.h	1204;"	d
EN_BOTTOM	src/qcommon/cm_patch.c	/^	EN_BOTTOM,$/;"	e	enum:__anon385	file:
EN_LEFT	src/qcommon/cm_patch.c	/^	EN_LEFT$/;"	e	enum:__anon385	file:
EN_RIGHT	src/qcommon/cm_patch.c	/^	EN_RIGHT,$/;"	e	enum:__anon385	file:
EN_TOP	src/qcommon/cm_patch.c	/^	EN_TOP,$/;"	e	enum:__anon385	file:
EOB	src/tools/lcc/cpp/cpp.h	35;"	d
EOF	src/tools/lcc/cpp/cpp.h	7;"	d
EOFC	src/tools/lcc/cpp/cpp.h	36;"	d
EPR	src/tools/lcc/cpp/getopt.c	3;"	d	file:
EP_Agg	src/server/sqlite3.c	13186;"	d	file:
EP_Alias	src/server/sqlite3.c	13207;"	d	file:
EP_CanBeNull	src/server/sqlite3.c	13205;"	d	file:
EP_Collate	src/server/sqlite3.c	13193;"	d	file:
EP_ConstFunc	src/server/sqlite3.c	13204;"	d	file:
EP_DblQuoted	src/server/sqlite3.c	13191;"	d	file:
EP_Distinct	src/server/sqlite3.c	13189;"	d	file:
EP_Error	src/server/sqlite3.c	13188;"	d	file:
EP_FromJoin	src/server/sqlite3.c	13185;"	d	file:
EP_Generic	src/server/sqlite3.c	13194;"	d	file:
EP_InfixFunc	src/server/sqlite3.c	13192;"	d	file:
EP_IntValue	src/server/sqlite3.c	13195;"	d	file:
EP_MemToken	src/server/sqlite3.c	13201;"	d	file:
EP_NoReduce	src/server/sqlite3.c	13202;"	d	file:
EP_Propagate	src/server/sqlite3.c	13212;"	d	file:
EP_Reduced	src/server/sqlite3.c	13198;"	d	file:
EP_Resolved	src/server/sqlite3.c	13187;"	d	file:
EP_Skip	src/server/sqlite3.c	13197;"	d	file:
EP_Static	src/server/sqlite3.c	13200;"	d	file:
EP_Subquery	src/server/sqlite3.c	13206;"	d	file:
EP_TokenOnly	src/server/sqlite3.c	13199;"	d	file:
EP_Unlikely	src/server/sqlite3.c	13203;"	d	file:
EP_VarSelect	src/server/sqlite3.c	13190;"	d	file:
EP_xIsSelect	src/server/sqlite3.c	13196;"	d	file:
EQ	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
EQUAL_EPSILON	src/tools/asm/mathlib.h	50;"	d
ERR	src/tools/lcc/cpp/getopt.c	4;"	d	file:
ERROR	src/tools/lcc/cpp/cpp.h	/^enum errtype { WARNING, ERROR, FATAL };$/;"	e	enum:errtype
ERROR_INVALID_PROFILE_ARB	src/renderercommon/qgl.h	1000;"	d
ERROR_INVALID_VERSION_ARB	src/renderercommon/qgl.h	999;"	d
ERR_DISCONNECT	src/qcommon/q_shared.h	/^	ERR_DISCONNECT,				\/\/ client disconnected from the server$/;"	e	enum:__anon460
ERR_DROP	src/qcommon/q_shared.h	/^	ERR_DROP,					\/\/ print to console and disconnect from game$/;"	e	enum:__anon460
ERR_FATAL	src/qcommon/q_shared.h	/^	ERR_FATAL,					\/\/ exit the entire game with a popup window$/;"	e	enum:__anon460
ERR_FATAL	src/qcommon/q_shared.h	277;"	d
ERR_NEED_CD	src/qcommon/q_shared.h	/^	ERR_NEED_CD					\/\/ pop up the need-cd dialog$/;"	e	enum:__anon460
ERR_SERVERDISCONNECT	src/qcommon/q_shared.h	/^	ERR_SERVERDISCONNECT,		\/\/ don't kill server$/;"	e	enum:__anon460
ESFO	src/cgame/cg_snapshot.c	282;"	d	file:
ESP	src/asm/qasm-inline.h	31;"	d
ESP	src/asm/qasm-inline.h	36;"	d
ESysCallType	src/qcommon/vm_x86.c	/^} ESysCallType;$/;"	t	typeref:enum:__anon445	file:
ET_ANIMMAPOBJ	src/game/bg_public.h	/^  ET_ANIMMAPOBJ,$/;"	e	enum:__anon357
ET_BEAM	src/game/bg_public.h	/^  ET_BEAM,$/;"	e	enum:__anon357
ET_BUILDABLE	src/game/bg_public.h	/^  ET_BUILDABLE,$/;"	e	enum:__anon357
ET_CORPSE	src/game/bg_public.h	/^  ET_CORPSE,$/;"	e	enum:__anon357
ET_EVENTS	src/game/bg_public.h	/^  ET_EVENTS       \/\/ any of the EV_* events can be added freestanding$/;"	e	enum:__anon357
ET_GENERAL	src/game/bg_public.h	/^  ET_GENERAL,$/;"	e	enum:__anon357
ET_GRAPPLE	src/game/bg_public.h	/^  ET_GRAPPLE,       \/\/ grapple hooked on wall$/;"	e	enum:__anon357
ET_INVISIBLE	src/game/bg_public.h	/^  ET_INVISIBLE,$/;"	e	enum:__anon357
ET_ITEM	src/game/bg_public.h	/^  ET_ITEM,$/;"	e	enum:__anon357
ET_LEV2_ZAP_CHAIN	src/game/bg_public.h	/^  ET_LEV2_ZAP_CHAIN,$/;"	e	enum:__anon357
ET_LIGHTFLARE	src/game/bg_public.h	/^  ET_LIGHTFLARE,$/;"	e	enum:__anon357
ET_LOCATION	src/game/bg_public.h	/^  ET_LOCATION,$/;"	e	enum:__anon357
ET_MISSILE	src/game/bg_public.h	/^  ET_MISSILE,$/;"	e	enum:__anon357
ET_MODELDOOR	src/game/bg_public.h	/^  ET_MODELDOOR,$/;"	e	enum:__anon357
ET_MOVER	src/game/bg_public.h	/^  ET_MOVER,$/;"	e	enum:__anon357
ET_PARTICLE_SYSTEM	src/game/bg_public.h	/^  ET_PARTICLE_SYSTEM,$/;"	e	enum:__anon357
ET_PLAYER	src/game/bg_public.h	/^  ET_PLAYER,$/;"	e	enum:__anon357
ET_PORTAL	src/game/bg_public.h	/^  ET_PORTAL,$/;"	e	enum:__anon357
ET_PUSH_TRIGGER	src/game/bg_public.h	/^  ET_PUSH_TRIGGER,$/;"	e	enum:__anon357
ET_RANGE_MARKER	src/game/bg_public.h	/^  ET_RANGE_MARKER,$/;"	e	enum:__anon357
ET_SPEAKER	src/game/bg_public.h	/^  ET_SPEAKER,$/;"	e	enum:__anon357
ET_TELEPORT_TRIGGER	src/game/bg_public.h	/^  ET_TELEPORT_TRIGGER,$/;"	e	enum:__anon357
EVENT_VALID_MSEC	src/game/bg_public.h	473;"	d
EVSEL	src/qcommon/vm_powerpc_asm.c	624;"	d	file:
EVSEL_MASK	src/qcommon/vm_powerpc_asm.c	625;"	d	file:
EVUIMM	src/qcommon/vm_powerpc_asm.c	379;"	d	file:
EV_ALIEN_ACIDTUBE	src/game/bg_public.h	/^  EV_ALIEN_ACIDTUBE,$/;"	e	enum:__anon339
EV_ALIEN_BUILDABLE_EXPLOSION	src/game/bg_public.h	/^  EV_ALIEN_BUILDABLE_EXPLOSION,$/;"	e	enum:__anon339
EV_ALIEN_EVOLVE	src/game/bg_public.h	/^  EV_ALIEN_EVOLVE,$/;"	e	enum:__anon339
EV_ALIEN_EVOLVE_FAILED	src/game/bg_public.h	/^  EV_ALIEN_EVOLVE_FAILED,$/;"	e	enum:__anon339
EV_BUILD_CONSTRUCT	src/game/bg_public.h	/^  EV_BUILD_CONSTRUCT,$/;"	e	enum:__anon339
EV_BUILD_DELAY	src/game/bg_public.h	/^  EV_BUILD_DELAY,     \/\/ can't build yet$/;"	e	enum:__anon339
EV_BUILD_DESTROY	src/game/bg_public.h	/^  EV_BUILD_DESTROY,$/;"	e	enum:__anon339
EV_BUILD_REPAIR	src/game/bg_public.h	/^  EV_BUILD_REPAIR,    \/\/ repairing buildable$/;"	e	enum:__anon339
EV_BUILD_REPAIRED	src/game/bg_public.h	/^  EV_BUILD_REPAIRED,  \/\/ buildable has full health$/;"	e	enum:__anon339
EV_BULLET	src/game/bg_public.h	/^  EV_BULLET,        \/\/ otherEntity is the shooter$/;"	e	enum:__anon339
EV_BULLET_HIT_FLESH	src/game/bg_public.h	/^  EV_BULLET_HIT_FLESH,$/;"	e	enum:__anon339
EV_BULLET_HIT_WALL	src/game/bg_public.h	/^  EV_BULLET_HIT_WALL,$/;"	e	enum:__anon339
EV_CHANGE_WEAPON	src/game/bg_public.h	/^  EV_CHANGE_WEAPON,$/;"	e	enum:__anon339
EV_DCC_ATTACK	src/game/bg_public.h	/^  EV_DCC_ATTACK,      \/\/ dcc under attack$/;"	e	enum:__anon339
EV_DEATH1	src/game/bg_public.h	/^  EV_DEATH1,$/;"	e	enum:__anon339
EV_DEATH2	src/game/bg_public.h	/^  EV_DEATH2,$/;"	e	enum:__anon339
EV_DEATH3	src/game/bg_public.h	/^  EV_DEATH3,$/;"	e	enum:__anon339
EV_DEBUG_LINE	src/game/bg_public.h	/^  EV_DEBUG_LINE,$/;"	e	enum:__anon339
EV_EVENT_BIT1	src/game/bg_public.h	469;"	d
EV_EVENT_BIT2	src/game/bg_public.h	470;"	d
EV_EVENT_BITS	src/game/bg_public.h	471;"	d
EV_FALLING	src/game/bg_public.h	/^  EV_FALLING,$/;"	e	enum:__anon339
EV_FALL_FAR	src/game/bg_public.h	/^  EV_FALL_FAR,$/;"	e	enum:__anon339
EV_FALL_MEDIUM	src/game/bg_public.h	/^  EV_FALL_MEDIUM,$/;"	e	enum:__anon339
EV_FALL_SHORT	src/game/bg_public.h	/^  EV_FALL_SHORT,$/;"	e	enum:__anon339
EV_FIGHT	src/game/bg_public.h	/^  EV_FIGHT$/;"	e	enum:__anon339
EV_FIRE_WEAPON	src/game/bg_public.h	/^  EV_FIRE_WEAPON,$/;"	e	enum:__anon339
EV_FIRE_WEAPON2	src/game/bg_public.h	/^  EV_FIRE_WEAPON2,$/;"	e	enum:__anon339
EV_FIRE_WEAPON3	src/game/bg_public.h	/^  EV_FIRE_WEAPON3,$/;"	e	enum:__anon339
EV_FOOTSPLASH	src/game/bg_public.h	/^  EV_FOOTSPLASH,$/;"	e	enum:__anon339
EV_FOOTSTEP	src/game/bg_public.h	/^  EV_FOOTSTEP,$/;"	e	enum:__anon339
EV_FOOTSTEP_METAL	src/game/bg_public.h	/^  EV_FOOTSTEP_METAL,$/;"	e	enum:__anon339
EV_FOOTSTEP_SQUELCH	src/game/bg_public.h	/^  EV_FOOTSTEP_SQUELCH,$/;"	e	enum:__anon339
EV_FOOTWADE	src/game/bg_public.h	/^  EV_FOOTWADE,$/;"	e	enum:__anon339
EV_GENERAL_SOUND	src/game/bg_public.h	/^  EV_GENERAL_SOUND,$/;"	e	enum:__anon339
EV_GIB_PLAYER	src/game/bg_public.h	/^  EV_GIB_PLAYER,$/;"	e	enum:__anon339
EV_GLOBAL_SOUND	src/game/bg_public.h	/^  EV_GLOBAL_SOUND,    \/\/ no attenuation$/;"	e	enum:__anon339
EV_GRENADE_BOUNCE	src/game/bg_public.h	/^  EV_GRENADE_BOUNCE,    \/\/ eventParm will be the soundindex$/;"	e	enum:__anon339
EV_HUMAN_BUILDABLE_EXPLOSION	src/game/bg_public.h	/^  EV_HUMAN_BUILDABLE_EXPLOSION,$/;"	e	enum:__anon339
EV_JETPACK_DEACTIVATE	src/game/bg_public.h	/^  EV_JETPACK_DEACTIVATE,$/;"	e	enum:__anon339
EV_JETPACK_REFUEL	src/game/bg_public.h	/^  EV_JETPACK_REFUEL,$/;"	e	enum:__anon339
EV_JUMP	src/game/bg_public.h	/^  EV_JUMP,$/;"	e	enum:__anon339
EV_LEV1_GRAB	src/game/bg_public.h	/^  EV_LEV1_GRAB,$/;"	e	enum:__anon339
EV_LEV2_ZAP	src/game/bg_public.h	/^  EV_LEV2_ZAP,$/;"	e	enum:__anon339
EV_LEV4_TRAMPLE_PREPARE	src/game/bg_public.h	/^  EV_LEV4_TRAMPLE_PREPARE,$/;"	e	enum:__anon339
EV_LEV4_TRAMPLE_START	src/game/bg_public.h	/^  EV_LEV4_TRAMPLE_START,$/;"	e	enum:__anon339
EV_MASS_DRIVER	src/game/bg_public.h	/^  EV_MASS_DRIVER,$/;"	e	enum:__anon339
EV_MEDKIT_USED	src/game/bg_public.h	/^  EV_MEDKIT_USED,$/;"	e	enum:__anon339
EV_MGTURRET_SPINUP	src/game/bg_public.h	/^  EV_MGTURRET_SPINUP, \/\/ turret spinup sound should play$/;"	e	enum:__anon339
EV_MISSILE_HIT	src/game/bg_public.h	/^  EV_MISSILE_HIT,$/;"	e	enum:__anon339
EV_MISSILE_MISS	src/game/bg_public.h	/^  EV_MISSILE_MISS,$/;"	e	enum:__anon339
EV_MISSILE_MISS_METAL	src/game/bg_public.h	/^  EV_MISSILE_MISS_METAL,$/;"	e	enum:__anon339
EV_NOAMMO	src/game/bg_public.h	/^  EV_NOAMMO,$/;"	e	enum:__anon339
EV_NONE	src/game/bg_public.h	/^  EV_NONE,$/;"	e	enum:__anon339
EV_OBITUARY	src/game/bg_public.h	/^  EV_OBITUARY,$/;"	e	enum:__anon339
EV_OVERMIND_ATTACK	src/game/bg_public.h	/^  EV_OVERMIND_ATTACK, \/\/ overmind under attack$/;"	e	enum:__anon339
EV_OVERMIND_DYING	src/game/bg_public.h	/^  EV_OVERMIND_DYING,  \/\/ overmind close to death$/;"	e	enum:__anon339
EV_OVERMIND_SPAWNS	src/game/bg_public.h	/^  EV_OVERMIND_SPAWNS, \/\/ overmind needs spawns$/;"	e	enum:__anon339
EV_PAIN	src/game/bg_public.h	/^  EV_PAIN,$/;"	e	enum:__anon339
EV_PLAYER_RESPAWN	src/game/bg_public.h	/^  EV_PLAYER_RESPAWN, \/\/ for fovwarp effects$/;"	e	enum:__anon339
EV_PLAYER_TELEPORT_IN	src/game/bg_public.h	/^  EV_PLAYER_TELEPORT_IN,$/;"	e	enum:__anon339
EV_PLAYER_TELEPORT_OUT	src/game/bg_public.h	/^  EV_PLAYER_TELEPORT_OUT,$/;"	e	enum:__anon339
EV_RPTUSE_SOUND	src/game/bg_public.h	/^  EV_RPTUSE_SOUND,    \/\/ trigger a sound$/;"	e	enum:__anon339
EV_SHOTGUN	src/game/bg_public.h	/^  EV_SHOTGUN,$/;"	e	enum:__anon339
EV_STEPDN_12	src/game/bg_public.h	/^  EV_STEPDN_12,$/;"	e	enum:__anon339
EV_STEPDN_16	src/game/bg_public.h	/^  EV_STEPDN_16,$/;"	e	enum:__anon339
EV_STEPDN_4	src/game/bg_public.h	/^  EV_STEPDN_4,$/;"	e	enum:__anon339
EV_STEPDN_8	src/game/bg_public.h	/^  EV_STEPDN_8,$/;"	e	enum:__anon339
EV_STEP_12	src/game/bg_public.h	/^  EV_STEP_12,$/;"	e	enum:__anon339
EV_STEP_16	src/game/bg_public.h	/^  EV_STEP_16,$/;"	e	enum:__anon339
EV_STEP_4	src/game/bg_public.h	/^  EV_STEP_4,$/;"	e	enum:__anon339
EV_STEP_8	src/game/bg_public.h	/^  EV_STEP_8,$/;"	e	enum:__anon339
EV_STOPLOOPINGSOUND	src/game/bg_public.h	/^  EV_STOPLOOPINGSOUND,$/;"	e	enum:__anon339
EV_SWIM	src/game/bg_public.h	/^  EV_SWIM,$/;"	e	enum:__anon339
EV_TAUNT	src/game/bg_public.h	/^  EV_TAUNT,$/;"	e	enum:__anon339
EV_TESLATRAIL	src/game/bg_public.h	/^  EV_TESLATRAIL,$/;"	e	enum:__anon339
EV_WATER_CLEAR	src/game/bg_public.h	/^  EV_WATER_CLEAR, \/\/ head leaves$/;"	e	enum:__anon339
EV_WATER_LEAVE	src/game/bg_public.h	/^  EV_WATER_LEAVE, \/\/ foot leaves$/;"	e	enum:__anon339
EV_WATER_TOUCH	src/game/bg_public.h	/^  EV_WATER_TOUCH, \/\/ foot touches$/;"	e	enum:__anon339
EV_WATER_UNDER	src/game/bg_public.h	/^  EV_WATER_UNDER, \/\/ head touches$/;"	e	enum:__anon339
EXCLUSIVE_LOCK	src/server/sqlite3.c	11760;"	d	file:
EXEC_APPEND	src/qcommon/q_shared.h	/^	EXEC_APPEND			\/\/ add to end of the command buffer (normal case)$/;"	e	enum:__anon458
EXEC_INSERT	src/qcommon/q_shared.h	/^	EXEC_INSERT,		\/\/ insert at current position, but don't run yet$/;"	e	enum:__anon458
EXEC_NOW	src/qcommon/q_shared.h	/^	EXEC_NOW,			\/\/ don't return until completed, a VM should NEVER use this,$/;"	e	enum:__anon458
EXIT_SUCCESS	src/tools/lcc/lburg/gram.c	282;"	d	file:
EXIT_SUCCESS	src/tools/lcc/lburg/gram.c	310;"	d	file:
EXPRDUP_REDUCE	src/server/sqlite3.c	13246;"	d	file:
EXPR_FULLSIZE	src/server/sqlite3.c	13238;"	d	file:
EXPR_OPERATOR	src/ui/ui_shared.c	/^  EXPR_OPERATOR,$/;"	e	enum:__anon519	file:
EXPR_REDUCEDSIZE	src/server/sqlite3.c	13239;"	d	file:
EXPR_TOKENONLYSIZE	src/server/sqlite3.c	13240;"	d	file:
EXPR_VALUE	src/ui/ui_shared.c	/^  EXPR_VALUE$/;"	e	enum:__anon519	file:
EXTEND_VOTE	src/game/bg_public.h	/^  EXTEND_VOTE,$/;"	e	enum:__anon360
EXTRA_FILES	GNUmakefile	/^EXTRA_FILES=$/;"	m
EXTRA_SIZE	src/server/sqlite3.c	55116;"	d	file:
Eflag	src/tools/lcc/etc/lcc.c	/^static int Eflag;		\/* -E specified *\/$/;"	v	file:
Emit1	src/qcommon/vm_x86.c	/^static void Emit1( int v ) $/;"	f	file:
Emit2	src/qcommon/vm_x86.c	/^static void Emit2(int v)$/;"	f	file:
Emit4	src/qcommon/vm_x86.c	/^static void Emit4(int v)$/;"	f	file:
EmitBranchConditions	src/qcommon/vm_x86.c	/^void EmitBranchConditions(vm_t *vm, int op)$/;"	f
EmitByte	src/tools/asm/q3asm.c	/^static void EmitByte( segment_t *seg, int v ) {$/;"	f	file:
EmitCallConst	src/qcommon/vm_x86.c	/^void EmitCallConst(vm_t *vm, int cdest, int callProcOfsSyscall)$/;"	f
EmitCallDoSyscall	src/qcommon/vm_x86.c	/^int EmitCallDoSyscall(vm_t *vm)$/;"	f
EmitCallErrJump	src/qcommon/vm_x86.c	/^static void EmitCallErrJump(vm_t *vm, int sysCallOfs)$/;"	f	file:
EmitCallIns	src/qcommon/vm_x86.c	/^void EmitCallIns(vm_t *vm, int cdest)$/;"	f
EmitCallProcedure	src/qcommon/vm_x86.c	/^int EmitCallProcedure(vm_t *vm, int sysCallOfs)$/;"	f
EmitCallRel	src/qcommon/vm_x86.c	/^void EmitCallRel(vm_t *vm, int callOfs)$/;"	f
EmitCommand	src/qcommon/vm_x86.c	/^static void EmitCommand(ELastCommand command)$/;"	f	file:
EmitInt	src/tools/asm/q3asm.c	/^static void EmitInt( segment_t *seg, int v ) {$/;"	f	file:
EmitJumpIns	src/qcommon/vm_x86.c	/^void EmitJumpIns(vm_t *vm, const char *jmpop, int cdest)$/;"	f
EmitMovEAXStack	src/qcommon/vm_x86.c	/^static void EmitMovEAXStack(vm_t *vm, int andit)$/;"	f	file:
EmitMovECXStack	src/qcommon/vm_x86.c	/^void EmitMovECXStack(vm_t *vm)$/;"	f
EmitMovEDXStack	src/qcommon/vm_x86.c	/^void EmitMovEDXStack(vm_t *vm, int andit)$/;"	f
EmitPtr	src/qcommon/vm_x86.c	/^static void EmitPtr(void *ptr)$/;"	f	file:
EmitPushStack	src/qcommon/vm_x86.c	/^static void EmitPushStack(vm_t *vm)$/;"	f	file:
EmitRexString	src/qcommon/vm_x86.c	/^static void EmitRexString(byte rex, const char *string)$/;"	f	file:
EmitString	src/qcommon/vm_x86.c	/^static void EmitString( const char *string ) {$/;"	f	file:
EmptyTexture	src/renderergl2/tr_image.c	/^static void EmptyTexture( int width, int height, imgType_t type, imgFlags_t flags,$/;"	f	file:
EndFrame	src/renderercommon/tr_public.h	/^	void	(*EndFrame)( int *frontEndMsec, int *backEndMsec );$/;"	m	struct:__anon108
EndRegistration	src/renderercommon/tr_public.h	/^	void	(*EndRegistration)( void );$/;"	m	struct:__anon108
EntropyGatherer	src/server/sqlite3.c	/^struct EntropyGatherer {$/;"	s	file:
EntropyGatherer	src/server/sqlite3.c	/^typedef struct EntropyGatherer EntropyGatherer;$/;"	t	typeref:struct:EntropyGatherer	file:
Env	src/tools/lcc/src/config.h	/^} Env;$/;"	t	typeref:struct:__anon279
ErrJump	src/qcommon/vm_sparc.c	/^	void (*ErrJump)(void);$/;"	m	struct:VM_Data	file:
ErrJump	src/qcommon/vm_sparc.c	/^static void ErrJump(void)$/;"	f	file:
ErrJump	src/qcommon/vm_x86.c	/^static void __attribute__((__noreturn__)) ErrJump(void)$/;"	f	file:
Error	src/renderercommon/tr_public.h	/^	void	(QDECL *Error)( int errorLevel, const char *fmt, ...) __attribute__ ((noreturn, format (printf, 2, 3)));$/;"	m	struct:__anon109
Error	src/tools/asm/cmdlib.c	/^void Error( const char *error, ... )$/;"	f
Error	src/tools/asm/cmdlib.c	/^void Error( const char *error, ...)$/;"	f
Error	src/ui/ui_shared.h	/^  void ( *Error )( int level, const char *error, ... ) __attribute__ ((noreturn, format (printf, 2, 3)));$/;"	m	struct:__anon506
EvalWaveForm	src/renderergl1/tr_shade_calc.c	/^static float EvalWaveForm( const waveForm_t *wf ) $/;"	f	file:
EvalWaveForm	src/renderergl2/tr_shade_calc.c	/^static float EvalWaveForm( const waveForm_t *wf ) $/;"	f	file:
EvalWaveFormClamped	src/renderergl1/tr_shade_calc.c	/^static float EvalWaveFormClamped( const waveForm_t *wf )$/;"	f	file:
EvalWaveFormClamped	src/renderergl2/tr_shade_calc.c	/^static float EvalWaveFormClamped( const waveForm_t *wf )$/;"	f	file:
Events	src/tools/lcc/src/c.h	/^} Events;$/;"	t	typeref:struct:__anon284
ExitLevel	src/game/g_main.c	/^void ExitLevel( void )$/;"	f
ExpandArg	src/tools/asm/cmdlib.c	/^char *ExpandArg (const char *path)$/;"	f
ExpandBlob	src/server/sqlite3.c	16378;"	d	file:
ExpandBlob	src/server/sqlite3.c	16381;"	d	file:
ExpandGamePath	src/tools/asm/cmdlib.c	/^char *ExpandGamePath (const char *path)$/;"	f
ExpandHalfTextureToGrid	src/renderergl2/tr_image.c	/^static void ExpandHalfTextureToGrid( byte *data, int width, int height)$/;"	f	file:
ExpandPath	src/tools/asm/cmdlib.c	/^char *ExpandPath (const char *path)$/;"	f
ExpandPathAndArchive	src/tools/asm/cmdlib.c	/^char *ExpandPathAndArchive (const char *path)$/;"	f
ExpandWildcards	src/tools/asm/cmdlib.c	/^void ExpandWildcards (int *argc, char ***argv)$/;"	f
ExpandWildcards	src/tools/asm/cmdlib.c	/^void ExpandWildcards( int *argc, char ***argv )$/;"	f
Explain	src/server/sqlite3.c	/^struct Explain {$/;"	s	file:
Explain	src/server/sqlite3.c	/^typedef struct Explain Explain;$/;"	t	typeref:struct:Explain	file:
Expr	src/server/sqlite3.c	/^struct Expr {$/;"	s	file:
Expr	src/server/sqlite3.c	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr	file:
ExprClearProperty	src/server/sqlite3.c	13221;"	d	file:
ExprHasAllProperty	src/server/sqlite3.c	13219;"	d	file:
ExprHasProperty	src/server/sqlite3.c	13218;"	d	file:
ExprList	src/server/sqlite3.c	/^struct ExprList {$/;"	s	file:
ExprList	src/server/sqlite3.c	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList	file:
ExprList_item	src/server/sqlite3.c	/^  struct ExprList_item { \/* For each expression in the list *\/$/;"	s	struct:ExprList	file:
ExprSetProperty	src/server/sqlite3.c	13220;"	d	file:
ExprSetVVAProperty	src/server/sqlite3.c	13228;"	d	file:
ExprSetVVAProperty	src/server/sqlite3.c	13230;"	d	file:
ExprSpan	src/server/sqlite3.c	/^struct ExprSpan {$/;"	s	file:
ExprSpan	src/server/sqlite3.c	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan	file:
ExtractFileBase	src/tools/asm/cmdlib.c	/^void ExtractFileBase (const char *path, char *dest)$/;"	f
ExtractFileExtension	src/tools/asm/cmdlib.c	/^void ExtractFileExtension (const char *path, char *dest)$/;"	f
ExtractFilePath	src/tools/asm/cmdlib.c	/^void ExtractFilePath (const char *path, char *dest)$/;"	f
ExtractLine	src/tools/asm/q3asm.c	/^static char *ExtractLine( char *data ) {$/;"	f	file:
F	src/qcommon/md4.c	46;"	d	file:
F	src/tools/lcc/src/c.h	/^	F=FLOAT,$/;"	e	enum:__anon286
F0	src/qcommon/vm_sparc.h	39;"	d
F1	src/qcommon/md5.c	64;"	d	file:
F1	src/qcommon/vm_sparc.h	40;"	d
F10	src/qcommon/vm_sparc.h	49;"	d
F11	src/qcommon/vm_sparc.h	50;"	d
F12	src/qcommon/vm_sparc.h	51;"	d
F13	src/qcommon/vm_sparc.h	52;"	d
F14	src/qcommon/vm_sparc.h	53;"	d
F15	src/qcommon/vm_sparc.h	54;"	d
F16	src/qcommon/vm_sparc.h	55;"	d
F17	src/qcommon/vm_sparc.h	56;"	d
F18	src/qcommon/vm_sparc.h	57;"	d
F19	src/qcommon/vm_sparc.h	58;"	d
F2	src/qcommon/md5.c	65;"	d	file:
F2	src/qcommon/vm_sparc.h	41;"	d
F20	src/qcommon/vm_sparc.h	59;"	d
F21	src/qcommon/vm_sparc.h	60;"	d
F22	src/qcommon/vm_sparc.h	61;"	d
F23	src/qcommon/vm_sparc.h	62;"	d
F24	src/qcommon/vm_sparc.h	63;"	d
F25	src/qcommon/vm_sparc.h	64;"	d
F26	src/qcommon/vm_sparc.h	65;"	d
F27	src/qcommon/vm_sparc.h	66;"	d
F28	src/qcommon/vm_sparc.h	67;"	d
F29	src/qcommon/vm_sparc.h	68;"	d
F3	src/qcommon/md5.c	66;"	d	file:
F3	src/qcommon/vm_sparc.h	42;"	d
F30	src/qcommon/vm_sparc.h	69;"	d
F31	src/qcommon/vm_sparc.h	70;"	d
F4	src/qcommon/md5.c	67;"	d	file:
F4	src/qcommon/vm_sparc.h	43;"	d
F5	src/qcommon/vm_sparc.h	44;"	d
F6	src/qcommon/vm_sparc.h	45;"	d
F7	src/qcommon/vm_sparc.h	46;"	d
F8	src/qcommon/vm_sparc.h	47;"	d
F9	src/qcommon/vm_sparc.h	48;"	d
FADD	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FADE_TIME	src/cgame/cg_local.h	41;"	d
FALLING_THRESHOLD	src/game/bg_local.h	34;"	d
FALSE_ICOUNT	src/qcommon/vm_powerpc.c	443;"	d	file:
FAR_ALPHA	src/cgame/cg_scanner.c	111;"	d	file:
FATAL	src/tools/lcc/cpp/cpp.h	/^enum errtype { WARNING, ERROR, FATAL };$/;"	e	enum:errtype
FBE	src/qcommon/vm_sparc.c	/^	FBE, FBNE, FBL, FBGE, FBG, FBLE,$/;"	e	enum:sparc_iname	file:
FBG	src/qcommon/vm_sparc.c	/^	FBE, FBNE, FBL, FBGE, FBG, FBLE,$/;"	e	enum:sparc_iname	file:
FBGE	src/qcommon/vm_sparc.c	/^	FBE, FBNE, FBL, FBGE, FBG, FBLE,$/;"	e	enum:sparc_iname	file:
FBL	src/qcommon/vm_sparc.c	/^	FBE, FBNE, FBL, FBGE, FBG, FBLE,$/;"	e	enum:sparc_iname	file:
FBLE	src/qcommon/vm_sparc.c	/^	FBE, FBNE, FBL, FBGE, FBG, FBLE,$/;"	e	enum:sparc_iname	file:
FBNE	src/qcommon/vm_sparc.c	/^	FBE, FBNE, FBL, FBGE, FBG, FBLE,$/;"	e	enum:sparc_iname	file:
FBO_AttachTextureImage	src/renderergl2/tr_fbo.c	/^void FBO_AttachTextureImage(image_t *img, int index)$/;"	f
FBO_Bind	src/renderergl2/tr_fbo.c	/^void FBO_Bind(FBO_t * fbo)$/;"	f
FBO_Blit	src/renderergl2/tr_fbo.c	/^void FBO_Blit(FBO_t *src, ivec4_t inSrcBox, vec2_t srcTexScale, FBO_t *dst, ivec4_t dstBox, struct shaderProgram_s *shaderProgram, vec4_t color, int blend)$/;"	f
FBO_BlitFromTexture	src/renderergl2/tr_fbo.c	/^void FBO_BlitFromTexture(struct image_s *src, ivec4_t inSrcBox, vec2_t inSrcTexScale, FBO_t *dst, ivec4_t inDstBox, struct shaderProgram_s *shaderProgram, vec4_t inColor, int blend)$/;"	f
FBO_Create	src/renderergl2/tr_fbo.c	/^FBO_t          *FBO_Create(const char *name, int width, int height)$/;"	f
FBO_CreateBuffer	src/renderergl2/tr_fbo.c	/^void FBO_CreateBuffer(FBO_t *fbo, int format, int index, int multisample)$/;"	f
FBO_FastBlit	src/renderergl2/tr_fbo.c	/^void FBO_FastBlit(FBO_t *src, ivec4_t srcBox, FBO_t *dst, ivec4_t dstBox, int buffers, int filter)$/;"	f
FBO_Init	src/renderergl2/tr_fbo.c	/^void FBO_Init(void)$/;"	f
FBO_Shutdown	src/renderergl2/tr_fbo.c	/^void FBO_Shutdown(void)$/;"	f
FBO_s	src/renderergl2/tr_fbo.h	/^typedef struct FBO_s$/;"	s
FBO_t	src/renderergl2/tr_fbo.h	/^} FBO_t;$/;"	t	typeref:struct:FBO_s
FCBIByBlock	src/renderergl2/tr_image.c	/^static void FCBIByBlock(byte *data, int width, int height, qboolean clampToEdge, qboolean normalized)$/;"	f	file:
FCMP	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FDIV	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FEATURED_MAXPING	src/client/cl_ui.c	425;"	d	file:
FEEDER_ALIENTEAM_LIST	src/ui/menudef.h	69;"	d
FEEDER_CINEMATICS	src/ui/menudef.h	79;"	d
FEEDER_DEMOS	src/ui/menudef.h	75;"	d
FEEDER_FINDPLAYER	src/ui/menudef.h	77;"	d
FEEDER_HELP_LIST	src/ui/menudef.h	90;"	d
FEEDER_HUMANTEAM_LIST	src/ui/menudef.h	70;"	d
FEEDER_IGNORE_LIST	src/ui/menudef.h	88;"	d
FEEDER_MAPS	src/ui/menudef.h	68;"	d
FEEDER_MODS	src/ui/menudef.h	74;"	d
FEEDER_NEWS	src/ui/menudef.h	73;"	d
FEEDER_PLAYER_LIST	src/ui/menudef.h	72;"	d
FEEDER_RESOLUTIONS	src/ui/menudef.h	91;"	d
FEEDER_SERVERS	src/ui/menudef.h	67;"	d
FEEDER_SERVERSTATUS	src/ui/menudef.h	76;"	d
FEEDER_TEAM_LIST	src/ui/menudef.h	71;"	d
FEEDER_TREMALIENBUILD	src/ui/menudef.h	86;"	d
FEEDER_TREMALIENCLASSES	src/ui/menudef.h	81;"	d
FEEDER_TREMALIENUPGRADE	src/ui/menudef.h	85;"	d
FEEDER_TREMHUMANARMOURYBUY	src/ui/menudef.h	83;"	d
FEEDER_TREMHUMANARMOURYSELL	src/ui/menudef.h	84;"	d
FEEDER_TREMHUMANBUILD	src/ui/menudef.h	87;"	d
FEEDER_TREMHUMANITEMS	src/ui/menudef.h	82;"	d
FEEDER_TREMTEAMS	src/ui/menudef.h	80;"	d
FFF_ALIENS	src/game/bg_public.h	1313;"	d
FFF_BUILDABLES	src/game/bg_public.h	1314;"	d
FFF_HUMANS	src/game/bg_public.h	1312;"	d
FGetLittleLong	src/client/snd_codec_wav.c	/^static int FGetLittleLong( fileHandle_t f ) {$/;"	f	file:
FGetLittleShort	src/client/snd_codec_wav.c	/^static short FGetLittleShort( fileHandle_t f ) {$/;"	f	file:
FIELD	src/tools/lcc/src/c.h	/^	FIELD=43<<4$/;"	e	enum:__anon305
FILEHANDLEID	src/server/sqlite3.c	44128;"	d	file:
FILE_ATTRIBUTE_MASK	src/server/sqlite3.c	35527;"	d	file:
FILE_FLAG_MASK	src/server/sqlite3.c	35523;"	d	file:
FILE_HASH_SIZE	src/qcommon/cvar.c	36;"	d	file:
FILE_HASH_SIZE	src/renderergl1/tr_image.c	32;"	d	file:
FILE_HASH_SIZE	src/renderergl1/tr_shader.c	35;"	d	file:
FILE_HASH_SIZE	src/renderergl2/tr_image.c	32;"	d	file:
FILE_HASH_SIZE	src/renderergl2/tr_shader.c	35;"	d	file:
FITOS	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FIXLCODES	src/qcommon/puff.c	85;"	d	file:
FKey	src/server/sqlite3.c	/^struct FKey {$/;"	s	file:
FKey	src/server/sqlite3.c	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey	file:
FLAG_ATBASE	src/qcommon/q_shared.h	/^	FLAG_ATBASE = 0,$/;"	e	enum:_flag_status
FLAG_DROPPED	src/qcommon/q_shared.h	/^	FLAG_DROPPED$/;"	e	enum:_flag_status
FLAG_INTERN	src/server/sqlite3.c	22915;"	d	file:
FLAG_RUN	src/game/bg_public.h	/^  FLAG_RUN,$/;"	e	enum:__anon341
FLAG_SIGNED	src/server/sqlite3.c	22914;"	d	file:
FLAG_STAND	src/game/bg_public.h	/^  FLAG_STAND,$/;"	e	enum:__anon341
FLAG_STAND2RUN	src/game/bg_public.h	/^  FLAG_STAND2RUN,$/;"	e	enum:__anon341
FLAG_STRING	src/server/sqlite3.c	22916;"	d	file:
FLAG_TAKEN	src/qcommon/q_shared.h	/^	FLAG_TAKEN,			\/\/ CTF$/;"	e	enum:_flag_status
FLAG_TAKEN_BLUE	src/qcommon/q_shared.h	/^	FLAG_TAKEN_BLUE,	\/\/ One Flag CTF$/;"	e	enum:_flag_status
FLAG_TAKEN_RED	src/qcommon/q_shared.h	/^	FLAG_TAKEN_RED,		\/\/ One Flag CTF$/;"	e	enum:_flag_status
FLAMER_DMG	src/game/tremulous.h	444;"	d
FLAMER_GAS	src/game/tremulous.h	441;"	d
FLAMER_K_SCALE	src/game/tremulous.h	443;"	d
FLAMER_LAG	src/game/tremulous.h	450;"	d
FLAMER_LIFETIME	src/game/tremulous.h	448;"	d
FLAMER_PRICE	src/game/tremulous.h	440;"	d
FLAMER_RADIUS	src/game/tremulous.h	446;"	d
FLAMER_REPEAT	src/game/tremulous.h	442;"	d
FLAMER_SIZE	src/game/tremulous.h	447;"	d
FLAMER_SPEED	src/game/tremulous.h	449;"	d
FLAMER_SPLASHDAMAGE	src/game/tremulous.h	445;"	d
FLARE_NOFADE	src/cgame/cg_ents.c	601;"	d	file:
FLARE_OFF	src/cgame/cg_ents.c	600;"	d	file:
FLARE_REALFADE	src/cgame/cg_ents.c	603;"	d	file:
FLARE_STDCOEFF	src/renderergl1/tr_local.h	961;"	d
FLARE_STDCOEFF	src/renderergl2/tr_local.h	1669;"	d
FLARE_TIMEFADE	src/cgame/cg_ents.c	602;"	d	file:
FLOAT_INT_BIAS	src/qcommon/msg.c	785;"	d	file:
FLOAT_INT_BITS	src/qcommon/msg.c	784;"	d	file:
FL_DROPPED_ITEM	src/game/g_local.h	49;"	d
FL_FORCE_GESTURE	src/game/g_local.h	52;"	d
FL_GODMODE	src/game/g_local.h	45;"	d
FL_NOTARGET	src/game/g_local.h	46;"	d
FL_NO_BOTS	src/game/g_local.h	50;"	d
FL_NO_HUMANS	src/game/g_local.h	51;"	d
FL_NO_KNOCKBACK	src/game/g_local.h	48;"	d
FL_TEAMSLAVE	src/game/g_local.h	47;"	d
FMT1	src/qcommon/vm_sparc.c	85;"	d	file:
FMT2	src/qcommon/vm_sparc.c	86;"	d	file:
FMT3	src/qcommon/vm_sparc.c	87;"	d	file:
FMT3F	src/qcommon/vm_sparc.c	89;"	d	file:
FMT3I	src/qcommon/vm_sparc.c	88;"	d	file:
FMUL	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FMV_EOF	src/qcommon/q_shared.h	/^	FMV_EOF,		\/\/ all other conditions, i.e. stop\/EOF\/abort$/;"	e	enum:__anon480
FMV_IDLE	src/qcommon/q_shared.h	/^	FMV_IDLE,$/;"	e	enum:__anon480
FMV_ID_BLT	src/qcommon/q_shared.h	/^	FMV_ID_BLT,$/;"	e	enum:__anon480
FMV_ID_IDLE	src/qcommon/q_shared.h	/^	FMV_ID_IDLE,$/;"	e	enum:__anon480
FMV_ID_WAIT	src/qcommon/q_shared.h	/^	FMV_ID_WAIT$/;"	e	enum:__anon480
FMV_LOOPED	src/qcommon/q_shared.h	/^	FMV_LOOPED,$/;"	e	enum:__anon480
FMV_PLAY	src/qcommon/q_shared.h	/^	FMV_PLAY,		\/\/ play$/;"	e	enum:__anon480
FNEG	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FOFS	src/game/g_local.h	1174;"	d
FOGDEF_ALL	src/renderergl2/tr_local.h	/^	FOGDEF_ALL                  = 0x0003,$/;"	e	enum:__anon34
FOGDEF_COUNT	src/renderergl2/tr_local.h	/^	FOGDEF_COUNT                = 0x0004,$/;"	e	enum:__anon34
FOGDEF_USE_DEFORM_VERTEXES	src/renderergl2/tr_local.h	/^	FOGDEF_USE_DEFORM_VERTEXES  = 0x0001,$/;"	e	enum:__anon34
FOGDEF_USE_VERTEX_ANIMATION	src/renderergl2/tr_local.h	/^	FOGDEF_USE_VERTEX_ANIMATION = 0x0002,$/;"	e	enum:__anon34
FOG_S	src/renderergl1/tr_image.c	1165;"	d	file:
FOG_S	src/renderergl2/tr_image.c	2639;"	d	file:
FOG_T	src/renderergl1/tr_image.c	1166;"	d	file:
FOG_T	src/renderergl2/tr_image.c	2640;"	d	file:
FOG_TABLE_SIZE	src/renderergl1/tr_local.h	808;"	d
FOG_TABLE_SIZE	src/renderergl2/tr_local.h	1342;"	d
FOLLOWING_STRING	src/cgame/cg_draw.c	1369;"	d	file:
FOOTSTEP_CUSTOM	src/cgame/cg_local.h	/^  FOOTSTEP_CUSTOM,$/;"	e	enum:__anon232
FOOTSTEP_FLESH	src/cgame/cg_local.h	/^  FOOTSTEP_FLESH,$/;"	e	enum:__anon232
FOOTSTEP_METAL	src/cgame/cg_local.h	/^  FOOTSTEP_METAL,$/;"	e	enum:__anon232
FOOTSTEP_NONE	src/cgame/cg_local.h	/^  FOOTSTEP_NONE,$/;"	e	enum:__anon232
FOOTSTEP_NORMAL	src/cgame/cg_local.h	/^  FOOTSTEP_NORMAL,$/;"	e	enum:__anon232
FOOTSTEP_SPLASH	src/cgame/cg_local.h	/^  FOOTSTEP_SPLASH,$/;"	e	enum:__anon232
FOOTSTEP_TOTAL	src/cgame/cg_local.h	/^  FOOTSTEP_TOTAL$/;"	e	enum:__anon232
FOREGUARD	src/server/sqlite3.c	18821;"	d	file:
FOUR_BYTE_INT	src/server/sqlite3.c	71327;"	d	file:
FOUR_BYTE_UINT	src/server/sqlite3.c	71326;"	d	file:
FOVWARPTIME	src/cgame/cg_view.c	842;"	d	file:
FPRLEN	src/qcommon/vm_powerpc.c	145;"	d	file:
FPRS_REG	src/qcommon/vm_sparc.h	76;"	d
FPS	src/ui/ui_shared.h	/^  float FPS;$/;"	m	struct:__anon506
FPS_FRAMES	src/cgame/cg_draw.c	1508;"	d	file:
FPS_STRING	src/cgame/cg_draw.c	1509;"	d	file:
FPUCW	src/sys/sys_win32.c	71;"	d	file:
FPUCWMASK	src/sys/sys_win32.c	74;"	d	file:
FPUCWMASK	src/sys/sys_win32.c	76;"	d	file:
FPUCWMASK1	src/sys/sys_win32.c	70;"	d	file:
FP_EQUAL	src/renderergl1/tr_local.h	/^	FP_EQUAL,		\/\/ surface is opaque but possibly alpha tested$/;"	e	enum:__anon144
FP_EQUAL	src/renderergl2/tr_local.h	/^	FP_EQUAL,		\/\/ surface is opaque but possibly alpha tested$/;"	e	enum:__anon28
FP_LE	src/renderergl1/tr_local.h	/^	FP_LE			\/\/ surface is trnaslucent, but still needs a fog pass (fog surface)$/;"	e	enum:__anon144
FP_LE	src/renderergl2/tr_local.h	/^	FP_LE			\/\/ surface is trnaslucent, but still needs a fog pass (fog surface)$/;"	e	enum:__anon28
FP_NONE	src/renderergl1/tr_local.h	/^	FP_NONE,		\/\/ surface is translucent and will just be adjusted properly$/;"	e	enum:__anon144
FP_NONE	src/renderergl2/tr_local.h	/^	FP_NONE,		\/\/ surface is translucent and will just be adjusted properly$/;"	e	enum:__anon28
FRA	src/qcommon/vm_powerpc_asm.c	304;"	d	file:
FRAGMENT_BIT	src/qcommon/net_chan.c	56;"	d	file:
FRAGMENT_SIZE	src/qcommon/net_chan.c	53;"	d	file:
FRAMETIME	src/game/g_local.h	40;"	d
FRA_MASK	src/qcommon/vm_powerpc_asm.c	305;"	d	file:
FRB	src/qcommon/vm_powerpc_asm.c	309;"	d	file:
FRB_MASK	src/qcommon/vm_powerpc_asm.c	310;"	d	file:
FRC	src/qcommon/vm_powerpc_asm.c	314;"	d	file:
FRC_MASK	src/qcommon/vm_powerpc_asm.c	315;"	d	file:
FREEKILL_ALIEN	src/game/tremulous.h	669;"	d
FREEKILL_HUMAN	src/game/tremulous.h	670;"	d
FREEMEMCOOKIE	src/game/bg_alloc.c	33;"	d	file:
FREETYPE_CFLAGS	GNUmakefile	/^    FREETYPE_CFLAGS = -Ifreetype2$/;"	m
FREETYPE_CFLAGS	GNUmakefile	/^  FREETYPE_CFLAGS ?= $(shell pkg-config --silence-errors --cflags freetype2 || true)$/;"	m
FREETYPE_LIBS	GNUmakefile	/^  FREETYPE_LIBS ?= $(shell pkg-config --silence-errors --libs freetype2 || echo -lfreetype)$/;"	m
FREE_IF_NOT_NULL	src/game/g_playmap.h	105;"	d
FREG	src/tools/lcc/src/config.h	/^enum { IREG=0, FREG=1 };$/;"	e	enum:__anon276
FRS	src/qcommon/vm_powerpc_asm.c	320;"	d	file:
FRT	src/qcommon/vm_powerpc_asm.c	321;"	d	file:
FSTOI	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FSUB	src/qcommon/vm_sparc.c	/^	FADD, FSUB, FCMP, FSTOI, FITOS, FNEG, FDIV, FMUL,$/;"	e	enum:sparc_iname	file:
FS_APPEND	src/qcommon/q_shared.h	/^	FS_APPEND,$/;"	e	enum:__anon464
FS_APPEND_SYNC	src/qcommon/q_shared.h	/^	FS_APPEND_SYNC$/;"	e	enum:__anon464
FS_AddFileToList	src/qcommon/files.c	/^static int FS_AddFileToList( char *name, char *list[MAX_FOUND_FILES], int nfiles ) {$/;"	f	file:
FS_AddGameDirectory	src/qcommon/files.c	/^void FS_AddGameDirectory( const char *path, const char *dir ) {$/;"	f
FS_BuildOSPath	src/qcommon/files.c	/^char *FS_BuildOSPath( const char *base, const char *game, const char *qpath ) {$/;"	f
FS_CGAME_REF	src/qcommon/qcommon.h	588;"	d
FS_CheckDirTraversal	src/qcommon/files.c	/^qboolean FS_CheckDirTraversal(const char *checkdir)$/;"	f
FS_CheckFilenameIsMutable	src/qcommon/files.c	/^static void FS_CheckFilenameIsMutable( const char *filename,$/;"	f	file:
FS_ClearPakReferences	src/qcommon/files.c	/^void FS_ClearPakReferences( int flags ) {$/;"	f
FS_ComparePaks	src/qcommon/files.c	/^qboolean FS_ComparePaks( char *neededpaks, int len, qboolean dlstring ) {$/;"	f
FS_CompareZipChecksum	src/qcommon/files.c	/^qboolean FS_CompareZipChecksum(const char *zipfile)$/;"	f
FS_ConditionalRestart	src/qcommon/files.c	/^qboolean FS_ConditionalRestart(int checksumFeed, qboolean disconnect)$/;"	f
FS_ConvertPath	src/qcommon/files.c	/^void FS_ConvertPath( char *s ) {$/;"	f
FS_CreatePath	src/qcommon/files.c	/^qboolean FS_CreatePath (char *OSPath) {$/;"	f
FS_Dir_f	src/qcommon/files.c	/^void FS_Dir_f( void ) {$/;"	f
FS_FCloseFile	src/qcommon/files.c	/^void FS_FCloseFile( fileHandle_t f ) {$/;"	f
FS_FCreateOpenPipeFile	src/qcommon/files.c	/^fileHandle_t FS_FCreateOpenPipeFile( const char *filename ) {$/;"	f
FS_FOpenFileAppend	src/qcommon/files.c	/^fileHandle_t FS_FOpenFileAppend( const char *filename ) {$/;"	f
FS_FOpenFileByMode	src/qcommon/files.c	/^int		FS_FOpenFileByMode( const char *qpath, fileHandle_t *f, fsMode_t mode ) {$/;"	f
FS_FOpenFileRead	src/qcommon/files.c	/^long FS_FOpenFileRead(const char *filename, fileHandle_t *file, qboolean uniqueFILE)$/;"	f
FS_FOpenFileReadDir	src/qcommon/files.c	/^long FS_FOpenFileReadDir(const char *filename, searchpath_t *search, fileHandle_t *file, qboolean uniqueFILE, qboolean unpure)$/;"	f
FS_FOpenFileWrite	src/qcommon/files.c	/^fileHandle_t FS_FOpenFileWrite( const char *filename ) {$/;"	f
FS_FTell	src/qcommon/files.c	/^int		FS_FTell( fileHandle_t f ) {$/;"	f
FS_FileExists	src/qcommon/files.c	/^qboolean FS_FileExists(const char *file)$/;"	f
FS_FileExists	src/renderercommon/tr_public.h	/^	qboolean (*FS_FileExists)( const char *file );$/;"	m	struct:__anon109
FS_FileForHandle	src/qcommon/files.c	/^static FILE	*FS_FileForHandle( fileHandle_t f ) {$/;"	f	file:
FS_FileInPathExists	src/qcommon/files.c	/^qboolean FS_FileInPathExists(const char *testpath)$/;"	f
FS_FileIsInPAK	src/qcommon/files.c	/^int	FS_FileIsInPAK( const char *filename, int *pChecksum ) {$/;"	f
FS_FileIsInPAK	src/renderercommon/tr_public.h	/^	int		(*FS_FileIsInPAK)( const char *name, int *pCheckSum );$/;"	m	struct:__anon109
FS_FileIsInPAK_A	src/qcommon/files.c	/^int	FS_FileIsInPAK_A( qboolean alternate, const char *filename, int *pChecksum ) {$/;"	f
FS_FilenameCompare	src/qcommon/files.c	/^qboolean FS_FilenameCompare( const char *s1, const char *s2 ) {$/;"	f
FS_FilenameCompletion	src/qcommon/files.c	/^void	FS_FilenameCompletion( const char *dir, const char *ext,$/;"	f
FS_FindVM	src/qcommon/files.c	/^int FS_FindVM(void **startSearch, char *found, int foundlen, const char *name, int enableDll)$/;"	f
FS_Flush	src/qcommon/files.c	/^void	FS_Flush( fileHandle_t f ) {$/;"	f
FS_ForceFlush	src/qcommon/files.c	/^void	FS_ForceFlush( fileHandle_t f ) {$/;"	f
FS_FreeFile	src/qcommon/files.c	/^void FS_FreeFile( void *buffer ) {$/;"	f
FS_FreeFile	src/renderercommon/tr_public.h	/^	void	(*FS_FreeFile)( void *buf );$/;"	m	struct:__anon109
FS_FreeFileList	src/qcommon/files.c	/^void FS_FreeFileList( char **list ) {$/;"	f
FS_FreeFileList	src/renderercommon/tr_public.h	/^	void	(*FS_FreeFileList)( char **filelist );$/;"	m	struct:__anon109
FS_FreePak	src/qcommon/files.c	/^static void FS_FreePak(pack_t *thepak)$/;"	f	file:
FS_GENERAL_REF	src/qcommon/qcommon.h	586;"	d
FS_GetCurrentGameDir	src/qcommon/files.c	/^const char *FS_GetCurrentGameDir(void)$/;"	f
FS_GetFileList	src/qcommon/files.c	/^int	FS_GetFileList(  const char *path, const char *extension, char *listbuf, int bufsize ) {$/;"	f
FS_GetFilteredFiles	src/qcommon/files.c	/^int	FS_GetFilteredFiles( const char *path, const char *extension, char *filter, char *listbuf, int bufsize )$/;"	f
FS_GetModList	src/qcommon/files.c	/^int	FS_GetModList( char *listbuf, int bufsize ) {$/;"	f
FS_HandleForFile	src/qcommon/files.c	/^static fileHandle_t	FS_HandleForFile(void) {$/;"	f	file:
FS_HashFileName	src/qcommon/files.c	/^static long FS_HashFileName( const char *fname, int hashSize ) {$/;"	f	file:
FS_HomeRemove	src/qcommon/files.c	/^void FS_HomeRemove( const char *homePath ) {$/;"	f
FS_InitFilesystem	src/qcommon/files.c	/^void FS_InitFilesystem( void ) {$/;"	f
FS_Initialized	src/qcommon/files.c	/^qboolean FS_Initialized( void ) {$/;"	f
FS_IsDemoExt	src/qcommon/files.c	/^qboolean FS_IsDemoExt(const char *filename, int namelen)$/;"	f
FS_IsExt	src/qcommon/files.c	/^qboolean FS_IsExt(const char *filename, const char *ext, int namelen)$/;"	f
FS_ListFiles	src/qcommon/files.c	/^char **FS_ListFiles( const char *path, const char *extension, int *numfiles ) {$/;"	f
FS_ListFiles	src/renderercommon/tr_public.h	/^	char **	(*FS_ListFiles)( const char *name, const char *extension, int *numfilesfound );$/;"	m	struct:__anon109
FS_ListFilteredFiles	src/qcommon/files.c	/^char **FS_ListFilteredFiles( const char *path, const char *extension, char *filter, int *numfiles, qboolean allowNonPureFilesOnDisk ) {$/;"	f
FS_LoadStack	src/qcommon/files.c	/^int FS_LoadStack( void )$/;"	f
FS_LoadZipFile	src/qcommon/files.c	/^static pack_t *FS_LoadZipFile(const char *zipfile, const char *basename)$/;"	f	file:
FS_LoadedPakChecksums	src/qcommon/files.c	/^const char *FS_LoadedPakChecksums( qboolean alternate )$/;"	f
FS_LoadedPakNames	src/qcommon/files.c	/^const char *FS_LoadedPakNames( qboolean alternate )$/;"	f
FS_LoadedPakPureChecksums	src/qcommon/files.c	/^const char *FS_LoadedPakPureChecksums( qboolean alternate ) {$/;"	f
FS_NewDir_f	src/qcommon/files.c	/^void FS_NewDir_f( void ) {$/;"	f
FS_PakIsPure	src/qcommon/files.c	/^qboolean FS_PakIsPure( pack_t *pack ) {$/;"	f
FS_PathCmp	src/qcommon/files.c	/^int FS_PathCmp( const char *s1, const char *s2 ) {$/;"	f
FS_Path_f	src/qcommon/files.c	/^void FS_Path_f( void ) {$/;"	f
FS_Printf	src/qcommon/files.c	/^void QDECL FS_Printf( fileHandle_t h, const char *fmt, ... ) {$/;"	f
FS_PureServerSetLoadedPaks	src/qcommon/files.c	/^void FS_PureServerSetLoadedPaks( const char *pakSums, const char *pakNames ) {$/;"	f
FS_PureServerSetReferencedPaks	src/qcommon/files.c	/^void FS_PureServerSetReferencedPaks( const char *pakSums, const char *pakNames ) {$/;"	f
FS_READ	src/qcommon/q_shared.h	/^	FS_READ,$/;"	e	enum:__anon464
FS_Read	src/qcommon/files.c	/^int FS_Read( void *buffer, int len, fileHandle_t f ) {$/;"	f
FS_Read2	src/qcommon/files.c	/^int FS_Read2( void *buffer, int len, fileHandle_t f ) {$/;"	f
FS_ReadFile	src/qcommon/files.c	/^long FS_ReadFile(const char *qpath, void **buffer)$/;"	f
FS_ReadFile	src/renderercommon/tr_public.h	/^	long		(*FS_ReadFile)( const char *name, void **buf );$/;"	m	struct:__anon109
FS_ReadFileDir	src/qcommon/files.c	/^long FS_ReadFileDir(const char *qpath, void *searchPath, qboolean unpure, void **buffer)$/;"	f
FS_ReferencedPakChecksums	src/qcommon/files.c	/^const char *FS_ReferencedPakChecksums( qboolean alternate ) {$/;"	f
FS_ReferencedPakNames	src/qcommon/files.c	/^const char *FS_ReferencedPakNames( qboolean alternate ) {$/;"	f
FS_ReferencedPakPureChecksums	src/qcommon/files.c	/^const char *FS_ReferencedPakPureChecksums( void ) {$/;"	f
FS_Remove	src/qcommon/files.c	/^void FS_Remove( const char *osPath ) {$/;"	f
FS_Rename	src/qcommon/files.c	/^void FS_Rename( const char *from, const char *to ) {$/;"	f
FS_ReorderPurePaks	src/qcommon/files.c	/^static void FS_ReorderPurePaks( void )$/;"	f	file:
FS_ReplaceSeparators	src/qcommon/files.c	/^static void FS_ReplaceSeparators( char *path ) {$/;"	f	file:
FS_Restart	src/qcommon/files.c	/^void FS_Restart( int checksumFeed ) {$/;"	f
FS_ReturnPath	src/qcommon/files.c	/^static int FS_ReturnPath( const char *zname, char *zpath, int *depth ) {$/;"	f	file:
FS_SEEK_CUR	src/qcommon/q_shared.h	/^	FS_SEEK_CUR,$/;"	e	enum:__anon465
FS_SEEK_END	src/qcommon/q_shared.h	/^	FS_SEEK_END,$/;"	e	enum:__anon465
FS_SEEK_SET	src/qcommon/q_shared.h	/^	FS_SEEK_SET$/;"	e	enum:__anon465
FS_SV_FOpenFileRead	src/qcommon/files.c	/^long FS_SV_FOpenFileRead(const char *filename, fileHandle_t *fp)$/;"	f
FS_SV_FOpenFileWrite	src/qcommon/files.c	/^fileHandle_t FS_SV_FOpenFileWrite( const char *filename ) {$/;"	f
FS_SV_FileExists	src/qcommon/files.c	/^qboolean FS_SV_FileExists( const char *file )$/;"	f
FS_SV_Rename	src/qcommon/files.c	/^void FS_SV_Rename( const char *from, const char *to, qboolean safe ) {$/;"	f
FS_Seek	src/qcommon/files.c	/^int FS_Seek( fileHandle_t f, long offset, int origin ) {$/;"	f
FS_Shutdown	src/qcommon/files.c	/^void FS_Shutdown( qboolean closemfp ) {$/;"	f
FS_SortFileList	src/qcommon/files.c	/^void FS_SortFileList(char **filelist, int numfiles) {$/;"	f
FS_Startup	src/qcommon/files.c	/^static void FS_Startup( const char *gameName )$/;"	f	file:
FS_TouchFile_f	src/qcommon/files.c	/^void FS_TouchFile_f( void ) {$/;"	f
FS_UI_REF	src/qcommon/qcommon.h	587;"	d
FS_WRITE	src/qcommon/q_shared.h	/^	FS_WRITE,$/;"	e	enum:__anon464
FS_Which	src/qcommon/files.c	/^qboolean FS_Which(const char *filename, void *searchPath)$/;"	f
FS_Which_f	src/qcommon/files.c	/^void FS_Which_f( void ) {$/;"	f
FS_Write	src/qcommon/files.c	/^int FS_Write( const void *buffer, int len, fileHandle_t h ) {$/;"	f
FS_WriteFile	src/qcommon/files.c	/^void FS_WriteFile( const char *qpath, const void *buffer, int size ) {$/;"	f
FS_WriteFile	src/renderercommon/tr_public.h	/^	void	(*FS_WriteFile)( const char *qpath, const void *buffer, int size );$/;"	m	struct:__anon109
FS_filelength	src/qcommon/files.c	/^long FS_filelength(fileHandle_t f)$/;"	f
FS_fplength	src/qcommon/files.c	/^long FS_fplength(FILE *h)$/;"	f
FTOL_PTR	src/qcommon/vm_x86.c	70;"	d	file:
FTS3_AUX_SCHEMA	src/server/sqlite3.c	144410;"	d	file:
FTS3_DOCID_SEARCH	src/server/sqlite3.c	138446;"	d	file:
FTS3_EVAL_FILTER	src/server/sqlite3.c	138426;"	d	file:
FTS3_EVAL_MATCHINFO	src/server/sqlite3.c	138428;"	d	file:
FTS3_EVAL_NEXT	src/server/sqlite3.c	138427;"	d	file:
FTS3_FULLSCAN_SEARCH	src/server/sqlite3.c	138445;"	d	file:
FTS3_FULLTEXT_SEARCH	src/server/sqlite3.c	138447;"	d	file:
FTS3_HASH_BINARY	src/server/sqlite3.c	138105;"	d	file:
FTS3_HASH_STRING	src/server/sqlite3.c	138104;"	d	file:
FTS3_HAVE_DOCID_GE	src/server/sqlite3.c	138456;"	d	file:
FTS3_HAVE_DOCID_LE	src/server/sqlite3.c	138457;"	d	file:
FTS3_HAVE_LANGID	src/server/sqlite3.c	138455;"	d	file:
FTS3_MATCHINFO_AVGLENGTH	src/server/sqlite3.c	154193;"	d	file:
FTS3_MATCHINFO_DEFAULT	src/server/sqlite3.c	154203;"	d	file:
FTS3_MATCHINFO_HITS	src/server/sqlite3.c	154196;"	d	file:
FTS3_MATCHINFO_LCS	src/server/sqlite3.c	154195;"	d	file:
FTS3_MATCHINFO_LENGTH	src/server/sqlite3.c	154194;"	d	file:
FTS3_MATCHINFO_LHITS	src/server/sqlite3.c	154197;"	d	file:
FTS3_MATCHINFO_LHITS_BM	src/server/sqlite3.c	154198;"	d	file:
FTS3_MATCHINFO_NCOL	src/server/sqlite3.c	154191;"	d	file:
FTS3_MATCHINFO_NDOC	src/server/sqlite3.c	154192;"	d	file:
FTS3_MATCHINFO_NPHRASE	src/server/sqlite3.c	154190;"	d	file:
FTS3_MAX_PENDING_DATA	src/server/sqlite3.c	138180;"	d	file:
FTS3_MERGE_COUNT	src/server/sqlite3.c	138170;"	d	file:
FTS3_NODE_CHUNKSIZE	src/server/sqlite3.c	148548;"	d	file:
FTS3_NODE_CHUNKSIZE	src/server/sqlite3.c	148551;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	src/server/sqlite3.c	148549;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	src/server/sqlite3.c	148552;"	d	file:
FTS3_NODE_PADDING	src/server/sqlite3.c	148526;"	d	file:
FTS3_SEGCURSOR_ALL	src/server/sqlite3.c	138601;"	d	file:
FTS3_SEGCURSOR_PENDING	src/server/sqlite3.c	138600;"	d	file:
FTS3_SEGDIR_MAXLEVEL	src/server/sqlite3.c	138218;"	d	file:
FTS3_SEGDIR_MAXLEVEL_STR	src/server/sqlite3.c	138219;"	d	file:
FTS3_SEGMENT_COLUMN_FILTER	src/server/sqlite3.c	138613;"	d	file:
FTS3_SEGMENT_FIRST	src/server/sqlite3.c	138616;"	d	file:
FTS3_SEGMENT_IGNORE_EMPTY	src/server/sqlite3.c	138612;"	d	file:
FTS3_SEGMENT_PREFIX	src/server/sqlite3.c	138614;"	d	file:
FTS3_SEGMENT_REQUIRE_POS	src/server/sqlite3.c	138611;"	d	file:
FTS3_SEGMENT_SCAN	src/server/sqlite3.c	138615;"	d	file:
FTS3_TOK_SCHEMA	src/server/sqlite3.c	148175;"	d	file:
FTS3_VARINT_MAX	src/server/sqlite3.c	138201;"	d	file:
FTS4AUX_EQ_CONSTRAINT	src/server/sqlite3.c	144503;"	d	file:
FTS4AUX_GE_CONSTRAINT	src/server/sqlite3.c	144504;"	d	file:
FTS4AUX_LE_CONSTRAINT	src/server/sqlite3.c	144505;"	d	file:
FTS5CSR_EOF	src/server/sqlite3.c	183066;"	d	file:
FTS5CSR_FREE_ZRANK	src/server/sqlite3.c	183070;"	d	file:
FTS5CSR_REQUIRE_CONTENT	src/server/sqlite3.c	183067;"	d	file:
FTS5CSR_REQUIRE_DOCSIZE	src/server/sqlite3.c	183068;"	d	file:
FTS5CSR_REQUIRE_INST	src/server/sqlite3.c	183069;"	d	file:
FTS5CSR_REQUIRE_POSLIST	src/server/sqlite3.c	183072;"	d	file:
FTS5CSR_REQUIRE_RESEEK	src/server/sqlite3.c	183071;"	d	file:
FTS5INDEX_QUERY_DESC	src/server/sqlite3.c	169595;"	d	file:
FTS5INDEX_QUERY_NOOUTPUT	src/server/sqlite3.c	169603;"	d	file:
FTS5INDEX_QUERY_PREFIX	src/server/sqlite3.c	169594;"	d	file:
FTS5INDEX_QUERY_SCAN	src/server/sqlite3.c	169597;"	d	file:
FTS5INDEX_QUERY_SKIPEMPTY	src/server/sqlite3.c	169602;"	d	file:
FTS5INDEX_QUERY_TEST_NOIDX	src/server/sqlite3.c	169596;"	d	file:
FTS5TOKEN	src/server/sqlite3.c	171057;"	d	file:
FTS5_AND	src/server/sqlite3.c	170039;"	d	file:
FTS5_AVERAGES_ROWID	src/server/sqlite3.c	176594;"	d	file:
FTS5_BEGIN	src/server/sqlite3.c	183093;"	d	file:
FTS5_BI_MATCH	src/server/sqlite3.c	183053;"	d	file:
FTS5_BI_ORDER_DESC	src/server/sqlite3.c	183061;"	d	file:
FTS5_BI_ORDER_RANK	src/server/sqlite3.c	183059;"	d	file:
FTS5_BI_ORDER_ROWID	src/server/sqlite3.c	183060;"	d	file:
FTS5_BI_RANK	src/server/sqlite3.c	183054;"	d	file:
FTS5_BI_ROWID_EQ	src/server/sqlite3.c	183055;"	d	file:
FTS5_BI_ROWID_GE	src/server/sqlite3.c	183057;"	d	file:
FTS5_BI_ROWID_LE	src/server/sqlite3.c	183056;"	d	file:
FTS5_COLON	src/server/sqlite3.c	170042;"	d	file:
FTS5_COMMA	src/server/sqlite3.c	170048;"	d	file:
FTS5_COMMIT	src/server/sqlite3.c	183095;"	d	file:
FTS5_CONTENT_EXTERNAL	src/server/sqlite3.c	169444;"	d	file:
FTS5_CONTENT_NONE	src/server/sqlite3.c	169443;"	d	file:
FTS5_CONTENT_NORMAL	src/server/sqlite3.c	169442;"	d	file:
FTS5_CORRUPT	src/server/sqlite3.c	169317;"	d	file:
FTS5_CORRUPT	src/server/sqlite3.c	169320;"	d	file:
FTS5_CURRENT_VERSION	src/server/sqlite3.c	169440;"	d	file:
FTS5_DATA_DLI_B	src/server/sqlite3.c	176609;"	d	file:
FTS5_DATA_HEIGHT_B	src/server/sqlite3.c	176610;"	d	file:
FTS5_DATA_ID_B	src/server/sqlite3.c	176608;"	d	file:
FTS5_DATA_PADDING	src/server/sqlite3.c	176639;"	d	file:
FTS5_DATA_PAGE_B	src/server/sqlite3.c	176611;"	d	file:
FTS5_DATA_ZERO_PADDING	src/server/sqlite3.c	176638;"	d	file:
FTS5_DEFAULT_AUTOMERGE	src/server/sqlite3.c	172253;"	d	file:
FTS5_DEFAULT_CRISISMERGE	src/server/sqlite3.c	172255;"	d	file:
FTS5_DEFAULT_HASHSIZE	src/server/sqlite3.c	172256;"	d	file:
FTS5_DEFAULT_NEARDIST	src/server/sqlite3.c	169309;"	d	file:
FTS5_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	172252;"	d	file:
FTS5_DEFAULT_RANK	src/server/sqlite3.c	169310;"	d	file:
FTS5_DEFAULT_USERMERGE	src/server/sqlite3.c	172254;"	d	file:
FTS5_DETAIL_COLUMNS	src/server/sqlite3.c	169448;"	d	file:
FTS5_DETAIL_FULL	src/server/sqlite3.c	169446;"	d	file:
FTS5_DETAIL_NONE	src/server/sqlite3.c	169447;"	d	file:
FTS5_DLIDX_ROWID	src/server/sqlite3.c	176621;"	d	file:
FTS5_EOF	src/server/sqlite3.c	173218;"	d	file:
FTS5_HASHENTRYSIZE	src/server/sqlite3.c	175930;"	d	file:
FTS5_LARGEST_INT64	src/server/sqlite3.c	173220;"	d	file:
FTS5_LCP	src/server/sqlite3.c	170045;"	d	file:
FTS5_LOOKAHEAD_EOF	src/server/sqlite3.c	173691;"	d	file:
FTS5_LP	src/server/sqlite3.c	170043;"	d	file:
FTS5_MAIN_PREFIX	src/server/sqlite3.c	176432;"	d	file:
FTS5_MAX_PAGE_SIZE	src/server/sqlite3.c	172259;"	d	file:
FTS5_MAX_PREFIX_INDEXES	src/server/sqlite3.c	169307;"	d	file:
FTS5_MAX_SEGMENT	src/server/sqlite3.c	176626;"	d	file:
FTS5_MAX_TOKEN_SIZE	src/server/sqlite3.c	169300;"	d	file:
FTS5_MIN_DLIDX_SIZE	src/server/sqlite3.c	176430;"	d	file:
FTS5_NOINLINE	src/server/sqlite3.c	188592;"	d	file:
FTS5_NOINLINE	src/server/sqlite3.c	188594;"	d	file:
FTS5_NOT	src/server/sqlite3.c	170040;"	d	file:
FTS5_OPT_WORK_UNIT	src/server/sqlite3.c	176427;"	d	file:
FTS5_OR	src/server/sqlite3.c	170038;"	d	file:
FTS5_PLAN_MATCH	src/server/sqlite3.c	183289;"	d	file:
FTS5_PLAN_ROWID	src/server/sqlite3.c	183294;"	d	file:
FTS5_PLAN_SCAN	src/server/sqlite3.c	183293;"	d	file:
FTS5_PLAN_SORTED_MATCH	src/server/sqlite3.c	183292;"	d	file:
FTS5_PLAN_SOURCE	src/server/sqlite3.c	183290;"	d	file:
FTS5_PLAN_SPECIAL	src/server/sqlite3.c	183291;"	d	file:
FTS5_PLUS	src/server/sqlite3.c	170049;"	d	file:
FTS5_PORTER_MAX_TOKEN	src/server/sqlite3.c	187208;"	d	file:
FTS5_POS2COLUMN	src/server/sqlite3.c	169521;"	d	file:
FTS5_POS2OFFSET	src/server/sqlite3.c	169522;"	d	file:
FTS5_RANK_NAME	src/server/sqlite3.c	169313;"	d	file:
FTS5_RCP	src/server/sqlite3.c	170046;"	d	file:
FTS5_RELEASE	src/server/sqlite3.c	183098;"	d	file:
FTS5_ROLLBACK	src/server/sqlite3.c	183096;"	d	file:
FTS5_ROLLBACKTO	src/server/sqlite3.c	183099;"	d	file:
FTS5_ROWID_NAME	src/server/sqlite3.c	169314;"	d	file:
FTS5_RP	src/server/sqlite3.c	170044;"	d	file:
FTS5_SAVEPOINT	src/server/sqlite3.c	183097;"	d	file:
FTS5_SEGITER_ONETERM	src/server/sqlite3.c	176855;"	d	file:
FTS5_SEGITER_REVERSE	src/server/sqlite3.c	176856;"	d	file:
FTS5_SEGMENT_ROWID	src/server/sqlite3.c	176620;"	d	file:
FTS5_STAR	src/server/sqlite3.c	170050;"	d	file:
FTS5_STMT_DELETE_CONTENT	src/server/sqlite3.c	185617;"	d	file:
FTS5_STMT_DELETE_DOCSIZE	src/server/sqlite3.c	185619;"	d	file:
FTS5_STMT_INSERT_CONTENT	src/server/sqlite3.c	185615;"	d	file:
FTS5_STMT_LOOKUP	src/server/sqlite3.c	169842;"	d	file:
FTS5_STMT_LOOKUP_DOCSIZE	src/server/sqlite3.c	185620;"	d	file:
FTS5_STMT_REPLACE_CONFIG	src/server/sqlite3.c	185621;"	d	file:
FTS5_STMT_REPLACE_CONTENT	src/server/sqlite3.c	185616;"	d	file:
FTS5_STMT_REPLACE_DOCSIZE	src/server/sqlite3.c	185618;"	d	file:
FTS5_STMT_SCAN	src/server/sqlite3.c	185622;"	d	file:
FTS5_STMT_SCAN_ASC	src/server/sqlite3.c	169840;"	d	file:
FTS5_STMT_SCAN_DESC	src/server/sqlite3.c	169841;"	d	file:
FTS5_STRING	src/server/sqlite3.c	170047;"	d	file:
FTS5_STRUCTURE_ROWID	src/server/sqlite3.c	176595;"	d	file:
FTS5_SYNC	src/server/sqlite3.c	183094;"	d	file:
FTS5_TERM	src/server/sqlite3.c	170041;"	d	file:
FTS5_TOKENIZE_AUX	src/server/sqlite3.c	169193;"	d	file:
FTS5_TOKENIZE_AUX	src/server/sqlite3.c	8904;"	d	file:
FTS5_TOKENIZE_AUX	src/server/sqlite3.h	8679;"	d
FTS5_TOKENIZE_DOCUMENT	src/server/sqlite3.c	169192;"	d	file:
FTS5_TOKENIZE_DOCUMENT	src/server/sqlite3.c	8903;"	d	file:
FTS5_TOKENIZE_DOCUMENT	src/server/sqlite3.h	8678;"	d
FTS5_TOKENIZE_PREFIX	src/server/sqlite3.c	169191;"	d	file:
FTS5_TOKENIZE_PREFIX	src/server/sqlite3.c	8902;"	d	file:
FTS5_TOKENIZE_PREFIX	src/server/sqlite3.h	8677;"	d
FTS5_TOKENIZE_QUERY	src/server/sqlite3.c	169190;"	d	file:
FTS5_TOKENIZE_QUERY	src/server/sqlite3.c	8901;"	d	file:
FTS5_TOKENIZE_QUERY	src/server/sqlite3.h	8676;"	d
FTS5_TOKEN_COLOCATED	src/server/sqlite3.c	169197;"	d	file:
FTS5_TOKEN_COLOCATED	src/server/sqlite3.c	8908;"	d	file:
FTS5_TOKEN_COLOCATED	src/server/sqlite3.h	8683;"	d
FTS5_VOCAB_COL	src/server/sqlite3.c	188729;"	d	file:
FTS5_VOCAB_COL_SCHEMA	src/server/sqlite3.c	188732;"	d	file:
FTS5_VOCAB_ROW	src/server/sqlite3.c	188730;"	d	file:
FTS5_VOCAB_ROW_SCHEMA	src/server/sqlite3.c	188733;"	d	file:
FTS5_VOCAB_TERM_EQ	src/server/sqlite3.c	188738;"	d	file:
FTS5_VOCAB_TERM_GE	src/server/sqlite3.c	188739;"	d	file:
FTS5_VOCAB_TERM_LE	src/server/sqlite3.c	188740;"	d	file:
FTS5_WORK_UNIT	src/server/sqlite3.c	176428;"	d	file:
FTSQUERY_AND	src/server/sqlite3.c	138561;"	d	file:
FTSQUERY_NEAR	src/server/sqlite3.c	138559;"	d	file:
FTSQUERY_NOT	src/server/sqlite3.c	138560;"	d	file:
FTSQUERY_OR	src/server/sqlite3.c	138562;"	d	file:
FTSQUERY_PHRASE	src/server/sqlite3.c	138563;"	d	file:
FTS_CORRUPT_VTAB	src/server/sqlite3.c	138294;"	d	file:
FTS_CORRUPT_VTAB	src/server/sqlite3.c	138296;"	d	file:
FTS_MAX_APPENDABLE_HEIGHT	src/server/sqlite3.c	148514;"	d	file:
FTS_STAT_AUTOINCRMERGE	src/server/sqlite3.c	148561;"	d	file:
FTS_STAT_DOCTOTAL	src/server/sqlite3.c	148559;"	d	file:
FTS_STAT_INCRMERGEHINT	src/server/sqlite3.c	148560;"	d	file:
FULL	src/ui/ui_shared.c	482;"	d	file:
FULL	src/ui/ui_shared.c	664;"	d	file:
FULLBINEXT	GNUmakefile	/^  FULLBINEXT=$(BINEXT)$/;"	m
FULLY_WITHIN	src/server/sqlite3.c	8372;"	d	file:
FULLY_WITHIN	src/server/sqlite3.h	8147;"	d
FUNC	src/tools/lcc/src/c.h	/^enum { PERM=0, FUNC, STMT };$/;"	e	enum:__anon289
FUNCTABLE_MASK	src/renderergl1/tr_local.h	811;"	d
FUNCTABLE_MASK	src/renderergl2/tr_local.h	1345;"	d
FUNCTABLE_SIZE	src/renderergl1/tr_local.h	809;"	d
FUNCTABLE_SIZE	src/renderergl2/tr_local.h	1343;"	d
FUNCTABLE_SIZE2	src/renderergl1/tr_local.h	810;"	d
FUNCTABLE_SIZE2	src/renderergl2/tr_local.h	1344;"	d
FUNCTION	src/server/sqlite3.c	12465;"	d	file:
FUNCTION2	src/server/sqlite3.c	12474;"	d	file:
FUNC_PERFECT_MATCH	src/server/sqlite3.c	99147;"	d	file:
F_ANGLEHACK	src/game/g_spawn.c	/^  F_ANGLEHACK$/;"	e	enum:__anon366	file:
F_FLOAT	src/game/g_spawn.c	/^  F_FLOAT,$/;"	e	enum:__anon366	file:
F_INT	src/game/g_spawn.c	/^  F_INT,$/;"	e	enum:__anon366	file:
F_STRING	src/game/g_spawn.c	/^  F_STRING,$/;"	e	enum:__anon366	file:
F_VECTOR	src/game/g_spawn.c	/^  F_VECTOR,$/;"	e	enum:__anon366	file:
F_VECTOR4	src/game/g_spawn.c	/^  F_VECTOR4,$/;"	e	enum:__anon366	file:
F_VEL	src/game/g_client.c	1466;"	d	file:
Fade	src/ui/ui_shared.c	/^void Fade( int *flags, float *f, float clamp, int *nextTime, int offsetTime, qboolean bFlags, float fadeAmount )$/;"	f
FatLightmap	src/renderergl2/tr_bsp.c	/^static int FatLightmap(int lightmapnum)$/;"	f	file:
FatPackU	src/renderergl2/tr_bsp.c	/^static float FatPackU(float input, int lightmapnum)$/;"	f	file:
FatPackV	src/renderergl2/tr_bsp.c	/^static float FatPackV(float input, int lightmapnum)$/;"	f	file:
Field	src/tools/lcc/src/c.h	/^typedef struct field *Field;$/;"	t	typeref:struct:field
Field_AutoComplete	src/qcommon/common.c	/^void Field_AutoComplete( field_t *field )$/;"	f
Field_BigDraw	src/client/cl_keys.c	/^void Field_BigDraw( field_t *edit, int x, int y, int width, qboolean showCursor, qboolean noColorEscape ) $/;"	f
Field_CharEvent	src/client/cl_keys.c	/^void Field_CharEvent( field_t *edit, int ch ) {$/;"	f
Field_Clear	src/qcommon/common.c	/^void Field_Clear( field_t *edit ) {$/;"	f
Field_Complete	src/qcommon/common.c	/^static qboolean Field_Complete( void )$/;"	f	file:
Field_CompleteCommand	src/qcommon/common.c	/^void Field_CompleteCommand( char *cmd,$/;"	f
Field_CompleteFilename	src/qcommon/common.c	/^void Field_CompleteFilename( const char *dir,$/;"	f
Field_CompleteKeyname	src/qcommon/common.c	/^void Field_CompleteKeyname( void )$/;"	f
Field_Draw	src/client/cl_keys.c	/^void Field_Draw( field_t *edit, int x, int y, int width, qboolean showCursor, qboolean noColorEscape ) $/;"	f
Field_FindFirstSeparator	src/qcommon/common.c	/^static char *Field_FindFirstSeparator( char *s )$/;"	f	file:
Field_KeyDownEvent	src/client/cl_keys.c	/^void Field_KeyDownEvent( field_t *edit, int key ) {$/;"	f
Field_Paste	src/client/cl_keys.c	/^void Field_Paste( field_t *edit ) {$/;"	f
Field_VariableSizeDraw	src/client/cl_keys.c	/^void Field_VariableSizeDraw( field_t *edit, int x, int y, int width, int size, qboolean showCursor,$/;"	f
FileChunk	src/server/sqlite3.c	/^struct FileChunk {$/;"	s	file:
FileChunk	src/server/sqlite3.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FileExists	src/tools/asm/cmdlib.c	/^qboolean	FileExists (const char *filename)$/;"	f
FilePoint	src/server/sqlite3.c	/^struct FilePoint {$/;"	s	file:
FilePoint	src/server/sqlite3.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FileTime	src/tools/asm/cmdlib.c	/^int	FileTime (const char *path)$/;"	f
FillCloudBox	src/renderergl1/tr_sky.c	/^static void FillCloudBox( const shader_t *shader, int stage )$/;"	f	file:
FillCloudBox	src/renderergl2/tr_sky.c	/^static void FillCloudBox( const shader_t *shader, int stage )$/;"	f	file:
FillCloudySkySide	src/renderergl1/tr_sky.c	/^static void FillCloudySkySide( const int mins[2], const int maxs[2], qboolean addIndexes )$/;"	f	file:
FillCloudySkySide	src/renderergl2/tr_sky.c	/^static void FillCloudySkySide( const int mins[2], const int maxs[2], qboolean addIndexes )$/;"	f	file:
FillInNormalizedZ	src/renderergl2/tr_image.c	/^static void FillInNormalizedZ(const byte *in, byte *out, int width, int height)$/;"	f	file:
FilterMethod	src/renderercommon/tr_image_png.c	/^	uint8_t  FilterMethod;$/;"	m	struct:PNG_Chunk_IHDR	file:
FindChunk	src/renderercommon/tr_image_png.c	/^static qboolean FindChunk(struct BufferedFile *BF, uint32_t ChunkType)$/;"	f	file:
FindIntermissionPoint	src/game/g_main.c	/^void FindIntermissionPoint( void )$/;"	f
FindMatches	src/qcommon/common.c	/^static void FindMatches( const char *s ) {$/;"	f	file:
FindShaderInShaderText	src/renderergl1/tr_shader.c	/^static char *FindShaderInShaderText( const char *shadername ) {$/;"	f	file:
FindShaderInShaderText	src/renderergl2/tr_shader.c	/^static char *FindShaderInShaderText( const char *shadername ) {$/;"	f	file:
FinishShader	src/renderergl1/tr_shader.c	/^static shader_t *FinishShader( void ) {$/;"	f	file:
FinishShader	src/renderergl2/tr_shader.c	/^static shader_t *FinishShader( void ) {$/;"	f	file:
FireWeapon	src/game/g_weapon.c	/^void FireWeapon( gentity_t *ent )$/;"	f
FireWeapon2	src/game/g_weapon.c	/^void FireWeapon2( gentity_t *ent )$/;"	f
FireWeapon3	src/game/g_weapon.c	/^void FireWeapon3( gentity_t *ent )$/;"	f
FixRenderCommandList	src/renderergl1/tr_shader.c	/^static void FixRenderCommandList( int newShader ) {$/;"	f	file:
FixRenderCommandList	src/renderergl2/tr_shader.c	/^static void FixRenderCommandList( int newShader ) {$/;"	f	file:
Flags	src/renderercommon/tr_image_png.c	/^	uint8_t Flags;$/;"	m	struct:PNG_ZlibHeader	file:
FloatAsInt	src/client/cl_cgame.c	/^static int	FloatAsInt( float f ) {$/;"	f	file:
FloatAsInt	src/client/cl_ui.c	/^static int FloatAsInt( float f ) {$/;"	f	file:
FloatAsInt	src/server/sv_game.c	/^static int	FloatAsInt( float f ) {$/;"	f	file:
FloatNoSwap	src/qcommon/q_shared.c	/^float FloatNoSwap (const float *f)$/;"	f
FloatSwap	src/qcommon/q_shared.c	/^float FloatSwap (const float *f) {$/;"	f
FloatSwap	src/tools/asm/cmdlib.c	/^float FloatSwap (const float *f) {$/;"	f
FloatToByte	src/renderergl2/tr_extramath.h	57;"	d
FloatToHalf	src/renderergl2/tr_extramath.c	/^uint16_t FloatToHalf(float in)$/;"	f
FloatToOffsetByte	src/renderergl2/tr_extramath.h	55;"	d
Float_Parse	src/ui/ui_shared.c	/^qboolean Float_Parse( char **p, float *f )$/;"	f
ForwardDlight	src/renderergl2/tr_shade.c	/^static void ForwardDlight( void ) {$/;"	f	file:
Free	src/renderercommon/tr_public.h	/^	void	(*Free)( void *buf );$/;"	m	struct:__anon109
FreeOperator	src/qcommon/parse.c	1899;"	d	file:
FreeValue	src/qcommon/parse.c	1889;"	d	file:
FreeWinding	src/qcommon/cm_polylib.c	/^void FreeWinding (winding_t *w)$/;"	f
Fts3Cursor	src/server/sqlite3.c	/^struct Fts3Cursor {$/;"	s	file:
Fts3Cursor	src/server/sqlite3.c	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor	file:
Fts3DeferredToken	src/server/sqlite3.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3DeferredToken	src/server/sqlite3.c	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken	file:
Fts3Doclist	src/server/sqlite3.c	/^struct Fts3Doclist {$/;"	s	file:
Fts3Doclist	src/server/sqlite3.c	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist	file:
Fts3Expr	src/server/sqlite3.c	/^struct Fts3Expr {$/;"	s	file:
Fts3Expr	src/server/sqlite3.c	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr	file:
Fts3Hash	src/server/sqlite3.c	/^struct Fts3Hash {$/;"	s	file:
Fts3Hash	src/server/sqlite3.c	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash	file:
Fts3HashElem	src/server/sqlite3.c	/^struct Fts3HashElem {$/;"	s	file:
Fts3HashElem	src/server/sqlite3.c	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem	file:
Fts3Index	src/server/sqlite3.c	/^  struct Fts3Index {$/;"	s	struct:Fts3Table	file:
Fts3MultiSegReader	src/server/sqlite3.c	/^struct Fts3MultiSegReader {$/;"	s	file:
Fts3MultiSegReader	src/server/sqlite3.c	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader	file:
Fts3Phrase	src/server/sqlite3.c	/^struct Fts3Phrase {$/;"	s	file:
Fts3Phrase	src/server/sqlite3.c	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase	file:
Fts3PhraseToken	src/server/sqlite3.c	/^struct Fts3PhraseToken {$/;"	s	file:
Fts3PhraseToken	src/server/sqlite3.c	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken	file:
Fts3SegFilter	src/server/sqlite3.c	/^struct Fts3SegFilter {$/;"	s	file:
Fts3SegFilter	src/server/sqlite3.c	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter	file:
Fts3SegReader	src/server/sqlite3.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3SegReader	src/server/sqlite3.c	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader	file:
Fts3Table	src/server/sqlite3.c	/^struct Fts3Table {$/;"	s	file:
Fts3Table	src/server/sqlite3.c	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table	file:
Fts3TokenAndCost	src/server/sqlite3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	src/server/sqlite3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3auxColstats	src/server/sqlite3.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxCursor	src/server/sqlite3.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	src/server/sqlite3.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxTable	src/server/sqlite3.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	src/server/sqlite3.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
Fts3tokCursor	src/server/sqlite3.c	/^struct Fts3tokCursor {$/;"	s	file:
Fts3tokCursor	src/server/sqlite3.c	/^typedef struct Fts3tokCursor Fts3tokCursor;$/;"	t	typeref:struct:Fts3tokCursor	file:
Fts3tokTable	src/server/sqlite3.c	/^struct Fts3tokTable {$/;"	s	file:
Fts3tokTable	src/server/sqlite3.c	/^typedef struct Fts3tokTable Fts3tokTable;$/;"	t	typeref:struct:Fts3tokTable	file:
Fts5Auxdata	src/server/sqlite3.c	/^struct Fts5Auxdata {$/;"	s	file:
Fts5Auxdata	src/server/sqlite3.c	/^typedef struct Fts5Auxdata Fts5Auxdata;$/;"	t	typeref:struct:Fts5Auxdata	file:
Fts5Auxiliary	src/server/sqlite3.c	/^struct Fts5Auxiliary {$/;"	s	file:
Fts5Auxiliary	src/server/sqlite3.c	/^typedef struct Fts5Auxiliary Fts5Auxiliary;$/;"	t	typeref:struct:Fts5Auxiliary	file:
Fts5Bm25Data	src/server/sqlite3.c	/^struct Fts5Bm25Data {$/;"	s	file:
Fts5Bm25Data	src/server/sqlite3.c	/^typedef struct Fts5Bm25Data Fts5Bm25Data;$/;"	t	typeref:struct:Fts5Bm25Data	file:
Fts5Buffer	src/server/sqlite3.c	/^struct Fts5Buffer {$/;"	s	file:
Fts5Buffer	src/server/sqlite3.c	/^typedef struct Fts5Buffer Fts5Buffer;$/;"	t	typeref:struct:Fts5Buffer	file:
Fts5CResult	src/server/sqlite3.c	/^struct Fts5CResult {$/;"	s	file:
Fts5CResult	src/server/sqlite3.c	/^typedef struct Fts5CResult Fts5CResult;$/;"	t	typeref:struct:Fts5CResult	file:
Fts5Colset	src/server/sqlite3.c	/^struct Fts5Colset {$/;"	s	file:
Fts5Colset	src/server/sqlite3.c	/^typedef struct Fts5Colset Fts5Colset;$/;"	t	typeref:struct:Fts5Colset	file:
Fts5Config	src/server/sqlite3.c	/^struct Fts5Config {$/;"	s	file:
Fts5Config	src/server/sqlite3.c	/^typedef struct Fts5Config Fts5Config;$/;"	t	typeref:struct:Fts5Config	file:
Fts5Context	src/server/sqlite3.c	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context	file:
Fts5Context	src/server/sqlite3.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Cursor	src/server/sqlite3.c	/^struct Fts5Cursor {$/;"	s	file:
Fts5Cursor	src/server/sqlite3.c	/^typedef struct Fts5Cursor Fts5Cursor;$/;"	t	typeref:struct:Fts5Cursor	file:
Fts5Data	src/server/sqlite3.c	/^struct Fts5Data {$/;"	s	file:
Fts5Data	src/server/sqlite3.c	/^typedef struct Fts5Data Fts5Data;$/;"	t	typeref:struct:Fts5Data	file:
Fts5DlidxIter	src/server/sqlite3.c	/^struct Fts5DlidxIter {$/;"	s	file:
Fts5DlidxIter	src/server/sqlite3.c	/^typedef struct Fts5DlidxIter Fts5DlidxIter;$/;"	t	typeref:struct:Fts5DlidxIter	file:
Fts5DlidxLvl	src/server/sqlite3.c	/^struct Fts5DlidxLvl {$/;"	s	file:
Fts5DlidxLvl	src/server/sqlite3.c	/^typedef struct Fts5DlidxLvl Fts5DlidxLvl;$/;"	t	typeref:struct:Fts5DlidxLvl	file:
Fts5DlidxWriter	src/server/sqlite3.c	/^struct Fts5DlidxWriter {$/;"	s	file:
Fts5DlidxWriter	src/server/sqlite3.c	/^typedef struct Fts5DlidxWriter Fts5DlidxWriter;$/;"	t	typeref:struct:Fts5DlidxWriter	file:
Fts5DoclistIter	src/server/sqlite3.c	/^struct Fts5DoclistIter {$/;"	s	file:
Fts5DoclistIter	src/server/sqlite3.c	/^typedef struct Fts5DoclistIter Fts5DoclistIter;$/;"	t	typeref:struct:Fts5DoclistIter	file:
Fts5Enum	src/server/sqlite3.c	/^struct Fts5Enum {$/;"	s	file:
Fts5Enum	src/server/sqlite3.c	/^typedef struct Fts5Enum Fts5Enum;$/;"	t	typeref:struct:Fts5Enum	file:
Fts5Expr	src/server/sqlite3.c	/^struct Fts5Expr {$/;"	s	file:
Fts5Expr	src/server/sqlite3.c	/^typedef struct Fts5Expr Fts5Expr;$/;"	t	typeref:struct:Fts5Expr	file:
Fts5ExprCtx	src/server/sqlite3.c	/^struct Fts5ExprCtx {$/;"	s	file:
Fts5ExprCtx	src/server/sqlite3.c	/^typedef struct Fts5ExprCtx Fts5ExprCtx;$/;"	t	typeref:struct:Fts5ExprCtx	file:
Fts5ExprNearset	src/server/sqlite3.c	/^struct Fts5ExprNearset {$/;"	s	file:
Fts5ExprNearset	src/server/sqlite3.c	/^typedef struct Fts5ExprNearset Fts5ExprNearset;$/;"	t	typeref:struct:Fts5ExprNearset	file:
Fts5ExprNode	src/server/sqlite3.c	/^struct Fts5ExprNode {$/;"	s	file:
Fts5ExprNode	src/server/sqlite3.c	/^typedef struct Fts5ExprNode Fts5ExprNode;$/;"	t	typeref:struct:Fts5ExprNode	file:
Fts5ExprPhrase	src/server/sqlite3.c	/^struct Fts5ExprPhrase {$/;"	s	file:
Fts5ExprPhrase	src/server/sqlite3.c	/^typedef struct Fts5ExprPhrase Fts5ExprPhrase;$/;"	t	typeref:struct:Fts5ExprPhrase	file:
Fts5ExprTerm	src/server/sqlite3.c	/^struct Fts5ExprTerm {$/;"	s	file:
Fts5ExprTerm	src/server/sqlite3.c	/^typedef struct Fts5ExprTerm Fts5ExprTerm;$/;"	t	typeref:struct:Fts5ExprTerm	file:
Fts5ExtensionApi	src/server/sqlite3.c	/^struct Fts5ExtensionApi {$/;"	s	file:
Fts5ExtensionApi	src/server/sqlite3.c	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi	file:
Fts5ExtensionApi	src/server/sqlite3.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	src/server/sqlite3.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5FlushCtx	src/server/sqlite3.c	/^struct Fts5FlushCtx {$/;"	s	file:
Fts5FlushCtx	src/server/sqlite3.c	/^typedef struct Fts5FlushCtx Fts5FlushCtx;$/;"	t	typeref:struct:Fts5FlushCtx	file:
Fts5Global	src/server/sqlite3.c	/^struct Fts5Global {$/;"	s	file:
Fts5Global	src/server/sqlite3.c	/^typedef struct Fts5Global Fts5Global;$/;"	t	typeref:struct:Fts5Global	file:
Fts5Hash	src/server/sqlite3.c	/^struct Fts5Hash {$/;"	s	file:
Fts5Hash	src/server/sqlite3.c	/^typedef struct Fts5Hash Fts5Hash;$/;"	t	typeref:struct:Fts5Hash	file:
Fts5HashEntry	src/server/sqlite3.c	/^struct Fts5HashEntry {$/;"	s	file:
Fts5HashEntry	src/server/sqlite3.c	/^typedef struct Fts5HashEntry Fts5HashEntry;$/;"	t	typeref:struct:Fts5HashEntry	file:
Fts5Index	src/server/sqlite3.c	/^struct Fts5Index {$/;"	s	file:
Fts5Index	src/server/sqlite3.c	/^typedef struct Fts5Index Fts5Index;$/;"	t	typeref:struct:Fts5Index	file:
Fts5IndexIter	src/server/sqlite3.c	/^struct Fts5IndexIter {$/;"	s	file:
Fts5IndexIter	src/server/sqlite3.c	/^typedef struct Fts5IndexIter Fts5IndexIter;$/;"	t	typeref:struct:Fts5IndexIter	file:
Fts5InsertCtx	src/server/sqlite3.c	/^struct Fts5InsertCtx {$/;"	s	file:
Fts5InsertCtx	src/server/sqlite3.c	/^typedef struct Fts5InsertCtx Fts5InsertCtx;$/;"	t	typeref:struct:Fts5InsertCtx	file:
Fts5IntegrityCtx	src/server/sqlite3.c	/^struct Fts5IntegrityCtx {$/;"	s	file:
Fts5IntegrityCtx	src/server/sqlite3.c	/^typedef struct Fts5IntegrityCtx Fts5IntegrityCtx;$/;"	t	typeref:struct:Fts5IntegrityCtx	file:
Fts5Iter	src/server/sqlite3.c	/^struct Fts5Iter {$/;"	s	file:
Fts5Iter	src/server/sqlite3.c	/^typedef struct Fts5Iter Fts5Iter;$/;"	t	typeref:struct:Fts5Iter	file:
Fts5LookaheadReader	src/server/sqlite3.c	/^struct Fts5LookaheadReader {$/;"	s	file:
Fts5LookaheadReader	src/server/sqlite3.c	/^typedef struct Fts5LookaheadReader Fts5LookaheadReader;$/;"	t	typeref:struct:Fts5LookaheadReader	file:
Fts5MatchPhrase	src/server/sqlite3.c	/^struct Fts5MatchPhrase {$/;"	s	file:
Fts5NearTrimmer	src/server/sqlite3.c	/^struct Fts5NearTrimmer {$/;"	s	file:
Fts5NearTrimmer	src/server/sqlite3.c	/^typedef struct Fts5NearTrimmer Fts5NearTrimmer;$/;"	t	typeref:struct:Fts5NearTrimmer	file:
Fts5NodeIsString	src/server/sqlite3.c	173272;"	d	file:
Fts5PageWriter	src/server/sqlite3.c	/^struct Fts5PageWriter {$/;"	s	file:
Fts5PageWriter	src/server/sqlite3.c	/^typedef struct Fts5PageWriter Fts5PageWriter;$/;"	t	typeref:struct:Fts5PageWriter	file:
Fts5Parse	src/server/sqlite3.c	/^struct Fts5Parse {$/;"	s	file:
Fts5Parse	src/server/sqlite3.c	/^typedef struct Fts5Parse Fts5Parse;$/;"	t	typeref:struct:Fts5Parse	file:
Fts5PhraseIter	src/server/sqlite3.c	/^struct Fts5PhraseIter {$/;"	s	file:
Fts5PhraseIter	src/server/sqlite3.c	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter	file:
Fts5PhraseIter	src/server/sqlite3.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	src/server/sqlite3.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PoslistPopulator	src/server/sqlite3.c	/^struct Fts5PoslistPopulator {$/;"	s	file:
Fts5PoslistPopulator	src/server/sqlite3.c	/^typedef struct Fts5PoslistPopulator Fts5PoslistPopulator;$/;"	t	typeref:struct:Fts5PoslistPopulator	file:
Fts5PoslistReader	src/server/sqlite3.c	/^struct Fts5PoslistReader {$/;"	s	file:
Fts5PoslistReader	src/server/sqlite3.c	/^typedef struct Fts5PoslistReader Fts5PoslistReader;$/;"	t	typeref:struct:Fts5PoslistReader	file:
Fts5PoslistWriter	src/server/sqlite3.c	/^struct Fts5PoslistWriter {$/;"	s	file:
Fts5PoslistWriter	src/server/sqlite3.c	/^typedef struct Fts5PoslistWriter Fts5PoslistWriter;$/;"	t	typeref:struct:Fts5PoslistWriter	file:
Fts5SegIter	src/server/sqlite3.c	/^struct Fts5SegIter {$/;"	s	file:
Fts5SegIter	src/server/sqlite3.c	/^typedef struct Fts5SegIter Fts5SegIter;$/;"	t	typeref:struct:Fts5SegIter	file:
Fts5SegWriter	src/server/sqlite3.c	/^struct Fts5SegWriter {$/;"	s	file:
Fts5SegWriter	src/server/sqlite3.c	/^typedef struct Fts5SegWriter Fts5SegWriter;$/;"	t	typeref:struct:Fts5SegWriter	file:
Fts5Sorter	src/server/sqlite3.c	/^struct Fts5Sorter {$/;"	s	file:
Fts5Sorter	src/server/sqlite3.c	/^typedef struct Fts5Sorter Fts5Sorter;$/;"	t	typeref:struct:Fts5Sorter	file:
Fts5Storage	src/server/sqlite3.c	/^struct Fts5Storage {$/;"	s	file:
Fts5Storage	src/server/sqlite3.c	/^typedef struct Fts5Storage Fts5Storage;$/;"	t	typeref:struct:Fts5Storage	file:
Fts5Structure	src/server/sqlite3.c	/^struct Fts5Structure {$/;"	s	file:
Fts5Structure	src/server/sqlite3.c	/^typedef struct Fts5Structure Fts5Structure;$/;"	t	typeref:struct:Fts5Structure	file:
Fts5StructureLevel	src/server/sqlite3.c	/^struct Fts5StructureLevel {$/;"	s	file:
Fts5StructureLevel	src/server/sqlite3.c	/^typedef struct Fts5StructureLevel Fts5StructureLevel;$/;"	t	typeref:struct:Fts5StructureLevel	file:
Fts5StructureSegment	src/server/sqlite3.c	/^struct Fts5StructureSegment {$/;"	s	file:
Fts5StructureSegment	src/server/sqlite3.c	/^typedef struct Fts5StructureSegment Fts5StructureSegment;$/;"	t	typeref:struct:Fts5StructureSegment	file:
Fts5Table	src/server/sqlite3.c	/^struct Fts5Table {$/;"	s	file:
Fts5Table	src/server/sqlite3.c	/^typedef struct Fts5Table Fts5Table;$/;"	t	typeref:struct:Fts5Table	file:
Fts5Termset	src/server/sqlite3.c	/^struct Fts5Termset {$/;"	s	file:
Fts5Termset	src/server/sqlite3.c	/^typedef struct Fts5Termset Fts5Termset;$/;"	t	typeref:struct:Fts5Termset	file:
Fts5TermsetEntry	src/server/sqlite3.c	/^struct Fts5TermsetEntry {$/;"	s	file:
Fts5TermsetEntry	src/server/sqlite3.c	/^typedef struct Fts5TermsetEntry Fts5TermsetEntry;$/;"	t	typeref:struct:Fts5TermsetEntry	file:
Fts5Token	src/server/sqlite3.c	/^struct Fts5Token {$/;"	s	file:
Fts5Token	src/server/sqlite3.c	/^typedef struct Fts5Token Fts5Token;$/;"	t	typeref:struct:Fts5Token	file:
Fts5Tokenizer	src/server/sqlite3.c	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer	file:
Fts5Tokenizer	src/server/sqlite3.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5TokenizerModule	src/server/sqlite3.c	/^struct Fts5TokenizerModule {$/;"	s	file:
Fts5TokenizerModule	src/server/sqlite3.c	/^typedef struct Fts5TokenizerModule Fts5TokenizerModule;$/;"	t	typeref:struct:Fts5TokenizerModule	file:
Fts5TransactionState	src/server/sqlite3.c	/^struct Fts5TransactionState {$/;"	s	file:
Fts5VocabCursor	src/server/sqlite3.c	/^struct Fts5VocabCursor {$/;"	s	file:
Fts5VocabCursor	src/server/sqlite3.c	/^typedef struct Fts5VocabCursor Fts5VocabCursor;$/;"	t	typeref:struct:Fts5VocabCursor	file:
Fts5VocabTable	src/server/sqlite3.c	/^struct Fts5VocabTable {$/;"	s	file:
Fts5VocabTable	src/server/sqlite3.c	/^typedef struct Fts5VocabTable Fts5VocabTable;$/;"	t	typeref:struct:Fts5VocabTable	file:
FuncDef	src/server/sqlite3.c	/^struct FuncDef {$/;"	s	file:
FuncDef	src/server/sqlite3.c	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef	file:
FuncDefHash	src/server/sqlite3.c	/^struct FuncDefHash {$/;"	s	file:
FuncDefHash	src/server/sqlite3.c	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash	file:
FuncDestructor	src/server/sqlite3.c	/^struct FuncDestructor {$/;"	s	file:
FuncDestructor	src/server/sqlite3.c	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor	file:
G	src/qcommon/md4.c	47;"	d	file:
G0	src/qcommon/vm_sparc.h	5;"	d
G1	src/qcommon/vm_sparc.h	6;"	d
G2	src/qcommon/vm_sparc.h	7;"	d
G3	src/qcommon/vm_sparc.h	8;"	d
G4	src/qcommon/vm_sparc.h	9;"	d
G5	src/qcommon/vm_sparc.h	10;"	d
G6	src/qcommon/vm_sparc.h	11;"	d
G7	src/qcommon/vm_sparc.h	12;"	d
GAMENAME_FOR_MASTER	src/qcommon/q_shared.h	40;"	d
GAME_API_VERSION	src/game/g_public.h	26;"	d
GAME_CLIENT_BEGIN	src/game/g_public.h	/^  GAME_CLIENT_BEGIN,        \/\/ ( int clientNum );$/;"	e	enum:__anon364
GAME_CLIENT_COMMAND	src/game/g_public.h	/^  GAME_CLIENT_COMMAND,      \/\/ ( int clientNum );$/;"	e	enum:__anon364
GAME_CLIENT_CONNECT	src/game/g_public.h	/^  GAME_CLIENT_CONNECT,  \/\/ ( int clientNum, qboolean firstTime );$/;"	e	enum:__anon364
GAME_CLIENT_DISCONNECT	src/game/g_public.h	/^  GAME_CLIENT_DISCONNECT,     \/\/ ( int clientNum );$/;"	e	enum:__anon364
GAME_CLIENT_THINK	src/game/g_public.h	/^  GAME_CLIENT_THINK,        \/\/ ( int clientNum );$/;"	e	enum:__anon364
GAME_CLIENT_USERINFO_CHANGED	src/game/g_public.h	/^  GAME_CLIENT_USERINFO_CHANGED, \/\/ ( int clientNum );$/;"	e	enum:__anon364
GAME_CONSOLE_COMMAND	src/game/g_public.h	/^  GAME_CONSOLE_COMMAND      \/\/ ( void );$/;"	e	enum:__anon364
GAME_INIT	src/game/g_public.h	/^  GAME_INIT,  \/\/ ( int levelTime, int randomSeed, int restart );$/;"	e	enum:__anon364
GAME_RUN_FRAME	src/game/g_public.h	/^  GAME_RUN_FRAME,         \/\/ ( int levelTime );$/;"	e	enum:__anon364
GAME_SHUTDOWN	src/game/g_public.h	/^  GAME_SHUTDOWN,  \/\/ (void);$/;"	e	enum:__anon364
GAME_VERSION	src/game/bg_public.h	31;"	d
GCC_VERSION	src/server/sqlite3.c	174;"	d	file:
GCC_VERSION	src/server/sqlite3.c	176;"	d	file:
GCD	src/ui/ui_main.c	/^static int GCD( int a, int b )$/;"	f	file:
GDIR	GNUmakefile	/^GDIR=$(MOUNT_DIR)\/game$/;"	m
GENDER_FEMALE	src/game/bg_public.h	/^  GENDER_FEMALE,$/;"	e	enum:__anon327
GENDER_MALE	src/game/bg_public.h	/^  GENDER_MALE,$/;"	e	enum:__anon327
GENDER_NEUTER	src/game/bg_public.h	/^  GENDER_NEUTER$/;"	e	enum:__anon327
GENERATE_COPY_TARGETS	GNUmakefile	/^define GENERATE_COPY_TARGETS$/;"	m
GENERATE_DEPENDENCIES	GNUmakefile	/^GENERATE_DEPENDENCIES=1$/;"	m
GENERICDEF_ALL	src/renderergl2/tr_local.h	/^	GENERICDEF_ALL                  = 0x001F,$/;"	e	enum:__anon33
GENERICDEF_COUNT	src/renderergl2/tr_local.h	/^	GENERICDEF_COUNT                = 0x0020,$/;"	e	enum:__anon33
GENERICDEF_USE_DEFORM_VERTEXES	src/renderergl2/tr_local.h	/^	GENERICDEF_USE_DEFORM_VERTEXES  = 0x0001,$/;"	e	enum:__anon33
GENERICDEF_USE_FOG	src/renderergl2/tr_local.h	/^	GENERICDEF_USE_FOG              = 0x0008,$/;"	e	enum:__anon33
GENERICDEF_USE_RGBAGEN	src/renderergl2/tr_local.h	/^	GENERICDEF_USE_RGBAGEN          = 0x0010,$/;"	e	enum:__anon33
GENERICDEF_USE_TCGEN_AND_TCMOD	src/renderergl2/tr_local.h	/^	GENERICDEF_USE_TCGEN_AND_TCMOD  = 0x0002,$/;"	e	enum:__anon33
GENERICDEF_USE_VERTEX_ANIMATION	src/renderergl2/tr_local.h	/^	GENERICDEF_USE_VERTEX_ANIMATION = 0x0004,$/;"	e	enum:__anon33
GENERIC_HW_R_PICMIP_DEFAULT	src/renderergl1/tr_init.c	168;"	d	file:
GENERIC_HW_R_TEXTUREMODE_DEFAULT	src/renderergl1/tr_init.c	169;"	d	file:
GENTITYNUM_BITS	src/qcommon/q_shared.h	1196;"	d
GENTITYNUM_MASK	src/qcommon/q_shared.h	1198;"	d
GEQ	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
GETACT	src/tools/lcc/cpp/lex.c	28;"	d	file:
GETKEY	src/cgame/cg_particles.c	2108;"	d	file:
GETVARINT_INIT	src/server/sqlite3.c	138777;"	d	file:
GETVARINT_STEP	src/server/sqlite3.c	138774;"	d	file:
GET_FLOAT_WORD	src/game/bg_lib.c	878;"	d	file:
GF_INVERSE_SAWTOOTH	src/renderergl1/tr_local.h	/^	GF_INVERSE_SAWTOOTH, $/;"	e	enum:__anon131
GF_INVERSE_SAWTOOTH	src/renderergl2/tr_local.h	/^	GF_INVERSE_SAWTOOTH, $/;"	e	enum:__anon12
GF_NOISE	src/renderergl1/tr_local.h	/^	GF_NOISE$/;"	e	enum:__anon131
GF_NOISE	src/renderergl2/tr_local.h	/^	GF_NOISE$/;"	e	enum:__anon12
GF_NONE	src/renderergl1/tr_local.h	/^	GF_NONE,$/;"	e	enum:__anon131
GF_NONE	src/renderergl2/tr_local.h	/^	GF_NONE,$/;"	e	enum:__anon12
GF_SAWTOOTH	src/renderergl1/tr_local.h	/^	GF_SAWTOOTH, $/;"	e	enum:__anon131
GF_SAWTOOTH	src/renderergl2/tr_local.h	/^	GF_SAWTOOTH, $/;"	e	enum:__anon12
GF_SIN	src/renderergl1/tr_local.h	/^	GF_SIN,$/;"	e	enum:__anon131
GF_SIN	src/renderergl2/tr_local.h	/^	GF_SIN,$/;"	e	enum:__anon12
GF_SQUARE	src/renderergl1/tr_local.h	/^	GF_SQUARE,$/;"	e	enum:__anon131
GF_SQUARE	src/renderergl2/tr_local.h	/^	GF_SQUARE,$/;"	e	enum:__anon12
GF_TRIANGLE	src/renderergl1/tr_local.h	/^	GF_TRIANGLE,$/;"	e	enum:__anon131
GF_TRIANGLE	src/renderergl2/tr_local.h	/^	GF_TRIANGLE,$/;"	e	enum:__anon12
GIANTCHAR_HEIGHT	src/qcommon/q_shared.h	387;"	d
GIANTCHAR_WIDTH	src/qcommon/q_shared.h	386;"	d
GIANT_HEIGHT	src/cgame/cg_local.h	75;"	d
GIANT_WIDTH	src/cgame/cg_local.h	74;"	d
GIB_HEALTH	src/game/bg_public.h	34;"	d
GIT_REV	GNUmakefile	/^    GIT_REV=$(shell git show -s --pretty=format:%h-%ad --date=short)$/;"	m
GLDRV_ICD	src/renderercommon/tr_types.h	/^	GLDRV_ICD,					\/\/ driver is integrated with window system$/;"	e	enum:__anon118
GLDRV_STANDALONE	src/renderercommon/tr_types.h	/^	GLDRV_STANDALONE,			\/\/ driver is a non-3Dfx standalone driver$/;"	e	enum:__anon118
GLDRV_VOODOO	src/renderercommon/tr_types.h	/^	GLDRV_VOODOO				\/\/ driver is a 3Dfx standalone driver$/;"	e	enum:__anon118
GLHW_3DFX_2D3D	src/renderercommon/tr_types.h	/^	GLHW_3DFX_2D3D,			\/\/ Voodoo Banshee or Voodoo3, relevant since if this is$/;"	e	enum:__anon119
GLHW_GENERIC	src/renderercommon/tr_types.h	/^	GLHW_GENERIC,			\/\/ where everthing works the way it should$/;"	e	enum:__anon119
GLHW_PERMEDIA2	src/renderercommon/tr_types.h	/^	GLHW_PERMEDIA2			\/\/ where you don't have src*dst$/;"	e	enum:__anon119
GLHW_RAGEPRO	src/renderercommon/tr_types.h	/^	GLHW_RAGEPRO,			\/\/ where you can't modulate alpha on alpha textures$/;"	e	enum:__anon119
GLHW_RIVA128	src/renderercommon/tr_types.h	/^	GLHW_RIVA128,			\/\/ where you can't interpolate alpha$/;"	e	enum:__anon119
GLOBAL	src/server/sqlite3.c	10259;"	d	file:
GLOBAL	src/server/sqlite3.c	10265;"	d	file:
GLOBAL	src/tools/lcc/src/c.h	/^enum { CONSTANTS=1, LABELS, GLOBAL, PARAM, LOCAL };$/;"	e	enum:__anon303
GLSL_BindNullProgram	src/renderergl2/tr_glsl.c	/^void GLSL_BindNullProgram(void)$/;"	f
GLSL_BindProgram	src/renderergl2/tr_glsl.c	/^void GLSL_BindProgram(shaderProgram_t * program)$/;"	f
GLSL_CompileGPUShader	src/renderergl2/tr_glsl.c	/^static int GLSL_CompileGPUShader(GLhandleARB program, GLhandleARB *prevShader, const GLcharARB *buffer, int size, GLenum shaderType)$/;"	f	file:
GLSL_DeleteGPUShader	src/renderergl2/tr_glsl.c	/^void GLSL_DeleteGPUShader(shaderProgram_t *program)$/;"	f
GLSL_FLOAT	src/renderergl2/tr_local.h	/^	GLSL_FLOAT,$/;"	e	enum:__anon37
GLSL_FLOAT5	src/renderergl2/tr_local.h	/^	GLSL_FLOAT5,$/;"	e	enum:__anon37
GLSL_FinishGPUShader	src/renderergl2/tr_glsl.c	/^void GLSL_FinishGPUShader(shaderProgram_t *program)$/;"	f
GLSL_GetGenericShaderProgram	src/renderergl2/tr_glsl.c	/^shaderProgram_t *GLSL_GetGenericShaderProgram(int stage)$/;"	f
GLSL_GetShaderHeader	src/renderergl2/tr_glsl.c	/^static void GLSL_GetShaderHeader( GLenum shaderType, const GLcharARB *extra, char *dest, int size )$/;"	f	file:
GLSL_INT	src/renderergl2/tr_local.h	/^	GLSL_INT,$/;"	e	enum:__anon37
GLSL_InitGPUShader	src/renderergl2/tr_glsl.c	/^static int GLSL_InitGPUShader(shaderProgram_t * program, const char *name,$/;"	f	file:
GLSL_InitGPUShader2	src/renderergl2/tr_glsl.c	/^static int GLSL_InitGPUShader2(shaderProgram_t * program, const char *name, int attribs, const char *vpCode, const char *fpCode)$/;"	f	file:
GLSL_InitGPUShaders	src/renderergl2/tr_glsl.c	/^void GLSL_InitGPUShaders(void)$/;"	f
GLSL_InitUniforms	src/renderergl2/tr_glsl.c	/^void GLSL_InitUniforms(shaderProgram_t *program)$/;"	f
GLSL_LinkProgram	src/renderergl2/tr_glsl.c	/^static void GLSL_LinkProgram(GLhandleARB program)$/;"	f	file:
GLSL_LoadGPUShaderText	src/renderergl2/tr_glsl.c	/^static int GLSL_LoadGPUShaderText(const char *name, const char *fallback,$/;"	f	file:
GLSL_MAT16	src/renderergl2/tr_local.h	/^	GLSL_MAT16$/;"	e	enum:__anon37
GLSL_PrintInfoLog	src/renderergl2/tr_glsl.c	/^static void GLSL_PrintInfoLog(GLhandleARB object, qboolean developerOnly)$/;"	f	file:
GLSL_PrintShaderSource	src/renderergl2/tr_glsl.c	/^static void GLSL_PrintShaderSource(GLhandleARB object)$/;"	f	file:
GLSL_SetUniformFloat	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformFloat(shaderProgram_t *program, int uniformNum, GLfloat value)$/;"	f
GLSL_SetUniformFloat5	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformFloat5(shaderProgram_t *program, int uniformNum, const vec5_t v)$/;"	f
GLSL_SetUniformInt	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformInt(shaderProgram_t *program, int uniformNum, GLint value)$/;"	f
GLSL_SetUniformMat4	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformMat4(shaderProgram_t *program, int uniformNum, const mat4_t matrix)$/;"	f
GLSL_SetUniformVec2	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformVec2(shaderProgram_t *program, int uniformNum, const vec2_t v)$/;"	f
GLSL_SetUniformVec3	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformVec3(shaderProgram_t *program, int uniformNum, const vec3_t v)$/;"	f
GLSL_SetUniformVec4	src/renderergl2/tr_glsl.c	/^void GLSL_SetUniformVec4(shaderProgram_t *program, int uniformNum, const vec4_t v)$/;"	f
GLSL_ShowProgramUniforms	src/renderergl2/tr_glsl.c	/^static void GLSL_ShowProgramUniforms(GLhandleARB program)$/;"	f	file:
GLSL_ShutdownGPUShaders	src/renderergl2/tr_glsl.c	/^void GLSL_ShutdownGPUShaders(void)$/;"	f
GLSL_VEC2	src/renderergl2/tr_local.h	/^	GLSL_VEC2,$/;"	e	enum:__anon37
GLSL_VEC3	src/renderergl2/tr_local.h	/^	GLSL_VEC3,$/;"	e	enum:__anon37
GLSL_VEC4	src/renderergl2/tr_local.h	/^	GLSL_VEC4,$/;"	e	enum:__anon37
GLSL_ValidateProgram	src/renderergl2/tr_glsl.c	/^static void GLSL_ValidateProgram(GLhandleARB program)$/;"	f	file:
GLS_ATEST_BITS	src/renderergl1/tr_local.h	1144;"	d
GLS_ATEST_BITS	src/renderergl2/tr_local.h	1926;"	d
GLS_ATEST_GE_80	src/renderergl1/tr_local.h	1143;"	d
GLS_ATEST_GE_80	src/renderergl2/tr_local.h	1925;"	d
GLS_ATEST_GT_0	src/renderergl1/tr_local.h	1141;"	d
GLS_ATEST_GT_0	src/renderergl2/tr_local.h	1923;"	d
GLS_ATEST_LT_80	src/renderergl1/tr_local.h	1142;"	d
GLS_ATEST_LT_80	src/renderergl2/tr_local.h	1924;"	d
GLS_DEFAULT	src/renderergl1/tr_local.h	1146;"	d
GLS_DEFAULT	src/renderergl2/tr_local.h	1928;"	d
GLS_DEPTHFUNC_BITS	src/renderergl2/tr_local.h	1921;"	d
GLS_DEPTHFUNC_EQUAL	src/renderergl1/tr_local.h	1139;"	d
GLS_DEPTHFUNC_EQUAL	src/renderergl2/tr_local.h	1919;"	d
GLS_DEPTHFUNC_GREATER	src/renderergl2/tr_local.h	1920;"	d
GLS_DEPTHMASK_TRUE	src/renderergl1/tr_local.h	1134;"	d
GLS_DEPTHMASK_TRUE	src/renderergl2/tr_local.h	1914;"	d
GLS_DEPTHTEST_DISABLE	src/renderergl1/tr_local.h	1138;"	d
GLS_DEPTHTEST_DISABLE	src/renderergl2/tr_local.h	1918;"	d
GLS_DSTBLEND_BITS	src/renderergl1/tr_local.h	1132;"	d
GLS_DSTBLEND_BITS	src/renderergl2/tr_local.h	1912;"	d
GLS_DSTBLEND_DST_ALPHA	src/renderergl1/tr_local.h	1130;"	d
GLS_DSTBLEND_DST_ALPHA	src/renderergl2/tr_local.h	1910;"	d
GLS_DSTBLEND_ONE	src/renderergl1/tr_local.h	1125;"	d
GLS_DSTBLEND_ONE	src/renderergl2/tr_local.h	1905;"	d
GLS_DSTBLEND_ONE_MINUS_DST_ALPHA	src/renderergl1/tr_local.h	1131;"	d
GLS_DSTBLEND_ONE_MINUS_DST_ALPHA	src/renderergl2/tr_local.h	1911;"	d
GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA	src/renderergl1/tr_local.h	1129;"	d
GLS_DSTBLEND_ONE_MINUS_SRC_ALPHA	src/renderergl2/tr_local.h	1909;"	d
GLS_DSTBLEND_ONE_MINUS_SRC_COLOR	src/renderergl1/tr_local.h	1127;"	d
GLS_DSTBLEND_ONE_MINUS_SRC_COLOR	src/renderergl2/tr_local.h	1907;"	d
GLS_DSTBLEND_SRC_ALPHA	src/renderergl1/tr_local.h	1128;"	d
GLS_DSTBLEND_SRC_ALPHA	src/renderergl2/tr_local.h	1908;"	d
GLS_DSTBLEND_SRC_COLOR	src/renderergl1/tr_local.h	1126;"	d
GLS_DSTBLEND_SRC_COLOR	src/renderergl2/tr_local.h	1906;"	d
GLS_DSTBLEND_ZERO	src/renderergl1/tr_local.h	1124;"	d
GLS_DSTBLEND_ZERO	src/renderergl2/tr_local.h	1904;"	d
GLS_POLYMODE_LINE	src/renderergl1/tr_local.h	1136;"	d
GLS_POLYMODE_LINE	src/renderergl2/tr_local.h	1916;"	d
GLS_SRCBLEND_ALPHA_SATURATE	src/renderergl1/tr_local.h	1121;"	d
GLS_SRCBLEND_ALPHA_SATURATE	src/renderergl2/tr_local.h	1901;"	d
GLS_SRCBLEND_BITS	src/renderergl1/tr_local.h	1122;"	d
GLS_SRCBLEND_BITS	src/renderergl2/tr_local.h	1902;"	d
GLS_SRCBLEND_DST_ALPHA	src/renderergl1/tr_local.h	1119;"	d
GLS_SRCBLEND_DST_ALPHA	src/renderergl2/tr_local.h	1899;"	d
GLS_SRCBLEND_DST_COLOR	src/renderergl1/tr_local.h	1115;"	d
GLS_SRCBLEND_DST_COLOR	src/renderergl2/tr_local.h	1895;"	d
GLS_SRCBLEND_ONE	src/renderergl1/tr_local.h	1114;"	d
GLS_SRCBLEND_ONE	src/renderergl2/tr_local.h	1894;"	d
GLS_SRCBLEND_ONE_MINUS_DST_ALPHA	src/renderergl1/tr_local.h	1120;"	d
GLS_SRCBLEND_ONE_MINUS_DST_ALPHA	src/renderergl2/tr_local.h	1900;"	d
GLS_SRCBLEND_ONE_MINUS_DST_COLOR	src/renderergl1/tr_local.h	1116;"	d
GLS_SRCBLEND_ONE_MINUS_DST_COLOR	src/renderergl2/tr_local.h	1896;"	d
GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA	src/renderergl1/tr_local.h	1118;"	d
GLS_SRCBLEND_ONE_MINUS_SRC_ALPHA	src/renderergl2/tr_local.h	1898;"	d
GLS_SRCBLEND_SRC_ALPHA	src/renderergl1/tr_local.h	1117;"	d
GLS_SRCBLEND_SRC_ALPHA	src/renderergl2/tr_local.h	1897;"	d
GLS_SRCBLEND_ZERO	src/renderergl1/tr_local.h	1113;"	d
GLS_SRCBLEND_ZERO	src/renderergl2/tr_local.h	1893;"	d
GLYPHS_PER_FONT	src/qcommon/q_shared.h	1456;"	d
GLYPH_CHAREND	src/qcommon/q_shared.h	1455;"	d
GLYPH_CHARSTART	src/qcommon/q_shared.h	1454;"	d
GLYPH_END	src/qcommon/q_shared.h	1453;"	d
GLYPH_START	src/qcommon/q_shared.h	1452;"	d
GL_ALPHA16F_ARB	src/renderercommon/qgl.h	173;"	d
GL_ALPHA16F_ARB	src/renderercommon/qgl.h	761;"	d
GL_ALPHA32F_ARB	src/renderercommon/qgl.h	167;"	d
GL_ALPHA32F_ARB	src/renderercommon/qgl.h	755;"	d
GL_ARB_depth_clamp	src/renderercommon/qgl.h	967;"	d
GL_ARB_draw_buffers	src/renderercommon/qgl.h	946;"	d
GL_ARB_half_float_pixel	src/renderercommon/qgl.h	180;"	d
GL_ARB_half_float_pixel	src/renderercommon/qgl.h	768;"	d
GL_ARB_occlusion_query	src/renderercommon/qgl.h	282;"	d
GL_ARB_occlusion_query	src/renderercommon/qgl.h	870;"	d
GL_ARB_seamless_cube_map	src/renderercommon/qgl.h	972;"	d
GL_ARB_shading_language_100	src/renderercommon/qgl.h	48;"	d
GL_ARB_shading_language_100	src/renderercommon/qgl.h	636;"	d
GL_ARB_texture_compression_bptc	src/renderercommon/qgl.h	936;"	d
GL_ARB_texture_float	src/renderercommon/qgl.h	156;"	d
GL_ARB_texture_float	src/renderercommon/qgl.h	744;"	d
GL_ARB_vertex_array_object	src/renderercommon/qgl.h	982;"	d
GL_ATI_meminfo	src/renderercommon/qgl.h	148;"	d
GL_ATI_meminfo	src/renderercommon/qgl.h	736;"	d
GL_Bind	src/renderergl1/tr_backend.c	/^void GL_Bind( image_t *image ) {$/;"	f
GL_Bind	src/renderergl2/tr_backend.c	/^void GL_Bind( image_t *image ) {$/;"	f
GL_BindMultitexture	src/renderergl1/tr_backend.c	/^void GL_BindMultitexture( image_t *image0, GLuint env0, image_t *image1, GLuint env1 ) {$/;"	f
GL_BindToTMU	src/renderergl2/tr_backend.c	/^void GL_BindToTMU( image_t *image, int tmu )$/;"	f
GL_COLOR_ATTACHMENT0_EXT	src/renderercommon/qgl.h	229;"	d
GL_COLOR_ATTACHMENT0_EXT	src/renderercommon/qgl.h	817;"	d
GL_COLOR_ATTACHMENT10_EXT	src/renderercommon/qgl.h	239;"	d
GL_COLOR_ATTACHMENT10_EXT	src/renderercommon/qgl.h	827;"	d
GL_COLOR_ATTACHMENT11_EXT	src/renderercommon/qgl.h	240;"	d
GL_COLOR_ATTACHMENT11_EXT	src/renderercommon/qgl.h	828;"	d
GL_COLOR_ATTACHMENT12_EXT	src/renderercommon/qgl.h	241;"	d
GL_COLOR_ATTACHMENT12_EXT	src/renderercommon/qgl.h	829;"	d
GL_COLOR_ATTACHMENT13_EXT	src/renderercommon/qgl.h	242;"	d
GL_COLOR_ATTACHMENT13_EXT	src/renderercommon/qgl.h	830;"	d
GL_COLOR_ATTACHMENT14_EXT	src/renderercommon/qgl.h	243;"	d
GL_COLOR_ATTACHMENT14_EXT	src/renderercommon/qgl.h	831;"	d
GL_COLOR_ATTACHMENT15_EXT	src/renderercommon/qgl.h	244;"	d
GL_COLOR_ATTACHMENT15_EXT	src/renderercommon/qgl.h	832;"	d
GL_COLOR_ATTACHMENT1_EXT	src/renderercommon/qgl.h	230;"	d
GL_COLOR_ATTACHMENT1_EXT	src/renderercommon/qgl.h	818;"	d
GL_COLOR_ATTACHMENT2_EXT	src/renderercommon/qgl.h	231;"	d
GL_COLOR_ATTACHMENT2_EXT	src/renderercommon/qgl.h	819;"	d
GL_COLOR_ATTACHMENT3_EXT	src/renderercommon/qgl.h	232;"	d
GL_COLOR_ATTACHMENT3_EXT	src/renderercommon/qgl.h	820;"	d
GL_COLOR_ATTACHMENT4_EXT	src/renderercommon/qgl.h	233;"	d
GL_COLOR_ATTACHMENT4_EXT	src/renderercommon/qgl.h	821;"	d
GL_COLOR_ATTACHMENT5_EXT	src/renderercommon/qgl.h	234;"	d
GL_COLOR_ATTACHMENT5_EXT	src/renderercommon/qgl.h	822;"	d
GL_COLOR_ATTACHMENT6_EXT	src/renderercommon/qgl.h	235;"	d
GL_COLOR_ATTACHMENT6_EXT	src/renderercommon/qgl.h	823;"	d
GL_COLOR_ATTACHMENT7_EXT	src/renderercommon/qgl.h	236;"	d
GL_COLOR_ATTACHMENT7_EXT	src/renderercommon/qgl.h	824;"	d
GL_COLOR_ATTACHMENT8_EXT	src/renderercommon/qgl.h	237;"	d
GL_COLOR_ATTACHMENT8_EXT	src/renderercommon/qgl.h	825;"	d
GL_COLOR_ATTACHMENT9_EXT	src/renderercommon/qgl.h	238;"	d
GL_COLOR_ATTACHMENT9_EXT	src/renderercommon/qgl.h	826;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	src/renderercommon/qgl.h	931;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	src/renderercommon/qgl.h	929;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	src/renderercommon/qgl.h	937;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	src/renderercommon/qgl.h	939;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	src/renderercommon/qgl.h	940;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	src/renderercommon/qgl.h	932;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	src/renderercommon/qgl.h	930;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	src/renderercommon/qgl.h	915;"	d
GL_COMPRESSED_SLUMINANCE_EXT	src/renderercommon/qgl.h	914;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	src/renderercommon/qgl.h	938;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	src/renderercommon/qgl.h	913;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	src/renderercommon/qgl.h	917;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	src/renderercommon/qgl.h	918;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	src/renderercommon/qgl.h	919;"	d
GL_COMPRESSED_SRGB_EXT	src/renderercommon/qgl.h	912;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	src/renderercommon/qgl.h	916;"	d
GL_CURRENT_QUERY_ARB	src/renderercommon/qgl.h	285;"	d
GL_CURRENT_QUERY_ARB	src/renderercommon/qgl.h	873;"	d
GL_CheckErrors	src/renderergl1/tr_init.c	/^void GL_CheckErrors( void ) {$/;"	f
GL_CheckErrors	src/renderergl2/tr_local.h	1886;"	d
GL_CheckErrs	src/renderergl2/tr_init.c	/^void GL_CheckErrs( char *file, int line ) {$/;"	f
GL_Cull	src/renderergl1/tr_backend.c	/^void GL_Cull( int cullType ) {$/;"	f
GL_Cull	src/renderergl2/tr_backend.c	/^void GL_Cull( int cullType ) {$/;"	f
GL_DEPTH24_STENCIL8_EXT	src/renderercommon/qgl.h	267;"	d
GL_DEPTH24_STENCIL8_EXT	src/renderercommon/qgl.h	855;"	d
GL_DEPTH_ATTACHMENT_EXT	src/renderercommon/qgl.h	245;"	d
GL_DEPTH_ATTACHMENT_EXT	src/renderercommon/qgl.h	833;"	d
GL_DEPTH_CLAMP	src/renderercommon/qgl.h	968;"	d
GL_DEPTH_STENCIL_EXT	src/renderercommon/qgl.h	265;"	d
GL_DEPTH_STENCIL_EXT	src/renderercommon/qgl.h	853;"	d
GL_DRAW_BUFFER0_ARB	src/renderercommon/qgl.h	948;"	d
GL_DRAW_BUFFER10_ARB	src/renderercommon/qgl.h	958;"	d
GL_DRAW_BUFFER11_ARB	src/renderercommon/qgl.h	959;"	d
GL_DRAW_BUFFER12_ARB	src/renderercommon/qgl.h	960;"	d
GL_DRAW_BUFFER13_ARB	src/renderercommon/qgl.h	961;"	d
GL_DRAW_BUFFER14_ARB	src/renderercommon/qgl.h	962;"	d
GL_DRAW_BUFFER15_ARB	src/renderercommon/qgl.h	963;"	d
GL_DRAW_BUFFER1_ARB	src/renderercommon/qgl.h	949;"	d
GL_DRAW_BUFFER2_ARB	src/renderercommon/qgl.h	950;"	d
GL_DRAW_BUFFER3_ARB	src/renderercommon/qgl.h	951;"	d
GL_DRAW_BUFFER4_ARB	src/renderercommon/qgl.h	952;"	d
GL_DRAW_BUFFER5_ARB	src/renderercommon/qgl.h	953;"	d
GL_DRAW_BUFFER6_ARB	src/renderercommon/qgl.h	954;"	d
GL_DRAW_BUFFER7_ARB	src/renderercommon/qgl.h	955;"	d
GL_DRAW_BUFFER8_ARB	src/renderercommon/qgl.h	956;"	d
GL_DRAW_BUFFER9_ARB	src/renderercommon/qgl.h	957;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	src/renderercommon/qgl.h	887;"	d
GL_DRAW_FRAMEBUFFER_EXT	src/renderercommon/qgl.h	886;"	d
GL_EXT_framebuffer_blit	src/renderercommon/qgl.h	884;"	d
GL_EXT_framebuffer_multisample	src/renderercommon/qgl.h	896;"	d
GL_EXT_framebuffer_object	src/renderercommon/qgl.h	208;"	d
GL_EXT_framebuffer_object	src/renderercommon/qgl.h	796;"	d
GL_EXT_framebuffer_sRGB	src/renderercommon/qgl.h	923;"	d
GL_EXT_packed_depth_stencil	src/renderercommon/qgl.h	264;"	d
GL_EXT_packed_depth_stencil	src/renderercommon/qgl.h	852;"	d
GL_EXT_texture_compression_latc	src/renderercommon/qgl.h	928;"	d
GL_EXT_texture_sRGB	src/renderercommon/qgl.h	903;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	src/renderercommon/qgl.h	225;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	src/renderercommon/qgl.h	813;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	src/renderercommon/qgl.h	224;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	src/renderercommon/qgl.h	812;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	src/renderercommon/qgl.h	228;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	src/renderercommon/qgl.h	816;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	src/renderercommon/qgl.h	227;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	src/renderercommon/qgl.h	815;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	src/renderercommon/qgl.h	226;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	src/renderercommon/qgl.h	814;"	d
GL_FRAMEBUFFER_BINDING_EXT	src/renderercommon/qgl.h	255;"	d
GL_FRAMEBUFFER_BINDING_EXT	src/renderercommon/qgl.h	843;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	src/renderercommon/qgl.h	247;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	src/renderercommon/qgl.h	835;"	d
GL_FRAMEBUFFER_EXT	src/renderercommon/qgl.h	209;"	d
GL_FRAMEBUFFER_EXT	src/renderercommon/qgl.h	797;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	src/renderercommon/qgl.h	248;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	src/renderercommon/qgl.h	836;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	src/renderercommon/qgl.h	250;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	src/renderercommon/qgl.h	838;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	src/renderercommon/qgl.h	252;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	src/renderercommon/qgl.h	840;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	src/renderercommon/qgl.h	251;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	src/renderercommon/qgl.h	839;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	src/renderercommon/qgl.h	249;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	src/renderercommon/qgl.h	837;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	src/renderercommon/qgl.h	898;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	src/renderercommon/qgl.h	253;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	src/renderercommon/qgl.h	841;"	d
GL_FRAMEBUFFER_SRGB_EXT	src/renderercommon/qgl.h	924;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	src/renderercommon/qgl.h	254;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	src/renderercommon/qgl.h	842;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	src/renderercommon/qgl.h	141;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	src/renderercommon/qgl.h	729;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	src/renderercommon/qgl.h	139;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	src/renderercommon/qgl.h	727;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	src/renderercommon/qgl.h	143;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	src/renderercommon/qgl.h	731;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	src/renderercommon/qgl.h	142;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	src/renderercommon/qgl.h	730;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	src/renderercommon/qgl.h	140;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	src/renderercommon/qgl.h	728;"	d
GL_HALF_FLOAT_ARB	src/renderercommon/qgl.h	181;"	d
GL_HALF_FLOAT_ARB	src/renderercommon/qgl.h	769;"	d
GL_INDEX_TYPE	src/renderergl1/tr_local.h	36;"	d
GL_INDEX_TYPE	src/renderergl2/tr_local.h	40;"	d
GL_INTENSITY16F_ARB	src/renderercommon/qgl.h	174;"	d
GL_INTENSITY16F_ARB	src/renderercommon/qgl.h	762;"	d
GL_INTENSITY32F_ARB	src/renderercommon/qgl.h	168;"	d
GL_INTENSITY32F_ARB	src/renderercommon/qgl.h	756;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	src/renderercommon/qgl.h	259;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	src/renderercommon/qgl.h	847;"	d
GL_LUMINANCE16F_ARB	src/renderercommon/qgl.h	175;"	d
GL_LUMINANCE16F_ARB	src/renderercommon/qgl.h	763;"	d
GL_LUMINANCE32F_ARB	src/renderercommon/qgl.h	169;"	d
GL_LUMINANCE32F_ARB	src/renderercommon/qgl.h	757;"	d
GL_LUMINANCE_ALPHA16F_ARB	src/renderercommon/qgl.h	176;"	d
GL_LUMINANCE_ALPHA16F_ARB	src/renderercommon/qgl.h	764;"	d
GL_LUMINANCE_ALPHA32F_ARB	src/renderercommon/qgl.h	170;"	d
GL_LUMINANCE_ALPHA32F_ARB	src/renderercommon/qgl.h	758;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	src/renderercommon/qgl.h	257;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	src/renderercommon/qgl.h	845;"	d
GL_MAX_DRAW_BUFFERS_ARB	src/renderercommon/qgl.h	947;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	src/renderercommon/qgl.h	258;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	src/renderercommon/qgl.h	846;"	d
GL_MAX_SAMPLES_EXT	src/renderercommon/qgl.h	899;"	d
GL_NVX_gpu_memory_info	src/renderercommon/qgl.h	138;"	d
GL_NVX_gpu_memory_info	src/renderercommon/qgl.h	726;"	d
GL_QUERY_COUNTER_BITS_ARB	src/renderercommon/qgl.h	284;"	d
GL_QUERY_COUNTER_BITS_ARB	src/renderercommon/qgl.h	872;"	d
GL_QUERY_RESULT_ARB	src/renderercommon/qgl.h	286;"	d
GL_QUERY_RESULT_ARB	src/renderercommon/qgl.h	874;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	src/renderercommon/qgl.h	287;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	src/renderercommon/qgl.h	875;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	src/renderercommon/qgl.h	888;"	d
GL_READ_FRAMEBUFFER_EXT	src/renderercommon/qgl.h	885;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	src/renderercommon/qgl.h	221;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	src/renderercommon/qgl.h	809;"	d
GL_RENDERBUFFER_BINDING_EXT	src/renderercommon/qgl.h	256;"	d
GL_RENDERBUFFER_BINDING_EXT	src/renderercommon/qgl.h	844;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	src/renderercommon/qgl.h	220;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	src/renderercommon/qgl.h	808;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	src/renderercommon/qgl.h	222;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	src/renderercommon/qgl.h	810;"	d
GL_RENDERBUFFER_EXT	src/renderercommon/qgl.h	210;"	d
GL_RENDERBUFFER_EXT	src/renderercommon/qgl.h	798;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	src/renderercommon/qgl.h	151;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	src/renderercommon/qgl.h	739;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	src/renderercommon/qgl.h	219;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	src/renderercommon/qgl.h	807;"	d
GL_RENDERBUFFER_HEIGHT_EXT	src/renderercommon/qgl.h	216;"	d
GL_RENDERBUFFER_HEIGHT_EXT	src/renderercommon/qgl.h	804;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	src/renderercommon/qgl.h	217;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	src/renderercommon/qgl.h	805;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	src/renderercommon/qgl.h	218;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	src/renderercommon/qgl.h	806;"	d
GL_RENDERBUFFER_SAMPLES_EXT	src/renderercommon/qgl.h	897;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	src/renderercommon/qgl.h	223;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	src/renderercommon/qgl.h	811;"	d
GL_RENDERBUFFER_WIDTH_EXT	src/renderercommon/qgl.h	215;"	d
GL_RENDERBUFFER_WIDTH_EXT	src/renderercommon/qgl.h	803;"	d
GL_RGB16F_ARB	src/renderercommon/qgl.h	172;"	d
GL_RGB16F_ARB	src/renderercommon/qgl.h	760;"	d
GL_RGB32F_ARB	src/renderercommon/qgl.h	166;"	d
GL_RGB32F_ARB	src/renderercommon/qgl.h	754;"	d
GL_RGBA16F_ARB	src/renderercommon/qgl.h	171;"	d
GL_RGBA16F_ARB	src/renderercommon/qgl.h	759;"	d
GL_RGBA32F_ARB	src/renderercommon/qgl.h	165;"	d
GL_RGBA32F_ARB	src/renderercommon/qgl.h	753;"	d
GL_SAMPLES_PASSED_ARB	src/renderercommon/qgl.h	283;"	d
GL_SAMPLES_PASSED_ARB	src/renderercommon/qgl.h	871;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	src/renderercommon/qgl.h	49;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	src/renderercommon/qgl.h	637;"	d
GL_SLUMINANCE8_ALPHA8_EXT	src/renderercommon/qgl.h	909;"	d
GL_SLUMINANCE8_EXT	src/renderercommon/qgl.h	911;"	d
GL_SLUMINANCE_ALPHA_EXT	src/renderercommon/qgl.h	908;"	d
GL_SLUMINANCE_EXT	src/renderercommon/qgl.h	910;"	d
GL_SRGB8_ALPHA8_EXT	src/renderercommon/qgl.h	907;"	d
GL_SRGB8_EXT	src/renderercommon/qgl.h	905;"	d
GL_SRGB_ALPHA_EXT	src/renderercommon/qgl.h	906;"	d
GL_SRGB_EXT	src/renderercommon/qgl.h	904;"	d
GL_STENCIL_ATTACHMENT_EXT	src/renderercommon/qgl.h	246;"	d
GL_STENCIL_ATTACHMENT_EXT	src/renderercommon/qgl.h	834;"	d
GL_STENCIL_INDEX16_EXT	src/renderercommon/qgl.h	214;"	d
GL_STENCIL_INDEX16_EXT	src/renderercommon/qgl.h	802;"	d
GL_STENCIL_INDEX1_EXT	src/renderercommon/qgl.h	211;"	d
GL_STENCIL_INDEX1_EXT	src/renderercommon/qgl.h	799;"	d
GL_STENCIL_INDEX4_EXT	src/renderercommon/qgl.h	212;"	d
GL_STENCIL_INDEX4_EXT	src/renderercommon/qgl.h	800;"	d
GL_STENCIL_INDEX8_EXT	src/renderercommon/qgl.h	213;"	d
GL_STENCIL_INDEX8_EXT	src/renderercommon/qgl.h	801;"	d
GL_SelectTexture	src/renderergl1/tr_backend.c	/^void GL_SelectTexture( int unit )$/;"	f
GL_SelectTexture	src/renderergl2/tr_backend.c	/^void GL_SelectTexture( int unit )$/;"	f
GL_SetDefaultState	src/renderergl1/tr_init.c	/^void GL_SetDefaultState( void )$/;"	f
GL_SetDefaultState	src/renderergl2/tr_init.c	/^void GL_SetDefaultState( void )$/;"	f
GL_SetModelviewMatrix	src/renderergl2/tr_backend.c	/^void GL_SetModelviewMatrix(mat4_t matrix)$/;"	f
GL_SetProjectionMatrix	src/renderergl2/tr_backend.c	/^void GL_SetProjectionMatrix(mat4_t matrix)$/;"	f
GL_State	src/renderergl1/tr_backend.c	/^void GL_State( unsigned long stateBits )$/;"	f
GL_State	src/renderergl2/tr_backend.c	/^void GL_State( unsigned long stateBits )$/;"	f
GL_TEXTURE_ALPHA_TYPE_ARB	src/renderercommon/qgl.h	160;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	src/renderercommon/qgl.h	748;"	d
GL_TEXTURE_BLUE_TYPE_ARB	src/renderercommon/qgl.h	159;"	d
GL_TEXTURE_BLUE_TYPE_ARB	src/renderercommon/qgl.h	747;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	src/renderercommon/qgl.h	973;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	src/renderercommon/qgl.h	163;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	src/renderercommon/qgl.h	751;"	d
GL_TEXTURE_FREE_MEMORY_ATI	src/renderercommon/qgl.h	150;"	d
GL_TEXTURE_FREE_MEMORY_ATI	src/renderercommon/qgl.h	738;"	d
GL_TEXTURE_GREEN_TYPE_ARB	src/renderercommon/qgl.h	158;"	d
GL_TEXTURE_GREEN_TYPE_ARB	src/renderercommon/qgl.h	746;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	src/renderercommon/qgl.h	162;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	src/renderercommon/qgl.h	750;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	src/renderercommon/qgl.h	161;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	src/renderercommon/qgl.h	749;"	d
GL_TEXTURE_RED_TYPE_ARB	src/renderercommon/qgl.h	157;"	d
GL_TEXTURE_RED_TYPE_ARB	src/renderercommon/qgl.h	745;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	src/renderercommon/qgl.h	268;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	src/renderercommon/qgl.h	856;"	d
GL_TexEnv	src/renderergl1/tr_backend.c	/^void GL_TexEnv( int env )$/;"	f
GL_TexEnv	src/renderergl2/tr_backend.c	/^void GL_TexEnv( int env )$/;"	f
GL_TextureMode	src/renderergl1/tr_image.c	/^void GL_TextureMode( const char *string ) {$/;"	f
GL_TextureMode	src/renderergl2/tr_image.c	/^void GL_TextureMode( const char *string ) {$/;"	f
GL_UNSIGNED_INT_24_8_EXT	src/renderercommon/qgl.h	266;"	d
GL_UNSIGNED_INT_24_8_EXT	src/renderercommon/qgl.h	854;"	d
GL_UNSIGNED_NORMALIZED_ARB	src/renderercommon/qgl.h	164;"	d
GL_UNSIGNED_NORMALIZED_ARB	src/renderercommon/qgl.h	752;"	d
GL_VBO_FREE_MEMORY_ATI	src/renderercommon/qgl.h	149;"	d
GL_VBO_FREE_MEMORY_ATI	src/renderercommon/qgl.h	737;"	d
GL_VERTEX_ARRAY_BINDING_ARB	src/renderercommon/qgl.h	983;"	d
GLimp_CompareModes	src/sdl/sdl_glimp.c	/^static int GLimp_CompareModes( const void *a, const void *b )$/;"	f	file:
GLimp_DetectAvailableModes	src/sdl/sdl_glimp.c	/^static void GLimp_DetectAvailableModes(void)$/;"	f	file:
GLimp_EnableLogging	src/null/null_glimp.c	/^void		GLimp_EnableLogging( qboolean enable ) {$/;"	f
GLimp_EndFrame	src/null/null_glimp.c	/^void		GLimp_EndFrame( void ) {$/;"	f
GLimp_EndFrame	src/sdl/sdl_glimp.c	/^void GLimp_EndFrame( void )$/;"	f
GLimp_HaveExtension	src/renderergl2/tr_extensions.c	/^static qboolean GLimp_HaveExtension(const char *ext)$/;"	f	file:
GLimp_HaveExtension	src/sdl/sdl_glimp.c	/^static qboolean GLimp_HaveExtension(const char *ext)$/;"	f	file:
GLimp_Init	src/null/null_glimp.c	/^int 		GLimp_Init( void )$/;"	f
GLimp_Init	src/sdl/sdl_glimp.c	/^void GLimp_Init( void )$/;"	f
GLimp_InitExtensions	src/sdl/sdl_glimp.c	/^static void GLimp_InitExtensions( void )$/;"	f	file:
GLimp_InitExtraExtensions	src/renderergl2/tr_extensions.c	/^void GLimp_InitExtraExtensions()$/;"	f
GLimp_LogComment	src/null/null_glimp.c	/^void GLimp_LogComment( char *comment ) {$/;"	f
GLimp_LogComment	src/sdl/sdl_glimp.c	/^void GLimp_LogComment( char *comment )$/;"	f
GLimp_Minimize	src/sdl/sdl_glimp.c	/^void GLimp_Minimize( void )$/;"	f
GLimp_SetGamma	src/sdl/sdl_gamma.c	/^void GLimp_SetGamma( unsigned char red[256], unsigned char green[256], unsigned char blue[256] )$/;"	f
GLimp_SetMode	src/sdl/sdl_glimp.c	/^static int GLimp_SetMode( qboolean failSafe, qboolean fullscreen, qboolean noborder )$/;"	f	file:
GLimp_Shutdown	src/null/null_glimp.c	/^void		GLimp_Shutdown( void ) {$/;"	f
GLimp_Shutdown	src/sdl/sdl_glimp.c	/^void GLimp_Shutdown( void )$/;"	f
GLimp_StartDriverAndSetMode	src/sdl/sdl_glimp.c	/^static qboolean GLimp_StartDriverAndSetMode( qboolean failSafe, qboolean fullscreen, qboolean noborder )$/;"	f	file:
GOBJ	GNUmakefile	/^GOBJ = $(GOBJ_) $(B)\/game\/g_syscalls.o$/;"	m
GOBJ_	GNUmakefile	/^GOBJ_ = \\$/;"	m
GPA	src/client/cl_curl.c	/^static void *GPA(char *str)$/;"	f	file:
GPA	src/client/qal.c	/^static void *GPA(char *str)$/;"	f	file:
GPRLEN	src/qcommon/vm_powerpc.c	144;"	d	file:
GPRLEN_SHIFT	src/qcommon/vm_powerpc.c	147;"	d	file:
GRENADE_DAMAGE	src/game/tremulous.h	403;"	d
GRENADE_K_SCALE	src/game/tremulous.h	402;"	d
GRENADE_PRICE	src/game/tremulous.h	400;"	d
GRENADE_RANGE	src/game/tremulous.h	404;"	d
GRENADE_REPEAT	src/game/tremulous.h	401;"	d
GRENADE_SPEED	src/game/tremulous.h	405;"	d
GS_FILENAME	src/master/stats.c	93;"	d	file:
GT	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
GT1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
GT2	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
GVMOBJ	GNUmakefile	/^GVMOBJ = $(GOBJ_:%.o=%.asm)$/;"	m
G_ADDCOMMAND	src/game/g_public.h	/^  G_ADDCOMMAND,$/;"	e	enum:__anon363
G_ADJUST_AREA_PORTAL_STATE	src/game/g_public.h	/^  G_ADJUST_AREA_PORTAL_STATE, \/\/ ( gentity_t *ent, qboolean open );$/;"	e	enum:__anon363
G_AREAS_CONNECTED	src/game/g_public.h	/^  G_AREAS_CONNECTED,  \/\/ ( int area1, int area2 );$/;"	e	enum:__anon363
G_ARGC	src/game/g_public.h	/^  G_ARGC,     \/\/ ( void );$/;"	e	enum:__anon363
G_ARGV	src/game/g_public.h	/^  G_ARGV,     \/\/ ( int n, char *buffer, int bufferLength );$/;"	e	enum:__anon363
G_AddBuildableToStack	src/game/g_buildable.c	/^void G_AddBuildableToStack( int groundBuildableNum, int stackedBuildableNum )$/;"	f
G_AddCreditToClient	src/game/g_client.c	/^void G_AddCreditToClient( gclient_t *client, short credit, qboolean cap )$/;"	f
G_AddEvent	src/game/g_utils.c	/^void G_AddEvent( gentity_t *ent, int event, int eventParm )$/;"	f
G_AddPlayerModel	src/game/g_playermodel.c	/^G_AddPlayerModel(const char *model)$/;"	f	file:
G_AddPredictableEvent	src/game/g_utils.c	/^void G_AddPredictableEvent( gentity_t *ent, int event, int eventParm )$/;"	f
G_AddRangeMarkerForBuildable	src/game/g_buildable.c	/^static void G_AddRangeMarkerForBuildable( gentity_t *self )$/;"	f	file:
G_AddSpawnVarToken	src/game/g_spawn.c	/^char *G_AddSpawnVarToken( const char *string )$/;"	f
G_AddToPlayMapPool	src/game/g_playmap.c	/^playMapError_t G_AddToPlayMapPool( char *mapName, char *mapType, int minClients,$/;"	f
G_AddressCompare	src/game/g_utils.c	/^qboolean G_AddressCompare( const addr_t *a, const addr_t *b )$/;"	f
G_AddressParse	src/game/g_utils.c	/^qboolean G_AddressParse( const char *str, addr_t *addr )$/;"	f
G_AdminMessage	src/game/g_main.c	/^void G_AdminMessage( gentity_t *ent, const char *msg )$/;"	f
G_AdvanceMapRotation	src/game/g_maprotation.c	/^void G_AdvanceMapRotation( int depth )$/;"	f
G_AllocateNode	src/game/g_maprotation.c	/^static node_t *G_AllocateNode( void )$/;"	f	file:
G_BaseSelfDestruct	src/game/g_buildable.c	/^void G_BaseSelfDestruct( team_t team )$/;"	f
G_Bounce	src/game/g_physics.c	/^static void G_Bounce( gentity_t *ent, trace_t *trace )$/;"	f	file:
G_BounceMissile	src/game/g_missile.c	/^void G_BounceMissile( gentity_t *ent, trace_t *trace )$/;"	f
G_BounceProjectile	src/game/g_weapon.c	/^void G_BounceProjectile( vec3_t start, vec3_t impact, vec3_t dir, vec3_t endout )$/;"	f
G_BroadcastEvent	src/game/g_utils.c	/^void G_BroadcastEvent( int event, int eventParm )$/;"	f
G_Build	src/game/g_buildable.c	/^static gentity_t *G_Build( gentity_t *builder, buildable_t buildable,$/;"	f	file:
G_BuildIfValid	src/game/g_buildable.c	/^qboolean G_BuildIfValid( gentity_t *ent, buildable_t buildable )$/;"	f
G_BuildLogAuto	src/game/g_buildable.c	/^void G_BuildLogAuto( gentity_t *actor, gentity_t *buildable, buildFate_t fate )$/;"	f
G_BuildLogNew	src/game/g_buildable.c	/^buildLog_t *G_BuildLogNew( gentity_t *actor, buildFate_t fate )$/;"	f
G_BuildLogRevert	src/game/g_buildable.c	/^void G_BuildLogRevert( int id )$/;"	f
G_BuildLogRevertThink	src/game/g_buildable.c	/^void G_BuildLogRevertThink( gentity_t *ent )$/;"	f
G_BuildLogSet	src/game/g_buildable.c	/^void G_BuildLogSet( buildLog_t *log, gentity_t *ent )$/;"	f
G_BuildableRange	src/game/g_buildable.c	/^qboolean G_BuildableRange( vec3_t origin, float r, buildable_t buildable )$/;"	f
G_BuildableThink	src/game/g_buildable.c	/^void G_BuildableThink( gentity_t *ent, int msec )$/;"	f
G_BuildableTouchTriggers	src/game/g_buildable.c	/^void G_BuildableTouchTriggers( gentity_t *ent )$/;"	f
G_BuildablesIntersect	src/game/g_buildable.c	/^static qboolean G_BuildablesIntersect( buildable_t a, vec3_t originA,$/;"	f	file:
G_CVAR_REGISTER	src/game/g_public.h	/^  G_CVAR_REGISTER,  \/\/ ( vmCvar_t *vmCvar, const char *varName, const char *defaultValue, int flags );$/;"	e	enum:__anon363
G_CVAR_SET	src/game/g_public.h	/^  G_CVAR_SET,   \/\/ ( const char *var_name, const char *value );$/;"	e	enum:__anon363
G_CVAR_UPDATE	src/game/g_public.h	/^  G_CVAR_UPDATE,  \/\/ ( vmCvar_t *vmCvar );$/;"	e	enum:__anon363
G_CVAR_VARIABLE_INTEGER_VALUE	src/game/g_public.h	/^  G_CVAR_VARIABLE_INTEGER_VALUE,  \/\/ ( const char *var_name );$/;"	e	enum:__anon363
G_CVAR_VARIABLE_STRING_BUFFER	src/game/g_public.h	/^  G_CVAR_VARIABLE_STRING_BUFFER,  \/\/ ( const char *var_name, char *buffer, int bufsize );$/;"	e	enum:__anon363
G_CalcDamageModifier	src/game/g_combat.c	/^static float G_CalcDamageModifier( vec3_t point, gentity_t *targ, gentity_t *attacker, int class, int dflags )$/;"	f	file:
G_CalculateAvgPlayers	src/game/g_main.c	/^void G_CalculateAvgPlayers( void )$/;"	f
G_CalculateBuildPoints	src/game/g_main.c	/^void G_CalculateBuildPoints( void )$/;"	f
G_CalculateStages	src/game/g_main.c	/^void G_CalculateStages( void )$/;"	f
G_CallSpawn	src/game/g_spawn.c	/^qboolean G_CallSpawn( gentity_t *ent )$/;"	f
G_CanBuild	src/game/g_buildable.c	/^itemBuildError_t G_CanBuild( gentity_t *ent, buildable_t buildable, int distance,$/;"	f
G_CensorString	src/game/g_cmds.c	/^void G_CensorString( char *out, const char *in, int len, gentity_t *ent )$/;"	f
G_ChangeTeam	src/game/g_team.c	/^void G_ChangeTeam( gentity_t *ent, team_t newTeam )$/;"	f
G_ChargeAttack	src/game/g_weapon.c	/^void G_ChargeAttack( gentity_t *ent, gentity_t *victim )$/;"	f
G_CheckSpawnPoint	src/game/g_buildable.c	/^gentity_t *G_CheckSpawnPoint( int spawnNum, const vec3_t origin,$/;"	f
G_CheckVote	src/game/g_main.c	/^void G_CheckVote( team_t team )$/;"	f
G_Checktrigger_stages	src/game/g_trigger.c	/^void G_Checktrigger_stages( team_t team, stage_t stage )$/;"	f
G_ClearDeconMarks	src/game/g_buildable.c	/^void G_ClearDeconMarks( void )$/;"	f
G_ClearPlayMapPool	src/game/g_playmap.c	/^playMapError_t G_ClearPlayMapPool( void )$/;"	f
G_ClearPlayMapQueue	src/game/g_playmap.c	/^playMapError_t G_ClearPlayMapQueue( void )$/;"	f
G_ClearPlayerZapEffects	src/game/g_weapon.c	/^void G_ClearPlayerZapEffects( gentity_t *player )$/;"	f
G_ClearRotationStack	src/game/g_maprotation.c	/^void G_ClearRotationStack( void )$/;"	f
G_ClearVotes	src/game/g_main.c	/^static void G_ClearVotes( void )$/;"	f	file:
G_ClientCleanName	src/game/g_client.c	/^static void G_ClientCleanName( const char *in, char *out, int outSize )$/;"	f	file:
G_ClientIsLagging	src/game/g_utils.c	/^qboolean G_ClientIsLagging( gclient_t *client )$/;"	f
G_ClientListForTeam	src/game/g_team.c	/^static clientList_t G_ClientListForTeam( team_t team )$/;"	f	file:
G_ClientNumberFromString	src/game/g_cmds.c	/^int G_ClientNumberFromString( char *s, char *err, int len )$/;"	f
G_ClientNumbersFromString	src/game/g_cmds.c	/^int G_ClientNumbersFromString( char *s, int *plist, int max )$/;"	f
G_CloseMenus	src/game/g_utils.c	/^void G_CloseMenus( int clientNum )$/;"	f
G_ClosestEnt	src/game/g_utils.c	/^gentity_t *G_ClosestEnt( vec3_t origin, gentity_t **entities, int numEntities )$/;"	f
G_CompareBuildablesForRemoval	src/game/g_buildable.c	/^static int G_CompareBuildablesForRemoval( const void *a, const void *b )$/;"	f	file:
G_CopyString	src/game/g_utils.c	/^char *G_CopyString( const char *str )$/;"	f
G_CountSpawns	src/game/g_main.c	/^void G_CountSpawns( void )$/;"	f
G_CreateNewZap	src/game/g_weapon.c	/^static void G_CreateNewZap( gentity_t *creator, gentity_t *target )$/;"	f	file:
G_CreateRotationMatrix	src/game/g_mover.c	/^void G_CreateRotationMatrix( vec3_t angles, vec3_t matrix[ 3 ] )$/;"	f
G_CreepSlow	src/game/g_buildable.c	/^static void G_CreepSlow( gentity_t *self )$/;"	f	file:
G_CrushAttack	src/game/g_weapon.c	/^void G_CrushAttack( gentity_t *ent, gentity_t *victim )$/;"	f
G_CurrentNodeIndex	src/game/g_maprotation.c	/^static int G_CurrentNodeIndex( int rotation )$/;"	f	file:
G_CurrentNodeIndexArray	src/game/g_maprotation.c	/^static int *G_CurrentNodeIndexArray( void )$/;"	f	file:
G_DROP_CLIENT	src/game/g_public.h	/^  G_DROP_CLIENT,    \/\/ ( int clientNum, const char *reason );$/;"	e	enum:__anon363
G_Damage	src/game/g_combat.c	/^void G_Damage( gentity_t *targ, gentity_t *inflictor, gentity_t *attacker,$/;"	f
G_DecolorString	src/game/g_cmds.c	/^void G_DecolorString( char *in, char *out, int len )$/;"	f
G_DefaultPlayMapFlags	src/game/g_playmap.c	/^int G_DefaultPlayMapFlags(void)$/;"	f
G_ENTITIES_IN_BOX	src/game/g_public.h	/^  G_ENTITIES_IN_BOX,  \/\/ ( const vec3_t mins, const vec3_t maxs, gentity_t **list, int maxcount );$/;"	e	enum:__anon363
G_ENTITY_CONTACT	src/game/g_public.h	/^  G_ENTITY_CONTACT, \/\/ ( const vec3_t mins, const vec3_t maxs, const gentity_t *ent );$/;"	e	enum:__anon363
G_ENTITY_CONTACTCAPSULE	src/game/g_public.h	/^  G_ENTITY_CONTACTCAPSULE,  \/\/ ( const vec3_t mins, const vec3_t maxs, const gentity_t *ent );$/;"	e	enum:__anon363
G_ERROR	src/game/g_public.h	/^  G_ERROR,    \/\/ ( const char *string );$/;"	e	enum:__anon363
G_EndVote	src/game/g_main.c	/^void G_EndVote( team_t team, qboolean cancel )$/;"	f
G_EntitiesFree	src/game/g_utils.c	/^qboolean G_EntitiesFree( void )$/;"	f
G_Error	src/game/g_main.c	/^void QDECL G_Error( const char *fmt, ... )$/;"	f
G_EvaluateAcceleration	src/game/g_main.c	/^void G_EvaluateAcceleration( gentity_t *ent, int msec )$/;"	f
G_EvaluateMapCondition	src/game/g_maprotation.c	/^static qboolean G_EvaluateMapCondition( condition_t **condition )$/;"	f	file:
G_ExecuteVote	src/game/g_main.c	/^void G_ExecuteVote( team_t team )$/;"	f
G_ExplodeMissile	src/game/g_missile.c	/^void G_ExplodeMissile( gentity_t *ent )$/;"	f
G_FS_FCLOSE_FILE	src/game/g_public.h	/^  G_FS_FCLOSE_FILE,   \/\/ ( fileHandle_t f );$/;"	e	enum:__anon363
G_FS_FOPEN_FILE	src/game/g_public.h	/^  G_FS_FOPEN_FILE,  \/\/ ( const char *qpath, fileHandle_t *file, fsMode_t mode );$/;"	e	enum:__anon363
G_FS_GETFILELIST	src/game/g_public.h	/^  G_FS_GETFILELIST,$/;"	e	enum:__anon363
G_FS_GETFILTEREDFILES	src/game/g_public.h	/^  G_FS_GETFILTEREDFILES,$/;"	e	enum:__anon363
G_FS_READ	src/game/g_public.h	/^  G_FS_READ,    \/\/ ( void *buffer, int len, fileHandle_t f );$/;"	e	enum:__anon363
G_FS_SEEK	src/game/g_public.h	/^  G_FS_SEEK,$/;"	e	enum:__anon363
G_FS_WRITE	src/game/g_public.h	/^  G_FS_WRITE,   \/\/ ( const void *buffer, int len, fileHandle_t f );$/;"	e	enum:__anon363
G_Find	src/game/g_utils.c	/^gentity_t *G_Find( gentity_t *from, int fieldofs, const char *match )$/;"	f
G_FindBuildable	src/game/g_buildable.c	/^static gentity_t *G_FindBuildable( buildable_t buildable )$/;"	f	file:
G_FindBuildableInStack	src/game/g_buildable.c	/^qboolean G_FindBuildableInStack( int groundBuildableNum, int stackedBuildableNum, int *index )$/;"	f
G_FindClientByName	src/game/g_playmap.c	/^gclient_t *G_FindClientByName(gentity_t *from, const char *netname)$/;"	f
G_FindConfigstringIndex	src/game/g_utils.c	/^int G_FindConfigstringIndex( const char *name, int start, int max, qboolean create )$/;"	f
G_FindCreep	src/game/g_buildable.c	/^qboolean G_FindCreep( gentity_t *self )$/;"	f
G_FindDCC	src/game/g_buildable.c	/^int G_FindDCC( gentity_t *self )$/;"	f
G_FindInMapPool	src/game/g_playmap.c	/^int G_FindInMapPool( char *mapName )$/;"	f
G_FindPower	src/game/g_buildable.c	/^qboolean G_FindPower( gentity_t *self, qboolean searchUnspawned )$/;"	f
G_FindRadius	src/game/g_utils.c	/^gentity_t *G_FindRadius( gentity_t *from, vec3_t org, float rad )$/;"	f
G_FindTeams	src/game/g_main.c	/^void G_FindTeams( void )$/;"	f
G_FindZapChainTargets	src/game/g_weapon.c	/^static void G_FindZapChainTargets( zap_t *zap )$/;"	f	file:
G_FinishSpawningBuildable	src/game/g_buildable.c	/^static gentity_t *G_FinishSpawningBuildable( gentity_t *ent, qboolean force )$/;"	f	file:
G_FloodLimited	src/game/g_cmds.c	/^int G_FloodLimited( gentity_t *ent )$/;"	f
G_FollowLockView	src/game/g_cmds.c	/^void G_FollowLockView( gentity_t *ent )$/;"	f
G_FollowNewClient	src/game/g_cmds.c	/^qboolean G_FollowNewClient( gentity_t *ent, int dir )$/;"	f
G_ForceWeaponChange	src/game/g_weapon.c	/^void G_ForceWeaponChange( gentity_t *ent, weapon_t weapon )$/;"	f
G_FreeEntity	src/game/g_utils.c	/^void G_FreeEntity( gentity_t *ent )$/;"	f
G_FreeMarkedBuildables	src/game/g_buildable.c	/^void G_FreeMarkedBuildables( gentity_t *deconner, char *readable, int rsize,$/;"	f
G_FreeNode	src/game/g_maprotation.c	/^void G_FreeNode( node_t *node )$/;"	f
G_FreePlayerModel	src/game/g_playermodel.c	/^void G_FreePlayerModel(void)$/;"	f
G_GET_CONFIGSTRING	src/game/g_public.h	/^  G_GET_CONFIGSTRING, \/\/ ( int num, char *buffer, int bufferSize );$/;"	e	enum:__anon363
G_GET_ENTITY_TOKEN	src/game/g_public.h	/^  G_GET_ENTITY_TOKEN, \/\/ qboolean ( char *buffer, int bufferSize )$/;"	e	enum:__anon363
G_GET_SERVERINFO	src/game/g_public.h	/^  G_GET_SERVERINFO, \/\/ ( char *buffer, int bufferSize );$/;"	e	enum:__anon363
G_GET_USERCMD	src/game/g_public.h	/^  G_GET_USERCMD,  \/\/ ( int clientNum, usercmd_t *cmd )$/;"	e	enum:__anon363
G_GET_USERINFO	src/game/g_public.h	/^  G_GET_USERINFO,   \/\/ ( int num, char *buffer, int bufferSize );$/;"	e	enum:__anon363
G_GetBuildPoints	src/game/g_buildable.c	/^int G_GetBuildPoints( const vec3_t pos, team_t team )$/;"	f
G_GetMarkedBuildPoints	src/game/g_buildable.c	/^int G_GetMarkedBuildPoints( playerState_t *ps )$/;"	f
G_GetPlayMapPoolLength	src/game/g_playmap.c	/^int G_GetPlayMapPoolLength( void )$/;"	f
G_GetPlayMapQueueIndexByClient	src/game/g_playmap.c	/^int G_GetPlayMapQueueIndexByClient( char *clientName )$/;"	f
G_GetPlayMapQueueIndexByMapName	src/game/g_playmap.c	/^int G_GetPlayMapQueueIndexByMapName( char *mapName )$/;"	f
G_GetPlayMapQueueLength	src/game/g_playmap.c	/^int G_GetPlayMapQueueLength( void )$/;"	f
G_GetPlayerModelSkins	src/game/g_playermodel.c	/^void G_GetPlayerModelSkins( const char *modelname, char skins[][ 64 ],$/;"	f
G_GetPosInSpawnQueue	src/game/g_main.c	/^int G_GetPosInSpawnQueue( spawnQueue_t *sq, int clientNum )$/;"	f
G_GetSpawnQueueLength	src/game/g_main.c	/^int G_GetSpawnQueueLength( spawnQueue_t *sq )$/;"	f
G_GiveClientMaxAmmo	src/game/g_weapon.c	/^void G_GiveClientMaxAmmo( gentity_t *ent, qboolean buyingEnergyAmmo )$/;"	f
G_GotoLabel	src/game/g_maprotation.c	/^static qboolean G_GotoLabel( int rotation, int nodeIndex, char *name,$/;"	f	file:
G_IN_PVS	src/game/g_public.h	/^  G_IN_PVS,     \/\/ ( const vec3_t p1, const vec3_t p2 );$/;"	e	enum:__anon363
G_IN_PVS_IGNORE_PORTALS	src/game/g_public.h	/^  G_IN_PVS_IGNORE_PORTALS,  \/\/ ( const vec3_t p1, const vec3_t p2 );$/;"	e	enum:__anon363
G_IdlePowerState	src/game/g_buildable.c	/^static void G_IdlePowerState( gentity_t *self )$/;"	f	file:
G_InPowerZone	src/game/g_buildable.c	/^gentity_t *G_InPowerZone( gentity_t *self )$/;"	f
G_InitDamageLocations	src/game/g_combat.c	/^void G_InitDamageLocations( void )$/;"	f
G_InitGame	src/game/g_main.c	/^void G_InitGame( int levelTime, int randomSeed, int restart )$/;"	f
G_InitGentity	src/game/g_utils.c	/^void G_InitGentity( gentity_t *e )$/;"	f
G_InitMapRotations	src/game/g_maprotation.c	/^void G_InitMapRotations( void )$/;"	f
G_InitPlayMapQueue	src/game/g_playmap.c	/^void G_InitPlayMapQueue( void )$/;"	f
G_InitPlayerModel	src/game/g_playermodel.c	/^void G_InitPlayerModel(void)$/;"	f
G_InitSessionData	src/game/g_session.c	/^void G_InitSessionData( gclient_t *client, char *userinfo )$/;"	f
G_InitSpawnQueue	src/game/g_main.c	/^void G_InitSpawnQueue( spawnQueue_t *sq )$/;"	f
G_IsCreepHere	src/game/g_buildable.c	/^static qboolean G_IsCreepHere( vec3_t origin )$/;"	f	file:
G_IsDCCBuilt	src/game/g_buildable.c	/^qboolean G_IsDCCBuilt( void )$/;"	f
G_IsEmoticon	src/game/g_client.c	/^static qboolean G_IsEmoticon( const char *s, qboolean *escaped )$/;"	f	file:
G_IsOvermindCreepHere	src/game/g_buildable.c	/^static qboolean G_IsOvermindCreepHere( vec3_t point )$/;"	f	file:
G_IsPowered	src/game/g_buildable.c	/^buildable_t G_IsPowered( vec3_t origin )$/;"	f
G_IsValidPlayerModel	src/game/g_playermodel.c	/^qboolean G_IsValidPlayerModel(const char *model)$/;"	f
G_IssueMapChange	src/game/g_maprotation.c	/^static void G_IssueMapChange( int index, int rotation )$/;"	f	file:
G_KillBox	src/game/g_utils.c	/^void G_KillBox( gentity_t *ent )$/;"	f
G_Knockback	src/game/g_combat.c	/^void G_Knockback( gentity_t *targ, vec3_t dir, int knockback )$/;"	f
G_LINKENTITY	src/game/g_public.h	/^  G_LINKENTITY,   \/\/ ( gentity_t *ent );$/;"	e	enum:__anon363
G_LOCATE_GAME_DATA	src/game/g_public.h	/^  G_LOCATE_GAME_DATA,   \/\/ ( gentity_t *gEnts, int numGEntities, int sizeofGEntity_t,$/;"	e	enum:__anon363
G_LabelExists	src/game/g_maprotation.c	/^static qboolean G_LabelExists( int rotation, char *name )$/;"	f	file:
G_LayoutBuildItem	src/game/g_buildable.c	/^static void G_LayoutBuildItem( buildable_t buildable, vec3_t origin,$/;"	f	file:
G_LayoutExists	src/game/g_maprotation.c	/^qboolean G_LayoutExists( const char *map, const char *layout )$/;"	f
G_LayoutList	src/game/g_buildable.c	/^int G_LayoutList( const char *map, char *list, int len )$/;"	f
G_LayoutLoad	src/game/g_buildable.c	/^void G_LayoutLoad( char *lstr )$/;"	f
G_LayoutSave	src/game/g_buildable.c	/^void G_LayoutSave( char *lstr )$/;"	f
G_LayoutSelect	src/game/g_buildable.c	/^void G_LayoutSelect( void )$/;"	f
G_LeaveTeam	src/game/g_team.c	/^void G_LeaveTeam( gentity_t *self )$/;"	f
G_LevelReady	src/game/g_main.c	/^void G_LevelReady( void )$/;"	f
G_LevelRestart	src/game/g_main.c	/^void G_LevelRestart( qboolean stopWarmup )$/;"	f
G_ListCommands	src/game/g_cmds.c	/^void G_ListCommands( gentity_t *ent )$/;"	f
G_LoadCensors	src/game/g_cmds.c	/^void G_LoadCensors( void )$/;"	f
G_LogDestruction	src/game/g_combat.c	/^void G_LogDestruction( gentity_t *self, gentity_t *actor, int mod )$/;"	f
G_LogPrintf	src/game/g_main.c	/^void QDECL G_LogPrintf( const char *fmt, ... )$/;"	f
G_MILLISECONDS	src/game/g_public.h	/^  G_MILLISECONDS, \/\/ ( void );$/;"	e	enum:__anon363
G_MapConfigs	src/game/g_main.c	/^void G_MapConfigs( const char *mapname )$/;"	f
G_MapExists	src/game/g_maprotation.c	/^qboolean G_MapExists( const char *name )$/;"	f
G_MapRotationActive	src/game/g_maprotation.c	/^qboolean G_MapRotationActive( void )$/;"	f
G_MissileImpact	src/game/g_missile.c	/^void G_MissileImpact( gentity_t *ent, trace_t *trace )$/;"	f
G_ModelIndex	src/game/g_utils.c	/^int G_ModelIndex( const char *name )$/;"	f
G_MoverPush	src/game/g_mover.c	/^qboolean G_MoverPush( gentity_t *pusher, vec3_t move, vec3_t amove, gentity_t **obstacle )$/;"	f
G_MoverTeam	src/game/g_mover.c	/^void G_MoverTeam( gentity_t *ent )$/;"	f
G_NamelogFromString	src/game/g_admin.c	/^namelog_t *G_NamelogFromString( gentity_t *ent, char *s )$/;"	f
G_NewString	src/game/g_spawn.c	/^char *G_NewString( const char *string )$/;"	f
G_NextPlayMap	src/game/g_playmap.c	/^void G_NextPlayMap( void )$/;"	f
G_NextQueueTime	src/game/g_buildable.c	/^int G_NextQueueTime( int queuedBP, int totalBP, int queueBaseRate )$/;"	f
G_NodeByIndex	src/game/g_maprotation.c	/^static node_t *G_NodeByIndex( int index, int rotation )$/;"	f	file:
G_NodeIndexAfter	src/game/g_maprotation.c	/^static int G_NodeIndexAfter( int currentNode, int rotation )$/;"	f	file:
G_NonSegModel	src/game/g_client.c	/^static qboolean G_NonSegModel( const char *filename )$/;"	f	file:
G_Overmind	src/game/g_buildable.c	/^gentity_t *G_Overmind( void )$/;"	f
G_PARSE_ADD_GLOBAL_DEFINE	src/game/g_public.h	/^  G_PARSE_ADD_GLOBAL_DEFINE,$/;"	e	enum:__anon363
G_PARSE_FREE_SOURCE	src/game/g_public.h	/^  G_PARSE_FREE_SOURCE,$/;"	e	enum:__anon363
G_PARSE_LOAD_SOURCE	src/game/g_public.h	/^  G_PARSE_LOAD_SOURCE,$/;"	e	enum:__anon363
G_PARSE_READ_TOKEN	src/game/g_public.h	/^  G_PARSE_READ_TOKEN,$/;"	e	enum:__anon363
G_PARSE_SOURCE_FILE_AND_LINE	src/game/g_public.h	/^  G_PARSE_SOURCE_FILE_AND_LINE,$/;"	e	enum:__anon363
G_POINT_CONTENTS	src/game/g_public.h	/^  G_POINT_CONTENTS, \/\/ ( const vec3_t point, int passEntityNum );$/;"	e	enum:__anon363
G_PRINT	src/game/g_public.h	/^  G_PRINT,    \/\/ ( const char *string );$/;"	e	enum:__anon363
G_ParseCSVBuildablePlusList	src/game/g_buildable.c	/^void G_ParseCSVBuildablePlusList( const char *string, int *buildables, int buildablesSize )$/;"	f
G_ParseDmgScript	src/game/g_combat.c	/^static int G_ParseDmgScript( damageRegion_t *regions, char *buf )$/;"	f	file:
G_ParseField	src/game/g_spawn.c	/^void G_ParseField( const char *key, const char *value, gentity_t *ent )$/;"	f
G_ParseMapCommandSection	src/game/g_maprotation.c	/^static qboolean G_ParseMapCommandSection( node_t *node, char **text_p )$/;"	f	file:
G_ParseMapRotation	src/game/g_maprotation.c	/^static qboolean G_ParseMapRotation( mapRotation_t *mr, char **text_p )$/;"	f	file:
G_ParseMapRotationFile	src/game/g_maprotation.c	/^static qboolean G_ParseMapRotationFile( const char *fileName )$/;"	f	file:
G_ParseNode	src/game/g_maprotation.c	/^static qboolean G_ParseNode( node_t **node, char *token, char **text_p, qboolean conditional )$/;"	f	file:
G_ParsePlayMapFlag	src/game/g_playmap.c	/^playMapFlag_t G_ParsePlayMapFlag(gentity_t *ent, char *flag)$/;"	f
G_ParsePlayMapFlagTokens	src/game/g_playmap.c	/^int G_ParsePlayMapFlagTokens( gentity_t *ent, char *flags )$/;"	f
G_ParseSpawnVars	src/game/g_spawn.c	/^qboolean G_ParseSpawnVars( void )$/;"	f
G_ParticleSystemIndex	src/game/g_utils.c	/^int G_ParticleSystemIndex( const char *name )$/;"	f
G_PeekSpawnQueue	src/game/g_main.c	/^int G_PeekSpawnQueue( spawnQueue_t *sq )$/;"	f
G_Physics	src/game/g_physics.c	/^void G_Physics( gentity_t *ent, int msec )$/;"	f
G_PickTarget	src/game/g_utils.c	/^gentity_t *G_PickTarget( char *targetname )$/;"	f
G_PlayMapActive	src/game/g_playmap.c	/^qboolean G_PlayMapActive( void )$/;"	f
G_PlayMapEnqueue	src/game/g_playmap.c	/^playMapError_t G_PlayMapEnqueue( char *mapName, char *layout,$/;"	f
G_PlayMapErrorByCode	src/game/g_playmap.c	/^playMapError_t G_PlayMapErrorByCode( int errorCode )$/;"	f
G_PlayMapFlags2String	src/game/g_playmap.c	/^char *G_PlayMapFlags2String( int flags )$/;"	f
G_PlayerHasUnexplodedGrenades	src/game/g_missile.c	/^qboolean G_PlayerHasUnexplodedGrenades( gentity_t *player )$/;"	f
G_PopFromPlayMapQueue	src/game/g_playmap.c	/^playMap_t *G_PopFromPlayMapQueue( void )$/;"	f
G_PopRotationStack	src/game/g_maprotation.c	/^static int G_PopRotationStack( void )$/;"	f	file:
G_PopSpawnQueue	src/game/g_main.c	/^int G_PopSpawnQueue( spawnQueue_t *sq )$/;"	f
G_PowerEntityForEntity	src/game/g_buildable.c	/^gentity_t *G_PowerEntityForEntity( gentity_t *ent )$/;"	f
G_PowerEntityForPoint	src/game/g_buildable.c	/^gentity_t *G_PowerEntityForPoint( const vec3_t origin )$/;"	f
G_PrintPlayMapPool	src/game/g_playmap.c	/^void G_PrintPlayMapPool( gentity_t *ent, int page )$/;"	f
G_PrintPlayMapQueue	src/game/g_playmap.c	/^void G_PrintPlayMapQueue( gentity_t *ent )$/;"	f
G_PrintRotations	src/game/g_maprotation.c	/^void G_PrintRotations( void )$/;"	f
G_PrintSpaces	src/game/g_maprotation.c	/^static void G_PrintSpaces( int spaces )$/;"	f	file:
G_PrintSpawnQueue	src/game/g_main.c	/^void G_PrintSpawnQueue( spawnQueue_t *sq )$/;"	f
G_Printf	src/game/g_main.c	/^void QDECL G_Printf( const char *fmt, ... )$/;"	f
G_PuntBlocker	src/game/g_buildable.c	/^static void G_PuntBlocker( gentity_t *self, gentity_t *blocker )$/;"	f	file:
G_PushRotationStack	src/game/g_maprotation.c	/^static void G_PushRotationStack( int rotation )$/;"	f	file:
G_PushSpawnQueue	src/game/g_main.c	/^qboolean G_PushSpawnQueue( spawnQueue_t *sq, int clientNum )$/;"	f
G_QueueBuildPoints	src/game/g_buildable.c	/^void G_QueueBuildPoints( gentity_t *self )$/;"	f
G_QueueValue	src/game/g_buildable.c	/^static int G_QueueValue( gentity_t *self )$/;"	f	file:
G_REAL_TIME	src/game/g_public.h	/^  G_REAL_TIME,$/;"	e	enum:__anon363
G_REMOVECOMMAND	src/game/g_public.h	/^  G_REMOVECOMMAND,$/;"	e	enum:__anon363
G_RadiusDamage	src/game/g_combat.c	/^qboolean G_RadiusDamage( vec3_t origin, gentity_t *attacker, float damage,$/;"	f
G_Reactor	src/game/g_buildable.c	/^gentity_t *G_Reactor( void )$/;"	f
G_ReadSessionData	src/game/g_session.c	/^void G_ReadSessionData( gclient_t *client )$/;"	f
G_RegisterCommands	src/game/g_svcmds.c	/^void G_RegisterCommands( void )$/;"	f
G_RegisterCvars	src/game/g_main.c	/^void G_RegisterCvars( void )$/;"	f
G_ReloadPlayMapPool	src/game/g_playmap.c	/^playMapError_t G_ReloadPlayMapPool( void )$/;"	f
G_ReloadPlayMapQueue	src/game/g_playmap.c	/^playMapError_t G_ReloadPlayMapQueue( void )$/;"	f
G_RemoveBuildableFromStack	src/game/g_buildable.c	/^void G_RemoveBuildableFromStack( int groundBuildableNum, int stackedBuildableNum )$/;"	f
G_RemoveEntity	src/game/g_utils.c	/^void G_RemoveEntity( gentity_t *ent )$/;"	f
G_RemoveFromPlayMapPool	src/game/g_playmap.c	/^playMapError_t G_RemoveFromPlayMapPool( char *mapName )$/;"	f
G_RemoveFromPlayMapQueue	src/game/g_playmap.c	/^playMapError_t G_RemoveFromPlayMapQueue( int index )$/;"	f
G_RemoveFromSpawnQueue	src/game/g_main.c	/^qboolean G_RemoveFromSpawnQueue( spawnQueue_t *sq, int clientNum )$/;"	f
G_RemoveRangeMarkerFrom	src/game/g_buildable.c	/^void G_RemoveRangeMarkerFrom( gentity_t *self )$/;"	f
G_RestoreCvars	src/game/g_main.c	/^void G_RestoreCvars( void )$/;"	f
G_RewardAttackers	src/game/g_combat.c	/^float G_RewardAttackers( gentity_t *self )$/;"	f
G_RoomForClassChange	src/game/g_cmds.c	/^static qboolean G_RoomForClassChange( gentity_t *ent, class_t class,$/;"	f	file:
G_RotatePoint	src/game/g_mover.c	/^void G_RotatePoint( vec3_t point, vec3_t matrix[ 3 ] )$/;"	f
G_RotationExists	src/game/g_maprotation.c	/^static qboolean G_RotationExists( char *name )$/;"	f	file:
G_RotationNameByIndex	src/game/g_maprotation.c	/^static char *G_RotationNameByIndex( int index )$/;"	f	file:
G_RunClient	src/game/g_active.c	/^void G_RunClient( gentity_t *ent )$/;"	f
G_RunFrame	src/game/g_main.c	/^void G_RunFrame( int levelTime )$/;"	f
G_RunMissile	src/game/g_missile.c	/^void G_RunMissile( gentity_t *ent )$/;"	f
G_RunMover	src/game/g_mover.c	/^void G_RunMover( gentity_t *ent )$/;"	f
G_RunThink	src/game/g_main.c	/^void G_RunThink( gentity_t *ent )$/;"	f
G_SEND_CONSOLE_COMMAND	src/game/g_public.h	/^  G_SEND_CONSOLE_COMMAND, \/\/ ( const char *text );$/;"	e	enum:__anon363
G_SEND_GAMESTAT	src/game/g_public.h	/^  G_SEND_GAMESTAT,$/;"	e	enum:__anon363
G_SEND_SERVER_COMMAND	src/game/g_public.h	/^  G_SEND_SERVER_COMMAND,  \/\/ ( int clientNum, const char *fmt, ... );$/;"	e	enum:__anon363
G_SET_BRUSH_MODEL	src/game/g_public.h	/^  G_SET_BRUSH_MODEL,  \/\/ ( gentity_t *ent, const char *name );$/;"	e	enum:__anon363
G_SET_CONFIGSTRING	src/game/g_public.h	/^  G_SET_CONFIGSTRING, \/\/ ( int num, const char *string );$/;"	e	enum:__anon363
G_SET_CONFIGSTRING_RESTRICTIONS	src/game/g_public.h	/^  G_SET_CONFIGSTRING_RESTRICTIONS, \/\/ ( int num, const clientList* clientList );$/;"	e	enum:__anon363
G_SET_USERINFO	src/game/g_public.h	/^  G_SET_USERINFO,   \/\/ ( int num, const char *buffer );$/;"	e	enum:__anon363
G_SL_QUERY	src/game/g_public.h	/^  G_SL_QUERY,$/;"	e	enum:__anon363
G_SNAPVECTOR	src/game/g_public.h	/^  G_SNAPVECTOR,$/;"	e	enum:__anon363
G_SanitiseString	src/game/g_cmds.c	/^void G_SanitiseString( char *in, char *out, int len )$/;"	f
G_SavePlayMapPool	src/game/g_playmap.c	/^playMapError_t G_SavePlayMapPool( void )$/;"	f
G_SavePlayMapQueue	src/game/g_playmap.c	/^playMapError_t G_SavePlayMapQueue( void )$/;"	f
G_Say	src/game/g_cmds.c	/^void G_Say( gentity_t *ent, saymode_t mode, const char *chatText )$/;"	f
G_SayTo	src/game/g_cmds.c	/^static qboolean G_SayTo( gentity_t *ent, gentity_t *other, saymode_t mode, const char *message )$/;"	f	file:
G_SearchSpawnQueue	src/game/g_main.c	/^qboolean G_SearchSpawnQueue( spawnQueue_t *sq, int clientNum )$/;"	f
G_SelectAlienLockSpawnPoint	src/game/g_client.c	/^gentity_t *G_SelectAlienLockSpawnPoint( vec3_t origin, vec3_t angles )$/;"	f
G_SelectHumanLockSpawnPoint	src/game/g_client.c	/^gentity_t *G_SelectHumanLockSpawnPoint( vec3_t origin, vec3_t angles )$/;"	f
G_SelectRandomFurthestSpawnPoint	src/game/g_client.c	/^static gentity_t *G_SelectRandomFurthestSpawnPoint ( vec3_t avoidPoint, vec3_t origin, vec3_t angles )$/;"	f	file:
G_SelectSpawnBuildable	src/game/g_client.c	/^static gentity_t *G_SelectSpawnBuildable( vec3_t preference, buildable_t buildable )$/;"	f	file:
G_SelectSpawnPoint	src/game/g_client.c	/^gentity_t *G_SelectSpawnPoint( vec3_t avoidPoint, vec3_t origin, vec3_t angles )$/;"	f
G_SelectSpectatorSpawnPoint	src/game/g_client.c	/^static gentity_t *G_SelectSpectatorSpawnPoint( vec3_t origin, vec3_t angles )$/;"	f	file:
G_SelectTremulousSpawnPoint	src/game/g_client.c	/^gentity_t *G_SelectTremulousSpawnPoint( team_t team, vec3_t preference, vec3_t origin, vec3_t angles )$/;"	f
G_SelectiveDamage	src/game/g_combat.c	/^void G_SelectiveDamage( gentity_t *targ, gentity_t *inflictor, gentity_t *attacker,$/;"	f
G_SelectiveRadiusDamage	src/game/g_combat.c	/^qboolean G_SelectiveRadiusDamage( vec3_t origin, gentity_t *attacker, float damage,$/;"	f
G_SetBuildableAnim	src/game/g_buildable.c	/^void G_SetBuildableAnim( gentity_t *ent, buildableAnimNumber_t anim, qboolean force )$/;"	f
G_SetBuildableDropper	src/game/g_buildable.c	/^void G_SetBuildableDropper( int removedBuildableNum, int dropperNum )$/;"	f
G_SetBuildableLinkState	src/game/g_buildable.c	/^static void G_SetBuildableLinkState( qboolean link )$/;"	f	file:
G_SetBuildableMarkedLinkState	src/game/g_buildable.c	/^static void G_SetBuildableMarkedLinkState( qboolean link )$/;"	f	file:
G_SetClientSound	src/game/g_active.c	/^void G_SetClientSound( gentity_t *ent )$/;"	f
G_SetClientViewAngle	src/game/g_client.c	/^void G_SetClientViewAngle( gentity_t *ent, const vec3_t angle )$/;"	f
G_SetCurrentNodeByIndex	src/game/g_maprotation.c	/^static void G_SetCurrentNodeByIndex( int currentNode, int rotation )$/;"	f	file:
G_SetIdleBuildableAnim	src/game/g_buildable.c	/^void G_SetIdleBuildableAnim( gentity_t *ent, buildableAnimNumber_t anim )$/;"	f
G_SetMovedir	src/game/g_utils.c	/^void G_SetMovedir( vec3_t angles, vec3_t movedir )$/;"	f
G_SetOrigin	src/game/g_utils.c	/^void G_SetOrigin( gentity_t *ent, const vec3_t origin )$/;"	f
G_ShaderIndex	src/game/g_utils.c	/^int G_ShaderIndex( const char *name )$/;"	f
G_ShutdownGame	src/game/g_main.c	/^void G_ShutdownGame( int restart )$/;"	f
G_ShutdownMapRotations	src/game/g_maprotation.c	/^void G_ShutdownMapRotations( void )$/;"	f
G_SingleLineString	src/game/g_cmds.c	/^void G_SingleLineString( char *in, char *out, int len )$/;"	f
G_SortPlayMapPool	src/game/g_playmap.c	/^void G_SortPlayMapPool( void )$/;"	f
G_Sound	src/game/g_utils.c	/^void G_Sound( gentity_t *ent, int channel, int soundIndex )$/;"	f
G_SoundIndex	src/game/g_utils.c	/^int G_SoundIndex( const char *name )$/;"	f
G_Spawn	src/game/g_utils.c	/^gentity_t *G_Spawn( void )$/;"	f
G_SpawnBuildable	src/game/g_buildable.c	/^void G_SpawnBuildable( gentity_t *ent, buildable_t buildable )$/;"	f
G_SpawnBuildableThink	src/game/g_buildable.c	/^static void G_SpawnBuildableThink( gentity_t *ent )$/;"	f	file:
G_SpawnClients	src/game/g_main.c	/^void G_SpawnClients( team_t team )$/;"	f
G_SpawnEntitiesFromString	src/game/g_spawn.c	/^void G_SpawnEntitiesFromString( void )$/;"	f
G_SpawnFloat	src/game/g_spawn.c	/^qboolean  G_SpawnFloat( const char *key, const char *defaultString, float *out )$/;"	f
G_SpawnGEntityFromSpawnVars	src/game/g_spawn.c	/^void G_SpawnGEntityFromSpawnVars( void )$/;"	f
G_SpawnInt	src/game/g_spawn.c	/^qboolean G_SpawnInt( const char *key, const char *defaultString, int *out )$/;"	f
G_SpawnIntermissionViewOverride	src/game/g_buildable.c	/^static void G_SpawnIntermissionViewOverride( char *cn, vec3_t origin, vec3_t angles )$/;"	f	file:
G_SpawnString	src/game/g_spawn.c	/^qboolean G_SpawnString( const char *key, const char *defaultString, char **out )$/;"	f
G_SpawnVector	src/game/g_spawn.c	/^qboolean  G_SpawnVector( const char *key, const char *defaultString, float *out )$/;"	f
G_SpawnVector4	src/game/g_spawn.c	/^qboolean  G_SpawnVector4( const char *key, const char *defaultString, float *out )$/;"	f
G_StartMapRotation	src/game/g_maprotation.c	/^qboolean G_StartMapRotation( char *name, qboolean advance,$/;"	f
G_StepMapRotation	src/game/g_maprotation.c	/^qboolean G_StepMapRotation( int rotation, int nodeIndex, int depth )$/;"	f
G_StopFollowing	src/game/g_cmds.c	/^void G_StopFollowing( gentity_t *ent )$/;"	f
G_StopFromFollowing	src/game/g_cmds.c	/^void G_StopFromFollowing( gentity_t *ent )$/;"	f
G_StopMapRotation	src/game/g_maprotation.c	/^void G_StopMapRotation( void )$/;"	f
G_SufficientBPAvailable	src/game/g_buildable.c	/^static itemBuildError_t G_SufficientBPAvailable( buildable_t     buildable,$/;"	f	file:
G_SuffocateTrappedEntities	src/game/g_buildable.c	/^void G_SuffocateTrappedEntities( gentity_t *self )$/;"	f
G_TRACE	src/game/g_public.h	/^  G_TRACE,  \/\/ ( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask );$/;"	e	enum:__anon363
G_TRACECAPSULE	src/game/g_public.h	/^  G_TRACECAPSULE, \/\/ ( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask );$/;"	e	enum:__anon363
G_TeamCommand	src/game/g_team.c	/^void G_TeamCommand( team_t team, char *cmd )$/;"	f
G_TeamFromString	src/game/g_team.c	/^team_t G_TeamFromString( char *str )$/;"	f
G_TempEntity	src/game/g_utils.c	/^gentity_t *G_TempEntity( const vec3_t origin, int event )$/;"	f
G_TestEntityPosition	src/game/g_mover.c	/^gentity_t *G_TestEntityPosition( gentity_t *ent )$/;"	f
G_TimeTilSuddenDeath	src/game/g_main.c	/^int G_TimeTilSuddenDeath( void )$/;"	f
G_ToggleFollow	src/game/g_cmds.c	/^void G_ToggleFollow( gentity_t *ent )$/;"	f
G_TouchTriggers	src/game/g_active.c	/^void  G_TouchTriggers( gentity_t *ent )$/;"	f
G_TransposeMatrix	src/game/g_mover.c	/^void G_TransposeMatrix( vec3_t matrix[ 3 ], vec3_t transpose[ 3 ] )$/;"	f
G_TriggerMenu	src/game/g_utils.c	/^void G_TriggerMenu( int clientNum, dynMenu_t menu )$/;"	f
G_TriggerMenuArgs	src/game/g_utils.c	/^void G_TriggerMenuArgs( int clientNum, dynMenu_t menu, int arg )$/;"	f
G_TryPushingEntity	src/game/g_mover.c	/^qboolean G_TryPushingEntity( gentity_t *check, gentity_t *pusher, vec3_t move, vec3_t amove )$/;"	f
G_UNLINKENTITY	src/game/g_public.h	/^  G_UNLINKENTITY,   \/\/ ( gentity_t *ent );$/;"	e	enum:__anon363
G_UnEscapeString	src/game/g_cmds.c	/^void G_UnEscapeString( char *in, char *out, int len )$/;"	f
G_UnlaggedCalc	src/game/g_active.c	/^void G_UnlaggedCalc( int time, gentity_t *rewindEnt )$/;"	f
G_UnlaggedClear	src/game/g_active.c	/^void G_UnlaggedClear( gentity_t *ent )$/;"	f
G_UnlaggedDetectCollisions	src/game/g_active.c	/^static void G_UnlaggedDetectCollisions( gentity_t *ent )$/;"	f	file:
G_UnlaggedOff	src/game/g_active.c	/^void G_UnlaggedOff( void )$/;"	f
G_UnlaggedOn	src/game/g_active.c	/^void G_UnlaggedOn( gentity_t *attacker, vec3_t muzzle, float range )$/;"	f
G_UnlaggedStore	src/game/g_active.c	/^void G_UnlaggedStore( void )$/;"	f
G_UnregisterCommands	src/game/g_svcmds.c	/^void G_UnregisterCommands( void )$/;"	f
G_UpdateBuildableRangeMarkers	src/game/g_buildable.c	/^void G_UpdateBuildableRangeMarkers( void )$/;"	f
G_UpdateCvars	src/game/g_main.c	/^void G_UpdateCvars( void )$/;"	f
G_UpdateTeamConfigStrings	src/game/g_team.c	/^void G_UpdateTeamConfigStrings( void )$/;"	f
G_UpdateZapEffect	src/game/g_weapon.c	/^static void G_UpdateZapEffect( zap_t *zap )$/;"	f	file:
G_UpdateZaps	src/game/g_weapon.c	/^void G_UpdateZaps( int msec )$/;"	f
G_UseTargets	src/game/g_utils.c	/^void G_UseTargets( gentity_t *ent, gentity_t *activator )$/;"	f
G_ValidatePlayMapQueue	src/game/g_playmap.c	/^playMapError_t G_ValidatePlayMapQueue( void )$/;"	f
G_Visible	src/game/g_utils.c	/^qboolean G_Visible( gentity_t *ent1, gentity_t *ent2, int contents )$/;"	f
G_Vote	src/game/g_main.c	/^void G_Vote( gentity_t *ent, team_t team, qboolean voting )$/;"	f
G_WideTrace	src/game/g_weapon.c	/^static void G_WideTrace( trace_t *tr, gentity_t *ent, float range,$/;"	f	file:
G_WriteClientSessionData	src/game/g_session.c	/^void G_WriteClientSessionData( gclient_t *client )$/;"	f
G_WriteSessionData	src/game/g_session.c	/^void G_WriteSessionData( void )$/;"	f
G_admin_addlayout	src/game/g_admin.c	/^qboolean G_admin_addlayout( gentity_t *ent )$/;"	f
G_admin_adjustban	src/game/g_admin.c	/^qboolean G_admin_adjustban( gentity_t *ent )$/;"	f
G_admin_admin	src/game/g_admin.c	/^g_admin_admin_t *G_admin_admin( const char *guid )$/;"	f
G_admin_adminhelp	src/game/g_admin.c	/^qboolean G_admin_adminhelp( gentity_t *ent )$/;"	f
G_admin_admintest	src/game/g_admin.c	/^qboolean G_admin_admintest( gentity_t *ent )$/;"	f
G_admin_allready	src/game/g_admin.c	/^qboolean G_admin_allready( gentity_t *ent )$/;"	f
G_admin_authlog	src/game/g_admin.c	/^void G_admin_authlog( gentity_t *ent )$/;"	f
G_admin_ban	src/game/g_admin.c	/^qboolean G_admin_ban( gentity_t *ent )$/;"	f
G_admin_ban_check	src/game/g_admin.c	/^qboolean G_admin_ban_check( gentity_t *ent, char *reason, int rlen )$/;"	f
G_admin_ban_matches	src/game/g_admin.c	/^static qboolean G_admin_ban_matches( g_admin_ban_t *ban, gentity_t *ent )$/;"	f	file:
G_admin_ban_message	src/game/g_admin.c	/^static void G_admin_ban_message($/;"	f	file:
G_admin_buffer_begin	src/game/g_admin.c	/^void G_admin_buffer_begin( void )$/;"	f
G_admin_buffer_end	src/game/g_admin.c	/^void G_admin_buffer_end( gentity_t *ent )$/;"	f
G_admin_buffer_print	src/game/g_admin.c	/^void G_admin_buffer_print( gentity_t *ent, char *m )$/;"	f
G_admin_builder	src/game/g_admin.c	/^qboolean G_admin_builder( gentity_t *ent )$/;"	f
G_admin_buildlog	src/game/g_admin.c	/^qboolean G_admin_buildlog( gentity_t *ent )$/;"	f
G_admin_changemap	src/game/g_admin.c	/^qboolean G_admin_changemap( gentity_t *ent )$/;"	f
G_admin_cleanup	src/game/g_admin.c	/^void G_admin_cleanup( void )$/;"	f
G_admin_cmd	src/game/g_admin.c	/^g_admin_cmd_t *G_admin_cmd( const char *cmd )$/;"	f
G_admin_cmd_check	src/game/g_admin.c	/^qboolean G_admin_cmd_check( gentity_t *ent )$/;"	f
G_admin_cmdlist	src/game/g_admin.c	/^void G_admin_cmdlist( gentity_t *ent )$/;"	f
G_admin_command	src/game/g_admin.c	/^g_admin_command_t *G_admin_command( const char *cmd )$/;"	f
G_admin_denybuild	src/game/g_admin.c	/^qboolean G_admin_denybuild( gentity_t *ent )$/;"	f
G_admin_duration	src/game/g_admin.c	/^void G_admin_duration( int secs, char *duration, int dursize )$/;"	f
G_admin_endvote	src/game/g_admin.c	/^qboolean G_admin_endvote( gentity_t *ent )$/;"	f
G_admin_explode	src/game/g_admin.c	/^qboolean G_admin_explode( gentity_t *ent )$/;"	f
G_admin_flag	src/game/g_admin.c	/^qboolean G_admin_flag( gentity_t *ent )$/;"	f
G_admin_gamedir	src/game/g_admin.c	/^qboolean G_admin_gamedir( gentity_t *ent )$/;"	f
G_admin_kick	src/game/g_admin.c	/^qboolean G_admin_kick( gentity_t *ent )$/;"	f
G_admin_layoutsave	src/game/g_admin.c	/^qboolean G_admin_layoutsave( gentity_t *ent )$/;"	f
G_admin_level	src/game/g_admin.c	/^g_admin_level_t *G_admin_level( const int l )$/;"	f
G_admin_listadmins	src/game/g_admin.c	/^qboolean G_admin_listadmins( gentity_t *ent )$/;"	f
G_admin_listflags	src/game/g_admin.c	/^qboolean G_admin_listflags( gentity_t * ent )$/;"	f
G_admin_listlayouts	src/game/g_admin.c	/^qboolean G_admin_listlayouts( gentity_t *ent )$/;"	f
G_admin_listplayers	src/game/g_admin.c	/^qboolean G_admin_listplayers( gentity_t *ent )$/;"	f
G_admin_lock	src/game/g_admin.c	/^qboolean G_admin_lock( gentity_t *ent )$/;"	f
G_admin_maplog	src/game/g_admin.c	/^qboolean G_admin_maplog( gentity_t *ent )$/;"	f
G_admin_match_ban	src/game/g_admin.c	/^static g_admin_ban_t *G_admin_match_ban( gentity_t *ent )$/;"	f	file:
G_admin_mute	src/game/g_admin.c	/^qboolean G_admin_mute( gentity_t *ent )$/;"	f
G_admin_name_check	src/game/g_admin.c	/^qboolean G_admin_name_check( gentity_t *ent, char *name, char *err, int len )$/;"	f
G_admin_namelog	src/game/g_admin.c	/^qboolean G_admin_namelog( gentity_t *ent )$/;"	f
G_admin_nextmap	src/game/g_admin.c	/^qboolean G_admin_nextmap( gentity_t *ent )$/;"	f
G_admin_parse_time	src/game/g_admin.c	/^int G_admin_parse_time( const char *time )$/;"	f
G_admin_pause	src/game/g_admin.c	/^qboolean G_admin_pause( gentity_t *ent )$/;"	f
G_admin_permission	src/game/g_admin.c	/^qboolean G_admin_permission( gentity_t *ent, const char *flag )$/;"	f
G_admin_playpool	src/game/g_admin.c	/^qboolean G_admin_playpool( gentity_t *ent )$/;"	f
G_admin_print	src/game/g_admin.c	/^void G_admin_print( gentity_t *ent, char *m )$/;"	f
G_admin_putteam	src/game/g_admin.c	/^qboolean G_admin_putteam( gentity_t *ent )$/;"	f
G_admin_readconfig	src/game/g_admin.c	/^qboolean G_admin_readconfig( gentity_t *ent )$/;"	f
G_admin_register	src/game/g_admin.c	/^qboolean G_admin_register( gentity_t *ent )$/;"	f
G_admin_register_cmds	src/game/g_admin.c	/^void G_admin_register_cmds( void )$/;"	f
G_admin_rename	src/game/g_admin.c	/^qboolean G_admin_rename( gentity_t *ent )$/;"	f
G_admin_restart	src/game/g_admin.c	/^qboolean G_admin_restart( gentity_t *ent )$/;"	f
G_admin_revert	src/game/g_admin.c	/^qboolean G_admin_revert( gentity_t *ent )$/;"	f
G_admin_seen	src/game/g_admin.c	/^qboolean G_admin_seen( gentity_t *ent )$/;"	f
G_admin_setdevmode	src/game/g_admin.c	/^qboolean G_admin_setdevmode( gentity_t *ent )$/;"	f
G_admin_setivo	src/game/g_admin.c	/^qboolean G_admin_setivo( gentity_t* ent )$/;"	f
G_admin_setlevel	src/game/g_admin.c	/^qboolean G_admin_setlevel( gentity_t *ent )$/;"	f
G_admin_setnextmap	src/game/g_admin.c	/^qboolean G_admin_setnextmap( gentity_t *ent )$/;"	f
G_admin_showbans	src/game/g_admin.c	/^qboolean G_admin_showbans( gentity_t *ent )$/;"	f
G_admin_slap	src/game/g_admin.c	/^qboolean G_admin_slap( gentity_t *ent )$/;"	f
G_admin_spec999	src/game/g_admin.c	/^qboolean G_admin_spec999( gentity_t *ent )$/;"	f
G_admin_time	src/game/g_admin.c	/^qboolean G_admin_time( gentity_t *ent )$/;"	f
G_admin_transform	src/game/g_admin.c	/^qboolean G_admin_transform( gentity_t *ent )$/;"	f
G_admin_unban	src/game/g_admin.c	/^qboolean G_admin_unban( gentity_t *ent )$/;"	f
G_admin_unregister_cmds	src/game/g_admin.c	/^void G_admin_unregister_cmds( void )$/;"	f
G_admin_user_flag	src/game/g_admin.c	/^const char *G_admin_user_flag( char *oldflags, char *flag, qboolean add, qboolean clear,$/;"	f
G_admin_warn	src/game/g_admin.c	/^qboolean G_admin_warn( gentity_t *ent )$/;"	f
G_namelog_cleanup	src/game/g_namelog.c	/^void G_namelog_cleanup( void )$/;"	f
G_namelog_connect	src/game/g_namelog.c	/^void G_namelog_connect( gclient_t *client )$/;"	f
G_namelog_disconnect	src/game/g_namelog.c	/^void G_namelog_disconnect( gclient_t *client )$/;"	f
G_namelog_restore	src/game/g_namelog.c	/^void G_namelog_restore( gclient_t *client )$/;"	f
G_namelog_update_name	src/game/g_namelog.c	/^void G_namelog_update_name( gclient_t *client )$/;"	f
G_namelog_update_score	src/game/g_namelog.c	/^void G_namelog_update_score( gclient_t *client )$/;"	f
Gen	src/tools/lcc/src/c.h	/^	       Label,    Start,    Gen,   Jump,    Switch$/;"	e	enum:code::__anon290
GeneratePermanentShader	src/renderergl1/tr_shader.c	/^static shader_t *GeneratePermanentShader( void ) {$/;"	f	file:
GeneratePermanentShader	src/renderergl2/tr_shader.c	/^static shader_t *GeneratePermanentShader( void ) {$/;"	f	file:
GetClientMass	src/game/g_active.c	/^static int GetClientMass( gentity_t *ent )$/;"	f	file:
GetClientState	src/client/cl_ui.c	/^static void GetClientState( uiClientState_t *state ) {$/;"	f	file:
GetConfigString	src/client/cl_ui.c	/^static int GetConfigString(int index, char *buf, int size)$/;"	f	file:
GetEntityToken	src/renderercommon/tr_public.h	/^	qboolean (*GetEntityToken)( char *buffer, int size );$/;"	m	struct:__anon108
GetMoverTeamState	src/game/g_mover.c	/^moverState_t GetMoverTeamState( gentity_t *ent )$/;"	f
GetNews	src/client/cl_ui.c	/^qboolean GetNews( qboolean begin )$/;"	f
GetNoiseValue	src/renderercommon/tr_noise.c	/^static float GetNoiseValue( int x, int y, int z, int t )$/;"	f	file:
GetNonLocDamageModifier	src/game/g_combat.c	/^static float GetNonLocDamageModifier( gentity_t *targ, int class )$/;"	f	file:
GetPerpendicularViewVector	src/qcommon/q_math.c	/^void GetPerpendicularViewVector( const vec3_t point, const vec3_t p1, const vec3_t p2, vec3_t up )$/;"	f
GetPointDamageModifier	src/game/g_combat.c	/^static float GetPointDamageModifier( gentity_t *targ, damageRegion_t *regions,$/;"	f	file:
GetRefAPI	src/renderergl1/tr_init.c	/^Q_EXPORT refexport_t* QDECL GetRefAPI ( int apiVersion, refimport_t *rimp ) {$/;"	f
GetRefAPI	src/renderergl2/tr_init.c	/^Q_EXPORT refexport_t* QDECL GetRefAPI ( int apiVersion, refimport_t *rimp ) {$/;"	f
GetRefAPI_t	src/renderercommon/tr_public.h	/^typedef	refexport_t* (QDECL *GetRefAPI_t) (int apiVersion, refimport_t * rimp);$/;"	t
GetRegionDamageModifier	src/game/g_combat.c	/^static float GetRegionDamageModifier( gentity_t *targ, int class, int piece )$/;"	f	file:
GetSkin	src/game/g_playermodel.c	/^char *GetSkin( char *modelname, char *wish )$/;"	f
GetTickCount	src/client/libmumblelink.c	/^static int32_t GetTickCount(void)$/;"	f	file:
GfxInfo_f	src/renderergl1/tr_init.c	/^void GfxInfo_f( void ) $/;"	f
GfxInfo_f	src/renderergl2/tr_init.c	/^void GfxInfo_f( void ) $/;"	f
GfxMemInfo_f	src/renderergl2/tr_init.c	/^void GfxMemInfo_f( void ) $/;"	f
GibEntity	src/game/g_combat.c	/^void GibEntity( gentity_t *self )$/;"	f
Give_Class	src/game/g_cmds.c	/^static void Give_Class( gentity_t *ent, char *s )$/;"	f	file:
Give_Gun	src/game/g_cmds.c	/^static void Give_Gun( gentity_t *ent, char *s )$/;"	f	file:
Give_Upgrade	src/game/g_cmds.c	/^static void Give_Upgrade( gentity_t *ent, char *s )$/;"	f	file:
GlobalVectorToLocal	src/renderergl1/tr_shade_calc.c	/^static void GlobalVectorToLocal( const vec3_t in, vec3_t out ) {$/;"	f	file:
GlobalVectorToLocal	src/renderergl2/tr_shade_calc.c	/^static void GlobalVectorToLocal( const vec3_t in, vec3_t out ) {$/;"	f	file:
GradientBar_Paint	src/ui/ui_shared.c	/^void GradientBar_Paint( rectDef_t *rect, vec4_t color )$/;"	f
H	src/qcommon/md4.c	48;"	d	file:
HALF_SKY_SUBDIVISIONS	src/renderergl1/tr_sky.c	27;"	d	file:
HALF_SKY_SUBDIVISIONS	src/renderergl2/tr_sky.c	27;"	d	file:
HANDLE_TO_WINFILE	src/server/sqlite3.c	37342;"	d	file:
HASHSIZE	src/server/sqlite3.c	156739;"	d	file:
HASHSIZE	src/tools/lcc/lburg/lburg.c	137;"	d	file:
HASHSIZE	src/tools/lcc/src/sym.c	16;"	d	file:
HASHTABLE_HASH_1	src/server/sqlite3.c	51878;"	d	file:
HASHTABLE_NPAGE	src/server/sqlite3.c	51877;"	d	file:
HASHTABLE_NPAGE_ONE	src/server/sqlite3.c	51886;"	d	file:
HASHTABLE_NSLOT	src/server/sqlite3.c	51879;"	d	file:
HASH_BITMASK	src/master/servers.c	31;"	d	file:
HASH_TABLE_SIZE	src/ui/ui_shared.c	177;"	d	file:
HAVE_FCHOWN	src/server/sqlite3.c	132;"	d	file:
HAVE_FULLFSYNC	src/server/sqlite3.c	30891;"	d	file:
HAVE_FULLFSYNC	src/server/sqlite3.c	30893;"	d	file:
HAVE_GETHOSTUUID	src/server/sqlite3.c	27422;"	d	file:
HAVE_LOCALTIME_S	src/server/sqlite3.c	17154;"	d	file:
HAVE_LOCALTIME_S	src/server/sqlite3.c	17155;"	d	file:
HAVE_LSTAT	src/server/sqlite3.c	134;"	d	file:
HAVE_MREMAP	src/server/sqlite3.c	27826;"	d	file:
HAVE_MREMAP	src/server/sqlite3.c	27828;"	d	file:
HAVE_PREAD	src/server/sqlite3.c	27387;"	d	file:
HAVE_PWRITE	src/server/sqlite3.c	27388;"	d	file:
HAVE_READLINK	src/server/sqlite3.c	133;"	d	file:
HAVE_UTIME	src/server/sqlite3.c	128;"	d	file:
HAVE_VM_COMPILED	GNUmakefile	/^    HAVE_VM_COMPILED = true$/;"	m
HAVE_VM_COMPILED	GNUmakefile	/^    HAVE_VM_COMPILED=true$/;"	m
HAVE_VM_COMPILED	GNUmakefile	/^  HAVE_VM_COMPILED = true$/;"	m
HAVE_VM_COMPILED	GNUmakefile	/^  HAVE_VM_COMPILED=true$/;"	m
HArmoury_Activate	src/game/g_buildable.c	/^void HArmoury_Activate( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
HArmoury_Think	src/game/g_buildable.c	/^void HArmoury_Think( gentity_t *self )$/;"	f
HBHM	src/game/tremulous.h	539;"	d
HBUILD_HEALRATE	src/game/tremulous.h	487;"	d
HBUILD_PRICE	src/game/tremulous.h	485;"	d
HBUILD_REPEAT	src/game/tremulous.h	486;"	d
HDCC_Think	src/game/g_buildable.c	/^void HDCC_Think( gentity_t *self )$/;"	f
HDM	src/game/tremulous.h	374;"	d
HEADER_LUMPS	src/qcommon/qfiles.h	385;"	d
HEARTBEAT_FOR_MASTER	src/qcommon/q_shared.h	46;"	d
HEARTBEAT_MSEC	src/server/sv_main.c	224;"	d	file:
HELMET_PCLOUD_PROTECTION	src/game/tremulous.h	500;"	d
HELMET_POISON_PROTECTION	src/game/tremulous.h	499;"	d
HELMET_PRICE	src/game/tremulous.h	497;"	d
HELMET_RANGE	src/game/tremulous.h	498;"	d
HEX	src/tools/lcc/src/lex.c	/^       DIGIT=010, HEX=020,    OTHER=040 };$/;"	e	enum:__anon281	file:
HIVE_BP	src/game/tremulous.h	287;"	d
HIVE_BT	src/game/tremulous.h	288;"	d
HIVE_CREEPSIZE	src/game/tremulous.h	293;"	d
HIVE_DIR_CHANGE_PERIOD	src/game/tremulous.h	300;"	d
HIVE_DMG	src/game/tremulous.h	298;"	d
HIVE_HEALTH	src/game/tremulous.h	289;"	d
HIVE_K_SCALE	src/game/tremulous.h	297;"	d
HIVE_LIFETIME	src/game/tremulous.h	295;"	d
HIVE_REGEN	src/game/tremulous.h	290;"	d
HIVE_REPEAT	src/game/tremulous.h	296;"	d
HIVE_SENSE_RANGE	src/game/tremulous.h	294;"	d
HIVE_SPEED	src/game/tremulous.h	299;"	d
HIVE_SPLASHDAMAGE	src/game/tremulous.h	291;"	d
HIVE_SPLASHRADIUS	src/game/tremulous.h	292;"	d
HIVE_VALUE	src/game/tremulous.h	301;"	d
HI_MEDKIT	src/game/bg_public.h	/^  HI_MEDKIT,$/;"	e	enum:__anon333
HI_NONE	src/game/bg_public.h	/^  HI_NONE,$/;"	e	enum:__anon333
HI_NUM_HOLDABLE	src/game/bg_public.h	/^  HI_NUM_HOLDABLE$/;"	e	enum:__anon333
HI_TELEPORTER	src/game/bg_public.h	/^  HI_TELEPORTER,$/;"	e	enum:__anon333
HMAX	src/qcommon/qcommon.h	1136;"	d
HMGTurret_CheckTarget	src/game/g_buildable.c	/^static qboolean HMGTurret_CheckTarget( gentity_t *self, gentity_t *target,$/;"	f	file:
HMGTurret_FindEnemy	src/game/g_buildable.c	/^static void HMGTurret_FindEnemy( gentity_t *self )$/;"	f	file:
HMGTurret_State	src/game/g_buildable.c	/^static qboolean HMGTurret_State( gentity_t *self, int state )$/;"	f	file:
HMGTurret_Think	src/game/g_buildable.c	/^void HMGTurret_Think( gentity_t *self )$/;"	f
HMGTurret_TrackEnemy	src/game/g_buildable.c	/^static qboolean HMGTurret_TrackEnemy( gentity_t *self )$/;"	f	file:
HMedistat_Die	src/game/g_buildable.c	/^void HMedistat_Die( gentity_t *self, gentity_t *inflictor,$/;"	f
HMedistat_Think	src/game/g_buildable.c	/^void HMedistat_Think( gentity_t *self )$/;"	f
HOMEPATH_NAME_MACOSX	src/qcommon/q_shared.h	43;"	d
HOMEPATH_NAME_UNIX	src/qcommon/q_shared.h	41;"	d
HOMEPATH_NAME_WIN	src/qcommon/q_shared.h	42;"	d
HOVEL_BP	src/game/tremulous.h	303;"	d
HOVEL_BT	src/game/tremulous.h	304;"	d
HOVEL_CREEPSIZE	src/game/tremulous.h	309;"	d
HOVEL_HEALTH	src/game/tremulous.h	305;"	d
HOVEL_REGEN	src/game/tremulous.h	306;"	d
HOVEL_SPLASHDAMAGE	src/game/tremulous.h	307;"	d
HOVEL_SPLASHRADIUS	src/game/tremulous.h	308;"	d
HOVEL_TRACE_DEPTH	src/game/g_buildable.c	1525;"	d	file:
HOVEL_VALUE	src/game/tremulous.h	310;"	d
HReactor_Think	src/game/g_buildable.c	/^void HReactor_Think( gentity_t *self )$/;"	f
HRepeater_Die	src/game/g_buildable.c	/^static void HRepeater_Die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod )$/;"	f	file:
HRepeater_Think	src/game/g_buildable.c	/^void HRepeater_Think( gentity_t *self )$/;"	f
HRepeater_Use	src/game/g_buildable.c	/^void HRepeater_Use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
HSPAWN_BP	src/game/tremulous.h	545;"	d
HSPAWN_BT	src/game/tremulous.h	546;"	d
HSPAWN_HEALTH	src/game/tremulous.h	547;"	d
HSPAWN_SPLASHDAMAGE	src/game/tremulous.h	548;"	d
HSPAWN_SPLASHRADIUS	src/game/tremulous.h	549;"	d
HSPAWN_VALUE	src/game/tremulous.h	550;"	d
HSSIZ	src/tools/lcc/cpp/hideset.c	12;"	d	file:
HSVtoRGB	src/renderergl1/tr_bsp.c	/^static void HSVtoRGB( float h, float s, float v, float rgb[3] )$/;"	f	file:
HSVtoRGB	src/renderergl2/tr_bsp.c	/^static void HSVtoRGB( float h, float s, float v, float rgb[3] )$/;"	f	file:
HSpawn_Blast	src/game/g_buildable.c	/^void HSpawn_Blast( gentity_t *self )$/;"	f
HSpawn_Die	src/game/g_buildable.c	/^void HSpawn_Die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod )$/;"	f
HSpawn_Disappear	src/game/g_buildable.c	/^void HSpawn_Disappear( gentity_t *self )$/;"	f
HSpawn_Respawn	src/game/g_buildable.c	/^void HSpawn_Respawn( gentity_t *self )$/;"	f
HSpawn_Think	src/game/g_buildable.c	/^void HSpawn_Think( gentity_t *self )$/;"	f
HTeslaGen_Think	src/game/g_buildable.c	/^void HTeslaGen_Think( gentity_t *self )$/;"	f
HUD_HORIZONTAL	src/ui/menudef.h	60;"	d
HUD_VERTICAL	src/ui/menudef.h	59;"	d
HUMAN_BACK_MODIFIER	src/game/tremulous.h	632;"	d
HUMAN_BHLTH_MODIFIER	src/game/tremulous.h	538;"	d
HUMAN_BUILDER_SCOREINC	src/game/tremulous.h	657;"	d
HUMAN_DETONATION_DELAY	src/game/tremulous.h	543;"	d
HUMAN_DODGE_SIDE_MODIFIER	src/game/tremulous.h	634;"	d
HUMAN_DODGE_SLOWED_MODIFIER	src/game/tremulous.h	635;"	d
HUMAN_DODGE_TIMEOUT	src/game/tremulous.h	637;"	d
HUMAN_DODGE_UP_MODIFIER	src/game/tremulous.h	636;"	d
HUMAN_JOG_MODIFIER	src/game/tremulous.h	631;"	d
HUMAN_LAND_FRICTION	src/game/tremulous.h	638;"	d
HUMAN_MAX_CREDITS	src/game/tremulous.h	654;"	d
HUMAN_REGEN_DAMAGE_TIME	src/game/tremulous.h	652;"	d
HUMAN_SCANNER_UPDATE_PERIOD	src/cgame/cg_scanner.c	28;"	d	file:
HUMAN_SIDE_MODIFIER	src/game/tremulous.h	633;"	d
HUMAN_SPAWN_REPEAT_TIME	src/game/tremulous.h	651;"	d
HUMAN_SPRINT_MODIFIER	src/game/tremulous.h	630;"	d
HUMAN_TK_SUICIDE_PENALTY	src/game/tremulous.h	655;"	d
HUMAN_WDMG_MODIFIER	src/game/tremulous.h	373;"	d
HUNK_DEBUG	src/qcommon/q_shared.h	313;"	d
HUNK_FREE_MAGIC	src/qcommon/common.c	1221;"	d	file:
HUNK_MAGIC	src/qcommon/common.c	1220;"	d	file:
HUNK_SIZE	src/qcommon/vm_sparc.c	566;"	d	file:
HackToSegment	src/tools/asm/q3asm.c	/^static void HackToSegment( segmentName_t seg ) {$/;"	f	file:
HandleGameStat	src/master/messages.c	/^static void HandleGameStat( const char* msg, const struct sockaddr_in* addr )$/;"	f	file:
HandleGetMotd	src/master/messages.c	/^static void HandleGetMotd( const char* msg, const struct sockaddr_in* addr )$/;"	f	file:
HandleGetServers	src/master/messages.c	/^static void HandleGetServers (const char* msg, const struct sockaddr_in* addr)$/;"	f	file:
HandleInfoResponse	src/master/messages.c	/^static void HandleInfoResponse (server_t* server, const char* msg)$/;"	f	file:
HandleMessage	src/master/messages.c	/^void HandleMessage (const char* msg, size_t length,$/;"	f
HasRowid	src/server/sqlite3.c	12749;"	d	file:
Hash	src/server/sqlite3.c	/^struct Hash {$/;"	s	file:
Hash	src/server/sqlite3.c	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash	file:
HashElem	src/server/sqlite3.c	/^struct HashElem {$/;"	s	file:
HashElem	src/server/sqlite3.c	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem	file:
HashString	src/tools/asm/q3asm.c	/^static unsigned int HashString (const char *key)$/;"	f	file:
Height	src/renderercommon/tr_image_png.c	/^	uint32_t Height;$/;"	m	struct:PNG_Chunk_IHDR	file:
Hex	src/qcommon/vm_x86.c	/^static int Hex( int c ) {$/;"	f	file:
Hideset	src/tools/lcc/cpp/hideset.c	/^typedef	Nlist	**Hideset;$/;"	t	file:
HighlightContext	src/server/sqlite3.c	/^struct HighlightContext {$/;"	s	file:
HighlightContext	src/server/sqlite3.c	/^typedef struct HighlightContext HighlightContext;$/;"	t	typeref:struct:HighlightContext	file:
Hist_Add	src/sys/con_tty.c	/^void Hist_Add(field_t *field)$/;"	f
Hist_Next	src/sys/con_tty.c	/^field_t *Hist_Next( void )$/;"	f
Hist_Prev	src/sys/con_tty.c	/^field_t *Hist_Prev( void )$/;"	f
Huff_Compress	src/qcommon/huffman.c	/^void Huff_Compress(msg_t *mbuf, int offset) {$/;"	f
Huff_Decompress	src/qcommon/huffman.c	/^void Huff_Decompress(msg_t *mbuf, int offset) {$/;"	f
Huff_Init	src/qcommon/huffman.c	/^void Huff_Init(huffman_t *huff) {$/;"	f
Huff_Receive	src/qcommon/huffman.c	/^int Huff_Receive (node_t *node, int *ch, byte *fin) {$/;"	f
Huff_addRef	src/qcommon/huffman.c	/^void Huff_addRef(huff_t* huff, byte ch) {$/;"	f
Huff_getBit	src/qcommon/huffman.c	/^int		Huff_getBit( byte *fin, int *offset) {$/;"	f
Huff_getBloc	src/qcommon/huffman.c	/^int		Huff_getBloc(void)$/;"	f
Huff_offsetReceive	src/qcommon/huffman.c	/^void Huff_offsetReceive (node_t *node, int *ch, byte *fin, int *offset) {$/;"	f
Huff_offsetTransmit	src/qcommon/huffman.c	/^void Huff_offsetTransmit (huff_t *huff, int ch, byte *fout, int *offset) {$/;"	f
Huff_putBit	src/qcommon/huffman.c	/^void	Huff_putBit( int bit, byte *fout, int *offset) {$/;"	f
Huff_setBloc	src/qcommon/huffman.c	/^void	Huff_setBloc(int _bloc)$/;"	f
Huff_transmit	src/qcommon/huffman.c	/^void Huff_transmit (huff_t *huff, int ch, byte *fout) {$/;"	f
Hunk_Alloc	src/qcommon/q_shared.h	323;"	d
Hunk_Alloc	src/renderercommon/tr_public.h	/^	void	*(*Hunk_Alloc)( int size, ha_pref pref );$/;"	m	struct:__anon109
Hunk_AllocDebug	src/qcommon/common.c	/^void *Hunk_AllocDebug( int size, ha_pref preference, char *label, char *file, int line ) {$/;"	f
Hunk_AllocDebug	src/renderercommon/tr_public.h	/^	void	*(*Hunk_AllocDebug)( int size, ha_pref pref, char *label, char *file, int line );$/;"	m	struct:__anon109
Hunk_AllocateTempMemory	src/qcommon/common.c	/^void *Hunk_AllocateTempMemory( int size ) {$/;"	f
Hunk_AllocateTempMemory	src/renderercommon/tr_public.h	/^	void	*(*Hunk_AllocateTempMemory)( int size );$/;"	m	struct:__anon109
Hunk_CheckMark	src/qcommon/common.c	/^qboolean Hunk_CheckMark( void ) {$/;"	f
Hunk_Clear	src/qcommon/common.c	/^void Hunk_Clear( void ) {$/;"	f
Hunk_ClearTempMemory	src/qcommon/common.c	/^void Hunk_ClearTempMemory( void ) {$/;"	f
Hunk_ClearToMark	src/qcommon/common.c	/^void Hunk_ClearToMark( void ) {$/;"	f
Hunk_FreeTempMemory	src/qcommon/common.c	/^void Hunk_FreeTempMemory( void *buf ) {$/;"	f
Hunk_FreeTempMemory	src/renderercommon/tr_public.h	/^	void	(*Hunk_FreeTempMemory)( void *block );$/;"	m	struct:__anon109
Hunk_Log	src/qcommon/common.c	/^void Hunk_Log( void) {$/;"	f
Hunk_MemoryRemaining	src/qcommon/common.c	/^int	Hunk_MemoryRemaining( void ) {$/;"	f
Hunk_SetMark	src/qcommon/common.c	/^void Hunk_SetMark( void ) {$/;"	f
Hunk_SmallLog	src/qcommon/common.c	/^void Hunk_SmallLog( void) {$/;"	f
Hunk_SwapBanks	src/qcommon/common.c	/^static void Hunk_SwapBanks( void ) {$/;"	f	file:
I	src/tools/lcc/src/bytecode.c	2;"	d	file:
I	src/tools/lcc/src/c.h	/^	I=INT,$/;"	e	enum:__anon286
I	src/tools/lcc/src/null.c	2;"	d	file:
I	src/tools/lcc/src/symbolic.c	5;"	d	file:
I0	src/qcommon/vm_sparc.h	29;"	d
I1	src/qcommon/vm_sparc.h	30;"	d
I2	src/qcommon/vm_sparc.h	31;"	d
I3	src/qcommon/vm_sparc.h	32;"	d
I4	src/qcommon/vm_sparc.h	33;"	d
I5	src/qcommon/vm_sparc.h	34;"	d
I6	src/qcommon/vm_sparc.h	35;"	d
I7	src/qcommon/vm_sparc.h	36;"	d
IBE_BLOCKEDBYENEMY	src/game/g_local.h	/^  IBE_BLOCKEDBYENEMY,$/;"	e	enum:__anon318
IBE_HOVELEXIT	src/game/g_local.h	/^  IBE_HOVELEXIT,$/;"	e	enum:__anon318
IBE_LASTSPAWN	src/game/g_local.h	/^  IBE_LASTSPAWN,$/;"	e	enum:__anon318
IBE_MAXERRORS	src/game/g_local.h	/^  IBE_MAXERRORS$/;"	e	enum:__anon318
IBE_NOALIENBP	src/game/g_local.h	/^  IBE_NOALIENBP,$/;"	e	enum:__anon318
IBE_NOCREEP	src/game/g_local.h	/^  IBE_NOCREEP,$/;"	e	enum:__anon318
IBE_NODCC	src/game/g_local.h	/^  IBE_NODCC,$/;"	e	enum:__anon318
IBE_NOHUMANBP	src/game/g_local.h	/^  IBE_NOHUMANBP,$/;"	e	enum:__anon318
IBE_NONE	src/game/g_local.h	/^  IBE_NONE,$/;"	e	enum:__anon318
IBE_NOOVERMIND	src/game/g_local.h	/^  IBE_NOOVERMIND,$/;"	e	enum:__anon318
IBE_NOPOWERHERE	src/game/g_local.h	/^  IBE_NOPOWERHERE,$/;"	e	enum:__anon318
IBE_NORMAL	src/game/g_local.h	/^  IBE_NORMAL, \/\/ too steep$/;"	e	enum:__anon318
IBE_NOROOM	src/game/g_local.h	/^  IBE_NOROOM,$/;"	e	enum:__anon318
IBE_ONEDCC	src/game/g_local.h	/^  IBE_ONEDCC,$/;"	e	enum:__anon318
IBE_ONEHOVEL	src/game/g_local.h	/^  IBE_ONEHOVEL,$/;"	e	enum:__anon318
IBE_ONEOVERMIND	src/game/g_local.h	/^  IBE_ONEOVERMIND,$/;"	e	enum:__anon318
IBE_ONEREACTOR	src/game/g_local.h	/^  IBE_ONEREACTOR,$/;"	e	enum:__anon318
IBE_PERMISSION	src/game/g_local.h	/^  IBE_PERMISSION,$/;"	e	enum:__anon318
IBE_RPTNOREAC	src/game/g_local.h	/^  IBE_RPTNOREAC,$/;"	e	enum:__anon318
IBE_RPTPOWERHERE	src/game/g_local.h	/^  IBE_RPTPOWERHERE,$/;"	e	enum:__anon318
IBE_SPWNWARN	src/game/g_local.h	/^  IBE_SPWNWARN, \/\/ not currently used$/;"	e	enum:__anon318
IBE_TNODEWARN	src/game/g_local.h	/^  IBE_TNODEWARN, \/\/ not currently used$/;"	e	enum:__anon318
ICON_BORDER	src/cgame/cg_weapons.c	1391;"	d	file:
ICON_SIZE	src/cgame/cg_local.h	68;"	d
ID	src/tools/lcc/lburg/gram.c	/^    ID = 261,$/;"	e	enum:yytokentype	file:
ID	src/tools/lcc/lburg/gram.c	118;"	d	file:
ID1	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
IDB_BITMAP1	src/sys/win_resource.h	29;"	d
IDB_BITMAP2	src/sys/win_resource.h	30;"	d
IDC_CURSOR1	src/sys/win_resource.h	31;"	d
IDC_CURSOR2	src/sys/win_resource.h	32;"	d
IDC_CURSOR3	src/sys/win_resource.h	33;"	d
IDI_ICON1	src/sys/win_resource.h	28;"	d
IDS_STRING1	src/sys/win_resource.h	27;"	d
ID_INLINE	src/qcommon/q_platform.h	125;"	d
ID_INLINE	src/qcommon/q_platform.h	151;"	d
ID_INLINE	src/qcommon/q_platform.h	183;"	d
ID_INLINE	src/qcommon/q_platform.h	248;"	d
ID_INLINE	src/qcommon/q_platform.h	279;"	d
ID_INLINE	src/qcommon/q_platform.h	303;"	d
ID_INLINE	src/qcommon/q_platform.h	319;"	d
ID_INLINE	src/qcommon/q_platform.h	98;"	d
IFDEF	src/asm/ftola.asm	/^IFDEF idx64$/;"	l
IFDEF	src/asm/snapvector.asm	/^IFDEF idx64$/;"	l
IFNDEF	src/asm/ftola.asm	/^IFNDEF idx64$/;"	l
IFNDEF	src/asm/snapvector.asm	/^IFNDEF idx64$/;"	l
IF_NAMESIZE	src/qcommon/net_ip.c	132;"	d	file:
IMGFLAG_CLAMPTOEDGE	src/renderercommon/tr_common.h	/^	IMGFLAG_CLAMPTOEDGE    = 0x0040,$/;"	e	enum:__anon107
IMGFLAG_CUBEMAP	src/renderercommon/tr_common.h	/^	IMGFLAG_CUBEMAP        = 0x0004,$/;"	e	enum:__anon107
IMGFLAG_GENNORMALMAP	src/renderercommon/tr_common.h	/^	IMGFLAG_GENNORMALMAP   = 0x0100,$/;"	e	enum:__anon107
IMGFLAG_MIPMAP	src/renderercommon/tr_common.h	/^	IMGFLAG_MIPMAP         = 0x0001,$/;"	e	enum:__anon107
IMGFLAG_NOLIGHTSCALE	src/renderercommon/tr_common.h	/^	IMGFLAG_NOLIGHTSCALE   = 0x0020,$/;"	e	enum:__anon107
IMGFLAG_NONE	src/renderercommon/tr_common.h	/^	IMGFLAG_NONE           = 0x0000,$/;"	e	enum:__anon107
IMGFLAG_NO_COMPRESSION	src/renderercommon/tr_common.h	/^	IMGFLAG_NO_COMPRESSION = 0x0010,$/;"	e	enum:__anon107
IMGFLAG_PICMIP	src/renderercommon/tr_common.h	/^	IMGFLAG_PICMIP         = 0x0002,$/;"	e	enum:__anon107
IMGFLAG_SRGB	src/renderercommon/tr_common.h	/^	IMGFLAG_SRGB           = 0x0080,$/;"	e	enum:__anon107
IMGTYPE_COLORALPHA	src/renderercommon/tr_common.h	/^	IMGTYPE_COLORALPHA, \/\/ for color, lightmap, diffuse, and specular$/;"	e	enum:__anon106
IMGTYPE_DELUXE	src/renderercommon/tr_common.h	/^	IMGTYPE_DELUXE, \/\/ normals are swizzled, deluxe are not$/;"	e	enum:__anon106
IMGTYPE_NORMAL	src/renderercommon/tr_common.h	/^	IMGTYPE_NORMAL,$/;"	e	enum:__anon106
IMGTYPE_NORMALHEIGHT	src/renderercommon/tr_common.h	/^	IMGTYPE_NORMALHEIGHT,$/;"	e	enum:__anon106
IMM	src/qcommon/vm_sparc.c	83;"	d	file:
IMM22	src/qcommon/vm_sparc.c	269;"	d	file:
IMPACTSOUND_DEFAULT	src/cgame/cg_local.h	/^  IMPACTSOUND_DEFAULT,$/;"	e	enum:__anon233
IMPACTSOUND_FLESH	src/cgame/cg_local.h	/^  IMPACTSOUND_FLESH$/;"	e	enum:__anon233
IMPACTSOUND_METAL	src/cgame/cg_local.h	/^  IMPACTSOUND_METAL,$/;"	e	enum:__anon233
IN	src/qcommon/vm_powerpc_asm.h	150;"	d
IN	src/qcommon/vm_sparc.c	322;"	d	file:
INCRINIT_NORMAL	src/server/sqlite3.c	83905;"	d	file:
INCRINIT_ROOT	src/server/sqlite3.c	83907;"	d	file:
INCRINIT_TASK	src/server/sqlite3.c	83906;"	d	file:
INDENT_ELIF	src/qcommon/parse.c	182;"	d	file:
INDENT_ELSE	src/qcommon/parse.c	181;"	d	file:
INDENT_IF	src/qcommon/parse.c	180;"	d	file:
INDENT_IFDEF	src/qcommon/parse.c	183;"	d	file:
INDENT_IFNDEF	src/qcommon/parse.c	184;"	d	file:
INDENT_MARKER	src/qcommon/q_shared.h	447;"	d
INDEX	src/renderercommon/tr_noise.c	30;"	d	file:
INDEX_FILE_EXTENSION	src/client/cl_avi.c	26;"	d	file:
INFINITE	src/game/g_local.h	38;"	d
INFOTYPE_BUILDABLE	src/ui/ui_local.h	/^  INFOTYPE_BUILDABLE,$/;"	e	enum:__anon514
INFOTYPE_CLASS	src/ui/ui_local.h	/^  INFOTYPE_CLASS,$/;"	e	enum:__anon514
INFOTYPE_TEAM	src/ui/ui_local.h	/^  INFOTYPE_TEAM,$/;"	e	enum:__anon514
INFOTYPE_TEXT	src/ui/ui_local.h	/^  INFOTYPE_TEXT,$/;"	e	enum:__anon514
INFOTYPE_UPGRADE	src/ui/ui_local.h	/^  INFOTYPE_UPGRADE$/;"	e	enum:__anon514
INFOTYPE_WEAPON	src/ui/ui_local.h	/^  INFOTYPE_WEAPON,$/;"	e	enum:__anon514
INS	src/tools/lcc/cpp/cpp.h	1;"	d
INSN_BUF_SIZE	src/qcommon/vm_sparc.c	594;"	d	file:
INSTALL	GNUmakefile	/^  INSTALL=ginstall$/;"	m
INSTALL	GNUmakefile	/^INSTALL=install$/;"	m
INT	src/tools/lcc/lburg/gram.c	/^    INT = 264$/;"	e	enum:yytokentype	file:
INT	src/tools/lcc/lburg/gram.c	121;"	d	file:
INT16_TYPE	src/server/sqlite3.c	9941;"	d	file:
INT16_TYPE	src/server/sqlite3.c	9943;"	d	file:
INT64	src/tools/asm/q3asm.c	418;"	d	file:
INT64	src/tools/asm/q3asm.c	421;"	d	file:
INT8_TYPE	src/server/sqlite3.c	9955;"	d	file:
INT8_TYPE	src/server/sqlite3.c	9957;"	d	file:
INTERFACE	src/server/sqlite3.c	128566;"	d	file:
INTERFACE	src/server/sqlite3.c	170160;"	d	file:
INTERMISSION_DELAY_TIME	src/game/g_local.h	42;"	d
INTERNAL_NODE	src/qcommon/qcommon.h	1126;"	d
INT_MAX	src/game/bg_lib.h	51;"	d
INT_MAX	src/renderercommon/tr_image_png.c	29;"	d	file:
INT_MIN	src/game/bg_lib.h	52;"	d
INVALID_FILE_ATTRIBUTES	src/server/sqlite3.c	35519;"	d	file:
INVALID_SET_FILE_POINTER	src/server/sqlite3.c	37694;"	d	file:
INVALID_SOCKET	src/qcommon/net_ip.c	86;"	d	file:
IN_ActivateMouse	src/sdl/sdl_input.c	/^static void IN_ActivateMouse( void )$/;"	f	file:
IN_BackDown	src/client/cl_input.c	/^void IN_BackDown(void) {IN_KeyDown(&in_back);}$/;"	f
IN_BackUp	src/client/cl_input.c	/^void IN_BackUp(void) {IN_KeyUp(&in_back);}$/;"	f
IN_Button0Down	src/client/cl_input.c	/^void IN_Button0Down(void) {IN_KeyDown(&in_buttons[0]);}$/;"	f
IN_Button0Up	src/client/cl_input.c	/^void IN_Button0Up(void) {IN_KeyUp(&in_buttons[0]);}$/;"	f
IN_Button10Down	src/client/cl_input.c	/^void IN_Button10Down(void) {IN_KeyDown(&in_buttons[10]);}$/;"	f
IN_Button10Up	src/client/cl_input.c	/^void IN_Button10Up(void) {IN_KeyUp(&in_buttons[10]);}$/;"	f
IN_Button11Down	src/client/cl_input.c	/^void IN_Button11Down(void) {IN_KeyDown(&in_buttons[11]);}$/;"	f
IN_Button11Up	src/client/cl_input.c	/^void IN_Button11Up(void) {IN_KeyUp(&in_buttons[11]);}$/;"	f
IN_Button12Down	src/client/cl_input.c	/^void IN_Button12Down(void) {IN_KeyDown(&in_buttons[12]);}$/;"	f
IN_Button12Up	src/client/cl_input.c	/^void IN_Button12Up(void) {IN_KeyUp(&in_buttons[12]);}$/;"	f
IN_Button13Down	src/client/cl_input.c	/^void IN_Button13Down(void) {IN_KeyDown(&in_buttons[13]);}$/;"	f
IN_Button13Up	src/client/cl_input.c	/^void IN_Button13Up(void) {IN_KeyUp(&in_buttons[13]);}$/;"	f
IN_Button14Down	src/client/cl_input.c	/^void IN_Button14Down(void) {IN_KeyDown(&in_buttons[14]);}$/;"	f
IN_Button14Up	src/client/cl_input.c	/^void IN_Button14Up(void) {IN_KeyUp(&in_buttons[14]);}$/;"	f
IN_Button15Down	src/client/cl_input.c	/^void IN_Button15Down(void) {IN_KeyDown(&in_buttons[15]);}$/;"	f
IN_Button15Up	src/client/cl_input.c	/^void IN_Button15Up(void) {IN_KeyUp(&in_buttons[15]);}$/;"	f
IN_Button1Down	src/client/cl_input.c	/^void IN_Button1Down(void) {IN_KeyDown(&in_buttons[1]);}$/;"	f
IN_Button1Up	src/client/cl_input.c	/^void IN_Button1Up(void) {IN_KeyUp(&in_buttons[1]);}$/;"	f
IN_Button2Down	src/client/cl_input.c	/^void IN_Button2Down(void) {IN_KeyDown(&in_buttons[2]);}$/;"	f
IN_Button2Up	src/client/cl_input.c	/^void IN_Button2Up(void) {IN_KeyUp(&in_buttons[2]);}$/;"	f
IN_Button3Down	src/client/cl_input.c	/^void IN_Button3Down(void) {IN_KeyDown(&in_buttons[3]);}$/;"	f
IN_Button3Up	src/client/cl_input.c	/^void IN_Button3Up(void) {IN_KeyUp(&in_buttons[3]);}$/;"	f
IN_Button4Down	src/client/cl_input.c	/^void IN_Button4Down(void) {IN_KeyDown(&in_buttons[4]);}$/;"	f
IN_Button4Up	src/client/cl_input.c	/^void IN_Button4Up(void) {IN_KeyUp(&in_buttons[4]);}$/;"	f
IN_Button5Down	src/client/cl_input.c	/^void IN_Button5Down(void) {IN_KeyDown(&in_buttons[5]);}$/;"	f
IN_Button5Up	src/client/cl_input.c	/^void IN_Button5Up(void) {IN_KeyUp(&in_buttons[5]);}$/;"	f
IN_Button6Down	src/client/cl_input.c	/^void IN_Button6Down(void) {IN_KeyDown(&in_buttons[6]);}$/;"	f
IN_Button6Up	src/client/cl_input.c	/^void IN_Button6Up(void) {IN_KeyUp(&in_buttons[6]);}$/;"	f
IN_Button7Down	src/client/cl_input.c	/^void IN_Button7Down(void) {IN_KeyDown(&in_buttons[7]);}$/;"	f
IN_Button7Up	src/client/cl_input.c	/^void IN_Button7Up(void) {IN_KeyUp(&in_buttons[7]);}$/;"	f
IN_Button8Down	src/client/cl_input.c	/^void IN_Button8Down(void) {IN_KeyDown(&in_buttons[8]);}$/;"	f
IN_Button8Up	src/client/cl_input.c	/^void IN_Button8Up(void) {IN_KeyUp(&in_buttons[8]);}$/;"	f
IN_Button9Down	src/client/cl_input.c	/^void IN_Button9Down(void) {IN_KeyDown(&in_buttons[9]);}$/;"	f
IN_Button9Up	src/client/cl_input.c	/^void IN_Button9Up(void) {IN_KeyUp(&in_buttons[9]);}$/;"	f
IN_CenterView	src/client/cl_input.c	/^void IN_CenterView (void) {$/;"	f
IN_DECLARE_VTAB	src/server/sqlite3.c	13842;"	d	file:
IN_DECLARE_VTAB	src/server/sqlite3.c	13844;"	d	file:
IN_DeactivateMouse	src/sdl/sdl_input.c	/^static void IN_DeactivateMouse( void )$/;"	f	file:
IN_DownDown	src/client/cl_input.c	/^void IN_DownDown(void) {IN_KeyDown(&in_down);}$/;"	f
IN_DownUp	src/client/cl_input.c	/^void IN_DownUp(void) {IN_KeyUp(&in_down);}$/;"	f
IN_ForwardDown	src/client/cl_input.c	/^void IN_ForwardDown(void) {IN_KeyDown(&in_forward);}$/;"	f
IN_ForwardUp	src/client/cl_input.c	/^void IN_ForwardUp(void) {IN_KeyUp(&in_forward);}$/;"	f
IN_Frame	src/null/null_input.c	/^void IN_Frame (void) {$/;"	f
IN_Frame	src/sdl/sdl_input.c	/^void IN_Frame( void )$/;"	f
IN_GetUIMousePosition	src/sdl/sdl_input.c	/^static void IN_GetUIMousePosition( int *x, int *y )$/;"	f	file:
IN_GobbleMotionEvents	src/sdl/sdl_input.c	/^static void IN_GobbleMotionEvents( void )$/;"	f	file:
IN_INDEX_EPH	src/server/sqlite3.c	14981;"	d	file:
IN_INDEX_INDEX_ASC	src/server/sqlite3.c	14982;"	d	file:
IN_INDEX_INDEX_DESC	src/server/sqlite3.c	14983;"	d	file:
IN_INDEX_LOOP	src/server/sqlite3.c	14990;"	d	file:
IN_INDEX_MEMBERSHIP	src/server/sqlite3.c	14989;"	d	file:
IN_INDEX_NOOP	src/server/sqlite3.c	14984;"	d	file:
IN_INDEX_NOOP_OK	src/server/sqlite3.c	14988;"	d	file:
IN_INDEX_ROWID	src/server/sqlite3.c	14980;"	d	file:
IN_Init	src/null/null_input.c	/^void IN_Init( void ) {$/;"	f
IN_Init	src/renderercommon/tr_public.h	/^	void	(*IN_Init)( void *windowData );$/;"	m	struct:__anon109
IN_Init	src/sdl/sdl_input.c	/^void IN_Init( void *windowData )$/;"	f
IN_InitJoystick	src/sdl/sdl_input.c	/^static void IN_InitJoystick( void )$/;"	f	file:
IN_IsConsoleKey	src/sdl/sdl_input.c	/^static qboolean IN_IsConsoleKey( keyNum_t key, int character )$/;"	f	file:
IN_JoyMove	src/sdl/sdl_input.c	/^static void IN_JoyMove( void )$/;"	f	file:
IN_KeyDown	src/client/cl_input.c	/^void IN_KeyDown( kbutton_t *b ) {$/;"	f
IN_KeyUp	src/client/cl_input.c	/^void IN_KeyUp( kbutton_t *b ) {$/;"	f
IN_LeftDown	src/client/cl_input.c	/^void IN_LeftDown(void) {IN_KeyDown(&in_left);}$/;"	f
IN_LeftUp	src/client/cl_input.c	/^void IN_LeftUp(void) {IN_KeyUp(&in_left);}$/;"	f
IN_LookdownDown	src/client/cl_input.c	/^void IN_LookdownDown(void) {IN_KeyDown(&in_lookdown);}$/;"	f
IN_LookdownUp	src/client/cl_input.c	/^void IN_LookdownUp(void) {IN_KeyUp(&in_lookdown);}$/;"	f
IN_LookupDown	src/client/cl_input.c	/^void IN_LookupDown(void) {IN_KeyDown(&in_lookup);}$/;"	f
IN_LookupUp	src/client/cl_input.c	/^void IN_LookupUp(void) {IN_KeyUp(&in_lookup);}$/;"	f
IN_MLookDown	src/client/cl_input.c	/^void IN_MLookDown( void ) {$/;"	f
IN_MLookUp	src/client/cl_input.c	/^void IN_MLookUp( void ) {$/;"	f
IN_MoveleftDown	src/client/cl_input.c	/^void IN_MoveleftDown(void) {IN_KeyDown(&in_moveleft);}$/;"	f
IN_MoveleftUp	src/client/cl_input.c	/^void IN_MoveleftUp(void) {IN_KeyUp(&in_moveleft);}$/;"	f
IN_MoverightDown	src/client/cl_input.c	/^void IN_MoverightDown(void) {IN_KeyDown(&in_moveright);}$/;"	f
IN_MoverightUp	src/client/cl_input.c	/^void IN_MoverightUp(void) {IN_KeyUp(&in_moveright);}$/;"	f
IN_PrintKey	src/sdl/sdl_input.c	/^static void IN_PrintKey( const SDL_Keysym *keysym, keyNum_t key, qboolean down )$/;"	f	file:
IN_ProcessEvents	src/sdl/sdl_input.c	/^static void IN_ProcessEvents( void )$/;"	f	file:
IN_Restart	src/null/null_input.c	/^void IN_Restart( void ) {$/;"	f
IN_Restart	src/renderercommon/tr_public.h	/^	void	(*IN_Restart)( void );$/;"	m	struct:__anon109
IN_Restart	src/sdl/sdl_input.c	/^void IN_Restart( void )$/;"	f
IN_RightDown	src/client/cl_input.c	/^void IN_RightDown(void) {IN_KeyDown(&in_right);}$/;"	f
IN_RightUp	src/client/cl_input.c	/^void IN_RightUp(void) {IN_KeyUp(&in_right);}$/;"	f
IN_SetUIMousePosition	src/sdl/sdl_input.c	/^static void IN_SetUIMousePosition( int x, int y )$/;"	f	file:
IN_Shutdown	src/null/null_input.c	/^void IN_Shutdown( void ) {$/;"	f
IN_Shutdown	src/renderercommon/tr_public.h	/^	void	(*IN_Shutdown)( void );$/;"	m	struct:__anon109
IN_Shutdown	src/sdl/sdl_input.c	/^void IN_Shutdown( void )$/;"	f
IN_ShutdownJoystick	src/sdl/sdl_input.c	/^static void IN_ShutdownJoystick( void )$/;"	f	file:
IN_SpeedDown	src/client/cl_input.c	/^void IN_SpeedDown(void) {IN_KeyDown(&in_speed);}$/;"	f
IN_SpeedUp	src/client/cl_input.c	/^void IN_SpeedUp(void) {IN_KeyUp(&in_speed);}$/;"	f
IN_StrafeDown	src/client/cl_input.c	/^void IN_StrafeDown(void) {IN_KeyDown(&in_strafe);}$/;"	f
IN_StrafeUp	src/client/cl_input.c	/^void IN_StrafeUp(void) {IN_KeyUp(&in_strafe);}$/;"	f
IN_TranslateSDLToQ3Key	src/sdl/sdl_input.c	/^static keyNum_t IN_TranslateSDLToQ3Key( SDL_Keysym *keysym, qboolean down )$/;"	f	file:
IN_UpDown	src/client/cl_input.c	/^void IN_UpDown(void) {IN_KeyDown(&in_up);}$/;"	f
IN_UpUp	src/client/cl_input.c	/^void IN_UpUp(void) {IN_KeyUp(&in_up);}$/;"	f
IN_VoipRecordDown	src/client/cl_input.c	/^void IN_VoipRecordDown(void)$/;"	f
IN_VoipRecordUp	src/client/cl_input.c	/^void IN_VoipRecordUp(void)$/;"	f
IOMETHODS	src/server/sqlite3.c	32463;"	d	file:
IOTRACE	src/server/sqlite3.c	15034;"	d	file:
IOTRACE	src/server/sqlite3.c	15038;"	d	file:
IPv4	src/game/g_admin.h	/^    IPv4,$/;"	e	enum:__anon376::__anon377
IPv6	src/game/g_admin.h	/^    IPv6$/;"	e	enum:__anon376::__anon377
IQM_BLENDINDEXES	src/renderercommon/iqm.h	/^    IQM_BLENDINDEXES = 4,$/;"	e	enum:__anon121
IQM_BLENDWEIGHTS	src/renderercommon/iqm.h	/^    IQM_BLENDWEIGHTS = 5,$/;"	e	enum:__anon121
IQM_BYTE	src/renderercommon/iqm.h	/^    IQM_BYTE   = 0,$/;"	e	enum:__anon122
IQM_COLOR	src/renderercommon/iqm.h	/^    IQM_COLOR        = 6,$/;"	e	enum:__anon121
IQM_CUSTOM	src/renderercommon/iqm.h	/^    IQM_CUSTOM       = 0x10$/;"	e	enum:__anon121
IQM_CheckRange	src/renderergl1/tr_model_iqm.c	/^static qboolean IQM_CheckRange( iqmHeader_t *header, int offset,$/;"	f	file:
IQM_CheckRange	src/renderergl2/tr_model_iqm.c	/^static qboolean IQM_CheckRange( iqmHeader_t *header, int offset,$/;"	f	file:
IQM_DOUBLE	src/renderercommon/iqm.h	/^    IQM_DOUBLE = 8,$/;"	e	enum:__anon122
IQM_FLOAT	src/renderercommon/iqm.h	/^    IQM_FLOAT  = 7,$/;"	e	enum:__anon122
IQM_HALF	src/renderercommon/iqm.h	/^    IQM_HALF   = 6,$/;"	e	enum:__anon122
IQM_INT	src/renderercommon/iqm.h	/^    IQM_INT    = 4,$/;"	e	enum:__anon122
IQM_LOOP	src/renderercommon/iqm.h	/^    IQM_LOOP = 1<<0$/;"	e	enum:__anon123
IQM_MAGIC	src/renderercommon/iqm.h	26;"	d
IQM_MAX_JOINTS	src/renderercommon/iqm.h	29;"	d
IQM_NORMAL	src/renderercommon/iqm.h	/^    IQM_NORMAL       = 2,$/;"	e	enum:__anon121
IQM_POSITION	src/renderercommon/iqm.h	/^    IQM_POSITION     = 0,$/;"	e	enum:__anon121
IQM_SHORT	src/renderercommon/iqm.h	/^    IQM_SHORT  = 2,$/;"	e	enum:__anon122
IQM_TANGENT	src/renderercommon/iqm.h	/^    IQM_TANGENT      = 3,$/;"	e	enum:__anon121
IQM_TEXCOORD	src/renderercommon/iqm.h	/^    IQM_TEXCOORD     = 1,$/;"	e	enum:__anon121
IQM_UBYTE	src/renderercommon/iqm.h	/^    IQM_UBYTE  = 1,$/;"	e	enum:__anon122
IQM_UINT	src/renderercommon/iqm.h	/^    IQM_UINT   = 5,$/;"	e	enum:__anon122
IQM_USHORT	src/renderercommon/iqm.h	/^    IQM_USHORT = 3,$/;"	e	enum:__anon122
IQM_VERSION	src/renderercommon/iqm.h	27;"	d
IR	src/tools/lcc/src/main.c	/^Interface *IR = NULL;$/;"	v
IREG	src/tools/lcc/src/config.h	/^enum { IREG=0, FREG=1 };$/;"	e	enum:__anon276
ISAUTOVACUUM	src/server/sqlite3.c	55462;"	d	file:
ISAUTOVACUUM	src/server/sqlite3.c	55464;"	d	file:
ISDEFINED	src/tools/lcc/cpp/cpp.h	30;"	d
ISKW	src/tools/lcc/cpp/cpp.h	31;"	d
ISMAC	src/tools/lcc/cpp/cpp.h	33;"	d
ISUNCHANGE	src/tools/lcc/cpp/cpp.h	32;"	d
IS_BIG_INT	src/server/sqlite3.c	9504;"	d	file:
IS_LOCK_ERROR	src/server/sqlite3.c	27489;"	d	file:
IS_NAN	src/qcommon/q_shared.h	465;"	d
IS_WARMUP	src/game/g_local.h	1202;"	d
ITEM	src/tools/lcc/src/symbolic.c	25;"	d	file:
ITEM_BLOB_TIME	src/cgame/cg_local.h	53;"	d
ITEM_SCALEUP_TIME	src/cgame/cg_local.h	51;"	d
ITEM_TEXTSTYLE_BLINK	src/ui/menudef.h	35;"	d
ITEM_TEXTSTYLE_NEON	src/ui/menudef.h	41;"	d
ITEM_TEXTSTYLE_NORMAL	src/ui/menudef.h	34;"	d
ITEM_TEXTSTYLE_OUTLINED	src/ui/menudef.h	38;"	d
ITEM_TEXTSTYLE_OUTLINESHADOWED	src/ui/menudef.h	39;"	d
ITEM_TEXTSTYLE_PULSE	src/ui/menudef.h	36;"	d
ITEM_TEXTSTYLE_SHADOWED	src/ui/menudef.h	37;"	d
ITEM_TEXTSTYLE_SHADOWEDMORE	src/ui/menudef.h	40;"	d
ITEM_TYPE_ANY	src/ui/menudef.h	4;"	d
ITEM_TYPE_BIND	src/ui/menudef.h	21;"	d
ITEM_TYPE_BUTTON	src/ui/menudef.h	7;"	d
ITEM_TYPE_CHECKBOX	src/ui/menudef.h	9;"	d
ITEM_TYPE_COMBOBOX	src/ui/menudef.h	14;"	d
ITEM_TYPE_CYCLE	src/ui/menudef.h	12;"	d
ITEM_TYPE_EDITFIELD	src/ui/menudef.h	10;"	d
ITEM_TYPE_LISTBOX	src/ui/menudef.h	13;"	d
ITEM_TYPE_MODEL	src/ui/menudef.h	15;"	d
ITEM_TYPE_MULTI	src/ui/menudef.h	20;"	d
ITEM_TYPE_NONE	src/ui/menudef.h	5;"	d
ITEM_TYPE_NUMERICFIELD	src/ui/menudef.h	17;"	d
ITEM_TYPE_OWNERDRAW	src/ui/menudef.h	16;"	d
ITEM_TYPE_RADIOBUTTON	src/ui/menudef.h	8;"	d
ITEM_TYPE_SAYFIELD	src/ui/menudef.h	11;"	d
ITEM_TYPE_SLIDER	src/ui/menudef.h	18;"	d
ITEM_TYPE_TEXT	src/ui/menudef.h	6;"	d
ITEM_TYPE_YESNO	src/ui/menudef.h	19;"	d
ITEM_VALUE_OFFSET	src/ui/ui_shared.h	83;"	d
I_FloatTime	src/tools/asm/cmdlib.c	/^double I_FloatTime (void)$/;"	f
IcuCursor	src/server/sqlite3.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	src/server/sqlite3.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuTokenizer	src/server/sqlite3.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	src/server/sqlite3.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IdChar	src/server/sqlite3.c	132404;"	d	file:
IdChar	src/server/sqlite3.c	132422;"	d	file:
IdChar	src/server/sqlite3.c	132871;"	d	file:
IdChar	src/server/sqlite3.c	132875;"	d	file:
IdList	src/server/sqlite3.c	/^struct IdList {$/;"	s	file:
IdList	src/server/sqlite3.c	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList	file:
IdList_item	src/server/sqlite3.c	/^  struct IdList_item {$/;"	s	struct:IdList	file:
IfNotOmitAV	src/server/sqlite3.c	55861;"	d	file:
IfNotOmitAV	src/server/sqlite3.c	55863;"	d	file:
IgnorableOrderby	src/server/sqlite3.c	13625;"	d	file:
ImageLoader	src/renderergl1/tr_image.c	/^	void (*ImageLoader)( const char *, unsigned char **, int *, int * );$/;"	m	struct:__anon179	file:
ImageLoader	src/renderergl2/tr_image.c	/^	void (*ImageLoader)( const char *, unsigned char **, int *, int * );$/;"	m	struct:__anon81	file:
InLoop	src/server/sqlite3.c	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon210::__anon211	file:
Includelist	src/tools/lcc/cpp/cpp.h	/^} Includelist;$/;"	t	typeref:struct:includelist
IncrMerger	src/server/sqlite3.c	/^struct IncrMerger {$/;"	s	file:
IncrMerger	src/server/sqlite3.c	/^typedef struct IncrMerger IncrMerger;       \/* Read & merge multiple PMAs *\/$/;"	t	typeref:struct:IncrMerger	file:
Incrblob	src/server/sqlite3.c	/^struct Incrblob {$/;"	s	file:
Incrblob	src/server/sqlite3.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
IncrmergeWriter	src/server/sqlite3.c	/^struct IncrmergeWriter {$/;"	s	file:
IncrmergeWriter	src/server/sqlite3.c	/^typedef struct IncrmergeWriter IncrmergeWriter;$/;"	t	typeref:struct:IncrmergeWriter	file:
Index	src/server/sqlite3.c	/^struct Index {$/;"	s	file:
Index	src/server/sqlite3.c	/^typedef struct Index Index;$/;"	t	typeref:struct:Index	file:
IndexSample	src/server/sqlite3.c	/^struct IndexSample {$/;"	s	file:
IndexSample	src/server/sqlite3.c	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample	file:
Info_NextPair	src/qcommon/q_shared.c	/^void Info_NextPair( const char **head, char *key, char *value ) {$/;"	f
Info_Print	src/qcommon/common.c	/^void Info_Print( const char *s ) {$/;"	f
Info_RemoveKey	src/qcommon/q_shared.c	/^void Info_RemoveKey( char *s, const char *key ) {$/;"	f
Info_RemoveKey_Big	src/qcommon/q_shared.c	/^void Info_RemoveKey_Big( char *s, const char *key ) {$/;"	f
Info_SetValueForKey	src/qcommon/q_shared.c	/^void Info_SetValueForKey( char *s, const char *key, const char *value ) {$/;"	f
Info_SetValueForKey_Big	src/qcommon/q_shared.c	/^void Info_SetValueForKey_Big( char *s, const char *key, const char *value ) {$/;"	f
Info_Validate	src/qcommon/q_shared.c	/^qboolean Info_Validate( const char *s ) {$/;"	f
Info_ValueForKey	src/qcommon/q_shared.c	/^char *Info_ValueForKey( const char *s, const char *key ) {$/;"	f
InitData	src/server/sqlite3.c	/^} InitData;$/;"	t	typeref:struct:__anon200	file:
InitMover	src/game/g_mover.c	/^void InitMover( gentity_t *ent )$/;"	f
InitOpenGL	src/renderergl1/tr_init.c	/^static void InitOpenGL( void )$/;"	f	file:
InitOpenGL	src/renderergl2/tr_init.c	/^static void InitOpenGL( void )$/;"	f	file:
InitRotator	src/game/g_mover.c	/^void InitRotator( gentity_t *ent )$/;"	f
InitShader	src/renderergl1/tr_shader.c	/^static void InitShader( const char *name, int lightmapIndex ) {$/;"	f	file:
InitShader	src/renderergl2/tr_shader.c	/^static void InitShader( const char *name, int lightmapIndex ) {$/;"	f	file:
InitTables	src/tools/asm/q3asm.c	/^void InitTables( void ) {$/;"	f
InitTrigger	src/game/g_trigger.c	/^void InitTrigger( gentity_t *self )$/;"	f
Init_Display	src/ui/ui_shared.c	/^void Init_Display( displayContextDef_t *dc )$/;"	f
Int_Parse	src/ui/ui_shared.c	/^qboolean Int_Parse( char **p, int *i )$/;"	f
IntegrityCk	src/server/sqlite3.c	/^struct IntegrityCk {$/;"	s	file:
IntegrityCk	src/server/sqlite3.c	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk	file:
Interface	src/tools/lcc/src/c.h	/^} Interface;$/;"	t	typeref:struct:interface
InterlaceMethod	src/renderercommon/tr_image_png.c	/^	uint8_t  InterlaceMethod;$/;"	m	struct:PNG_Chunk_IHDR	file:
InterpolateMatrix	src/renderergl1/tr_model_iqm.c	/^static void InterpolateMatrix( float *a, float *b, float lerp, float *mat ) {$/;"	f	file:
InterpolateMatrix	src/renderergl2/tr_model_iqm.c	/^static void InterpolateMatrix( float *a, float *b, float lerp, float *mat ) {$/;"	f	file:
InvertCtrl	src/renderergl1/tr_curve.c	/^static void InvertCtrl( int width, int height, drawVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {$/;"	f	file:
InvertCtrl	src/renderergl2/tr_curve.c	/^static void InvertCtrl( int width, int height, srfVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {$/;"	f	file:
InvertErrorTable	src/renderergl1/tr_curve.c	/^static void InvertErrorTable( float errorTable[2][MAX_GRID_SIZE], int width, int height ) {$/;"	f	file:
InvertErrorTable	src/renderergl2/tr_curve.c	/^static void InvertErrorTable( float errorTable[2][MAX_GRID_SIZE], int width, int height ) {$/;"	f	file:
IsHiddenColumn	src/server/sqlite3.c	12737;"	d	file:
IsHiddenColumn	src/server/sqlite3.c	12740;"	d	file:
IsHiddenColumn	src/server/sqlite3.c	12743;"	d	file:
IsMirror	src/renderergl1/tr_main.c	/^static qboolean IsMirror( const drawSurf_t *drawSurf, int entityNum )$/;"	f	file:
IsMirror	src/renderergl2/tr_main.c	/^static qboolean IsMirror( const drawSurf_t *drawSurf, int entityNum )$/;"	f	file:
IsOrdinaryHiddenColumn	src/server/sqlite3.c	12738;"	d	file:
IsOrdinaryHiddenColumn	src/server/sqlite3.c	12741;"	d	file:
IsOrdinaryHiddenColumn	src/server/sqlite3.c	12744;"	d	file:
IsPowerOfTwo	src/server/sqlite3.c	10231;"	d	file:
IsPrimaryKeyIndex	src/server/sqlite3.c	12978;"	d	file:
IsStat3	src/server/sqlite3.c	91890;"	d	file:
IsStat3	src/server/sqlite3.c	91893;"	d	file:
IsStat3	src/server/sqlite3.c	91896;"	d	file:
IsStat34	src/server/sqlite3.c	91900;"	d	file:
IsStat4	src/server/sqlite3.c	91889;"	d	file:
IsStat4	src/server/sqlite3.c	91892;"	d	file:
IsStat4	src/server/sqlite3.c	91895;"	d	file:
IsUniqueIndex	src/server/sqlite3.c	12981;"	d	file:
IsVirtual	src/server/sqlite3.c	12725;"	d	file:
IsVirtual	src/server/sqlite3.c	12727;"	d	file:
IsVisible	src/ui/ui_shared.c	/^qboolean IsVisible( int flags )$/;"	f
ItemParse_action	src/ui/ui_shared.c	/^qboolean ItemParse_action( itemDef_t *item, int handle )$/;"	f
ItemParse_addColorRange	src/ui/ui_shared.c	/^qboolean ItemParse_addColorRange( itemDef_t *item, int handle )$/;"	f
ItemParse_align	src/ui/ui_shared.c	/^qboolean ItemParse_align( itemDef_t *item, int handle )$/;"	f
ItemParse_aspectBias	src/ui/ui_shared.c	/^qboolean ItemParse_aspectBias( itemDef_t *item, int handle )$/;"	f
ItemParse_asset_model	src/ui/ui_shared.c	/^qboolean ItemParse_asset_model( itemDef_t *item, int handle )$/;"	f
ItemParse_asset_shader	src/ui/ui_shared.c	/^qboolean ItemParse_asset_shader( itemDef_t *item, int handle )$/;"	f
ItemParse_backcolor	src/ui/ui_shared.c	/^qboolean ItemParse_backcolor( itemDef_t *item, int handle )$/;"	f
ItemParse_background	src/ui/ui_shared.c	/^qboolean ItemParse_background( itemDef_t *item, int handle )$/;"	f
ItemParse_border	src/ui/ui_shared.c	/^qboolean ItemParse_border( itemDef_t *item, int handle )$/;"	f
ItemParse_bordercolor	src/ui/ui_shared.c	/^qboolean ItemParse_bordercolor( itemDef_t *item, int handle )$/;"	f
ItemParse_bordersize	src/ui/ui_shared.c	/^qboolean ItemParse_bordersize( itemDef_t *item, int handle )$/;"	f
ItemParse_cinematic	src/ui/ui_shared.c	/^qboolean ItemParse_cinematic( itemDef_t *item, int handle )$/;"	f
ItemParse_columns	src/ui/ui_shared.c	/^qboolean ItemParse_columns( itemDef_t *item, int handle )$/;"	f
ItemParse_cvar	src/ui/ui_shared.c	/^qboolean ItemParse_cvar( itemDef_t *item, int handle )$/;"	f
ItemParse_cvarFloat	src/ui/ui_shared.c	/^qboolean ItemParse_cvarFloat( itemDef_t *item, int handle )$/;"	f
ItemParse_cvarFloatList	src/ui/ui_shared.c	/^qboolean ItemParse_cvarFloatList( itemDef_t *item, int handle )$/;"	f
ItemParse_cvarStrList	src/ui/ui_shared.c	/^qboolean ItemParse_cvarStrList( itemDef_t *item, int handle )$/;"	f
ItemParse_cvarTest	src/ui/ui_shared.c	/^qboolean ItemParse_cvarTest( itemDef_t *item, int handle )$/;"	f
ItemParse_decoration	src/ui/ui_shared.c	/^qboolean ItemParse_decoration( itemDef_t *item, int handle )$/;"	f
ItemParse_disableCvar	src/ui/ui_shared.c	/^qboolean ItemParse_disableCvar( itemDef_t *item, int handle )$/;"	f
ItemParse_doubleClick	src/ui/ui_shared.c	/^qboolean ItemParse_doubleClick( itemDef_t *item, int handle )$/;"	f
ItemParse_dropitems	src/ui/ui_shared.c	/^qboolean ItemParse_dropitems( itemDef_t *item, int handle )$/;"	f
ItemParse_elementheight	src/ui/ui_shared.c	/^qboolean ItemParse_elementheight( itemDef_t *item, int handle )$/;"	f
ItemParse_elementtype	src/ui/ui_shared.c	/^qboolean ItemParse_elementtype( itemDef_t *item, int handle )$/;"	f
ItemParse_elementwidth	src/ui/ui_shared.c	/^qboolean ItemParse_elementwidth( itemDef_t *item, int handle )$/;"	f
ItemParse_enableCvar	src/ui/ui_shared.c	/^qboolean ItemParse_enableCvar( itemDef_t *item, int handle )$/;"	f
ItemParse_feeder	src/ui/ui_shared.c	/^qboolean ItemParse_feeder( itemDef_t *item, int handle )$/;"	f
ItemParse_focusSound	src/ui/ui_shared.c	/^qboolean ItemParse_focusSound( itemDef_t *item, int handle )$/;"	f
ItemParse_forecolor	src/ui/ui_shared.c	/^qboolean ItemParse_forecolor( itemDef_t *item, int handle )$/;"	f
ItemParse_group	src/ui/ui_shared.c	/^qboolean ItemParse_group( itemDef_t *item, int handle )$/;"	f
ItemParse_hideCvar	src/ui/ui_shared.c	/^qboolean ItemParse_hideCvar( itemDef_t *item, int handle )$/;"	f
ItemParse_leaveFocus	src/ui/ui_shared.c	/^qboolean ItemParse_leaveFocus( itemDef_t *item, int handle )$/;"	f
ItemParse_maxChars	src/ui/ui_shared.c	/^qboolean ItemParse_maxChars( itemDef_t *item, int handle )$/;"	f
ItemParse_maxFieldWidth	src/ui/ui_shared.c	/^qboolean ItemParse_maxFieldWidth( itemDef_t *item, int handle )$/;"	f
ItemParse_maxPaintChars	src/ui/ui_shared.c	/^qboolean ItemParse_maxPaintChars( itemDef_t *item, int handle )$/;"	f
ItemParse_model_angle	src/ui/ui_shared.c	/^qboolean ItemParse_model_angle( itemDef_t *item, int handle )$/;"	f
ItemParse_model_fovx	src/ui/ui_shared.c	/^qboolean ItemParse_model_fovx( itemDef_t *item, int handle )$/;"	f
ItemParse_model_fovy	src/ui/ui_shared.c	/^qboolean ItemParse_model_fovy( itemDef_t *item, int handle )$/;"	f
ItemParse_model_origin	src/ui/ui_shared.c	/^qboolean ItemParse_model_origin( itemDef_t *item, int handle )$/;"	f
ItemParse_model_rotation	src/ui/ui_shared.c	/^qboolean ItemParse_model_rotation( itemDef_t *item, int handle )$/;"	f
ItemParse_mouseEnter	src/ui/ui_shared.c	/^qboolean ItemParse_mouseEnter( itemDef_t *item, int handle )$/;"	f
ItemParse_mouseEnterText	src/ui/ui_shared.c	/^qboolean ItemParse_mouseEnterText( itemDef_t *item, int handle )$/;"	f
ItemParse_mouseExit	src/ui/ui_shared.c	/^qboolean ItemParse_mouseExit( itemDef_t *item, int handle )$/;"	f
ItemParse_mouseExitText	src/ui/ui_shared.c	/^qboolean ItemParse_mouseExitText( itemDef_t *item, int handle )$/;"	f
ItemParse_name	src/ui/ui_shared.c	/^qboolean ItemParse_name( itemDef_t *item, int handle )$/;"	f
ItemParse_noscrollbar	src/ui/ui_shared.c	/^qboolean ItemParse_noscrollbar( itemDef_t *item, int handle )$/;"	f
ItemParse_notselectable	src/ui/ui_shared.c	/^qboolean ItemParse_notselectable( itemDef_t *item, int handle )$/;"	f
ItemParse_onCharEntry	src/ui/ui_shared.c	/^qboolean ItemParse_onCharEntry( itemDef_t *item, int handle )$/;"	f
ItemParse_onFocus	src/ui/ui_shared.c	/^qboolean ItemParse_onFocus( itemDef_t *item, int handle )$/;"	f
ItemParse_onSelect	src/ui/ui_shared.c	/^qboolean ItemParse_onSelect( itemDef_t *item, int handle )$/;"	f
ItemParse_onTextEntry	src/ui/ui_shared.c	/^qboolean ItemParse_onTextEntry( itemDef_t *item, int handle )$/;"	f
ItemParse_outlinecolor	src/ui/ui_shared.c	/^qboolean ItemParse_outlinecolor( itemDef_t *item, int handle )$/;"	f
ItemParse_ownerdraw	src/ui/ui_shared.c	/^qboolean ItemParse_ownerdraw( itemDef_t *item, int handle )$/;"	f
ItemParse_ownerdrawFlag	src/ui/ui_shared.c	/^qboolean ItemParse_ownerdrawFlag( itemDef_t *item, int handle )$/;"	f
ItemParse_rect	src/ui/ui_shared.c	/^qboolean ItemParse_rect( itemDef_t *item, int handle )$/;"	f
ItemParse_resetonfeederchange	src/ui/ui_shared.c	/^qboolean ItemParse_resetonfeederchange( itemDef_t *item, int handle )$/;"	f
ItemParse_showCvar	src/ui/ui_shared.c	/^qboolean ItemParse_showCvar( itemDef_t *item, int handle )$/;"	f
ItemParse_style	src/ui/ui_shared.c	/^qboolean ItemParse_style( itemDef_t *item, int handle )$/;"	f
ItemParse_text	src/ui/ui_shared.c	/^qboolean ItemParse_text( itemDef_t *item, int handle )$/;"	f
ItemParse_textalign	src/ui/ui_shared.c	/^qboolean ItemParse_textalign( itemDef_t *item, int handle )$/;"	f
ItemParse_textalignx	src/ui/ui_shared.c	/^qboolean ItemParse_textalignx( itemDef_t *item, int handle )$/;"	f
ItemParse_textaligny	src/ui/ui_shared.c	/^qboolean ItemParse_textaligny( itemDef_t *item, int handle )$/;"	f
ItemParse_textscale	src/ui/ui_shared.c	/^qboolean ItemParse_textscale( itemDef_t *item, int handle )$/;"	f
ItemParse_textstyle	src/ui/ui_shared.c	/^qboolean ItemParse_textstyle( itemDef_t *item, int handle )$/;"	f
ItemParse_textvalign	src/ui/ui_shared.c	/^qboolean ItemParse_textvalign( itemDef_t *item, int handle )$/;"	f
ItemParse_type	src/ui/ui_shared.c	/^qboolean ItemParse_type( itemDef_t *item, int handle )$/;"	f
ItemParse_visible	src/ui/ui_shared.c	/^qboolean ItemParse_visible( itemDef_t *item, int handle )$/;"	f
ItemParse_wrapped	src/ui/ui_shared.c	/^qboolean ItemParse_wrapped( itemDef_t *item, int handle )$/;"	f
Item_Action	src/ui/ui_shared.c	/^void Item_Action( itemDef_t *item )$/;"	f
Item_Bind_HandleKey	src/ui/ui_shared.c	/^qboolean Item_Bind_HandleKey( itemDef_t *item, int key, qboolean down )$/;"	f
Item_Bind_Paint	src/ui/ui_shared.c	/^void Item_Bind_Paint( itemDef_t *item )$/;"	f
Item_CacheContents	src/ui/ui_shared.c	/^static void Item_CacheContents( itemDef_t *item )$/;"	f	file:
Item_ComboBox_HandleKey	src/ui/ui_shared.c	/^qboolean Item_ComboBox_HandleKey( itemDef_t *item, int key, qboolean down, qboolean force )$/;"	f
Item_ComboBox_MaybeCastToListBox	src/ui/ui_shared.c	/^static qboolean Item_ComboBox_MaybeCastToListBox( itemDef_t *item )$/;"	f	file:
Item_ComboBox_MaybeUnCastFromListBox	src/ui/ui_shared.c	/^static void Item_ComboBox_MaybeUnCastFromListBox( itemDef_t *item, qboolean unCast )$/;"	f	file:
Item_ComboBox_Paint	src/ui/ui_shared.c	/^void Item_ComboBox_Paint( itemDef_t *item )$/;"	f
Item_CorrectedTextRect	src/ui/ui_shared.c	/^static rectDef_t *Item_CorrectedTextRect( itemDef_t *item )$/;"	f	file:
Item_Cycle_HandleKey	src/ui/ui_shared.c	/^qboolean Item_Cycle_HandleKey( itemDef_t *item, int key )$/;"	f
Item_Cycle_Paint	src/ui/ui_shared.c	/^void Item_Cycle_Paint( itemDef_t *item )$/;"	f
Item_DataType	src/ui/ui_shared.c	/^itemDataType_t Item_DataType( itemDef_t *item )$/;"	f
Item_EnableShowViaCvar	src/ui/ui_shared.c	/^qboolean Item_EnableShowViaCvar( itemDef_t *item, int flag )$/;"	f
Item_HandleKey	src/ui/ui_shared.c	/^qboolean Item_HandleKey( itemDef_t *item, int key, qboolean down )$/;"	f
Item_HandleMouseMove	src/ui/ui_shared.c	/^static qboolean Item_HandleMouseMove( itemDef_t *item, float x, float y, int pass, qboolean focusSet )$/;"	f	file:
Item_Init	src/ui/ui_shared.c	/^void Item_Init( itemDef_t *item )$/;"	f
Item_InitControls	src/ui/ui_shared.c	/^void Item_InitControls( itemDef_t *item )$/;"	f
Item_IsEditField	src/ui/ui_shared.c	/^static ID_INLINE qboolean Item_IsEditField( itemDef_t *item )$/;"	f	file:
Item_IsListBox	src/ui/ui_shared.c	/^static ID_INLINE qboolean Item_IsListBox( itemDef_t *item )$/;"	f	file:
Item_ListBoxRow_Paint	src/ui/ui_shared.c	/^void Item_ListBoxRow_Paint( itemDef_t *item, int row, int renderPos, qboolean highlight, qboolean scrollbar )$/;"	f
Item_ListBox_HandleKey	src/ui/ui_shared.c	/^qboolean Item_ListBox_HandleKey( itemDef_t *item, int key, qboolean down, qboolean force )$/;"	f
Item_ListBox_HeightForNumItems	src/ui/ui_shared.c	/^static float Item_ListBox_HeightForNumItems( itemDef_t *item, int numItems )$/;"	f	file:
Item_ListBox_MaxScroll	src/ui/ui_shared.c	/^int Item_ListBox_MaxScroll( itemDef_t *item )$/;"	f
Item_ListBox_MouseEnter	src/ui/ui_shared.c	/^void Item_ListBox_MouseEnter( itemDef_t *item, float x, float y )$/;"	f
Item_ListBox_NumItemsForItemHeight	src/ui/ui_shared.c	/^static int Item_ListBox_NumItemsForItemHeight( itemDef_t *item )$/;"	f	file:
Item_ListBox_OverLB	src/ui/ui_shared.c	/^int Item_ListBox_OverLB( itemDef_t *item, float x, float y )$/;"	f
Item_ListBox_Paint	src/ui/ui_shared.c	/^void Item_ListBox_Paint( itemDef_t *item )$/;"	f
Item_ListBox_SetStartPos	src/ui/ui_shared.c	/^static void Item_ListBox_SetStartPos( itemDef_t *item, int startPos )$/;"	f	file:
Item_ListBox_ThumbDrawPosition	src/ui/ui_shared.c	/^float Item_ListBox_ThumbDrawPosition( itemDef_t *item )$/;"	f
Item_ListBox_ThumbPosition	src/ui/ui_shared.c	/^float Item_ListBox_ThumbPosition( itemDef_t *item )$/;"	f
Item_ListBox_Update	src/ui/ui_shared.c	/^void Item_ListBox_Update( itemDef_t *item )$/;"	f
Item_Model_Paint	src/ui/ui_shared.c	/^void Item_Model_Paint( itemDef_t *item )$/;"	f
Item_MouseEnter	src/ui/ui_shared.c	/^void Item_MouseEnter( itemDef_t *item, float x, float y )$/;"	f
Item_MouseLeave	src/ui/ui_shared.c	/^void Item_MouseLeave( itemDef_t *item )$/;"	f
Item_Multi_CountSettings	src/ui/ui_shared.c	/^int Item_Multi_CountSettings( itemDef_t *item )$/;"	f
Item_Multi_FindCvarByValue	src/ui/ui_shared.c	/^int Item_Multi_FindCvarByValue( itemDef_t *item )$/;"	f
Item_Multi_HandleKey	src/ui/ui_shared.c	/^qboolean Item_Multi_HandleKey( itemDef_t *item, int key )$/;"	f
Item_Multi_Paint	src/ui/ui_shared.c	/^void Item_Multi_Paint( itemDef_t *item )$/;"	f
Item_Multi_Setting	src/ui/ui_shared.c	/^const char *Item_Multi_Setting( itemDef_t *item )$/;"	f
Item_OwnerDraw_HandleKey	src/ui/ui_shared.c	/^qboolean Item_OwnerDraw_HandleKey( itemDef_t *item, int key )$/;"	f
Item_OwnerDraw_Paint	src/ui/ui_shared.c	/^void Item_OwnerDraw_Paint( itemDef_t *item )$/;"	f
Item_Paint	src/ui/ui_shared.c	/^void Item_Paint( itemDef_t *item )$/;"	f
Item_Parse	src/ui/ui_shared.c	/^qboolean Item_Parse( int handle, itemDef_t *item )$/;"	f
Item_RunScript	src/ui/ui_shared.c	/^void Item_RunScript( itemDef_t *item, const char *s )$/;"	f
Item_SetFocus	src/ui/ui_shared.c	/^qboolean Item_SetFocus( itemDef_t *item, float x, float y )$/;"	f
Item_SetMouseOver	src/ui/ui_shared.c	/^void Item_SetMouseOver( itemDef_t *item, qboolean focus )$/;"	f
Item_SetScreenCoords	src/ui/ui_shared.c	/^void Item_SetScreenCoords( itemDef_t *item, float x, float y )$/;"	f
Item_SetTextExtents	src/ui/ui_shared.c	/^void Item_SetTextExtents( itemDef_t *item, const char *text )$/;"	f
Item_SetupKeywordHash	src/ui/ui_shared.c	/^void Item_SetupKeywordHash( void )$/;"	f
Item_Slider_HandleKey	src/ui/ui_shared.c	/^qboolean Item_Slider_HandleKey( itemDef_t *item, int key, qboolean down )$/;"	f
Item_Slider_OverSlider	src/ui/ui_shared.c	/^int Item_Slider_OverSlider( itemDef_t *item, float x, float y )$/;"	f
Item_Slider_Paint	src/ui/ui_shared.c	/^void Item_Slider_Paint( itemDef_t *item )$/;"	f
Item_Slider_ThumbPosition	src/ui/ui_shared.c	/^float Item_Slider_ThumbPosition( itemDef_t *item )$/;"	f
Item_Slider_VScale	src/ui/ui_shared.c	/^static float Item_Slider_VScale( itemDef_t *item )$/;"	f	file:
Item_StartCapture	src/ui/ui_shared.c	/^void Item_StartCapture( itemDef_t *item, int key )$/;"	f
Item_StopCapture	src/ui/ui_shared.c	/^void Item_StopCapture( itemDef_t *item )$/;"	f
Item_TextColor	src/ui/ui_shared.c	/^void Item_TextColor( itemDef_t *item, vec4_t *newColor )$/;"	f
Item_TextField_CalcPaintOffset	src/ui/ui_shared.c	/^static void Item_TextField_CalcPaintOffset( itemDef_t *item, char *buff )$/;"	f	file:
Item_TextField_HandleKey	src/ui/ui_shared.c	/^qboolean Item_TextField_HandleKey( itemDef_t *item, int key )$/;"	f
Item_TextField_Paint	src/ui/ui_shared.c	/^void Item_TextField_Paint( itemDef_t *item )$/;"	f
Item_Text_Paint	src/ui/ui_shared.c	/^void Item_Text_Paint( itemDef_t *item )$/;"	f
Item_Text_Wrap	src/ui/ui_shared.c	/^const char *Item_Text_Wrap( const char *text, float scale, float width )$/;"	f
Item_Text_Wrapped_Paint	src/ui/ui_shared.c	/^void Item_Text_Wrapped_Paint( itemDef_t *item )$/;"	f
Item_Update	src/ui/ui_shared.c	/^void Item_Update( itemDef_t *item )$/;"	f
Item_UpdatePosition	src/ui/ui_shared.c	/^void Item_UpdatePosition( itemDef_t *item )$/;"	f
Item_YesNo_HandleKey	src/ui/ui_shared.c	/^qboolean Item_YesNo_HandleKey( itemDef_t *item, int key )$/;"	f
Item_YesNo_Paint	src/ui/ui_shared.c	/^void Item_YesNo_Paint( itemDef_t *item )$/;"	f
JEACH_ATOM	src/server/sqlite3.c	168137;"	d	file:
JEACH_FULLKEY	src/server/sqlite3.c	168140;"	d	file:
JEACH_ID	src/server/sqlite3.c	168138;"	d	file:
JEACH_JSON	src/server/sqlite3.c	168142;"	d	file:
JEACH_KEY	src/server/sqlite3.c	168134;"	d	file:
JEACH_PARENT	src/server/sqlite3.c	168139;"	d	file:
JEACH_PATH	src/server/sqlite3.c	168141;"	d	file:
JEACH_ROOT	src/server/sqlite3.c	168143;"	d	file:
JEACH_TYPE	src/server/sqlite3.c	168136;"	d	file:
JEACH_VALUE	src/server/sqlite3.c	168135;"	d	file:
JETPACK_DISABLE_CHANCE	src/game/tremulous.h	511;"	d
JETPACK_DISABLE_TIME	src/game/tremulous.h	510;"	d
JETPACK_FLOAT_SPEED	src/game/tremulous.h	508;"	d
JETPACK_FUEL_FULL	src/game/tremulous.h	512;"	d
JETPACK_FUEL_LOW	src/game/tremulous.h	513;"	d
JETPACK_FUEL_USAGE	src/game/tremulous.h	514;"	d
JETPACK_PRICE	src/game/tremulous.h	507;"	d
JETPACK_SINK_SPEED	src/game/tremulous.h	509;"	d
JMPL	src/qcommon/vm_sparc.c	/^	JMPLI, JMPL,$/;"	e	enum:sparc_iname	file:
JMPLI	src/qcommon/vm_sparc.c	/^	JMPLI, JMPL,$/;"	e	enum:sparc_iname	file:
JNODE_APPEND	src/server/sqlite3.c	166602;"	d	file:
JNODE_ESCAPE	src/server/sqlite3.c	166599;"	d	file:
JNODE_LABEL	src/server/sqlite3.c	166603;"	d	file:
JNODE_RAW	src/server/sqlite3.c	166598;"	d	file:
JNODE_REMOVE	src/server/sqlite3.c	166600;"	d	file:
JNODE_REPLACE	src/server/sqlite3.c	166601;"	d	file:
JOURNAL_HDR_SZ	src/server/sqlite3.c	44768;"	d	file:
JOURNAL_PG_SZ	src/server/sqlite3.c	44762;"	d	file:
JPDIR	GNUmakefile	/^JPDIR=$(DEP_DIR)\/jpeg-8c$/;"	m
JPEG_CFLAGS	GNUmakefile	/^  JPEG_CFLAGS ?= $(shell pkg-config --silence-errors --cflags libjpeg || true)$/;"	m
JPEG_LIBS	GNUmakefile	/^  JPEG_LIBS ?= $(shell pkg-config --silence-errors --libs libjpeg || echo -ljpeg)$/;"	m
JPGOBJ	GNUmakefile	/^  JPGOBJ = \\$/;"	m
JPS_ASCENDING	src/cgame/cg_local.h	/^  JPS_ASCENDING$/;"	e	enum:__anon234
JPS_DESCENDING	src/cgame/cg_local.h	/^  JPS_DESCENDING,$/;"	e	enum:__anon234
JPS_HOVERING	src/cgame/cg_local.h	/^  JPS_HOVERING,$/;"	e	enum:__anon234
JPS_OFF	src/cgame/cg_local.h	/^  JPS_OFF,$/;"	e	enum:__anon234
JSON_ARRAY	src/server/sqlite3.c	166583;"	d	file:
JSON_FALSE	src/server/sqlite3.c	166579;"	d	file:
JSON_INT	src/server/sqlite3.c	166580;"	d	file:
JSON_NOINLINE	src/server/sqlite3.c	167113;"	d	file:
JSON_NOINLINE	src/server/sqlite3.c	167115;"	d	file:
JSON_NOINLINE	src/server/sqlite3.c	167117;"	d	file:
JSON_NULL	src/server/sqlite3.c	166577;"	d	file:
JSON_OBJECT	src/server/sqlite3.c	166584;"	d	file:
JSON_REAL	src/server/sqlite3.c	166581;"	d	file:
JSON_STRING	src/server/sqlite3.c	166582;"	d	file:
JSON_SUBTYPE	src/server/sqlite3.c	166587;"	d	file:
JSON_TRUE	src/server/sqlite3.c	166578;"	d	file:
JTRGSEG	src/tools/asm/q3asm.c	/^	JTRGSEG,	\/\/ pseudo-segment that contains only jump table targets$/;"	e	enum:__anon266	file:
JT_CROSS	src/server/sqlite3.c	13403;"	d	file:
JT_ERROR	src/server/sqlite3.c	13408;"	d	file:
JT_INNER	src/server/sqlite3.c	13402;"	d	file:
JT_LEFT	src/server/sqlite3.c	13405;"	d	file:
JT_NATURAL	src/server/sqlite3.c	13404;"	d	file:
JT_OUTER	src/server/sqlite3.c	13407;"	d	file:
JT_RIGHT	src/server/sqlite3.c	13406;"	d	file:
JUSED	src/qcommon/vm_x86.c	365;"	d	file:
JointToMatrix	src/renderergl1/tr_model_iqm.c	/^static void JointToMatrix( vec4_t rot, vec3_t scale, vec3_t trans,$/;"	f	file:
JointToMatrix	src/renderergl2/tr_model_iqm.c	/^static void JointToMatrix( vec4_t rot, vec3_t scale, vec3_t trans,$/;"	f	file:
JsonEachCursor	src/server/sqlite3.c	/^struct JsonEachCursor {$/;"	s	file:
JsonEachCursor	src/server/sqlite3.c	/^typedef struct JsonEachCursor JsonEachCursor;$/;"	t	typeref:struct:JsonEachCursor	file:
JsonNode	src/server/sqlite3.c	/^struct JsonNode {$/;"	s	file:
JsonNode	src/server/sqlite3.c	/^typedef struct JsonNode JsonNode;$/;"	t	typeref:struct:JsonNode	file:
JsonParse	src/server/sqlite3.c	/^struct JsonParse {$/;"	s	file:
JsonParse	src/server/sqlite3.c	/^typedef struct JsonParse JsonParse;$/;"	t	typeref:struct:JsonParse	file:
JsonString	src/server/sqlite3.c	/^struct JsonString {$/;"	s	file:
JsonString	src/server/sqlite3.c	/^typedef struct JsonString JsonString;$/;"	t	typeref:struct:JsonString	file:
Jump	src/tools/lcc/src/c.h	/^	       Label,    Start,    Gen,   Jump,    Switch$/;"	e	enum:code::__anon290
KDATE	src/tools/lcc/cpp/cpp.h	/^		KLINENO, KFILE, KDATE, KTIME, KSTDC, KEVAL };$/;"	e	enum:kwtype
KDEFINE	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KDEFINED	src/tools/lcc/cpp/cpp.h	/^		KUNDEF, KLINE, KWARNING, KERROR, KPRAGMA, KDEFINED,$/;"	e	enum:kwtype
KELIF	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KELSE	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KENDIF	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KERROR	src/tools/lcc/cpp/cpp.h	/^		KUNDEF, KLINE, KWARNING, KERROR, KPRAGMA, KDEFINED,$/;"	e	enum:kwtype
KEVAL	src/tools/lcc/cpp/cpp.h	/^		KLINENO, KFILE, KDATE, KTIME, KSTDC, KEVAL };$/;"	e	enum:kwtype
KEYCATCH_CGAME	src/qcommon/q_shared.h	1157;"	d
KEYCATCH_CONSOLE	src/qcommon/q_shared.h	1155;"	d
KEYCATCH_UI	src/qcommon/q_shared.h	1156;"	d
KEYWORDHASH_SIZE	src/ui/ui_shared.c	6340;"	d	file:
KFILE	src/tools/lcc/cpp/cpp.h	/^		KLINENO, KFILE, KDATE, KTIME, KSTDC, KEVAL };$/;"	e	enum:kwtype
KICK_VOTE	src/game/bg_public.h	/^  KICK_VOTE,$/;"	e	enum:__anon360
KIF	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KIFDEF	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KIFNDEF	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KINCLUDE	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	e	enum:kwtype
KLINE	src/tools/lcc/cpp/cpp.h	/^		KUNDEF, KLINE, KWARNING, KERROR, KPRAGMA, KDEFINED,$/;"	e	enum:kwtype
KLINENO	src/tools/lcc/cpp/cpp.h	/^		KLINENO, KFILE, KDATE, KTIME, KSTDC, KEVAL };$/;"	e	enum:kwtype
KPRAGMA	src/tools/lcc/cpp/cpp.h	/^		KUNDEF, KLINE, KWARNING, KERROR, KPRAGMA, KDEFINED,$/;"	e	enum:kwtype
KSTDC	src/tools/lcc/cpp/cpp.h	/^		KLINENO, KFILE, KDATE, KTIME, KSTDC, KEVAL };$/;"	e	enum:kwtype
KTIME	src/tools/lcc/cpp/cpp.h	/^		KLINENO, KFILE, KDATE, KTIME, KSTDC, KEVAL };$/;"	e	enum:kwtype
KUNDEF	src/tools/lcc/cpp/cpp.h	/^		KUNDEF, KLINE, KWARNING, KERROR, KPRAGMA, KDEFINED,$/;"	e	enum:kwtype
KWARNING	src/tools/lcc/cpp/cpp.h	/^		KUNDEF, KLINE, KWARNING, KERROR, KPRAGMA, KDEFINED,$/;"	e	enum:kwtype
K_ALT	src/client/keycodes.h	/^	K_ALT,$/;"	e	enum:__anon101
K_AUX1	src/client/keycodes.h	/^	K_AUX1,$/;"	e	enum:__anon101
K_AUX10	src/client/keycodes.h	/^	K_AUX10,$/;"	e	enum:__anon101
K_AUX11	src/client/keycodes.h	/^	K_AUX11,$/;"	e	enum:__anon101
K_AUX12	src/client/keycodes.h	/^	K_AUX12,$/;"	e	enum:__anon101
K_AUX13	src/client/keycodes.h	/^	K_AUX13,$/;"	e	enum:__anon101
K_AUX14	src/client/keycodes.h	/^	K_AUX14,$/;"	e	enum:__anon101
K_AUX15	src/client/keycodes.h	/^	K_AUX15,$/;"	e	enum:__anon101
K_AUX16	src/client/keycodes.h	/^	K_AUX16,$/;"	e	enum:__anon101
K_AUX2	src/client/keycodes.h	/^	K_AUX2,$/;"	e	enum:__anon101
K_AUX3	src/client/keycodes.h	/^	K_AUX3,$/;"	e	enum:__anon101
K_AUX4	src/client/keycodes.h	/^	K_AUX4,$/;"	e	enum:__anon101
K_AUX5	src/client/keycodes.h	/^	K_AUX5,$/;"	e	enum:__anon101
K_AUX6	src/client/keycodes.h	/^	K_AUX6,$/;"	e	enum:__anon101
K_AUX7	src/client/keycodes.h	/^	K_AUX7,$/;"	e	enum:__anon101
K_AUX8	src/client/keycodes.h	/^	K_AUX8,$/;"	e	enum:__anon101
K_AUX9	src/client/keycodes.h	/^	K_AUX9,$/;"	e	enum:__anon101
K_BACKSPACE	src/client/keycodes.h	/^	K_BACKSPACE = 127,$/;"	e	enum:__anon101
K_BREAK	src/client/keycodes.h	/^	K_BREAK,$/;"	e	enum:__anon101
K_CAPSLOCK	src/client/keycodes.h	/^	K_CAPSLOCK,$/;"	e	enum:__anon101
K_CHAR_FLAG	src/client/keycodes.h	279;"	d
K_COMMAND	src/client/keycodes.h	/^	K_COMMAND = 128,$/;"	e	enum:__anon101
K_COMPOSE	src/client/keycodes.h	/^	K_COMPOSE,$/;"	e	enum:__anon101
K_CONSOLE	src/client/keycodes.h	/^	K_CONSOLE,$/;"	e	enum:__anon101
K_CTRL	src/client/keycodes.h	/^	K_CTRL,$/;"	e	enum:__anon101
K_DEL	src/client/keycodes.h	/^	K_DEL,$/;"	e	enum:__anon101
K_DOWNARROW	src/client/keycodes.h	/^	K_DOWNARROW,$/;"	e	enum:__anon101
K_END	src/client/keycodes.h	/^	K_END,$/;"	e	enum:__anon101
K_ENTER	src/client/keycodes.h	/^	K_ENTER = 13,$/;"	e	enum:__anon101
K_ESCAPE	src/client/keycodes.h	/^	K_ESCAPE = 27,$/;"	e	enum:__anon101
K_EURO	src/client/keycodes.h	/^	K_EURO,$/;"	e	enum:__anon101
K_F1	src/client/keycodes.h	/^	K_F1,$/;"	e	enum:__anon101
K_F10	src/client/keycodes.h	/^	K_F10,$/;"	e	enum:__anon101
K_F11	src/client/keycodes.h	/^	K_F11,$/;"	e	enum:__anon101
K_F12	src/client/keycodes.h	/^	K_F12,$/;"	e	enum:__anon101
K_F13	src/client/keycodes.h	/^	K_F13,$/;"	e	enum:__anon101
K_F14	src/client/keycodes.h	/^	K_F14,$/;"	e	enum:__anon101
K_F15	src/client/keycodes.h	/^	K_F15,$/;"	e	enum:__anon101
K_F2	src/client/keycodes.h	/^	K_F2,$/;"	e	enum:__anon101
K_F3	src/client/keycodes.h	/^	K_F3,$/;"	e	enum:__anon101
K_F4	src/client/keycodes.h	/^	K_F4,$/;"	e	enum:__anon101
K_F5	src/client/keycodes.h	/^	K_F5,$/;"	e	enum:__anon101
K_F6	src/client/keycodes.h	/^	K_F6,$/;"	e	enum:__anon101
K_F7	src/client/keycodes.h	/^	K_F7,$/;"	e	enum:__anon101
K_F8	src/client/keycodes.h	/^	K_F8,$/;"	e	enum:__anon101
K_F9	src/client/keycodes.h	/^	K_F9,$/;"	e	enum:__anon101
K_HELP	src/client/keycodes.h	/^	K_HELP,$/;"	e	enum:__anon101
K_HOME	src/client/keycodes.h	/^	K_HOME,$/;"	e	enum:__anon101
K_INS	src/client/keycodes.h	/^	K_INS,$/;"	e	enum:__anon101
K_JOY1	src/client/keycodes.h	/^	K_JOY1,$/;"	e	enum:__anon101
K_JOY10	src/client/keycodes.h	/^	K_JOY10,$/;"	e	enum:__anon101
K_JOY11	src/client/keycodes.h	/^	K_JOY11,$/;"	e	enum:__anon101
K_JOY12	src/client/keycodes.h	/^	K_JOY12,$/;"	e	enum:__anon101
K_JOY13	src/client/keycodes.h	/^	K_JOY13,$/;"	e	enum:__anon101
K_JOY14	src/client/keycodes.h	/^	K_JOY14,$/;"	e	enum:__anon101
K_JOY15	src/client/keycodes.h	/^	K_JOY15,$/;"	e	enum:__anon101
K_JOY16	src/client/keycodes.h	/^	K_JOY16,$/;"	e	enum:__anon101
K_JOY17	src/client/keycodes.h	/^	K_JOY17,$/;"	e	enum:__anon101
K_JOY18	src/client/keycodes.h	/^	K_JOY18,$/;"	e	enum:__anon101
K_JOY19	src/client/keycodes.h	/^	K_JOY19,$/;"	e	enum:__anon101
K_JOY2	src/client/keycodes.h	/^	K_JOY2,$/;"	e	enum:__anon101
K_JOY20	src/client/keycodes.h	/^	K_JOY20,$/;"	e	enum:__anon101
K_JOY21	src/client/keycodes.h	/^	K_JOY21,$/;"	e	enum:__anon101
K_JOY22	src/client/keycodes.h	/^	K_JOY22,$/;"	e	enum:__anon101
K_JOY23	src/client/keycodes.h	/^	K_JOY23,$/;"	e	enum:__anon101
K_JOY24	src/client/keycodes.h	/^	K_JOY24,$/;"	e	enum:__anon101
K_JOY25	src/client/keycodes.h	/^	K_JOY25,$/;"	e	enum:__anon101
K_JOY26	src/client/keycodes.h	/^	K_JOY26,$/;"	e	enum:__anon101
K_JOY27	src/client/keycodes.h	/^	K_JOY27,$/;"	e	enum:__anon101
K_JOY28	src/client/keycodes.h	/^	K_JOY28,$/;"	e	enum:__anon101
K_JOY29	src/client/keycodes.h	/^	K_JOY29,$/;"	e	enum:__anon101
K_JOY3	src/client/keycodes.h	/^	K_JOY3,$/;"	e	enum:__anon101
K_JOY30	src/client/keycodes.h	/^	K_JOY30,$/;"	e	enum:__anon101
K_JOY31	src/client/keycodes.h	/^	K_JOY31,$/;"	e	enum:__anon101
K_JOY32	src/client/keycodes.h	/^	K_JOY32,$/;"	e	enum:__anon101
K_JOY4	src/client/keycodes.h	/^	K_JOY4,$/;"	e	enum:__anon101
K_JOY5	src/client/keycodes.h	/^	K_JOY5,$/;"	e	enum:__anon101
K_JOY6	src/client/keycodes.h	/^	K_JOY6,$/;"	e	enum:__anon101
K_JOY7	src/client/keycodes.h	/^	K_JOY7,$/;"	e	enum:__anon101
K_JOY8	src/client/keycodes.h	/^	K_JOY8,$/;"	e	enum:__anon101
K_JOY9	src/client/keycodes.h	/^	K_JOY9,$/;"	e	enum:__anon101
K_KP_5	src/client/keycodes.h	/^	K_KP_5,$/;"	e	enum:__anon101
K_KP_DEL	src/client/keycodes.h	/^	K_KP_DEL,$/;"	e	enum:__anon101
K_KP_DOWNARROW	src/client/keycodes.h	/^	K_KP_DOWNARROW,$/;"	e	enum:__anon101
K_KP_END	src/client/keycodes.h	/^	K_KP_END,$/;"	e	enum:__anon101
K_KP_ENTER	src/client/keycodes.h	/^	K_KP_ENTER,$/;"	e	enum:__anon101
K_KP_EQUALS	src/client/keycodes.h	/^	K_KP_EQUALS,$/;"	e	enum:__anon101
K_KP_HOME	src/client/keycodes.h	/^	K_KP_HOME,$/;"	e	enum:__anon101
K_KP_INS	src/client/keycodes.h	/^	K_KP_INS,$/;"	e	enum:__anon101
K_KP_LEFTARROW	src/client/keycodes.h	/^	K_KP_LEFTARROW,$/;"	e	enum:__anon101
K_KP_MINUS	src/client/keycodes.h	/^	K_KP_MINUS,$/;"	e	enum:__anon101
K_KP_NUMLOCK	src/client/keycodes.h	/^	K_KP_NUMLOCK,$/;"	e	enum:__anon101
K_KP_PGDN	src/client/keycodes.h	/^	K_KP_PGDN,$/;"	e	enum:__anon101
K_KP_PGUP	src/client/keycodes.h	/^	K_KP_PGUP,$/;"	e	enum:__anon101
K_KP_PLUS	src/client/keycodes.h	/^	K_KP_PLUS,$/;"	e	enum:__anon101
K_KP_RIGHTARROW	src/client/keycodes.h	/^	K_KP_RIGHTARROW,$/;"	e	enum:__anon101
K_KP_SLASH	src/client/keycodes.h	/^	K_KP_SLASH,$/;"	e	enum:__anon101
K_KP_STAR	src/client/keycodes.h	/^	K_KP_STAR,$/;"	e	enum:__anon101
K_KP_UPARROW	src/client/keycodes.h	/^	K_KP_UPARROW,$/;"	e	enum:__anon101
K_LAST_KEY	src/client/keycodes.h	274;"	d
K_LEFTARROW	src/client/keycodes.h	/^	K_LEFTARROW,$/;"	e	enum:__anon101
K_MENU	src/client/keycodes.h	/^	K_MENU,$/;"	e	enum:__anon101
K_MODE	src/client/keycodes.h	/^	K_MODE,$/;"	e	enum:__anon101
K_MOUSE1	src/client/keycodes.h	/^	K_MOUSE1,$/;"	e	enum:__anon101
K_MOUSE2	src/client/keycodes.h	/^	K_MOUSE2,$/;"	e	enum:__anon101
K_MOUSE3	src/client/keycodes.h	/^	K_MOUSE3,$/;"	e	enum:__anon101
K_MOUSE4	src/client/keycodes.h	/^	K_MOUSE4,$/;"	e	enum:__anon101
K_MOUSE5	src/client/keycodes.h	/^	K_MOUSE5,$/;"	e	enum:__anon101
K_MWHEELDOWN	src/client/keycodes.h	/^	K_MWHEELDOWN,$/;"	e	enum:__anon101
K_MWHEELUP	src/client/keycodes.h	/^	K_MWHEELUP,$/;"	e	enum:__anon101
K_NONE	src/client/keycodes.h	/^	K_NONE = -1,$/;"	e	enum:__anon101
K_PAUSE	src/client/keycodes.h	/^	K_PAUSE,$/;"	e	enum:__anon101
K_PGDN	src/client/keycodes.h	/^	K_PGDN,$/;"	e	enum:__anon101
K_PGUP	src/client/keycodes.h	/^	K_PGUP,$/;"	e	enum:__anon101
K_POWER	src/client/keycodes.h	/^	K_POWER,$/;"	e	enum:__anon101
K_PRINT	src/client/keycodes.h	/^	K_PRINT,$/;"	e	enum:__anon101
K_RIGHTARROW	src/client/keycodes.h	/^	K_RIGHTARROW,$/;"	e	enum:__anon101
K_SCROLLOCK	src/client/keycodes.h	/^	K_SCROLLOCK,$/;"	e	enum:__anon101
K_SHIFT	src/client/keycodes.h	/^	K_SHIFT,$/;"	e	enum:__anon101
K_SPACE	src/client/keycodes.h	/^	K_SPACE = 32,$/;"	e	enum:__anon101
K_SUPER	src/client/keycodes.h	/^	K_SUPER,$/;"	e	enum:__anon101
K_SYSREQ	src/client/keycodes.h	/^	K_SYSREQ,$/;"	e	enum:__anon101
K_TAB	src/client/keycodes.h	/^	K_TAB = 9,$/;"	e	enum:__anon101
K_UNDO	src/client/keycodes.h	/^	K_UNDO,$/;"	e	enum:__anon101
K_UPARROW	src/client/keycodes.h	/^	K_UPARROW,$/;"	e	enum:__anon101
K_WORLD_0	src/client/keycodes.h	/^	K_WORLD_0,$/;"	e	enum:__anon101
K_WORLD_1	src/client/keycodes.h	/^	K_WORLD_1,$/;"	e	enum:__anon101
K_WORLD_10	src/client/keycodes.h	/^	K_WORLD_10,$/;"	e	enum:__anon101
K_WORLD_11	src/client/keycodes.h	/^	K_WORLD_11,$/;"	e	enum:__anon101
K_WORLD_12	src/client/keycodes.h	/^	K_WORLD_12,$/;"	e	enum:__anon101
K_WORLD_13	src/client/keycodes.h	/^	K_WORLD_13,$/;"	e	enum:__anon101
K_WORLD_14	src/client/keycodes.h	/^	K_WORLD_14,$/;"	e	enum:__anon101
K_WORLD_15	src/client/keycodes.h	/^	K_WORLD_15,$/;"	e	enum:__anon101
K_WORLD_16	src/client/keycodes.h	/^	K_WORLD_16,$/;"	e	enum:__anon101
K_WORLD_17	src/client/keycodes.h	/^	K_WORLD_17,$/;"	e	enum:__anon101
K_WORLD_18	src/client/keycodes.h	/^	K_WORLD_18,$/;"	e	enum:__anon101
K_WORLD_19	src/client/keycodes.h	/^	K_WORLD_19,$/;"	e	enum:__anon101
K_WORLD_2	src/client/keycodes.h	/^	K_WORLD_2,$/;"	e	enum:__anon101
K_WORLD_20	src/client/keycodes.h	/^	K_WORLD_20,$/;"	e	enum:__anon101
K_WORLD_21	src/client/keycodes.h	/^	K_WORLD_21,$/;"	e	enum:__anon101
K_WORLD_22	src/client/keycodes.h	/^	K_WORLD_22,$/;"	e	enum:__anon101
K_WORLD_23	src/client/keycodes.h	/^	K_WORLD_23,$/;"	e	enum:__anon101
K_WORLD_24	src/client/keycodes.h	/^	K_WORLD_24,$/;"	e	enum:__anon101
K_WORLD_25	src/client/keycodes.h	/^	K_WORLD_25,$/;"	e	enum:__anon101
K_WORLD_26	src/client/keycodes.h	/^	K_WORLD_26,$/;"	e	enum:__anon101
K_WORLD_27	src/client/keycodes.h	/^	K_WORLD_27,$/;"	e	enum:__anon101
K_WORLD_28	src/client/keycodes.h	/^	K_WORLD_28,$/;"	e	enum:__anon101
K_WORLD_29	src/client/keycodes.h	/^	K_WORLD_29,$/;"	e	enum:__anon101
K_WORLD_3	src/client/keycodes.h	/^	K_WORLD_3,$/;"	e	enum:__anon101
K_WORLD_30	src/client/keycodes.h	/^	K_WORLD_30,$/;"	e	enum:__anon101
K_WORLD_31	src/client/keycodes.h	/^	K_WORLD_31,$/;"	e	enum:__anon101
K_WORLD_32	src/client/keycodes.h	/^	K_WORLD_32,$/;"	e	enum:__anon101
K_WORLD_33	src/client/keycodes.h	/^	K_WORLD_33,$/;"	e	enum:__anon101
K_WORLD_34	src/client/keycodes.h	/^	K_WORLD_34,$/;"	e	enum:__anon101
K_WORLD_35	src/client/keycodes.h	/^	K_WORLD_35,$/;"	e	enum:__anon101
K_WORLD_36	src/client/keycodes.h	/^	K_WORLD_36,$/;"	e	enum:__anon101
K_WORLD_37	src/client/keycodes.h	/^	K_WORLD_37,$/;"	e	enum:__anon101
K_WORLD_38	src/client/keycodes.h	/^	K_WORLD_38,$/;"	e	enum:__anon101
K_WORLD_39	src/client/keycodes.h	/^	K_WORLD_39,$/;"	e	enum:__anon101
K_WORLD_4	src/client/keycodes.h	/^	K_WORLD_4,$/;"	e	enum:__anon101
K_WORLD_40	src/client/keycodes.h	/^	K_WORLD_40,$/;"	e	enum:__anon101
K_WORLD_41	src/client/keycodes.h	/^	K_WORLD_41,$/;"	e	enum:__anon101
K_WORLD_42	src/client/keycodes.h	/^	K_WORLD_42,$/;"	e	enum:__anon101
K_WORLD_43	src/client/keycodes.h	/^	K_WORLD_43,$/;"	e	enum:__anon101
K_WORLD_44	src/client/keycodes.h	/^	K_WORLD_44,$/;"	e	enum:__anon101
K_WORLD_45	src/client/keycodes.h	/^	K_WORLD_45,$/;"	e	enum:__anon101
K_WORLD_46	src/client/keycodes.h	/^	K_WORLD_46,$/;"	e	enum:__anon101
K_WORLD_47	src/client/keycodes.h	/^	K_WORLD_47,$/;"	e	enum:__anon101
K_WORLD_48	src/client/keycodes.h	/^	K_WORLD_48,$/;"	e	enum:__anon101
K_WORLD_49	src/client/keycodes.h	/^	K_WORLD_49,$/;"	e	enum:__anon101
K_WORLD_5	src/client/keycodes.h	/^	K_WORLD_5,$/;"	e	enum:__anon101
K_WORLD_50	src/client/keycodes.h	/^	K_WORLD_50,$/;"	e	enum:__anon101
K_WORLD_51	src/client/keycodes.h	/^	K_WORLD_51,$/;"	e	enum:__anon101
K_WORLD_52	src/client/keycodes.h	/^	K_WORLD_52,$/;"	e	enum:__anon101
K_WORLD_53	src/client/keycodes.h	/^	K_WORLD_53,$/;"	e	enum:__anon101
K_WORLD_54	src/client/keycodes.h	/^	K_WORLD_54,$/;"	e	enum:__anon101
K_WORLD_55	src/client/keycodes.h	/^	K_WORLD_55,$/;"	e	enum:__anon101
K_WORLD_56	src/client/keycodes.h	/^	K_WORLD_56,$/;"	e	enum:__anon101
K_WORLD_57	src/client/keycodes.h	/^	K_WORLD_57,$/;"	e	enum:__anon101
K_WORLD_58	src/client/keycodes.h	/^	K_WORLD_58,$/;"	e	enum:__anon101
K_WORLD_59	src/client/keycodes.h	/^	K_WORLD_59,$/;"	e	enum:__anon101
K_WORLD_6	src/client/keycodes.h	/^	K_WORLD_6,$/;"	e	enum:__anon101
K_WORLD_60	src/client/keycodes.h	/^	K_WORLD_60,$/;"	e	enum:__anon101
K_WORLD_61	src/client/keycodes.h	/^	K_WORLD_61,$/;"	e	enum:__anon101
K_WORLD_62	src/client/keycodes.h	/^	K_WORLD_62,$/;"	e	enum:__anon101
K_WORLD_63	src/client/keycodes.h	/^	K_WORLD_63,$/;"	e	enum:__anon101
K_WORLD_64	src/client/keycodes.h	/^	K_WORLD_64,$/;"	e	enum:__anon101
K_WORLD_65	src/client/keycodes.h	/^	K_WORLD_65,$/;"	e	enum:__anon101
K_WORLD_66	src/client/keycodes.h	/^	K_WORLD_66,$/;"	e	enum:__anon101
K_WORLD_67	src/client/keycodes.h	/^	K_WORLD_67,$/;"	e	enum:__anon101
K_WORLD_68	src/client/keycodes.h	/^	K_WORLD_68,$/;"	e	enum:__anon101
K_WORLD_69	src/client/keycodes.h	/^	K_WORLD_69,$/;"	e	enum:__anon101
K_WORLD_7	src/client/keycodes.h	/^	K_WORLD_7,$/;"	e	enum:__anon101
K_WORLD_70	src/client/keycodes.h	/^	K_WORLD_70,$/;"	e	enum:__anon101
K_WORLD_71	src/client/keycodes.h	/^	K_WORLD_71,$/;"	e	enum:__anon101
K_WORLD_72	src/client/keycodes.h	/^	K_WORLD_72,$/;"	e	enum:__anon101
K_WORLD_73	src/client/keycodes.h	/^	K_WORLD_73,$/;"	e	enum:__anon101
K_WORLD_74	src/client/keycodes.h	/^	K_WORLD_74,$/;"	e	enum:__anon101
K_WORLD_75	src/client/keycodes.h	/^	K_WORLD_75,$/;"	e	enum:__anon101
K_WORLD_76	src/client/keycodes.h	/^	K_WORLD_76,$/;"	e	enum:__anon101
K_WORLD_77	src/client/keycodes.h	/^	K_WORLD_77,$/;"	e	enum:__anon101
K_WORLD_78	src/client/keycodes.h	/^	K_WORLD_78,$/;"	e	enum:__anon101
K_WORLD_79	src/client/keycodes.h	/^	K_WORLD_79,$/;"	e	enum:__anon101
K_WORLD_8	src/client/keycodes.h	/^	K_WORLD_8,$/;"	e	enum:__anon101
K_WORLD_80	src/client/keycodes.h	/^	K_WORLD_80,$/;"	e	enum:__anon101
K_WORLD_81	src/client/keycodes.h	/^	K_WORLD_81,$/;"	e	enum:__anon101
K_WORLD_82	src/client/keycodes.h	/^	K_WORLD_82,$/;"	e	enum:__anon101
K_WORLD_83	src/client/keycodes.h	/^	K_WORLD_83,$/;"	e	enum:__anon101
K_WORLD_84	src/client/keycodes.h	/^	K_WORLD_84,$/;"	e	enum:__anon101
K_WORLD_85	src/client/keycodes.h	/^	K_WORLD_85,$/;"	e	enum:__anon101
K_WORLD_86	src/client/keycodes.h	/^	K_WORLD_86,$/;"	e	enum:__anon101
K_WORLD_87	src/client/keycodes.h	/^	K_WORLD_87,$/;"	e	enum:__anon101
K_WORLD_88	src/client/keycodes.h	/^	K_WORLD_88,$/;"	e	enum:__anon101
K_WORLD_89	src/client/keycodes.h	/^	K_WORLD_89,$/;"	e	enum:__anon101
K_WORLD_9	src/client/keycodes.h	/^	K_WORLD_9,$/;"	e	enum:__anon101
K_WORLD_90	src/client/keycodes.h	/^	K_WORLD_90,$/;"	e	enum:__anon101
K_WORLD_91	src/client/keycodes.h	/^	K_WORLD_91,$/;"	e	enum:__anon101
K_WORLD_92	src/client/keycodes.h	/^	K_WORLD_92,$/;"	e	enum:__anon101
K_WORLD_93	src/client/keycodes.h	/^	K_WORLD_93,$/;"	e	enum:__anon101
K_WORLD_94	src/client/keycodes.h	/^	K_WORLD_94,$/;"	e	enum:__anon101
K_WORLD_95	src/client/keycodes.h	/^	K_WORLD_95,$/;"	e	enum:__anon101
KeyClass	src/server/sqlite3.c	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass	file:
KeyInfo	src/server/sqlite3.c	/^struct KeyInfo {$/;"	s	file:
KeyInfo	src/server/sqlite3.c	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo	file:
Key_Bind_f	src/client/cl_keys.c	/^void Key_Bind_f (void)$/;"	f
Key_Bindlist_f	src/client/cl_keys.c	/^void Key_Bindlist_f( void ) {$/;"	f
Key_ClearStates	src/client/cl_keys.c	/^void Key_ClearStates (void)$/;"	f
Key_CompleteBind	src/client/cl_keys.c	/^static void Key_CompleteBind( char *args, int argNum )$/;"	f	file:
Key_CompleteUnbind	src/client/cl_keys.c	/^static void Key_CompleteUnbind( char *args, int argNum )$/;"	f	file:
Key_GetBinding	src/client/cl_keys.c	/^char *Key_GetBinding( int keynum ) {$/;"	f
Key_GetBindingBuf	src/client/cl_keys.c	/^void Key_GetBindingBuf( int keynum, char *buf, int buflen ) {$/;"	f
Key_GetCatcher	src/client/cl_keys.c	/^int Key_GetCatcher( void ) {$/;"	f
Key_GetKey	src/client/cl_keys.c	/^int Key_GetKey(const char *binding) {$/;"	f
Key_GetOverstrikeMode	src/client/cl_keys.c	/^qboolean Key_GetOverstrikeMode( void ) {$/;"	f
Key_IsDown	src/client/cl_keys.c	/^qboolean Key_IsDown( int keynum ) {$/;"	f
Key_KeynameCompletion	src/client/cl_keys.c	/^void Key_KeynameCompletion( void(*callback)(const char *s) ) {$/;"	f
Key_KeynumToString	src/client/cl_keys.c	/^char *Key_KeynumToString( int keynum ) {$/;"	f
Key_KeynumToStringBuf	src/client/cl_keys.c	/^void Key_KeynumToStringBuf( int keynum, char *buf, int buflen ) {$/;"	f
Key_SetBinding	src/client/cl_keys.c	/^void Key_SetBinding( int keynum, const char *binding ) {$/;"	f
Key_SetCatcher	src/client/cl_keys.c	/^void Key_SetCatcher( int catcher ) {$/;"	f
Key_SetOverstrikeMode	src/client/cl_keys.c	/^void Key_SetOverstrikeMode( qboolean state ) {$/;"	f
Key_StringToKeynum	src/client/cl_keys.c	/^int Key_StringToKeynum( char *str ) {$/;"	f
Key_Unbind_f	src/client/cl_keys.c	/^void Key_Unbind_f (void)$/;"	f
Key_Unbindall_f	src/client/cl_keys.c	/^void Key_Unbindall_f (void)$/;"	f
Key_WriteBindings	src/client/cl_keys.c	/^void Key_WriteBindings( fileHandle_t f ) {$/;"	f
Key_WriteBindings	src/null/null_client.c	/^void Key_WriteBindings( fileHandle_t f ) {$/;"	f
KeywordHash_Add	src/ui/ui_shared.c	/^void KeywordHash_Add( keywordHash_t *table[], keywordHash_t *key )$/;"	f
KeywordHash_Find	src/ui/ui_shared.c	/^keywordHash_t *KeywordHash_Find( keywordHash_t *table[], char *keyword )$/;"	f
KeywordHash_Key	src/ui/ui_shared.c	/^int KeywordHash_Key( char *keyword )$/;"	f
Kind	src/tools/lcc/lburg/lburg.h	/^typedef enum { TERM=1, NONTERM } Kind;$/;"	t	typeref:enum:__anon269
L0	src/qcommon/vm_sparc.h	21;"	d
L1	src/game/bg_lib.c	/^L1      =  6.0000002384e-01, \/* 0x3f19999a *\/$/;"	v	file:
L1	src/qcommon/vm_sparc.h	22;"	d
L2	src/game/bg_lib.c	/^L2      =  4.2857143283e-01, \/* 0x3edb6db7 *\/$/;"	v	file:
L2	src/qcommon/vm_sparc.h	23;"	d
L3	src/game/bg_lib.c	/^L3      =  3.3333334327e-01, \/* 0x3eaaaaab *\/$/;"	v	file:
L3	src/qcommon/vm_sparc.h	24;"	d
L4	src/game/bg_lib.c	/^L4      =  2.7272811532e-01, \/* 0x3e8ba305 *\/$/;"	v	file:
L4	src/qcommon/vm_sparc.h	25;"	d
L5	src/game/bg_lib.c	/^L5      =  2.3066075146e-01, \/* 0x3e6c3255 *\/$/;"	v	file:
L5	src/qcommon/vm_sparc.h	26;"	d
L6	src/game/bg_lib.c	/^L6      =  2.0697501302e-01, \/* 0x3e53f142 *\/$/;"	v	file:
L6	src/qcommon/vm_sparc.h	27;"	d
L7	src/qcommon/vm_sparc.h	28;"	d
LABELS	src/tools/lcc/src/c.h	/^enum { CONSTANTS=1, LABELS, GLOBAL, PARAM, LOCAL };$/;"	e	enum:__anon303
LAG_SAMPLES	src/cgame/cg_draw.c	2004;"	d	file:
LAND	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
LAND_DEFLECT_TIME	src/cgame/cg_local.h	46;"	d
LAND_RETURN_TIME	src/cgame/cg_local.h	47;"	d
LAN_AddServer	src/client/cl_ui.c	/^static int LAN_AddServer(int source, const char *name, const char *address) {$/;"	f	file:
LAN_ClearPing	src/client/cl_ui.c	/^static void LAN_ClearPing( int n ) {$/;"	f	file:
LAN_CompareServers	src/client/cl_ui.c	/^static int LAN_CompareServers( int source, int sortKey, int sortDir, int s1, int s2 ) {$/;"	f	file:
LAN_GetPing	src/client/cl_ui.c	/^static void LAN_GetPing( int n, char *buf, int buflen, int *pingtime ) {$/;"	f	file:
LAN_GetPingInfo	src/client/cl_ui.c	/^static void LAN_GetPingInfo( int n, char *buf, int buflen ) {$/;"	f	file:
LAN_GetPingQueueCount	src/client/cl_ui.c	/^static int LAN_GetPingQueueCount( void ) {$/;"	f	file:
LAN_GetServerAddressString	src/client/cl_ui.c	/^static void LAN_GetServerAddressString( int source, int n, char *buf, int buflen ) {$/;"	f	file:
LAN_GetServerCount	src/client/cl_ui.c	/^static int LAN_GetServerCount( int source ) {$/;"	f	file:
LAN_GetServerInfo	src/client/cl_ui.c	/^static void LAN_GetServerInfo( int source, int n, char *buf, int buflen ) {$/;"	f	file:
LAN_GetServerPing	src/client/cl_ui.c	/^static int LAN_GetServerPing( int source, int n ) {$/;"	f	file:
LAN_GetServerPtr	src/client/cl_ui.c	/^static serverInfo_t *LAN_GetServerPtr( int source, int n ) {$/;"	f	file:
LAN_GetServerStatus	src/client/cl_ui.c	/^int LAN_GetServerStatus( char *serverAddress, char *serverStatus, int maxLen ) {$/;"	f
LAN_LoadCachedServers	src/client/cl_ui.c	/^void LAN_LoadCachedServers( void ) {$/;"	f
LAN_MarkServerVisible	src/client/cl_ui.c	/^static void LAN_MarkServerVisible(int source, int n, qboolean visible ) {$/;"	f	file:
LAN_RemoveServer	src/client/cl_ui.c	/^static void LAN_RemoveServer(int source, const char *addr) {$/;"	f	file:
LAN_ResetPings	src/client/cl_ui.c	/^static void LAN_ResetPings(int source) {$/;"	f	file:
LAN_SaveServersToCache	src/client/cl_ui.c	/^void LAN_SaveServersToCache( void ) {$/;"	f
LAN_ServerIsVisible	src/client/cl_ui.c	/^static int LAN_ServerIsVisible(int source, int n ) {$/;"	f	file:
LAN_UpdateVisiblePings	src/client/cl_ui.c	/^qboolean LAN_UpdateVisiblePings(int source ) {$/;"	f
LARGEST_INT64	src/server/sqlite3.c	10093;"	d	file:
LARGEST_INT64	src/server/sqlite3.c	141557;"	d	file:
LARGEST_INT64	src/server/sqlite3.c	166503;"	d	file:
LARGEST_INT64	src/server/sqlite3.c	169292;"	d	file:
LASGUN_AMMO	src/game/tremulous.h	419;"	d
LASGUN_DAMAGE	src/game/tremulous.h	423;"	d
LASGUN_K_SCALE	src/game/tremulous.h	421;"	d
LASGUN_PRICE	src/game/tremulous.h	418;"	d
LASGUN_RELOAD	src/game/tremulous.h	422;"	d
LASGUN_REPEAT	src/game/tremulous.h	420;"	d
LAST	src/tools/lcc/src/c.h	/^	LAST$/;"	e	enum:__anon285
LASTOP	src/tools/lcc/src/c.h	/^       	op(LOAD,U,csilhp) LASTOP };$/;"	e	enum:__anon287
LAST_COMMAND_MOV_STACK_EAX	src/qcommon/vm_x86.c	/^	LAST_COMMAND_MOV_STACK_EAX,$/;"	e	enum:__anon444	file:
LAST_COMMAND_NONE	src/qcommon/vm_x86.c	/^	LAST_COMMAND_NONE	= 0,$/;"	e	enum:__anon444	file:
LAST_COMMAND_SUB_BL_1	src/qcommon/vm_x86.c	/^	LAST_COMMAND_SUB_BL_1,$/;"	e	enum:__anon444	file:
LAST_COMMAND_SUB_BL_2	src/qcommon/vm_x86.c	/^	LAST_COMMAND_SUB_BL_2,$/;"	e	enum:__anon444	file:
LBURG	GNUmakefile	/^LBURG       = $(B)\/tools\/lburg\/lburg$(TOOLS_BINEXT)$/;"	m
LBURGDIR	GNUmakefile	/^LBURGDIR=$(MOUNT_DIR)\/tools\/lcc\/lburg$/;"	m
LBURGOBJ	GNUmakefile	/^LBURGOBJ= \\$/;"	m
LBURG_MAX	src/tools/lcc/src/config.h	86;"	d
LCANNON_AMMO	src/game/tremulous.h	463;"	d
LCANNON_CHARGE_AMMO	src/game/tremulous.h	479;"	d
LCANNON_CHARGE_AMMO_REDUCE	src/game/tremulous.h	480;"	d
LCANNON_CHARGE_TIME_MAX	src/game/tremulous.h	476;"	d
LCANNON_CHARGE_TIME_MIN	src/game/tremulous.h	477;"	d
LCANNON_CHARGE_TIME_WARN	src/game/tremulous.h	478;"	d
LCANNON_DAMAGE	src/game/tremulous.h	467;"	d
LCANNON_K_SCALE	src/game/tremulous.h	464;"	d
LCANNON_PRICE	src/game/tremulous.h	462;"	d
LCANNON_RADIUS	src/game/tremulous.h	468;"	d
LCANNON_RELOAD	src/game/tremulous.h	466;"	d
LCANNON_REPEAT	src/game/tremulous.h	465;"	d
LCANNON_SECONDARY_DAMAGE	src/game/tremulous.h	470;"	d
LCANNON_SECONDARY_RADIUS	src/game/tremulous.h	471;"	d
LCANNON_SECONDARY_RELOAD	src/game/tremulous.h	473;"	d
LCANNON_SECONDARY_REPEAT	src/game/tremulous.h	474;"	d
LCANNON_SECONDARY_SPEED	src/game/tremulous.h	472;"	d
LCANNON_SIZE	src/game/tremulous.h	469;"	d
LCANNON_SPEED_MIN	src/game/tremulous.h	475;"	d
LCANNON_SPLASH_BATTLESUIT	src/game/tremulous.h	483;"	d
LCANNON_SPLASH_HELMET	src/game/tremulous.h	482;"	d
LCANNON_SPLASH_LIGHTARMOUR	src/game/tremulous.h	481;"	d
LCChargeFire	src/game/g_weapon.c	/^void LCChargeFire( gentity_t *ent, qboolean secondary )$/;"	f
LCS_ITERATOR_FINISHED	src/server/sqlite3.c	155237;"	d	file:
LClampDone	src/asm/snd_mixa.s	/^LClampDone:$/;"	l
LClampDone2	src/asm/snd_mixa.s	/^LClampDone2:$/;"	l
LClampHigh	src/asm/snd_mixa.s	/^LClampHigh:$/;"	l
LClampHigh2	src/asm/snd_mixa.s	/^LClampHigh2:$/;"	l
LDF	src/qcommon/vm_sparc.c	/^	LDFI, LDF,$/;"	e	enum:sparc_iname	file:
LDFI	src/qcommon/vm_sparc.c	/^	LDFI, LDF,$/;"	e	enum:sparc_iname	file:
LDL	src/qcommon/vm_sparc.c	149;"	d	file:
LDLI	src/qcommon/vm_sparc.c	148;"	d	file:
LDOUBLE	src/game/bg_lib.c	2046;"	d	file:
LDOUBLE	src/game/bg_lib.c	2048;"	d	file:
LDUB	src/qcommon/vm_sparc.c	/^	LDUBI, LDUB,$/;"	e	enum:sparc_iname	file:
LDUBI	src/qcommon/vm_sparc.c	/^	LDUBI, LDUB,$/;"	e	enum:sparc_iname	file:
LDUH	src/qcommon/vm_sparc.c	/^	LDUHI, LDUH,$/;"	e	enum:sparc_iname	file:
LDUHI	src/qcommon/vm_sparc.c	/^	LDUHI, LDUH,$/;"	e	enum:sparc_iname	file:
LDUW	src/qcommon/vm_sparc.c	/^	LDUWI, LDUW,$/;"	e	enum:sparc_iname	file:
LDUWI	src/qcommon/vm_sparc.c	/^	LDUWI, LDUW,$/;"	e	enum:sparc_iname	file:
LDX	src/qcommon/vm_sparc.c	/^	LDXI, LDX,$/;"	e	enum:sparc_iname	file:
LDXI	src/qcommon/vm_sparc.c	/^	LDXI, LDX,$/;"	e	enum:sparc_iname	file:
LDone	src/asm/snd_mixa.s	/^LDone:$/;"	l
LEGS_BACK	src/game/bg_public.h	/^  LEGS_BACK,$/;"	e	enum:__anon341
LEGS_BACKCR	src/game/bg_public.h	/^  LEGS_BACKCR,$/;"	e	enum:__anon341
LEGS_BACKWALK	src/game/bg_public.h	/^  LEGS_BACKWALK,$/;"	e	enum:__anon341
LEGS_IDLE	src/game/bg_public.h	/^  LEGS_IDLE,$/;"	e	enum:__anon341
LEGS_IDLECR	src/game/bg_public.h	/^  LEGS_IDLECR,$/;"	e	enum:__anon341
LEGS_JUMP	src/game/bg_public.h	/^  LEGS_JUMP,$/;"	e	enum:__anon341
LEGS_JUMPB	src/game/bg_public.h	/^  LEGS_JUMPB,$/;"	e	enum:__anon341
LEGS_LAND	src/game/bg_public.h	/^  LEGS_LAND,$/;"	e	enum:__anon341
LEGS_LANDB	src/game/bg_public.h	/^  LEGS_LANDB,$/;"	e	enum:__anon341
LEGS_RUN	src/game/bg_public.h	/^  LEGS_RUN,$/;"	e	enum:__anon341
LEGS_SWIM	src/game/bg_public.h	/^  LEGS_SWIM,$/;"	e	enum:__anon341
LEGS_TURN	src/game/bg_public.h	/^  LEGS_TURN,$/;"	e	enum:__anon341
LEGS_WALK	src/game/bg_public.h	/^  LEGS_WALK,$/;"	e	enum:__anon341
LEGS_WALKCR	src/game/bg_public.h	/^  LEGS_WALKCR,$/;"	e	enum:__anon341
LEQ	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
LERP	src/qcommon/q_shared.h	1561;"	d
LETTER	src/tools/lcc/src/lex.c	/^enum { BLANK=01,  NEWLINE=02, LETTER=04,$/;"	e	enum:__anon281	file:
LEVEL0_BITE_DMG	src/game/tremulous.h	50;"	d
LEVEL0_BITE_K_SCALE	src/game/tremulous.h	54;"	d
LEVEL0_BITE_RANGE	src/game/tremulous.h	51;"	d
LEVEL0_BITE_REPEAT	src/game/tremulous.h	53;"	d
LEVEL0_BITE_WIDTH	src/game/tremulous.h	52;"	d
LEVEL0_COST	src/game/tremulous.h	172;"	d
LEVEL0_HEALTH	src/game/tremulous.h	170;"	d
LEVEL0_REGEN	src/game/tremulous.h	171;"	d
LEVEL0_SPEED	src/game/tremulous.h	168;"	d
LEVEL0_VALUE	src/game/tremulous.h	169;"	d
LEVEL1_CLAW_DMG	src/game/tremulous.h	56;"	d
LEVEL1_CLAW_K_SCALE	src/game/tremulous.h	62;"	d
LEVEL1_CLAW_RANGE	src/game/tremulous.h	57;"	d
LEVEL1_CLAW_REPEAT	src/game/tremulous.h	60;"	d
LEVEL1_CLAW_U_K_SCALE	src/game/tremulous.h	63;"	d
LEVEL1_CLAW_U_RANGE	src/game/tremulous.h	58;"	d
LEVEL1_CLAW_U_REPEAT	src/game/tremulous.h	61;"	d
LEVEL1_CLAW_WIDTH	src/game/tremulous.h	59;"	d
LEVEL1_COST	src/game/tremulous.h	178;"	d
LEVEL1_GRAB_RANGE	src/game/tremulous.h	64;"	d
LEVEL1_GRAB_TIME	src/game/tremulous.h	66;"	d
LEVEL1_GRAB_U_RANGE	src/game/tremulous.h	65;"	d
LEVEL1_GRAB_U_TIME	src/game/tremulous.h	67;"	d
LEVEL1_HEALTH	src/game/tremulous.h	176;"	d
LEVEL1_PCLOUD_DMG	src/game/tremulous.h	68;"	d
LEVEL1_PCLOUD_RANGE	src/game/tremulous.h	69;"	d
LEVEL1_PCLOUD_REPEAT	src/game/tremulous.h	70;"	d
LEVEL1_PCLOUD_TIME	src/game/tremulous.h	71;"	d
LEVEL1_REGEN	src/game/tremulous.h	177;"	d
LEVEL1_REGEN_MOD	src/game/tremulous.h	72;"	d
LEVEL1_REGEN_SCOREINC	src/game/tremulous.h	74;"	d
LEVEL1_SPEED	src/game/tremulous.h	174;"	d
LEVEL1_UPG_COST	src/game/tremulous.h	184;"	d
LEVEL1_UPG_HEALTH	src/game/tremulous.h	182;"	d
LEVEL1_UPG_REGEN	src/game/tremulous.h	183;"	d
LEVEL1_UPG_REGEN_MOD	src/game/tremulous.h	73;"	d
LEVEL1_UPG_REGEN_SCOREINC	src/game/tremulous.h	75;"	d
LEVEL1_UPG_SPEED	src/game/tremulous.h	180;"	d
LEVEL1_UPG_VALUE	src/game/tremulous.h	181;"	d
LEVEL1_VALUE	src/game/tremulous.h	175;"	d
LEVEL2_AREAZAP_CHAIN_FALLOFF	src/game/tremulous.h	88;"	d
LEVEL2_AREAZAP_CHAIN_RANGE	src/game/tremulous.h	87;"	d
LEVEL2_AREAZAP_DMG	src/game/tremulous.h	85;"	d
LEVEL2_AREAZAP_MAX_TARGETS	src/game/tremulous.h	92;"	d
LEVEL2_AREAZAP_RANGE	src/game/tremulous.h	86;"	d
LEVEL2_AREAZAP_REPEAT	src/game/tremulous.h	90;"	d
LEVEL2_AREAZAP_TIME	src/game/tremulous.h	91;"	d
LEVEL2_AREAZAP_WIDTH	src/game/tremulous.h	89;"	d
LEVEL2_CLAW_DMG	src/game/tremulous.h	77;"	d
LEVEL2_CLAW_K_SCALE	src/game/tremulous.h	82;"	d
LEVEL2_CLAW_RANGE	src/game/tremulous.h	78;"	d
LEVEL2_CLAW_REPEAT	src/game/tremulous.h	81;"	d
LEVEL2_CLAW_U_K_SCALE	src/game/tremulous.h	84;"	d
LEVEL2_CLAW_U_RANGE	src/game/tremulous.h	79;"	d
LEVEL2_CLAW_U_REPEAT	src/game/tremulous.h	83;"	d
LEVEL2_CLAW_WIDTH	src/game/tremulous.h	80;"	d
LEVEL2_COST	src/game/tremulous.h	190;"	d
LEVEL2_HEALTH	src/game/tremulous.h	188;"	d
LEVEL2_REGEN	src/game/tremulous.h	189;"	d
LEVEL2_SPEED	src/game/tremulous.h	186;"	d
LEVEL2_UPG_COST	src/game/tremulous.h	196;"	d
LEVEL2_UPG_HEALTH	src/game/tremulous.h	194;"	d
LEVEL2_UPG_REGEN	src/game/tremulous.h	195;"	d
LEVEL2_UPG_SPEED	src/game/tremulous.h	192;"	d
LEVEL2_UPG_VALUE	src/game/tremulous.h	193;"	d
LEVEL2_VALUE	src/game/tremulous.h	187;"	d
LEVEL2_WALLJUMP_MAXSPEED	src/game/tremulous.h	93;"	d
LEVEL3_BOUNCEBALL_DMG	src/game/tremulous.h	114;"	d
LEVEL3_BOUNCEBALL_RADIUS	src/game/tremulous.h	117;"	d
LEVEL3_BOUNCEBALL_REGEN	src/game/tremulous.h	118;"	d
LEVEL3_BOUNCEBALL_REPEAT	src/game/tremulous.h	115;"	d
LEVEL3_BOUNCEBALL_SPEED	src/game/tremulous.h	116;"	d
LEVEL3_CLAW_DMG	src/game/tremulous.h	95;"	d
LEVEL3_CLAW_K_SCALE	src/game/tremulous.h	100;"	d
LEVEL3_CLAW_RANGE	src/game/tremulous.h	96;"	d
LEVEL3_CLAW_REPEAT	src/game/tremulous.h	99;"	d
LEVEL3_CLAW_UPG_RANGE	src/game/tremulous.h	97;"	d
LEVEL3_CLAW_U_K_SCALE	src/game/tremulous.h	102;"	d
LEVEL3_CLAW_U_REPEAT	src/game/tremulous.h	101;"	d
LEVEL3_CLAW_WIDTH	src/game/tremulous.h	98;"	d
LEVEL3_COST	src/game/tremulous.h	202;"	d
LEVEL3_FEEDBACK	src/cgame/cg_view.c	677;"	d	file:
LEVEL3_HEALTH	src/game/tremulous.h	200;"	d
LEVEL3_POUNCE_DMG	src/game/tremulous.h	103;"	d
LEVEL3_POUNCE_JUMP_MAG	src/game/tremulous.h	112;"	d
LEVEL3_POUNCE_JUMP_MAG_UPG	src/game/tremulous.h	113;"	d
LEVEL3_POUNCE_RANGE	src/game/tremulous.h	104;"	d
LEVEL3_POUNCE_REPEAT	src/game/tremulous.h	110;"	d
LEVEL3_POUNCE_SPEED_MOD	src/game/tremulous.h	111;"	d
LEVEL3_POUNCE_TIME	src/game/tremulous.h	107;"	d
LEVEL3_POUNCE_TIME_MIN	src/game/tremulous.h	109;"	d
LEVEL3_POUNCE_TIME_UPG	src/game/tremulous.h	108;"	d
LEVEL3_POUNCE_UPG_RANGE	src/game/tremulous.h	105;"	d
LEVEL3_POUNCE_WIDTH	src/game/tremulous.h	106;"	d
LEVEL3_REGEN	src/game/tremulous.h	201;"	d
LEVEL3_SPEED	src/game/tremulous.h	198;"	d
LEVEL3_UPG_COST	src/game/tremulous.h	208;"	d
LEVEL3_UPG_HEALTH	src/game/tremulous.h	206;"	d
LEVEL3_UPG_REGEN	src/game/tremulous.h	207;"	d
LEVEL3_UPG_SPEED	src/game/tremulous.h	204;"	d
LEVEL3_UPG_VALUE	src/game/tremulous.h	205;"	d
LEVEL3_VALUE	src/game/tremulous.h	199;"	d
LEVEL4_CLAW_DMG	src/game/tremulous.h	120;"	d
LEVEL4_CLAW_HEIGHT	src/game/tremulous.h	123;"	d
LEVEL4_CLAW_K_SCALE	src/game/tremulous.h	125;"	d
LEVEL4_CLAW_RANGE	src/game/tremulous.h	121;"	d
LEVEL4_CLAW_REPEAT	src/game/tremulous.h	124;"	d
LEVEL4_CLAW_WIDTH	src/game/tremulous.h	122;"	d
LEVEL4_COST	src/game/tremulous.h	214;"	d
LEVEL4_CRUSH_DAMAGE	src/game/tremulous.h	137;"	d
LEVEL4_CRUSH_DAMAGE_PER_V	src/game/tremulous.h	136;"	d
LEVEL4_CRUSH_REPEAT	src/game/tremulous.h	138;"	d
LEVEL4_FEEDBACK	src/cgame/cg_view.c	640;"	d	file:
LEVEL4_HEALTH	src/game/tremulous.h	212;"	d
LEVEL4_REGEN	src/game/tremulous.h	213;"	d
LEVEL4_SPEED	src/game/tremulous.h	210;"	d
LEVEL4_TRAMPLE_CHARGE_MAX	src/game/tremulous.h	130;"	d
LEVEL4_TRAMPLE_CHARGE_MIN	src/game/tremulous.h	129;"	d
LEVEL4_TRAMPLE_CHARGE_TRIGGER	src/game/tremulous.h	131;"	d
LEVEL4_TRAMPLE_DMG	src/game/tremulous.h	127;"	d
LEVEL4_TRAMPLE_DURATION	src/game/tremulous.h	132;"	d
LEVEL4_TRAMPLE_REPEAT	src/game/tremulous.h	134;"	d
LEVEL4_TRAMPLE_SPEED	src/game/tremulous.h	128;"	d
LEVEL4_TRAMPLE_STOP_PENALTY	src/game/tremulous.h	133;"	d
LEVEL4_VALUE	src/game/tremulous.h	211;"	d
LI	src/qcommon/vm_powerpc_asm.c	326;"	d	file:
LIB	GNUmakefile	/^    LIB=lib64$/;"	m
LIB	GNUmakefile	/^LIB=lib$/;"	m
LIBS	GNUmakefile	/^  LIBS = -framework Cocoa$/;"	m
LIBS	GNUmakefile	/^  LIBS= -lws2_32 -lwinmm -lpsapi$/;"	m
LIBS	GNUmakefile	/^  LIBS=-ldl -lm -lgen$/;"	m
LIBS	GNUmakefile	/^  LIBS=-ldl -lm$/;"	m
LIBS	GNUmakefile	/^  LIBS=-lm$/;"	m
LIBS	GNUmakefile	/^  LIBS=-lsocket -lnsl -ldl -lm$/;"	m
LIBSDIR	GNUmakefile	/^LIBSDIR=$(DEP_DIR)\/libs$/;"	m
LIBSDLMAIN	GNUmakefile	/^  LIBSDLMAIN=$(B)\/libSDL2main.a$/;"	m
LIBSDLMAINSRC	GNUmakefile	/^  LIBSDLMAINSRC=$(LIBSDIR)\/macosx\/libSDL2main.a$/;"	m
LIGHTARMOUR_PCLOUD_PROTECTION	src/game/tremulous.h	495;"	d
LIGHTARMOUR_POISON_PROTECTION	src/game/tremulous.h	494;"	d
LIGHTARMOUR_PRICE	src/game/tremulous.h	493;"	d
LIGHTDEF_ALL	src/renderergl2/tr_local.h	/^	LIGHTDEF_ALL                 = 0x003F,$/;"	e	enum:__anon36
LIGHTDEF_COUNT	src/renderergl2/tr_local.h	/^	LIGHTDEF_COUNT               = 0x0040$/;"	e	enum:__anon36
LIGHTDEF_ENTITY	src/renderergl2/tr_local.h	/^	LIGHTDEF_ENTITY              = 0x0004,$/;"	e	enum:__anon36
LIGHTDEF_LIGHTTYPE_MASK	src/renderergl2/tr_local.h	/^	LIGHTDEF_LIGHTTYPE_MASK      = 0x0003,$/;"	e	enum:__anon36
LIGHTDEF_USE_LIGHTMAP	src/renderergl2/tr_local.h	/^	LIGHTDEF_USE_LIGHTMAP        = 0x0001,$/;"	e	enum:__anon36
LIGHTDEF_USE_LIGHT_VECTOR	src/renderergl2/tr_local.h	/^	LIGHTDEF_USE_LIGHT_VECTOR    = 0x0002,$/;"	e	enum:__anon36
LIGHTDEF_USE_LIGHT_VERTEX	src/renderergl2/tr_local.h	/^	LIGHTDEF_USE_LIGHT_VERTEX    = 0x0003,$/;"	e	enum:__anon36
LIGHTDEF_USE_PARALLAXMAP	src/renderergl2/tr_local.h	/^	LIGHTDEF_USE_PARALLAXMAP     = 0x0010,$/;"	e	enum:__anon36
LIGHTDEF_USE_SHADOWMAP	src/renderergl2/tr_local.h	/^	LIGHTDEF_USE_SHADOWMAP       = 0x0020,$/;"	e	enum:__anon36
LIGHTDEF_USE_TCGEN_AND_TCMOD	src/renderergl2/tr_local.h	/^	LIGHTDEF_USE_TCGEN_AND_TCMOD = 0x0008,$/;"	e	enum:__anon36
LIGHTMAP_2D	src/renderercommon/tr_common.h	70;"	d
LIGHTMAP_BY_VERTEX	src/renderercommon/tr_common.h	71;"	d
LIGHTMAP_HEIGHT	src/qcommon/qfiles.h	355;"	d
LIGHTMAP_NONE	src/renderercommon/tr_common.h	73;"	d
LIGHTMAP_SIZE	src/renderergl1/tr_bsp.c	135;"	d	file:
LIGHTMAP_WHITEIMAGE	src/renderercommon/tr_common.h	72;"	d
LIGHTMAP_WIDTH	src/qcommon/qfiles.h	354;"	d
LIKEFUNC	src/server/sqlite3.c	12480;"	d	file:
LINE_DISTANCE_EPSILON	src/qcommon/q_math.c	1175;"	d	file:
LISTBOX_IMAGE	src/ui/menudef.h	64;"	d
LISTBOX_TEXT	src/ui/menudef.h	63;"	d
LIT	src/tools/lcc/src/c.h	/^enum { CODE=1, BSS, DATA, LIT };$/;"	e	enum:__anon288
LITSEG	src/tools/asm/q3asm.c	/^	LITSEG,		\/\/ strings$/;"	e	enum:__anon266	file:
LL	src/qcommon/cm_load.c	52;"	d	file:
LL	src/renderergl1/tr_model.c	27;"	d	file:
LL	src/renderergl1/tr_model_iqm.c	27;"	d	file:
LL	src/renderergl2/tr_model.c	27;"	d	file:
LL	src/renderergl2/tr_model_iqm.c	26;"	d	file:
LLONG	src/game/bg_lib.c	2053;"	d	file:
LLONG	src/game/bg_lib.c	2055;"	d	file:
LLeftSet	src/asm/snd_mixa.s	/^LLeftSet:$/;"	l
LMix8Loop	src/asm/snd_mixa.s	/^LMix8Loop:$/;"	l
LOCAL	src/tools/lcc/src/c.h	/^enum { CONSTANTS=1, LABELS, GLOBAL, PARAM, LOCAL };$/;"	e	enum:__anon303
LOCAL_DATA_CHUNK	src/qcommon/vm_powerpc.c	555;"	d	file:
LOCKBLOB_DOT	src/game/tremulous.h	324;"	d
LOCKBLOB_K_SCALE	src/game/tremulous.h	325;"	d
LOCKBLOB_LOCKTIME	src/game/tremulous.h	323;"	d
LOCKBLOB_SPEED	src/game/tremulous.h	322;"	d
LOCKFILE_EXCLUSIVE_LOCK	src/server/sqlite3.c	38207;"	d	file:
LOCKFILE_FAIL_IMMEDIATELY	src/server/sqlite3.c	38203;"	d	file:
LOG	src/qcommon/msg.c	511;"	d	file:
LOGIC	src/tools/lcc/cpp/eval.c	20;"	d	file:
LOGMAX	src/server/sqlite3.c	20052;"	d	file:
LONGDOUBLE_TYPE	src/server/sqlite3.c	9803;"	d	file:
LONGDOUBLE_TYPE	src/server/sqlite3.c	9961;"	d	file:
LONG_MAX	src/game/bg_lib.h	54;"	d
LONG_MIN	src/game/bg_lib.h	55;"	d
LOOP_HASH	src/client/snd_dma.c	77;"	d	file:
LOR	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
LOutOfRange	src/asm/matha.s	/^LOutOfRange:$/;"	l
LP	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
LRightSet	src/asm/snd_mixa.s	/^LRightSet:$/;"	l
LSH	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
LT	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
LT1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
LT2	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
LUMA	src/qcommon/q_shared.h	1562;"	d
LUMP_BRUSHES	src/qcommon/qfiles.h	376;"	d
LUMP_BRUSHSIDES	src/qcommon/qfiles.h	377;"	d
LUMP_DRAWINDEXES	src/qcommon/qfiles.h	379;"	d
LUMP_DRAWVERTS	src/qcommon/qfiles.h	378;"	d
LUMP_ENTITIES	src/qcommon/qfiles.h	368;"	d
LUMP_FOGS	src/qcommon/qfiles.h	380;"	d
LUMP_LEAFBRUSHES	src/qcommon/qfiles.h	374;"	d
LUMP_LEAFS	src/qcommon/qfiles.h	372;"	d
LUMP_LEAFSURFACES	src/qcommon/qfiles.h	373;"	d
LUMP_LIGHTGRID	src/qcommon/qfiles.h	383;"	d
LUMP_LIGHTMAPS	src/qcommon/qfiles.h	382;"	d
LUMP_MODELS	src/qcommon/qfiles.h	375;"	d
LUMP_NODES	src/qcommon/qfiles.h	371;"	d
LUMP_PLANES	src/qcommon/qfiles.h	370;"	d
LUMP_SHADERS	src/qcommon/qfiles.h	369;"	d
LUMP_SURFACES	src/qcommon/qfiles.h	381;"	d
LUMP_VISIBILITY	src/qcommon/qfiles.h	384;"	d
LWLBLoopTop	src/asm/snd_mixa.s	/^LWLBLoopTop:$/;"	l
Label	src/tools/lcc/src/c.h	/^	       Label,    Start,    Gen,   Jump,    Switch$/;"	e	enum:code::__anon290
LastCommand	src/qcommon/vm_x86.c	/^static	ELastCommand	LastCommand;$/;"	v	file:
LcsIterator	src/server/sqlite3.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	src/server/sqlite3.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
Length	src/renderercommon/tr_image_png.c	/^	int   Length;$/;"	m	struct:BufferedFile	file:
Length	src/renderercommon/tr_image_png.c	/^	uint32_t Length;$/;"	m	struct:PNG_ChunkHeader	file:
LerpAngle	src/qcommon/q_math.c	/^float LerpAngle (float from, float to, float frac) {$/;"	f
LerpColor	src/ui/ui_shared.c	/^void LerpColor( vec4_t a, vec4_t b, vec4_t c, float t )$/;"	f
LerpDrawVert	src/renderergl1/tr_curve.c	/^static void LerpDrawVert( drawVert_t *a, drawVert_t *b, drawVert_t *out ) {$/;"	f	file:
LerpDrawVert	src/renderergl2/tr_curve.c	/^static void LerpDrawVert( srfVert_t *a, srfVert_t *b, srfVert_t *out ) {$/;"	f	file:
LerpMeshVertexes	src/renderergl1/tr_surface.c	/^static void LerpMeshVertexes(md3Surface_t *surf, float backlerp)$/;"	f	file:
LerpMeshVertexes	src/renderergl2/tr_surface.c	/^static void LerpMeshVertexes(mdvSurface_t *surf, float backlerp)$/;"	f	file:
LerpMeshVertexes_altivec	src/renderergl1/tr_surface.c	/^static void LerpMeshVertexes_altivec(md3Surface_t *surf, float backlerp)$/;"	f	file:
LerpMeshVertexes_scalar	src/renderergl1/tr_surface.c	/^static void LerpMeshVertexes_scalar(md3Surface_t *surf, float backlerp)$/;"	f	file:
LerpMeshVertexes_scalar	src/renderergl2/tr_surface.c	/^static void LerpMeshVertexes_scalar(mdvSurface_t *surf, float backlerp)$/;"	f	file:
LerpTag	src/renderercommon/tr_public.h	/^	int		(*LerpTag)( orientation_t *tag,  qhandle_t model, int startFrame, int endFrame, $/;"	m	struct:__anon108
LightForPoint	src/renderercommon/tr_public.h	/^	int		(*LightForPoint)( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir );$/;"	m	struct:__anon108
LikeOp	src/server/sqlite3.c	/^struct LikeOp {$/;"	s	file:
LimitVal	src/server/sqlite3.c	/^struct LimitVal {$/;"	s	file:
LinkedMem	src/client/libmumblelink.c	/^} LinkedMem;$/;"	t	typeref:struct:__anon104	file:
List	src/tools/lcc/etc/lcc.c	/^typedef struct list *List;$/;"	t	typeref:struct:list	file:
List	src/tools/lcc/src/c.h	/^typedef struct list *List;$/;"	t	typeref:struct:list
LittleFloat	src/qcommon/q_platform.h	367;"	d
LittleFloat	src/qcommon/q_platform.h	378;"	d
LittleFloat	src/qcommon/q_platform.h	387;"	d
LittleLong	src/qcommon/q_platform.h	366;"	d
LittleLong	src/qcommon/q_platform.h	377;"	d
LittleLong	src/qcommon/q_platform.h	386;"	d
LittleShort	src/qcommon/q_platform.h	365;"	d
LittleShort	src/qcommon/q_platform.h	376;"	d
LittleShort	src/qcommon/q_platform.h	385;"	d
LoadDoclistCtx	src/server/sqlite3.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	src/server/sqlite3.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
LoadFile	src/tools/asm/cmdlib.c	/^int    LoadFile( const char *filename, void **bufferptr )$/;"	f
LoadFileBlock	src/tools/asm/cmdlib.c	/^int    LoadFileBlock( const char *filename, void **bufferptr )$/;"	f
LoadSourceFile	src/tools/lcc/src/bytecode.c	/^static void LoadSourceFile( const char *filename ) {$/;"	f	file:
LoadWorld	src/renderercommon/tr_public.h	/^	void	(*LoadWorld)( const char *name );$/;"	m	struct:__anon108
Load_Menu	src/ui/ui_main.c	/^qboolean Load_Menu( int handle )$/;"	f
Local	src/tools/lcc/src/c.h	/^	enum { Blockbeg, Blockend, Local, Address, Defpoint,$/;"	e	enum:code::__anon290
LodErrorForVolume	src/renderergl1/tr_surface.c	/^static float	LodErrorForVolume( vec3_t local, float radius ) {$/;"	f	file:
LodErrorForVolume	src/renderergl2/tr_surface.c	/^static float	LodErrorForVolume( vec3_t local, float radius ) {$/;"	f	file:
LogEst	src/server/sqlite3.c	/^typedef INT16_TYPE LogEst;$/;"	t	file:
LogExit	src/game/g_main.c	/^void LogExit( const char *string )$/;"	f
LogLight	src/renderergl1/tr_light.c	/^static void LogLight( trRefEntity_t *ent ) {$/;"	f	file:
LogLight	src/renderergl2/tr_light.c	/^static void LogLight( trRefEntity_t *ent ) {$/;"	f	file:
Long64NoSwap	src/qcommon/q_shared.c	/^qint64 Long64NoSwap (qint64 ll)$/;"	f
Long64Swap	src/qcommon/q_shared.c	/^qint64 Long64Swap (qint64 ll)$/;"	f
LongNoSwap	src/qcommon/q_shared.c	/^int	LongNoSwap (int l)$/;"	f
LongSwap	src/qcommon/q_shared.c	/^int    LongSwap (int l)$/;"	f
LongSwap	src/tools/asm/cmdlib.c	/^int    LongSwap (int l)$/;"	f
LookAtKiller	src/game/g_combat.c	/^void LookAtKiller( gentity_t *self, gentity_t *inflictor, gentity_t *attacker )$/;"	f
Lookaside	src/server/sqlite3.c	/^struct Lookaside {$/;"	s	file:
Lookaside	src/server/sqlite3.c	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside	file:
LookasideSlot	src/server/sqlite3.c	/^struct LookasideSlot {$/;"	s	file:
LookasideSlot	src/server/sqlite3.c	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot	file:
LookupSymbol	src/tools/asm/q3asm.c	/^static int LookupSymbol( char *sym ) {$/;"	f	file:
M	src/qcommon/vm_powerpc_asm.c	628;"	d	file:
M	src/server/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
M2C_GETSERVERSREPONSE	src/master/messages.c	60;"	d	file:
M2C_MOTD	src/master/messages.c	63;"	d	file:
M2S_GETINFO	src/master/messages.c	51;"	d	file:
MACOS_X	src/qcommon/q_platform.h	147;"	d
MAC_EVENT_PUMP_MSEC	src/renderergl1/tr_backend.c	495;"	d	file:
MAC_EVENT_PUMP_MSEC	src/renderergl2/tr_backend.c	553;"	d	file:
MAGIC_TRACE_HACK	src/cgame/cg_local.h	1787;"	d
MAKERGB	src/qcommon/q_shared.h	452;"	d
MAKERGBA	src/qcommon/q_shared.h	453;"	d
MAKE_CHUNKTYPE	src/renderercommon/tr_image_png.c	79;"	d	file:
MAP_ANONYMOUS	src/qcommon/vm_powerpc.c	31;"	d	file:
MAP_ANONYMOUS	src/qcommon/vm_x86.c	42;"	d	file:
MAP_RESTART_VOTE	src/game/bg_public.h	/^  MAP_RESTART_VOTE,$/;"	e	enum:__anon360
MAP_VOTE	src/game/bg_public.h	/^  MAP_VOTE,$/;"	e	enum:__anon360
MARKER_OFFSET	src/renderergl1/tr_marks.c	30;"	d	file:
MARKER_OFFSET	src/renderergl2/tr_marks.c	30;"	d	file:
MARK_FADE_TIME	src/cgame/cg_marks.c	239;"	d	file:
MARK_TOTAL_TIME	src/cgame/cg_marks.c	238;"	d	file:
MASKBIT	src/server/sqlite3.c	13339;"	d	file:
MASKBIT32	src/server/sqlite3.c	13340;"	d	file:
MASK_ALL	src/game/bg_public.h	1229;"	d
MASK_ASTRALSOLID	src/game/bg_public.h	1233;"	d
MASK_DEADSOLID	src/game/bg_public.h	1232;"	d
MASK_OPAQUE	src/game/bg_public.h	1235;"	d
MASK_PLAYERSOLID	src/game/bg_public.h	1231;"	d
MASK_QUEUED_EVENTS	src/qcommon/common.c	1924;"	d	file:
MASK_REG	src/qcommon/vm_x86.c	206;"	d	file:
MASK_SHOT	src/game/bg_public.h	1236;"	d
MASK_SOLID	src/game/bg_public.h	1230;"	d
MASK_WATER	src/game/bg_public.h	1234;"	d
MASTERDIR	GNUmakefile	/^MASTERDIR=$(MOUNT_DIR)\/master$/;"	m
MASTER_NAME	src/server/sqlite3.c	10209;"	d	file:
MASTER_ROOT	src/server/sqlite3.c	10215;"	d	file:
MASTER_SERVER_NAME	src/qcommon/qcommon.h	265;"	d
MAX	src/qcommon/q_shared.h	792;"	d
MAX	src/renderergl2/tr_extramath.h	88;"	d
MAX	src/server/sqlite3.c	138194;"	d	file:
MAX	src/server/sqlite3.c	156999;"	d	file:
MAX	src/server/sqlite3.c	169287;"	d	file:
MAX	src/server/sqlite3.c	9900;"	d	file:
MAXBITS	src/qcommon/puff.c	81;"	d	file:
MAXCHOICES	src/game/g_utils.c	192;"	d	file:
MAXCODES	src/qcommon/puff.c	84;"	d	file:
MAXDCODES	src/qcommon/puff.c	83;"	d	file:
MAXIMUM_BUILD_TIME	src/game/tremulous.h	689;"	d
MAXLCODES	src/qcommon/puff.c	82;"	d	file:
MAXLINE	src/tools/lcc/src/c.h	13;"	d
MAXPRINTMSG	src/qcommon/qcommon.h	781;"	d
MAXSIZE	src/client/cl_cin.c	38;"	d	file:
MAXSMOOTHS	src/cgame/cg_local.h	565;"	d
MAXSTATE	src/tools/lcc/cpp/lex.c	25;"	d	file:
MAXTOKEN	src/tools/lcc/src/lex.c	6;"	d	file:
MAXTOKEN	src/tools/lcc/src/profio.c	22;"	d	file:
MAXTOUCH	src/game/bg_public.h	180;"	d
MAX_6BYTE	src/server/sqlite3.c	71143;"	d	file:
MAX_ACC_RADIUS	src/cgame/cg_particles.c	1991;"	d	file:
MAX_ADDRESSLENGTH	src/ui/ui_local.h	53;"	d
MAX_ADMIN_BAN_REASON	src/game/g_admin.h	37;"	d
MAX_ADMIN_CMD_LEN	src/game/g_admin.h	36;"	d
MAX_ADMIN_FLAGS	src/game/g_admin.h	35;"	d
MAX_ADMIN_FLAG_LEN	src/game/g_admin.h	34;"	d
MAX_ADMIN_LISTITEMS	src/game/g_admin.h	70;"	d
MAX_ADMIN_SHOWBANS	src/game/g_admin.h	71;"	d
MAX_ALIEN_BBOX	src/game/g_local.h	792;"	d
MAX_ARENAS	src/game/bg_public.h	1292;"	d
MAX_ARENAS_TEXT	src/game/bg_public.h	1293;"	d
MAX_ASM_FILES	src/tools/asm/q3asm.c	189;"	d	file:
MAX_AVI_BUFFER	src/client/cl_avi.c	72;"	d	file:
MAX_BASEPARTICLES	src/cgame/cg_local.h	190;"	d
MAX_BASEPARTICLE_EJECTORS	src/cgame/cg_local.h	189;"	d
MAX_BASEPARTICLE_SYSTEMS	src/cgame/cg_local.h	188;"	d
MAX_BASETRAIL_BEAMS	src/cgame/cg_local.h	438;"	d
MAX_BASETRAIL_SYSTEMS	src/cgame/cg_local.h	437;"	d
MAX_BEAMS_PER_SYSTEM	src/cgame/cg_local.h	435;"	d
MAX_BOTS	src/game/bg_public.h	1295;"	d
MAX_BOTS_TEXT	src/game/bg_public.h	1296;"	d
MAX_BUCKETS	src/server/sv_main.c	359;"	d	file:
MAX_BUILDABLE_ANIMATIONS	src/game/bg_public.h	/^  MAX_BUILDABLE_ANIMATIONS$/;"	e	enum:__anon343
MAX_BUILDABLE_MODELS	src/game/bg_public.h	1030;"	d
MAX_BUILDLOG	src/game/g_local.h	550;"	d
MAX_CALC_PSHADOWS	src/renderergl2/tr_local.h	55;"	d
MAX_CHALLENGES	src/server/server.h	211;"	d
MAX_CHALLENGES_MULTI	src/server/server.h	215;"	d
MAX_CHANNELS	src/client/snd_local.h	183;"	d
MAX_CLIENTS	src/qcommon/q_shared.h	1193;"	d
MAX_CLIP_PLANES	src/game/bg_slidemove.c	45;"	d	file:
MAX_CLIP_VERTS	src/renderergl1/tr_sky.c	145;"	d	file:
MAX_CLIP_VERTS	src/renderergl2/tr_sky.c	145;"	d	file:
MAX_CMD_BUFFER	src/qcommon/cmd.c	28;"	d	file:
MAX_CMD_LINE	src/qcommon/cmd.c	29;"	d	file:
MAX_COLOR_RANGES	src/ui/ui_shared.h	41;"	d
MAX_CONFIGSTRINGS	src/qcommon/q_shared.h	1214;"	d
MAX_CONSOLE_KEYS	src/sdl/sdl_input.c	86;"	d	file:
MAX_CONSOLE_LINES	src/cgame/cg_local.h	915;"	d
MAX_CONSOLE_LINES	src/qcommon/common.c	388;"	d	file:
MAX_CONSOLE_SAVE_BUFFER	src/client/cl_keys.c	1387;"	d	file:
MAX_CONSOLE_TEXT	src/cgame/cg_local.h	914;"	d
MAX_CUSTOM_SOUNDS	src/cgame/cg_local.h	731;"	d
MAX_CVARS	src/qcommon/cvar.c	32;"	d	file:
MAX_CVAR_VALUE_STRING	src/qcommon/q_shared.h	1043;"	d
MAX_DAMAGE_REGIONS	src/game/g_local.h	490;"	d
MAX_DAMAGE_REGION_TEXT	src/game/g_local.h	489;"	d
MAX_DATA_SIZE	src/master/stats.c	36;"	d	file:
MAX_DEFINEPARMS	src/qcommon/parse.c	225;"	d	file:
MAX_DEMOS	src/ui/ui_local.h	61;"	d
MAX_DISPLAY_SERVERS	src/ui/ui_local.h	54;"	d
MAX_DLIGHTS	src/renderercommon/tr_types.h	28;"	d
MAX_DOPPLER_SCALE	src/client/snd_local.h	78;"	d
MAX_DOTS	src/ui/ui_main.c	1840;"	d	file:
MAX_DOWNLOAD_BLKSIZE	src/qcommon/qcommon.h	202;"	d
MAX_DOWNLOAD_WINDOW	src/qcommon/qcommon.h	200;"	d
MAX_DRAWIMAGES	src/renderergl1/tr_local.h	759;"	d
MAX_DRAWIMAGES	src/renderergl2/tr_local.h	1285;"	d
MAX_DRAWN_PSHADOWS	src/renderergl2/tr_local.h	56;"	d
MAX_DRAWSURFS	src/renderergl1/tr_local.h	763;"	d
MAX_DRAWSURFS	src/renderergl2/tr_local.h	1289;"	d
MAX_DURATION_LENGTH	src/game/g_admin.c	911;"	d	file:
MAX_EDGE_DEFS	src/renderergl1/tr_shadows.c	43;"	d	file:
MAX_EDGE_DEFS	src/renderergl2/tr_shadows.c	43;"	d	file:
MAX_EDITFIELD	src/ui/ui_shared.h	82;"	d
MAX_EDIT_LINE	src/qcommon/qcommon.h	743;"	d
MAX_EJECTORS_PER_SYSTEM	src/cgame/cg_local.h	185;"	d
MAX_EMOTICONS	src/qcommon/q_shared.h	1541;"	d
MAX_EMOTICON_NAME_LEN	src/qcommon/q_shared.h	1540;"	d
MAX_ENTITIES_IN_SNAPSHOT	src/cgame/cg_public.h	32;"	d
MAX_ENT_CLUSTERS	src/server/server.h	35;"	d
MAX_EXPR_ELEMENTS	src/ui/ui_shared.c	411;"	d	file:
MAX_EX_ARGC	src/tools/asm/cmdlib.c	59;"	d	file:
MAX_FACETS	src/qcommon/cm_patch.h	64;"	d
MAX_FACE_POINTS	src/renderergl1/tr_local.h	491;"	d
MAX_FACE_POINTS	src/renderergl2/tr_local.h	865;"	d
MAX_FALL_DISTANCE	src/game/tremulous.h	665;"	d
MAX_FBOS	src/renderergl2/tr_local.h	51;"	d
MAX_FEATLABEL_CHARS	src/client/client.h	429;"	d
MAX_FILEHASH_SIZE	src/qcommon/files.c	186;"	d	file:
MAX_FILEPATH	src/game/g_local.h	1169;"	d
MAX_FILE_HANDLES	src/qcommon/qcommon.h	590;"	d
MAX_FLARES	src/renderergl1/tr_flares.c	83;"	d	file:
MAX_FLARES	src/renderergl2/tr_flares.c	83;"	d	file:
MAX_FONTS	src/renderercommon/tr_font.c	90;"	d	file:
MAX_FOUNDPLAYER_SERVERS	src/ui/ui_local.h	59;"	d
MAX_FOUND_FILES	src/qcommon/files.c	2153;"	d	file:
MAX_FOUND_FILES	src/sys/sys_unix.c	231;"	d	file:
MAX_FOUND_FILES	src/sys/sys_win32.c	283;"	d	file:
MAX_FOV_WARP_Y	src/cgame/cg_view.c	845;"	d	file:
MAX_FOV_Y	src/cgame/cg_view.c	844;"	d	file:
MAX_GAMESTATE_CHARS	src/qcommon/q_shared.h	1223;"	d
MAX_GAME_PARTICLE_SYSTEMS	src/qcommon/q_shared.h	1211;"	d
MAX_GAME_SHADERS	src/qcommon/q_shared.h	1210;"	d
MAX_GENTITIES	src/qcommon/q_shared.h	1197;"	d
MAX_GLOBAL_SERVERS	src/qcommon/q_shared.h	1535;"	d
MAX_GRID_SIZE	src/qcommon/cm_patch.h	89;"	d
MAX_GRID_SIZE	src/renderergl1/tr_local.h	494;"	d
MAX_GRID_SIZE	src/renderergl2/tr_local.h	868;"	d
MAX_HASHES	src/server/sv_main.c	360;"	d	file:
MAX_HASH_SIZE	src/master/servers.h	35;"	d
MAX_HELP_INFOPANES	src/ui/ui_local.h	63;"	d
MAX_HOSTNAME_LENGTH	src/qcommon/q_shared.h	248;"	d
MAX_HULL_POINTS	src/qcommon/cm_polylib.c	650;"	d	file:
MAX_IMAGE	src/tools/asm/q3asm.c	139;"	d	file:
MAX_IMAGE_ANIMATIONS	src/renderergl1/tr_local.h	251;"	d
MAX_IMAGE_ANIMATIONS	src/renderergl2/tr_local.h	327;"	d
MAX_INCR_PHRASE_TOKENS	src/server/sqlite3.c	142656;"	d	file:
MAX_INFO_KEY	src/qcommon/q_shared.h	231;"	d
MAX_INFO_STRING	src/qcommon/q_shared.h	230;"	d
MAX_INFO_VALUE	src/qcommon/q_shared.h	232;"	d
MAX_IPS	src/qcommon/net_ip.c	138;"	d	file:
MAX_ITEMACTION	src/ui/ui_shared.h	36;"	d
MAX_ITEMTEXT	src/ui/ui_shared.h	35;"	d
MAX_JOYSTICK_AXIS	src/qcommon/qcommon.h	1042;"	d
MAX_KEY	src/qcommon/qfiles.h	347;"	d
MAX_KEYS	src/client/keycodes.h	/^	MAX_KEYS$/;"	e	enum:__anon101
MAX_LAGOMETER_PING	src/cgame/cg_draw.c	2117;"	d	file:
MAX_LAGOMETER_RANGE	src/cgame/cg_draw.c	2118;"	d	file:
MAX_LB_COLUMNS	src/ui/ui_shared.h	190;"	d
MAX_LIGHTMAP_PAGES	src/renderergl2/tr_bsp.c	201;"	d	file:
MAX_LINE_LENGTH	src/tools/asm/q3asm.c	208;"	d	file:
MAX_LOCATIONS	src/qcommon/q_shared.h	1194;"	d
MAX_LOG	src/sys/con_log.c	28;"	d	file:
MAX_LOOPBACK	src/qcommon/net_chan.c	418;"	d	file:
MAX_MAPLIST_MAPS	src/game/g_playmap.h	34;"	d
MAX_MAPLIST_ROWS	src/game/g_playmap.h	35;"	d
MAX_MAPS	src/ui/ui_local.h	51;"	d
MAX_MAP_AREAS	src/qcommon/qfiles.h	328;"	d
MAX_MAP_AREA_BYTES	src/qcommon/q_shared.h	264;"	d
MAX_MAP_BOUNDS	src/qcommon/cm_polylib.h	41;"	d
MAX_MAP_BRUSHES	src/qcommon/qfiles.h	323;"	d
MAX_MAP_BRUSHSIDES	src/qcommon/qfiles.h	332;"	d
MAX_MAP_DRAW_INDEXES	src/qcommon/qfiles.h	343;"	d
MAX_MAP_DRAW_SURFS	src/qcommon/qfiles.h	341;"	d
MAX_MAP_DRAW_VERTS	src/qcommon/qfiles.h	342;"	d
MAX_MAP_ENTITIES	src/qcommon/qfiles.h	324;"	d
MAX_MAP_ENTSTRING	src/qcommon/qfiles.h	325;"	d
MAX_MAP_FOGS	src/qcommon/qfiles.h	329;"	d
MAX_MAP_LEAFBRUSHES	src/qcommon/qfiles.h	335;"	d
MAX_MAP_LEAFFACES	src/qcommon/qfiles.h	334;"	d
MAX_MAP_LEAFS	src/qcommon/qfiles.h	333;"	d
MAX_MAP_LIGHTGRID	src/qcommon/qfiles.h	338;"	d
MAX_MAP_LIGHTING	src/qcommon/qfiles.h	337;"	d
MAX_MAP_MODELS	src/qcommon/qfiles.h	322;"	d
MAX_MAP_NODES	src/qcommon/qfiles.h	331;"	d
MAX_MAP_PLANES	src/qcommon/qfiles.h	330;"	d
MAX_MAP_PORTALS	src/qcommon/qfiles.h	336;"	d
MAX_MAP_ROTATIONS	src/game/g_maprotation.c	28;"	d	file:
MAX_MAP_ROTATION_MAPS	src/game/g_maprotation.c	29;"	d	file:
MAX_MAP_SHADERS	src/qcommon/qfiles.h	326;"	d
MAX_MAP_VISIBILITY	src/qcommon/qfiles.h	339;"	d
MAX_MARK_FRAGMENTS	src/cgame/cg_marks.c	132;"	d	file:
MAX_MARK_POINTS	src/cgame/cg_marks.c	133;"	d	file:
MAX_MARK_POLYS	src/cgame/cg_local.h	64;"	d
MAX_MASTER_SERVERS	src/qcommon/q_shared.h	49;"	d
MAX_MENUDEFFILE	src/ui/ui_shared.h	37;"	d
MAX_MENUFILE	src/ui/ui_shared.h	38;"	d
MAX_MENUITEMS	src/ui/ui_shared.h	40;"	d
MAX_MENUNAME	src/ui/ui_shared.h	34;"	d
MAX_MENUS	src/ui/ui_shared.h	39;"	d
MAX_MISC	src/qcommon/q_shared.h	1235;"	d
MAX_MODELS	src/qcommon/q_shared.h	1208;"	d
MAX_MODS	src/ui/ui_local.h	60;"	d
MAX_MOD_KNOWN	src/renderergl1/tr_local.h	747;"	d
MAX_MOD_KNOWN	src/renderergl2/tr_local.h	1273;"	d
MAX_MOVIES	src/ui/ui_local.h	62;"	d
MAX_MSGLEN	src/qcommon/qcommon.h	197;"	d
MAX_MULTIDRAW_PRIMITIVES	src/renderergl2/tr_local.h	2004;"	d
MAX_MULTI_CVARS	src/ui/ui_shared.h	243;"	d
MAX_NAMELOG_ADDRS	src/game/g_local.h	273;"	d
MAX_NAMELOG_NAMES	src/game/g_local.h	272;"	d
MAX_NAME_LENGTH	src/qcommon/q_shared.h	247;"	d
MAX_NEWS_LINES	src/ui/ui_local.h	57;"	d
MAX_NEWS_LINEWIDTH	src/ui/ui_local.h	58;"	d
MAX_NEWS_STRING	src/qcommon/q_shared.h	238;"	d
MAX_NONSEG_PLAYER_ANIMATIONS	src/game/bg_public.h	/^  MAX_NONSEG_PLAYER_ANIMATIONS,$/;"	e	enum:__anon342
MAX_NONSEG_PLAYER_TOTALANIMATIONS	src/game/bg_public.h	/^  MAX_NONSEG_PLAYER_TOTALANIMATIONS$/;"	e	enum:__anon342
MAX_NUM_ARGVS	src/qcommon/common.c	38;"	d	file:
MAX_NUM_PACKED_ENTITY_NUMS	src/game/bg_misc.c	3622;"	d	file:
MAX_OPEN_MENUS	src/ui/ui_shared.h	42;"	d
MAX_OPERATORS	src/qcommon/parse.c	1880;"	d	file:
MAX_OSPATH	src/qcommon/q_shared.h	242;"	d
MAX_OSPATH	src/qcommon/q_shared.h	244;"	d
MAX_OS_PATH	src/tools/asm/cmdlib.h	60;"	d
MAX_OTHER_SERVERS	src/qcommon/q_shared.h	1536;"	d
MAX_PACKETLEN	src/qcommon/net_chan.c	51;"	d	file:
MAX_PACKET_SIZE	src/master/master.c	47;"	d	file:
MAX_PACKET_SIZE	src/master/messages.c	39;"	d	file:
MAX_PACKET_USERCMDS	src/qcommon/qcommon.h	139;"	d
MAX_PACK_LEN	src/client/cl_avi.c	363;"	d	file:
MAX_PARSE_ENTITIES	src/client/client.h	223;"	d
MAX_PARTICLES	src/cgame/cg_local.h	194;"	d
MAX_PARTICLES_PER_EJECTOR	src/cgame/cg_local.h	186;"	d
MAX_PARTICLE_EJECTORS	src/cgame/cg_local.h	193;"	d
MAX_PARTICLE_FILES	src/cgame/cg_local.h	181;"	d
MAX_PARTICLE_SYSTEMS	src/cgame/cg_local.h	192;"	d
MAX_PATCH_PLANES	src/qcommon/cm_patch.h	65;"	d
MAX_PATCH_SIZE	src/renderergl1/tr_local.h	493;"	d
MAX_PATCH_SIZE	src/renderergl2/tr_local.h	867;"	d
MAX_PATCH_VERTS	src/qcommon/cm_load.c	630;"	d	file:
MAX_PATH	src/server/sqlite3.c	35403;"	d	file:
MAX_PATH	src/tools/asm/cmdlib.c	639;"	d	file:
MAX_PATH	src/tools/asm/cmdlib.c	641;"	d	file:
MAX_PATHNAME	src/server/sqlite3.c	27474;"	d	file:
MAX_PERSISTANT	src/qcommon/q_shared.h	1234;"	d
MAX_PINGREQUESTS	src/qcommon/q_shared.h	1537;"	d
MAX_PINGREQUESTS	src/ui/ui_local.h	52;"	d
MAX_PLAYER_ANIMATIONS	src/game/bg_public.h	/^  MAX_PLAYER_ANIMATIONS,$/;"	e	enum:__anon341
MAX_PLAYER_MODEL	src/game/g_local.h	551;"	d
MAX_PLAYER_TOTALANIMATIONS	src/game/bg_public.h	/^  MAX_PLAYER_TOTALANIMATIONS$/;"	e	enum:__anon341
MAX_PLAYMAP_MAPNAME	src/game/g_playmap.h	33;"	d
MAX_PLAYMAP_POOL_ENTRIES	src/game/g_playmap.h	29;"	d
MAX_PLAYMAP_QUEUE_ENTRIES	src/game/g_playmap.h	30;"	d
MAX_POINTS_ON_WINDING	src/qcommon/cm_polylib.h	32;"	d
MAX_POLYS	src/renderergl1/tr_local.h	1568;"	d
MAX_POLYS	src/renderergl2/tr_local.h	2449;"	d
MAX_POLYVERTS	src/renderergl1/tr_local.h	1569;"	d
MAX_POLYVERTS	src/renderergl2/tr_local.h	2450;"	d
MAX_POSITION_LEAFS	src/qcommon/cm_trace.c	410;"	d	file:
MAX_PREDICTED_EVENTS	src/cgame/cg_local.h	920;"	d
MAX_PS_EVENTS	src/qcommon/q_shared.h	1238;"	d
MAX_PS_MODELS	src/cgame/cg_local.h	184;"	d
MAX_PS_SHADER_FRAMES	src/cgame/cg_local.h	183;"	d
MAX_PUSHED_EVENTS	src/qcommon/common.c	1880;"	d	file:
MAX_QINT	src/qcommon/q_shared.h	200;"	d
MAX_QPATH	src/qcommon/q_shared.h	240;"	d
MAX_QPATH	src/qcommon/qfiles.h	44;"	d
MAX_QUEUED_EVENTS	src/qcommon/common.c	1923;"	d	file:
MAX_RAW_SAMPLES	src/client/snd_local.h	195;"	d
MAX_RAW_STREAMS	src/client/snd_local.h	196;"	d
MAX_RCON_MESSAGE	src/client/cl_main.c	1728;"	d	file:
MAX_REFENTITIES	src/renderercommon/tr_types.h	34;"	d
MAX_RELIABLE_COMMANDS	src/qcommon/qcommon.h	145;"	d
MAX_RENDER_COMMANDS	src/renderergl1/tr_local.h	1469;"	d
MAX_RENDER_COMMANDS	src/renderergl2/tr_local.h	2336;"	d
MAX_RENDER_STRINGS	src/renderercommon/tr_types.h	124;"	d
MAX_RENDER_STRING_LENGTH	src/renderercommon/tr_types.h	125;"	d
MAX_RESOLUTIONS	src/ui/ui_local.h	64;"	d
MAX_REWARDSTACK	src/cgame/cg_local.h	883;"	d
MAX_RIFF_CHUNKS	src/client/cl_avi.c	28;"	d	file:
MAX_ROWID	src/server/sqlite3.c	78611;"	d	file:
MAX_SAY_TEXT	src/qcommon/q_shared.h	250;"	d
MAX_SCRIPT_ARGS	src/ui/ui_shared.h	81;"	d
MAX_SEARCH_PATHS	src/qcommon/files.c	185;"	d	file:
MAX_SECTOR_SIZE	src/server/sqlite3.c	44425;"	d	file:
MAX_SERVERSPERPACKET	src/client/cl_main.c	2540;"	d	file:
MAX_SERVERSTATUSREQUESTS	src/qcommon/q_shared.h	1538;"	d
MAX_SERVERSTATUS_LINES	src/ui/ui_local.h	55;"	d
MAX_SERVERSTATUS_TEXT	src/ui/ui_local.h	56;"	d
MAX_SFX	src/client/snd_dma.c	73;"	d	file:
MAX_SFX	src/client/snd_openal.c	154;"	d	file:
MAX_SHADERS	src/renderergl1/tr_local.h	43;"	d
MAX_SHADERS	src/renderergl2/tr_local.h	49;"	d
MAX_SHADERTEXT_HASH	src/renderergl1/tr_shader.c	38;"	d	file:
MAX_SHADERTEXT_HASH	src/renderergl2/tr_shader.c	38;"	d	file:
MAX_SHADER_DEFORMS	src/renderergl1/tr_local.h	212;"	d
MAX_SHADER_DEFORMS	src/renderergl2/tr_local.h	288;"	d
MAX_SHADER_FILES	src/renderergl1/tr_shader.c	2921;"	d	file:
MAX_SHADER_FILES	src/renderergl2/tr_shader.c	3526;"	d	file:
MAX_SHADER_REMAPS	src/game/g_utils.c	35;"	d	file:
MAX_SHADER_STAGES	src/renderergl1/tr_local.h	110;"	d
MAX_SHADER_STAGES	src/renderergl2/tr_local.h	165;"	d
MAX_SKINS	src/renderergl1/tr_local.h	760;"	d
MAX_SKINS	src/renderergl2/tr_local.h	1286;"	d
MAX_SNAPSHOT_ENTITIES	src/qcommon/qcommon.h	141;"	d
MAX_SOUNDBUFFER	src/cgame/cg_local.h	884;"	d
MAX_SOUNDS	src/qcommon/q_shared.h	1209;"	d
MAX_SOURCEFILES	src/qcommon/parse.c	3636;"	d	file:
MAX_SPAWN_VARS	src/game/g_local.h	548;"	d
MAX_SPAWN_VARS	src/renderergl2/tr_bsp.c	2891;"	d	file:
MAX_SPAWN_VARS_CHARS	src/game/g_local.h	549;"	d
MAX_SRC	src/client/snd_openal.c	605;"	d	file:
MAX_SRC	src/client/snd_openal.c	607;"	d	file:
MAX_STATS	src/qcommon/q_shared.h	1233;"	d
MAX_STEP_CHANGE	src/cgame/cg_local.h	61;"	d
MAX_STREAM_BUFFERS	src/client/snd_openal.c	1682;"	d	file:
MAX_STRING_CHARS	src/qcommon/q_shared.h	226;"	d
MAX_STRING_HANDLES	src/ui/ui_shared.h	79;"	d
MAX_STRING_TOKENS	src/qcommon/q_shared.h	227;"	d
MAX_SUBMODELS	src/qcommon/cm_local.h	28;"	d
MAX_TEAMNAME	src/qcommon/q_shared.h	48;"	d
MAX_TIMEDEMO_DURATIONS	src/client/client.h	294;"	d
MAX_TOKENLENGTH	src/qcommon/q_shared.h	819;"	d
MAX_TOKEN_CHARS	src/qcommon/q_shared.h	228;"	d
MAX_TOTAL_ENT_LEAFS	src/server/sv_world.c	205;"	d	file:
MAX_TRAIL_BEAMS	src/cgame/cg_local.h	441;"	d
MAX_TRAIL_BEAM_JITTERS	src/cgame/cg_local.h	444;"	d
MAX_TRAIL_BEAM_NODES	src/cgame/cg_local.h	442;"	d
MAX_TRAIL_FILES	src/cgame/cg_local.h	433;"	d
MAX_TRAIL_SYSTEMS	src/cgame/cg_local.h	440;"	d
MAX_TRAMPLE_BUILDABLES_TRACKED	src/game/g_local.h	370;"	d
MAX_TUTORIAL_TEXT	src/cgame/cg_tutorial.c	138;"	d	file:
MAX_UNLAGGED_MARKERS	src/game/g_local.h	362;"	d
MAX_USER_FLAGS	src/game/g_admin.c	4053;"	d	file:
MAX_VALUE	src/qcommon/qfiles.h	348;"	d
MAX_VALUES	src/qcommon/parse.c	1879;"	d	file:
MAX_VAOS	src/renderergl2/tr_local.h	53;"	d
MAX_VERTS_ON_POLY	src/cgame/cg_local.h	63;"	d
MAX_VERTS_ON_POLY	src/renderergl1/tr_marks.c	28;"	d	file:
MAX_VERTS_ON_POLY	src/renderergl2/tr_marks.c	28;"	d	file:
MAX_VIDEO_HANDLES	src/client/cl_cin.c	54;"	d	file:
MAX_VISCOUNTS	src/renderergl2/tr_local.h	52;"	d
MAX_VM	src/qcommon/vm.c	47;"	d	file:
MAX_VMMAIN_ARGS	src/qcommon/vm_local.h	28;"	d
MAX_VMSYSCALL_ARGS	src/qcommon/vm_local.h	32;"	d
MAX_VOICES	src/game/bg_public.h	1317;"	d
MAX_VOICE_CMD_LEN	src/game/bg_public.h	1319;"	d
MAX_VOICE_NAME_LEN	src/game/bg_public.h	1318;"	d
MAX_WEAPONS	src/qcommon/q_shared.h	1236;"	d
MAX_WEAPON_ANIMATIONS	src/game/bg_public.h	/^  MAX_WEAPON_ANIMATIONS$/;"	e	enum:__anon344
MAX_WORLD_COORD	src/qcommon/qfiles.h	357;"	d
MAX_WRAP_CACHE	src/ui/ui_shared.c	4466;"	d	file:
MAX_WRAP_LINES	src/ui/ui_shared.c	4467;"	d	file:
MAX_WRAP_TEXT	src/ui/ui_shared.c	4468;"	d	file:
MAX_ZAPS	src/game/g_local.h	1019;"	d
MAX_ZPATH	src/qcommon/files.c	184;"	d	file:
MAYBE_EMIT_CONST	src/qcommon/vm_powerpc.c	800;"	d	file:
MAYBE_EMIT_CONST	src/qcommon/vm_sparc.c	859;"	d	file:
MBE	src/qcommon/vm_powerpc_asm.c	338;"	d	file:
MC_BITS_VECT	src/renderergl1/tr_local.h	1382;"	d
MC_BITS_VECT	src/renderergl2/tr_local.h	2256;"	d
MC_BITS_X	src/renderergl1/tr_local.h	1379;"	d
MC_BITS_X	src/renderergl2/tr_local.h	2253;"	d
MC_BITS_Y	src/renderergl1/tr_local.h	1380;"	d
MC_BITS_Y	src/renderergl2/tr_local.h	2254;"	d
MC_BITS_Z	src/renderergl1/tr_local.h	1381;"	d
MC_BITS_Z	src/renderergl2/tr_local.h	2255;"	d
MC_MASK_VECT	src/renderergl1/tr_animation.c	429;"	d	file:
MC_MASK_VECT	src/renderergl2/tr_animation.c	431;"	d	file:
MC_MASK_X	src/renderergl1/tr_animation.c	426;"	d	file:
MC_MASK_X	src/renderergl2/tr_animation.c	428;"	d	file:
MC_MASK_Y	src/renderergl1/tr_animation.c	427;"	d	file:
MC_MASK_Y	src/renderergl2/tr_animation.c	429;"	d	file:
MC_MASK_Z	src/renderergl1/tr_animation.c	428;"	d	file:
MC_MASK_Z	src/renderergl2/tr_animation.c	430;"	d	file:
MC_POS_V11	src/renderergl1/tr_animation.c	442;"	d	file:
MC_POS_V11	src/renderergl2/tr_animation.c	444;"	d	file:
MC_POS_V12	src/renderergl1/tr_animation.c	445;"	d	file:
MC_POS_V12	src/renderergl2/tr_animation.c	447;"	d	file:
MC_POS_V13	src/renderergl1/tr_animation.c	448;"	d	file:
MC_POS_V13	src/renderergl2/tr_animation.c	450;"	d	file:
MC_POS_V21	src/renderergl1/tr_animation.c	451;"	d	file:
MC_POS_V21	src/renderergl2/tr_animation.c	453;"	d	file:
MC_POS_V22	src/renderergl1/tr_animation.c	454;"	d	file:
MC_POS_V22	src/renderergl2/tr_animation.c	456;"	d	file:
MC_POS_V23	src/renderergl1/tr_animation.c	457;"	d	file:
MC_POS_V23	src/renderergl2/tr_animation.c	459;"	d	file:
MC_POS_V31	src/renderergl1/tr_animation.c	460;"	d	file:
MC_POS_V31	src/renderergl2/tr_animation.c	462;"	d	file:
MC_POS_V32	src/renderergl1/tr_animation.c	463;"	d	file:
MC_POS_V32	src/renderergl2/tr_animation.c	465;"	d	file:
MC_POS_V33	src/renderergl1/tr_animation.c	466;"	d	file:
MC_POS_V33	src/renderergl2/tr_animation.c	468;"	d	file:
MC_POS_X	src/renderergl1/tr_animation.c	433;"	d	file:
MC_POS_X	src/renderergl2/tr_animation.c	435;"	d	file:
MC_POS_Y	src/renderergl1/tr_animation.c	436;"	d	file:
MC_POS_Y	src/renderergl2/tr_animation.c	438;"	d	file:
MC_POS_Z	src/renderergl1/tr_animation.c	439;"	d	file:
MC_POS_Z	src/renderergl2/tr_animation.c	441;"	d	file:
MC_SCALE_VECT	src/renderergl1/tr_animation.c	431;"	d	file:
MC_SCALE_VECT	src/renderergl2/tr_animation.c	433;"	d	file:
MC_SCALE_X	src/renderergl1/tr_local.h	1384;"	d
MC_SCALE_X	src/renderergl2/tr_local.h	2258;"	d
MC_SCALE_Y	src/renderergl1/tr_local.h	1385;"	d
MC_SCALE_Y	src/renderergl2/tr_local.h	2259;"	d
MC_SCALE_Z	src/renderergl1/tr_local.h	1386;"	d
MC_SCALE_Z	src/renderergl2/tr_local.h	2260;"	d
MC_SHIFT_V11	src/renderergl1/tr_animation.c	443;"	d	file:
MC_SHIFT_V11	src/renderergl2/tr_animation.c	445;"	d	file:
MC_SHIFT_V12	src/renderergl1/tr_animation.c	446;"	d	file:
MC_SHIFT_V12	src/renderergl2/tr_animation.c	448;"	d	file:
MC_SHIFT_V13	src/renderergl1/tr_animation.c	449;"	d	file:
MC_SHIFT_V13	src/renderergl2/tr_animation.c	451;"	d	file:
MC_SHIFT_V21	src/renderergl1/tr_animation.c	452;"	d	file:
MC_SHIFT_V21	src/renderergl2/tr_animation.c	454;"	d	file:
MC_SHIFT_V22	src/renderergl1/tr_animation.c	455;"	d	file:
MC_SHIFT_V22	src/renderergl2/tr_animation.c	457;"	d	file:
MC_SHIFT_V23	src/renderergl1/tr_animation.c	458;"	d	file:
MC_SHIFT_V23	src/renderergl2/tr_animation.c	460;"	d	file:
MC_SHIFT_V31	src/renderergl1/tr_animation.c	461;"	d	file:
MC_SHIFT_V31	src/renderergl2/tr_animation.c	463;"	d	file:
MC_SHIFT_V32	src/renderergl1/tr_animation.c	464;"	d	file:
MC_SHIFT_V32	src/renderergl2/tr_animation.c	466;"	d	file:
MC_SHIFT_V33	src/renderergl1/tr_animation.c	467;"	d	file:
MC_SHIFT_V33	src/renderergl2/tr_animation.c	469;"	d	file:
MC_SHIFT_X	src/renderergl1/tr_animation.c	434;"	d	file:
MC_SHIFT_X	src/renderergl2/tr_animation.c	436;"	d	file:
MC_SHIFT_Y	src/renderergl1/tr_animation.c	437;"	d	file:
MC_SHIFT_Y	src/renderergl2/tr_animation.c	439;"	d	file:
MC_SHIFT_Z	src/renderergl1/tr_animation.c	440;"	d	file:
MC_SHIFT_Z	src/renderergl2/tr_animation.c	442;"	d	file:
MC_UnCompress	src/renderergl1/tr_animation.c	/^void MC_UnCompress(float mat[3][4],const unsigned char * comp)$/;"	f
MC_UnCompress	src/renderergl2/tr_animation.c	/^void MC_UnCompress(float mat[3][4],const unsigned char * comp)$/;"	f
MD	src/qcommon/vm_powerpc_asm.c	641;"	d	file:
MD3_IDENT	src/qcommon/qfiles.h	81;"	d
MD3_MAX_FRAMES	src/qcommon/qfiles.h	89;"	d
MD3_MAX_LODS	src/qcommon/qfiles.h	85;"	d
MD3_MAX_SHADERS	src/qcommon/qfiles.h	88;"	d
MD3_MAX_SURFACES	src/qcommon/qfiles.h	90;"	d
MD3_MAX_TAGS	src/qcommon/qfiles.h	91;"	d
MD3_MAX_TRIANGLES	src/qcommon/qfiles.h	86;"	d
MD3_MAX_VERTS	src/qcommon/qfiles.h	87;"	d
MD3_VERSION	src/qcommon/qfiles.h	82;"	d
MD3_XYZ_SCALE	src/qcommon/qfiles.h	94;"	d
MD5Context	src/qcommon/md5.c	/^typedef struct MD5Context {$/;"	s	file:
MD5Final	src/qcommon/md5.c	/^static void MD5Final(struct MD5Context *ctx, unsigned char *digest)$/;"	f	file:
MD5Init	src/qcommon/md5.c	/^static void MD5Init(struct MD5Context *ctx)$/;"	f	file:
MD5STEP	src/qcommon/md5.c	70;"	d	file:
MD5Transform	src/qcommon/md5.c	/^static void MD5Transform(uint32_t buf[4],$/;"	f	file:
MD5Update	src/qcommon/md5.c	/^static void MD5Update(struct MD5Context *ctx, unsigned char const *buf,$/;"	f	file:
MD5_CTX	src/qcommon/md5.c	/^} MD5_CTX;$/;"	t	typeref:struct:MD5Context	file:
MDMB_MASK	src/qcommon/vm_powerpc_asm.c	645;"	d	file:
MDRIVER_CLIPSIZE	src/game/tremulous.h	426;"	d
MDRIVER_DMG	src/game/tremulous.h	428;"	d
MDRIVER_K_SCALE	src/game/tremulous.h	430;"	d
MDRIVER_MAXCLIPS	src/game/tremulous.h	427;"	d
MDRIVER_PRICE	src/game/tremulous.h	425;"	d
MDRIVER_RELOAD	src/game/tremulous.h	431;"	d
MDRIVER_REPEAT	src/game/tremulous.h	429;"	d
MDR_IDENT	src/qcommon/qfiles.h	202;"	d
MDR_MAX_BONES	src/qcommon/qfiles.h	204;"	d
MDR_VERSION	src/qcommon/qfiles.h	203;"	d
MDS	src/qcommon/vm_powerpc_asm.c	651;"	d	file:
MDSH_MASK	src/qcommon/vm_powerpc_asm.c	648;"	d	file:
MDSMB_MASK	src/qcommon/vm_powerpc_asm.c	655;"	d	file:
MDS_MASK	src/qcommon/vm_powerpc_asm.c	652;"	d	file:
MD_MASK	src/qcommon/vm_powerpc_asm.c	642;"	d	file:
ME	src/qcommon/vm_powerpc_asm.c	330;"	d	file:
MEDISTAT_BP	src/game/tremulous.h	552;"	d
MEDISTAT_BT	src/game/tremulous.h	553;"	d
MEDISTAT_HEALTH	src/game/tremulous.h	554;"	d
MEDISTAT_SPLASHDAMAGE	src/game/tremulous.h	555;"	d
MEDISTAT_SPLASHRADIUS	src/game/tremulous.h	556;"	d
MEDISTAT_VALUE	src/game/tremulous.h	557;"	d
MEDKIT_POISON_IMMUNITY_TIME	src/game/tremulous.h	520;"	d
MEDKIT_PRICE	src/game/tremulous.h	502;"	d
MEDKIT_STARTUP_SPEED	src/game/tremulous.h	522;"	d
MEDKIT_STARTUP_TIME	src/game/tremulous.h	521;"	d
MEM5LINK	src/server/sqlite3.c	20117;"	d	file:
MEMCELLSIZE	src/server/sqlite3.c	16063;"	d	file:
MEMDB	src/server/sqlite3.c	44777;"	d	file:
MEMDB	src/server/sqlite3.c	44779;"	d	file:
MEMJOURNAL_DFLT_FILECHUNKSIZE	src/server/sqlite3.c	84619;"	d	file:
MEMTYPE_HEAP	src/server/sqlite3.c	15079;"	d	file:
MEMTYPE_LOOKASIDE	src/server/sqlite3.c	15080;"	d	file:
MEMTYPE_PCACHE	src/server/sqlite3.c	15082;"	d	file:
MEMTYPE_SCRATCH	src/server/sqlite3.c	15081;"	d	file:
MEM_AffMask	src/server/sqlite3.c	16082;"	d	file:
MEM_Agg	src/server/sqlite3.c	16099;"	d	file:
MEM_BLOCKSIZE	src/tools/asm/cmdlib.h	61;"	d
MEM_Blob	src/server/sqlite3.c	16081;"	d	file:
MEM_Cleared	src/server/sqlite3.c	16086;"	d	file:
MEM_Dyn	src/server/sqlite3.c	16096;"	d	file:
MEM_Ephem	src/server/sqlite3.c	16098;"	d	file:
MEM_Frame	src/server/sqlite3.c	16084;"	d	file:
MEM_Int	src/server/sqlite3.c	16079;"	d	file:
MEM_Null	src/server/sqlite3.c	16077;"	d	file:
MEM_POOL_SIZE	src/ui/ui_shared.c	122;"	d	file:
MEM_POOL_SIZE	src/ui/ui_shared.c	124;"	d	file:
MEM_Real	src/server/sqlite3.c	16080;"	d	file:
MEM_RowSet	src/server/sqlite3.c	16083;"	d	file:
MEM_Static	src/server/sqlite3.c	16097;"	d	file:
MEM_Str	src/server/sqlite3.c	16078;"	d	file:
MEM_Subtype	src/server/sqlite3.c	16101;"	d	file:
MEM_THRESHOLD	src/sys/sys_unix.c	129;"	d	file:
MEM_THRESHOLD	src/sys/sys_win32.c	174;"	d	file:
MEM_Term	src/server/sqlite3.c	16095;"	d	file:
MEM_TypeMask	src/server/sqlite3.c	16087;"	d	file:
MEM_Undefined	src/server/sqlite3.c	16085;"	d	file:
MEM_Zero	src/server/sqlite3.c	16100;"	d	file:
MEM_Zero	src/server/sqlite3.c	16103;"	d	file:
MEM_Zero	src/server/sqlite3.c	16104;"	d	file:
MENUDEF_H	src/ui/menudef.h	2;"	d
MENU_FALSE	src/ui/menudef.h	57;"	d
MENU_TRUE	src/ui/menudef.h	56;"	d
ME_MASK	src/qcommon/vm_powerpc_asm.c	331;"	d	file:
MGTURRET_ACCURACY_TO_FIRE	src/game/tremulous.h	565;"	d
MGTURRET_ANGULARSPEED	src/game/tremulous.h	564;"	d
MGTURRET_BP	src/game/tremulous.h	559;"	d
MGTURRET_BT	src/game/tremulous.h	560;"	d
MGTURRET_DCC_ANGULARSPEED	src/game/tremulous.h	574;"	d
MGTURRET_DCC_SPINUP_TIME	src/game/tremulous.h	575;"	d
MGTURRET_DMG	src/game/tremulous.h	571;"	d
MGTURRET_GRAB_ANGULARSPEED	src/game/tremulous.h	576;"	d
MGTURRET_HEALTH	src/game/tremulous.h	561;"	d
MGTURRET_K_SCALE	src/game/tremulous.h	568;"	d
MGTURRET_RANGE	src/game/tremulous.h	569;"	d
MGTURRET_REPEAT	src/game/tremulous.h	567;"	d
MGTURRET_SPINUP_TIME	src/game/tremulous.h	572;"	d
MGTURRET_SPLASHDAMAGE	src/game/tremulous.h	562;"	d
MGTURRET_SPLASHRADIUS	src/game/tremulous.h	563;"	d
MGTURRET_SPREAD	src/game/tremulous.h	570;"	d
MGTURRET_VALUE	src/game/tremulous.h	573;"	d
MGTURRET_VERTICALCAP	src/game/tremulous.h	566;"	d
MGT_STATE_ACTIVE	src/game/g_buildable.c	/^  MGT_STATE_ACTIVE$/;"	e	enum:__anon370	file:
MGT_STATE_DROP	src/game/g_buildable.c	/^  MGT_STATE_DROP,$/;"	e	enum:__anon370	file:
MGT_STATE_INACTIVE	src/game/g_buildable.c	/^  MGT_STATE_INACTIVE,$/;"	e	enum:__anon370	file:
MGT_STATE_RISE	src/game/g_buildable.c	/^  MGT_STATE_RISE,$/;"	e	enum:__anon370	file:
MIN	src/client/libmumblelink.c	47;"	d	file:
MIN	src/qcommon/q_shared.h	796;"	d
MIN	src/renderergl2/tr_extramath.h	92;"	d
MIN	src/server/sqlite3.c	138191;"	d	file:
MIN	src/server/sqlite3.c	157002;"	d	file:
MIN	src/server/sqlite3.c	169286;"	d	file:
MIN	src/server/sqlite3.c	9897;"	d	file:
MINFRAGMENT	src/qcommon/common.c	744;"	d	file:
MINGW_PREFIXES	GNUmakefile	/^      MINGW_PREFIXES=amd64-mingw32msvc x86_64-w64-mingw32$/;"	m
MINGW_PREFIXES	GNUmakefile	/^      MINGW_PREFIXES=i586-mingw32msvc i686-w64-mingw32$/;"	m
MINIZIPDIR	GNUmakefile	/^MINIZIPDIR=$(DEP_DIR)\/minizip$/;"	m
MINIZIP_CFLAGS	GNUmakefile	/^  MINIZIP_CFLAGS ?= $(shell pkg-config --silence-errors --cflags minizip)$/;"	m
MINIZIP_CFLAGS	GNUmakefile	/^  MINIZIP_CFLAGS ?= -I$(MINIZIPDIR)$/;"	m
MINIZIP_LIBS	GNUmakefile	/^  MINIZIP_LIBS ?= $(shell pkg-config --silence-errors --libs minizip)$/;"	m
MINSDL_MAJOR	src/sys/sys_local.h	28;"	d
MINSDL_MINOR	src/sys/sys_local.h	29;"	d
MINSDL_PATCH	src/sys/sys_local.h	30;"	d
MINSDL_VERSION	src/sys/sys_main.c	519;"	d	file:
MINSIZE	src/client/cl_cin.c	39;"	d	file:
MINS_Z	src/game/bg_public.h	38;"	d
MINUS	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
MINUS1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
MIN_COMHUNKMEGS	src/qcommon/common.c	41;"	d	file:
MIN_DEDICATED_COMHUNKMEGS	src/qcommon/common.c	40;"	d	file:
MIN_FALL_DISTANCE	src/game/tremulous.h	664;"	d
MIN_FIELD_WIDTH	src/ui/ui_shared.c	3258;"	d	file:
MIN_GAMESTAT_DELAY	src/master/servers.h	42;"	d
MIN_PACKET_SIZE	src/master/master.c	48;"	d	file:
MIN_QINT	src/qcommon/q_shared.h	201;"	d
MIN_WALK_NORMAL	src/game/bg_local.h	26;"	d
MIN_WORLD_COORD	src/qcommon/qfiles.h	358;"	d
MISSILE_PRESTEP_TIME	src/game/g_missile.c	26;"	d	file:
MI_ATI	src/renderergl2/tr_local.h	/^	MI_ATI$/;"	e	enum:__anon58
MI_NONE	src/renderergl2/tr_local.h	/^	MI_NONE,$/;"	e	enum:__anon58
MI_NVX	src/renderergl2/tr_local.h	/^	MI_NVX,$/;"	e	enum:__anon58
MKDIR	GNUmakefile	/^  MKDIR = mkdir -p$/;"	m
MKDIR	GNUmakefile	/^  MKDIR=gmkdir$/;"	m
MKDIR	GNUmakefile	/^MKDIR=mkdir$/;"	m
MKDIR	src/master/Makefile	/^  MKDIR=mkdir$/;"	m
MMBME_MASK	src/qcommon/vm_powerpc_asm.c	635;"	d	file:
MME	src/qcommon/vm_powerpc_asm.c	632;"	d	file:
MMINUS	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
MN_A_BUILD	src/game/bg_public.h	/^  MN_A_BUILD,$/;"	e	enum:__anon340
MN_A_CANTEVOLVE	src/game/bg_public.h	/^  MN_A_CANTEVOLVE,$/;"	e	enum:__anon340
MN_A_CLASS	src/game/bg_public.h	/^  MN_A_CLASS,$/;"	e	enum:__anon340
MN_A_CLASSNOTALLOWED	src/game/bg_public.h	/^  MN_A_CLASSNOTALLOWED,$/;"	e	enum:__anon340
MN_A_CLASSNOTATSTAGE	src/game/bg_public.h	/^  MN_A_CLASSNOTATSTAGE,$/;"	e	enum:__anon340
MN_A_CLASSNOTSPAWN	src/game/bg_public.h	/^  MN_A_CLASSNOTSPAWN,$/;"	e	enum:__anon340
MN_A_EVOLVEBUILDTIMER	src/game/bg_public.h	/^  MN_A_EVOLVEBUILDTIMER,$/;"	e	enum:__anon340
MN_A_EVOLVEWALLWALK	src/game/bg_public.h	/^  MN_A_EVOLVEWALLWALK,$/;"	e	enum:__anon340
MN_A_HOVEL_BLOCKED	src/game/bg_public.h	/^  MN_A_HOVEL_BLOCKED,$/;"	e	enum:__anon340
MN_A_HOVEL_EXIT	src/game/bg_public.h	/^  MN_A_HOVEL_EXIT,$/;"	e	enum:__anon340
MN_A_HOVEL_NOCLIP	src/game/bg_public.h	/^  MN_A_HOVEL_NOCLIP,$/;"	e	enum:__anon340
MN_A_HOVEL_OCCUPIED	src/game/bg_public.h	/^  MN_A_HOVEL_OCCUPIED,$/;"	e	enum:__anon340
MN_A_INFEST	src/game/bg_public.h	/^  MN_A_INFEST,$/;"	e	enum:__anon340
MN_A_NOBP	src/game/bg_public.h	/^  MN_A_NOBP,$/;"	e	enum:__anon340
MN_A_NOCREEP	src/game/bg_public.h	/^  MN_A_NOCREEP,$/;"	e	enum:__anon340
MN_A_NOEROOM	src/game/bg_public.h	/^  MN_A_NOEROOM,$/;"	e	enum:__anon340
MN_A_NOOVMND	src/game/bg_public.h	/^  MN_A_NOOVMND,$/;"	e	enum:__anon340
MN_A_NOOVMND_EVOLVE	src/game/bg_public.h	/^  MN_A_NOOVMND_EVOLVE,$/;"	e	enum:__anon340
MN_A_ONEHOVEL	src/game/bg_public.h	/^  MN_A_ONEHOVEL,$/;"	e	enum:__anon340
MN_A_ONEOVERMIND	src/game/bg_public.h	/^  MN_A_ONEOVERMIND,$/;"	e	enum:__anon340
MN_A_TEAMFULL	src/game/bg_public.h	/^  MN_A_TEAMFULL,$/;"	e	enum:__anon340
MN_A_TEAMLOCKED	src/game/bg_public.h	/^  MN_A_TEAMLOCKED,$/;"	e	enum:__anon340
MN_A_TOOCLOSE	src/game/bg_public.h	/^  MN_A_TOOCLOSE,$/;"	e	enum:__anon340
MN_A_UNKNOWNCLASS	src/game/bg_public.h	/^  MN_A_UNKNOWNCLASS,$/;"	e	enum:__anon340
MN_B_BLOCKEDBYENEMY	src/game/bg_public.h	/^  MN_B_BLOCKEDBYENEMY,$/;"	e	enum:__anon340
MN_B_CANNOT	src/game/bg_public.h	/^  MN_B_CANNOT,$/;"	e	enum:__anon340
MN_B_LASTSPAWN	src/game/bg_public.h	/^  MN_B_LASTSPAWN,$/;"	e	enum:__anon340
MN_B_NORMAL	src/game/bg_public.h	/^  MN_B_NORMAL,$/;"	e	enum:__anon340
MN_B_NOROOM	src/game/bg_public.h	/^  MN_B_NOROOM,$/;"	e	enum:__anon340
MN_B_REVOKED	src/game/bg_public.h	/^  MN_B_REVOKED,$/;"	e	enum:__anon340
MN_B_SUDDENDEATH	src/game/bg_public.h	/^  MN_B_SUDDENDEATH,$/;"	e	enum:__anon340
MN_B_SURRENDER	src/game/bg_public.h	/^  MN_B_SURRENDER,$/;"	e	enum:__anon340
MN_CMD_ALIEN	src/game/bg_public.h	/^  MN_CMD_ALIEN,$/;"	e	enum:__anon340
MN_CMD_ALIVE	src/game/bg_public.h	/^  MN_CMD_ALIVE,$/;"	e	enum:__anon340
MN_CMD_CHEAT	src/game/bg_public.h	/^  MN_CMD_CHEAT,$/;"	e	enum:__anon340
MN_CMD_CHEAT_TEAM	src/game/bg_public.h	/^  MN_CMD_CHEAT_TEAM,$/;"	e	enum:__anon340
MN_CMD_HUMAN	src/game/bg_public.h	/^  MN_CMD_HUMAN,$/;"	e	enum:__anon340
MN_CMD_SPEC	src/game/bg_public.h	/^  MN_CMD_SPEC,$/;"	e	enum:__anon340
MN_CMD_TEAM	src/game/bg_public.h	/^  MN_CMD_TEAM,$/;"	e	enum:__anon340
MN_H_ARMOURY	src/game/bg_public.h	/^  MN_H_ARMOURY,$/;"	e	enum:__anon340
MN_H_ARMOURYBUILDTIMER	src/game/bg_public.h	/^  MN_H_ARMOURYBUILDTIMER,$/;"	e	enum:__anon340
MN_H_BUILD	src/game/bg_public.h	/^  MN_H_BUILD,$/;"	e	enum:__anon340
MN_H_DEADTOCLASS	src/game/bg_public.h	/^  MN_H_DEADTOCLASS,$/;"	e	enum:__anon340
MN_H_ITEMHELD	src/game/bg_public.h	/^  MN_H_ITEMHELD,$/;"	e	enum:__anon340
MN_H_NOARMOURYHERE	src/game/bg_public.h	/^  MN_H_NOARMOURYHERE,$/;"	e	enum:__anon340
MN_H_NOBP	src/game/bg_public.h	/^  MN_H_NOBP,$/;"	e	enum:__anon340
MN_H_NODCC	src/game/bg_public.h	/^  MN_H_NODCC,$/;"	e	enum:__anon340
MN_H_NOENERGYAMMOHERE	src/game/bg_public.h	/^  MN_H_NOENERGYAMMOHERE,$/;"	e	enum:__anon340
MN_H_NOFUNDS	src/game/bg_public.h	/^  MN_H_NOFUNDS,$/;"	e	enum:__anon340
MN_H_NOPOWERHERE	src/game/bg_public.h	/^  MN_H_NOPOWERHERE,$/;"	e	enum:__anon340
MN_H_NOROOMBSUITOFF	src/game/bg_public.h	/^  MN_H_NOROOMBSUITOFF,$/;"	e	enum:__anon340
MN_H_NOROOMBSUITON	src/game/bg_public.h	/^  MN_H_NOROOMBSUITON,$/;"	e	enum:__anon340
MN_H_NOSLOTS	src/game/bg_public.h	/^  MN_H_NOSLOTS,$/;"	e	enum:__anon340
MN_H_NOTPOWERED	src/game/bg_public.h	/^  MN_H_NOTPOWERED,$/;"	e	enum:__anon340
MN_H_ONEDCC	src/game/bg_public.h	/^  MN_H_ONEDCC,$/;"	e	enum:__anon340
MN_H_ONEREACTOR	src/game/bg_public.h	/^  MN_H_ONEREACTOR,$/;"	e	enum:__anon340
MN_H_RPTPOWERHERE	src/game/bg_public.h	/^  MN_H_RPTPOWERHERE,$/;"	e	enum:__anon340
MN_H_SPAWN	src/game/bg_public.h	/^  MN_H_SPAWN,$/;"	e	enum:__anon340
MN_H_TEAMFULL	src/game/bg_public.h	/^  MN_H_TEAMFULL,$/;"	e	enum:__anon340
MN_H_TEAMLOCKED	src/game/bg_public.h	/^  MN_H_TEAMLOCKED,$/;"	e	enum:__anon340
MN_H_UNEXPLODEDGRENADE	src/game/bg_public.h	/^  MN_H_UNEXPLODEDGRENADE,$/;"	e	enum:__anon340
MN_H_UNKNOWNITEM	src/game/bg_public.h	/^  MN_H_UNKNOWNITEM,$/;"	e	enum:__anon340
MN_H_UNKNOWNSPAWNITEM	src/game/bg_public.h	/^  MN_H_UNKNOWNSPAWNITEM,$/;"	e	enum:__anon340
MN_NONE	src/game/bg_public.h	/^  MN_NONE,$/;"	e	enum:__anon340
MN_PLAYERLIMIT	src/game/bg_public.h	/^  MN_PLAYERLIMIT,$/;"	e	enum:__anon340
MN_TEAM	src/game/bg_public.h	/^  MN_TEAM,$/;"	e	enum:__anon340
MODEL_1TO2	src/game/g_local.h	/^  MODEL_1TO2,$/;"	e	enum:__anon308
MODEL_2TO1	src/game/g_local.h	/^  MODEL_2TO1$/;"	e	enum:__anon308
MODEL_POS1	src/game/g_local.h	/^  MODEL_POS1,$/;"	e	enum:__anon308
MODEL_POS2	src/game/g_local.h	/^  MODEL_POS2,$/;"	e	enum:__anon308
MODEL_WWSMOOTHTIME	src/cgame/cg_players.c	1205;"	d	file:
MODE_GREEN_MAGENTA	src/renderergl1/tr_cmds.c	314;"	d	file:
MODE_GREEN_MAGENTA	src/renderergl2/tr_cmds.c	360;"	d	file:
MODE_MAX	src/renderergl1/tr_cmds.c	315;"	d	file:
MODE_MAX	src/renderergl2/tr_cmds.c	361;"	d	file:
MODE_RED_BLUE	src/renderergl1/tr_cmds.c	312;"	d	file:
MODE_RED_BLUE	src/renderergl2/tr_cmds.c	358;"	d	file:
MODE_RED_CYAN	src/renderergl1/tr_cmds.c	311;"	d	file:
MODE_RED_CYAN	src/renderergl2/tr_cmds.c	357;"	d	file:
MODE_RED_GREEN	src/renderergl1/tr_cmds.c	313;"	d	file:
MODE_RED_GREEN	src/renderergl2/tr_cmds.c	359;"	d	file:
MOD_ABUILDER_CLAW	src/game/bg_public.h	/^  MOD_ABUILDER_CLAW,$/;"	e	enum:__anon348
MOD_ASPAWN	src/game/bg_public.h	/^  MOD_ASPAWN,$/;"	e	enum:__anon348
MOD_ATUBE	src/game/bg_public.h	/^  MOD_ATUBE,$/;"	e	enum:__anon348
MOD_BAD	src/renderergl1/tr_local.h	/^	MOD_BAD,$/;"	e	enum:__anon158
MOD_BAD	src/renderergl2/tr_local.h	/^	MOD_BAD,$/;"	e	enum:__anon55
MOD_BLASTER	src/game/bg_public.h	/^  MOD_BLASTER,$/;"	e	enum:__anon348
MOD_BRUSH	src/renderergl1/tr_local.h	/^	MOD_BRUSH,$/;"	e	enum:__anon158
MOD_BRUSH	src/renderergl2/tr_local.h	/^	MOD_BRUSH,$/;"	e	enum:__anon55
MOD_CHAINGUN	src/game/bg_public.h	/^  MOD_CHAINGUN,$/;"	e	enum:__anon348
MOD_CRUSH	src/game/bg_public.h	/^  MOD_CRUSH,$/;"	e	enum:__anon348
MOD_DECONSTRUCT	src/game/bg_public.h	/^  MOD_DECONSTRUCT,$/;"	e	enum:__anon348
MOD_DROP	src/game/bg_public.h	/^  MOD_DROP,$/;"	e	enum:__anon348
MOD_FALLING	src/game/bg_public.h	/^  MOD_FALLING,$/;"	e	enum:__anon348
MOD_FLAMER	src/game/bg_public.h	/^  MOD_FLAMER,$/;"	e	enum:__anon348
MOD_FLAMER_SPLASH	src/game/bg_public.h	/^  MOD_FLAMER_SPLASH,$/;"	e	enum:__anon348
MOD_GRENADE	src/game/bg_public.h	/^  MOD_GRENADE,$/;"	e	enum:__anon348
MOD_HSPAWN	src/game/bg_public.h	/^  MOD_HSPAWN,$/;"	e	enum:__anon348
MOD_IQM	src/renderergl1/tr_local.h	/^	MOD_IQM$/;"	e	enum:__anon158
MOD_IQM	src/renderergl2/tr_local.h	/^	MOD_IQM$/;"	e	enum:__anon55
MOD_LASGUN	src/game/bg_public.h	/^  MOD_LASGUN,$/;"	e	enum:__anon348
MOD_LAVA	src/game/bg_public.h	/^  MOD_LAVA,$/;"	e	enum:__anon348
MOD_LCANNON	src/game/bg_public.h	/^  MOD_LCANNON,$/;"	e	enum:__anon348
MOD_LCANNON_SPLASH	src/game/bg_public.h	/^  MOD_LCANNON_SPLASH,$/;"	e	enum:__anon348
MOD_LEVEL0_BITE	src/game/bg_public.h	/^  MOD_LEVEL0_BITE,$/;"	e	enum:__anon348
MOD_LEVEL1_CLAW	src/game/bg_public.h	/^  MOD_LEVEL1_CLAW,$/;"	e	enum:__anon348
MOD_LEVEL1_PCLOUD	src/game/bg_public.h	/^  MOD_LEVEL1_PCLOUD,$/;"	e	enum:__anon348
MOD_LEVEL2_CLAW	src/game/bg_public.h	/^  MOD_LEVEL2_CLAW,$/;"	e	enum:__anon348
MOD_LEVEL2_ZAP	src/game/bg_public.h	/^  MOD_LEVEL2_ZAP,$/;"	e	enum:__anon348
MOD_LEVEL3_BOUNCEBALL	src/game/bg_public.h	/^  MOD_LEVEL3_BOUNCEBALL,$/;"	e	enum:__anon348
MOD_LEVEL3_CLAW	src/game/bg_public.h	/^  MOD_LEVEL3_CLAW,$/;"	e	enum:__anon348
MOD_LEVEL3_POUNCE	src/game/bg_public.h	/^  MOD_LEVEL3_POUNCE,$/;"	e	enum:__anon348
MOD_LEVEL4_CLAW	src/game/bg_public.h	/^  MOD_LEVEL4_CLAW,$/;"	e	enum:__anon348
MOD_LEVEL4_CRUSH	src/game/bg_public.h	/^  MOD_LEVEL4_CRUSH,$/;"	e	enum:__anon348
MOD_LEVEL4_TRAMPLE	src/game/bg_public.h	/^  MOD_LEVEL4_TRAMPLE,$/;"	e	enum:__anon348
MOD_MACHINEGUN	src/game/bg_public.h	/^  MOD_MACHINEGUN,$/;"	e	enum:__anon348
MOD_MDR	src/renderergl1/tr_local.h	/^	MOD_MDR,$/;"	e	enum:__anon158
MOD_MDR	src/renderergl2/tr_local.h	/^	MOD_MDR,$/;"	e	enum:__anon55
MOD_MDRIVER	src/game/bg_public.h	/^  MOD_MDRIVER,$/;"	e	enum:__anon348
MOD_MESH	src/renderergl1/tr_local.h	/^	MOD_MESH,$/;"	e	enum:__anon158
MOD_MESH	src/renderergl2/tr_local.h	/^	MOD_MESH,$/;"	e	enum:__anon55
MOD_MGTURRET	src/game/bg_public.h	/^  MOD_MGTURRET,$/;"	e	enum:__anon348
MOD_NOCREEP	src/game/bg_public.h	/^  MOD_NOCREEP$/;"	e	enum:__anon348
MOD_OVERMIND	src/game/bg_public.h	/^  MOD_OVERMIND,$/;"	e	enum:__anon348
MOD_PAINSAW	src/game/bg_public.h	/^  MOD_PAINSAW,$/;"	e	enum:__anon348
MOD_POISON	src/game/bg_public.h	/^  MOD_POISON,$/;"	e	enum:__anon348
MOD_PRIFLE	src/game/bg_public.h	/^  MOD_PRIFLE,$/;"	e	enum:__anon348
MOD_REACTOR	src/game/bg_public.h	/^  MOD_REACTOR,$/;"	e	enum:__anon348
MOD_REPLACE	src/game/bg_public.h	/^  MOD_REPLACE,$/;"	e	enum:__anon348
MOD_SHOTGUN	src/game/bg_public.h	/^  MOD_SHOTGUN,$/;"	e	enum:__anon348
MOD_SLAP	src/game/bg_public.h	/^  MOD_SLAP,$/;"	e	enum:__anon348
MOD_SLIME	src/game/bg_public.h	/^  MOD_SLIME,$/;"	e	enum:__anon348
MOD_SLOWBLOB	src/game/bg_public.h	/^  MOD_SLOWBLOB,$/;"	e	enum:__anon348
MOD_SUFFOCATION	src/game/bg_public.h	/^  MOD_SUFFOCATION,$/;"	e	enum:__anon348
MOD_SUICIDE	src/game/bg_public.h	/^  MOD_SUICIDE,$/;"	e	enum:__anon348
MOD_SWARM	src/game/bg_public.h	/^  MOD_SWARM,$/;"	e	enum:__anon348
MOD_TARGET_LASER	src/game/bg_public.h	/^  MOD_TARGET_LASER,$/;"	e	enum:__anon348
MOD_TELEFRAG	src/game/bg_public.h	/^  MOD_TELEFRAG,$/;"	e	enum:__anon348
MOD_TESLAGEN	src/game/bg_public.h	/^  MOD_TESLAGEN,$/;"	e	enum:__anon348
MOD_TRIGGER_HURT	src/game/bg_public.h	/^  MOD_TRIGGER_HURT,$/;"	e	enum:__anon348
MOD_UNKNOWN	src/game/bg_public.h	/^  MOD_UNKNOWN,$/;"	e	enum:__anon348
MOD_WATER	src/game/bg_public.h	/^  MOD_WATER,$/;"	e	enum:__anon348
MOTD_KEY	src/master/messages.c	404;"	d	file:
MOUNT_DIR	GNUmakefile	/^MOUNT_DIR=src$/;"	m
MOVER_1TO2	src/game/g_local.h	/^  MOVER_1TO2,$/;"	e	enum:__anon308
MOVER_2TO1	src/game/g_local.h	/^  MOVER_2TO1,$/;"	e	enum:__anon308
MOVER_POS1	src/game/g_local.h	/^  MOVER_POS1,$/;"	e	enum:__anon308
MOVER_POS2	src/game/g_local.h	/^  MOVER_POS2,$/;"	e	enum:__anon308
MOVE_RUN	src/qcommon/q_shared.h	1350;"	d
MSG_BeginReading	src/qcommon/msg.c	/^void MSG_BeginReading( msg_t *msg ) {$/;"	f
MSG_BeginReadingOOB	src/qcommon/msg.c	/^void MSG_BeginReadingOOB( msg_t *msg ) {$/;"	f
MSG_Bitstream	src/qcommon/msg.c	/^void MSG_Bitstream( msg_t *buf ) {$/;"	f
MSG_Clear	src/qcommon/msg.c	/^void MSG_Clear( msg_t *buf ) {$/;"	f
MSG_Copy	src/qcommon/msg.c	/^void MSG_Copy(msg_t *buf, byte *data, int length, msg_t *src)$/;"	f
MSG_DEBUG	src/master/common.h	/^	MSG_DEBUG		\/\/ for debugging purpose$/;"	e	enum:__anon383
MSG_ERROR	src/master/common.h	/^	MSG_ERROR,		\/\/ errors$/;"	e	enum:__anon383
MSG_HashKey	src/qcommon/msg.c	/^int MSG_HashKey(int alternateProtocol, const char *string, int maxlen) {$/;"	f
MSG_Init	src/qcommon/msg.c	/^void MSG_Init( msg_t *buf, byte *data, int length ) {$/;"	f
MSG_InitOOB	src/qcommon/msg.c	/^void MSG_InitOOB( msg_t *buf, byte *data, int length ) {$/;"	f
MSG_LookaheadByte	src/qcommon/msg.c	/^int MSG_LookaheadByte( msg_t *msg ) {$/;"	f
MSG_NOPRINT	src/master/common.h	/^	MSG_NOPRINT,	\/\/ used by "max_msg_level" (= no printings)$/;"	e	enum:__anon383
MSG_NORMAL	src/master/common.h	/^	MSG_NORMAL,		\/\/ standard messages$/;"	e	enum:__anon383
MSG_ReadAngle16	src/qcommon/msg.c	/^float MSG_ReadAngle16( msg_t *msg ) {$/;"	f
MSG_ReadBigString	src/qcommon/msg.c	/^char *MSG_ReadBigString( msg_t *msg ) {$/;"	f
MSG_ReadBits	src/qcommon/msg.c	/^int MSG_ReadBits( msg_t *msg, int bits ) {$/;"	f
MSG_ReadByte	src/qcommon/msg.c	/^int MSG_ReadByte( msg_t *msg ) {$/;"	f
MSG_ReadChar	src/qcommon/msg.c	/^int MSG_ReadChar (msg_t *msg ) {$/;"	f
MSG_ReadData	src/qcommon/msg.c	/^void MSG_ReadData( msg_t *msg, void *data, int len ) {$/;"	f
MSG_ReadDelta	src/qcommon/msg.c	/^int	MSG_ReadDelta( msg_t *msg, int oldV, int bits ) {$/;"	f
MSG_ReadDeltaAlternatePlayerstate	src/qcommon/msg.c	/^void MSG_ReadDeltaAlternatePlayerstate (msg_t *msg, alternatePlayerState_t *from, alternatePlayerState_t *to ) {$/;"	f
MSG_ReadDeltaEntity	src/qcommon/msg.c	/^void MSG_ReadDeltaEntity( int alternateProtocol, msg_t *msg, entityState_t *from, entityState_t *to,$/;"	f
MSG_ReadDeltaFloat	src/qcommon/msg.c	/^float MSG_ReadDeltaFloat( msg_t *msg, float oldV ) {$/;"	f
MSG_ReadDeltaKey	src/qcommon/msg.c	/^int	MSG_ReadDeltaKey( msg_t *msg, int key, int oldV, int bits ) {$/;"	f
MSG_ReadDeltaKeyFloat	src/qcommon/msg.c	/^float MSG_ReadDeltaKeyFloat( msg_t *msg, int key, float oldV ) {$/;"	f
MSG_ReadDeltaPlayerstate	src/qcommon/msg.c	/^void MSG_ReadDeltaPlayerstate (msg_t *msg, playerState_t *from, playerState_t *to ) {$/;"	f
MSG_ReadDeltaUsercmdKey	src/qcommon/msg.c	/^void MSG_ReadDeltaUsercmdKey( msg_t *msg, int key, usercmd_t *from, usercmd_t *to ) {$/;"	f
MSG_ReadFloat	src/qcommon/msg.c	/^float MSG_ReadFloat( msg_t *msg ) {$/;"	f
MSG_ReadLong	src/qcommon/msg.c	/^int MSG_ReadLong( msg_t *msg ) {$/;"	f
MSG_ReadShort	src/qcommon/msg.c	/^int MSG_ReadShort( msg_t *msg ) {$/;"	f
MSG_ReadString	src/qcommon/msg.c	/^char *MSG_ReadString( msg_t *msg ) {$/;"	f
MSG_ReadStringLine	src/qcommon/msg.c	/^char *MSG_ReadStringLine( msg_t *msg ) {$/;"	f
MSG_ReportChangeVectors_f	src/qcommon/msg.c	/^void MSG_ReportChangeVectors_f( void ) {$/;"	f
MSG_WARNING	src/master/common.h	/^	MSG_WARNING,	\/\/ warnings$/;"	e	enum:__anon383
MSG_WriteAngle	src/qcommon/msg.c	/^void MSG_WriteAngle( msg_t *sb, float f ) {$/;"	f
MSG_WriteAngle16	src/qcommon/msg.c	/^void MSG_WriteAngle16( msg_t *sb, float f ) {$/;"	f
MSG_WriteBigString	src/qcommon/msg.c	/^void MSG_WriteBigString( msg_t *sb, const char *s ) {$/;"	f
MSG_WriteBits	src/qcommon/msg.c	/^void MSG_WriteBits( msg_t *msg, int value, int bits ) {$/;"	f
MSG_WriteByte	src/qcommon/msg.c	/^void MSG_WriteByte( msg_t *sb, int c ) {$/;"	f
MSG_WriteChar	src/qcommon/msg.c	/^void MSG_WriteChar( msg_t *sb, int c ) {$/;"	f
MSG_WriteData	src/qcommon/msg.c	/^void MSG_WriteData( msg_t *buf, const void *data, int length ) {$/;"	f
MSG_WriteDelta	src/qcommon/msg.c	/^void MSG_WriteDelta( msg_t *msg, int oldV, int newV, int bits ) {$/;"	f
MSG_WriteDeltaEntity	src/qcommon/msg.c	/^void MSG_WriteDeltaEntity( int alternateProtocol, msg_t *msg, struct entityState_s *from, struct entityState_s *to,$/;"	f
MSG_WriteDeltaFloat	src/qcommon/msg.c	/^void MSG_WriteDeltaFloat( msg_t *msg, float oldV, float newV ) {$/;"	f
MSG_WriteDeltaKey	src/qcommon/msg.c	/^void MSG_WriteDeltaKey( msg_t *msg, int key, int oldV, int newV, int bits ) {$/;"	f
MSG_WriteDeltaKeyFloat	src/qcommon/msg.c	/^void MSG_WriteDeltaKeyFloat( msg_t *msg, int key, float oldV, float newV ) {$/;"	f
MSG_WriteDeltaPlayerstate	src/qcommon/msg.c	/^void MSG_WriteDeltaPlayerstate( int alternateProtocol, msg_t *msg, struct playerState_s *from, struct playerState_s *to ) {$/;"	f
MSG_WriteDeltaUsercmdKey	src/qcommon/msg.c	/^void MSG_WriteDeltaUsercmdKey( msg_t *msg, int key, usercmd_t *from, usercmd_t *to ) {$/;"	f
MSG_WriteFloat	src/qcommon/msg.c	/^void MSG_WriteFloat( msg_t *sb, float f ) {$/;"	f
MSG_WriteLong	src/qcommon/msg.c	/^void MSG_WriteLong( msg_t *sb, int c ) {$/;"	f
MSG_WriteShort	src/qcommon/msg.c	/^void MSG_WriteShort( msg_t *sb, int c ) {$/;"	f
MSG_WriteString	src/qcommon/msg.c	/^void MSG_WriteString( msg_t *sb, const char *s ) {$/;"	f
MSG_WriteString2	src/qcommon/msg.c	/^static void MSG_WriteString2( msg_t *sb, const char *s, int maxsize )$/;"	f	file:
MSG_initHuffman	src/qcommon/msg.c	/^void MSG_initHuffman( void ) {$/;"	f
MSHME_MASK	src/qcommon/vm_powerpc_asm.c	638;"	d	file:
MST_BAD	src/qcommon/qfiles.h	/^	MST_BAD,$/;"	e	enum:__anon416
MST_FLARE	src/qcommon/qfiles.h	/^	MST_FLARE$/;"	e	enum:__anon416
MST_PATCH	src/qcommon/qfiles.h	/^	MST_PATCH,$/;"	e	enum:__anon416
MST_PLANAR	src/qcommon/qfiles.h	/^	MST_PLANAR,$/;"	e	enum:__anon416
MST_TRIANGLE_SOUP	src/qcommon/qfiles.h	/^	MST_TRIANGLE_SOUP,$/;"	e	enum:__anon416
MUSIC_BUFFER_SIZE	src/client/snd_openal.c	1931;"	d	file:
MUTEX_LOGIC	src/server/sqlite3.c	11953;"	d	file:
MUTEX_LOGIC	src/server/sqlite3.c	11955;"	d	file:
MUTE_VOTE	src/game/bg_public.h	/^  MUTE_VOTE,$/;"	e	enum:__anon360
MUZZLE_FLASH_TIME	src/cgame/cg_local.h	54;"	d
MX_CELL	src/server/sqlite3.c	55036;"	d	file:
MX_CELL_SIZE	src/server/sqlite3.c	55029;"	d	file:
MX_CLOSE_ATTEMPT	src/server/sqlite3.c	37774;"	d	file:
MX_SMALL	src/server/sqlite3.c	19324;"	d	file:
M_MASK	src/qcommon/vm_powerpc_asm.c	629;"	d	file:
M_PI	src/qcommon/q_shared.h	358;"	d
M_ROOT3	src/qcommon/q_shared.h	366;"	d
M_SQRT2	src/qcommon/q_shared.h	362;"	d
MakeMeshIndexes	src/renderergl2/tr_curve.c	/^static int MakeMeshIndexes(int width, int height, srfVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE],$/;"	f	file:
MakeMeshNormals	src/renderergl1/tr_curve.c	/^static void MakeMeshNormals( int width, int height, drawVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {$/;"	f	file:
MakeMeshNormals	src/renderergl2/tr_curve.c	/^static void MakeMeshNormals( int width, int height, srfVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {$/;"	f	file:
MakeMeshTangentVectors	src/renderergl2/tr_curve.c	/^static void MakeMeshTangentVectors(int width, int height, srfVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE], int numIndexes,$/;"	f	file:
MakeNormalVectors	src/qcommon/q_math.c	/^void MakeNormalVectors( const vec3_t forward, vec3_t right, vec3_t up) {$/;"	f
MakeSkyVec	src/renderergl1/tr_sky.c	/^static void MakeSkyVec( float s, float t, int axis, float outSt[2], vec3_t outXYZ )$/;"	f	file:
MakeSkyVec	src/renderergl2/tr_sky.c	/^static void MakeSkyVec( float s, float t, int axis, float outSt[2], vec3_t outXYZ )$/;"	f	file:
Malloc	src/renderercommon/tr_public.h	/^	void	*(*Malloc)( int bytes );$/;"	m	struct:__anon109
MarkFragments	src/renderercommon/tr_public.h	/^	int		(*MarkFragments)( int numPoints, const vec3_t *points, const vec3_t projection,$/;"	m	struct:__anon108
MasterGain	src/client/snd_local.h	/^	void (*MasterGain)( float gain );$/;"	m	struct:__anon96
MasterOf	src/game/g_mover.c	/^gentity_t *MasterOf( gentity_t *ent )$/;"	f
Mat4Compare	src/renderergl2/tr_extramath.c	/^qboolean Mat4Compare( const mat4_t a, const mat4_t b )$/;"	f
Mat4Copy	src/renderergl2/tr_extramath.c	/^void Mat4Copy( const mat4_t in, mat4_t out )$/;"	f
Mat4Dump	src/renderergl2/tr_extramath.c	/^void Mat4Dump( const mat4_t in )$/;"	f
Mat4Identity	src/renderergl2/tr_extramath.c	/^void Mat4Identity( mat4_t out )$/;"	f
Mat4Multiply	src/renderergl2/tr_extramath.c	/^void Mat4Multiply( const mat4_t in1, const mat4_t in2, mat4_t out )$/;"	f
Mat4Ortho	src/renderergl2/tr_extramath.c	/^void Mat4Ortho( float left, float right, float bottom, float top, float znear, float zfar, mat4_t out )$/;"	f
Mat4SimpleInverse	src/renderergl2/tr_extramath.c	/^void Mat4SimpleInverse( const mat4_t in, mat4_t out)$/;"	f
Mat4Transform	src/renderergl2/tr_extramath.c	/^void Mat4Transform( const mat4_t in1, const vec4_t in2, vec4_t out )$/;"	f
Mat4Translation	src/renderergl2/tr_extramath.c	/^void Mat4Translation( vec3_t vec, mat4_t out )$/;"	f
Mat4View	src/renderergl2/tr_extramath.c	/^void Mat4View(vec3_t axes[3], vec3_t origin, mat4_t out)$/;"	f
Mat4Zero	src/renderergl2/tr_extramath.c	/^void Mat4Zero( mat4_t out )$/;"	f
MatchInfo	src/server/sqlite3.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	src/server/sqlite3.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
MatchTeam	src/game/g_mover.c	/^void MatchTeam( gentity_t *teamLeader, int moverState, int time )$/;"	f
MatchinfoBuffer	src/server/sqlite3.c	/^struct MatchinfoBuffer {$/;"	s	file:
MatchinfoBuffer	src/server/sqlite3.c	/^typedef struct MatchinfoBuffer MatchinfoBuffer;$/;"	t	typeref:struct:MatchinfoBuffer	file:
Matrix34Invert	src/renderergl1/tr_model_iqm.c	/^static void Matrix34Invert( float *inMat, float *outMat )$/;"	f	file:
Matrix34Invert	src/renderergl2/tr_model_iqm.c	/^static void Matrix34Invert( float *inMat, float *outMat )$/;"	f	file:
Matrix34Multiply	src/renderergl1/tr_model_iqm.c	/^static void Matrix34Multiply( float *a, float *b, float *out ) {$/;"	f	file:
Matrix34Multiply	src/renderergl2/tr_model_iqm.c	/^static void Matrix34Multiply( float *a, float *b, float *out ) {$/;"	f	file:
Matrix34Multiply_OnlySetOrigin	src/renderergl1/tr_model_iqm.c	/^static void Matrix34Multiply_OnlySetOrigin( float *a, float *b, float *out ) {$/;"	f	file:
Matrix34Multiply_OnlySetOrigin	src/renderergl2/tr_model_iqm.c	/^static void Matrix34Multiply_OnlySetOrigin( float *a, float *b, float *out ) {$/;"	f	file:
MatrixMultiply	src/qcommon/q_math.c	/^void MatrixMultiply(float in1[3][3], float in2[3][3], float out[3][3]) {$/;"	f
Mem	src/server/sqlite3.c	/^struct Mem {$/;"	s	file:
Mem	src/server/sqlite3.c	/^typedef struct Mem Mem;$/;"	t	typeref:struct:Mem	file:
Mem0Global	src/server/sqlite3.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem3Block	src/server/sqlite3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	src/server/sqlite3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Global	src/server/sqlite3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem5Global	src/server/sqlite3.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Link	src/server/sqlite3.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	src/server/sqlite3.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
MemBlockHdr	src/server/sqlite3.c	/^struct MemBlockHdr {$/;"	s	file:
MemJournal	src/server/sqlite3.c	/^struct MemJournal {$/;"	s	file:
MemJournal	src/server/sqlite3.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournalMethods	src/server/sqlite3.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemPage	src/server/sqlite3.c	/^struct MemPage {$/;"	s	file:
MemPage	src/server/sqlite3.c	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage	file:
MemSetTypeFlag	src/server/sqlite3.c	16116;"	d	file:
MemValue	src/server/sqlite3.c	/^  union MemValue {$/;"	u	struct:Mem	file:
MenuParse_aspectBias	src/ui/ui_shared.c	/^qboolean MenuParse_aspectBias( itemDef_t *item, int handle )$/;"	f
MenuParse_backcolor	src/ui/ui_shared.c	/^qboolean MenuParse_backcolor( itemDef_t *item, int handle )$/;"	f
MenuParse_background	src/ui/ui_shared.c	/^qboolean MenuParse_background( itemDef_t *item, int handle )$/;"	f
MenuParse_border	src/ui/ui_shared.c	/^qboolean MenuParse_border( itemDef_t *item, int handle )$/;"	f
MenuParse_borderSize	src/ui/ui_shared.c	/^qboolean MenuParse_borderSize( itemDef_t *item, int handle )$/;"	f
MenuParse_bordercolor	src/ui/ui_shared.c	/^qboolean MenuParse_bordercolor( itemDef_t *item, int handle )$/;"	f
MenuParse_cinematic	src/ui/ui_shared.c	/^qboolean MenuParse_cinematic( itemDef_t *item, int handle )$/;"	f
MenuParse_disablecolor	src/ui/ui_shared.c	/^qboolean MenuParse_disablecolor( itemDef_t *item, int handle )$/;"	f
MenuParse_fadeAmount	src/ui/ui_shared.c	/^qboolean MenuParse_fadeAmount( itemDef_t *item, int handle )$/;"	f
MenuParse_fadeClamp	src/ui/ui_shared.c	/^qboolean MenuParse_fadeClamp( itemDef_t *item, int handle )$/;"	f
MenuParse_fadeCycle	src/ui/ui_shared.c	/^qboolean MenuParse_fadeCycle( itemDef_t *item, int handle )$/;"	f
MenuParse_focuscolor	src/ui/ui_shared.c	/^qboolean MenuParse_focuscolor( itemDef_t *item, int handle )$/;"	f
MenuParse_font	src/ui/ui_shared.c	/^qboolean MenuParse_font( itemDef_t *item, int handle )$/;"	f
MenuParse_forecolor	src/ui/ui_shared.c	/^qboolean MenuParse_forecolor( itemDef_t *item, int handle )$/;"	f
MenuParse_fullscreen	src/ui/ui_shared.c	/^qboolean MenuParse_fullscreen( itemDef_t *item, int handle )$/;"	f
MenuParse_itemDef	src/ui/ui_shared.c	/^qboolean MenuParse_itemDef( itemDef_t *item, int handle )$/;"	f
MenuParse_name	src/ui/ui_shared.c	/^qboolean MenuParse_name( itemDef_t *item, int handle )$/;"	f
MenuParse_onClose	src/ui/ui_shared.c	/^qboolean MenuParse_onClose( itemDef_t *item, int handle )$/;"	f
MenuParse_onESC	src/ui/ui_shared.c	/^qboolean MenuParse_onESC( itemDef_t *item, int handle )$/;"	f
MenuParse_onOpen	src/ui/ui_shared.c	/^qboolean MenuParse_onOpen( itemDef_t *item, int handle )$/;"	f
MenuParse_outOfBounds	src/ui/ui_shared.c	/^qboolean MenuParse_outOfBounds( itemDef_t *item, int handle )$/;"	f
MenuParse_outlinecolor	src/ui/ui_shared.c	/^qboolean MenuParse_outlinecolor( itemDef_t *item, int handle )$/;"	f
MenuParse_ownerdraw	src/ui/ui_shared.c	/^qboolean MenuParse_ownerdraw( itemDef_t *item, int handle )$/;"	f
MenuParse_ownerdrawFlag	src/ui/ui_shared.c	/^qboolean MenuParse_ownerdrawFlag( itemDef_t *item, int handle )$/;"	f
MenuParse_popup	src/ui/ui_shared.c	/^qboolean MenuParse_popup( itemDef_t *item, int handle )$/;"	f
MenuParse_rect	src/ui/ui_shared.c	/^qboolean MenuParse_rect( itemDef_t *item, int handle )$/;"	f
MenuParse_soundLoop	src/ui/ui_shared.c	/^qboolean MenuParse_soundLoop( itemDef_t *item, int handle )$/;"	f
MenuParse_style	src/ui/ui_shared.c	/^qboolean MenuParse_style( itemDef_t *item, int handle )$/;"	f
MenuParse_visible	src/ui/ui_shared.c	/^qboolean MenuParse_visible( itemDef_t *item, int handle )$/;"	f
Menu_AspectCompensate	src/ui/ui_shared.c	/^void Menu_AspectCompensate( menuDef_t *menu )$/;"	f
Menu_AspectiseRect	src/ui/ui_shared.c	/^static void Menu_AspectiseRect( int bias, Rectangle *rect )$/;"	f	file:
Menu_CacheContents	src/ui/ui_shared.c	/^static void Menu_CacheContents( menuDef_t *menu )$/;"	f	file:
Menu_ClearFocus	src/ui/ui_shared.c	/^itemDef_t *Menu_ClearFocus( menuDef_t *menu )$/;"	f
Menu_CloseCinematics	src/ui/ui_shared.c	/^static void Menu_CloseCinematics( menuDef_t *menu )$/;"	f	file:
Menu_Count	src/ui/ui_shared.c	/^int Menu_Count( void )$/;"	f
Menu_FadeItemByName	src/ui/ui_shared.c	/^void Menu_FadeItemByName( menuDef_t *menu, const char *p, qboolean fadeOut )$/;"	f
Menu_FindItemByName	src/ui/ui_shared.c	/^itemDef_t *Menu_FindItemByName( menuDef_t *menu, const char *p )$/;"	f
Menu_GetFocused	src/ui/ui_shared.c	/^menuDef_t *Menu_GetFocused( void )$/;"	f
Menu_GetFocusedItem	src/ui/ui_shared.c	/^itemDef_t *Menu_GetFocusedItem( menuDef_t *menu )$/;"	f
Menu_GetMatchingItemByNumber	src/ui/ui_shared.c	/^itemDef_t *Menu_GetMatchingItemByNumber( menuDef_t *menu, int index, const char *name )$/;"	f
Menu_HandleKey	src/ui/ui_shared.c	/^void Menu_HandleKey( menuDef_t *menu, int key, qboolean down )$/;"	f
Menu_HandleMouseMove	src/ui/ui_shared.c	/^void Menu_HandleMouseMove( menuDef_t *menu, float x, float y )$/;"	f
Menu_HitTest	src/ui/ui_shared.c	/^itemDef_t *Menu_HitTest( menuDef_t *menu, float x, float y )$/;"	f
Menu_Init	src/ui/ui_shared.c	/^void Menu_Init( menuDef_t *menu )$/;"	f
Menu_ItemsMatchingGroup	src/ui/ui_shared.c	/^int Menu_ItemsMatchingGroup( menuDef_t *menu, const char *name )$/;"	f
Menu_New	src/ui/ui_shared.c	/^void Menu_New( int handle )$/;"	f
Menu_OrbitItemByName	src/ui/ui_shared.c	/^void Menu_OrbitItemByName( menuDef_t *menu, const char *p, float x, float y, float cx, float cy, int time )$/;"	f
Menu_OverActiveItem	src/ui/ui_shared.c	/^static qboolean Menu_OverActiveItem( menuDef_t *menu, float x, float y )$/;"	f	file:
Menu_Paint	src/ui/ui_shared.c	/^void Menu_Paint( menuDef_t *menu, qboolean forcePaint )$/;"	f
Menu_PaintAll	src/ui/ui_shared.c	/^void Menu_PaintAll( void )$/;"	f
Menu_Parse	src/ui/ui_shared.c	/^qboolean Menu_Parse( int handle, menuDef_t *menu )$/;"	f
Menu_PostParse	src/ui/ui_shared.c	/^void Menu_PostParse( menuDef_t *menu )$/;"	f
Menu_Reset	src/ui/ui_shared.c	/^void Menu_Reset( void )$/;"	f
Menu_RunCloseScript	src/ui/ui_shared.c	/^static void Menu_RunCloseScript( menuDef_t *menu )$/;"	f	file:
Menu_ScrollFeeder	src/ui/ui_shared.c	/^void Menu_ScrollFeeder( menuDef_t *menu, int feeder, qboolean down )$/;"	f
Menu_SetFeederSelection	src/ui/ui_shared.c	/^void Menu_SetFeederSelection( menuDef_t *menu, int feeder, int index, const char *name )$/;"	f
Menu_SetNextCursorItem	src/ui/ui_shared.c	/^itemDef_t *Menu_SetNextCursorItem( menuDef_t *menu )$/;"	f
Menu_SetPrevCursorItem	src/ui/ui_shared.c	/^itemDef_t *Menu_SetPrevCursorItem( menuDef_t *menu )$/;"	f
Menu_SetupKeywordHash	src/ui/ui_shared.c	/^void Menu_SetupKeywordHash( void )$/;"	f
Menu_ShowItemByName	src/ui/ui_shared.c	/^void Menu_ShowItemByName( menuDef_t *menu, const char *p, qboolean bShow )$/;"	f
Menu_TransitionItemByName	src/ui/ui_shared.c	/^void Menu_TransitionItemByName( menuDef_t *menu, const char *p, rectDef_t rectFrom, rectDef_t rectTo,$/;"	f
Menu_Update	src/ui/ui_shared.c	/^void Menu_Update( menuDef_t *menu )$/;"	f
Menu_UpdateAll	src/ui/ui_shared.c	/^void Menu_UpdateAll( void )$/;"	f
Menu_UpdatePosition	src/ui/ui_shared.c	/^void Menu_UpdatePosition( menuDef_t *menu )$/;"	f
Menus	src/ui/ui_shared.c	/^menuDef_t Menus[MAX_MENUS];      \/\/ defined menus$/;"	v
Menus_Activate	src/ui/ui_shared.c	/^void Menus_Activate( menuDef_t *menu )$/;"	f
Menus_ActivateByName	src/ui/ui_shared.c	/^menuDef_t *Menus_ActivateByName( const char *p )$/;"	f
Menus_AnyFullScreenVisible	src/ui/ui_shared.c	/^qboolean Menus_AnyFullScreenVisible( void )$/;"	f
Menus_Close	src/ui/ui_shared.c	/^static void Menus_Close( menuDef_t *menu )$/;"	f	file:
Menus_CloseAll	src/ui/ui_shared.c	/^void Menus_CloseAll( void )$/;"	f
Menus_CloseByName	src/ui/ui_shared.c	/^void Menus_CloseByName( const char *p )$/;"	f
Menus_FindByName	src/ui/ui_shared.c	/^menuDef_t *Menus_FindByName( const char *p )$/;"	f
Menus_HandleOOBClick	src/ui/ui_shared.c	/^void Menus_HandleOOBClick( menuDef_t *menu, int key, qboolean down )$/;"	f
Menus_ReplaceActive	src/ui/ui_shared.c	/^qboolean Menus_ReplaceActive( menuDef_t *menu )$/;"	f
Menus_ReplaceActiveByName	src/ui/ui_shared.c	/^menuDef_t *Menus_ReplaceActiveByName( const char *p )$/;"	f
MergeEngine	src/server/sqlite3.c	/^struct MergeEngine {$/;"	s	file:
MergeEngine	src/server/sqlite3.c	/^typedef struct MergeEngine MergeEngine;     \/* Merge PMAs together *\/$/;"	t	typeref:struct:MergeEngine	file:
Metrics	src/tools/lcc/src/c.h	/^} Metrics;$/;"	t	typeref:struct:metrics
Mflag	src/tools/lcc/cpp/unix.c	/^int	Mflag;	\/* only print active include files *\/$/;"	v
Milliseconds	src/renderercommon/tr_public.h	/^	int		(*Milliseconds)( void );$/;"	m	struct:__anon109
ModelBounds	src/renderercommon/tr_public.h	/^	void	(*ModelBounds)( qhandle_t model, vec3_t mins, vec3_t maxs );$/;"	m	struct:__anon108
ModelLoader	src/renderergl1/tr_model.c	/^	qhandle_t (*ModelLoader)( const char *, model_t * );$/;"	m	struct:__anon180	file:
ModelLoader	src/renderergl2/tr_model.c	/^	qhandle_t (*ModelLoader)( const char *, model_t * );$/;"	m	struct:__anon82	file:
Module	src/server/sqlite3.c	/^struct Module {$/;"	s	file:
Module	src/server/sqlite3.c	/^typedef struct Module Module;$/;"	t	typeref:struct:Module	file:
MoveClientToIntermission	src/game/g_main.c	/^void MoveClientToIntermission( gentity_t *ent )$/;"	f
MsgPrint	src/master/master.c	/^int MsgPrint (msg_level_t msg_level, const char* format, ...)$/;"	f
MuLawDecode	src/client/snd_wavelet.c	/^short MuLawDecode(byte uLaw) {$/;"	f
MuLawEncode	src/client/snd_wavelet.c	/^byte MuLawEncode(short s) {$/;"	f
NAKED_TARGETS	GNUmakefile	/^NAKED_TARGETS=$(shell echo $(TARGETS) | sed -e "s!$(B)\/!!g")$/;"	m
NAME	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
NAME1	src/tools/lcc/cpp/cpp.h	/^		DSHARP1, NAME1, DEFINED, UMINUS };$/;"	e	enum:toktype
NARG	src/tools/lcc/cpp/cpp.h	3;"	d
NA_BAD	src/qcommon/qcommon.h	/^	NA_BAD = 0,					\/\/ an address lookup failed$/;"	e	enum:__anon419
NA_BROADCAST	src/qcommon/qcommon.h	/^	NA_BROADCAST,$/;"	e	enum:__anon419
NA_IP	src/qcommon/qcommon.h	/^	NA_IP,$/;"	e	enum:__anon419
NA_IP6	src/qcommon/qcommon.h	/^	NA_IP6,$/;"	e	enum:__anon419
NA_LOOPBACK	src/qcommon/qcommon.h	/^	NA_LOOPBACK,$/;"	e	enum:__anon419
NA_MULTICAST6	src/qcommon/qcommon.h	/^	NA_MULTICAST6,$/;"	e	enum:__anon419
NA_UNSPEC	src/qcommon/qcommon.h	/^	NA_UNSPEC$/;"	e	enum:__anon419
NB	src/server/sqlite3.c	62540;"	d	file:
NCELL	src/server/sqlite3.c	156944;"	d	file:
NCSIZE	src/server/sqlite3.c	18827;"	d	file:
NC_AllowAgg	src/server/sqlite3.c	13478;"	d	file:
NC_HasAgg	src/server/sqlite3.c	13479;"	d	file:
NC_IdxExpr	src/server/sqlite3.c	13483;"	d	file:
NC_InAggFunc	src/server/sqlite3.c	13481;"	d	file:
NC_IsCheck	src/server/sqlite3.c	13480;"	d	file:
NC_MinMaxAgg	src/server/sqlite3.c	13484;"	d	file:
NC_PartIdx	src/server/sqlite3.c	13482;"	d	file:
NDEBUG	src/server/sqlite3.c	137842;"	d	file:
NDEBUG	src/server/sqlite3.c	138276;"	d	file:
NDEBUG	src/server/sqlite3.c	168663;"	d	file:
NDEBUG	src/server/sqlite3.c	168666;"	d	file:
NDEBUG	src/server/sqlite3.c	9366;"	d	file:
NDEBUG	src/server/sqlite3.c	9369;"	d	file:
NDELAY	src/server/sqlite3.c	134664;"	d	file:
NDIR	GNUmakefile	/^NDIR=$(MOUNT_DIR)\/null$/;"	m
NEAR_ALPHA	src/cgame/cg_scanner.c	112;"	d	file:
NEED_OGG	GNUmakefile	/^  NEED_OGG=1$/;"	m
NELEMS	src/tools/lcc/src/c.h	30;"	d
NEQ	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
NETCHAN_GENCHECKSUM	src/qcommon/qcommon.h	204;"	d
NETF	src/qcommon/msg.c	723;"	d	file:
NET_ADDRSTRMAXLEN	src/qcommon/qcommon.h	162;"	d
NET_AddLocalAddress	src/qcommon/net_ip.c	/^static void NET_AddLocalAddress(char *ifname, struct sockaddr *addr, struct sockaddr *netmask)$/;"	f	file:
NET_AdrToString	src/qcommon/net_ip.c	/^const char	*NET_AdrToString (netadr_t a)$/;"	f
NET_AdrToStringwPort	src/qcommon/net_ip.c	/^const char	*NET_AdrToStringwPort (netadr_t a)$/;"	f
NET_CompareAdr	src/qcommon/net_ip.c	/^qboolean	NET_CompareAdr (netadr_t a, netadr_t b)$/;"	f
NET_CompareBaseAdr	src/qcommon/net_ip.c	/^qboolean NET_CompareBaseAdr (netadr_t a, netadr_t b)$/;"	f
NET_CompareBaseAdrMask	src/qcommon/net_ip.c	/^qboolean NET_CompareBaseAdrMask(netadr_t a, netadr_t b, int netmask)$/;"	f
NET_Config	src/qcommon/net_ip.c	/^void NET_Config( qboolean enableNetworking ) {$/;"	f
NET_DISABLEMCAST	src/qcommon/qcommon.h	128;"	d
NET_DISABLEPRIMPROTO	src/qcommon/qcommon.h	132;"	d
NET_ENABLEALT1PROTO	src/qcommon/qcommon.h	130;"	d
NET_ENABLEALT2PROTO	src/qcommon/qcommon.h	131;"	d
NET_ENABLEV4	src/qcommon/qcommon.h	123;"	d
NET_ENABLEV6	src/qcommon/qcommon.h	124;"	d
NET_ErrorString	src/qcommon/net_ip.c	/^char *NET_ErrorString( void ) {$/;"	f
NET_Event	src/qcommon/net_ip.c	/^void NET_Event(fd_set *fdr)$/;"	f
NET_FlushPacketQueue	src/qcommon/net_chan.c	/^void NET_FlushPacketQueue(void)$/;"	f
NET_GetCvars	src/qcommon/net_ip.c	/^static qboolean NET_GetCvars( void ) {$/;"	f	file:
NET_GetLocalAddress	src/qcommon/net_ip.c	/^static void NET_GetLocalAddress( void ) {$/;"	f	file:
NET_GetLocalAddress	src/qcommon/net_ip.c	/^static void NET_GetLocalAddress(void)$/;"	f	file:
NET_GetLoopPacket	src/qcommon/net_chan.c	/^qboolean	NET_GetLoopPacket (netsrc_t sock, netadr_t *net_from, msg_t *net_message)$/;"	f
NET_GetPacket	src/qcommon/net_ip.c	/^qboolean NET_GetPacket(netadr_t *net_from, msg_t *net_message, fd_set *fdr)$/;"	f
NET_IP6Socket	src/qcommon/net_ip.c	/^SOCKET NET_IP6Socket( int alternateProtocol, char *net_interface, int port, struct sockaddr_in6 *bindto, int *err ) {$/;"	f
NET_IPSocket	src/qcommon/net_ip.c	/^SOCKET NET_IPSocket( int alternateProtocol, char *net_interface, int port, int *err ) {$/;"	f
NET_Init	src/qcommon/net_ip.c	/^void NET_Init( void ) {$/;"	f
NET_IsLocalAddress	src/qcommon/net_ip.c	/^qboolean	NET_IsLocalAddress( netadr_t adr ) {$/;"	f
NET_JoinMulticast6	src/qcommon/net_ip.c	/^void NET_JoinMulticast6(void)$/;"	f
NET_LeaveMulticast6	src/qcommon/net_ip.c	/^void NET_LeaveMulticast6()$/;"	f
NET_MULTICAST_IP6	src/qcommon/net_ip.c	136;"	d	file:
NET_OpenIP	src/qcommon/net_ip.c	/^void NET_OpenIP( void ) {$/;"	f
NET_OpenSocks	src/qcommon/net_ip.c	/^void NET_OpenSocks( int port ) {$/;"	f
NET_OutOfBandData	src/qcommon/net_chan.c	/^void QDECL NET_OutOfBandData( netsrc_t sock, netadr_t adr, byte *format, int len ) {$/;"	f
NET_OutOfBandPrint	src/qcommon/net_chan.c	/^void QDECL NET_OutOfBandPrint( netsrc_t sock, netadr_t adr, const char *format, ... ) {$/;"	f
NET_PRIOV6	src/qcommon/qcommon.h	126;"	d
NET_QueuePacket	src/qcommon/net_chan.c	/^static void NET_QueuePacket( int length, const void *data, netadr_t to,$/;"	f	file:
NET_Restart_f	src/qcommon/net_ip.c	/^void NET_Restart_f(void)$/;"	f
NET_SendLoopPacket	src/qcommon/net_chan.c	/^void NET_SendLoopPacket (netsrc_t sock, int length, const void *data, netadr_t to)$/;"	f
NET_SendPacket	src/qcommon/net_chan.c	/^void NET_SendPacket( netsrc_t sock, int length, const void *data, netadr_t to ) {$/;"	f
NET_SetMulticast6	src/qcommon/net_ip.c	/^void NET_SetMulticast6(void)$/;"	f
NET_Shutdown	src/qcommon/net_ip.c	/^void NET_Shutdown( void ) {$/;"	f
NET_Sleep	src/qcommon/net_ip.c	/^void NET_Sleep(int msec)$/;"	f
NET_StringToAdr	src/null/mac_net.c	/^qboolean	NET_StringToAdr (char *s, netadr_t *a)$/;"	f
NET_StringToAdr	src/null/null_net.c	/^qboolean	NET_StringToAdr (char *s, netadr_t *a)$/;"	f
NET_StringToAdr	src/qcommon/net_chan.c	/^int NET_StringToAdr( const char *s, netadr_t *a, netadrtype_t family )$/;"	f
NEVER	src/server/sqlite3.c	138247;"	d	file:
NEVER	src/server/sqlite3.c	138250;"	d	file:
NEVER	src/server/sqlite3.c	138255;"	d	file:
NEVER	src/server/sqlite3.c	169284;"	d	file:
NEVER	src/server/sqlite3.c	9442;"	d	file:
NEVER	src/server/sqlite3.c	9445;"	d	file:
NEVER	src/server/sqlite3.c	9448;"	d	file:
NEW	src/tools/lcc/src/c.h	8;"	d
NEW0	src/tools/lcc/src/c.h	9;"	d
NEWLINE	src/tools/lcc/src/lex.c	/^enum { BLANK=01,  NEWLINE=02, LETTER=04,$/;"	e	enum:__anon281	file:
NEWLINE	src/tools/lcc/src/symbolic.c	28;"	d	file:
NEXTMAP_VOTE	src/game/bg_public.h	/^  NEXTMAP_VOTE,$/;"	e	enum:__anon360
NIF	src/tools/lcc/cpp/cpp.h	5;"	d
NINCLUDE	src/tools/lcc/cpp/cpp.h	4;"	d
NL	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
NLSIZE	src/tools/lcc/cpp/nlist.c	13;"	d	file:
NN	src/server/sqlite3.c	62539;"	d	file:
NOISE_MASK	src/renderercommon/tr_noise.c	27;"	d	file:
NOISE_SIZE	src/renderercommon/tr_noise.c	26;"	d	file:
NONTERM	src/tools/lcc/lburg/lburg.h	/^typedef enum { TERM=1, NONTERM } Kind;$/;"	e	enum:__anon269
NOP	src/qcommon/vm_sparc.c	/^	CALL, NOP, SETHI,$/;"	e	enum:sparc_iname	file:
NORMAL_EPSILON	src/qcommon/cm_patch.c	424;"	d	file:
NORMAL_HEIGHT	src/cgame/cg_view.c	1002;"	d	file:
NORMAL_WIDTH	src/cgame/cg_view.c	1003;"	d	file:
NOT	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
NOT	src/tools/lcc/src/c.h	/^	NOT=39<<4,$/;"	e	enum:__anon305
NOT1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
NOTSHLIBCFLAGS	GNUmakefile	/^  NOTSHLIBCFLAGS=-mdynamic-no-pic$/;"	m
NOT_ROTATING	src/game/g_maprotation.c	31;"	d	file:
NOT_WITHIN	src/server/sqlite3.c	8370;"	d	file:
NOT_WITHIN	src/server/sqlite3.h	8145;"	d
NO_CREDITS_TIME	src/cgame/cg_draw.c	306;"	d	file:
NO_LOCK	src/server/sqlite3.c	11756;"	d	file:
NSPA_ATTACK1	src/game/bg_public.h	/^  NSPA_ATTACK1,$/;"	e	enum:__anon342
NSPA_ATTACK2	src/game/bg_public.h	/^  NSPA_ATTACK2,$/;"	e	enum:__anon342
NSPA_ATTACK3	src/game/bg_public.h	/^  NSPA_ATTACK3,$/;"	e	enum:__anon342
NSPA_CHARGE	src/game/bg_public.h	/^  NSPA_CHARGE,$/;"	e	enum:__anon342
NSPA_DEAD1	src/game/bg_public.h	/^  NSPA_DEAD1,$/;"	e	enum:__anon342
NSPA_DEAD2	src/game/bg_public.h	/^  NSPA_DEAD2,$/;"	e	enum:__anon342
NSPA_DEAD3	src/game/bg_public.h	/^  NSPA_DEAD3,$/;"	e	enum:__anon342
NSPA_DEATH1	src/game/bg_public.h	/^  NSPA_DEATH1,$/;"	e	enum:__anon342
NSPA_DEATH2	src/game/bg_public.h	/^  NSPA_DEATH2,$/;"	e	enum:__anon342
NSPA_DEATH3	src/game/bg_public.h	/^  NSPA_DEATH3,$/;"	e	enum:__anon342
NSPA_GESTURE	src/game/bg_public.h	/^  NSPA_GESTURE,$/;"	e	enum:__anon342
NSPA_JUMP	src/game/bg_public.h	/^  NSPA_JUMP,$/;"	e	enum:__anon342
NSPA_JUMPBACK	src/game/bg_public.h	/^  NSPA_JUMPBACK,$/;"	e	enum:__anon342
NSPA_LAND	src/game/bg_public.h	/^  NSPA_LAND,$/;"	e	enum:__anon342
NSPA_LANDBACK	src/game/bg_public.h	/^  NSPA_LANDBACK,$/;"	e	enum:__anon342
NSPA_PAIN1	src/game/bg_public.h	/^  NSPA_PAIN1,$/;"	e	enum:__anon342
NSPA_PAIN2	src/game/bg_public.h	/^  NSPA_PAIN2,$/;"	e	enum:__anon342
NSPA_RUN	src/game/bg_public.h	/^  NSPA_RUN,$/;"	e	enum:__anon342
NSPA_RUNBACK	src/game/bg_public.h	/^  NSPA_RUNBACK,$/;"	e	enum:__anon342
NSPA_RUNLEFT	src/game/bg_public.h	/^  NSPA_RUNLEFT,$/;"	e	enum:__anon342
NSPA_RUNRIGHT	src/game/bg_public.h	/^  NSPA_RUNRIGHT,$/;"	e	enum:__anon342
NSPA_STAND	src/game/bg_public.h	/^  NSPA_STAND,$/;"	e	enum:__anon342
NSPA_SWIM	src/game/bg_public.h	/^  NSPA_SWIM,$/;"	e	enum:__anon342
NSPA_TURN	src/game/bg_public.h	/^  NSPA_TURN,$/;"	e	enum:__anon342
NSPA_WALK	src/game/bg_public.h	/^  NSPA_WALK,$/;"	e	enum:__anon342
NSPA_WALKBACK	src/game/bg_public.h	/^  NSPA_WALKBACK,$/;"	e	enum:__anon342
NSPA_WALKLEFT	src/game/bg_public.h	/^  NSPA_WALKLEFT,$/;"	e	enum:__anon342
NSPA_WALKRIGHT	src/game/bg_public.h	/^  NSPA_WALKRIGHT,$/;"	e	enum:__anon342
NSTAK	src/tools/lcc/cpp/eval.c	5;"	d	file:
NS_CLIENT	src/qcommon/qcommon.h	/^	NS_CLIENT,$/;"	e	enum:__anon420
NS_SERVER	src/qcommon/qcommon.h	/^	NS_SERVER$/;"	e	enum:__anon420
NTDDI_WIN8	src/server/sqlite3.c	35363;"	d	file:
NTDDI_WINBLUE	src/server/sqlite3.c	35367;"	d	file:
NTDDI_WINTHRESHOLD	src/server/sqlite3.c	35371;"	d	file:
NT_CONDITION	src/game/g_maprotation.c	/^  NT_CONDITION,$/;"	e	enum:__anon322	file:
NT_GOTO	src/game/g_maprotation.c	/^  NT_GOTO,$/;"	e	enum:__anon322	file:
NT_LABEL	src/game/g_maprotation.c	/^  NT_LABEL,$/;"	e	enum:__anon322	file:
NT_MAP	src/game/g_maprotation.c	/^  NT_MAP,$/;"	e	enum:__anon322	file:
NT_RESUME	src/game/g_maprotation.c	/^  NT_RESUME,$/;"	e	enum:__anon322	file:
NT_RETURN	src/game/g_maprotation.c	/^  NT_RETURN$/;"	e	enum:__anon322	file:
NULL	src/game/bg_lib.h	32;"	d
NULL	src/qcommon/q_shared.h	193;"	d
NULL	src/tools/lcc/cpp/cpp.h	10;"	d
NUM1	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
NUM2	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
NUM3	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
NUMBER	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
NUMVERTEXNORMALS	src/qcommon/q_shared.h	369;"	d
NUM_BEAM_SEGS	src/renderergl1/tr_surface.c	290;"	d	file:
NUM_BEAM_SEGS	src/renderergl2/tr_surface.c	542;"	d	file:
NUM_BINARY_SHADERS	src/cgame/cg_local.h	934;"	d
NUM_CON_TIMES	src/client/cl_console.c	31;"	d	file:
NUM_CROSSHAIRS	src/cgame/cg_local.h	77;"	d
NUM_CROSSHAIRS	src/ui/ui_shared.h	120;"	d
NUM_MUSIC_BUFFERS	src/client/snd_openal.c	1930;"	d	file:
NUM_SAVED_STATES	src/cgame/cg_local.h	922;"	d
NUM_SEGMENTS	src/tools/asm/q3asm.c	/^	NUM_SEGMENTS$/;"	e	enum:__anon266	file:
NUM_SERVER_PORTS	src/qcommon/qcommon.h	274;"	d
NUM_SOURCE_OPS	src/tools/asm/q3asm.c	224;"	d	file:
NUM_TEAMS	src/game/bg_public.h	/^  NUM_TEAMS$/;"	e	enum:__anon325
NUM_TEXTURE_BUNDLES	src/renderergl1/tr_local.h	269;"	d
NUM_TEXTURE_BUNDLES	src/renderergl2/tr_local.h	/^	NUM_TEXTURE_BUNDLES = 7$/;"	e	enum:__anon24
NUM_VOTE_STRINGS	src/qcommon/q_shared.h	/^  NUM_VOTE_STRINGS$/;"	e	enum:__anon466
NUM_VOTE_TYPES	src/game/bg_public.h	/^  NUM_VOTE_TYPES,$/;"	e	enum:__anon360
NXPutc	src/client/snd_wavelet.c	/^void NXPutc(NXStream *stream, char out) {$/;"	f
NXStream	src/client/snd_local.h	233;"	d
NXStreamCount	src/client/snd_wavelet.c	/^static	int	NXStreamCount;$/;"	v	file:
NYT	src/qcommon/qcommon.h	1125;"	d
N_HASH	src/server/sqlite3.c	19330;"	d	file:
N_OR_COST	src/server/sqlite3.c	120061;"	d	file:
N_SORT_BUCKET	src/server/sqlite3.c	41959;"	d	file:
N_STATEMENT	src/server/sqlite3.c	159668;"	d	file:
NameContext	src/server/sqlite3.c	/^struct NameContext {$/;"	s	file:
NameContext	src/server/sqlite3.c	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext	file:
NameToAFunc	src/renderergl1/tr_shader.c	/^static unsigned NameToAFunc( const char *funcname )$/;"	f	file:
NameToAFunc	src/renderergl2/tr_shader.c	/^static unsigned NameToAFunc( const char *funcname )$/;"	f	file:
NameToDstBlendMode	src/renderergl1/tr_shader.c	/^static int NameToDstBlendMode( const char *name )$/;"	f	file:
NameToDstBlendMode	src/renderergl2/tr_shader.c	/^static int NameToDstBlendMode( const char *name )$/;"	f	file:
NameToGenFunc	src/renderergl1/tr_shader.c	/^static genFunc_t NameToGenFunc( const char *funcname )$/;"	f	file:
NameToGenFunc	src/renderergl2/tr_shader.c	/^static genFunc_t NameToGenFunc( const char *funcname )$/;"	f	file:
NameToSrcBlendMode	src/renderergl1/tr_shader.c	/^static int NameToSrcBlendMode( const char *name )$/;"	f	file:
NameToSrcBlendMode	src/renderergl2/tr_shader.c	/^static int NameToSrcBlendMode( const char *name )$/;"	f	file:
NeedsReg	src/tools/lcc/src/gen.c	/^static char NeedsReg[] = {$/;"	v	file:
NetadrToSockadr	src/qcommon/net_ip.c	/^static void NetadrToSockadr( netadr_t *a, struct sockaddr *s ) {$/;"	f	file:
Netchan_Init	src/qcommon/net_chan.c	/^void Netchan_Init( int port ) {$/;"	f
Netchan_Process	src/qcommon/net_chan.c	/^qboolean Netchan_Process( netchan_t *chan, msg_t *msg ) {$/;"	f
Netchan_Setup	src/qcommon/net_chan.c	/^void Netchan_Setup(int alternateProtocol, netsrc_t sock, netchan_t *chan, netadr_t adr, int qport, int challenge)$/;"	f
Netchan_Transmit	src/qcommon/net_chan.c	/^void Netchan_Transmit( netchan_t *chan, int length, const byte *data ) {$/;"	f
Netchan_TransmitNextFragment	src/qcommon/net_chan.c	/^void Netchan_TransmitNextFragment( netchan_t *chan ) {$/;"	f
NextConstant4	src/qcommon/vm_x86.c	/^static int NextConstant4(void)$/;"	f	file:
NextPowerOfTwo	src/renderergl2/tr_extramath.c	/^int NextPowerOfTwo(int in)$/;"	f
Nlist	src/tools/lcc/cpp/cpp.h	/^} Nlist;$/;"	t	typeref:struct:nlist
Node	src/tools/lcc/src/c.h	/^typedef struct node *Node;$/;"	t	typeref:struct:node
NodeReader	src/server/sqlite3.c	/^struct NodeReader {$/;"	s	file:
NodeReader	src/server/sqlite3.c	/^typedef struct NodeReader NodeReader;$/;"	t	typeref:struct:NodeReader	file:
NodeWriter	src/server/sqlite3.c	/^struct NodeWriter {$/;"	s	file:
NodeWriter	src/server/sqlite3.c	/^typedef struct NodeWriter NodeWriter;$/;"	t	typeref:struct:NodeWriter	file:
Nonterm	src/tools/lcc/lburg/lburg.h	/^typedef struct nonterm *Nonterm;$/;"	t	typeref:struct:nonterm
NormalizeColor	src/qcommon/q_math.c	/^float NormalizeColor( const vec3_t in, vec3_t out ) {$/;"	f
O0	src/qcommon/vm_sparc.h	13;"	d
O1	src/qcommon/vm_sparc.h	14;"	d
O2	src/qcommon/vm_sparc.h	15;"	d
O3	src/qcommon/vm_sparc.h	16;"	d
O4	src/qcommon/vm_sparc.h	17;"	d
O5	src/qcommon/vm_sparc.h	18;"	d
O6	src/qcommon/vm_sparc.h	19;"	d
O7	src/qcommon/vm_sparc.h	20;"	d
OBF	src/qcommon/vm_powerpc_asm.c	275;"	d	file:
OBJ	GNUmakefile	/^OBJ = $(Q3OBJ) $(Q3ROBJ) $(Q3R2OBJ) $(Q3DOBJ) $(JPGOBJ) \\$/;"	m
OBJECTS	src/master/Makefile	/^OBJECTS= \\$/;"	m
OBJ_D_FILES	GNUmakefile	/^  OBJ_D_FILES=$(filter %.d,$(OBJ:%.o=%.d))$/;"	m
OBS	src/tools/lcc/cpp/cpp.h	2;"	d
OE_Abort	src/server/sqlite3.c	12824;"	d	file:
OE_Cascade	src/server/sqlite3.c	12832;"	d	file:
OE_Default	src/server/sqlite3.c	12834;"	d	file:
OE_Fail	src/server/sqlite3.c	12825;"	d	file:
OE_Ignore	src/server/sqlite3.c	12826;"	d	file:
OE_None	src/server/sqlite3.c	12822;"	d	file:
OE_Replace	src/server/sqlite3.c	12827;"	d	file:
OE_Restrict	src/server/sqlite3.c	12829;"	d	file:
OE_Rollback	src/server/sqlite3.c	12823;"	d	file:
OE_SetDflt	src/server/sqlite3.c	12831;"	d	file:
OE_SetNull	src/server/sqlite3.c	12830;"	d	file:
OFFSET	src/qcommon/vm_powerpc.c	335;"	d	file:
OFFSET	src/qcommon/vm_sparc.c	522;"	d	file:
OGGDIR	GNUmakefile	/^OGGDIR=$(DEP_DIR)\/libogg-1.3.1$/;"	m
OGG_CFLAGS	GNUmakefile	/^    OGG_CFLAGS = -I$(OGGDIR)\/include$/;"	m
OGG_CFLAGS	GNUmakefile	/^    OGG_CFLAGS ?= $(shell pkg-config --silence-errors --cflags ogg || true)$/;"	m
OGG_LIBS	GNUmakefile	/^    OGG_LIBS ?= $(shell pkg-config --silence-errors --libs ogg || echo -logg)$/;"	m
OGG_SAMPLEWIDTH	src/client/snd_codec_ogg.c	40;"	d	file:
OMIT_TEMPDB	src/server/sqlite3.c	9822;"	d	file:
OMIT_TEMPDB	src/server/sqlite3.c	9824;"	d	file:
ONEPASS_MULTI	src/server/sqlite3.c	14505;"	d	file:
ONEPASS_OFF	src/server/sqlite3.c	14503;"	d	file:
ONEPASS_SINGLE	src/server/sqlite3.c	14504;"	d	file:
ONE_BYTE_INT	src/server/sqlite3.c	71323;"	d	file:
ONLY_IF_REALLOC_STRESS	src/server/sqlite3.c	9459;"	d	file:
ONLY_IF_REALLOC_STRESS	src/server/sqlite3.c	9461;"	d	file:
ONLY_IF_REALLOC_STRESS	src/server/sqlite3.c	9463;"	d	file:
ON_EPSILON	src/qcommon/cm_polylib.h	45;"	d
ON_EPSILON	src/renderergl1/tr_sky.c	144;"	d	file:
ON_EPSILON	src/renderergl2/tr_sky.c	144;"	d	file:
OP	src/qcommon/vm_powerpc_asm.c	541;"	d	file:
OP2_MASK	src/qcommon/vm_sparc.c	79;"	d	file:
OP3_MASK	src/qcommon/vm_sparc.c	80;"	d	file:
OPENAL_CFLAGS	GNUmakefile	/^    OPENAL_CFLAGS ?= $(shell pkg-config --silence-errors --cflags openal)$/;"	m
OPENAL_LIBS	GNUmakefile	/^    OPENAL_LIBS ?= $(shell pkg-config --silence-errors --libs openal)$/;"	m
OPENAL_LIBS	GNUmakefile	/^    OPENAL_LIBS ?= -lopenal$/;"	m
OPFLAG_APPEND	src/server/sqlite3.c	13864;"	d	file:
OPFLAG_AUXDELETE	src/server/sqlite3.c	13874;"	d	file:
OPFLAG_BULKCSR	src/server/sqlite3.c	13868;"	d	file:
OPFLAG_EPHEM	src/server/sqlite3.c	13861;"	d	file:
OPFLAG_FORDELETE	src/server/sqlite3.c	13870;"	d	file:
OPFLAG_ISUPDATE	src/server/sqlite3.c	13863;"	d	file:
OPFLAG_LASTROWID	src/server/sqlite3.c	13862;"	d	file:
OPFLAG_LENGTHARG	src/server/sqlite3.c	13866;"	d	file:
OPFLAG_NCHANGE	src/server/sqlite3.c	13859;"	d	file:
OPFLAG_P2ISREG	src/server/sqlite3.c	13871;"	d	file:
OPFLAG_PERMUTE	src/server/sqlite3.c	13872;"	d	file:
OPFLAG_SAVEPOSITION	src/server/sqlite3.c	13873;"	d	file:
OPFLAG_SEEKEQ	src/server/sqlite3.c	13869;"	d	file:
OPFLAG_TYPEOFARG	src/server/sqlite3.c	13867;"	d	file:
OPFLAG_USESEEKRESULT	src/server/sqlite3.c	13865;"	d	file:
OPFLG_IN1	src/server/sqlite3.c	11022;"	d	file:
OPFLG_IN2	src/server/sqlite3.c	11023;"	d	file:
OPFLG_IN3	src/server/sqlite3.c	11024;"	d	file:
OPFLG_INITIALIZER	src/server/sqlite3.c	11027;"	d	file:
OPFLG_JUMP	src/server/sqlite3.c	11021;"	d	file:
OPFLG_OUT2	src/server/sqlite3.c	11025;"	d	file:
OPFLG_OUT3	src/server/sqlite3.c	11026;"	d	file:
OPF_MASK	src/qcommon/vm_sparc.c	81;"	d	file:
OPL	src/qcommon/vm_powerpc_asm.c	553;"	d	file:
OPL_MASK	src/qcommon/vm_powerpc_asm.c	554;"	d	file:
OPSTACK_MASK	src/qcommon/vm_local.h	37;"	d
OPSTACK_SIZE	src/qcommon/vm_local.h	36;"	d
OPTIMIZE	GNUmakefile	/^    OPTIMIZE = $(OPTIMIZEVM)$/;"	m
OPTIMIZE	GNUmakefile	/^  OPTIMIZE = $(OPTIMIZEVM)$/;"	m
OPTIMIZE	GNUmakefile	/^  OPTIMIZE = -O3$/;"	m
OPTIMIZEVM	GNUmakefile	/^    OPTIMIZEVM = -O3 -march=i586$/;"	m
OPTIMIZEVM	GNUmakefile	/^    OPTIMIZEVM = -O3$/;"	m
OPTIMIZEVM	GNUmakefile	/^  OPTIMIZEVM = -O3 -funroll-loops$/;"	m
OPTIMIZEVM	GNUmakefile	/^  OPTIMIZEVM = -O3$/;"	m
OPTIMIZEVM	GNUmakefile	/^  OPTIMIZEVM=$/;"	m
OPTIMIZE_COPY	src/qcommon/vm_powerpc.c	82;"	d	file:
OPTIMIZE_COPY	src/qcommon/vm_powerpc.c	86;"	d	file:
OPTIMIZE_HOLE	src/qcommon/vm_powerpc.c	81;"	d	file:
OPTIMIZE_HOLE	src/qcommon/vm_powerpc.c	85;"	d	file:
OPTIMIZE_MASK	src/qcommon/vm_powerpc.c	83;"	d	file:
OPTIMIZE_MASK	src/qcommon/vm_powerpc.c	87;"	d	file:
OPTO	src/qcommon/vm_powerpc_asm.c	547;"	d	file:
OPTO_MASK	src/qcommon/vm_powerpc_asm.c	548;"	d	file:
OPUSDIR	GNUmakefile	/^OPUSDIR=$(DEP_DIR)\/opus-1.1$/;"	m
OPUSFILEDIR	GNUmakefile	/^OPUSFILEDIR=$(DEP_DIR)\/opusfile-0.5$/;"	m
OPUS_CFLAGS	GNUmakefile	/^    OPUS_CFLAGS = -DOPUS_BUILD -DHAVE_LRINTF -DFLOATING_POINT -DUSE_ALLOCA \\$/;"	m
OPUS_CFLAGS	GNUmakefile	/^    OPUS_CFLAGS ?= $(shell pkg-config --silence-errors --cflags opusfile opus || true)$/;"	m
OPUS_LIBS	GNUmakefile	/^    OPUS_LIBS ?= $(shell pkg-config --silence-errors --libs opusfile opus || echo -lopusfile -lopus)$/;"	m
OPUS_SAMPLEWIDTH	src/client/snd_codec_opus.c	37;"	d	file:
OP_ADD	src/qcommon/vm_local.h	/^	OP_ADD,$/;"	e	enum:__anon483
OP_ADD	src/tools/asm/q3asm.c	/^	OP_ADD,$/;"	e	enum:__anon264	file:
OP_ADDF	src/qcommon/vm_local.h	/^	OP_ADDF,$/;"	e	enum:__anon483
OP_ADDF	src/tools/asm/q3asm.c	/^	OP_ADDF,$/;"	e	enum:__anon264	file:
OP_ARG	src/qcommon/vm_local.h	/^	OP_ARG,$/;"	e	enum:__anon483
OP_ARG	src/tools/asm/q3asm.c	/^	OP_ARG,$/;"	e	enum:__anon264	file:
OP_Add	src/server/sqlite3.c	10943;"	d	file:
OP_AddImm	src/server/sqlite3.c	10891;"	d	file:
OP_Affinity	src/server/sqlite3.c	10902;"	d	file:
OP_AggFinal	src/server/sqlite3.c	10999;"	d	file:
OP_AggStep	src/server/sqlite3.c	10998;"	d	file:
OP_AggStep0	src/server/sqlite3.c	10997;"	d	file:
OP_And	src/server/sqlite3.c	10926;"	d	file:
OP_AutoCommit	src/server/sqlite3.c	10855;"	d	file:
OP_BAND	src/qcommon/vm_local.h	/^	OP_BAND,$/;"	e	enum:__anon483
OP_BAND	src/tools/asm/q3asm.c	/^	OP_BAND,$/;"	e	enum:__anon264	file:
OP_BCOM	src/qcommon/vm_local.h	/^	OP_BCOM,$/;"	e	enum:__anon483
OP_BCOM	src/tools/asm/q3asm.c	/^	OP_BCOM,$/;"	e	enum:__anon264	file:
OP_BLOCK_COPY	src/qcommon/vm_local.h	/^	OP_BLOCK_COPY,$/;"	e	enum:__anon483
OP_BLOCK_COPY	src/tools/asm/q3asm.c	/^	OP_BLOCK_COPY,$/;"	e	enum:__anon264	file:
OP_BOR	src/qcommon/vm_local.h	/^	OP_BOR,$/;"	e	enum:__anon483
OP_BOR	src/tools/asm/q3asm.c	/^	OP_BOR,$/;"	e	enum:__anon264	file:
OP_BREAK	src/qcommon/vm_local.h	/^	OP_BREAK,$/;"	e	enum:__anon483
OP_BREAK	src/tools/asm/q3asm.c	/^	OP_BREAK, $/;"	e	enum:__anon264	file:
OP_BXOR	src/qcommon/vm_local.h	/^	OP_BXOR,$/;"	e	enum:__anon483
OP_BXOR	src/tools/asm/q3asm.c	/^	OP_BXOR,$/;"	e	enum:__anon264	file:
OP_BitAnd	src/server/sqlite3.c	10939;"	d	file:
OP_BitNot	src/server/sqlite3.c	10950;"	d	file:
OP_BitOr	src/server/sqlite3.c	10940;"	d	file:
OP_Blob	src/server/sqlite3.c	10881;"	d	file:
OP_CALL	src/qcommon/vm_local.h	/^	OP_CALL,$/;"	e	enum:__anon483
OP_CALL	src/tools/asm/q3asm.c	/^	OP_CALL,$/;"	e	enum:__anon264	file:
OP_CONST	src/qcommon/vm_local.h	/^	OP_CONST,$/;"	e	enum:__anon483
OP_CONST	src/tools/asm/q3asm.c	/^	OP_CONST,$/;"	e	enum:__anon264	file:
OP_CVFI	src/qcommon/vm_local.h	/^	OP_CVFI$/;"	e	enum:__anon483
OP_CVFI	src/tools/asm/q3asm.c	/^	OP_CVFI$/;"	e	enum:__anon264	file:
OP_CVIF	src/qcommon/vm_local.h	/^	OP_CVIF,$/;"	e	enum:__anon483
OP_CVIF	src/tools/asm/q3asm.c	/^	OP_CVIF,$/;"	e	enum:__anon264	file:
OP_Cast	src/server/sqlite3.c	10894;"	d	file:
OP_Checkpoint	src/server/sqlite3.c	10862;"	d	file:
OP_Clear	src/server/sqlite3.c	10973;"	d	file:
OP_Close	src/server/sqlite3.c	10915;"	d	file:
OP_CollSeq	src/server/sqlite3.c	10888;"	d	file:
OP_Column	src/server/sqlite3.c	10901;"	d	file:
OP_ColumnsUsed	src/server/sqlite3.c	10916;"	d	file:
OP_Compare	src/server/sqlite3.c	10896;"	d	file:
OP_Concat	src/server/sqlite3.c	10948;"	d	file:
OP_Copy	src/server/sqlite3.c	10884;"	d	file:
OP_Count	src/server/sqlite3.c	10904;"	d	file:
OP_CreateIndex	src/server/sqlite3.c	10975;"	d	file:
OP_CreateTable	src/server/sqlite3.c	10976;"	d	file:
OP_CursorHint	src/server/sqlite3.c	11013;"	d	file:
OP_DIVF	src/qcommon/vm_local.h	/^	OP_DIVF,$/;"	e	enum:__anon483
OP_DIVF	src/tools/asm/q3asm.c	/^	OP_DIVF,$/;"	e	enum:__anon264	file:
OP_DIVI	src/qcommon/vm_local.h	/^	OP_DIVI,$/;"	e	enum:__anon483
OP_DIVI	src/tools/asm/q3asm.c	/^	OP_DIVI,$/;"	e	enum:__anon264	file:
OP_DIVU	src/qcommon/vm_local.h	/^	OP_DIVU,$/;"	e	enum:__anon483
OP_DIVU	src/tools/asm/q3asm.c	/^	OP_DIVU,$/;"	e	enum:__anon264	file:
OP_DecrJumpZero	src/server/sqlite3.c	10995;"	d	file:
OP_Delete	src/server/sqlite3.c	10949;"	d	file:
OP_Destroy	src/server/sqlite3.c	10972;"	d	file:
OP_Divide	src/server/sqlite3.c	10946;"	d	file:
OP_DropIndex	src/server/sqlite3.c	10980;"	d	file:
OP_DropTable	src/server/sqlite3.c	10979;"	d	file:
OP_DropTrigger	src/server/sqlite3.c	10981;"	d	file:
OP_ENTER	src/qcommon/vm_local.h	/^	OP_ENTER,$/;"	e	enum:__anon483
OP_ENTER	src/tools/asm/q3asm.c	/^	OP_ENTER,$/;"	e	enum:__anon264	file:
OP_EQ	src/qcommon/vm_local.h	/^	OP_EQ,$/;"	e	enum:__anon483
OP_EQ	src/tools/asm/q3asm.c	/^	OP_EQ,$/;"	e	enum:__anon264	file:
OP_EQF	src/qcommon/vm_local.h	/^	OP_EQF,$/;"	e	enum:__anon483
OP_EQF	src/tools/asm/q3asm.c	/^	OP_EQF,$/;"	e	enum:__anon264	file:
OP_EndCoroutine	src/server/sqlite3.c	10871;"	d	file:
OP_Eq	src/server/sqlite3.c	10933;"	d	file:
OP_Expire	src/server/sqlite3.c	11001;"	d	file:
OP_Explain	src/server/sqlite3.c	11015;"	d	file:
OP_FkCounter	src/server/sqlite3.c	10989;"	d	file:
OP_FkIfZero	src/server/sqlite3.c	10990;"	d	file:
OP_Found	src/server/sqlite3.c	10923;"	d	file:
OP_Function	src/server/sqlite3.c	10890;"	d	file:
OP_Function0	src/server/sqlite3.c	10889;"	d	file:
OP_GEF	src/qcommon/vm_local.h	/^	OP_GEF,$/;"	e	enum:__anon483
OP_GEF	src/tools/asm/q3asm.c	/^	OP_GEF,$/;"	e	enum:__anon264	file:
OP_GEI	src/qcommon/vm_local.h	/^	OP_GEI,$/;"	e	enum:__anon483
OP_GEI	src/tools/asm/q3asm.c	/^	OP_GEI,$/;"	e	enum:__anon264	file:
OP_GEU	src/qcommon/vm_local.h	/^	OP_GEU,$/;"	e	enum:__anon483
OP_GEU	src/tools/asm/q3asm.c	/^	OP_GEU,$/;"	e	enum:__anon264	file:
OP_GTF	src/qcommon/vm_local.h	/^	OP_GTF,$/;"	e	enum:__anon483
OP_GTF	src/tools/asm/q3asm.c	/^	OP_GTF,$/;"	e	enum:__anon264	file:
OP_GTI	src/qcommon/vm_local.h	/^	OP_GTI,$/;"	e	enum:__anon483
OP_GTI	src/tools/asm/q3asm.c	/^	OP_GTI,$/;"	e	enum:__anon264	file:
OP_GTU	src/qcommon/vm_local.h	/^	OP_GTU,$/;"	e	enum:__anon483
OP_GTU	src/tools/asm/q3asm.c	/^	OP_GTU,$/;"	e	enum:__anon264	file:
OP_Ge	src/server/sqlite3.c	10937;"	d	file:
OP_Gosub	src/server/sqlite3.c	10868;"	d	file:
OP_Goto	src/server/sqlite3.c	10867;"	d	file:
OP_Gt	src/server/sqlite3.c	10934;"	d	file:
OP_Halt	src/server/sqlite3.c	10875;"	d	file:
OP_HaltIfNull	src/server/sqlite3.c	10874;"	d	file:
OP_IGNORE	src/qcommon/vm_local.h	/^	OP_IGNORE, $/;"	e	enum:__anon483
OP_IGNORE	src/tools/asm/q3asm.c	/^	OP_IGNORE, $/;"	e	enum:__anon264	file:
OP_IdxDelete	src/server/sqlite3.c	10965;"	d	file:
OP_IdxGE	src/server/sqlite3.c	10971;"	d	file:
OP_IdxGT	src/server/sqlite3.c	10969;"	d	file:
OP_IdxInsert	src/server/sqlite3.c	10964;"	d	file:
OP_IdxLE	src/server/sqlite3.c	10968;"	d	file:
OP_IdxLT	src/server/sqlite3.c	10970;"	d	file:
OP_IdxRowid	src/server/sqlite3.c	10967;"	d	file:
OP_If	src/server/sqlite3.c	10899;"	d	file:
OP_IfNot	src/server/sqlite3.c	10900;"	d	file:
OP_IfNotZero	src/server/sqlite3.c	10994;"	d	file:
OP_IfPos	src/server/sqlite3.c	10992;"	d	file:
OP_IncrVacuum	src/server/sqlite3.c	11000;"	d	file:
OP_Init	src/server/sqlite3.c	11012;"	d	file:
OP_InitCoroutine	src/server/sqlite3.c	10870;"	d	file:
OP_Insert	src/server/sqlite3.c	10929;"	d	file:
OP_InsertInt	src/server/sqlite3.c	10938;"	d	file:
OP_Int64	src/server/sqlite3.c	10877;"	d	file:
OP_IntCopy	src/server/sqlite3.c	10886;"	d	file:
OP_Integer	src/server/sqlite3.c	10876;"	d	file:
OP_IntegrityCk	src/server/sqlite3.c	10982;"	d	file:
OP_IsNull	src/server/sqlite3.c	10930;"	d	file:
OP_JUMP	src/qcommon/vm_local.h	/^	OP_JUMP,$/;"	e	enum:__anon483
OP_JUMP	src/tools/asm/q3asm.c	/^	OP_JUMP,$/;"	e	enum:__anon264	file:
OP_JournalMode	src/server/sqlite3.c	10863;"	d	file:
OP_Jump	src/server/sqlite3.c	10897;"	d	file:
OP_JumpZeroIncr	src/server/sqlite3.c	10996;"	d	file:
OP_LEAVE	src/qcommon/vm_local.h	/^	OP_LEAVE,$/;"	e	enum:__anon483
OP_LEAVE	src/tools/asm/q3asm.c	/^	OP_LEAVE,$/;"	e	enum:__anon264	file:
OP_LEF	src/qcommon/vm_local.h	/^	OP_LEF,$/;"	e	enum:__anon483
OP_LEF	src/tools/asm/q3asm.c	/^	OP_LEF,$/;"	e	enum:__anon264	file:
OP_LEI	src/qcommon/vm_local.h	/^	OP_LEI,$/;"	e	enum:__anon483
OP_LEI	src/tools/asm/q3asm.c	/^	OP_LEI,$/;"	e	enum:__anon264	file:
OP_LEU	src/qcommon/vm_local.h	/^	OP_LEU,$/;"	e	enum:__anon483
OP_LEU	src/tools/asm/q3asm.c	/^	OP_LEU,$/;"	e	enum:__anon264	file:
OP_LOAD1	src/qcommon/vm_local.h	/^	OP_LOAD1,$/;"	e	enum:__anon483
OP_LOAD1	src/tools/asm/q3asm.c	/^	OP_LOAD1,$/;"	e	enum:__anon264	file:
OP_LOAD2	src/qcommon/vm_local.h	/^	OP_LOAD2,$/;"	e	enum:__anon483
OP_LOAD2	src/tools/asm/q3asm.c	/^	OP_LOAD2,$/;"	e	enum:__anon264	file:
OP_LOAD4	src/qcommon/vm_local.h	/^	OP_LOAD4,$/;"	e	enum:__anon483
OP_LOAD4	src/tools/asm/q3asm.c	/^	OP_LOAD4,$/;"	e	enum:__anon264	file:
OP_LOCAL	src/qcommon/vm_local.h	/^	OP_LOCAL,$/;"	e	enum:__anon483
OP_LOCAL	src/tools/asm/q3asm.c	/^	OP_LOCAL,$/;"	e	enum:__anon264	file:
OP_LSH	src/qcommon/vm_local.h	/^	OP_LSH,$/;"	e	enum:__anon483
OP_LSH	src/tools/asm/q3asm.c	/^	OP_LSH,$/;"	e	enum:__anon264	file:
OP_LTF	src/qcommon/vm_local.h	/^	OP_LTF,$/;"	e	enum:__anon483
OP_LTF	src/tools/asm/q3asm.c	/^	OP_LTF,$/;"	e	enum:__anon264	file:
OP_LTI	src/qcommon/vm_local.h	/^	OP_LTI,$/;"	e	enum:__anon483
OP_LTI	src/tools/asm/q3asm.c	/^	OP_LTI,$/;"	e	enum:__anon264	file:
OP_LTU	src/qcommon/vm_local.h	/^	OP_LTU,$/;"	e	enum:__anon483
OP_LTU	src/tools/asm/q3asm.c	/^	OP_LTU,$/;"	e	enum:__anon264	file:
OP_Last	src/server/sqlite3.c	10959;"	d	file:
OP_Le	src/server/sqlite3.c	10935;"	d	file:
OP_LoadAnalysis	src/server/sqlite3.c	10978;"	d	file:
OP_Lt	src/server/sqlite3.c	10936;"	d	file:
OP_MASK	src/qcommon/vm_powerpc_asm.c	542;"	d	file:
OP_MASK	src/qcommon/vm_sparc.c	78;"	d	file:
OP_MODI	src/qcommon/vm_local.h	/^	OP_MODI,$/;"	e	enum:__anon483
OP_MODI	src/tools/asm/q3asm.c	/^	OP_MODI,$/;"	e	enum:__anon264	file:
OP_MODU	src/qcommon/vm_local.h	/^	OP_MODU,$/;"	e	enum:__anon483
OP_MODU	src/tools/asm/q3asm.c	/^	OP_MODU,$/;"	e	enum:__anon264	file:
OP_MULF	src/qcommon/vm_local.h	/^	OP_MULF,$/;"	e	enum:__anon483
OP_MULF	src/tools/asm/q3asm.c	/^	OP_MULF,$/;"	e	enum:__anon264	file:
OP_MULI	src/qcommon/vm_local.h	/^	OP_MULI,$/;"	e	enum:__anon483
OP_MULI	src/tools/asm/q3asm.c	/^	OP_MULI,$/;"	e	enum:__anon264	file:
OP_MULU	src/qcommon/vm_local.h	/^	OP_MULU,$/;"	e	enum:__anon483
OP_MULU	src/tools/asm/q3asm.c	/^	OP_MULU,$/;"	e	enum:__anon264	file:
OP_MakeRecord	src/server/sqlite3.c	10903;"	d	file:
OP_MaxPgcnt	src/server/sqlite3.c	11011;"	d	file:
OP_MemMax	src/server/sqlite3.c	10991;"	d	file:
OP_Move	src/server/sqlite3.c	10883;"	d	file:
OP_Multiply	src/server/sqlite3.c	10945;"	d	file:
OP_MustBeInt	src/server/sqlite3.c	10892;"	d	file:
OP_NE	src/qcommon/vm_local.h	/^	OP_NE,$/;"	e	enum:__anon483
OP_NE	src/tools/asm/q3asm.c	/^	OP_NE,$/;"	e	enum:__anon264	file:
OP_NEF	src/qcommon/vm_local.h	/^	OP_NEF,$/;"	e	enum:__anon483
OP_NEF	src/tools/asm/q3asm.c	/^	OP_NEF,$/;"	e	enum:__anon264	file:
OP_NEGF	src/qcommon/vm_local.h	/^	OP_NEGF,$/;"	e	enum:__anon483
OP_NEGF	src/tools/asm/q3asm.c	/^	OP_NEGF,$/;"	e	enum:__anon264	file:
OP_NEGI	src/qcommon/vm_local.h	/^	OP_NEGI,$/;"	e	enum:__anon483
OP_NEGI	src/tools/asm/q3asm.c	/^	OP_NEGI,$/;"	e	enum:__anon264	file:
OP_Ne	src/server/sqlite3.c	10932;"	d	file:
OP_NewRowid	src/server/sqlite3.c	10928;"	d	file:
OP_Next	src/server/sqlite3.c	10861;"	d	file:
OP_NextIfOpen	src/server/sqlite3.c	10859;"	d	file:
OP_NoConflict	src/server/sqlite3.c	10921;"	d	file:
OP_Noop	src/server/sqlite3.c	11014;"	d	file:
OP_Not	src/server/sqlite3.c	10873;"	d	file:
OP_NotExists	src/server/sqlite3.c	10924;"	d	file:
OP_NotFound	src/server/sqlite3.c	10922;"	d	file:
OP_NotNull	src/server/sqlite3.c	10931;"	d	file:
OP_Null	src/server/sqlite3.c	10879;"	d	file:
OP_NullRow	src/server/sqlite3.c	10958;"	d	file:
OP_OffsetLimit	src/server/sqlite3.c	10993;"	d	file:
OP_Once	src/server/sqlite3.c	10898;"	d	file:
OP_OpenAutoindex	src/server/sqlite3.c	10910;"	d	file:
OP_OpenEphemeral	src/server/sqlite3.c	10911;"	d	file:
OP_OpenPseudo	src/server/sqlite3.c	10914;"	d	file:
OP_OpenRead	src/server/sqlite3.c	10908;"	d	file:
OP_OpenWrite	src/server/sqlite3.c	10909;"	d	file:
OP_Or	src/server/sqlite3.c	10925;"	d	file:
OP_POP	src/qcommon/vm_local.h	/^	OP_POP,$/;"	e	enum:__anon483
OP_POP	src/tools/asm/q3asm.c	/^	OP_POP,$/;"	e	enum:__anon264	file:
OP_PUSH	src/qcommon/vm_local.h	/^	OP_PUSH,$/;"	e	enum:__anon483
OP_PUSH	src/tools/asm/q3asm.c	/^	OP_PUSH,$/;"	e	enum:__anon264	file:
OP_Pagecount	src/server/sqlite3.c	11010;"	d	file:
OP_Param	src/server/sqlite3.c	10988;"	d	file:
OP_ParseSchema	src/server/sqlite3.c	10977;"	d	file:
OP_Permutation	src/server/sqlite3.c	10895;"	d	file:
OP_Prev	src/server/sqlite3.c	10860;"	d	file:
OP_PrevIfOpen	src/server/sqlite3.c	10858;"	d	file:
OP_Program	src/server/sqlite3.c	10986;"	d	file:
OP_RSHI	src/qcommon/vm_local.h	/^	OP_RSHI,$/;"	e	enum:__anon483
OP_RSHI	src/tools/asm/q3asm.c	/^	OP_RSHI,$/;"	e	enum:__anon264	file:
OP_RSHU	src/qcommon/vm_local.h	/^	OP_RSHU,$/;"	e	enum:__anon483
OP_RSHU	src/tools/asm/q3asm.c	/^	OP_RSHU,$/;"	e	enum:__anon264	file:
OP_ReadCookie	src/server/sqlite3.c	10905;"	d	file:
OP_Real	src/server/sqlite3.c	10987;"	d	file:
OP_RealAffinity	src/server/sqlite3.c	10893;"	d	file:
OP_Remainder	src/server/sqlite3.c	10947;"	d	file:
OP_ReopenIdx	src/server/sqlite3.c	10907;"	d	file:
OP_ResetCount	src/server/sqlite3.c	10952;"	d	file:
OP_ResetSorter	src/server/sqlite3.c	10974;"	d	file:
OP_ResultRow	src/server/sqlite3.c	10887;"	d	file:
OP_Return	src/server/sqlite3.c	10869;"	d	file:
OP_Rewind	src/server/sqlite3.c	10962;"	d	file:
OP_RowData	src/server/sqlite3.c	10956;"	d	file:
OP_RowKey	src/server/sqlite3.c	10955;"	d	file:
OP_RowSetAdd	src/server/sqlite3.c	10983;"	d	file:
OP_RowSetRead	src/server/sqlite3.c	10984;"	d	file:
OP_RowSetTest	src/server/sqlite3.c	10985;"	d	file:
OP_Rowid	src/server/sqlite3.c	10957;"	d	file:
OP_SCopy	src/server/sqlite3.c	10885;"	d	file:
OP_SEX16	src/qcommon/vm_local.h	/^	OP_SEX16,$/;"	e	enum:__anon483
OP_SEX16	src/tools/asm/q3asm.c	/^	OP_SEX16,$/;"	e	enum:__anon264	file:
OP_SEX8	src/qcommon/vm_local.h	/^	OP_SEX8,$/;"	e	enum:__anon483
OP_SEX8	src/tools/asm/q3asm.c	/^	OP_SEX8,$/;"	e	enum:__anon264	file:
OP_STORE1	src/qcommon/vm_local.h	/^	OP_STORE1,$/;"	e	enum:__anon483
OP_STORE1	src/tools/asm/q3asm.c	/^	OP_STORE1,$/;"	e	enum:__anon264	file:
OP_STORE2	src/qcommon/vm_local.h	/^	OP_STORE2,$/;"	e	enum:__anon483
OP_STORE2	src/tools/asm/q3asm.c	/^	OP_STORE2,$/;"	e	enum:__anon264	file:
OP_STORE4	src/qcommon/vm_local.h	/^	OP_STORE4,				\/\/ *(stack[top-1]) = stack[top]$/;"	e	enum:__anon483
OP_STORE4	src/tools/asm/q3asm.c	/^	OP_STORE4,				\/\/ *(stack[top-1]) = stack[yop$/;"	e	enum:__anon264	file:
OP_SUB	src/qcommon/vm_local.h	/^	OP_SUB,$/;"	e	enum:__anon483
OP_SUB	src/tools/asm/q3asm.c	/^	OP_SUB,$/;"	e	enum:__anon264	file:
OP_SUBF	src/qcommon/vm_local.h	/^	OP_SUBF,$/;"	e	enum:__anon483
OP_SUBF	src/tools/asm/q3asm.c	/^	OP_SUBF,$/;"	e	enum:__anon264	file:
OP_Savepoint	src/server/sqlite3.c	10854;"	d	file:
OP_Seek	src/server/sqlite3.c	10966;"	d	file:
OP_SeekGE	src/server/sqlite3.c	10919;"	d	file:
OP_SeekGT	src/server/sqlite3.c	10920;"	d	file:
OP_SeekLE	src/server/sqlite3.c	10918;"	d	file:
OP_SeekLT	src/server/sqlite3.c	10917;"	d	file:
OP_Sequence	src/server/sqlite3.c	10927;"	d	file:
OP_SequenceTest	src/server/sqlite3.c	10913;"	d	file:
OP_SetCookie	src/server/sqlite3.c	10906;"	d	file:
OP_ShiftLeft	src/server/sqlite3.c	10941;"	d	file:
OP_ShiftRight	src/server/sqlite3.c	10942;"	d	file:
OP_SoftNull	src/server/sqlite3.c	10880;"	d	file:
OP_Sort	src/server/sqlite3.c	10961;"	d	file:
OP_SorterCompare	src/server/sqlite3.c	10953;"	d	file:
OP_SorterData	src/server/sqlite3.c	10954;"	d	file:
OP_SorterInsert	src/server/sqlite3.c	10963;"	d	file:
OP_SorterNext	src/server/sqlite3.c	10857;"	d	file:
OP_SorterOpen	src/server/sqlite3.c	10912;"	d	file:
OP_SorterSort	src/server/sqlite3.c	10960;"	d	file:
OP_String	src/server/sqlite3.c	10878;"	d	file:
OP_String8	src/server/sqlite3.c	10951;"	d	file:
OP_Subtract	src/server/sqlite3.c	10944;"	d	file:
OP_TableLock	src/server/sqlite3.c	11002;"	d	file:
OP_Transaction	src/server/sqlite3.c	10856;"	d	file:
OP_UNDEF	src/qcommon/vm_local.h	/^	OP_UNDEF, $/;"	e	enum:__anon483
OP_UNDEF	src/tools/asm/q3asm.c	/^	OP_UNDEF, $/;"	e	enum:__anon264	file:
OP_VBegin	src/server/sqlite3.c	11003;"	d	file:
OP_VColumn	src/server/sqlite3.c	11007;"	d	file:
OP_VCreate	src/server/sqlite3.c	11004;"	d	file:
OP_VDestroy	src/server/sqlite3.c	11005;"	d	file:
OP_VFilter	src/server/sqlite3.c	10865;"	d	file:
OP_VNext	src/server/sqlite3.c	11008;"	d	file:
OP_VOpen	src/server/sqlite3.c	11006;"	d	file:
OP_VRename	src/server/sqlite3.c	11009;"	d	file:
OP_VUpdate	src/server/sqlite3.c	10866;"	d	file:
OP_Vacuum	src/server/sqlite3.c	10864;"	d	file:
OP_Variable	src/server/sqlite3.c	10882;"	d	file:
OP_Yield	src/server/sqlite3.c	10872;"	d	file:
OR	src/qcommon/vm_sparc.c	/^	ORI, OR,$/;"	e	enum:sparc_iname	file:
OR	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
OR	src/tools/lcc/src/c.h	/^	OR=40<<4,$/;"	e	enum:__anon305
OR1	src/tools/lcc/cpp/lex.c	/^	CIRC1, GT1, GT2, LT1, LT2, OR1, AND1, ASG1, NOT1, DOTS1,$/;"	e	enum:state	file:
ORI	src/qcommon/vm_sparc.c	/^	ORI, OR,$/;"	e	enum:sparc_iname	file:
ORN	src/qcommon/vm_sparc.c	/^	ORNI, ORN,$/;"	e	enum:sparc_iname	file:
ORNI	src/qcommon/vm_sparc.c	/^	ORNI, ORN,$/;"	e	enum:sparc_iname	file:
OSTRACE	src/server/sqlite3.c	9472;"	d	file:
OSTRACE	src/server/sqlite3.c	9475;"	d	file:
OSX32	src/qcommon/vm_powerpc.c	134;"	d	file:
OSX64	src/qcommon/vm_powerpc.c	135;"	d	file:
OS_STRING	src/qcommon/q_platform.h	120;"	d
OS_STRING	src/qcommon/q_platform.h	122;"	d
OS_STRING	src/qcommon/q_platform.h	150;"	d
OS_STRING	src/qcommon/q_platform.h	178;"	d
OS_STRING	src/qcommon/q_platform.h	180;"	d
OS_STRING	src/qcommon/q_platform.h	241;"	d
OS_STRING	src/qcommon/q_platform.h	243;"	d
OS_STRING	src/qcommon/q_platform.h	245;"	d
OS_STRING	src/qcommon/q_platform.h	278;"	d
OS_STRING	src/qcommon/q_platform.h	302;"	d
OS_STRING	src/qcommon/q_platform.h	318;"	d
OS_STRING	src/qcommon/q_platform.h	93;"	d
OS_STRING	src/qcommon/q_platform.h	95;"	d
OS_VXWORKS	src/server/sqlite3.c	123;"	d	file:
OS_VXWORKS	src/server/sqlite3.c	131;"	d	file:
OTHER	src/tools/lcc/src/lex.c	/^       DIGIT=010, HEX=020,    OTHER=040 };$/;"	e	enum:__anon281	file:
OUT	GNUmakefile	/^OUT=out$/;"	m
OUTS	src/tools/lcc/cpp/cpp.c	10;"	d	file:
OVERMIND_ATTACK_PERIOD	src/game/g_buildable.c	1085;"	d	file:
OVERMIND_ATTACK_RANGE	src/game/tremulous.h	334;"	d
OVERMIND_ATTACK_REPEAT	src/game/tremulous.h	335;"	d
OVERMIND_BP	src/game/tremulous.h	327;"	d
OVERMIND_BT	src/game/tremulous.h	328;"	d
OVERMIND_CREEPSIZE	src/game/tremulous.h	333;"	d
OVERMIND_DYING_PERIOD	src/game/g_buildable.c	1086;"	d	file:
OVERMIND_HEALTH	src/game/tremulous.h	329;"	d
OVERMIND_REGEN	src/game/tremulous.h	330;"	d
OVERMIND_SPAWNS_PERIOD	src/game/g_buildable.c	1087;"	d	file:
OVERMIND_SPLASHDAMAGE	src/game/tremulous.h	331;"	d
OVERMIND_SPLASHRADIUS	src/game/tremulous.h	332;"	d
OVERMIND_VALUE	src/game/tremulous.h	336;"	d
OV_EXCLUDE_STATIC_CALLBACKS	src/client/snd_codec_ogg.c	35;"	d	file:
O_BINARY	src/server/sqlite3.c	27808;"	d	file:
O_LARGEFILE	src/server/sqlite3.c	27798;"	d	file:
O_LARGEFILE	src/server/sqlite3.c	27801;"	d	file:
O_LARGEFILE	src/server/sqlite3.c	27802;"	d	file:
O_NOFOLLOW	src/server/sqlite3.c	27805;"	d	file:
OffsetByteToFloat	src/renderergl2/tr_extramath.h	54;"	d
OnSameTeam	src/game/g_team.c	/^qboolean OnSameTeam( gentity_t *ent1, gentity_t *ent2 )$/;"	f
Op	src/server/sqlite3.c	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp	file:
OpHelp	src/server/sqlite3.c	27137;"	d	file:
OpHelp	src/server/sqlite3.c	27139;"	d	file:
OpPrec	src/ui/ui_shared.c	/^static ID_INLINE int OpPrec( char op )$/;"	f	file:
OpenALLib	src/client/qal.c	/^static void *OpenALLib = NULL;$/;"	v	file:
OpenCounter	src/server/sqlite3.c	21543;"	d	file:
OpenCounter	src/server/sqlite3.c	21545;"	d	file:
OpenCounter	src/server/sqlite3.c	27784;"	d	file:
OpenCounter	src/server/sqlite3.c	27786;"	d	file:
OpenCounter	src/server/sqlite3.c	35304;"	d	file:
OpenCounter	src/server/sqlite3.c	35306;"	d	file:
OptimizationDisabled	src/server/sqlite3.c	12341;"	d	file:
OptimizationDisabled	src/server/sqlite3.c	12344;"	d	file:
OptimizationEnabled	src/server/sqlite3.c	12342;"	d	file:
OptimizationEnabled	src/server/sqlite3.c	12345;"	d	file:
P	src/tools/lcc/src/c.h	/^	P=POINTER,$/;"	e	enum:__anon286
P1	src/game/bg_lib.c	/^P1      =  1.6666667163e-01, \/* 0x3e2aaaab *\/$/;"	v	file:
P2	src/game/bg_lib.c	/^P2      = -2.7777778450e-03, \/* 0xbb360b61 *\/$/;"	v	file:
P3	src/game/bg_lib.c	/^P3      =  6.6137559770e-05, \/* 0x388ab355 *\/$/;"	v	file:
P4	src/game/bg_lib.c	/^P4      = -1.6533901999e-06, \/* 0xb5ddea0e *\/$/;"	v	file:
P4_ADVANCE	src/server/sqlite3.c	10810;"	d	file:
P4_COLLSEQ	src/server/sqlite3.c	10797;"	d	file:
P4_DYNAMIC	src/server/sqlite3.c	10795;"	d	file:
P4_EXPR	src/server/sqlite3.c	10800;"	d	file:
P4_FUNCCTX	src/server/sqlite3.c	10811;"	d	file:
P4_FUNCDEF	src/server/sqlite3.c	10798;"	d	file:
P4_INT32	src/server/sqlite3.c	10807;"	d	file:
P4_INT64	src/server/sqlite3.c	10806;"	d	file:
P4_INTARRAY	src/server/sqlite3.c	10808;"	d	file:
P4_KEYINFO	src/server/sqlite3.c	10799;"	d	file:
P4_MEM	src/server/sqlite3.c	10801;"	d	file:
P4_MPRINTF	src/server/sqlite3.c	10804;"	d	file:
P4_NOTUSED	src/server/sqlite3.c	10794;"	d	file:
P4_REAL	src/server/sqlite3.c	10805;"	d	file:
P4_STATIC	src/server/sqlite3.c	10796;"	d	file:
P4_SUBPROGRAM	src/server/sqlite3.c	10809;"	d	file:
P4_TRANSIENT	src/server/sqlite3.c	10802;"	d	file:
P4_VTAB	src/server/sqlite3.c	10803;"	d	file:
P5	src/game/bg_lib.c	/^P5      =  4.1381369442e-08, \/* 0x3331bb4c *\/$/;"	v	file:
P5_ConstraintCheck	src/server/sqlite3.c	10816;"	d	file:
P5_ConstraintFK	src/server/sqlite3.c	10817;"	d	file:
P5_ConstraintNotNull	src/server/sqlite3.c	10814;"	d	file:
P5_ConstraintUnique	src/server/sqlite3.c	10815;"	d	file:
PACKET_BACKUP	src/qcommon/qcommon.h	135;"	d
PACKET_HEADER	src/qcommon/net_chan.c	54;"	d	file:
PACKET_MASK	src/qcommon/qcommon.h	137;"	d
PAD	src/qcommon/q_shared.h	181;"	d
PADLEN	src/qcommon/q_shared.h	182;"	d
PADP	src/qcommon/q_shared.h	184;"	d
PAGERID	src/server/sqlite3.c	44127;"	d	file:
PAGERTRACE	src/server/sqlite3.c	44116;"	d	file:
PAGER_CACHESPILL	src/server/sqlite3.c	11297;"	d	file:
PAGER_CKPT_FULLFSYNC	src/server/sqlite3.c	11296;"	d	file:
PAGER_ERROR	src/server/sqlite3.c	44353;"	d	file:
PAGER_FLAGS_MASK	src/server/sqlite3.c	11298;"	d	file:
PAGER_FULLFSYNC	src/server/sqlite3.c	11295;"	d	file:
PAGER_GET_NOCONTENT	src/server/sqlite3.c	11284;"	d	file:
PAGER_GET_READONLY	src/server/sqlite3.c	11285;"	d	file:
PAGER_INCR	src/server/sqlite3.c	44724;"	d	file:
PAGER_INCR	src/server/sqlite3.c	44726;"	d	file:
PAGER_JOURNALMODE_DELETE	src/server/sqlite3.c	11274;"	d	file:
PAGER_JOURNALMODE_MEMORY	src/server/sqlite3.c	11278;"	d	file:
PAGER_JOURNALMODE_OFF	src/server/sqlite3.c	11276;"	d	file:
PAGER_JOURNALMODE_PERSIST	src/server/sqlite3.c	11275;"	d	file:
PAGER_JOURNALMODE_QUERY	src/server/sqlite3.c	11273;"	d	file:
PAGER_JOURNALMODE_TRUNCATE	src/server/sqlite3.c	11277;"	d	file:
PAGER_JOURNALMODE_WAL	src/server/sqlite3.c	11279;"	d	file:
PAGER_LOCKINGMODE_EXCLUSIVE	src/server/sqlite3.c	11268;"	d	file:
PAGER_LOCKINGMODE_NORMAL	src/server/sqlite3.c	11267;"	d	file:
PAGER_LOCKINGMODE_QUERY	src/server/sqlite3.c	11266;"	d	file:
PAGER_MAX_PGNO	src/server/sqlite3.c	44795;"	d	file:
PAGER_MEMORY	src/server/sqlite3.c	11261;"	d	file:
PAGER_MJ_PGNO	src/server/sqlite3.c	11253;"	d	file:
PAGER_OMIT_JOURNAL	src/server/sqlite3.c	11260;"	d	file:
PAGER_OPEN	src/server/sqlite3.c	44347;"	d	file:
PAGER_READER	src/server/sqlite3.c	44348;"	d	file:
PAGER_STAT_HIT	src/server/sqlite3.c	44711;"	d	file:
PAGER_STAT_MISS	src/server/sqlite3.c	44712;"	d	file:
PAGER_STAT_WRITE	src/server/sqlite3.c	44713;"	d	file:
PAGER_SYNCHRONOUS_EXTRA	src/server/sqlite3.c	11293;"	d	file:
PAGER_SYNCHRONOUS_FULL	src/server/sqlite3.c	11292;"	d	file:
PAGER_SYNCHRONOUS_MASK	src/server/sqlite3.c	11294;"	d	file:
PAGER_SYNCHRONOUS_NORMAL	src/server/sqlite3.c	11291;"	d	file:
PAGER_SYNCHRONOUS_OFF	src/server/sqlite3.c	11290;"	d	file:
PAGER_WRITER_CACHEMOD	src/server/sqlite3.c	44350;"	d	file:
PAGER_WRITER_DBMOD	src/server/sqlite3.c	44351;"	d	file:
PAGER_WRITER_FINISHED	src/server/sqlite3.c	44352;"	d	file:
PAGER_WRITER_LOCKED	src/server/sqlite3.c	44349;"	d	file:
PAINBLEND_BORDER	src/cgame/cg_draw.c	3651;"	d	file:
PAINSAW_DAMAGE	src/game/tremulous.h	395;"	d
PAINSAW_HEIGHT	src/game/tremulous.h	398;"	d
PAINSAW_K_SCALE	src/game/tremulous.h	394;"	d
PAINSAW_PRICE	src/game/tremulous.h	392;"	d
PAINSAW_RANGE	src/game/tremulous.h	396;"	d
PAINSAW_REPEAT	src/game/tremulous.h	393;"	d
PAINSAW_WIDTH	src/game/tremulous.h	397;"	d
PAINTBUFFER_SIZE	src/client/snd_local.h	30;"	d
PAIN_TWITCH_TIME	src/cgame/cg_local.h	49;"	d
PARAM	src/tools/lcc/src/c.h	/^enum { CONSTANTS=1, LABELS, GLOBAL, PARAM, LOCAL };$/;"	e	enum:__anon303
PARSE_INTERVAL	src/master/master.c	558;"	d	file:
PARTICLES_INFINITE	src/cgame/cg_local.h	196;"	d
PARTICLES_SAME_AS_INITIAL	src/cgame/cg_local.h	197;"	d
PARTLY_WITHIN	src/server/sqlite3.c	8371;"	d	file:
PARTLY_WITHIN	src/server/sqlite3.h	8146;"	d
PASSFLOAT	src/cgame/cg_syscalls.c	/^int PASSFLOAT( float x )$/;"	f
PASSFLOAT	src/game/g_syscalls.c	/^int PASSFLOAT( float x )$/;"	f
PASSFLOAT	src/ui/ui_syscalls.c	/^int PASSFLOAT( float x )$/;"	f
PATCH_STITCHING	src/renderergl1/tr_local.h	1334;"	d
PATCH_STITCHING	src/renderergl2/tr_local.h	2152;"	d
PATHSEPERATOR	src/tools/asm/cmdlib.c	39;"	d	file:
PATH_SEP	src/qcommon/q_platform.h	126;"	d
PATH_SEP	src/qcommon/q_platform.h	152;"	d
PATH_SEP	src/qcommon/q_platform.h	185;"	d
PATH_SEP	src/qcommon/q_platform.h	249;"	d
PATH_SEP	src/qcommon/q_platform.h	280;"	d
PATH_SEP	src/qcommon/q_platform.h	304;"	d
PATH_SEP	src/qcommon/q_platform.h	320;"	d
PATH_SEP	src/qcommon/q_platform.h	99;"	d
PCACHE1_MIGHT_USE_GROUP_MUTEX	src/server/sqlite3.c	42319;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	src/server/sqlite3.c	42323;"	d	file:
PCACHE_DIRTYLIST_ADD	src/server/sqlite3.c	41439;"	d	file:
PCACHE_DIRTYLIST_FRONT	src/server/sqlite3.c	41440;"	d	file:
PCACHE_DIRTYLIST_REMOVE	src/server/sqlite3.c	41438;"	d	file:
PCLOUD_ARMOUR_MODIFIER	src/game/tremulous.h	240;"	d
PCLOUD_DISORIENT_DURATION	src/cgame/cg_view.c	538;"	d	file:
PCLOUD_MODIFIER	src/game/tremulous.h	239;"	d
PCLOUD_ROLL_AMPLITUDE	src/cgame/cg_view.c	534;"	d	file:
PCLOUD_ROLL_FREQUENCY	src/cgame/cg_view.c	535;"	d	file:
PCLOUD_ZOOM_AMPLITUDE	src/cgame/cg_view.c	536;"	d	file:
PCLOUD_ZOOM_FREQUENCY	src/cgame/cg_view.c	537;"	d	file:
PCL_ALIEN_BUILDER0	src/game/bg_public.h	/^  PCL_ALIEN_BUILDER0,$/;"	e	enum:__anon345
PCL_ALIEN_BUILDER0_UPG	src/game/bg_public.h	/^  PCL_ALIEN_BUILDER0_UPG,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL0	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL0,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL1	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL1,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL1_UPG	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL1_UPG,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL2	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL2,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL2_UPG	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL2_UPG,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL3	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL3,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL3_UPG	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL3_UPG,$/;"	e	enum:__anon345
PCL_ALIEN_LEVEL4	src/game/bg_public.h	/^  PCL_ALIEN_LEVEL4,$/;"	e	enum:__anon345
PCL_HUMAN	src/game/bg_public.h	/^  PCL_HUMAN,$/;"	e	enum:__anon345
PCL_HUMAN_BSUIT	src/game/bg_public.h	/^  PCL_HUMAN_BSUIT,$/;"	e	enum:__anon345
PCL_NONE	src/game/bg_public.h	/^  PCL_NONE,$/;"	e	enum:__anon345
PCL_NUM_CLASSES	src/game/bg_public.h	/^  PCL_NUM_CLASSES$/;"	e	enum:__anon345
PCM_BUFFER_SIZE	src/client/cl_avi.c	500;"	d	file:
PCT	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
PCT1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
PC_Color_Parse	src/ui/ui_shared.c	/^qboolean PC_Color_Parse( int handle, vec4_t *c )$/;"	f
PC_Expression_Parse	src/ui/ui_shared.c	/^static qboolean PC_Expression_Parse( int handle, float *f )$/;"	f	file:
PC_Float_Parse	src/ui/ui_shared.c	/^qboolean PC_Float_Parse( int handle, float *f )$/;"	f
PC_Int_Parse	src/ui/ui_shared.c	/^qboolean PC_Int_Parse( int handle, int *i )$/;"	f
PC_Rect_Parse	src/ui/ui_shared.c	/^qboolean PC_Rect_Parse( int handle, rectDef_t *r )$/;"	f
PC_Script_Parse	src/ui/ui_shared.c	/^qboolean PC_Script_Parse( int handle, const char **out )$/;"	f
PC_SourceError	src/ui/ui_shared.c	/^__attribute__ ((format (printf, 2, 3))) void PC_SourceError( int handle, char *format, ... )$/;"	f
PC_SourceWarning	src/ui/ui_shared.c	/^__attribute__ ((format (printf, 2, 3))) void PC_SourceWarning( int handle, char *format, ... )$/;"	f
PC_String_Parse	src/ui/ui_shared.c	/^qboolean PC_String_Parse( int handle, const char **out )$/;"	f
PCache	src/server/sqlite3.c	/^struct PCache {$/;"	s	file:
PCache	src/server/sqlite3.c	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache	file:
PCache1	src/server/sqlite3.c	/^struct PCache1 {$/;"	s	file:
PCache1	src/server/sqlite3.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCacheGlobal	src/server/sqlite3.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PEEK_STACK_OP	src/ui/ui_shared.c	511;"	d	file:
PEEK_STACK_OP	src/ui/ui_shared.c	669;"	d	file:
PEEK_STACK_VAL	src/ui/ui_shared.c	512;"	d	file:
PEEK_STACK_VAL	src/ui/ui_shared.c	670;"	d	file:
PENDING_BYTE	src/server/sqlite3.c	11818;"	d	file:
PENDING_BYTE	src/server/sqlite3.c	11820;"	d	file:
PENDING_BYTE_PAGE	src/server/sqlite3.c	55388;"	d	file:
PENDING_LOCK	src/server/sqlite3.c	11759;"	d	file:
PERM	src/tools/lcc/src/c.h	/^enum { PERM=0, FUNC, STMT };$/;"	e	enum:__anon289
PERS_ATTACKER	src/game/bg_public.h	/^  PERS_ATTACKER,        \/\/ clientnum of last damage inflicter$/;"	e	enum:__anon332
PERS_BP	src/game/bg_public.h	/^  PERS_BP,$/;"	e	enum:__anon332
PERS_CREDIT	src/game/bg_public.h	/^  PERS_CREDIT,    \/\/ human credit$/;"	e	enum:__anon332
PERS_HITS	src/game/bg_public.h	/^  PERS_HITS,            \/\/ total points damage inflicted so damage beeps can sound on change$/;"	e	enum:__anon332
PERS_KILLED	src/game/bg_public.h	/^  PERS_KILLED,          \/\/ count of the number of times you died$/;"	e	enum:__anon332
PERS_MARKEDBP	src/game/bg_public.h	/^  PERS_MARKEDBP$/;"	e	enum:__anon332
PERS_NEWWEAPON	src/game/bg_public.h	/^  PERS_NEWWEAPON,  \/\/ weapon to switch to$/;"	e	enum:__anon332
PERS_QUEUEPOS	src/game/bg_public.h	/^  PERS_QUEUEPOS,  \/\/ position in the spawn queue$/;"	e	enum:__anon332
PERS_SCORE	src/game/bg_public.h	/^  PERS_SCORE,           \/\/ !!! MUST NOT CHANGE, SERVER AND GAME BOTH REFERENCE !!!$/;"	e	enum:__anon332
PERS_SCORE	src/server/server.h	32;"	d
PERS_SPAWNS	src/game/bg_public.h	/^  PERS_SPAWNS,          \/\/ how many spawns your team has$/;"	e	enum:__anon332
PERS_SPAWN_COUNT	src/game/bg_public.h	/^  PERS_SPAWN_COUNT,     \/\/ incremented every respawn$/;"	e	enum:__anon332
PERS_SPECSTATE	src/game/bg_public.h	/^  PERS_SPECSTATE,$/;"	e	enum:__anon332
PERS_STATE	src/game/bg_public.h	/^  PERS_STATE,$/;"	e	enum:__anon332
PGHDR_CLEAN	src/server/sqlite3.c	11478;"	d	file:
PGHDR_DIRTY	src/server/sqlite3.c	11479;"	d	file:
PGHDR_DONT_WRITE	src/server/sqlite3.c	11484;"	d	file:
PGHDR_MMAP	src/server/sqlite3.c	11485;"	d	file:
PGHDR_NEED_READ	src/server/sqlite3.c	11483;"	d	file:
PGHDR_NEED_SYNC	src/server/sqlite3.c	11481;"	d	file:
PGHDR_WAL_APPEND	src/server/sqlite3.c	11487;"	d	file:
PGHDR_WRITEABLE	src/server/sqlite3.c	11480;"	d	file:
PGroup	src/server/sqlite3.c	/^struct PGroup {$/;"	s	file:
PGroup	src/server/sqlite3.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PHYSICS_TIME	src/game/g_physics.c	99;"	d	file:
PING_FRAMES	src/cgame/cg_draw.c	2043;"	d	file:
PITCH	src/qcommon/q_shared.h	220;"	d
PK3_SEEK_BUFFER_SIZE	src/qcommon/files.c	1607;"	d	file:
PLANE_NON_AXIAL	src/qcommon/q_shared.h	1089;"	d
PLANE_NON_AXIAL	src/tools/asm/mathlib.h	57;"	d
PLANE_TRI_EPSILON	src/qcommon/cm_patch.h	100;"	d
PLANE_X	src/qcommon/q_shared.h	1086;"	d
PLANE_X	src/tools/asm/mathlib.h	54;"	d
PLANE_Y	src/qcommon/q_shared.h	1087;"	d
PLANE_Y	src/tools/asm/mathlib.h	55;"	d
PLANE_Z	src/qcommon/q_shared.h	1088;"	d
PLANE_Z	src/tools/asm/mathlib.h	56;"	d
PLATFORM	GNUmakefile	/^  PLATFORM=mingw32$/;"	m
PLATFORM	GNUmakefile	/^PLATFORM=$(COMPILE_PLATFORM)$/;"	m
PLATFORM	src/master/Makefile	/^	PLATFORM=$(shell uname|sed -e s\/_.*\/\/|tr '[:upper:]' '[:lower:]')$/;"	m
PLATFORM_STRING	src/qcommon/q_platform.h	399;"	d
PLATFORM_STRING	src/qcommon/q_platform.h	401;"	d
PLAYER_COUNT_MOD	src/game/g_main.c	1214;"	d	file:
PLAYMAP_ERROR_LAYOUT_NOT_FOUND	src/game/g_playmap.h	/^  PLAYMAP_ERROR_LAYOUT_NOT_FOUND,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_ALREADY_IN_POOL	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_ALREADY_IN_POOL,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_ALREADY_IN_QUEUE	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_ALREADY_IN_QUEUE,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_NOT_FOUND	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_NOT_FOUND,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_NOT_IN_POOL	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_NOT_IN_POOL,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_NOT_IN_QUEUE	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_NOT_IN_QUEUE,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_POOL_EMPTY	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_POOL_EMPTY,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_POOL_FULL	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_POOL_FULL,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_QUEUE_EMPTY	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_QUEUE_EMPTY,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_MAP_QUEUE_FULL	src/game/g_playmap.h	/^  PLAYMAP_ERROR_MAP_QUEUE_FULL,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_NONE	src/game/g_playmap.h	/^  PLAYMAP_ERROR_NONE,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_NO_POOL_CONFIG	src/game/g_playmap.h	/^  PLAYMAP_ERROR_NO_POOL_CONFIG,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_NO_QUEUE_CONFIG	src/game/g_playmap.h	/^  PLAYMAP_ERROR_NO_QUEUE_CONFIG,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_POOL_CONFIG_UNREADABLE	src/game/g_playmap.h	/^  PLAYMAP_ERROR_POOL_CONFIG_UNREADABLE,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_QUEUE_CONFIG_UNREADABLE	src/game/g_playmap.h	/^  PLAYMAP_ERROR_QUEUE_CONFIG_UNREADABLE,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_UNKNOWN	src/game/g_playmap.h	/^  PLAYMAP_ERROR_UNKNOWN,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_ERROR_USER_ALREADY_IN_QUEUE	src/game/g_playmap.h	/^  PLAYMAP_ERROR_USER_ALREADY_IN_QUEUE,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_FLAG_DPUNT	src/game/g_playmap.h	/^  PLAYMAP_FLAG_DPUNT, \/\/ Dretch Punt$/;"	e	enum:__anon369
PLAYMAP_FLAG_FBF	src/game/g_playmap.h	/^  PLAYMAP_FLAG_FBF,   \/\/ Friendly Buildable Fire$/;"	e	enum:__anon369
PLAYMAP_FLAG_FF	src/game/g_playmap.h	/^  PLAYMAP_FLAG_FF,    \/\/ Friendly Fire$/;"	e	enum:__anon369
PLAYMAP_FLAG_LGRAV	src/game/g_playmap.h	/^  PLAYMAP_FLAG_LGRAV, \/\/ Low Gravity$/;"	e	enum:__anon369
PLAYMAP_FLAG_NONE	src/game/g_playmap.h	/^  PLAYMAP_FLAG_NONE = 0,$/;"	e	enum:__anon369
PLAYMAP_FLAG_PORTAL	src/game/g_playmap.h	/^  PLAYMAP_FLAG_PORTAL,\/\/ Portal Gun$/;"	e	enum:__anon369
PLAYMAP_FLAG_SD	src/game/g_playmap.h	/^  PLAYMAP_FLAG_SD,    \/\/ Sudden Death$/;"	e	enum:__anon369
PLAYMAP_FLAG_UBP	src/game/g_playmap.h	/^  PLAYMAP_FLAG_UBP,   \/\/ Unlimited BP$/;"	e	enum:__anon369
PLAYMAP_INACTIVE	src/game/g_playmap.h	31;"	d
PLAYMAP_MAPTYPE_ATCS	src/game/g_playmap.h	39;"	d
PLAYMAP_MAPTYPE_MISSION	src/game/g_playmap.h	40;"	d
PLAYMAP_MAPTYPE_NONE	src/game/g_playmap.h	38;"	d
PLAYMAP_NUM_ERRORS	src/game/g_playmap.h	/^  PLAYMAP_NUM_ERRORS,$/;"	e	enum:playMapErrorCode_s
PLAYMAP_NUM_FLAGS	src/game/g_playmap.h	/^  PLAYMAP_NUM_FLAGS$/;"	e	enum:__anon369
PLAYMAP_QUEUE_ADD	src/game/g_playmap.h	99;"	d
PLAYMAP_QUEUE_IS_EMPTY	src/game/g_playmap.h	102;"	d
PLAYMAP_QUEUE_IS_FULL	src/game/g_playmap.h	103;"	d
PLAYMAP_QUEUE_MINUS1	src/game/g_playmap.h	101;"	d
PLAYMAP_QUEUE_PLUS1	src/game/g_playmap.h	100;"	d
PLUS	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
PLUS1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
PMD_LINEAR	src/cgame/cg_local.h	/^  PMD_LINEAR,$/;"	e	enum:__anon238
PMD_POINT	src/cgame/cg_local.h	/^  PMD_POINT$/;"	e	enum:__anon238
PMF_ALL_TIMES	src/game/bg_public.h	165;"	d
PMF_BACKWARDS_JUMP	src/game/bg_public.h	149;"	d
PMF_BACKWARDS_RUN	src/game/bg_public.h	150;"	d
PMF_CHARGE	src/game/bg_public.h	160;"	d
PMF_CROUCH_HELD	src/game/bg_public.h	148;"	d
PMF_DUCKED	src/game/bg_public.h	146;"	d
PMF_FOLLOW	src/game/bg_public.h	157;"	d
PMF_JUMP_HELD	src/game/bg_public.h	147;"	d
PMF_QUEUED	src/game/bg_public.h	158;"	d
PMF_RESPAWNED	src/game/bg_public.h	154;"	d
PMF_SPRINTHELD	src/game/bg_public.h	162;"	d
PMF_TIME_KNOCKBACK	src/game/bg_public.h	152;"	d
PMF_TIME_LAND	src/game/bg_public.h	151;"	d
PMF_TIME_WALLJUMP	src/game/bg_public.h	159;"	d
PMF_TIME_WATERJUMP	src/game/bg_public.h	153;"	d
PMF_USE_ITEM_HELD	src/game/bg_public.h	155;"	d
PMF_WEAPON_RELOAD	src/game/bg_public.h	156;"	d
PMF_WEAPON_SWITCH	src/game/bg_public.h	161;"	d
PMT_CENT_ANGLES	src/cgame/cg_local.h	/^  PMT_CENT_ANGLES,$/;"	e	enum:__anon237
PMT_LAST_NORMAL	src/cgame/cg_local.h	/^  PMT_LAST_NORMAL,$/;"	e	enum:__anon237
PMT_NORMAL	src/cgame/cg_local.h	/^  PMT_NORMAL,$/;"	e	enum:__anon237
PMT_OPPORTUNISTIC_NORMAL	src/cgame/cg_local.h	/^  PMT_OPPORTUNISTIC_NORMAL$/;"	e	enum:__anon237
PMT_STATIC	src/cgame/cg_local.h	/^  PMT_STATIC,$/;"	e	enum:__anon237
PMT_STATIC_TRANSFORM	src/cgame/cg_local.h	/^  PMT_STATIC_TRANSFORM,$/;"	e	enum:__anon237
PMT_TAG	src/cgame/cg_local.h	/^  PMT_TAG,$/;"	e	enum:__anon237
PM_Accelerate	src/game/bg_pmove.c	/^static void PM_Accelerate( vec3_t wishdir, float wishspeed, float accel )$/;"	f	file:
PM_AddEvent	src/game/bg_pmove.c	/^void PM_AddEvent( int newEvent )$/;"	f
PM_AddTouchEnt	src/game/bg_pmove.c	/^void PM_AddTouchEnt( int entityNum )$/;"	f
PM_AirMove	src/game/bg_pmove.c	/^static void PM_AirMove( void )$/;"	f	file:
PM_Alive	src/game/bg_public.h	133;"	d
PM_Animate	src/game/bg_pmove.c	/^static void PM_Animate( void )$/;"	f	file:
PM_BeginWeaponChange	src/game/bg_pmove.c	/^static void PM_BeginWeaponChange( int weapon )$/;"	f	file:
PM_CalculateAngularVelocity	src/game/bg_pmove.c	/^void PM_CalculateAngularVelocity( playerState_t *ps, const usercmd_t *cmd )$/;"	f
PM_CheckCharge	src/game/bg_pmove.c	/^static void PM_CheckCharge( void )$/;"	f	file:
PM_CheckDuck	src/game/bg_pmove.c	/^static void PM_CheckDuck (void)$/;"	f	file:
PM_CheckJump	src/game/bg_pmove.c	/^static qboolean PM_CheckJump( void )$/;"	f	file:
PM_CheckLadder	src/game/bg_pmove.c	/^static void PM_CheckLadder( void )$/;"	f	file:
PM_CheckPounce	src/game/bg_pmove.c	/^static qboolean PM_CheckPounce( void )$/;"	f	file:
PM_CheckWallJump	src/game/bg_pmove.c	/^static qboolean PM_CheckWallJump( void )$/;"	f	file:
PM_CheckWaterJump	src/game/bg_pmove.c	/^static qboolean PM_CheckWaterJump( void )$/;"	f	file:
PM_ClimbMove	src/game/bg_pmove.c	/^static void PM_ClimbMove( void )$/;"	f	file:
PM_ClipVelocity	src/game/bg_pmove.c	/^void PM_ClipVelocity( vec3_t in, vec3_t normal, vec3_t out )$/;"	f
PM_CmdScale	src/game/bg_pmove.c	/^static float PM_CmdScale( usercmd_t *cmd, qboolean zFlight )$/;"	f	file:
PM_ContinueLegsAnim	src/game/bg_pmove.c	/^static void PM_ContinueLegsAnim( int anim )$/;"	f	file:
PM_ContinueTorsoAnim	src/game/bg_pmove.c	/^static void PM_ContinueTorsoAnim( int anim )$/;"	f	file:
PM_ContinueWeaponAnim	src/game/bg_pmove.c	/^static void PM_ContinueWeaponAnim( int anim )$/;"	f	file:
PM_CorrectAllSolid	src/game/bg_pmove.c	/^static int PM_CorrectAllSolid( trace_t *trace )$/;"	f	file:
PM_CrashLand	src/game/bg_pmove.c	/^static void PM_CrashLand( void )$/;"	f	file:
PM_DEAD	src/game/bg_public.h	/^  PM_DEAD,          \/\/ no acceleration or turning, but free falling$/;"	e	enum:__anon328
PM_DeadMove	src/game/bg_pmove.c	/^static void PM_DeadMove( void )$/;"	f	file:
PM_DropTimers	src/game/bg_pmove.c	/^static void PM_DropTimers( void )$/;"	f	file:
PM_FREEZE	src/game/bg_public.h	/^  PM_FREEZE,        \/\/ stuck in place with no control$/;"	e	enum:__anon328
PM_FinishWeaponChange	src/game/bg_pmove.c	/^static void PM_FinishWeaponChange( void )$/;"	f	file:
PM_FlyMove	src/game/bg_pmove.c	/^static void PM_FlyMove( void )$/;"	f	file:
PM_FootstepForSurface	src/game/bg_pmove.c	/^static int PM_FootstepForSurface( void )$/;"	f	file:
PM_Footsteps	src/game/bg_pmove.c	/^static void PM_Footsteps( void )$/;"	f	file:
PM_ForceLegsAnim	src/game/bg_pmove.c	/^static void PM_ForceLegsAnim( int anim )$/;"	f	file:
PM_Friction	src/game/bg_pmove.c	/^static void PM_Friction( void )$/;"	f	file:
PM_GRABBED	src/game/bg_public.h	/^  PM_GRABBED,       \/\/ like dead, but for when the player is still alive$/;"	e	enum:__anon328
PM_GroundClimbTrace	src/game/bg_pmove.c	/^static void PM_GroundClimbTrace( void )$/;"	f	file:
PM_GroundTrace	src/game/bg_pmove.c	/^static void PM_GroundTrace( void )$/;"	f	file:
PM_GroundTraceMissed	src/game/bg_pmove.c	/^static void PM_GroundTraceMissed( void )$/;"	f	file:
PM_INTERMISSION	src/game/bg_public.h	/^  PM_INTERMISSION   \/\/ no movement or status bar$/;"	e	enum:__anon328
PM_JETPACK	src/game/bg_public.h	/^  PM_JETPACK,       \/\/ jetpack physics$/;"	e	enum:__anon328
PM_JetPackMove	src/game/bg_pmove.c	/^static void PM_JetPackMove( void )$/;"	f	file:
PM_LadderMove	src/game/bg_pmove.c	/^static void PM_LadderMove( void )$/;"	f	file:
PM_NOCLIP	src/game/bg_public.h	/^  PM_NOCLIP,        \/\/ noclip movement$/;"	e	enum:__anon328
PM_NORMAL	src/game/bg_public.h	/^  PM_NORMAL,        \/\/ can accelerate and turn$/;"	e	enum:__anon328
PM_NoclipMove	src/game/bg_pmove.c	/^static void PM_NoclipMove( void )$/;"	f	file:
PM_Paralyzed	src/game/bg_public.h	131;"	d
PM_PredictStepMove	src/game/bg_slidemove.c	/^qboolean PM_PredictStepMove( void )$/;"	f
PM_SPECTATOR	src/game/bg_public.h	/^  PM_SPECTATOR,     \/\/ still run into walls$/;"	e	enum:__anon328
PM_SetMovementDir	src/game/bg_pmove.c	/^static void PM_SetMovementDir( void )$/;"	f	file:
PM_SetViewheight	src/game/bg_pmove.c	/^static void PM_SetViewheight( void )$/;"	f	file:
PM_SetWaterLevel	src/game/bg_pmove.c	/^static void PM_SetWaterLevel( void )$/;"	f	file:
PM_SlideMove	src/game/bg_slidemove.c	/^qboolean  PM_SlideMove( qboolean gravity )$/;"	f
PM_StartLegsAnim	src/game/bg_pmove.c	/^static void PM_StartLegsAnim( int anim )$/;"	f	file:
PM_StartTorsoAnim	src/game/bg_pmove.c	/^void PM_StartTorsoAnim( int anim )$/;"	f
PM_StartWeaponAnim	src/game/bg_pmove.c	/^static void PM_StartWeaponAnim( int anim )$/;"	f	file:
PM_StepEvent	src/game/bg_slidemove.c	/^void PM_StepEvent( vec3_t from, vec3_t to, vec3_t normal )$/;"	f
PM_StepSlideMove	src/game/bg_slidemove.c	/^qboolean PM_StepSlideMove( qboolean gravity, qboolean predictive )$/;"	f
PM_TorsoAnimation	src/game/bg_pmove.c	/^static void PM_TorsoAnimation( void )$/;"	f	file:
PM_UpdateViewAngles	src/game/bg_pmove.c	/^void PM_UpdateViewAngles( playerState_t *ps, const usercmd_t *cmd )$/;"	f
PM_WalkMove	src/game/bg_pmove.c	/^static void PM_WalkMove( void )$/;"	f	file:
PM_WaterEvents	src/game/bg_pmove.c	/^static void PM_WaterEvents( void )$/;"	f	file:
PM_WaterJumpMove	src/game/bg_pmove.c	/^static void PM_WaterJumpMove( void )$/;"	f	file:
PM_WaterMove	src/game/bg_pmove.c	/^static void PM_WaterMove( void )$/;"	f	file:
PM_Weapon	src/game/bg_pmove.c	/^static void PM_Weapon( void )$/;"	f	file:
PNG_Adam7_NumPasses	src/renderercommon/tr_image_png.c	176;"	d	file:
PNG_BitDepth_1	src/renderercommon/tr_image_png.c	135;"	d	file:
PNG_BitDepth_16	src/renderercommon/tr_image_png.c	139;"	d	file:
PNG_BitDepth_2	src/renderercommon/tr_image_png.c	136;"	d	file:
PNG_BitDepth_4	src/renderercommon/tr_image_png.c	137;"	d	file:
PNG_BitDepth_8	src/renderercommon/tr_image_png.c	138;"	d	file:
PNG_ChunkCRC	src/renderercommon/tr_image_png.c	/^typedef uint32_t PNG_ChunkCRC;$/;"	t	file:
PNG_ChunkCRC_Size	src/renderercommon/tr_image_png.c	72;"	d	file:
PNG_ChunkHeader	src/renderercommon/tr_image_png.c	/^struct PNG_ChunkHeader$/;"	s	file:
PNG_ChunkHeader_Size	src/renderercommon/tr_image_png.c	68;"	d	file:
PNG_ChunkType_IDAT	src/renderercommon/tr_image_png.c	83;"	d	file:
PNG_ChunkType_IEND	src/renderercommon/tr_image_png.c	84;"	d	file:
PNG_ChunkType_IHDR	src/renderercommon/tr_image_png.c	81;"	d	file:
PNG_ChunkType_PLTE	src/renderercommon/tr_image_png.c	82;"	d	file:
PNG_ChunkType_tRNS	src/renderercommon/tr_image_png.c	85;"	d	file:
PNG_Chunk_IHDR	src/renderercommon/tr_image_png.c	/^struct PNG_Chunk_IHDR$/;"	s	file:
PNG_Chunk_IHDR_Size	src/renderercommon/tr_image_png.c	102;"	d	file:
PNG_ColourType_Grey	src/renderercommon/tr_image_png.c	108;"	d	file:
PNG_ColourType_GreyAlpha	src/renderercommon/tr_image_png.c	111;"	d	file:
PNG_ColourType_Indexed	src/renderercommon/tr_image_png.c	110;"	d	file:
PNG_ColourType_True	src/renderercommon/tr_image_png.c	109;"	d	file:
PNG_ColourType_TrueAlpha	src/renderercommon/tr_image_png.c	112;"	d	file:
PNG_CompressionMethod_0	src/renderercommon/tr_image_png.c	145;"	d	file:
PNG_FilterMethod_0	src/renderercommon/tr_image_png.c	151;"	d	file:
PNG_FilterType_Average	src/renderercommon/tr_image_png.c	160;"	d	file:
PNG_FilterType_None	src/renderercommon/tr_image_png.c	157;"	d	file:
PNG_FilterType_Paeth	src/renderercommon/tr_image_png.c	161;"	d	file:
PNG_FilterType_Sub	src/renderercommon/tr_image_png.c	158;"	d	file:
PNG_FilterType_Up	src/renderercommon/tr_image_png.c	159;"	d	file:
PNG_InterlaceMethod_Interlaced	src/renderercommon/tr_image_png.c	170;"	d	file:
PNG_InterlaceMethod_NonInterlaced	src/renderercommon/tr_image_png.c	169;"	d	file:
PNG_NumColourComponents_Grey	src/renderercommon/tr_image_png.c	124;"	d	file:
PNG_NumColourComponents_GreyAlpha	src/renderercommon/tr_image_png.c	127;"	d	file:
PNG_NumColourComponents_Indexed	src/renderercommon/tr_image_png.c	126;"	d	file:
PNG_NumColourComponents_True	src/renderercommon/tr_image_png.c	125;"	d	file:
PNG_NumColourComponents_TrueAlpha	src/renderercommon/tr_image_png.c	128;"	d	file:
PNG_Signature	src/renderercommon/tr_image_png.c	53;"	d	file:
PNG_Signature_Size	src/renderercommon/tr_image_png.c	54;"	d	file:
PNG_ZlibCheckValue_Size	src/renderercommon/tr_image_png.c	194;"	d	file:
PNG_ZlibHeader	src/renderercommon/tr_image_png.c	/^struct PNG_ZlibHeader$/;"	s	file:
PNG_ZlibHeader_Size	src/renderercommon/tr_image_png.c	188;"	d	file:
POINT_EPSILON	src/qcommon/cm_patch.c	357;"	d	file:
POLL_VOTE	src/game/bg_public.h	/^  POLL_VOTE,$/;"	e	enum:__anon360
POOLSIZE	src/game/bg_alloc.c	28;"	d	file:
POOLSIZE	src/game/bg_alloc.c	30;"	d	file:
POP_FIFO	src/ui/ui_shared.c	514;"	d	file:
POP_FIFO	src/ui/ui_shared.c	671;"	d	file:
POP_FPR	src/qcommon/vm_sparc.c	591;"	d	file:
POP_GPR	src/qcommon/vm_sparc.c	585;"	d	file:
POP_STACK	src/ui/ui_shared.c	503;"	d	file:
POP_STACK	src/ui/ui_shared.c	668;"	d	file:
PORT_ANY	src/qcommon/qcommon.h	143;"	d
PORT_MASTER	src/qcommon/qcommon.h	268;"	d
PORT_SERVER	src/qcommon/qcommon.h	269;"	d
POSITION_LIST_END	src/server/sqlite3.c	140474;"	d	file:
POS_COLUMN	src/server/sqlite3.c	138232;"	d	file:
POS_END	src/server/sqlite3.c	138233;"	d	file:
POWERUP_BLINKS	src/cgame/cg_local.h	38;"	d
POWERUP_BLINK_TIME	src/cgame/cg_local.h	40;"	d
POWER_REFRESH_TIME	src/game/g_buildable.c	226;"	d	file:
PPC	src/qcommon/vm_powerpc_asm.c	901;"	d	file:
PPC	src/qcommon/vm_powerpc_asm.c	902;"	d	file:
PPC64	src/qcommon/vm_powerpc_asm.c	904;"	d	file:
PPCCOM	src/qcommon/vm_powerpc_asm.c	903;"	d	file:
PPC_Append	src/qcommon/vm_powerpc.c	/^PPC_Append($/;"	f	file:
PPC_AppendInstructions	src/qcommon/vm_powerpc.c	/^PPC_AppendInstructions($/;"	f	file:
PPC_CompileInit	src/qcommon/vm_powerpc.c	/^PPC_CompileInit( void )$/;"	f	file:
PPC_ComputeCode	src/qcommon/vm_powerpc.c	/^PPC_ComputeCode( vm_t *vm )$/;"	f	file:
PPC_DEST_ARCH	src/qcommon/vm_powerpc_asm.c	142;"	d	file:
PPC_EmitConst	src/qcommon/vm_powerpc.c	/^PPC_EmitConst( source_instruction_t * const i_const )$/;"	f	file:
PPC_EmitNull	src/qcommon/vm_powerpc.c	/^PPC_EmitNull( source_instruction_t * const i_null )$/;"	f	file:
PPC_Free	src/qcommon/vm_powerpc.c	67;"	d	file:
PPC_Free	src/qcommon/vm_powerpc.c	70;"	d	file:
PPC_MakeFastMask	src/qcommon/vm_powerpc.c	/^PPC_MakeFastMask( int mask )$/;"	f	file:
PPC_Malloc	src/qcommon/vm_powerpc.c	/^PPC_Malloc( size_t size )$/;"	f	file:
PPC_Malloc	src/qcommon/vm_powerpc.c	69;"	d	file:
PPC_OP	src/qcommon/vm_powerpc_asm.c	103;"	d	file:
PPC_OPCODE_32	src/qcommon/vm_powerpc_asm.c	73;"	d	file:
PPC_OPCODE_403	src/qcommon/vm_powerpc_asm.c	80;"	d	file:
PPC_OPCODE_405	src/qcommon/vm_powerpc_asm.c	100;"	d	file:
PPC_OPCODE_440	src/qcommon/vm_powerpc_asm.c	83;"	d	file:
PPC_OPCODE_601	src/qcommon/vm_powerpc_asm.c	75;"	d	file:
PPC_OPCODE_64	src/qcommon/vm_powerpc_asm.c	74;"	d	file:
PPC_OPCODE_64_BRIDGE	src/qcommon/vm_powerpc_asm.c	78;"	d	file:
PPC_OPCODE_ALTIVEC	src/qcommon/vm_powerpc_asm.c	79;"	d	file:
PPC_OPCODE_ANY	src/qcommon/vm_powerpc_asm.c	77;"	d	file:
PPC_OPCODE_BOOKE	src/qcommon/vm_powerpc_asm.c	81;"	d	file:
PPC_OPCODE_BOOKE64	src/qcommon/vm_powerpc_asm.c	82;"	d	file:
PPC_OPCODE_BRLOCK	src/qcommon/vm_powerpc_asm.c	90;"	d	file:
PPC_OPCODE_CACHELCK	src/qcommon/vm_powerpc_asm.c	92;"	d	file:
PPC_OPCODE_CELL	src/qcommon/vm_powerpc_asm.c	97;"	d	file:
PPC_OPCODE_CLASSIC	src/qcommon/vm_powerpc_asm.c	86;"	d	file:
PPC_OPCODE_COMMON	src/qcommon/vm_powerpc_asm.c	76;"	d	file:
PPC_OPCODE_E300	src/qcommon/vm_powerpc_asm.c	95;"	d	file:
PPC_OPCODE_E500MC	src/qcommon/vm_powerpc_asm.c	99;"	d	file:
PPC_OPCODE_EFS	src/qcommon/vm_powerpc_asm.c	89;"	d	file:
PPC_OPCODE_ISEL	src/qcommon/vm_powerpc_asm.c	88;"	d	file:
PPC_OPCODE_NOPOWER4	src/qcommon/vm_powerpc_asm.c	85;"	d	file:
PPC_OPCODE_PMR	src/qcommon/vm_powerpc_asm.c	91;"	d	file:
PPC_OPCODE_POWER	src/qcommon/vm_powerpc_asm.c	71;"	d	file:
PPC_OPCODE_POWER2	src/qcommon/vm_powerpc_asm.c	72;"	d	file:
PPC_OPCODE_POWER4	src/qcommon/vm_powerpc_asm.c	84;"	d	file:
PPC_OPCODE_POWER5	src/qcommon/vm_powerpc_asm.c	94;"	d	file:
PPC_OPCODE_POWER6	src/qcommon/vm_powerpc_asm.c	96;"	d	file:
PPC_OPCODE_PPC	src/qcommon/vm_powerpc_asm.c	70;"	d	file:
PPC_OPCODE_PPCPS	src/qcommon/vm_powerpc_asm.c	98;"	d	file:
PPC_OPCODE_RFMCI	src/qcommon/vm_powerpc_asm.c	93;"	d	file:
PPC_OPCODE_SPE	src/qcommon/vm_powerpc_asm.c	87;"	d	file:
PPC_OPCODE_VSX	src/qcommon/vm_powerpc_asm.c	101;"	d	file:
PPC_OPERAND_ABSOLUTE	src/qcommon/vm_powerpc_asm.c	125;"	d	file:
PPC_OPERAND_CR	src/qcommon/vm_powerpc_asm.c	120;"	d	file:
PPC_OPERAND_DQ	src/qcommon/vm_powerpc_asm.c	131;"	d	file:
PPC_OPERAND_DS	src/qcommon/vm_powerpc_asm.c	130;"	d	file:
PPC_OPERAND_FAKE	src/qcommon/vm_powerpc_asm.c	118;"	d	file:
PPC_OPERAND_FCR	src/qcommon/vm_powerpc_asm.c	134;"	d	file:
PPC_OPERAND_FPR	src/qcommon/vm_powerpc_asm.c	123;"	d	file:
PPC_OPERAND_FSL	src/qcommon/vm_powerpc_asm.c	133;"	d	file:
PPC_OPERAND_GPR	src/qcommon/vm_powerpc_asm.c	121;"	d	file:
PPC_OPERAND_GPR_0	src/qcommon/vm_powerpc_asm.c	122;"	d	file:
PPC_OPERAND_NEGATIVE	src/qcommon/vm_powerpc_asm.c	128;"	d	file:
PPC_OPERAND_NEXT	src/qcommon/vm_powerpc_asm.c	127;"	d	file:
PPC_OPERAND_OPTIONAL	src/qcommon/vm_powerpc_asm.c	126;"	d	file:
PPC_OPERAND_PARENS	src/qcommon/vm_powerpc_asm.c	119;"	d	file:
PPC_OPERAND_PLUS1	src/qcommon/vm_powerpc_asm.c	132;"	d	file:
PPC_OPERAND_RELATIVE	src/qcommon/vm_powerpc_asm.c	124;"	d	file:
PPC_OPERAND_SIGNED	src/qcommon/vm_powerpc_asm.c	116;"	d	file:
PPC_OPERAND_SIGNOPT	src/qcommon/vm_powerpc_asm.c	117;"	d	file:
PPC_OPERAND_UDI	src/qcommon/vm_powerpc_asm.c	135;"	d	file:
PPC_OPERAND_VR	src/qcommon/vm_powerpc_asm.c	129;"	d	file:
PPC_OPERAND_VSR	src/qcommon/vm_powerpc_asm.c	136;"	d	file:
PPC_PrepareJump	src/qcommon/vm_powerpc.c	/^PPC_PrepareJump($/;"	f	file:
PPC_PushData	src/qcommon/vm_powerpc.c	/^PPC_PushData( unsigned int datum )$/;"	f	file:
PPC_ShrinkJumps	src/qcommon/vm_powerpc.c	/^PPC_ShrinkJumps( void )$/;"	f	file:
PPERCENT	src/tools/lcc/lburg/gram.c	/^    PPERCENT = 260,$/;"	e	enum:yytokentype	file:
PPERCENT	src/tools/lcc/lburg/gram.c	117;"	d	file:
PPLUS	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
PRIFLE_CLIPS	src/game/tremulous.h	453;"	d
PRIFLE_DMG	src/game/tremulous.h	458;"	d
PRIFLE_K_SCALE	src/game/tremulous.h	456;"	d
PRIFLE_MAXCLIPS	src/game/tremulous.h	454;"	d
PRIFLE_PRICE	src/game/tremulous.h	452;"	d
PRIFLE_RELOAD	src/game/tremulous.h	457;"	d
PRIFLE_REPEAT	src/game/tremulous.h	455;"	d
PRIFLE_SIZE	src/game/tremulous.h	460;"	d
PRIFLE_SPEED	src/game/tremulous.h	459;"	d
PRINT_ALL	src/qcommon/q_shared.h	/^	PRINT_ALL,$/;"	e	enum:__anon459
PRINT_DEVELOPER	src/qcommon/q_shared.h	/^	PRINT_DEVELOPER,		\/\/ only print when "developer 1"$/;"	e	enum:__anon459
PRINT_ERROR	src/qcommon/q_shared.h	/^	PRINT_ERROR$/;"	e	enum:__anon459
PRINT_WARNING	src/qcommon/q_shared.h	/^	PRINT_WARNING,$/;"	e	enum:__anon459
PRODUCT_NAME	src/qcommon/q_shared.h	30;"	d
PRODUCT_VERSION	src/qcommon/q_shared.h	33;"	d
PROGRAM_STACK_MASK	src/qcommon/vm_local.h	42;"	d
PROGRAM_STACK_SIZE	src/qcommon/vm_local.h	41;"	d
PROP_GAP_WIDTH	src/qcommon/q_shared.h	292;"	d
PROP_HEIGHT	src/qcommon/q_shared.h	294;"	d
PROP_SMALL_SIZE_SCALE	src/qcommon/q_shared.h	295;"	d
PROP_SPACE_WIDTH	src/qcommon/q_shared.h	293;"	d
PROTOCOL_VERSION	src/qcommon/qcommon.h	257;"	d
PROXY_CONCHVERSION	src/server/sqlite3.c	34178;"	d	file:
PROXY_HEADERLEN	src/server/sqlite3.c	34179;"	d	file:
PROXY_HOSTIDLEN	src/server/sqlite3.c	34139;"	d	file:
PROXY_MAXCONCHLEN	src/server/sqlite3.c	34181;"	d	file:
PROXY_PATHINDEX	src/server/sqlite3.c	34180;"	d	file:
PSF	src/qcommon/msg.c	1067;"	d	file:
PSFO	src/cgame/cg_snapshot.c	265;"	d	file:
PSHADOW_MAP_SIZE	src/renderergl2/tr_local.h	57;"	d
PS_NONSEGMODEL	src/game/bg_public.h	301;"	d
PS_PMOVEFRAMECOUNTBITS	src/qcommon/q_shared.h	1240;"	d
PS_SPRINTTOGGLE	src/game/bg_public.h	302;"	d
PS_WALLCLIMBINGFOLLOW	src/game/bg_public.h	299;"	d
PS_WALLCLIMBINGTOGGLE	src/game/bg_public.h	300;"	d
PTF_INTKEY	src/server/sqlite3.c	55063;"	d	file:
PTF_LEAF	src/server/sqlite3.c	55066;"	d	file:
PTF_LEAFDATA	src/server/sqlite3.c	55065;"	d	file:
PTF_ZERODATA	src/server/sqlite3.c	55064;"	d	file:
PTRMAP_BTREE	src/server/sqlite3.c	55444;"	d	file:
PTRMAP_FREEPAGE	src/server/sqlite3.c	55441;"	d	file:
PTRMAP_ISPAGE	src/server/sqlite3.c	55407;"	d	file:
PTRMAP_OVERFLOW1	src/server/sqlite3.c	55442;"	d	file:
PTRMAP_OVERFLOW2	src/server/sqlite3.c	55443;"	d	file:
PTRMAP_PAGENO	src/server/sqlite3.c	55405;"	d	file:
PTRMAP_PTROFFSET	src/server/sqlite3.c	55406;"	d	file:
PTRMAP_ROOTPAGE	src/server/sqlite3.c	55440;"	d	file:
PULSE_DIVISOR	src/qcommon/q_shared.h	298;"	d
PULSE_SCALE	src/cgame/cg_local.h	59;"	d
PULSE_TIME	src/cgame/cg_local.h	42;"	d
PUSH_FPR	src/qcommon/vm_sparc.c	592;"	d	file:
PUSH_GPR	src/qcommon/vm_sparc.c	586;"	d	file:
PUSH_OP	src/ui/ui_shared.c	494;"	d	file:
PUSH_OP	src/ui/ui_shared.c	667;"	d	file:
PUSH_VAL	src/ui/ui_shared.c	485;"	d	file:
PUSH_VAL	src/ui/ui_shared.c	666;"	d	file:
P_ADD	src/qcommon/parse.c	93;"	d	file:
P_ADD_ASSIGN	src/qcommon/parse.c	76;"	d	file:
P_ASSIGN	src/qcommon/parse.c	95;"	d	file:
P_BACKSLASH	src/qcommon/parse.c	118;"	d	file:
P_BIN_AND	src/qcommon/parse.c	97;"	d	file:
P_BIN_AND_ASSIGN	src/qcommon/parse.c	81;"	d	file:
P_BIN_NOT	src/qcommon/parse.c	100;"	d	file:
P_BIN_OR	src/qcommon/parse.c	98;"	d	file:
P_BIN_OR_ASSIGN	src/qcommon/parse.c	82;"	d	file:
P_BIN_XOR	src/qcommon/parse.c	99;"	d	file:
P_BIN_XOR_ASSIGN	src/qcommon/parse.c	83;"	d	file:
P_BRACECLOSE	src/qcommon/parse.c	115;"	d	file:
P_BRACEOPEN	src/qcommon/parse.c	114;"	d	file:
P_COLON	src/qcommon/parse.c	109;"	d	file:
P_COMMA	src/qcommon/parse.c	107;"	d	file:
P_CPP1	src/qcommon/parse.c	88;"	d	file:
P_CPP2	src/qcommon/parse.c	89;"	d	file:
P_DEC	src/qcommon/parse.c	79;"	d	file:
P_DIV	src/qcommon/parse.c	91;"	d	file:
P_DIV_ASSIGN	src/qcommon/parse.c	74;"	d	file:
P_DOLLAR	src/qcommon/parse.c	121;"	d	file:
P_DamageFeedback	src/game/g_active.c	/^void P_DamageFeedback( gentity_t *player )$/;"	f
P_INC	src/qcommon/parse.c	78;"	d	file:
P_LOGIC_AND	src/qcommon/parse.c	66;"	d	file:
P_LOGIC_EQ	src/qcommon/parse.c	70;"	d	file:
P_LOGIC_GEQ	src/qcommon/parse.c	68;"	d	file:
P_LOGIC_GREATER	src/qcommon/parse.c	103;"	d	file:
P_LOGIC_LEQ	src/qcommon/parse.c	69;"	d	file:
P_LOGIC_LESS	src/qcommon/parse.c	104;"	d	file:
P_LOGIC_NOT	src/qcommon/parse.c	102;"	d	file:
P_LOGIC_OR	src/qcommon/parse.c	67;"	d	file:
P_LOGIC_UNEQ	src/qcommon/parse.c	71;"	d	file:
P_LSHIFT	src/qcommon/parse.c	85;"	d	file:
P_LSHIFT_ASSIGN	src/qcommon/parse.c	62;"	d	file:
P_MOD	src/qcommon/parse.c	92;"	d	file:
P_MOD_ASSIGN	src/qcommon/parse.c	75;"	d	file:
P_MUL	src/qcommon/parse.c	90;"	d	file:
P_MUL_ASSIGN	src/qcommon/parse.c	73;"	d	file:
P_PARENTHESESCLOSE	src/qcommon/parse.c	113;"	d	file:
P_PARENTHESESOPEN	src/qcommon/parse.c	112;"	d	file:
P_PARMS	src/qcommon/parse.c	63;"	d	file:
P_POINTERREF	src/qcommon/parse.c	87;"	d	file:
P_PRECOMP	src/qcommon/parse.c	120;"	d	file:
P_PRECOMPMERGE	src/qcommon/parse.c	64;"	d	file:
P_QUESTIONMARK	src/qcommon/parse.c	110;"	d	file:
P_REF	src/qcommon/parse.c	106;"	d	file:
P_RSHIFT	src/qcommon/parse.c	84;"	d	file:
P_RSHIFT_ASSIGN	src/qcommon/parse.c	61;"	d	file:
P_SEMICOLON	src/qcommon/parse.c	108;"	d	file:
P_SQBRACKETCLOSE	src/qcommon/parse.c	117;"	d	file:
P_SQBRACKETOPEN	src/qcommon/parse.c	116;"	d	file:
P_SUB	src/qcommon/parse.c	94;"	d	file:
P_SUB_ASSIGN	src/qcommon/parse.c	77;"	d	file:
P_WorldEffects	src/game/g_active.c	/^void P_WorldEffects( gentity_t *ent )$/;"	f
Pager	src/server/sqlite3.c	/^struct Pager {$/;"	s	file:
Pager	src/server/sqlite3.c	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager	file:
PagerSavepoint	src/server/sqlite3.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	src/server/sqlite3.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
Parse	src/server/sqlite3.c	/^struct Parse {$/;"	s	file:
Parse	src/server/sqlite3.c	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse	file:
Parse	src/tools/asm/q3asm.c	/^static qboolean Parse( void ) {$/;"	f	file:
Parse1DMatrix	src/qcommon/q_shared.c	/^void Parse1DMatrix (char **buf_p, int x, float *m) {$/;"	f
Parse2DMatrix	src/qcommon/q_shared.c	/^void Parse2DMatrix (char **buf_p, int y, int x, float *m) {$/;"	f
Parse3DMatrix	src/qcommon/q_shared.c	/^void Parse3DMatrix (char **buf_p, int z, int y, int x, float *m) {$/;"	f
ParseCommandLine	src/master/master.c	/^static qboolean ParseCommandLine (int argc, const char* argv [])$/;"	f	file:
ParseContext	src/server/sqlite3.c	/^struct ParseContext {$/;"	s	file:
ParseContext	src/server/sqlite3.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
ParseDeform	src/renderergl1/tr_shader.c	/^static void ParseDeform( char **text ) {$/;"	f	file:
ParseDeform	src/renderergl2/tr_shader.c	/^static void ParseDeform( char **text ) {$/;"	f	file:
ParseExpression	src/tools/asm/q3asm.c	/^static int ParseExpression(void) {$/;"	f	file:
ParseFace	src/renderergl1/tr_bsp.c	/^static void ParseFace( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes  ) {$/;"	f	file:
ParseFace	src/renderergl2/tr_bsp.c	/^static void ParseFace( dsurface_t *ds, drawVert_t *verts, float *hdrVertColors, msurface_t *surf, int *indexes  ) {$/;"	f	file:
ParseFlare	src/renderergl1/tr_bsp.c	/^static void ParseFlare( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes ) {$/;"	f	file:
ParseFlare	src/renderergl2/tr_bsp.c	/^static void ParseFlare( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes ) {$/;"	f	file:
ParseHex	src/qcommon/vm.c	/^int	ParseHex( const char *text ) {$/;"	f
ParseHex	src/tools/asm/cmdlib.c	/^int ParseHex (const char *hex)$/;"	f
ParseMesh	src/renderergl1/tr_bsp.c	/^static void ParseMesh ( dsurface_t *ds, drawVert_t *verts, msurface_t *surf ) {$/;"	f	file:
ParseMesh	src/renderergl2/tr_bsp.c	/^static void ParseMesh ( dsurface_t *ds, drawVert_t *verts, float *hdrVertColors, msurface_t *surf ) {$/;"	f	file:
ParseNum	src/tools/asm/cmdlib.c	/^int ParseNum (const char *str)$/;"	f
ParseOptionFile	src/tools/asm/q3asm.c	/^static void ParseOptionFile( const char *filename ) {$/;"	f	file:
ParseShader	src/renderergl1/tr_shader.c	/^static qboolean ParseShader( char **text )$/;"	f	file:
ParseShader	src/renderergl2/tr_shader.c	/^static qboolean ParseShader( char **text )$/;"	f	file:
ParseSkyParms	src/renderergl1/tr_shader.c	/^static void ParseSkyParms( char **text ) {$/;"	f	file:
ParseSkyParms	src/renderergl2/tr_shader.c	/^static void ParseSkyParms( char **text ) {$/;"	f	file:
ParseSort	src/renderergl1/tr_shader.c	/^void ParseSort( char **text ) {$/;"	f
ParseSort	src/renderergl2/tr_shader.c	/^void ParseSort( char **text ) {$/;"	f
ParseStage	src/renderergl1/tr_shader.c	/^static qboolean ParseStage( shaderStage_t *stage, char **text )$/;"	f	file:
ParseStage	src/renderergl2/tr_shader.c	/^static qboolean ParseStage( shaderStage_t *stage, char **text )$/;"	f	file:
ParseSurfaceParm	src/renderergl1/tr_shader.c	/^static void ParseSurfaceParm( char **text ) {$/;"	f	file:
ParseSurfaceParm	src/renderergl2/tr_shader.c	/^static void ParseSurfaceParm( char **text ) {$/;"	f	file:
ParseTexMod	src/renderergl1/tr_shader.c	/^static void ParseTexMod( char *_text, shaderStage_t *stage )$/;"	f	file:
ParseTexMod	src/renderergl2/tr_shader.c	/^static void ParseTexMod( char *_text, shaderStage_t *stage )$/;"	f	file:
ParseTriSurf	src/renderergl1/tr_bsp.c	/^static void ParseTriSurf( dsurface_t *ds, drawVert_t *verts, msurface_t *surf, int *indexes ) {$/;"	f	file:
ParseTriSurf	src/renderergl2/tr_bsp.c	/^static void ParseTriSurf( dsurface_t *ds, drawVert_t *verts, float *hdrVertColors, msurface_t *surf, int *indexes ) {$/;"	f	file:
ParseValue	src/tools/asm/q3asm.c	/^static int ParseValue( void ) {$/;"	f	file:
ParseVector	src/renderergl1/tr_shader.c	/^static qboolean ParseVector( char **text, int count, float *v ) {$/;"	f	file:
ParseVector	src/renderergl2/tr_shader.c	/^static qboolean ParseVector( char **text, int count, float *v ) {$/;"	f	file:
ParseWaveForm	src/renderergl1/tr_shader.c	/^static void ParseWaveForm( char **text, waveForm_t *wave )$/;"	f	file:
ParseWaveForm	src/renderergl2/tr_shader.c	/^static void ParseWaveForm( char **text, waveForm_t *wave )$/;"	f	file:
Parse_AddDefineToHash	src/qcommon/parse.c	/^static void Parse_AddDefineToHash(define_t *define, define_t **definehash)$/;"	f	file:
Parse_AddDefineToSourceFromString	src/qcommon/parse.c	/^static qboolean Parse_AddDefineToSourceFromString( source_t *source,$/;"	f	file:
Parse_AddGlobalDefine	src/qcommon/parse.c	/^int Parse_AddGlobalDefine(char *string)$/;"	f
Parse_AddGlobalDefinesToSource	src/qcommon/parse.c	/^static void Parse_AddGlobalDefinesToSource(source_t *source)$/;"	f	file:
Parse_CheckTokenString	src/qcommon/parse.c	/^static int Parse_CheckTokenString(source_t *source, char *string)$/;"	f	file:
Parse_ClearTokenWhiteSpace	src/qcommon/parse.c	/^static void Parse_ClearTokenWhiteSpace(token_t *token)$/;"	f	file:
Parse_ConvertPath	src/qcommon/parse.c	/^static void Parse_ConvertPath(char *path)$/;"	f	file:
Parse_CopyDefine	src/qcommon/parse.c	/^static define_t *Parse_CopyDefine(source_t *source, define_t *define)$/;"	f	file:
Parse_CopyToken	src/qcommon/parse.c	/^static token_t *Parse_CopyToken(token_t *token)$/;"	f	file:
Parse_CreatePunctuationTable	src/qcommon/parse.c	/^static void Parse_CreatePunctuationTable(script_t *script, punctuation_t *punctuations)$/;"	f	file:
Parse_DefineFromString	src/qcommon/parse.c	/^static define_t *Parse_DefineFromString(char *string)$/;"	f	file:
Parse_Directive_define	src/qcommon/parse.c	/^static int Parse_Directive_define(source_t *source)$/;"	f	file:
Parse_Directive_elif	src/qcommon/parse.c	/^static int Parse_Directive_elif(source_t *source)$/;"	f	file:
Parse_Directive_else	src/qcommon/parse.c	/^static int Parse_Directive_else(source_t *source)$/;"	f	file:
Parse_Directive_endif	src/qcommon/parse.c	/^static int Parse_Directive_endif(source_t *source)$/;"	f	file:
Parse_Directive_error	src/qcommon/parse.c	/^static int Parse_Directive_error(source_t *source)$/;"	f	file:
Parse_Directive_eval	src/qcommon/parse.c	/^static int Parse_Directive_eval(source_t *source)$/;"	f	file:
Parse_Directive_evalfloat	src/qcommon/parse.c	/^static int Parse_Directive_evalfloat(source_t *source)$/;"	f	file:
Parse_Directive_if	src/qcommon/parse.c	/^static int Parse_Directive_if(source_t *source)$/;"	f	file:
Parse_Directive_if_def	src/qcommon/parse.c	/^static int Parse_Directive_if_def(source_t *source, int type)$/;"	f	file:
Parse_Directive_ifdef	src/qcommon/parse.c	/^static int Parse_Directive_ifdef(source_t *source)$/;"	f	file:
Parse_Directive_ifndef	src/qcommon/parse.c	/^static int Parse_Directive_ifndef(source_t *source)$/;"	f	file:
Parse_Directive_include	src/qcommon/parse.c	/^static int Parse_Directive_include(source_t *source)$/;"	f	file:
Parse_Directive_line	src/qcommon/parse.c	/^static int Parse_Directive_line(source_t *source)$/;"	f	file:
Parse_Directive_pragma	src/qcommon/parse.c	/^static int Parse_Directive_pragma(source_t *source)$/;"	f	file:
Parse_Directive_undef	src/qcommon/parse.c	/^static int Parse_Directive_undef(source_t *source)$/;"	f	file:
Parse_DollarDirective_evalfloat	src/qcommon/parse.c	/^static int Parse_DollarDirective_evalfloat(source_t *source)$/;"	f	file:
Parse_DollarDirective_evalint	src/qcommon/parse.c	/^static int Parse_DollarDirective_evalint(source_t *source)$/;"	f	file:
Parse_DollarEvaluate	src/qcommon/parse.c	/^static int Parse_DollarEvaluate(source_t *source, signed long int *intvalue,$/;"	f	file:
Parse_EndOfScript	src/qcommon/parse.c	/^static int Parse_EndOfScript(script_t *script)$/;"	f	file:
Parse_Evaluate	src/qcommon/parse.c	/^static int Parse_Evaluate(source_t *source, signed long int *intvalue,$/;"	f	file:
Parse_EvaluateTokens	src/qcommon/parse.c	/^static int Parse_EvaluateTokens(source_t *source, token_t *tokens, signed long int *intvalue,$/;"	f	file:
Parse_ExpandBuiltinDefine	src/qcommon/parse.c	/^static int Parse_ExpandBuiltinDefine(source_t *source, token_t *deftoken, define_t *define,$/;"	f	file:
Parse_ExpandDefine	src/qcommon/parse.c	/^static int Parse_ExpandDefine(source_t *source, token_t *deftoken, define_t *define,$/;"	f	file:
Parse_ExpandDefineIntoSource	src/qcommon/parse.c	/^static int Parse_ExpandDefineIntoSource(source_t *source, token_t *deftoken, define_t *define)$/;"	f	file:
Parse_FindDefineParm	src/qcommon/parse.c	/^static int Parse_FindDefineParm(define_t *define, char *name)$/;"	f	file:
Parse_FindHashedDefine	src/qcommon/parse.c	/^static define_t *Parse_FindHashedDefine(define_t **definehash, char *name)$/;"	f	file:
Parse_FreeDefine	src/qcommon/parse.c	/^static void Parse_FreeDefine(define_t *define)$/;"	f	file:
Parse_FreeScript	src/qcommon/parse.c	/^static void Parse_FreeScript(script_t *script)$/;"	f	file:
Parse_FreeSource	src/qcommon/parse.c	/^static void Parse_FreeSource(source_t *source)$/;"	f	file:
Parse_FreeSourceHandle	src/qcommon/parse.c	/^int Parse_FreeSourceHandle(int handle)$/;"	f
Parse_FreeToken	src/qcommon/parse.c	/^static void Parse_FreeToken(token_t *token)$/;"	f	file:
Parse_LoadScriptFile	src/qcommon/parse.c	/^static script_t *Parse_LoadScriptFile(const char *filename)$/;"	f	file:
Parse_LoadScriptMemory	src/qcommon/parse.c	/^static script_t *Parse_LoadScriptMemory(char *ptr, int length, char *name)$/;"	f	file:
Parse_LoadSourceFile	src/qcommon/parse.c	/^static source_t *Parse_LoadSourceFile(const char *filename)$/;"	f	file:
Parse_LoadSourceHandle	src/qcommon/parse.c	/^int Parse_LoadSourceHandle(const char *filename)$/;"	f
Parse_MergeTokens	src/qcommon/parse.c	/^static int Parse_MergeTokens(token_t *t1, token_t *t2)$/;"	f	file:
Parse_NameHash	src/qcommon/parse.c	/^static int Parse_NameHash(char *name)$/;"	f	file:
Parse_NumberValue	src/qcommon/parse.c	/^static void Parse_NumberValue(char *string, int subtype, unsigned long int *intvalue,$/;"	f	file:
Parse_OperatorPriority	src/qcommon/parse.c	/^static int Parse_OperatorPriority(int op)$/;"	f	file:
Parse_PopIndent	src/qcommon/parse.c	/^static void Parse_PopIndent(source_t *source, int *type, int *skip)$/;"	f	file:
Parse_PushIndent	src/qcommon/parse.c	/^static void Parse_PushIndent(source_t *source, int type, int skip)$/;"	f	file:
Parse_PushScript	src/qcommon/parse.c	/^static void Parse_PushScript(source_t *source, script_t *script)$/;"	f	file:
Parse_ReadDefineParms	src/qcommon/parse.c	/^static int Parse_ReadDefineParms(source_t *source, define_t *define, token_t **parms, int maxparms)$/;"	f	file:
Parse_ReadDirective	src/qcommon/parse.c	/^static int Parse_ReadDirective(source_t *source)$/;"	f	file:
Parse_ReadDollarDirective	src/qcommon/parse.c	/^static int Parse_ReadDollarDirective(source_t *source)$/;"	f	file:
Parse_ReadEnumeration	src/qcommon/parse.c	/^static qboolean Parse_ReadEnumeration( source_t *source )$/;"	f	file:
Parse_ReadEscapeCharacter	src/qcommon/parse.c	/^static int Parse_ReadEscapeCharacter(script_t *script, char *ch)$/;"	f	file:
Parse_ReadLine	src/qcommon/parse.c	/^static int Parse_ReadLine(source_t *source, token_t *token)$/;"	f	file:
Parse_ReadName	src/qcommon/parse.c	/^static int Parse_ReadName(script_t *script, token_t *token)$/;"	f	file:
Parse_ReadNumber	src/qcommon/parse.c	/^static int Parse_ReadNumber(script_t *script, token_t *token)$/;"	f	file:
Parse_ReadPrimitive	src/qcommon/parse.c	/^static int Parse_ReadPrimitive(script_t *script, token_t *token)$/;"	f	file:
Parse_ReadPunctuation	src/qcommon/parse.c	/^static int Parse_ReadPunctuation(script_t *script, token_t *token)$/;"	f	file:
Parse_ReadScriptToken	src/qcommon/parse.c	/^static int Parse_ReadScriptToken(script_t *script, token_t *token)$/;"	f	file:
Parse_ReadSourceToken	src/qcommon/parse.c	/^static int Parse_ReadSourceToken(source_t *source, token_t *token)$/;"	f	file:
Parse_ReadString	src/qcommon/parse.c	/^static int Parse_ReadString(script_t *script, token_t *token, int quote)$/;"	f	file:
Parse_ReadToken	src/qcommon/parse.c	/^static int Parse_ReadToken(source_t *source, token_t *token)$/;"	f	file:
Parse_ReadTokenHandle	src/qcommon/parse.c	/^int Parse_ReadTokenHandle(int handle, pc_token_t *pc_token)$/;"	f
Parse_ReadWhiteSpace	src/qcommon/parse.c	/^static int Parse_ReadWhiteSpace(script_t *script)$/;"	f	file:
Parse_ScriptError	src/qcommon/parse.c	/^__attribute__ ((format (printf, 2, 3))) static void QDECL Parse_ScriptError(script_t *script, char *str, ...)$/;"	f	file:
Parse_ScriptWarning	src/qcommon/parse.c	/^__attribute__ ((format (printf, 2, 3))) static void QDECL Parse_ScriptWarning(script_t *script, char *str, ...)$/;"	f	file:
Parse_SetScriptPunctuations	src/qcommon/parse.c	/^static void Parse_SetScriptPunctuations(script_t *script, punctuation_t *p)$/;"	f	file:
Parse_SourceError	src/qcommon/parse.c	/^__attribute__ ((format (printf, 2, 3))) static void QDECL Parse_SourceError(source_t *source, char *str, ...)$/;"	f	file:
Parse_SourceFileAndLine	src/qcommon/parse.c	/^int Parse_SourceFileAndLine(int handle, char *filename, int *line)$/;"	f
Parse_SourceWarning	src/qcommon/parse.c	/^__attribute__ ((format (printf, 2, 3))) static void QDECL Parse_SourceWarning(source_t *source, char *str, ...)$/;"	f	file:
Parse_StringizeTokens	src/qcommon/parse.c	/^static int Parse_StringizeTokens(token_t *tokens, token_t *token)$/;"	f	file:
Parse_StripDoubleQuotes	src/qcommon/parse.c	/^static void Parse_StripDoubleQuotes(char *string)$/;"	f	file:
Parse_UnreadSignToken	src/qcommon/parse.c	/^static void Parse_UnreadSignToken(source_t *source)$/;"	f	file:
Parse_UnreadSourceToken	src/qcommon/parse.c	/^static int Parse_UnreadSourceToken(source_t *source, token_t *token)$/;"	f	file:
Parse_UnreadToken	src/qcommon/parse.c	/^static void Parse_UnreadToken(source_t *source, token_t *token)$/;"	f	file:
Parse_WhiteSpaceBeforeToken	src/qcommon/parse.c	/^static int Parse_WhiteSpaceBeforeToken(token_t *token)$/;"	f	file:
Pause	src/ui/ui_shared.h	/^  void ( *Pause )( qboolean b );$/;"	m	struct:__anon506
PendingList	src/server/sqlite3.c	/^struct PendingList {$/;"	s	file:
PendingList	src/server/sqlite3.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
PerpendicularVector	src/qcommon/q_math.c	/^void PerpendicularVector( vec3_t dst, const vec3_t src )$/;"	f
Pflag	src/tools/lcc/src/main.c	/^int Pflag;		\/* != 0 if -P specified *\/$/;"	v
PgFreeslot	src/server/sqlite3.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	src/server/sqlite3.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgHdr	src/server/sqlite3.c	/^struct PgHdr {$/;"	s	file:
PgHdr	src/server/sqlite3.c	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr	file:
PgHdr1	src/server/sqlite3.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	src/server/sqlite3.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
Pgno	src/server/sqlite3.c	/^typedef u32 Pgno;$/;"	t	file:
PlaneFromPoints	src/qcommon/q_math.c	/^qboolean PlaneFromPoints( vec4_t plane, const vec3_t a, const vec3_t b, const vec3_t c ) {$/;"	f
PlaneTypeForNormal	src/qcommon/q_shared.h	1098;"	d
PlaymapFlag_Clear	src/game/g_playmap.h	83;"	d
PlaymapFlag_IsSet	src/game/g_playmap.h	82;"	d
PlaymapFlag_Set	src/game/g_playmap.h	81;"	d
PmaReader	src/server/sqlite3.c	/^struct PmaReader {$/;"	s	file:
PmaReader	src/server/sqlite3.c	/^typedef struct PmaReader PmaReader;         \/* Incrementally read one PMA *\/$/;"	t	typeref:struct:PmaReader	file:
PmaWriter	src/server/sqlite3.c	/^struct PmaWriter {$/;"	s	file:
PmaWriter	src/server/sqlite3.c	/^typedef struct PmaWriter PmaWriter;         \/* Incrementally write one PMA *\/$/;"	t	typeref:struct:PmaWriter	file:
Pmove	src/game/bg_pmove.c	/^void Pmove( pmove_t *pmove )$/;"	f
PmoveSingle	src/game/bg_pmove.c	/^void PmoveSingle( pmove_t *pmove )$/;"	f
PorterContext	src/server/sqlite3.c	/^struct PorterContext {$/;"	s	file:
PorterContext	src/server/sqlite3.c	/^typedef struct PorterContext PorterContext;$/;"	t	typeref:struct:PorterContext	file:
PorterRule	src/server/sqlite3.c	/^struct PorterRule {$/;"	s	file:
PorterRule	src/server/sqlite3.c	/^typedef struct PorterRule PorterRule;$/;"	t	typeref:struct:PorterRule	file:
PorterTokenizer	src/server/sqlite3.c	/^struct PorterTokenizer {$/;"	s	file:
PorterTokenizer	src/server/sqlite3.c	/^typedef struct PorterTokenizer PorterTokenizer;$/;"	t	typeref:struct:PorterTokenizer	file:
PoslistCallbackCtx	src/server/sqlite3.c	/^struct PoslistCallbackCtx {$/;"	s	file:
PoslistCallbackCtx	src/server/sqlite3.c	/^typedef struct PoslistCallbackCtx PoslistCallbackCtx;$/;"	t	typeref:struct:PoslistCallbackCtx	file:
PoslistOffsetsCtx	src/server/sqlite3.c	/^struct PoslistOffsetsCtx {$/;"	s	file:
PoslistOffsetsCtx	src/server/sqlite3.c	/^typedef struct PoslistOffsetsCtx PoslistOffsetsCtx;$/;"	t	typeref:struct:PoslistOffsetsCtx	file:
PragFlag_NeedSchema	src/server/sqlite3.c	107262;"	d	file:
PragFlag_ReadOnly	src/server/sqlite3.c	107263;"	d	file:
PragTyp_ACTIVATE_EXTENSIONS	src/server/sqlite3.c	107256;"	d	file:
PragTyp_AUTO_VACUUM	src/server/sqlite3.c	107220;"	d	file:
PragTyp_BUSY_TIMEOUT	src/server/sqlite3.c	107222;"	d	file:
PragTyp_CACHE_SIZE	src/server/sqlite3.c	107223;"	d	file:
PragTyp_CACHE_SPILL	src/server/sqlite3.c	107224;"	d	file:
PragTyp_CASE_SENSITIVE_LIKE	src/server/sqlite3.c	107225;"	d	file:
PragTyp_COLLATION_LIST	src/server/sqlite3.c	107226;"	d	file:
PragTyp_COMPILE_OPTIONS	src/server/sqlite3.c	107227;"	d	file:
PragTyp_DATABASE_LIST	src/server/sqlite3.c	107229;"	d	file:
PragTyp_DATA_STORE_DIRECTORY	src/server/sqlite3.c	107228;"	d	file:
PragTyp_DEFAULT_CACHE_SIZE	src/server/sqlite3.c	107230;"	d	file:
PragTyp_ENCODING	src/server/sqlite3.c	107231;"	d	file:
PragTyp_FLAG	src/server/sqlite3.c	107221;"	d	file:
PragTyp_FOREIGN_KEY_CHECK	src/server/sqlite3.c	107232;"	d	file:
PragTyp_FOREIGN_KEY_LIST	src/server/sqlite3.c	107233;"	d	file:
PragTyp_HEADER_VALUE	src/server/sqlite3.c	107219;"	d	file:
PragTyp_HEXKEY	src/server/sqlite3.c	107257;"	d	file:
PragTyp_INCREMENTAL_VACUUM	src/server/sqlite3.c	107234;"	d	file:
PragTyp_INDEX_INFO	src/server/sqlite3.c	107235;"	d	file:
PragTyp_INDEX_LIST	src/server/sqlite3.c	107236;"	d	file:
PragTyp_INTEGRITY_CHECK	src/server/sqlite3.c	107237;"	d	file:
PragTyp_JOURNAL_MODE	src/server/sqlite3.c	107238;"	d	file:
PragTyp_JOURNAL_SIZE_LIMIT	src/server/sqlite3.c	107239;"	d	file:
PragTyp_KEY	src/server/sqlite3.c	107258;"	d	file:
PragTyp_LOCKING_MODE	src/server/sqlite3.c	107241;"	d	file:
PragTyp_LOCK_PROXY_FILE	src/server/sqlite3.c	107240;"	d	file:
PragTyp_LOCK_STATUS	src/server/sqlite3.c	107260;"	d	file:
PragTyp_MMAP_SIZE	src/server/sqlite3.c	107243;"	d	file:
PragTyp_PAGE_COUNT	src/server/sqlite3.c	107242;"	d	file:
PragTyp_PAGE_SIZE	src/server/sqlite3.c	107244;"	d	file:
PragTyp_PARSER_TRACE	src/server/sqlite3.c	107261;"	d	file:
PragTyp_REKEY	src/server/sqlite3.c	107259;"	d	file:
PragTyp_SECURE_DELETE	src/server/sqlite3.c	107245;"	d	file:
PragTyp_SHRINK_MEMORY	src/server/sqlite3.c	107246;"	d	file:
PragTyp_SOFT_HEAP_LIMIT	src/server/sqlite3.c	107247;"	d	file:
PragTyp_STATS	src/server/sqlite3.c	107248;"	d	file:
PragTyp_SYNCHRONOUS	src/server/sqlite3.c	107249;"	d	file:
PragTyp_TABLE_INFO	src/server/sqlite3.c	107250;"	d	file:
PragTyp_TEMP_STORE	src/server/sqlite3.c	107251;"	d	file:
PragTyp_TEMP_STORE_DIRECTORY	src/server/sqlite3.c	107252;"	d	file:
PragTyp_THREADS	src/server/sqlite3.c	107253;"	d	file:
PragTyp_WAL_AUTOCHECKPOINT	src/server/sqlite3.c	107254;"	d	file:
PragTyp_WAL_CHECKPOINT	src/server/sqlite3.c	107255;"	d	file:
PredictPaeth	src/renderercommon/tr_image_png.c	/^static uint8_t PredictPaeth(uint8_t a, uint8_t b, uint8_t c)$/;"	f	file:
Print	src/ui/ui_shared.h	/^  void ( *Print )( const char *msg, ... ) __attribute__ ((format (printf, 1, 2)));$/;"	m	struct:__anon506
PrintCvarMatches	src/qcommon/common.c	/^static void PrintCvarMatches( const char *s ) {$/;"	f	file:
PrintHelp	src/master/master.c	/^static void PrintHelp (void)$/;"	f	file:
PrintMatches	src/qcommon/common.c	/^static void PrintMatches( const char *s ) {$/;"	f	file:
PrintPacket	src/master/master.c	/^static void PrintPacket (const char* packet, size_t length)$/;"	f	file:
PrintToSourceLine	src/tools/lcc/src/bytecode.c	/^static void PrintToSourceLine( int line ) {$/;"	f	file:
Printf	src/renderercommon/tr_public.h	/^	void	(QDECL *Printf)( int printLevel, const char *fmt, ...) __attribute__ ((format (printf, 2, 3)));$/;"	m	struct:__anon109
PrintfArguments	src/server/sqlite3.c	/^struct PrintfArguments {$/;"	s	file:
PrintfArguments	src/server/sqlite3.c	/^typedef struct PrintfArguments PrintfArguments;$/;"	t	typeref:struct:PrintfArguments	file:
ProjectDlightTexture	src/renderergl1/tr_shade.c	/^static void ProjectDlightTexture( void ) {$/;"	f	file:
ProjectDlightTexture	src/renderergl2/tr_shade.c	/^static void ProjectDlightTexture( void ) {$/;"	f	file:
ProjectDlightTexture_altivec	src/renderergl1/tr_shade.c	/^static void ProjectDlightTexture_altivec( void ) {$/;"	f	file:
ProjectDlightTexture_scalar	src/renderergl1/tr_shade.c	/^static void ProjectDlightTexture_scalar( void ) {$/;"	f	file:
ProjectPointOnPlane	src/qcommon/q_math.c	/^void ProjectPointOnPlane( vec3_t dst, const vec3_t p, const vec3_t normal )$/;"	f
ProjectPointOntoVector	src/qcommon/q_math.c	/^void ProjectPointOntoVector( vec3_t point, vec3_t vStart, vec3_t vEnd, vec3_t vProj )$/;"	f
ProjectPshadowVBOGLSL	src/renderergl2/tr_shade.c	/^static void ProjectPshadowVBOGLSL( void ) {$/;"	f	file:
ProjectRadius	src/renderergl1/tr_mesh.c	/^static float ProjectRadius( float r, vec3_t location )$/;"	f	file:
ProjectRadius	src/renderergl2/tr_mesh.c	/^static float ProjectRadius( float r, vec3_t location )$/;"	f	file:
Ptr	src/renderercommon/tr_image_png.c	/^	byte *Ptr;$/;"	m	struct:BufferedFile	file:
PutPointsOnCurve	src/renderergl1/tr_curve.c	/^static void PutPointsOnCurve( drawVert_t	ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE], $/;"	f	file:
PutPointsOnCurve	src/renderergl2/tr_curve.c	/^static void PutPointsOnCurve( srfVert_t	ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE], $/;"	f	file:
Q	GNUmakefile	/^Q=$/;"	m
Q	GNUmakefile	/^Q=@$/;"	m
Q3ASM	GNUmakefile	/^Q3ASM       = $(B)\/tools\/q3asm$(TOOLS_BINEXT)$/;"	m
Q3ASMDIR	GNUmakefile	/^Q3ASMDIR=$(MOUNT_DIR)\/tools\/asm$/;"	m
Q3ASMOBJ	GNUmakefile	/^Q3ASMOBJ = \\$/;"	m
Q3CONFIG_CFG	src/qcommon/qcommon.h	595;"	d
Q3CONFIG_CFG	src/qcommon/qcommon.h	597;"	d
Q3CPP	GNUmakefile	/^Q3CPP       = $(B)\/tools\/q3cpp$(TOOLS_BINEXT)$/;"	m
Q3CPPDIR	GNUmakefile	/^Q3CPPDIR=$(MOUNT_DIR)\/tools\/lcc\/cpp$/;"	m
Q3CPPOBJ	GNUmakefile	/^Q3CPPOBJ = \\$/;"	m
Q3DOBJ	GNUmakefile	/^Q3DOBJ = \\$/;"	m
Q3IMAGE_BYTESPERPIXEL	src/renderercommon/tr_image_png.c	42;"	d	file:
Q3LCC	GNUmakefile	/^Q3LCC       = $(B)\/tools\/q3lcc$(TOOLS_BINEXT)$/;"	m
Q3LCCETCDIR	GNUmakefile	/^Q3LCCETCDIR=$(MOUNT_DIR)\/tools\/lcc\/etc$/;"	m
Q3LCCOBJ	GNUmakefile	/^Q3LCCOBJ = \\$/;"	m
Q3LCCSRCDIR	GNUmakefile	/^Q3LCCSRCDIR=$(MOUNT_DIR)\/tools\/lcc\/src$/;"	m
Q3OBJ	GNUmakefile	/^Q3OBJ = \\$/;"	m
Q3R2OBJ	GNUmakefile	/^Q3R2OBJ = \\$/;"	m
Q3R2STRINGOBJ	GNUmakefile	/^Q3R2STRINGOBJ = \\$/;"	m
Q3RCC	GNUmakefile	/^Q3RCC       = $(B)\/tools\/q3rcc$(TOOLS_BINEXT)$/;"	m
Q3RCCOBJ	GNUmakefile	/^Q3RCCOBJ = \\$/;"	m
Q3ROBJ	GNUmakefile	/^Q3ROBJ = \\$/;"	m
Q3_BIG_ENDIAN	src/qcommon/q_platform.h	156;"	d
Q3_BIG_ENDIAN	src/qcommon/q_platform.h	220;"	d
Q3_BIG_ENDIAN	src/qcommon/q_platform.h	262;"	d
Q3_BIG_ENDIAN	src/qcommon/q_platform.h	289;"	d
Q3_BIG_ENDIAN	src/qcommon/q_platform.h	308;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	107;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	134;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	159;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	164;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	222;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	264;"	d
Q3_LITTLE_ENDIAN	src/qcommon/q_platform.h	291;"	d
Q3_VERSION	src/qcommon/q_shared.h	38;"	d
QALIGN	src/qcommon/q_shared.h	187;"	d
QALIGN	src/qcommon/q_shared.h	189;"	d
QAL_Init	src/client/qal.c	/^qboolean QAL_Init(const char *libname)$/;"	f
QAL_Shutdown	src/client/qal.c	/^void QAL_Shutdown( void )$/;"	f
QBSBIT	src/tools/lcc/cpp/lex.c	27;"	d	file:
QCALL	src/qcommon/q_platform.h	116;"	d
QCALL	src/qcommon/q_platform.h	117;"	d
QCALL	src/qcommon/q_platform.h	77;"	d
QCALL	src/qcommon/q_platform.h	89;"	d
QCALL	src/qcommon/q_platform.h	90;"	d
QCONSOLE_HISTORY	src/sys/con_win32.c	29;"	d	file:
QCopyFile	src/tools/asm/cmdlib.c	/^void QCopyFile (const char *from, const char *to)$/;"	f
QDECL	src/qcommon/q_platform.h	113;"	d
QDECL	src/qcommon/q_platform.h	114;"	d
QDECL	src/qcommon/q_platform.h	76;"	d
QDECL	src/qcommon/q_platform.h	86;"	d
QDECL	src/qcommon/q_platform.h	87;"	d
QGL_Init	src/null/null_glimp.c	/^qboolean QGL_Init( const char *dllname ) {$/;"	f
QGL_Shutdown	src/null/null_glimp.c	/^void		QGL_Shutdown( void ) {$/;"	f
QKEY_FILE	src/client/client.h	175;"	d
QKEY_SIZE	src/client/client.h	176;"	d
QROUNDX87	src/asm/snapvector.c	57;"	d	file:
QSORT_FOGNUM_SHIFT	src/renderergl1/tr_local.h	785;"	d
QSORT_FOGNUM_SHIFT	src/renderergl2/tr_local.h	1318;"	d
QSORT_PSHADOW_SHIFT	src/renderergl2/tr_local.h	1324;"	d
QSORT_REFENTITYNUM_SHIFT	src/renderergl1/tr_local.h	786;"	d
QSORT_REFENTITYNUM_SHIFT	src/renderergl2/tr_local.h	1319;"	d
QSORT_SHADERNUM_SHIFT	src/renderergl1/tr_local.h	787;"	d
QSORT_SHADERNUM_SHIFT	src/renderergl2/tr_local.h	1320;"	d
QUEST	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
QUEUE_MINUS1	src/game/g_local.h	476;"	d
QUEUE_PLUS1	src/game/g_local.h	475;"	d
Q_COLOR_ESCAPE	src/qcommon/q_shared.h	408;"	d
Q_CleanStr	src/qcommon/q_shared.c	/^char *Q_CleanStr( char *string ) {$/;"	f
Q_CountChar	src/qcommon/q_shared.c	/^int Q_CountChar(const char *string, char tocount)$/;"	f
Q_EXPORT	src/qcommon/q_shared.h	93;"	d
Q_EXPORT	src/qcommon/q_shared.h	95;"	d
Q_EXPORT	src/qcommon/q_shared.h	97;"	d
Q_EXPORT	src/qcommon/q_shared.h	99;"	d
Q_IsColorString	src/qcommon/q_shared.h	409;"	d
Q_PI	src/tools/asm/mathlib.h	44;"	d
Q_ParseNewlines	src/qcommon/q_shared.c	/^void Q_ParseNewlines( char *dest, const char *src, int destsize )$/;"	f
Q_PrintStrlen	src/qcommon/q_shared.c	/^int Q_PrintStrlen( const char *string ) {$/;"	f
Q_SnapVector	src/qcommon/common.c	/^	void (QDECL *Q_SnapVector)(vec3_t vec);$/;"	v
Q_SnapVector	src/qcommon/q_shared.h	475;"	d
Q_SnapVector	src/qcommon/q_shared.h	493;"	d
Q_StripIndentMarker	src/qcommon/q_shared.c	/^void Q_StripIndentMarker(char *string)$/;"	f
Q_VMftol	src/qcommon/common.c	/^	int (*Q_VMftol)(void);$/;"	v
Q_VMftol	src/qcommon/common.c	/^	int (QDECL *Q_VMftol)(void);$/;"	v
Q_acos	src/qcommon/q_math.c	/^float Q_acos(float c) {$/;"	f
Q_cleanDelimitedString	src/qcommon/q_shared.c	/^void Q_cleanDelimitedString( char *dest, const char *src )$/;"	f
Q_crandom	src/qcommon/q_math.c	/^float	Q_crandom( int *seed ) {$/;"	f
Q_fabs	src/qcommon/q_math.c	/^float Q_fabs( float f ) {$/;"	f
Q_fabs	src/qcommon/q_shared.h	/^static ID_INLINE float Q_fabs(float x) {$/;"	f
Q_fabs	src/qcommon/q_shared.h	542;"	d
Q_filelength	src/tools/asm/cmdlib.c	/^int Q_filelength (FILE *f)$/;"	f
Q_ftol	src/qcommon/common.c	/^	long (QDECL *Q_ftol)(float f);$/;"	v
Q_ftol	src/qcommon/q_shared.h	474;"	d
Q_ftol	src/qcommon/q_shared.h	492;"	d
Q_getwd	src/tools/asm/cmdlib.c	/^void Q_getwd (char *out)$/;"	f
Q_isalpha	src/qcommon/q_shared.c	/^int Q_isalpha( int c )$/;"	f
Q_isanumber	src/qcommon/q_shared.c	/^qboolean Q_isanumber( const char *s )$/;"	f
Q_isintegral	src/qcommon/q_shared.c	/^qboolean Q_isintegral( float f )$/;"	f
Q_islower	src/qcommon/q_shared.c	/^int Q_islower( int c )$/;"	f
Q_isnan	src/qcommon/q_math.c	/^int Q_isnan( float x )$/;"	f
Q_isprint	src/qcommon/q_shared.c	/^int Q_isprint( int c )$/;"	f
Q_isupper	src/qcommon/q_shared.c	/^int Q_isupper( int c )$/;"	f
Q_log2	src/qcommon/q_math.c	/^int Q_log2( int val ) {$/;"	f
Q_mkdir	src/tools/asm/cmdlib.c	/^void Q_mkdir (const char *path)$/;"	f
Q_rand	src/qcommon/q_math.c	/^int		Q_rand( int *seed ) {$/;"	f
Q_random	src/qcommon/q_math.c	/^float	Q_random( int *seed ) {$/;"	f
Q_rsqrt	src/qcommon/q_math.c	/^float Q_rsqrt( float number )$/;"	f
Q_rsqrt	src/qcommon/q_shared.h	/^static ID_INLINE float Q_rsqrt( float number ) {$/;"	f
Q_snprintf	src/game/bg_lib.c	/^int Q_snprintf(char *str, size_t length, const char *fmt, ...)$/;"	f
Q_snprintf	src/qcommon/q_shared.h	151;"	d
Q_snprintf	src/qcommon/q_shared.h	156;"	d
Q_strcat	src/qcommon/q_shared.c	/^void Q_strcat( char *dest, int size, const char *src ) {$/;"	f
Q_stricmp	src/qcommon/q_shared.c	/^int Q_stricmp (const char *s1, const char *s2) {$/;"	f
Q_stricmp	src/tools/asm/cmdlib.c	/^int Q_stricmp (const char *s1, const char *s2)$/;"	f
Q_stricmp_exact	src/qcommon/q_shared.h	217;"	d
Q_stricmpn	src/qcommon/q_shared.c	/^int Q_stricmpn (const char *s1, const char *s2, int n) {$/;"	f
Q_stristr	src/qcommon/q_shared.c	/^const char *Q_stristr( const char *s, const char *find)$/;"	f
Q_strlwr	src/qcommon/q_shared.c	/^char *Q_strlwr( char *s1 ) {$/;"	f
Q_strncasecmp	src/tools/asm/cmdlib.c	/^int Q_strncasecmp (const char *s1, const char *s2, int n)$/;"	f
Q_strncmp	src/qcommon/q_shared.c	/^int Q_strncmp (const char *s1, const char *s2, int n) {$/;"	f
Q_strncpyz	src/qcommon/q_shared.c	/^void Q_strncpyz( char *dest, const char *src, int destsize ) {$/;"	f
Q_strupr	src/qcommon/q_shared.c	/^char *Q_strupr( char *s1 ) {$/;"	f
Q_vsnprintf	src/game/bg_lib.c	/^int Q_vsnprintf(char *str, size_t length, const char *fmt, va_list args)$/;"	f
Q_vsnprintf	src/qcommon/q_shared.c	/^int Q_vsnprintf(char *str, size_t size, const char *format, va_list ap)$/;"	f
Q_vsnprintf	src/qcommon/q_shared.h	155;"	d
RA	src/qcommon/vm_powerpc_asm.c	342;"	d	file:
RA0	src/qcommon/vm_powerpc_asm.c	347;"	d	file:
RAD2DEG	src/qcommon/q_shared.h	456;"	d
RAD2DEG	src/tools/asm/mathlib.h	46;"	d
RADIUSSTEP	src/cgame/cg_ents.c	598;"	d	file:
RADIUS_EPSILON	src/qcommon/cm_trace.c	930;"	d	file:
RAND_MAX	src/game/bg_lib.h	88;"	d
RANLIB	GNUmakefile	/^        RANLIB=i386-apple-darwin13-ranlib$/;"	m
RANLIB	GNUmakefile	/^      RANLIB=x86_64-apple-darwin13-ranlib$/;"	m
RANLIB	GNUmakefile	/^  RANLIB=ranlib$/;"	m
RAS	src/qcommon/vm_powerpc_asm.c	353;"	d	file:
RAW_VOTE_STRING	src/qcommon/q_shared.h	/^  RAW_VOTE_STRING,$/;"	e	enum:__anon466
RA_MASK	src/qcommon/vm_powerpc_asm.c	343;"	d	file:
RB	src/qcommon/vm_powerpc_asm.c	357;"	d	file:
RBS	src/qcommon/vm_powerpc_asm.c	364;"	d	file:
RBU_CREATE_STATE	src/server/sqlite3.c	161639;"	d	file:
RBU_DELETE	src/server/sqlite3.c	161757;"	d	file:
RBU_IDX_DELETE	src/server/sqlite3.c	161759;"	d	file:
RBU_IDX_INSERT	src/server/sqlite3.c	161760;"	d	file:
RBU_INSERT	src/server/sqlite3.c	161756;"	d	file:
RBU_PK_EXTERNAL	src/server/sqlite3.c	161747;"	d	file:
RBU_PK_IPK	src/server/sqlite3.c	161746;"	d	file:
RBU_PK_NONE	src/server/sqlite3.c	161745;"	d	file:
RBU_PK_NOTABLE	src/server/sqlite3.c	161744;"	d	file:
RBU_PK_VTAB	src/server/sqlite3.c	161749;"	d	file:
RBU_PK_WITHOUT_ROWID	src/server/sqlite3.c	161748;"	d	file:
RBU_REPLACE	src/server/sqlite3.c	161758;"	d	file:
RBU_STAGE_CAPTURE	src/server/sqlite3.c	161634;"	d	file:
RBU_STAGE_CKPT	src/server/sqlite3.c	161635;"	d	file:
RBU_STAGE_DONE	src/server/sqlite3.c	161636;"	d	file:
RBU_STAGE_MOVE	src/server/sqlite3.c	161633;"	d	file:
RBU_STAGE_OAL	src/server/sqlite3.c	161632;"	d	file:
RBU_STATE_CKPT	src/server/sqlite3.c	161627;"	d	file:
RBU_STATE_COOKIE	src/server/sqlite3.c	161628;"	d	file:
RBU_STATE_IDX	src/server/sqlite3.c	161624;"	d	file:
RBU_STATE_OALSZ	src/server/sqlite3.c	161629;"	d	file:
RBU_STATE_PHASEONESTEP	src/server/sqlite3.c	161630;"	d	file:
RBU_STATE_PROGRESS	src/server/sqlite3.c	161626;"	d	file:
RBU_STATE_ROW	src/server/sqlite3.c	161625;"	d	file:
RBU_STATE_STAGE	src/server/sqlite3.c	161622;"	d	file:
RBU_STATE_TBL	src/server/sqlite3.c	161623;"	d	file:
RBU_UPDATE	src/server/sqlite3.c	161762;"	d	file:
RB_AddDlightFlares	src/renderergl1/tr_flares.c	/^void RB_AddDlightFlares( void ) {$/;"	f
RB_AddDlightFlares	src/renderergl2/tr_flares.c	/^void RB_AddDlightFlares( void ) {$/;"	f
RB_AddFlare	src/renderergl1/tr_flares.c	/^void RB_AddFlare( void *surface, int fogNum, vec3_t point, vec3_t color, vec3_t normal ) {$/;"	f
RB_AddFlare	src/renderergl2/tr_flares.c	/^void RB_AddFlare( void *surface, int fogNum, vec3_t point, vec3_t color, vec3_t normal ) {$/;"	f
RB_AddQuadStamp	src/renderergl1/tr_surface.c	/^void RB_AddQuadStamp( vec3_t origin, vec3_t left, vec3_t up, byte *color ) {$/;"	f
RB_AddQuadStamp	src/renderergl2/tr_surface.c	/^void RB_AddQuadStamp( vec3_t origin, vec3_t left, vec3_t up, float color[4] ) {$/;"	f
RB_AddQuadStampExt	src/renderergl1/tr_surface.c	/^void RB_AddQuadStampExt( vec3_t origin, vec3_t left, vec3_t up, byte *color, float s1, float t1, float s2, float t2 ) {$/;"	f
RB_AddQuadStampExt	src/renderergl2/tr_surface.c	/^void RB_AddQuadStampExt( vec3_t origin, vec3_t left, vec3_t up, float color[4], float s1, float t1, float s2, float t2 ) {$/;"	f
RB_BeginDrawingView	src/renderergl1/tr_backend.c	/^void RB_BeginDrawingView (void) {$/;"	f
RB_BeginDrawingView	src/renderergl2/tr_backend.c	/^void RB_BeginDrawingView (void) {$/;"	f
RB_BeginSurface	src/renderergl1/tr_shade.c	/^void RB_BeginSurface( shader_t *shader, int fogNum ) {$/;"	f
RB_BeginSurface	src/renderergl2/tr_shade.c	/^void RB_BeginSurface( shader_t *shader, int fogNum, int cubemapIndex ) {$/;"	f
RB_BlurAxis	src/renderergl2/tr_postprocess.c	/^static void RB_BlurAxis(FBO_t *srcFbo, FBO_t *dstFbo, float strength, qboolean horizontal)$/;"	f	file:
RB_BokehBlur	src/renderergl2/tr_postprocess.c	/^void RB_BokehBlur(FBO_t *src, ivec4_t srcBox, FBO_t *dst, ivec4_t dstBox, float blur)$/;"	f
RB_CHECKOVERFLOW	src/renderergl1/tr_local.h	1246;"	d
RB_CHECKOVERFLOW	src/renderergl2/tr_local.h	2058;"	d
RB_CalcAlphaFromEntity	src/renderergl1/tr_shade_calc.c	/^void RB_CalcAlphaFromEntity( unsigned char *dstColors )$/;"	f
RB_CalcAlphaFromOneMinusEntity	src/renderergl1/tr_shade_calc.c	/^void RB_CalcAlphaFromOneMinusEntity( unsigned char *dstColors )$/;"	f
RB_CalcBulgeVertexes	src/renderergl1/tr_shade_calc.c	/^void RB_CalcBulgeVertexes( deformStage_t *ds ) {$/;"	f
RB_CalcBulgeVertexes	src/renderergl2/tr_shade_calc.c	/^void RB_CalcBulgeVertexes( deformStage_t *ds ) {$/;"	f
RB_CalcColorFromEntity	src/renderergl1/tr_shade_calc.c	/^void RB_CalcColorFromEntity( unsigned char *dstColors )$/;"	f
RB_CalcColorFromOneMinusEntity	src/renderergl1/tr_shade_calc.c	/^void RB_CalcColorFromOneMinusEntity( unsigned char *dstColors )$/;"	f
RB_CalcDeformNormals	src/renderergl1/tr_shade_calc.c	/^void RB_CalcDeformNormals( deformStage_t *ds ) {$/;"	f
RB_CalcDeformNormals	src/renderergl2/tr_shade_calc.c	/^void RB_CalcDeformNormals( deformStage_t *ds ) {$/;"	f
RB_CalcDeformVertexes	src/renderergl1/tr_shade_calc.c	/^void RB_CalcDeformVertexes( deformStage_t *ds )$/;"	f
RB_CalcDeformVertexes	src/renderergl2/tr_shade_calc.c	/^void RB_CalcDeformVertexes( deformStage_t *ds )$/;"	f
RB_CalcDiffuseColor	src/renderergl1/tr_shade_calc.c	/^void RB_CalcDiffuseColor( unsigned char *colors )$/;"	f
RB_CalcDiffuseColor_altivec	src/renderergl1/tr_shade_calc.c	/^static void RB_CalcDiffuseColor_altivec( unsigned char *colors )$/;"	f	file:
RB_CalcDiffuseColor_scalar	src/renderergl1/tr_shade_calc.c	/^static void RB_CalcDiffuseColor_scalar( unsigned char *colors )$/;"	f	file:
RB_CalcEnvironmentTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcEnvironmentTexCoords( float *st ) $/;"	f
RB_CalcFogTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcFogTexCoords( float *st ) {$/;"	f
RB_CalcFogTexCoords	src/renderergl2/tr_shade_calc.c	/^void RB_CalcFogTexCoords( float *st ) {$/;"	f
RB_CalcModulateAlphasByFog	src/renderergl1/tr_shade_calc.c	/^void RB_CalcModulateAlphasByFog( unsigned char *colors ) {$/;"	f
RB_CalcModulateColorsByFog	src/renderergl1/tr_shade_calc.c	/^void RB_CalcModulateColorsByFog( unsigned char *colors ) {$/;"	f
RB_CalcModulateColorsByFog	src/renderergl2/tr_shade_calc.c	/^void RB_CalcModulateColorsByFog( unsigned char *colors ) {$/;"	f
RB_CalcModulateRGBAsByFog	src/renderergl1/tr_shade_calc.c	/^void RB_CalcModulateRGBAsByFog( unsigned char *colors ) {$/;"	f
RB_CalcMoveVertexes	src/renderergl1/tr_shade_calc.c	/^void RB_CalcMoveVertexes( deformStage_t *ds ) {$/;"	f
RB_CalcMoveVertexes	src/renderergl2/tr_shade_calc.c	/^void RB_CalcMoveVertexes( deformStage_t *ds ) {$/;"	f
RB_CalcRotateTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcRotateTexCoords( float degsPerSecond, float *st )$/;"	f
RB_CalcRotateTexMatrix	src/renderergl2/tr_shade_calc.c	/^void RB_CalcRotateTexMatrix( float degsPerSecond, float *matrix )$/;"	f
RB_CalcScaleTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcScaleTexCoords( const float scale[2], float *st )$/;"	f
RB_CalcScaleTexMatrix	src/renderergl2/tr_shade_calc.c	/^void RB_CalcScaleTexMatrix( const float scale[2], float *matrix )$/;"	f
RB_CalcScrollTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcScrollTexCoords( const float scrollSpeed[2], float *st )$/;"	f
RB_CalcScrollTexMatrix	src/renderergl2/tr_shade_calc.c	/^void RB_CalcScrollTexMatrix( const float scrollSpeed[2], float *matrix )$/;"	f
RB_CalcShaderVertexAttribs	src/renderergl2/tr_shade.c	/^static unsigned int RB_CalcShaderVertexAttribs( shaderCommands_t *input )$/;"	f	file:
RB_CalcSpecularAlpha	src/renderergl1/tr_shade_calc.c	/^void RB_CalcSpecularAlpha( unsigned char *alphas ) {$/;"	f
RB_CalcStretchTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcStretchTexCoords( const waveForm_t *wf, float *st )$/;"	f
RB_CalcStretchTexMatrix	src/renderergl2/tr_shade_calc.c	/^void RB_CalcStretchTexMatrix( const waveForm_t *wf, float *matrix )$/;"	f
RB_CalcTransformTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcTransformTexCoords( const texModInfo_t *tmi, float *st  )$/;"	f
RB_CalcTransformTexMatrix	src/renderergl2/tr_shade_calc.c	/^void RB_CalcTransformTexMatrix( const texModInfo_t *tmi, float *matrix  )$/;"	f
RB_CalcTurbulentFactors	src/renderergl2/tr_shade_calc.c	/^void RB_CalcTurbulentFactors( const waveForm_t *wf, float *amplitude, float *now )$/;"	f
RB_CalcTurbulentTexCoords	src/renderergl1/tr_shade_calc.c	/^void RB_CalcTurbulentTexCoords( const waveForm_t *wf, float *st )$/;"	f
RB_CalcWaveAlpha	src/renderergl1/tr_shade_calc.c	/^void RB_CalcWaveAlpha( const waveForm_t *wf, unsigned char *dstColors )$/;"	f
RB_CalcWaveAlphaSingle	src/renderergl2/tr_shade_calc.c	/^float RB_CalcWaveAlphaSingle( const waveForm_t *wf )$/;"	f
RB_CalcWaveColor	src/renderergl1/tr_shade_calc.c	/^void RB_CalcWaveColor( const waveForm_t *wf, unsigned char *dstColors )$/;"	f
RB_CalcWaveColorSingle	src/renderergl2/tr_shade_calc.c	/^float RB_CalcWaveColorSingle( const waveForm_t *wf )$/;"	f
RB_CapShadowMap	src/renderergl2/tr_backend.c	/^const void *RB_CapShadowMap(const void *data)$/;"	f
RB_CheckOverflow	src/renderergl1/tr_surface.c	/^void RB_CheckOverflow( int verts, int indexes ) {$/;"	f
RB_CheckOverflow	src/renderergl2/tr_surface.c	/^void RB_CheckOverflow( int verts, int indexes ) {$/;"	f
RB_CheckVao	src/renderergl2/tr_surface.c	/^void RB_CheckVao(vao_t *vao)$/;"	f
RB_ClearDepth	src/renderergl1/tr_backend.c	/^const void *RB_ClearDepth(const void *data)$/;"	f
RB_ClearDepth	src/renderergl2/tr_backend.c	/^const void *RB_ClearDepth(const void *data)$/;"	f
RB_ClipSkyPolygons	src/renderergl1/tr_sky.c	/^void RB_ClipSkyPolygons( shaderCommands_t *input )$/;"	f
RB_ClipSkyPolygons	src/renderergl2/tr_sky.c	/^void RB_ClipSkyPolygons( shaderCommands_t *input )$/;"	f
RB_ColorMask	src/renderergl1/tr_backend.c	/^const void *RB_ColorMask(const void *data)$/;"	f
RB_ColorMask	src/renderergl2/tr_backend.c	/^const void *RB_ColorMask(const void *data)$/;"	f
RB_DeformTessGeometry	src/renderergl1/tr_shade_calc.c	/^void RB_DeformTessGeometry( void ) {$/;"	f
RB_DeformTessGeometry	src/renderergl2/tr_shade_calc.c	/^void RB_DeformTessGeometry( void ) {$/;"	f
RB_DrawBuffer	src/renderergl1/tr_backend.c	/^const void	*RB_DrawBuffer( const void *data ) {$/;"	f
RB_DrawBuffer	src/renderergl2/tr_backend.c	/^const void	*RB_DrawBuffer( const void *data ) {$/;"	f
RB_DrawSun	src/renderergl1/tr_sky.c	/^void RB_DrawSun( float scale, shader_t *shader ) {$/;"	f
RB_DrawSun	src/renderergl2/tr_sky.c	/^void RB_DrawSun( float scale, shader_t *shader ) {$/;"	f
RB_DrawSurfs	src/renderergl1/tr_backend.c	/^const void	*RB_DrawSurfs( const void *data ) {$/;"	f
RB_DrawSurfs	src/renderergl2/tr_backend.c	/^const void	*RB_DrawSurfs( const void *data ) {$/;"	f
RB_EndSurface	src/renderergl1/tr_shade.c	/^void RB_EndSurface( void ) {$/;"	f
RB_EndSurface	src/renderergl2/tr_shade.c	/^void RB_EndSurface( void ) {$/;"	f
RB_ExecuteRenderCommands	src/renderergl1/tr_backend.c	/^void RB_ExecuteRenderCommands( const void *data ) {$/;"	f
RB_ExecuteRenderCommands	src/renderergl2/tr_backend.c	/^void RB_ExecuteRenderCommands( const void *data ) {$/;"	f
RB_FogPass	src/renderergl1/tr_shade.c	/^static void RB_FogPass( void ) {$/;"	f	file:
RB_FogPass	src/renderergl2/tr_shade.c	/^static void RB_FogPass( void ) {$/;"	f	file:
RB_GaussianBlur	src/renderergl2/tr_postprocess.c	/^void RB_GaussianBlur(float blur)$/;"	f
RB_HBlur	src/renderergl2/tr_postprocess.c	/^static void RB_HBlur(FBO_t *srcFbo, FBO_t *dstFbo, float strength)$/;"	f	file:
RB_Hyperspace	src/renderergl1/tr_backend.c	/^static void RB_Hyperspace( void ) {$/;"	f	file:
RB_Hyperspace	src/renderergl2/tr_backend.c	/^static void RB_Hyperspace( void ) {$/;"	f	file:
RB_IQMSurfaceAnim	src/renderergl1/tr_model_iqm.c	/^void RB_IQMSurfaceAnim( surfaceType_t *surface ) {$/;"	f
RB_IQMSurfaceAnim	src/renderergl2/tr_model_iqm.c	/^void RB_IQMSurfaceAnim( surfaceType_t *surface ) {$/;"	f
RB_InstantQuad	src/renderergl2/tr_surface.c	/^void RB_InstantQuad(vec4_t quadVerts[4])$/;"	f
RB_InstantQuad2	src/renderergl2/tr_surface.c	/^void RB_InstantQuad2(vec4_t quadVerts[4], vec2_t texCoords[4])$/;"	f
RB_IterateStagesGeneric	src/renderergl1/tr_shade.c	/^static void RB_IterateStagesGeneric( shaderCommands_t *input )$/;"	f	file:
RB_IterateStagesGeneric	src/renderergl2/tr_shade.c	/^static void RB_IterateStagesGeneric( shaderCommands_t *input )$/;"	f	file:
RB_MASK	src/qcommon/vm_powerpc_asm.c	358;"	d	file:
RB_MDRSurfaceAnim	src/renderergl1/tr_animation.c	/^void RB_MDRSurfaceAnim( mdrSurface_t *surface )$/;"	f
RB_MDRSurfaceAnim	src/renderergl2/tr_animation.c	/^void RB_MDRSurfaceAnim( mdrSurface_t *surface )$/;"	f
RB_PostProcess	src/renderergl2/tr_backend.c	/^const void *RB_PostProcess(const void *data)$/;"	f
RB_ProjectionShadowDeform	src/renderergl1/tr_shadows.c	/^void RB_ProjectionShadowDeform( void ) {$/;"	f
RB_ProjectionShadowDeform	src/renderergl2/tr_shadows.c	/^void RB_ProjectionShadowDeform( void ) {$/;"	f
RB_RadialBlur	src/renderergl2/tr_postprocess.c	/^static void RB_RadialBlur(FBO_t *srcFbo, FBO_t *dstFbo, int passes, float stretch, float x, float y, float w, float h, float xcenter, float ycenter, float alpha)$/;"	f	file:
RB_ReadPixels	src/renderergl1/tr_init.c	/^byte *RB_ReadPixels(int x, int y, int width, int height, size_t *offset, int *padlen)$/;"	f
RB_ReadPixels	src/renderergl2/tr_init.c	/^byte *RB_ReadPixels(int x, int y, int width, int height, size_t *offset, int *padlen)$/;"	f
RB_RenderDrawSurfList	src/renderergl1/tr_backend.c	/^void RB_RenderDrawSurfList( drawSurf_t *drawSurfs, int numDrawSurfs ) {$/;"	f
RB_RenderDrawSurfList	src/renderergl2/tr_backend.c	/^void RB_RenderDrawSurfList( drawSurf_t *drawSurfs, int numDrawSurfs ) {$/;"	f
RB_RenderFlare	src/renderergl1/tr_flares.c	/^void RB_RenderFlare( flare_t *f ) {$/;"	f
RB_RenderFlare	src/renderergl2/tr_flares.c	/^void RB_RenderFlare( flare_t *f ) {$/;"	f
RB_RenderFlares	src/renderergl1/tr_flares.c	/^void RB_RenderFlares (void) {$/;"	f
RB_RenderFlares	src/renderergl2/tr_flares.c	/^void RB_RenderFlares (void) {$/;"	f
RB_RenderShadowmap	src/renderergl2/tr_shade.c	/^static void RB_RenderShadowmap( shaderCommands_t *input )$/;"	f	file:
RB_SetColor	src/renderergl1/tr_backend.c	/^const void	*RB_SetColor( const void *data ) {$/;"	f
RB_SetColor	src/renderergl2/tr_backend.c	/^const void	*RB_SetColor( const void *data ) {$/;"	f
RB_SetGL2D	src/renderergl1/tr_backend.c	/^void	RB_SetGL2D (void) {$/;"	f
RB_SetGL2D	src/renderergl2/tr_backend.c	/^void	RB_SetGL2D (void) {$/;"	f
RB_ShadowFinish	src/renderergl1/tr_shadows.c	/^void RB_ShadowFinish( void ) {$/;"	f
RB_ShadowFinish	src/renderergl2/tr_shadows.c	/^void RB_ShadowFinish( void ) {$/;"	f
RB_ShadowTessEnd	src/renderergl1/tr_shadows.c	/^void RB_ShadowTessEnd( void ) {$/;"	f
RB_ShadowTessEnd	src/renderergl2/tr_shadows.c	/^void RB_ShadowTessEnd( void ) {$/;"	f
RB_ShowImages	src/renderergl1/tr_backend.c	/^void RB_ShowImages( void ) {$/;"	f
RB_ShowImages	src/renderergl2/tr_backend.c	/^void RB_ShowImages( void ) {$/;"	f
RB_StageIteratorGeneric	src/renderergl1/tr_shade.c	/^void RB_StageIteratorGeneric( void )$/;"	f
RB_StageIteratorGeneric	src/renderergl2/tr_shade.c	/^void RB_StageIteratorGeneric( void )$/;"	f
RB_StageIteratorLightmappedMultitexture	src/renderergl1/tr_shade.c	/^void RB_StageIteratorLightmappedMultitexture( void ) {$/;"	f
RB_StageIteratorSky	src/renderergl1/tr_sky.c	/^void RB_StageIteratorSky( void ) {$/;"	f
RB_StageIteratorSky	src/renderergl2/tr_sky.c	/^void RB_StageIteratorSky( void ) {$/;"	f
RB_StageIteratorVertexLitTexture	src/renderergl1/tr_shade.c	/^void RB_StageIteratorVertexLitTexture( void )$/;"	f
RB_StretchPic	src/renderergl1/tr_backend.c	/^const void *RB_StretchPic ( const void *data ) {$/;"	f
RB_StretchPic	src/renderergl2/tr_backend.c	/^const void *RB_StretchPic ( const void *data ) {$/;"	f
RB_SunRays	src/renderergl2/tr_postprocess.c	/^void RB_SunRays(FBO_t *srcFbo, ivec4_t srcBox, FBO_t *dstFbo, ivec4_t dstBox)$/;"	f
RB_SurfaceAxis	src/renderergl1/tr_surface.c	/^static void RB_SurfaceAxis( void ) {$/;"	f	file:
RB_SurfaceAxis	src/renderergl2/tr_surface.c	/^static void RB_SurfaceAxis( void ) {$/;"	f	file:
RB_SurfaceBad	src/renderergl1/tr_surface.c	/^static void RB_SurfaceBad( surfaceType_t *surfType ) {$/;"	f	file:
RB_SurfaceBad	src/renderergl2/tr_surface.c	/^static void RB_SurfaceBad( surfaceType_t *surfType ) {$/;"	f	file:
RB_SurfaceBeam	src/renderergl1/tr_surface.c	/^static void RB_SurfaceBeam( void )$/;"	f	file:
RB_SurfaceBeam	src/renderergl2/tr_surface.c	/^static void RB_SurfaceBeam( void )$/;"	f	file:
RB_SurfaceEntity	src/renderergl1/tr_surface.c	/^static void RB_SurfaceEntity( surfaceType_t *surfType ) {$/;"	f	file:
RB_SurfaceEntity	src/renderergl2/tr_surface.c	/^static void RB_SurfaceEntity( surfaceType_t *surfType ) {$/;"	f	file:
RB_SurfaceFace	src/renderergl1/tr_surface.c	/^static void RB_SurfaceFace( srfSurfaceFace_t *surf ) {$/;"	f	file:
RB_SurfaceFace	src/renderergl2/tr_surface.c	/^static void RB_SurfaceFace( srfBspSurface_t *srf ) {$/;"	f	file:
RB_SurfaceFlare	src/renderergl1/tr_surface.c	/^static void RB_SurfaceFlare(srfFlare_t *surf)$/;"	f	file:
RB_SurfaceFlare	src/renderergl2/tr_surface.c	/^static void RB_SurfaceFlare(srfFlare_t *surf)$/;"	f	file:
RB_SurfaceGrid	src/renderergl1/tr_surface.c	/^static void RB_SurfaceGrid( srfGridMesh_t *cv ) {$/;"	f	file:
RB_SurfaceGrid	src/renderergl2/tr_surface.c	/^static void RB_SurfaceGrid( srfBspSurface_t *srf ) {$/;"	f	file:
RB_SurfaceLightningBolt	src/renderergl1/tr_surface.c	/^static void RB_SurfaceLightningBolt( void ) {$/;"	f	file:
RB_SurfaceLightningBolt	src/renderergl2/tr_surface.c	/^static void RB_SurfaceLightningBolt( void ) {$/;"	f	file:
RB_SurfaceMesh	src/renderergl1/tr_surface.c	/^static void RB_SurfaceMesh(md3Surface_t *surface) {$/;"	f	file:
RB_SurfaceMesh	src/renderergl2/tr_surface.c	/^static void RB_SurfaceMesh(mdvSurface_t *surface) {$/;"	f	file:
RB_SurfacePolychain	src/renderergl1/tr_surface.c	/^static void RB_SurfacePolychain( srfPoly_t *p ) {$/;"	f	file:
RB_SurfacePolychain	src/renderergl2/tr_surface.c	/^static void RB_SurfacePolychain( srfPoly_t *p ) {$/;"	f	file:
RB_SurfaceRailCore	src/renderergl1/tr_surface.c	/^static void RB_SurfaceRailCore( void ) {$/;"	f	file:
RB_SurfaceRailCore	src/renderergl2/tr_surface.c	/^static void RB_SurfaceRailCore( void ) {$/;"	f	file:
RB_SurfaceRailRings	src/renderergl1/tr_surface.c	/^static void RB_SurfaceRailRings( void ) {$/;"	f	file:
RB_SurfaceRailRings	src/renderergl2/tr_surface.c	/^static void RB_SurfaceRailRings( void ) {$/;"	f	file:
RB_SurfaceSkip	src/renderergl1/tr_surface.c	/^static void RB_SurfaceSkip( void *surf ) {$/;"	f	file:
RB_SurfaceSkip	src/renderergl2/tr_surface.c	/^static void RB_SurfaceSkip( void *surf ) {$/;"	f	file:
RB_SurfaceSprite	src/renderergl1/tr_surface.c	/^static void RB_SurfaceSprite( void ) {$/;"	f	file:
RB_SurfaceSprite	src/renderergl2/tr_surface.c	/^static void RB_SurfaceSprite( void ) {$/;"	f	file:
RB_SurfaceTriangles	src/renderergl1/tr_surface.c	/^static void RB_SurfaceTriangles( srfTriangles_t *srf ) {$/;"	f	file:
RB_SurfaceTriangles	src/renderergl2/tr_surface.c	/^static void RB_SurfaceTriangles( srfBspSurface_t *srf ) {$/;"	f	file:
RB_SurfaceVao	src/renderergl2/tr_surface.c	/^static qboolean RB_SurfaceVao(vao_t *vao, int numVerts, int numIndexes, int firstIndex, int minIndex, int maxIndex, int dlightBits, int pshadowBits, qboolean shaderCheck)$/;"	f	file:
RB_SurfaceVaoMdvMesh	src/renderergl2/tr_surface.c	/^void RB_SurfaceVaoMdvMesh(srfVaoMdvMesh_t * surface)$/;"	f
RB_SurfaceVaoMesh	src/renderergl2/tr_surface.c	/^static void RB_SurfaceVaoMesh(srfBspSurface_t * srf)$/;"	f	file:
RB_SurfaceVertsAndIndexes	src/renderergl2/tr_surface.c	/^static void RB_SurfaceVertsAndIndexes( int numVerts, srfVert_t *verts, int numIndexes, glIndex_t *indexes, int dlightBits, int pshadowBits)$/;"	f	file:
RB_SwapBuffers	src/renderergl1/tr_backend.c	/^const void	*RB_SwapBuffers( const void *data ) {$/;"	f
RB_SwapBuffers	src/renderergl2/tr_backend.c	/^const void	*RB_SwapBuffers( const void *data ) {$/;"	f
RB_TakeScreenshot	src/renderergl1/tr_init.c	/^void RB_TakeScreenshot(int x, int y, int width, int height, char *fileName)$/;"	f
RB_TakeScreenshot	src/renderergl2/tr_init.c	/^void RB_TakeScreenshot(int x, int y, int width, int height, char *fileName)$/;"	f
RB_TakeScreenshotCmd	src/renderergl1/tr_init.c	/^const void *RB_TakeScreenshotCmd( const void *data ) {$/;"	f
RB_TakeScreenshotCmd	src/renderergl2/tr_init.c	/^const void *RB_TakeScreenshotCmd( const void *data ) {$/;"	f
RB_TakeScreenshotJPEG	src/renderergl1/tr_init.c	/^void RB_TakeScreenshotJPEG(int x, int y, int width, int height, char *fileName)$/;"	f
RB_TakeScreenshotJPEG	src/renderergl2/tr_init.c	/^void RB_TakeScreenshotJPEG(int x, int y, int width, int height, char *fileName)$/;"	f
RB_TakeVideoFrameCmd	src/renderergl1/tr_init.c	/^const void *RB_TakeVideoFrameCmd( const void *data )$/;"	f
RB_TakeVideoFrameCmd	src/renderergl2/tr_init.c	/^const void *RB_TakeVideoFrameCmd( const void *data )$/;"	f
RB_TestFlare	src/renderergl1/tr_flares.c	/^void RB_TestFlare( flare_t *f ) {$/;"	f
RB_TestFlare	src/renderergl2/tr_flares.c	/^void RB_TestFlare( flare_t *f ) {$/;"	f
RB_ToneMap	src/renderergl2/tr_postprocess.c	/^void RB_ToneMap(FBO_t *hdrFbo, ivec4_t hdrBox, FBO_t *ldrFbo, ivec4_t ldrBox, int autoExposure)$/;"	f
RB_UpdateSunFlareVis	src/renderergl2/tr_postprocess.c	/^static qboolean RB_UpdateSunFlareVis(void)$/;"	f	file:
RB_UpdateTessVao	src/renderergl2/tr_vbo.c	/^void RB_UpdateTessVao(unsigned int attribBits)$/;"	f
RB_VBlur	src/renderergl2/tr_postprocess.c	/^static void RB_VBlur(FBO_t *srcFbo, FBO_t *dstFbo, float strength)$/;"	f	file:
RCOMMONDIR	GNUmakefile	/^RCOMMONDIR=$(MOUNT_DIR)\/renderercommon$/;"	m
RC_CAPSHADOWMAP	src/renderergl2/tr_local.h	/^	RC_CAPSHADOWMAP,$/;"	e	enum:__anon78
RC_CLEARDEPTH	src/renderergl1/tr_local.h	/^	RC_CLEARDEPTH$/;"	e	enum:__anon176
RC_CLEARDEPTH	src/renderergl2/tr_local.h	/^	RC_CLEARDEPTH,$/;"	e	enum:__anon78
RC_COLORMASK	src/renderergl1/tr_local.h	/^	RC_COLORMASK,$/;"	e	enum:__anon176
RC_COLORMASK	src/renderergl2/tr_local.h	/^	RC_COLORMASK,$/;"	e	enum:__anon78
RC_DRAW_BUFFER	src/renderergl1/tr_local.h	/^	RC_DRAW_BUFFER,$/;"	e	enum:__anon176
RC_DRAW_BUFFER	src/renderergl2/tr_local.h	/^	RC_DRAW_BUFFER,$/;"	e	enum:__anon78
RC_DRAW_SURFS	src/renderergl1/tr_local.h	/^	RC_DRAW_SURFS,$/;"	e	enum:__anon176
RC_DRAW_SURFS	src/renderergl2/tr_local.h	/^	RC_DRAW_SURFS,$/;"	e	enum:__anon78
RC_END_OF_LIST	src/renderergl1/tr_local.h	/^	RC_END_OF_LIST,$/;"	e	enum:__anon176
RC_END_OF_LIST	src/renderergl2/tr_local.h	/^	RC_END_OF_LIST,$/;"	e	enum:__anon78
RC_POSTPROCESS	src/renderergl2/tr_local.h	/^	RC_POSTPROCESS$/;"	e	enum:__anon78
RC_SCREENSHOT	src/renderergl1/tr_local.h	/^	RC_SCREENSHOT,$/;"	e	enum:__anon176
RC_SCREENSHOT	src/renderergl2/tr_local.h	/^	RC_SCREENSHOT,$/;"	e	enum:__anon78
RC_SET_COLOR	src/renderergl1/tr_local.h	/^	RC_SET_COLOR,$/;"	e	enum:__anon176
RC_SET_COLOR	src/renderergl2/tr_local.h	/^	RC_SET_COLOR,$/;"	e	enum:__anon78
RC_STRETCH_PIC	src/renderergl1/tr_local.h	/^	RC_STRETCH_PIC,$/;"	e	enum:__anon176
RC_STRETCH_PIC	src/renderergl2/tr_local.h	/^	RC_STRETCH_PIC,$/;"	e	enum:__anon78
RC_SWAP_BUFFERS	src/renderergl1/tr_local.h	/^	RC_SWAP_BUFFERS,$/;"	e	enum:__anon176
RC_SWAP_BUFFERS	src/renderergl2/tr_local.h	/^	RC_SWAP_BUFFERS,$/;"	e	enum:__anon78
RC_VIDEOFRAME	src/renderergl1/tr_local.h	/^	RC_VIDEOFRAME,$/;"	e	enum:__anon176
RC_VIDEOFRAME	src/renderergl2/tr_local.h	/^	RC_VIDEOFRAME,$/;"	e	enum:__anon78
RD	src/qcommon/vm_sparc.c	267;"	d	file:
RDF_EXTRA	src/renderergl2/tr_extratypes.h	30;"	d
RDF_HYPERSPACE	src/renderercommon/tr_types.h	61;"	d
RDF_NOFOG	src/renderergl2/tr_extratypes.h	29;"	d
RDF_NOWORLDMODEL	src/renderercommon/tr_types.h	60;"	d
RDF_SUNLIGHT	src/renderergl2/tr_extratypes.h	31;"	d
REACTOR_ATTACK_DAMAGE	src/game/tremulous.h	613;"	d
REACTOR_ATTACK_DCC_DAMAGE	src/game/tremulous.h	616;"	d
REACTOR_ATTACK_DCC_RANGE	src/game/tremulous.h	615;"	d
REACTOR_ATTACK_DCC_REPEAT	src/game/tremulous.h	614;"	d
REACTOR_ATTACK_RANGE	src/game/tremulous.h	611;"	d
REACTOR_ATTACK_REPEAT	src/game/tremulous.h	612;"	d
REACTOR_BASESIZE	src/game/tremulous.h	541;"	d
REACTOR_BP	src/game/tremulous.h	606;"	d
REACTOR_BT	src/game/tremulous.h	607;"	d
REACTOR_HEALTH	src/game/tremulous.h	608;"	d
REACTOR_SPLASHDAMAGE	src/game/tremulous.h	609;"	d
REACTOR_SPLASHRADIUS	src/game/tremulous.h	610;"	d
REACTOR_VALUE	src/game/tremulous.h	617;"	d
READMARK_NOT_USED	src/server/sqlite3.c	51748;"	d	file:
READ_LOCK	src/server/sqlite3.c	55133;"	d	file:
READ_UTF16BE	src/server/sqlite3.c	24976;"	d	file:
READ_UTF16LE	src/server/sqlite3.c	24966;"	d	file:
READ_UTF8	src/server/sqlite3.c	155922;"	d	file:
READ_UTF8	src/server/sqlite3.c	186904;"	d	file:
READ_UTF8	src/server/sqlite3.c	25013;"	d	file:
REARGUARD	src/server/sqlite3.c	18822;"	d	file:
REFENTITYNUM_BITS	src/renderercommon/tr_types.h	30;"	d
REFENTITYNUM_MASK	src/renderercommon/tr_types.h	31;"	d
REFENTITYNUM_WORLD	src/renderercommon/tr_types.h	35;"	d
REF_API_VERSION	src/renderercommon/tr_public.h	28;"	d
REGEN_BOOST_RANGE	src/game/tremulous.h	346;"	d
REGISTER_TRACE	src/server/sqlite3.c	74869;"	d	file:
REGISTER_TRACE	src/server/sqlite3.c	74871;"	d	file:
REG_FLAGS_FLOAT	src/qcommon/vm_sparc.c	542;"	d	file:
RELAT	src/tools/lcc/cpp/eval.c	18;"	d	file:
RELEASE_CFLAGS	src/master/Makefile	/^RELEASE_CFLAGS=-Wall -O2$/;"	m
RELEASE_LDFLAGS	src/master/Makefile	/^  RELEASE_LDFLAGS=-ltdb$/;"	m
RELEASE_LDFLAGS	src/master/Makefile	/^  RELEASE_LDFLAGS=-lwsock32$/;"	m
RENDERER_LIBS	GNUmakefile	/^  RENDERER_LIBS = $(SDL_LIBS) -lGL$/;"	m
RENDERER_LIBS	GNUmakefile	/^  RENDERER_LIBS = -lgdi32 -lole32 -lopengl32$/;"	m
RENDERER_LIBS	GNUmakefile	/^  RENDERER_LIBS=$/;"	m
REPEATER_BASESIZE	src/game/tremulous.h	542;"	d
REPEATER_BP	src/game/tremulous.h	619;"	d
REPEATER_BT	src/game/tremulous.h	620;"	d
REPEATER_HEALTH	src/game/tremulous.h	621;"	d
REPEATER_SPLASHDAMAGE	src/game/tremulous.h	622;"	d
REPEATER_SPLASHRADIUS	src/game/tremulous.h	623;"	d
REPEATER_VALUE	src/game/tremulous.h	624;"	d
RESERVED_BYTE	src/server/sqlite3.c	11822;"	d	file:
RESERVED_CONFIGSTRINGS	src/qcommon/q_shared.h	1221;"	d
RESERVED_LOCK	src/server/sqlite3.c	11758;"	d	file:
RESET_TIME	src/client/cl_cgame.c	909;"	d	file:
RESTORE	src/qcommon/vm_sparc.c	/^	RESTOREI, RESTORE,$/;"	e	enum:sparc_iname	file:
RESTOREI	src/qcommon/vm_sparc.c	/^	RESTOREI, RESTORE,$/;"	e	enum:sparc_iname	file:
RETRANSMIT_TIMEOUT	src/client/client.h	178;"	d
RET_FLOAT	src/qcommon/vm_powerpc.c	759;"	d	file:
RET_INT	src/qcommon/vm_powerpc.c	758;"	d	file:
REWARD_TIME	src/cgame/cg_local.h	57;"	d
RE_AddAdditiveLightToScene	src/renderergl1/tr_scene.c	/^void RE_AddAdditiveLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {$/;"	f
RE_AddAdditiveLightToScene	src/renderergl2/tr_scene.c	/^void RE_AddAdditiveLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {$/;"	f
RE_AddDynamicLightToScene	src/renderergl1/tr_scene.c	/^void RE_AddDynamicLightToScene( const vec3_t org, float intensity, float r, float g, float b, int additive ) {$/;"	f
RE_AddDynamicLightToScene	src/renderergl2/tr_scene.c	/^void RE_AddDynamicLightToScene( const vec3_t org, float intensity, float r, float g, float b, int additive ) {$/;"	f
RE_AddLightToScene	src/renderergl1/tr_scene.c	/^void RE_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {$/;"	f
RE_AddLightToScene	src/renderergl2/tr_scene.c	/^void RE_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b ) {$/;"	f
RE_AddPolyToScene	src/renderergl1/tr_scene.c	/^void RE_AddPolyToScene( qhandle_t hShader, int numVerts, const polyVert_t *verts, int numPolys ) {$/;"	f
RE_AddPolyToScene	src/renderergl2/tr_scene.c	/^void RE_AddPolyToScene( qhandle_t hShader, int numVerts, const polyVert_t *verts, int numPolys ) {$/;"	f
RE_AddRefEntityToScene	src/renderergl1/tr_scene.c	/^void RE_AddRefEntityToScene( const refEntity_t *ent ) {$/;"	f
RE_AddRefEntityToScene	src/renderergl2/tr_scene.c	/^void RE_AddRefEntityToScene( const refEntity_t *ent ) {$/;"	f
RE_BeginFrame	src/renderergl1/tr_cmds.c	/^void RE_BeginFrame( stereoFrame_t stereoFrame ) {$/;"	f
RE_BeginFrame	src/renderergl2/tr_cmds.c	/^void RE_BeginFrame( stereoFrame_t stereoFrame ) {$/;"	f
RE_BeginRegistration	src/renderergl1/tr_model.c	/^void RE_BeginRegistration( glconfig_t *glconfigOut ) {$/;"	f
RE_BeginRegistration	src/renderergl2/tr_model.c	/^void RE_BeginRegistration( glconfig_t *glconfigOut ) {$/;"	f
RE_BeginScene	src/renderergl2/tr_scene.c	/^void RE_BeginScene(const refdef_t *fd)$/;"	f
RE_ClearScene	src/renderergl1/tr_scene.c	/^void RE_ClearScene( void ) {$/;"	f
RE_ClearScene	src/renderergl2/tr_scene.c	/^void RE_ClearScene( void ) {$/;"	f
RE_ConstructGlyphInfo	src/renderercommon/tr_font.c	/^static glyphInfo_t *RE_ConstructGlyphInfo(unsigned char *imageOut, int *xOut, int *yOut, int *maxHeight, FT_Face face, const unsigned char c, qboolean calcHeight) {$/;"	f	file:
RE_EndFrame	src/renderergl1/tr_cmds.c	/^void RE_EndFrame( int *frontEndMsec, int *backEndMsec ) {$/;"	f
RE_EndFrame	src/renderergl2/tr_cmds.c	/^void RE_EndFrame( int *frontEndMsec, int *backEndMsec ) {$/;"	f
RE_EndRegistration	src/renderergl1/tr_init.c	/^void RE_EndRegistration( void ) {$/;"	f
RE_EndRegistration	src/renderergl2/tr_init.c	/^void RE_EndRegistration( void ) {$/;"	f
RE_EndScene	src/renderergl2/tr_scene.c	/^void RE_EndScene()$/;"	f
RE_LoadWorldMap	src/renderergl1/tr_bsp.c	/^void RE_LoadWorldMap( const char *name ) {$/;"	f
RE_LoadWorldMap	src/renderergl2/tr_bsp.c	/^void RE_LoadWorldMap( const char *name ) {$/;"	f
RE_RegisterFont	src/renderercommon/tr_font.c	/^void RE_RegisterFont(const char *fontName, int pointSize, fontInfo_t *font) {$/;"	f
RE_RegisterModel	src/renderergl1/tr_model.c	/^qhandle_t RE_RegisterModel( const char *name ) {$/;"	f
RE_RegisterModel	src/renderergl2/tr_model.c	/^qhandle_t RE_RegisterModel( const char *name ) {$/;"	f
RE_RegisterShader	src/renderergl1/tr_shader.c	/^qhandle_t RE_RegisterShader( const char *name ) {$/;"	f
RE_RegisterShader	src/renderergl2/tr_shader.c	/^qhandle_t RE_RegisterShader( const char *name ) {$/;"	f
RE_RegisterShaderFromImage	src/renderergl1/tr_shader.c	/^qhandle_t RE_RegisterShaderFromImage(const char *name, int lightmapIndex, image_t *image, qboolean mipRawImage) {$/;"	f
RE_RegisterShaderFromImage	src/renderergl2/tr_shader.c	/^qhandle_t RE_RegisterShaderFromImage(const char *name, int lightmapIndex, image_t *image, qboolean mipRawImage) {$/;"	f
RE_RegisterShaderLightMap	src/renderergl1/tr_shader.c	/^qhandle_t RE_RegisterShaderLightMap( const char *name, int lightmapIndex ) {$/;"	f
RE_RegisterShaderLightMap	src/renderergl2/tr_shader.c	/^qhandle_t RE_RegisterShaderLightMap( const char *name, int lightmapIndex ) {$/;"	f
RE_RegisterShaderNoMip	src/renderergl1/tr_shader.c	/^qhandle_t RE_RegisterShaderNoMip( const char *name ) {$/;"	f
RE_RegisterShaderNoMip	src/renderergl2/tr_shader.c	/^qhandle_t RE_RegisterShaderNoMip( const char *name ) {$/;"	f
RE_RegisterSkin	src/renderergl1/tr_image.c	/^qhandle_t RE_RegisterSkin( const char *name ) {$/;"	f
RE_RegisterSkin	src/renderergl2/tr_image.c	/^qhandle_t RE_RegisterSkin( const char *name ) {$/;"	f
RE_RenderScene	src/renderergl1/tr_scene.c	/^void RE_RenderScene( const refdef_t *fd ) {$/;"	f
RE_RenderScene	src/renderergl2/tr_scene.c	/^void RE_RenderScene( const refdef_t *fd ) {$/;"	f
RE_SaveJPG	src/renderercommon/tr_image_jpg.c	/^void RE_SaveJPG(char * filename, int quality, int image_width, int image_height, byte *image_buffer, int padding)$/;"	f
RE_SaveJPGToBuffer	src/renderercommon/tr_image_jpg.c	/^size_t RE_SaveJPGToBuffer(byte *buffer, size_t bufSize, int quality,$/;"	f
RE_SetClipRegion	src/renderergl1/tr_cmds.c	/^void RE_SetClipRegion( const float *region ) {$/;"	f
RE_SetClipRegion	src/renderergl2/tr_cmds.c	/^void RE_SetClipRegion( const float *region ) {$/;"	f
RE_SetColor	src/renderergl1/tr_cmds.c	/^void	RE_SetColor( const float *rgba ) {$/;"	f
RE_SetColor	src/renderergl2/tr_cmds.c	/^void	RE_SetColor( const float *rgba ) {$/;"	f
RE_SetWorldVisData	src/renderergl1/tr_bsp.c	/^void		RE_SetWorldVisData( const byte *vis ) {$/;"	f
RE_SetWorldVisData	src/renderergl2/tr_bsp.c	/^void		RE_SetWorldVisData( const byte *vis ) {$/;"	f
RE_Shutdown	src/renderergl1/tr_init.c	/^void RE_Shutdown( qboolean destroyWindow ) {	$/;"	f
RE_Shutdown	src/renderergl2/tr_init.c	/^void RE_Shutdown( qboolean destroyWindow ) {	$/;"	f
RE_StretchPic	src/renderergl1/tr_cmds.c	/^void RE_StretchPic ( float x, float y, float w, float h, $/;"	f
RE_StretchPic	src/renderergl2/tr_cmds.c	/^void RE_StretchPic ( float x, float y, float w, float h, $/;"	f
RE_StretchRaw	src/renderergl1/tr_backend.c	/^void RE_StretchRaw (int x, int y, int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty) {$/;"	f
RE_StretchRaw	src/renderergl2/tr_backend.c	/^void RE_StretchRaw (int x, int y, int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty) {$/;"	f
RE_TakeVideoFrame	src/renderergl1/tr_cmds.c	/^void RE_TakeVideoFrame( int width, int height,$/;"	f
RE_TakeVideoFrame	src/renderergl2/tr_cmds.c	/^void RE_TakeVideoFrame( int width, int height,$/;"	f
RE_UploadCinematic	src/renderergl1/tr_backend.c	/^void RE_UploadCinematic (int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty) {$/;"	f
RE_UploadCinematic	src/renderergl2/tr_backend.c	/^void RE_UploadCinematic (int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty) {$/;"	f
RF_CROSSHAIR	src/renderercommon/tr_types.h	43;"	d
RF_DEPTHHACK	src/renderercommon/tr_types.h	41;"	d
RF_FIRST_PERSON	src/renderercommon/tr_types.h	40;"	d
RF_LIGHTING_ORIGIN	src/renderercommon/tr_types.h	50;"	d
RF_MINLIGHT	src/renderercommon/tr_types.h	38;"	d
RF_NOSHADOW	src/renderercommon/tr_types.h	48;"	d
RF_SHADOW_PLANE	src/renderercommon/tr_types.h	55;"	d
RF_THIRD_PERSON	src/renderercommon/tr_types.h	39;"	d
RF_WRAP_FRAMES	src/renderercommon/tr_types.h	56;"	d
RGBAtoNormal	src/renderergl2/tr_image.c	/^static void RGBAtoNormal(const byte *in, byte *out, int width, int height, qboolean clampToEdge)$/;"	f	file:
RGBAtoYCoCgA	src/renderergl2/tr_image.c	/^static void RGBAtoYCoCgA(const byte *in, byte *out, int width, int height)$/;"	f	file:
RGL1DIR	GNUmakefile	/^RGL1DIR=$(MOUNT_DIR)\/renderergl1$/;"	m
RGL2DIR	GNUmakefile	/^RGL2DIR=$(MOUNT_DIR)\/renderergl2$/;"	m
RIFLE_CLIPSIZE	src/game/tremulous.h	383;"	d
RIFLE_DMG	src/game/tremulous.h	390;"	d
RIFLE_K_SCALE	src/game/tremulous.h	386;"	d
RIFLE_MAXCLIPS	src/game/tremulous.h	384;"	d
RIFLE_PRICE	src/game/tremulous.h	388;"	d
RIFLE_RELOAD	src/game/tremulous.h	387;"	d
RIFLE_REPEAT	src/game/tremulous.h	385;"	d
RIFLE_SPREAD	src/game/tremulous.h	389;"	d
RIGHT	src/tools/lcc/src/c.h	/^	RIGHT=42<<4,$/;"	e	enum:__anon305
RM	src/master/Makefile	/^  RM=rm -f$/;"	m
RMT_SPHERE	src/game/bg_public.h	/^  RMT_SPHERE,$/;"	e	enum:__anon338
RMT_SPHERICAL_CONE_240	src/game/bg_public.h	/^  RMT_SPHERICAL_CONE_240$/;"	e	enum:__anon338
RMT_SPHERICAL_CONE_64	src/game/bg_public.h	/^  RMT_SPHERICAL_CONE_64,$/;"	e	enum:__anon338
RNDAWAY	src/server/sqlite3.c	159418;"	d	file:
RNDTOWARDS	src/server/sqlite3.c	159417;"	d	file:
ROLL	src/qcommon/q_shared.h	222;"	d
ROQSize	src/client/cl_cin.c	/^	long				ROQSize;$/;"	m	struct:__anon100	file:
ROQ_CODEBOOK	src/client/cl_cin.c	46;"	d	file:
ROQ_GenYUVTables	src/client/cl_cin.c	/^static void ROQ_GenYUVTables( void )$/;"	f	file:
ROQ_PACKET	src/client/cl_cin.c	50;"	d	file:
ROQ_QUAD	src/client/cl_cin.c	44;"	d	file:
ROQ_QUAD_HANG	src/client/cl_cin.c	49;"	d	file:
ROQ_QUAD_INFO	src/client/cl_cin.c	45;"	d	file:
ROQ_QUAD_JPEG	src/client/cl_cin.c	48;"	d	file:
ROQ_QUAD_VQ	src/client/cl_cin.c	47;"	d	file:
ROQ_UB_tab	src/client/cl_cin.c	/^static	long				ROQ_UB_tab[256];$/;"	v	file:
ROQ_UG_tab	src/client/cl_cin.c	/^static	long				ROQ_UG_tab[256];$/;"	v	file:
ROQ_VG_tab	src/client/cl_cin.c	/^static	long				ROQ_VG_tab[256];$/;"	v	file:
ROQ_VR_tab	src/client/cl_cin.c	/^static	long				ROQ_VR_tab[256];$/;"	v	file:
ROQ_YY_tab	src/client/cl_cin.c	/^static	long				ROQ_YY_tab[256];$/;"	v	file:
ROTATOR_1TO2	src/game/g_local.h	/^  ROTATOR_1TO2,$/;"	e	enum:__anon308
ROTATOR_2TO1	src/game/g_local.h	/^  ROTATOR_2TO1,$/;"	e	enum:__anon308
ROTATOR_POS1	src/game/g_local.h	/^  ROTATOR_POS1,$/;"	e	enum:__anon308
ROTATOR_POS2	src/game/g_local.h	/^  ROTATOR_POS2,$/;"	e	enum:__anon308
ROUND1	src/qcommon/md4.c	51;"	d	file:
ROUND2	src/qcommon/md4.c	52;"	d	file:
ROUND3	src/qcommon/md4.c	53;"	d	file:
ROUND8	src/server/sqlite3.c	10100;"	d	file:
ROUNDBITS	src/game/bg_alloc.c	34;"	d	file:
ROUNDDOWN8	src/server/sqlite3.c	10105;"	d	file:
ROWSET_ALLOCATION_SIZE	src/server/sqlite3.c	43404;"	d	file:
ROWSET_ENTRY_PER_CHUNK	src/server/sqlite3.c	43409;"	d	file:
ROWSET_NEXT	src/server/sqlite3.c	43458;"	d	file:
ROWSET_SORTED	src/server/sqlite3.c	43457;"	d	file:
RP	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
RS	src/qcommon/vm_powerpc_asm.c	370;"	d	file:
RS1	src/qcommon/vm_sparc.c	265;"	d	file:
RS2	src/qcommon/vm_sparc.c	266;"	d	file:
RSERR_INVALID_FULLSCREEN	src/sdl/sdl_glimp.c	/^	RSERR_INVALID_FULLSCREEN,$/;"	e	enum:__anon380	file:
RSERR_INVALID_MODE	src/sdl/sdl_glimp.c	/^	RSERR_INVALID_MODE,$/;"	e	enum:__anon380	file:
RSERR_OK	src/sdl/sdl_glimp.c	/^	RSERR_OK,$/;"	e	enum:__anon380	file:
RSERR_UNKNOWN	src/sdl/sdl_glimp.c	/^	RSERR_UNKNOWN$/;"	e	enum:__anon380	file:
RSH	src/tools/lcc/cpp/cpp.h	/^		EQ, NEQ, LEQ, GEQ, LSH, RSH, LAND, LOR, PPLUS, MMINUS,$/;"	e	enum:toktype
RT	src/qcommon/vm_powerpc_asm.c	371;"	d	file:
RTREE_CACHE_SZ	src/server/sqlite3.c	156857;"	d	file:
RTREE_COORD_INT32	src/server/sqlite3.c	156795;"	d	file:
RTREE_COORD_REAL32	src/server/sqlite3.c	156794;"	d	file:
RTREE_DECODE_COORD	src/server/sqlite3.c	157563;"	d	file:
RTREE_DECODE_COORD	src/server/sqlite3.c	157571;"	d	file:
RTREE_DECODE_COORD	src/server/sqlite3.c	157577;"	d	file:
RTREE_DEFAULT_ROWEST	src/server/sqlite3.c	156748;"	d	file:
RTREE_EQ	src/server/sqlite3.c	156922;"	d	file:
RTREE_GE	src/server/sqlite3.c	156925;"	d	file:
RTREE_GEOMETRY_MAGIC	src/server/sqlite3.c	156982;"	d	file:
RTREE_GT	src/server/sqlite3.c	156926;"	d	file:
RTREE_LE	src/server/sqlite3.c	156923;"	d	file:
RTREE_LT	src/server/sqlite3.c	156924;"	d	file:
RTREE_MATCH	src/server/sqlite3.c	156927;"	d	file:
RTREE_MAXCELLS	src/server/sqlite3.c	156840;"	d	file:
RTREE_MAX_DEPTH	src/server/sqlite3.c	156849;"	d	file:
RTREE_MAX_DIMENSIONS	src/server/sqlite3.c	156733;"	d	file:
RTREE_MINCELLS	src/server/sqlite3.c	156838;"	d	file:
RTREE_MIN_ROWEST	src/server/sqlite3.c	156749;"	d	file:
RTREE_OF_CURSOR	src/server/sqlite3.c	156879;"	d	file:
RTREE_QUERY	src/server/sqlite3.c	156928;"	d	file:
RTREE_QUEUE_TRACE	src/server/sqlite3.c	157903;"	d	file:
RTREE_REINSERT	src/server/sqlite3.c	156839;"	d	file:
RTREE_ZERO	src/server/sqlite3.c	156805;"	d	file:
RTREE_ZERO	src/server/sqlite3.c	156809;"	d	file:
RT_BEAM	src/renderercommon/tr_types.h	/^	RT_BEAM,$/;"	e	enum:__anon113
RT_LIGHTNING	src/renderercommon/tr_types.h	/^	RT_LIGHTNING,$/;"	e	enum:__anon113
RT_MASK	src/qcommon/vm_powerpc_asm.c	372;"	d	file:
RT_MAX_REF_ENTITY_TYPE	src/renderercommon/tr_types.h	/^	RT_MAX_REF_ENTITY_TYPE$/;"	e	enum:__anon113
RT_MODEL	src/renderercommon/tr_types.h	/^	RT_MODEL,$/;"	e	enum:__anon113
RT_POLY	src/renderercommon/tr_types.h	/^	RT_POLY,$/;"	e	enum:__anon113
RT_PORTALSURFACE	src/renderercommon/tr_types.h	/^	RT_PORTALSURFACE,		\/\/ doesn't draw anything, just info for portals$/;"	e	enum:__anon113
RT_RAIL_CORE	src/renderercommon/tr_types.h	/^	RT_RAIL_CORE,$/;"	e	enum:__anon113
RT_RAIL_RINGS	src/renderercommon/tr_types.h	/^	RT_RAIL_RINGS,$/;"	e	enum:__anon113
RT_SPRITE	src/renderercommon/tr_types.h	/^	RT_SPRITE,$/;"	e	enum:__anon113
RX	src/tools/lcc/src/config.h	/^enum { RX=2 };$/;"	e	enum:__anon278
R_AddBrushModelSurfaces	src/renderergl1/tr_world.c	/^void R_AddBrushModelSurfaces ( trRefEntity_t *ent ) {$/;"	f
R_AddBrushModelSurfaces	src/renderergl2/tr_world.c	/^void R_AddBrushModelSurfaces ( trRefEntity_t *ent ) {$/;"	f
R_AddCapShadowmapCmd	src/renderergl2/tr_cmds.c	/^void	R_AddCapShadowmapCmd( int map, int cubeSide ) {$/;"	f
R_AddDrawSurf	src/renderergl1/tr_main.c	/^void R_AddDrawSurf( surfaceType_t *surface, shader_t *shader, $/;"	f
R_AddDrawSurf	src/renderergl2/tr_main.c	/^void R_AddDrawSurf( surfaceType_t *surface, shader_t *shader, $/;"	f
R_AddDrawSurfCmd	src/renderergl1/tr_cmds.c	/^void	R_AddDrawSurfCmd( drawSurf_t *drawSurfs, int numDrawSurfs ) {$/;"	f
R_AddDrawSurfCmd	src/renderergl2/tr_cmds.c	/^void	R_AddDrawSurfCmd( drawSurf_t *drawSurfs, int numDrawSurfs ) {$/;"	f
R_AddEdgeDef	src/renderergl1/tr_shadows.c	/^void R_AddEdgeDef( int i1, int i2, int facing ) {$/;"	f
R_AddEdgeDef	src/renderergl2/tr_shadows.c	/^void R_AddEdgeDef( int i1, int i2, int facing ) {$/;"	f
R_AddEntitySurface	src/renderergl2/tr_main.c	/^static void R_AddEntitySurface (int entityNum)$/;"	f	file:
R_AddEntitySurfaces	src/renderergl1/tr_main.c	/^void R_AddEntitySurfaces (void) {$/;"	f
R_AddEntitySurfaces	src/renderergl2/tr_main.c	/^void R_AddEntitySurfaces (void) {$/;"	f
R_AddIQMSurfaces	src/renderergl1/tr_model_iqm.c	/^void R_AddIQMSurfaces( trRefEntity_t *ent ) {$/;"	f
R_AddIQMSurfaces	src/renderergl2/tr_model_iqm.c	/^void R_AddIQMSurfaces( trRefEntity_t *ent ) {$/;"	f
R_AddMD3Surfaces	src/renderergl1/tr_mesh.c	/^void R_AddMD3Surfaces( trRefEntity_t *ent ) {$/;"	f
R_AddMD3Surfaces	src/renderergl2/tr_mesh.c	/^void R_AddMD3Surfaces( trRefEntity_t *ent ) {$/;"	f
R_AddMarkFragments	src/renderergl1/tr_marks.c	/^void R_AddMarkFragments(int numClipPoints, vec3_t clipPoints[2][MAX_VERTS_ON_POLY],$/;"	f
R_AddMarkFragments	src/renderergl2/tr_marks.c	/^void R_AddMarkFragments(int numClipPoints, vec3_t clipPoints[2][MAX_VERTS_ON_POLY],$/;"	f
R_AddPolygonSurfaces	src/renderergl1/tr_scene.c	/^void R_AddPolygonSurfaces( void ) {$/;"	f
R_AddPolygonSurfaces	src/renderergl2/tr_scene.c	/^void R_AddPolygonSurfaces( void ) {$/;"	f
R_AddPostProcessCmd	src/renderergl2/tr_cmds.c	/^void	R_AddPostProcessCmd( ) {$/;"	f
R_AddWorldSurface	src/renderergl1/tr_world.c	/^static void R_AddWorldSurface( msurface_t *surf, int dlightBits ) {$/;"	f	file:
R_AddWorldSurface	src/renderergl2/tr_world.c	/^static void R_AddWorldSurface( msurface_t *surf, int dlightBits, int pshadowBits ) {$/;"	f	file:
R_AddWorldSurfaces	src/renderergl1/tr_world.c	/^void R_AddWorldSurfaces (void) {$/;"	f
R_AddWorldSurfaces	src/renderergl2/tr_world.c	/^void R_AddWorldSurfaces (void) {$/;"	f
R_AllocModel	src/renderergl1/tr_model.c	/^model_t *R_AllocModel( void ) {$/;"	f
R_AllocModel	src/renderergl2/tr_model.c	/^model_t *R_AllocModel( void ) {$/;"	f
R_ArrayElementDiscrete	src/renderergl1/tr_shade.c	/^static void APIENTRY R_ArrayElementDiscrete( GLint index ) {$/;"	f	file:
R_AssignCubemapsToWorldSurfaces	src/renderergl2/tr_bsp.c	/^void R_AssignCubemapsToWorldSurfaces(void)$/;"	f
R_AttachFBOTexture1D	src/renderergl2/tr_fbo.c	/^void R_AttachFBOTexture1D(int texId, int index)$/;"	f
R_AttachFBOTexture2D	src/renderergl2/tr_fbo.c	/^void R_AttachFBOTexture2D(int target, int texId, int index)$/;"	f
R_AttachFBOTexture3D	src/renderergl2/tr_fbo.c	/^void R_AttachFBOTexture3D(int texId, int index, int zOffset)$/;"	f
R_AttachFBOTextureDepth	src/renderergl2/tr_fbo.c	/^void R_AttachFBOTextureDepth(int texId)$/;"	f
R_AttachFBOTexturePackedDepthStencil	src/renderergl2/tr_fbo.c	/^void R_AttachFBOTexturePackedDepthStencil(int texId)$/;"	f
R_BindAnimatedImage	src/renderergl1/tr_shade.c	/^static void R_BindAnimatedImage( textureBundle_t *bundle ) {$/;"	f	file:
R_BindAnimatedImageToTMU	src/renderergl2/tr_shade.c	/^static void R_BindAnimatedImageToTMU( textureBundle_t *bundle, int tmu ) {$/;"	f	file:
R_BindNullVao	src/renderergl2/tr_vbo.c	/^void R_BindNullVao(void)$/;"	f
R_BindVao	src/renderergl2/tr_vbo.c	/^void R_BindVao(vao_t * vao)$/;"	f
R_BlendOverTexture	src/renderergl1/tr_image.c	/^static void R_BlendOverTexture( byte *data, int pixelCount, byte blend[4] ) {$/;"	f	file:
R_BlendOverTexture	src/renderergl2/tr_image.c	/^static void R_BlendOverTexture( byte *data, int pixelCount, byte blend[4] ) {$/;"	f	file:
R_BoxSurfaces_r	src/renderergl1/tr_marks.c	/^void R_BoxSurfaces_r(mnode_t *node, vec3_t mins, vec3_t maxs, surfaceType_t **list, int listsize, int *listlength, vec3_t dir) {$/;"	f
R_BoxSurfaces_r	src/renderergl2/tr_marks.c	/^void R_BoxSurfaces_r(mnode_t *node, vec3_t mins, vec3_t maxs, surfaceType_t **list, int listsize, int *listlength, vec3_t dir) {$/;"	f
R_BuildCloudData	src/renderergl1/tr_sky.c	/^void R_BuildCloudData( shaderCommands_t *input )$/;"	f
R_BuildCloudData	src/renderergl2/tr_sky.c	/^void R_BuildCloudData( shaderCommands_t *input )$/;"	f
R_CalcNormalForTriangle	src/renderergl2/tr_main.c	/^void R_CalcNormalForTriangle(vec3_t normal, const vec3_t v0, const vec3_t v1, const vec3_t v2)$/;"	f
R_CalcTBN2	src/renderergl2/tr_main.c	/^void R_CalcTBN2(vec3_t tangent, vec3_t bitangent, vec3_t normal,$/;"	f
R_CalcTangentSpace	src/renderergl2/tr_main.c	/^void R_CalcTangentSpace(vec3_t tangent, vec3_t bitangent, vec3_t normal,$/;"	f
R_CalcTangentSpaceFast	src/renderergl2/tr_main.c	/^void R_CalcTangentSpaceFast(vec3_t tangent, vec3_t bitangent, vec3_t normal,$/;"	f
R_CalcTangentVectors	src/renderergl2/tr_main.c	/^qboolean R_CalcTangentVectors(srfVert_t * dv[3])$/;"	f
R_CalcTangentsForTriangle	src/renderergl2/tr_main.c	/^void R_CalcTangentsForTriangle(vec3_t tangent, vec3_t bitangent,$/;"	f
R_CalcTbnFromNormalAndTexDirs	src/renderergl2/tr_main.c	/^void R_CalcTbnFromNormalAndTexDirs(vec3_t tangent, vec3_t bitangent, vec3_t normal, vec3_t sdir, vec3_t tdir)$/;"	f
R_CalcTexDirs	src/renderergl2/tr_main.c	/^void R_CalcTexDirs(vec3_t sdir, vec3_t tdir, const vec3_t v1, const vec3_t v2,$/;"	f
R_CalcVertexLightDirs	src/renderergl2/tr_bsp.c	/^void R_CalcVertexLightDirs( void )$/;"	f
R_CheckFBO	src/renderergl2/tr_fbo.c	/^qboolean R_CheckFBO(const FBO_t * fbo)$/;"	f
R_ChopPolyBehindPlane	src/renderergl1/tr_marks.c	/^static void R_ChopPolyBehindPlane( int numInPoints, vec3_t inPoints[MAX_VERTS_ON_POLY],$/;"	f	file:
R_ChopPolyBehindPlane	src/renderergl2/tr_marks.c	/^static void R_ChopPolyBehindPlane( int numInPoints, vec3_t inPoints[MAX_VERTS_ON_POLY],$/;"	f	file:
R_ClearFlares	src/renderergl1/tr_flares.c	/^void R_ClearFlares( void ) {$/;"	f
R_ClearFlares	src/renderergl2/tr_flares.c	/^void R_ClearFlares( void ) {$/;"	f
R_ClipRegion	src/renderergl1/tr_cmds.c	/^static qboolean R_ClipRegion ( float *x, float *y, float *w, float *h,$/;"	f	file:
R_ClipRegion	src/renderergl2/tr_cmds.c	/^static qboolean R_ClipRegion ( float *x, float *y, float *w, float *h,$/;"	f	file:
R_ClusterPVS	src/renderergl1/tr_world.c	/^static const byte *R_ClusterPVS (int cluster) {$/;"	f	file:
R_ClusterPVS	src/renderergl2/tr_world.c	/^static const byte *R_ClusterPVS (int cluster) {$/;"	f	file:
R_ColorShiftLightingBytes	src/renderergl1/tr_bsp.c	/^static	void R_ColorShiftLightingBytes( byte in[4], byte out[4] ) {$/;"	f	file:
R_ColorShiftLightingBytes	src/renderergl2/tr_bsp.c	/^static	void R_ColorShiftLightingBytes( byte in[4], byte out[4] ) {$/;"	f	file:
R_ColorShiftLightingFloats	src/renderergl2/tr_bsp.c	/^static void R_ColorShiftLightingFloats(float in[4], float out[4], float scale )$/;"	f	file:
R_CompareVert	src/renderergl2/tr_main.c	/^qboolean R_CompareVert(srfVert_t * v1, srfVert_t * v2, qboolean checkST)$/;"	f
R_ComputeFogNum	src/renderergl1/tr_mesh.c	/^int R_ComputeFogNum( md3Header_t *header, trRefEntity_t *ent ) {$/;"	f
R_ComputeFogNum	src/renderergl2/tr_mesh.c	/^int R_ComputeFogNum( mdvModel_t *model, trRefEntity_t *ent ) {$/;"	f
R_ComputeIQMFogNum	src/renderergl1/tr_model_iqm.c	/^int R_ComputeIQMFogNum( iqmData_t *data, trRefEntity_t *ent ) {$/;"	f
R_ComputeIQMFogNum	src/renderergl2/tr_model_iqm.c	/^int R_ComputeIQMFogNum( iqmData_t *data, trRefEntity_t *ent ) {$/;"	f
R_ComputeLOD	src/renderergl1/tr_mesh.c	/^int R_ComputeLOD( trRefEntity_t *ent ) {$/;"	f
R_ComputeLOD	src/renderergl2/tr_mesh.c	/^int R_ComputeLOD( trRefEntity_t *ent ) {$/;"	f
R_CreateBuiltinImages	src/renderergl1/tr_image.c	/^void R_CreateBuiltinImages( void ) {$/;"	f
R_CreateBuiltinImages	src/renderergl2/tr_image.c	/^void R_CreateBuiltinImages( void ) {$/;"	f
R_CreateDefaultImage	src/renderergl1/tr_image.c	/^static void R_CreateDefaultImage( void ) {$/;"	f	file:
R_CreateDefaultImage	src/renderergl2/tr_image.c	/^static void R_CreateDefaultImage( void ) {$/;"	f	file:
R_CreateDlightImage	src/renderergl1/tr_image.c	/^static void R_CreateDlightImage( void ) {$/;"	f	file:
R_CreateDlightImage	src/renderergl2/tr_image.c	/^static void R_CreateDlightImage( void ) {$/;"	f	file:
R_CreateFogImage	src/renderergl1/tr_image.c	/^static void R_CreateFogImage( void ) {$/;"	f	file:
R_CreateFogImage	src/renderergl2/tr_image.c	/^static void R_CreateFogImage( void ) {$/;"	f	file:
R_CreateImage	src/renderergl1/tr_image.c	/^image_t *R_CreateImage( const char *name, byte *pic, int width, int height,$/;"	f
R_CreateImage	src/renderergl2/tr_image.c	/^image_t *R_CreateImage( const char *name, byte *pic, int width, int height, imgType_t type, imgFlags_t flags, int internalFormat ) {$/;"	f
R_CreateSurfaceGridMesh	src/renderergl1/tr_curve.c	/^srfGridMesh_t *R_CreateSurfaceGridMesh(int width, int height,$/;"	f
R_CreateSurfaceGridMesh	src/renderergl2/tr_curve.c	/^srfBspSurface_t *R_CreateSurfaceGridMesh(int width, int height,$/;"	f
R_CreateVao	src/renderergl2/tr_vbo.c	/^vao_t *R_CreateVao(const char *name, byte *vertexes, int vertexesSize, byte *indexes, int indexesSize, vaoUsage_t usage)$/;"	f
R_CreateVao2	src/renderergl2/tr_vbo.c	/^vao_t *R_CreateVao2(const char *name, int numVertexes, srfVert_t *verts, int numIndexes, glIndex_t *indexes)$/;"	f
R_CreateWorldVaos	src/renderergl2/tr_bsp.c	/^static void R_CreateWorldVaos(void)$/;"	f	file:
R_CubemapForPoint	src/renderergl2/tr_light.c	/^int R_CubemapForPoint( vec3_t point )$/;"	f
R_CullBox	src/renderergl2/tr_main.c	/^int R_CullBox(vec3_t worldBounds[2]) {$/;"	f
R_CullGrid	src/renderergl1/tr_world.c	/^static qboolean	R_CullGrid( srfGridMesh_t *cv ) {$/;"	f	file:
R_CullIQM	src/renderergl1/tr_model_iqm.c	/^static int R_CullIQM( iqmData_t *data, trRefEntity_t *ent ) {$/;"	f	file:
R_CullIQM	src/renderergl2/tr_model_iqm.c	/^static int R_CullIQM( iqmData_t *data, trRefEntity_t *ent ) {$/;"	f	file:
R_CullLocalBox	src/renderergl1/tr_main.c	/^int R_CullLocalBox (vec3_t bounds[2]) {$/;"	f
R_CullLocalBox	src/renderergl2/tr_main.c	/^int R_CullLocalBox(vec3_t localBounds[2]) {$/;"	f
R_CullLocalPointAndRadius	src/renderergl1/tr_main.c	/^int R_CullLocalPointAndRadius( vec3_t pt, float radius )$/;"	f
R_CullLocalPointAndRadius	src/renderergl2/tr_main.c	/^int R_CullLocalPointAndRadius( const vec3_t pt, float radius )$/;"	f
R_CullModel	src/renderergl1/tr_mesh.c	/^static int R_CullModel( md3Header_t *header, trRefEntity_t *ent ) {$/;"	f	file:
R_CullModel	src/renderergl2/tr_mesh.c	/^static int R_CullModel( mdvModel_t *model, trRefEntity_t *ent ) {$/;"	f	file:
R_CullPointAndRadius	src/renderergl1/tr_main.c	/^int R_CullPointAndRadius( vec3_t pt, float radius )$/;"	f
R_CullPointAndRadius	src/renderergl2/tr_main.c	/^int R_CullPointAndRadius( const vec3_t pt, float radius )$/;"	f
R_CullPointAndRadiusEx	src/renderergl2/tr_main.c	/^int R_CullPointAndRadiusEx( const vec3_t pt, float radius, const cplane_t* frustum, int numPlanes )$/;"	f
R_CullSurface	src/renderergl1/tr_world.c	/^static qboolean	R_CullSurface( surfaceType_t *surface, shader_t *shader ) {$/;"	f	file:
R_CullSurface	src/renderergl2/tr_world.c	/^static qboolean	R_CullSurface( msurface_t *surf ) {$/;"	f	file:
R_CullTriSurf	src/renderergl1/tr_world.c	/^static qboolean	R_CullTriSurf( srfTriangles_t *cv ) {$/;"	f	file:
R_DebugGraphics	src/renderergl1/tr_main.c	/^void R_DebugGraphics( void ) {$/;"	f
R_DebugGraphics	src/renderergl2/tr_main.c	/^void R_DebugGraphics( void ) {$/;"	f
R_DebugPolygon	src/renderergl1/tr_main.c	/^void R_DebugPolygon( int color, int numPoints, float *points ) {$/;"	f
R_DebugPolygon	src/renderergl2/tr_main.c	/^void R_DebugPolygon( int color, int numPoints, float *points ) {$/;"	f
R_DecomposeSort	src/renderergl1/tr_main.c	/^void R_DecomposeSort( unsigned sort, int *entityNum, shader_t **shader, $/;"	f
R_DecomposeSort	src/renderergl2/tr_main.c	/^void R_DecomposeSort( unsigned sort, int *entityNum, shader_t **shader, $/;"	f
R_DeleteTextures	src/renderergl1/tr_image.c	/^void R_DeleteTextures( void ) {$/;"	f
R_DeleteTextures	src/renderergl2/tr_image.c	/^void R_DeleteTextures( void ) {$/;"	f
R_DlightBmodel	src/renderergl1/tr_light.c	/^void R_DlightBmodel( bmodel_t *bmodel ) {$/;"	f
R_DlightBmodel	src/renderergl2/tr_light.c	/^void R_DlightBmodel( bmodel_t *bmodel ) {$/;"	f
R_DlightFace	src/renderergl1/tr_world.c	/^static int R_DlightFace( srfSurfaceFace_t *face, int dlightBits ) {$/;"	f	file:
R_DlightGrid	src/renderergl1/tr_world.c	/^static int R_DlightGrid( srfGridMesh_t *grid, int dlightBits ) {$/;"	f	file:
R_DlightSurface	src/renderergl1/tr_world.c	/^static int R_DlightSurface( msurface_t *surf, int dlightBits ) {$/;"	f	file:
R_DlightSurface	src/renderergl2/tr_world.c	/^static int R_DlightSurface( msurface_t *surf, int dlightBits ) {$/;"	f	file:
R_DlightTrisurf	src/renderergl1/tr_world.c	/^static int R_DlightTrisurf( srfTriangles_t *surf, int dlightBits ) {$/;"	f	file:
R_DoneFreeType	src/renderercommon/tr_font.c	/^void R_DoneFreeType(void) {$/;"	f
R_DrawElements	src/renderergl1/tr_shade.c	/^static void R_DrawElements( int numIndexes, const glIndex_t *indexes ) {$/;"	f	file:
R_DrawElementsVao	src/renderergl2/tr_shade.c	/^void R_DrawElementsVao( int numIndexes, glIndex_t firstIndex, glIndex_t minIndex, glIndex_t maxIndex )$/;"	f
R_DrawMultiElementsVao	src/renderergl2/tr_shade.c	/^static void R_DrawMultiElementsVao( int multiDrawPrimitives, glIndex_t *multiDrawMinIndex, glIndex_t *multiDrawMaxIndex, $/;"	f	file:
R_DrawStripElements	src/renderergl1/tr_shade.c	/^static void R_DrawStripElements( int numIndexes, const glIndex_t *indexes, void ( APIENTRY *element )(GLint) ) {$/;"	f	file:
R_FAILSAFE_HEIGHT	src/sdl/sdl_glimp.c	200;"	d	file:
R_FAILSAFE_WIDTH	src/sdl/sdl_glimp.c	199;"	d	file:
R_FBOList_f	src/renderergl2/tr_fbo.c	/^void R_FBOList_f(void)$/;"	f
R_FindImageFile	src/renderergl1/tr_image.c	/^image_t	*R_FindImageFile( const char *name, imgType_t type, imgFlags_t flags )$/;"	f
R_FindImageFile	src/renderergl2/tr_image.c	/^image_t	*R_FindImageFile( const char *name, imgType_t type, imgFlags_t flags )$/;"	f
R_FindShader	src/renderergl1/tr_shader.c	/^shader_t *R_FindShader( const char *name, int lightmapIndex, qboolean mipRawImage ) {$/;"	f
R_FindShader	src/renderergl2/tr_shader.c	/^shader_t *R_FindShader( const char *name, int lightmapIndex, qboolean mipRawImage ) {$/;"	f
R_FindShaderByName	src/renderergl1/tr_shader.c	/^shader_t *R_FindShaderByName( const char *name ) {$/;"	f
R_FindShaderByName	src/renderergl2/tr_shader.c	/^shader_t *R_FindShaderByName( const char *name ) {$/;"	f
R_FixSharedVertexLodError	src/renderergl1/tr_bsp.c	/^void R_FixSharedVertexLodError( void ) {$/;"	f
R_FixSharedVertexLodError	src/renderergl2/tr_bsp.c	/^void R_FixSharedVertexLodError( void ) {$/;"	f
R_FixSharedVertexLodError_r	src/renderergl1/tr_bsp.c	/^void R_FixSharedVertexLodError_r( int start, srfGridMesh_t *grid1 ) {$/;"	f
R_FixSharedVertexLodError_r	src/renderergl2/tr_bsp.c	/^void R_FixSharedVertexLodError_r( int start, srfBspSurface_t *grid1 ) {$/;"	f
R_FogFactor	src/renderergl1/tr_image.c	/^float	R_FogFactor( float s, float t ) {$/;"	f
R_FogFactor	src/renderergl2/tr_image.c	/^float	R_FogFactor( float s, float t ) {$/;"	f
R_FreeSurfaceGridMesh	src/renderergl1/tr_curve.c	/^void R_FreeSurfaceGridMesh( srfGridMesh_t *grid ) {$/;"	f
R_FreeSurfaceGridMesh	src/renderergl2/tr_curve.c	/^void R_FreeSurfaceGridMesh( srfBspSurface_t *grid ) {$/;"	f
R_GammaCorrect	src/renderergl1/tr_image.c	/^void R_GammaCorrect( byte *buffer, int bufSize ) {$/;"	f
R_GammaCorrect	src/renderergl2/tr_image.c	/^void R_GammaCorrect( byte *buffer, int bufSize ) {$/;"	f
R_GenerateDrawSurfs	src/renderergl1/tr_main.c	/^void R_GenerateDrawSurfs( void ) {$/;"	f
R_GenerateDrawSurfs	src/renderergl2/tr_main.c	/^void R_GenerateDrawSurfs( void ) {$/;"	f
R_GetAnimTag	src/renderergl1/tr_model.c	/^md3Tag_t *R_GetAnimTag( mdrHeader_t *mod, int framenum, const char *tagName, md3Tag_t * dest) $/;"	f
R_GetAnimTag	src/renderergl2/tr_model.c	/^mdvTag_t *R_GetAnimTag( mdrHeader_t *mod, int framenum, const char *tagName, mdvTag_t * dest)$/;"	f
R_GetCommandBuffer	src/renderergl1/tr_cmds.c	/^void *R_GetCommandBuffer( int bytes ) {$/;"	f
R_GetCommandBuffer	src/renderergl2/tr_cmds.c	/^void *R_GetCommandBuffer( int bytes ) {$/;"	f
R_GetEntityToken	src/renderergl1/tr_bsp.c	/^qboolean R_GetEntityToken( char *buffer, int size ) {$/;"	f
R_GetEntityToken	src/renderergl2/tr_bsp.c	/^qboolean R_GetEntityToken( char *buffer, int size ) {$/;"	f
R_GetGlyphInfo	src/renderercommon/tr_font.c	/^void R_GetGlyphInfo(FT_GlyphSlot glyph, int *left, int *right, int *width, int *top, int *bottom, int *height, int *pitch) {$/;"	f
R_GetModelByHandle	src/renderergl1/tr_model.c	/^model_t	*R_GetModelByHandle( qhandle_t index ) {$/;"	f
R_GetModelByHandle	src/renderergl2/tr_model.c	/^model_t	*R_GetModelByHandle( qhandle_t index ) {$/;"	f
R_GetPortalOrientations	src/renderergl1/tr_main.c	/^qboolean R_GetPortalOrientations( drawSurf_t *drawSurf, int entityNum, $/;"	f
R_GetPortalOrientations	src/renderergl2/tr_main.c	/^qboolean R_GetPortalOrientations( drawSurf_t *drawSurf, int entityNum, $/;"	f
R_GetShaderByHandle	src/renderergl1/tr_shader.c	/^shader_t *R_GetShaderByHandle( qhandle_t hShader ) {$/;"	f
R_GetShaderByHandle	src/renderergl2/tr_shader.c	/^shader_t *R_GetShaderByHandle( qhandle_t hShader ) {$/;"	f
R_GetSkinByHandle	src/renderergl1/tr_image.c	/^skin_t	*R_GetSkinByHandle( qhandle_t hSkin ) {$/;"	f
R_GetSkinByHandle	src/renderergl2/tr_image.c	/^skin_t	*R_GetSkinByHandle( qhandle_t hSkin ) {$/;"	f
R_GetTag	src/renderergl1/tr_model.c	/^static md3Tag_t *R_GetTag( md3Header_t *mod, int frame, const char *tagName ) {$/;"	f	file:
R_GetTag	src/renderergl2/tr_model.c	/^static mdvTag_t *R_GetTag( mdvModel_t *mod, int frame, const char *_tagName ) {$/;"	f	file:
R_GridInsertColumn	src/renderergl1/tr_curve.c	/^srfGridMesh_t *R_GridInsertColumn( srfGridMesh_t *grid, int column, int row, vec3_t point, float loderror ) {$/;"	f
R_GridInsertColumn	src/renderergl2/tr_curve.c	/^srfBspSurface_t *R_GridInsertColumn( srfBspSurface_t *grid, int column, int row, vec3_t point, float loderror ) {$/;"	f
R_GridInsertRow	src/renderergl1/tr_curve.c	/^srfGridMesh_t *R_GridInsertRow( srfGridMesh_t *grid, int row, int column, vec3_t point, float loderror ) {$/;"	f
R_GridInsertRow	src/renderergl2/tr_curve.c	/^srfBspSurface_t *R_GridInsertRow( srfBspSurface_t *grid, int row, int column, vec3_t point, float loderror ) {$/;"	f
R_IQMLerpTag	src/renderergl1/tr_model_iqm.c	/^int R_IQMLerpTag( orientation_t *tag, iqmData_t *data,$/;"	f
R_IQMLerpTag	src/renderergl2/tr_model_iqm.c	/^int R_IQMLerpTag( orientation_t *tag, iqmData_t *data,$/;"	f
R_ImageList_f	src/renderergl1/tr_image.c	/^void R_ImageList_f( void ) {$/;"	f
R_ImageList_f	src/renderergl2/tr_image.c	/^void R_ImageList_f( void ) {$/;"	f
R_Init	src/renderergl1/tr_init.c	/^void R_Init( void ) {	$/;"	f
R_Init	src/renderergl2/tr_init.c	/^void R_Init( void ) {	$/;"	f
R_InitFogTable	src/renderergl1/tr_image.c	/^void R_InitFogTable( void ) {$/;"	f
R_InitFogTable	src/renderergl2/tr_image.c	/^void R_InitFogTable( void ) {$/;"	f
R_InitFreeType	src/renderercommon/tr_font.c	/^void R_InitFreeType(void) {$/;"	f
R_InitImages	src/renderergl1/tr_image.c	/^void	R_InitImages( void ) {$/;"	f
R_InitImages	src/renderergl2/tr_image.c	/^void	R_InitImages( void ) {$/;"	f
R_InitNextFrame	src/renderergl1/tr_scene.c	/^void R_InitNextFrame( void ) {$/;"	f
R_InitNextFrame	src/renderergl2/tr_scene.c	/^void R_InitNextFrame( void ) {$/;"	f
R_InitQueries	src/renderergl2/tr_init.c	/^void R_InitQueries(void)$/;"	f
R_InitShaders	src/renderergl1/tr_shader.c	/^void R_InitShaders( void ) {$/;"	f
R_InitShaders	src/renderergl2/tr_shader.c	/^void R_InitShaders( void ) {$/;"	f
R_InitSkins	src/renderergl1/tr_image.c	/^void	R_InitSkins( void ) {$/;"	f
R_InitSkins	src/renderergl2/tr_image.c	/^void	R_InitSkins( void ) {$/;"	f
R_InitSkyTexCoords	src/renderergl1/tr_sky.c	/^void R_InitSkyTexCoords( float heightCloud )$/;"	f
R_InitSkyTexCoords	src/renderergl2/tr_sky.c	/^void R_InitSkyTexCoords( float heightCloud )$/;"	f
R_InitVaos	src/renderergl2/tr_vbo.c	/^void R_InitVaos(void)$/;"	f
R_IssuePendingRenderCommands	src/renderergl1/tr_cmds.c	/^void R_IssuePendingRenderCommands( void ) {$/;"	f
R_IssuePendingRenderCommands	src/renderergl2/tr_cmds.c	/^void R_IssuePendingRenderCommands( void ) {$/;"	f
R_IssueRenderCommands	src/renderergl1/tr_cmds.c	/^void R_IssueRenderCommands( qboolean runPerformanceCounters ) {$/;"	f
R_IssueRenderCommands	src/renderergl2/tr_cmds.c	/^void R_IssueRenderCommands( qboolean runPerformanceCounters ) {$/;"	f
R_JPGErrorExit	src/renderercommon/tr_image_jpg.c	/^static void __attribute__((__noreturn__)) R_JPGErrorExit(j_common_ptr cinfo)$/;"	f	file:
R_JPGOutputMessage	src/renderercommon/tr_image_jpg.c	/^static void R_JPGOutputMessage(j_common_ptr cinfo)$/;"	f	file:
R_LerpTag	src/renderergl1/tr_model.c	/^int R_LerpTag( orientation_t *tag, qhandle_t handle, int startFrame, int endFrame, $/;"	f
R_LerpTag	src/renderergl2/tr_model.c	/^int R_LerpTag( orientation_t *tag, qhandle_t handle, int startFrame, int endFrame, $/;"	f
R_LevelShot	src/renderergl1/tr_init.c	/^void R_LevelShot( void ) {$/;"	f
R_LevelShot	src/renderergl2/tr_init.c	/^void R_LevelShot( void ) {$/;"	f
R_LightDirForPoint	src/renderergl2/tr_light.c	/^int R_LightDirForPoint( vec3_t point, vec3_t lightDir, vec3_t normal, world_t *world )$/;"	f
R_LightForPoint	src/renderergl1/tr_light.c	/^int R_LightForPoint( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir )$/;"	f
R_LightForPoint	src/renderergl2/tr_light.c	/^int R_LightForPoint( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir )$/;"	f
R_LightScaleTexture	src/renderergl1/tr_image.c	/^void R_LightScaleTexture (unsigned *in, int inwidth, int inheight, qboolean only_gamma )$/;"	f
R_LightScaleTexture	src/renderergl2/tr_image.c	/^void R_LightScaleTexture (byte *in, int inwidth, int inheight, qboolean only_gamma )$/;"	f
R_LoadBMP	src/renderercommon/tr_image_bmp.c	/^void R_LoadBMP( const char *name, byte **pic, int *width, int *height )$/;"	f
R_LoadCubemapEntities	src/renderergl2/tr_bsp.c	/^void R_LoadCubemapEntities(char *cubemapEntityName)$/;"	f
R_LoadEntities	src/renderergl1/tr_bsp.c	/^void R_LoadEntities( lump_t *l ) {$/;"	f
R_LoadEntities	src/renderergl2/tr_bsp.c	/^void R_LoadEntities( lump_t *l ) {$/;"	f
R_LoadFogs	src/renderergl1/tr_bsp.c	/^static	void R_LoadFogs( lump_t *l, lump_t *brushesLump, lump_t *sidesLump ) {$/;"	f	file:
R_LoadFogs	src/renderergl2/tr_bsp.c	/^static	void R_LoadFogs( lump_t *l, lump_t *brushesLump, lump_t *sidesLump ) {$/;"	f	file:
R_LoadIQM	src/renderergl1/tr_model_iqm.c	/^qboolean R_LoadIQM( model_t *mod, void *buffer, int filesize, const char *mod_name ) {$/;"	f
R_LoadIQM	src/renderergl2/tr_model_iqm.c	/^qboolean R_LoadIQM( model_t *mod, void *buffer, int filesize, const char *mod_name ) {$/;"	f
R_LoadImage	src/renderergl1/tr_image.c	/^void R_LoadImage( const char *name, byte **pic, int *width, int *height )$/;"	f
R_LoadImage	src/renderergl2/tr_image.c	/^void R_LoadImage( const char *name, byte **pic, int *width, int *height )$/;"	f
R_LoadJPG	src/renderercommon/tr_image_jpg.c	/^void R_LoadJPG(const char *filename, unsigned char **pic, int *width, int *height)$/;"	f
R_LoadLightGrid	src/renderergl1/tr_bsp.c	/^void R_LoadLightGrid( lump_t *l ) {$/;"	f
R_LoadLightGrid	src/renderergl2/tr_bsp.c	/^void R_LoadLightGrid( lump_t *l ) {$/;"	f
R_LoadLightmaps	src/renderergl1/tr_bsp.c	/^static	void R_LoadLightmaps( lump_t *l ) {$/;"	f	file:
R_LoadLightmaps	src/renderergl2/tr_bsp.c	/^static	void R_LoadLightmaps( lump_t *l, lump_t *surfs ) {$/;"	f	file:
R_LoadMD3	src/renderergl1/tr_model.c	/^static qboolean R_LoadMD3 (model_t *mod, int lod, void *buffer, const char *mod_name ) {$/;"	f	file:
R_LoadMD3	src/renderergl2/tr_model.c	/^static qboolean R_LoadMD3(model_t * mod, int lod, void *buffer, int bufferSize, const char *modName)$/;"	f	file:
R_LoadMDR	src/renderergl1/tr_model.c	/^static qboolean R_LoadMDR( model_t *mod, void *buffer, int filesize, const char *mod_name ) $/;"	f	file:
R_LoadMDR	src/renderergl2/tr_model.c	/^static qboolean R_LoadMDR( model_t *mod, void *buffer, int filesize, const char *mod_name ) $/;"	f	file:
R_LoadMarksurfaces	src/renderergl1/tr_bsp.c	/^static	void R_LoadMarksurfaces (lump_t *l)$/;"	f	file:
R_LoadMarksurfaces	src/renderergl2/tr_bsp.c	/^static	void R_LoadMarksurfaces (lump_t *l)$/;"	f	file:
R_LoadNodesAndLeafs	src/renderergl1/tr_bsp.c	/^static	void R_LoadNodesAndLeafs (lump_t *nodeLump, lump_t *leafLump) {$/;"	f	file:
R_LoadNodesAndLeafs	src/renderergl2/tr_bsp.c	/^static	void R_LoadNodesAndLeafs (lump_t *nodeLump, lump_t *leafLump) {$/;"	f	file:
R_LoadPCX	src/renderercommon/tr_image_pcx.c	/^void R_LoadPCX ( const char *filename, byte **pic, int *width, int *height)$/;"	f
R_LoadPNG	src/renderercommon/tr_image_png.c	/^void R_LoadPNG(const char *name, byte **pic, int *width, int *height)$/;"	f
R_LoadPlanes	src/renderergl1/tr_bsp.c	/^static	void R_LoadPlanes( lump_t *l ) {$/;"	f	file:
R_LoadPlanes	src/renderergl2/tr_bsp.c	/^static	void R_LoadPlanes( lump_t *l ) {$/;"	f	file:
R_LoadShaders	src/renderergl1/tr_bsp.c	/^static	void R_LoadShaders( lump_t *l ) {	$/;"	f	file:
R_LoadShaders	src/renderergl2/tr_bsp.c	/^static	void R_LoadShaders( lump_t *l ) {	$/;"	f	file:
R_LoadSubmodels	src/renderergl1/tr_bsp.c	/^static	void R_LoadSubmodels( lump_t *l ) {$/;"	f	file:
R_LoadSubmodels	src/renderergl2/tr_bsp.c	/^static	void R_LoadSubmodels( lump_t *l ) {$/;"	f	file:
R_LoadSurfaces	src/renderergl1/tr_bsp.c	/^static	void R_LoadSurfaces( lump_t *surfs, lump_t *verts, lump_t *indexLump ) {$/;"	f	file:
R_LoadSurfaces	src/renderergl2/tr_bsp.c	/^static	void R_LoadSurfaces( lump_t *surfs, lump_t *verts, lump_t *indexLump ) {$/;"	f	file:
R_LoadTGA	src/renderercommon/tr_image_tga.c	/^void R_LoadTGA ( const char *name, byte **pic, int *width, int *height)$/;"	f
R_LoadVisibility	src/renderergl1/tr_bsp.c	/^static	void R_LoadVisibility( lump_t *l ) {$/;"	f	file:
R_LoadVisibility	src/renderergl2/tr_bsp.c	/^static	void R_LoadVisibility( lump_t *l ) {$/;"	f	file:
R_LocalNormalToWorld	src/renderergl1/tr_main.c	/^void R_LocalNormalToWorld (vec3_t local, vec3_t world) {$/;"	f
R_LocalNormalToWorld	src/renderergl2/tr_main.c	/^void R_LocalNormalToWorld (const vec3_t local, vec3_t world) {$/;"	f
R_LocalPointToWorld	src/renderergl1/tr_main.c	/^void R_LocalPointToWorld (vec3_t local, vec3_t world) {$/;"	f
R_LocalPointToWorld	src/renderergl2/tr_main.c	/^void R_LocalPointToWorld (const vec3_t local, vec3_t world) {$/;"	f
R_MDRAddAnimSurfaces	src/renderergl1/tr_animation.c	/^void R_MDRAddAnimSurfaces( trRefEntity_t *ent ) {$/;"	f
R_MDRAddAnimSurfaces	src/renderergl2/tr_animation.c	/^void R_MDRAddAnimSurfaces( trRefEntity_t *ent ) {$/;"	f
R_MDRComputeFogNum	src/renderergl1/tr_animation.c	/^int R_MDRComputeFogNum( mdrHeader_t *header, trRefEntity_t *ent ) {$/;"	f
R_MDRComputeFogNum	src/renderergl2/tr_animation.c	/^int R_MDRComputeFogNum( mdrHeader_t *header, trRefEntity_t *ent ) {$/;"	f
R_MDRCullModel	src/renderergl1/tr_animation.c	/^static int R_MDRCullModel( mdrHeader_t *header, trRefEntity_t *ent ) {$/;"	f	file:
R_MDRCullModel	src/renderergl2/tr_animation.c	/^static int R_MDRCullModel( mdrHeader_t *header, trRefEntity_t *ent ) {$/;"	f	file:
R_MarkFragments	src/renderergl1/tr_marks.c	/^int R_MarkFragments( int numPoints, const vec3_t *points, const vec3_t projection,$/;"	f
R_MarkFragments	src/renderergl2/tr_marks.c	/^int R_MarkFragments( int numPoints, const vec3_t *points, const vec3_t projection,$/;"	f
R_MarkLeaves	src/renderergl1/tr_world.c	/^static void R_MarkLeaves (void) {$/;"	f	file:
R_MarkLeaves	src/renderergl2/tr_world.c	/^static void R_MarkLeaves (void) {$/;"	f	file:
R_MergedHeightPoints	src/renderergl1/tr_bsp.c	/^int R_MergedHeightPoints(srfGridMesh_t *grid, int offset) {$/;"	f
R_MergedHeightPoints	src/renderergl2/tr_bsp.c	/^int R_MergedHeightPoints(srfBspSurface_t *grid, int offset) {$/;"	f
R_MergedWidthPoints	src/renderergl1/tr_bsp.c	/^int R_MergedWidthPoints(srfGridMesh_t *grid, int offset) {$/;"	f
R_MergedWidthPoints	src/renderergl2/tr_bsp.c	/^int R_MergedWidthPoints(srfBspSurface_t *grid, int offset) {$/;"	f
R_MipMap	src/renderergl1/tr_image.c	/^static void R_MipMap (byte *in, int width, int height) {$/;"	f	file:
R_MipMap2	src/renderergl1/tr_image.c	/^static void R_MipMap2( unsigned *in, int inWidth, int inHeight ) {$/;"	f	file:
R_MipMapLuminanceAlpha	src/renderergl2/tr_image.c	/^static void R_MipMapLuminanceAlpha (const byte *in, byte *out, int width, int height)$/;"	f	file:
R_MipMapNormalHeight	src/renderergl2/tr_image.c	/^static void R_MipMapNormalHeight (const byte *in, byte *out, int width, int height, qboolean swizzle)$/;"	f	file:
R_MipMapsRGB	src/renderergl2/tr_image.c	/^static void R_MipMapsRGB( byte *in, int inWidth, int inHeight)$/;"	f	file:
R_MirrorPoint	src/renderergl1/tr_main.c	/^void R_MirrorPoint (vec3_t in, orientation_t *surface, orientation_t *camera, vec3_t out) {$/;"	f
R_MirrorPoint	src/renderergl2/tr_main.c	/^void R_MirrorPoint (vec3_t in, orientation_t *surface, orientation_t *camera, vec3_t out) {$/;"	f
R_MirrorVector	src/renderergl1/tr_main.c	/^void R_MirrorVector (vec3_t in, orientation_t *surface, orientation_t *camera, vec3_t out) {$/;"	f
R_MirrorVector	src/renderergl2/tr_main.c	/^void R_MirrorVector (vec3_t in, orientation_t *surface, orientation_t *camera, vec3_t out) {$/;"	f
R_MirrorViewBySurface	src/renderergl1/tr_main.c	/^qboolean R_MirrorViewBySurface (drawSurf_t *drawSurf, int entityNum) {$/;"	f
R_MirrorViewBySurface	src/renderergl2/tr_main.c	/^qboolean R_MirrorViewBySurface (drawSurf_t *drawSurf, int entityNum) {$/;"	f
R_ModelBounds	src/renderergl1/tr_model.c	/^void R_ModelBounds( qhandle_t handle, vec3_t mins, vec3_t maxs ) {$/;"	f
R_ModelBounds	src/renderergl2/tr_model.c	/^void R_ModelBounds( qhandle_t handle, vec3_t mins, vec3_t maxs ) {$/;"	f
R_ModelInit	src/renderergl1/tr_model.c	/^void R_ModelInit( void ) {$/;"	f
R_ModelInit	src/renderergl2/tr_model.c	/^void R_ModelInit( void ) {$/;"	f
R_Modellist_f	src/renderergl1/tr_model.c	/^void R_Modellist_f( void ) {$/;"	f
R_Modellist_f	src/renderergl2/tr_model.c	/^void R_Modellist_f( void ) {$/;"	f
R_MovePatchSurfacesToHunk	src/renderergl1/tr_bsp.c	/^void R_MovePatchSurfacesToHunk(void) {$/;"	f
R_MovePatchSurfacesToHunk	src/renderergl2/tr_bsp.c	/^void R_MovePatchSurfacesToHunk(void) {$/;"	f
R_NoiseGet4f	src/renderercommon/tr_noise.c	/^float R_NoiseGet4f( float x, float y, float z, float t )$/;"	f
R_NoiseInit	src/renderercommon/tr_noise.c	/^void R_NoiseInit( void )$/;"	f
R_ParseSpawnVars	src/renderergl2/tr_bsp.c	/^qboolean R_ParseSpawnVars( char *spawnVarChars, int maxSpawnVarChars, int *numSpawnVars, char *spawnVars[MAX_SPAWN_VARS][2] )$/;"	f
R_PerformanceCounters	src/renderergl1/tr_cmds.c	/^void R_PerformanceCounters( void ) {$/;"	f
R_PerformanceCounters	src/renderergl2/tr_cmds.c	/^void R_PerformanceCounters( void ) {$/;"	f
R_PlaneForSurface	src/renderergl1/tr_main.c	/^void R_PlaneForSurface (surfaceType_t *surfType, cplane_t *plane) {$/;"	f
R_PlaneForSurface	src/renderergl2/tr_main.c	/^void R_PlaneForSurface (surfaceType_t *surfType, cplane_t *plane) {$/;"	f
R_PointInLeaf	src/renderergl1/tr_world.c	/^static mnode_t *R_PointInLeaf( const vec3_t p ) {$/;"	f	file:
R_PointInLeaf	src/renderergl2/tr_world.c	/^static mnode_t *R_PointInLeaf( const vec3_t p ) {$/;"	f	file:
R_PrintLongString	src/renderergl1/tr_init.c	/^void R_PrintLongString(const char *string) {$/;"	f
R_PrintLongString	src/renderergl2/tr_init.c	/^void R_PrintLongString(const char *string) {$/;"	f
R_PshadowSurface	src/renderergl2/tr_world.c	/^static int R_PshadowSurface( msurface_t *surf, int pshadowBits ) {$/;"	f	file:
R_Radix	src/renderergl1/tr_main.c	/^static ID_INLINE void R_Radix( int byte, int size, drawSurf_t *source, drawSurf_t *dest )$/;"	f	file:
R_Radix	src/renderergl2/tr_main.c	/^static ID_INLINE void R_Radix( int byte, int size, drawSurf_t *source, drawSurf_t *dest )$/;"	f	file:
R_RadixSort	src/renderergl1/tr_main.c	/^static void R_RadixSort( drawSurf_t *source, int size )$/;"	f	file:
R_RadixSort	src/renderergl2/tr_main.c	/^static void R_RadixSort( drawSurf_t *source, int size )$/;"	f	file:
R_RecursiveWorldNode	src/renderergl1/tr_world.c	/^static void R_RecursiveWorldNode( mnode_t *node, int planeBits, int dlightBits ) {$/;"	f	file:
R_RecursiveWorldNode	src/renderergl2/tr_world.c	/^static void R_RecursiveWorldNode( mnode_t *node, int planeBits, int dlightBits, int pshadowBits ) {$/;"	f	file:
R_Register	src/renderergl1/tr_init.c	/^void R_Register( void ) $/;"	f
R_Register	src/renderergl2/tr_init.c	/^void R_Register( void ) $/;"	f
R_RegisterIQM	src/renderergl1/tr_model.c	/^qhandle_t R_RegisterIQM(const char *name, model_t *mod)$/;"	f
R_RegisterIQM	src/renderergl2/tr_model.c	/^qhandle_t R_RegisterIQM(const char *name, model_t *mod)$/;"	f
R_RegisterMD3	src/renderergl1/tr_model.c	/^qhandle_t R_RegisterMD3(const char *name, model_t *mod)$/;"	f
R_RegisterMD3	src/renderergl2/tr_model.c	/^qhandle_t R_RegisterMD3(const char *name, model_t *mod)$/;"	f
R_RegisterMDR	src/renderergl1/tr_model.c	/^qhandle_t R_RegisterMDR(const char *name, model_t *mod)$/;"	f
R_RegisterMDR	src/renderergl2/tr_model.c	/^qhandle_t R_RegisterMDR(const char *name, model_t *mod)$/;"	f
R_RemapShader	src/renderergl1/tr_shader.c	/^void R_RemapShader(const char *shaderName, const char *newShaderName, const char *timeOffset) {$/;"	f
R_RemapShader	src/renderergl2/tr_shader.c	/^void R_RemapShader(const char *shaderName, const char *newShaderName, const char *timeOffset) {$/;"	f
R_RenderAllCubemaps	src/renderergl2/tr_bsp.c	/^void R_RenderAllCubemaps(void)$/;"	f
R_RenderCubemapSide	src/renderergl2/tr_main.c	/^void R_RenderCubemapSide( int cubemapIndex, int cubemapSide, qboolean subscene )$/;"	f
R_RenderDlightCubemaps	src/renderergl2/tr_main.c	/^void R_RenderDlightCubemaps(const refdef_t *fd)$/;"	f
R_RenderGlyph	src/renderercommon/tr_font.c	/^FT_Bitmap *R_RenderGlyph(FT_GlyphSlot glyph, glyphInfo_t* glyphOut) {$/;"	f
R_RenderPshadowMaps	src/renderergl2/tr_main.c	/^void R_RenderPshadowMaps(const refdef_t *fd)$/;"	f
R_RenderShadowEdges	src/renderergl1/tr_shadows.c	/^void R_RenderShadowEdges( void ) {$/;"	f
R_RenderShadowEdges	src/renderergl2/tr_shadows.c	/^void R_RenderShadowEdges( void ) {$/;"	f
R_RenderSunShadowMaps	src/renderergl2/tr_main.c	/^void R_RenderSunShadowMaps(const refdef_t *fd, int level)$/;"	f
R_RenderView	src/renderergl1/tr_main.c	/^void R_RenderView (viewParms_t *parms) {$/;"	f
R_RenderView	src/renderergl2/tr_main.c	/^void R_RenderView (viewParms_t *parms) {$/;"	f
R_RotateForEntity	src/renderergl1/tr_main.c	/^void R_RotateForEntity( const trRefEntity_t *ent, const viewParms_t *viewParms,$/;"	f
R_RotateForEntity	src/renderergl2/tr_main.c	/^void R_RotateForEntity( const trRefEntity_t *ent, const viewParms_t *viewParms,$/;"	f
R_RotateForViewer	src/renderergl1/tr_main.c	/^void R_RotateForViewer (void) $/;"	f
R_RotateForViewer	src/renderergl2/tr_main.c	/^void R_RotateForViewer (void) $/;"	f
R_ScreenShotJPEG_f	src/renderergl1/tr_init.c	/^void R_ScreenShotJPEG_f (void) {$/;"	f
R_ScreenShotJPEG_f	src/renderergl2/tr_init.c	/^void R_ScreenShotJPEG_f (void) {$/;"	f
R_ScreenShot_f	src/renderergl1/tr_init.c	/^void R_ScreenShot_f (void) {$/;"	f
R_ScreenShot_f	src/renderergl2/tr_init.c	/^void R_ScreenShot_f (void) {$/;"	f
R_ScreenshotFilename	src/renderergl1/tr_init.c	/^void R_ScreenshotFilename( int lastNumber, char *fileName ) {$/;"	f
R_ScreenshotFilename	src/renderergl2/tr_init.c	/^void R_ScreenshotFilename( int lastNumber, char *fileName ) {$/;"	f
R_ScreenshotFilenameJPEG	src/renderergl1/tr_init.c	/^void R_ScreenshotFilenameJPEG( int lastNumber, char *fileName ) {$/;"	f
R_ScreenshotFilenameJPEG	src/renderergl2/tr_init.c	/^void R_ScreenshotFilenameJPEG( int lastNumber, char *fileName ) {$/;"	f
R_SetColorMappings	src/renderergl1/tr_image.c	/^void R_SetColorMappings( void ) {$/;"	f
R_SetColorMappings	src/renderergl2/tr_image.c	/^void R_SetColorMappings( void ) {$/;"	f
R_SetColorMode	src/renderergl1/tr_cmds.c	/^void R_SetColorMode(GLboolean *rgba, stereoFrame_t stereoFrame, int colormode)$/;"	f
R_SetColorMode	src/renderergl2/tr_cmds.c	/^void R_SetColorMode(GLboolean *rgba, stereoFrame_t stereoFrame, int colormode)$/;"	f
R_SetFarClip	src/renderergl1/tr_main.c	/^static void R_SetFarClip( void )$/;"	f	file:
R_SetFarClip	src/renderergl2/tr_main.c	/^static void R_SetFarClip( void )$/;"	f	file:
R_SetFlareCoeff	src/renderergl1/tr_flares.c	/^static void R_SetFlareCoeff( void ) {$/;"	f	file:
R_SetFlareCoeff	src/renderergl2/tr_flares.c	/^static void R_SetFlareCoeff( void ) {$/;"	f	file:
R_SetParent	src/renderergl1/tr_bsp.c	/^static	void R_SetParent (mnode_t *node, mnode_t *parent)$/;"	f	file:
R_SetParent	src/renderergl2/tr_bsp.c	/^static	void R_SetParent (mnode_t *node, mnode_t *parent)$/;"	f	file:
R_SetupEntityLighting	src/renderergl1/tr_light.c	/^void R_SetupEntityLighting( const trRefdef_t *refdef, trRefEntity_t *ent ) {$/;"	f
R_SetupEntityLighting	src/renderergl2/tr_light.c	/^void R_SetupEntityLighting( const trRefdef_t *refdef, trRefEntity_t *ent ) {$/;"	f
R_SetupEntityLightingGrid	src/renderergl1/tr_light.c	/^static void R_SetupEntityLightingGrid( trRefEntity_t *ent ) {$/;"	f	file:
R_SetupEntityLightingGrid	src/renderergl2/tr_light.c	/^static void R_SetupEntityLightingGrid( trRefEntity_t *ent, world_t *world ) {$/;"	f	file:
R_SetupFrustum	src/renderergl1/tr_main.c	/^void R_SetupFrustum (viewParms_t *dest, float xmin, float xmax, float ymax, float zProj, float stereoSep)$/;"	f
R_SetupFrustum	src/renderergl2/tr_main.c	/^void R_SetupFrustum (viewParms_t *dest, float xmin, float xmax, float ymax, float zProj, float zFar, float stereoSep)$/;"	f
R_SetupProjection	src/renderergl1/tr_main.c	/^void R_SetupProjection(viewParms_t *dest, float zProj, qboolean computeFrustum)$/;"	f
R_SetupProjection	src/renderergl2/tr_main.c	/^void R_SetupProjection(viewParms_t *dest, float zProj, float zFar, qboolean computeFrustum)$/;"	f
R_SetupProjectionOrtho	src/renderergl2/tr_main.c	/^void R_SetupProjectionOrtho(viewParms_t *dest, vec3_t viewBounds[2])$/;"	f
R_SetupProjectionZ	src/renderergl1/tr_main.c	/^void R_SetupProjectionZ(viewParms_t *dest)$/;"	f
R_SetupProjectionZ	src/renderergl2/tr_main.c	/^void R_SetupProjectionZ(viewParms_t *dest)$/;"	f
R_ShaderList_f	src/renderergl1/tr_shader.c	/^void	R_ShaderList_f (void) {$/;"	f
R_ShaderList_f	src/renderergl2/tr_shader.c	/^void	R_ShaderList_f (void) {$/;"	f
R_ShutDownQueries	src/renderergl2/tr_init.c	/^void R_ShutDownQueries(void)$/;"	f
R_ShutdownVaos	src/renderergl2/tr_vbo.c	/^void R_ShutdownVaos(void)$/;"	f
R_SkinList_f	src/renderergl1/tr_image.c	/^void	R_SkinList_f( void ) {$/;"	f
R_SkinList_f	src/renderergl2/tr_image.c	/^void	R_SkinList_f( void ) {$/;"	f
R_SortDrawSurfs	src/renderergl1/tr_main.c	/^void R_SortDrawSurfs( drawSurf_t *drawSurfs, int numDrawSurfs ) {$/;"	f
R_SortDrawSurfs	src/renderergl2/tr_main.c	/^void R_SortDrawSurfs( drawSurf_t *drawSurfs, int numDrawSurfs ) {$/;"	f
R_SpriteFogNum	src/renderergl1/tr_main.c	/^int R_SpriteFogNum( trRefEntity_t *ent ) {$/;"	f
R_SpriteFogNum	src/renderergl2/tr_main.c	/^int R_SpriteFogNum( trRefEntity_t *ent ) {$/;"	f
R_StitchAllPatches	src/renderergl1/tr_bsp.c	/^void R_StitchAllPatches( void ) {$/;"	f
R_StitchAllPatches	src/renderergl2/tr_bsp.c	/^void R_StitchAllPatches( void ) {$/;"	f
R_StitchPatches	src/renderergl1/tr_bsp.c	/^int R_StitchPatches( int grid1num, int grid2num ) {$/;"	f
R_StitchPatches	src/renderergl2/tr_bsp.c	/^int R_StitchPatches( int grid1num, int grid2num ) {$/;"	f
R_SubdividePatchToGrid	src/renderergl1/tr_curve.c	/^srfGridMesh_t *R_SubdividePatchToGrid( int width, int height,$/;"	f
R_SubdividePatchToGrid	src/renderergl2/tr_curve.c	/^srfBspSurface_t *R_SubdividePatchToGrid( int width, int height,$/;"	f
R_SumOfUsedImages	src/renderergl1/tr_image.c	/^int R_SumOfUsedImages( void ) {$/;"	f
R_SumOfUsedImages	src/renderergl2/tr_image.c	/^int R_SumOfUsedImages( void ) {$/;"	f
R_TakeScreenshot	src/renderergl1/tr_init.c	/^void R_TakeScreenshot( int x, int y, int width, int height, char *name, qboolean jpeg ) {$/;"	f
R_TakeScreenshot	src/renderergl2/tr_init.c	/^void R_TakeScreenshot( int x, int y, int width, int height, char *name, qboolean jpeg ) {$/;"	f
R_TransformClipToWindow	src/renderergl1/tr_main.c	/^void R_TransformClipToWindow( const vec4_t clip, const viewParms_t *view, vec4_t normalized, vec4_t window ) {$/;"	f
R_TransformClipToWindow	src/renderergl2/tr_main.c	/^void R_TransformClipToWindow( const vec4_t clip, const viewParms_t *view, vec4_t normalized, vec4_t window ) {$/;"	f
R_TransformDlights	src/renderergl1/tr_light.c	/^void R_TransformDlights( int count, dlight_t *dl, orientationr_t *or) {$/;"	f
R_TransformDlights	src/renderergl2/tr_light.c	/^void R_TransformDlights( int count, dlight_t *dl, orientationr_t *or) {$/;"	f
R_TransformModelToClip	src/renderergl1/tr_main.c	/^void R_TransformModelToClip( const vec3_t src, const float *modelMatrix, const float *projectionMatrix,$/;"	f
R_TransformModelToClip	src/renderergl2/tr_main.c	/^void R_TransformModelToClip( const vec3_t src, const float *modelMatrix, const float *projectionMatrix,$/;"	f
R_TryStitchingPatch	src/renderergl1/tr_bsp.c	/^int R_TryStitchingPatch( int grid1num ) {$/;"	f
R_TryStitchingPatch	src/renderergl2/tr_bsp.c	/^int R_TryStitchingPatch( int grid1num ) {$/;"	f
R_UpdateSubImage	src/renderergl2/tr_image.c	/^void R_UpdateSubImage( image_t *image, byte *pic, int x, int y, int width, int height )$/;"	f
R_VaoList_f	src/renderergl2/tr_vbo.c	/^void R_VaoList_f(void)$/;"	f
R_VaoPackColors	src/renderergl2/tr_vbo.c	/^int R_VaoPackColors(byte *out, vec4_t color)$/;"	f
R_VaoPackNormal	src/renderergl2/tr_vbo.c	/^int R_VaoPackNormal(byte *out, vec3_t v)$/;"	f
R_VaoPackTangent	src/renderergl2/tr_vbo.c	/^int R_VaoPackTangent(byte *out, vec4_t v)$/;"	f
R_VaoPackTexCoord	src/renderergl2/tr_vbo.c	/^int R_VaoPackTexCoord(byte *out, vec2_t st)$/;"	f
R_VaoUnpackNormal	src/renderergl2/tr_vbo.c	/^void R_VaoUnpackNormal(vec3_t v, uint32_t b)$/;"	f
R_VaoUnpackTangent	src/renderergl2/tr_vbo.c	/^void R_VaoUnpackTangent(vec4_t v, uint32_t b)$/;"	f
R_WorldToLocal	src/renderergl1/tr_main.c	/^void R_WorldToLocal (vec3_t world, vec3_t local) {$/;"	f
R_WorldToLocal	src/renderergl2/tr_main.c	/^void R_WorldToLocal (const vec3_t world, vec3_t local) {$/;"	f
R_inPVS	src/renderergl1/tr_world.c	/^qboolean R_inPVS( const vec3_t p1, const vec3_t p2 ) {$/;"	f
R_inPVS	src/renderergl2/tr_world.c	/^qboolean R_inPVS( const vec3_t p1, const vec3_t p2 ) {$/;"	f
RadiusFromBounds	src/qcommon/q_math.c	/^float RadiusFromBounds( const vec3_t mins, const vec3_t maxs ) {$/;"	f
RawImage_GetFormat	src/renderergl2/tr_image.c	/^static GLenum RawImage_GetFormat(const byte *data, int numPixels, qboolean lightMap, imgType_t type, imgFlags_t flags)$/;"	f	file:
RawImage_HasAlpha	src/renderergl2/tr_image.c	/^static qboolean RawImage_HasAlpha(const byte *scan, int numPixels)$/;"	f	file:
RawImage_ScaleToPower2	src/renderergl2/tr_image.c	/^static void RawImage_ScaleToPower2( byte **data, int *inout_width, int *inout_height, int *inout_scaled_width, int *inout_scaled_height, imgType_t type, imgFlags_t flags, byte **resampledBuffer)$/;"	f	file:
RawImage_SwizzleRA	src/renderergl2/tr_image.c	/^static void RawImage_SwizzleRA( byte *data, int width, int height )$/;"	f	file:
RawImage_UploadTexture	src/renderergl2/tr_image.c	/^static void RawImage_UploadTexture( byte *data, int x, int y, int width, int height, GLenum internalFormat, imgType_t type, imgFlags_t flags, qboolean subtexture )$/;"	f	file:
RawSamples	src/client/snd_local.h	/^	void (*RawSamples)(int stream, int samples, int rate, int width, int channels, const byte *data, float volume, int entityNum);$/;"	m	struct:__anon96
RbuFrame	src/server/sqlite3.c	/^struct RbuFrame {$/;"	s	file:
RbuFrame	src/server/sqlite3.c	/^typedef struct RbuFrame RbuFrame;$/;"	t	typeref:struct:RbuFrame	file:
RbuObjIter	src/server/sqlite3.c	/^struct RbuObjIter {$/;"	s	file:
RbuObjIter	src/server/sqlite3.c	/^typedef struct RbuObjIter RbuObjIter;$/;"	t	typeref:struct:RbuObjIter	file:
RbuState	src/server/sqlite3.c	/^struct RbuState {$/;"	s	file:
RbuState	src/server/sqlite3.c	/^typedef struct RbuState RbuState;$/;"	t	typeref:struct:RbuState	file:
RbuUpdateStmt	src/server/sqlite3.c	/^struct RbuUpdateStmt {$/;"	s	file:
RbuUpdateStmt	src/server/sqlite3.c	/^typedef struct RbuUpdateStmt RbuUpdateStmt;$/;"	t	typeref:struct:RbuUpdateStmt	file:
Reached_BinaryMover	src/game/g_mover.c	/^void Reached_BinaryMover( gentity_t *ent )$/;"	f
Reached_Train	src/game/g_mover.c	/^void Reached_Train( gentity_t *ent )$/;"	f
ReadBufferedFile	src/renderercommon/tr_image_png.c	/^static struct BufferedFile *ReadBufferedFile(const char *name)$/;"	f	file:
RecordClientStat	src/master/stats.c	/^void RecordClientStat( const char *address, const char *version, const char *renderer )$/;"	f
RecordCompare	src/server/sqlite3.c	/^typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);$/;"	t	file:
RecordGameStat	src/master/stats.c	/^void RecordGameStat( const char *address, const char *dataText )$/;"	f
Rect_ContainsPoint	src/ui/ui_shared.c	/^qboolean Rect_ContainsPoint( rectDef_t *rect, float x, float y )$/;"	f
Rect_Parse	src/ui/ui_shared.c	/^qboolean Rect_Parse( char **p, rectDef_t *r )$/;"	f
Rect_ToWindowCoords	src/ui/ui_shared.c	/^void Rect_ToWindowCoords( rectDef_t *rect, windowDef_t *window )$/;"	f
Rectangle	src/ui/ui_shared.h	/^typedef rectDef_t Rectangle;$/;"	t
RegisterFont	src/renderercommon/tr_public.h	/^	void	(*RegisterFont)(const char *fontName, int pointSize, fontInfo_t *font);$/;"	m	struct:__anon108
RegisterModel	src/renderercommon/tr_public.h	/^	qhandle_t (*RegisterModel)( const char *name );$/;"	m	struct:__anon108
RegisterShader	src/renderercommon/tr_public.h	/^	qhandle_t (*RegisterShader)( const char *name );$/;"	m	struct:__anon108
RegisterShaderNoMip	src/renderercommon/tr_public.h	/^	qhandle_t (*RegisterShaderNoMip)( const char *name );$/;"	m	struct:__anon108
RegisterSkin	src/renderercommon/tr_public.h	/^	qhandle_t (*RegisterSkin)( const char *name );$/;"	m	struct:__anon108
RegisterSound	src/client/snd_local.h	/^	sfxHandle_t (*RegisterSound)( const char *sample, qboolean compressed );$/;"	m	struct:__anon96
Regnode	src/tools/lcc/src/config.h	/^} *Regnode;$/;"	t	typeref:struct:__anon275
Reinsert	src/server/sqlite3.c	/^static int Reinsert($/;"	f	file:
RemapShader	src/renderercommon/tr_public.h	/^	void	(*RemapShader)(const char *oldShader, const char *newShader, const char *offsetTime);$/;"	m	struct:__anon108
RemoveColinearPoints	src/qcommon/cm_polylib.c	/^void	RemoveColinearPoints (winding_t *w)$/;"	f
RenderScene	src/renderercommon/tr_public.h	/^	void	(*RenderScene)( const refdef_t *fd );$/;"	m	struct:__anon108
ResampleSfx	src/client/snd_mem.c	/^static int ResampleSfx( sfx_t *sfx, int channels, int inrate, int inwidth, int samples, byte *data, qboolean compressed ) {$/;"	f	file:
ResampleSfxRaw	src/client/snd_mem.c	/^static int ResampleSfxRaw( short *sfx, int channels, int inrate, int inwidth, int samples, byte *data ) {$/;"	f	file:
ResampleTexture	src/renderergl1/tr_image.c	/^static void ResampleTexture( unsigned *in, int inwidth, int inheight, unsigned *out,  $/;"	f	file:
ResampleTexture	src/renderergl2/tr_image.c	/^static void ResampleTexture( byte *in, int inwidth, int inheight, byte *out,  $/;"	f	file:
Respatialize	src/client/snd_local.h	/^	void (*Respatialize)( int entityNum, const vec3_t origin, vec3_t axis[3], int inwater );$/;"	m	struct:__anon96
ReturnToPos1orApos1	src/game/g_mover.c	/^void ReturnToPos1orApos1( gentity_t *ent )$/;"	f
ReusableSpace	src/server/sqlite3.c	/^struct ReusableSpace {$/;"	s	file:
ReverseWinding	src/qcommon/cm_polylib.c	/^winding_t	*ReverseWinding (winding_t *w)$/;"	f
RllDecodeMonoToMono	src/client/cl_cin.c	/^long RllDecodeMonoToMono(unsigned char *from,short *to,unsigned int size,char signedOutput ,unsigned short flag)$/;"	f
RllDecodeMonoToStereo	src/client/cl_cin.c	/^long RllDecodeMonoToStereo(unsigned char *from,short *to,unsigned int size,char signedOutput,unsigned short flag)$/;"	f
RllDecodeStereoToMono	src/client/cl_cin.c	/^long RllDecodeStereoToMono(unsigned char *from,short *to,unsigned int size,char signedOutput, unsigned short flag)$/;"	f
RllDecodeStereoToStereo	src/client/cl_cin.c	/^long RllDecodeStereoToStereo(unsigned char *from,short *to,unsigned int size,char signedOutput, unsigned short flag)$/;"	f
RllSetupTable	src/client/cl_cin.c	/^static void RllSetupTable( void )$/;"	f	file:
RoQFrameSize	src/client/cl_cin.c	/^	unsigned int		RoQFrameSize;$/;"	m	struct:__anon100	file:
RoQInterrupt	src/client/cl_cin.c	/^static void RoQInterrupt(void)$/;"	f	file:
RoQPlayed	src/client/cl_cin.c	/^	long				RoQPlayed;$/;"	m	struct:__anon100	file:
RoQPrepMcomp	src/client/cl_cin.c	/^static void RoQPrepMcomp( long xoff, long yoff ) $/;"	f	file:
RoQReset	src/client/cl_cin.c	/^static void RoQReset( void ) {$/;"	f	file:
RoQShutdown	src/client/cl_cin.c	/^static void RoQShutdown( void ) {$/;"	f	file:
RoQ_init	src/client/cl_cin.c	/^static void RoQ_init( void )$/;"	f	file:
RotateAroundDirection	src/qcommon/q_math.c	/^void RotateAroundDirection( vec3_t axis[3], vec_t angle ) {$/;"	f
RotatePoint	src/qcommon/cm_trace.c	/^void RotatePoint(vec3_t point, \/*const*\/ vec3_t matrix[3]) { \/\/ FIXME $/;"	f
RotatePointAroundVector	src/qcommon/q_math.c	/^void RotatePointAroundVector( vec3_t dst, const vec3_t dir, const vec3_t point,$/;"	f
RowSet	src/server/sqlite3.c	/^struct RowSet {$/;"	s	file:
RowSet	src/server/sqlite3.c	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet	file:
RowSetChunk	src/server/sqlite3.c	/^struct RowSetChunk {$/;"	s	file:
RowSetEntry	src/server/sqlite3.c	/^struct RowSetEntry {            $/;"	s	file:
Rtree	src/server/sqlite3.c	/^struct Rtree {$/;"	s	file:
Rtree	src/server/sqlite3.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
RtreeCell	src/server/sqlite3.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	src/server/sqlite3.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeConstraint	src/server/sqlite3.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	src/server/sqlite3.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeCoord	src/server/sqlite3.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	src/server/sqlite3.c	/^union RtreeCoord {$/;"	u	file:
RtreeCursor	src/server/sqlite3.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	src/server/sqlite3.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeDValue	src/server/sqlite3.c	/^  typedef double RtreeDValue;              \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	src/server/sqlite3.c	/^  typedef sqlite3_int64 RtreeDValue;       \/* High accuracy coordinate *\/$/;"	t	file:
RtreeGeomCallback	src/server/sqlite3.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	src/server/sqlite3.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeMatchArg	src/server/sqlite3.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	src/server/sqlite3.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeNode	src/server/sqlite3.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	src/server/sqlite3.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
RtreeSearchPoint	src/server/sqlite3.c	/^struct RtreeSearchPoint {$/;"	s	file:
RtreeSearchPoint	src/server/sqlite3.c	/^typedef struct RtreeSearchPoint RtreeSearchPoint;$/;"	t	typeref:struct:RtreeSearchPoint	file:
RtreeValue	src/server/sqlite3.c	/^  typedef float RtreeValue;                \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	src/server/sqlite3.c	/^  typedef int RtreeValue;                  \/* Low accuracy coordinate *\/$/;"	t	file:
Rule	src/tools/lcc/lburg/lburg.h	/^typedef struct rule *Rule;$/;"	t	typeref:struct:rule
S1	src/game/bg_public.h	/^  S1,$/;"	e	enum:__anon351
S2	src/game/bg_public.h	/^  S2,$/;"	e	enum:__anon351
S2M_GAMESTAT	src/master/messages.c	48;"	d	file:
S2M_HEARTBEAT	src/master/messages.c	45;"	d	file:
S2M_INFORESPONSE	src/master/messages.c	54;"	d	file:
S3	src/game/bg_public.h	/^  S3$/;"	e	enum:__anon351
SA	src/qcommon/vm_powerpc.c	127;"	d	file:
SA	src/qcommon/vm_powerpc.c	129;"	d	file:
SAVE	src/qcommon/vm_sparc.c	/^	SAVEI, SAVE,$/;"	e	enum:sparc_iname	file:
SAVEI	src/qcommon/vm_sparc.c	/^	SAVEI, SAVE,$/;"	e	enum:sparc_iname	file:
SAVEPOINT_BEGIN	src/server/sqlite3.c	12507;"	d	file:
SAVEPOINT_RELEASE	src/server/sqlite3.c	12508;"	d	file:
SAVEPOINT_ROLLBACK	src/server/sqlite3.c	12509;"	d	file:
SAVE_SZ	src/server/sqlite3.c	94740;"	d	file:
SAY_ADMINS	src/game/bg_public.h	/^  SAY_ADMINS,$/;"	e	enum:__anon347
SAY_ADMINS_PUBLIC	src/game/bg_public.h	/^  SAY_ADMINS_PUBLIC,$/;"	e	enum:__anon347
SAY_ALL	src/game/bg_public.h	/^  SAY_ALL,$/;"	e	enum:__anon347
SAY_AREA	src/game/bg_public.h	/^  SAY_AREA,$/;"	e	enum:__anon347
SAY_PRIVMSG	src/game/bg_public.h	/^  SAY_PRIVMSG,$/;"	e	enum:__anon347
SAY_RAW	src/game/bg_public.h	/^  SAY_RAW$/;"	e	enum:__anon347
SAY_TEAM	src/game/bg_public.h	/^  SAY_TEAM,$/;"	e	enum:__anon347
SAY_TPRIVMSG	src/game/bg_public.h	/^  SAY_TPRIVMSG,$/;"	e	enum:__anon347
SBRA	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
SB_VALID_TOGGLEBIT	src/game/bg_public.h	275;"	d
SC	src/qcommon/vm_powerpc_asm.c	658;"	d	file:
SCA_ALIENSENSE	src/game/bg_public.h	254;"	d
SCA_CANUSELADDERS	src/game/bg_public.h	255;"	d
SCA_CANZOOM	src/game/bg_public.h	252;"	d
SCA_FOVWARPS	src/game/bg_public.h	253;"	d
SCA_REGEN	src/game/bg_public.h	258;"	d
SCA_STAMINA	src/game/bg_public.h	257;"	d
SCA_TAKESFALLDAMAGE	src/game/bg_public.h	251;"	d
SCA_WALLCLIMBER	src/game/bg_public.h	250;"	d
SCA_WALLJUMPER	src/game/bg_public.h	256;"	d
SCFL_NOBINARYNUMBERS	src/qcommon/parse.c	33;"	d	file:
SCFL_NOERRORS	src/qcommon/parse.c	28;"	d	file:
SCFL_NONUMBERVALUES	src/qcommon/parse.c	34;"	d	file:
SCFL_NOSTRINGESCAPECHARS	src/qcommon/parse.c	31;"	d	file:
SCFL_NOSTRINGWHITESPACES	src/qcommon/parse.c	30;"	d	file:
SCFL_NOWARNINGS	src/qcommon/parse.c	29;"	d	file:
SCFL_PRIMITIVE	src/qcommon/parse.c	32;"	d	file:
SCHAR_MAX	src/game/bg_lib.h	44;"	d
SCHAR_MIN	src/game/bg_lib.h	45;"	d
SCHEMA_ENC	src/server/sqlite3.c	12276;"	d	file:
SCHEMA_TABLE	src/server/sqlite3.c	10220;"	d	file:
SCREEN_HEIGHT	src/qcommon/q_shared.h	375;"	d
SCREEN_WIDTH	src/qcommon/q_shared.h	374;"	d
SCROLLBAR_ARROW_HEIGHT	src/ui/ui_shared.h	106;"	d
SCROLLBAR_ARROW_SIZE	src/ui/ui_shared.h	104;"	d
SCROLLBAR_ARROW_WIDTH	src/ui/ui_shared.h	105;"	d
SCROLLBAR_H	src/ui/ui_shared.h	114;"	d
SCROLLBAR_SLIDER_HEIGHT	src/ui/ui_shared.h	110;"	d
SCROLLBAR_SLIDER_X	src/ui/ui_shared.h	107;"	d
SCROLLBAR_SLIDER_Y	src/ui/ui_shared.h	109;"	d
SCROLLBAR_W	src/ui/ui_shared.h	113;"	d
SCROLLBAR_X	src/ui/ui_shared.h	111;"	d
SCROLLBAR_Y	src/ui/ui_shared.h	112;"	d
SCROLL_TIME_ADJUST	src/ui/ui_shared.c	27;"	d	file:
SCROLL_TIME_ADJUSTOFFSET	src/ui/ui_shared.c	28;"	d	file:
SCROLL_TIME_FLOOR	src/ui/ui_shared.c	29;"	d	file:
SCROLL_TIME_START	src/ui/ui_shared.c	26;"	d	file:
SCR_AdjustFrom640	src/client/cl_scrn.c	/^void SCR_AdjustFrom640( float *x, float *y, float *w, float *h ) {$/;"	f
SCR_DebugGraph	src/client/cl_scrn.c	/^void SCR_DebugGraph (float value)$/;"	f
SCR_DrawBigString	src/client/cl_scrn.c	/^void SCR_DrawBigString( int x, int y, const char *s, float alpha, qboolean noColorEscape ) {$/;"	f
SCR_DrawBigStringColor	src/client/cl_scrn.c	/^void SCR_DrawBigStringColor( int x, int y, const char *s, vec4_t color, qboolean noColorEscape ) {$/;"	f
SCR_DrawChar	src/client/cl_scrn.c	/^static void SCR_DrawChar( int x, int y, float size, int ch ) {$/;"	f	file:
SCR_DrawCinematic	src/client/cl_cin.c	/^void SCR_DrawCinematic (void) {$/;"	f
SCR_DrawDebugGraph	src/client/cl_scrn.c	/^void SCR_DrawDebugGraph (void)$/;"	f
SCR_DrawNamedPic	src/client/cl_scrn.c	/^void SCR_DrawNamedPic( float x, float y, float width, float height, const char *picname ) {$/;"	f
SCR_DrawPic	src/client/cl_scrn.c	/^void SCR_DrawPic( float x, float y, float width, float height, qhandle_t hShader ) {$/;"	f
SCR_DrawScreenField	src/client/cl_scrn.c	/^void SCR_DrawScreenField( stereoFrame_t stereoFrame ) {$/;"	f
SCR_DrawSmallChar	src/client/cl_scrn.c	/^void SCR_DrawSmallChar( int x, int y, int ch ) {$/;"	f
SCR_DrawSmallStringExt	src/client/cl_scrn.c	/^void SCR_DrawSmallStringExt( int x, int y, const char *string, float *setColor, qboolean forceColor,$/;"	f
SCR_DrawStringExt	src/client/cl_scrn.c	/^void SCR_DrawStringExt( int x, int y, float size, const char *string, float *setColor, qboolean forceColor,$/;"	f
SCR_DrawVoipMeter	src/client/cl_scrn.c	/^void SCR_DrawVoipMeter( void ) {$/;"	f
SCR_FillRect	src/client/cl_scrn.c	/^void SCR_FillRect( float x, float y, float width, float height, const float *color ) {$/;"	f
SCR_GetBigStringWidth	src/client/cl_scrn.c	/^int	SCR_GetBigStringWidth( const char *str ) {$/;"	f
SCR_Init	src/client/cl_scrn.c	/^void SCR_Init( void ) {$/;"	f
SCR_RunCinematic	src/client/cl_cin.c	/^void SCR_RunCinematic (void)$/;"	f
SCR_StopCinematic	src/client/cl_cin.c	/^void SCR_StopCinematic(void) {$/;"	f
SCR_Strlen	src/client/cl_scrn.c	/^static int SCR_Strlen( const char *str ) {$/;"	f	file:
SCR_UpdateScreen	src/client/cl_scrn.c	/^void SCR_UpdateScreen( void ) {$/;"	f
SC_MASK	src/qcommon/vm_powerpc_asm.c	659;"	d	file:
SDIR	GNUmakefile	/^SDIR=$(MOUNT_DIR)\/server$/;"	m
SDIV	src/qcommon/vm_sparc.c	/^	SDIVI, SDIV,$/;"	e	enum:sparc_iname	file:
SDIVI	src/qcommon/vm_sparc.c	/^	SDIVI, SDIV,$/;"	e	enum:sparc_iname	file:
SDLDIR	GNUmakefile	/^SDLDIR=$(MOUNT_DIR)\/sdl$/;"	m
SDLHDIR	GNUmakefile	/^SDLHDIR=$(DEP_DIR)\/SDL2$/;"	m
SDL_CFLAGS	GNUmakefile	/^    SDL_CFLAGS ?= $(shell pkg-config --silence-errors --cflags sdl2)$/;"	m
SDL_LIBS	GNUmakefile	/^    SDL_LIBS ?= $(shell pkg-config --silence-errors --libs sdl2)$/;"	m
SDL_glContext	src/sdl/sdl_glimp.c	/^static SDL_GLContext SDL_glContext = NULL;$/;"	v	file:
SDL_window	src/sdl/sdl_glimp.c	/^SDL_Window *SDL_window = NULL;$/;"	v
SDL_window	src/sdl/sdl_input.c	/^static SDL_Window *SDL_window = NULL;$/;"	v	file:
SELECTTRACE	src/server/sqlite3.c	110525;"	d	file:
SELECTTRACE	src/server/sqlite3.c	110531;"	d	file:
SELECTTRACE_ENABLED	src/server/sqlite3.c	10183;"	d	file:
SELECTTRACE_ENABLED	src/server/sqlite3.c	10185;"	d	file:
SEMIC	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
SENTINEL_MULAW_FOUR_BIT_RUN	src/client/snd_local.h	229;"	d
SENTINEL_MULAW_ZERO_RUN	src/client/snd_local.h	228;"	d
SERVERBIN	GNUmakefile	/^SERVERBIN=tremded$/;"	m
SETBIT	src/server/sqlite3.c	41290;"	d	file:
SETBOUNDS	src/cgame/cg_ents.c	596;"	d	file:
SETHI	src/qcommon/vm_sparc.c	/^	CALL, NOP, SETHI,$/;"	e	enum:sparc_iname	file:
SET_FLOAT_WORD	src/game/bg_lib.c	887;"	d	file:
SET_FULLSYNC	src/server/sqlite3.c	11704;"	d	file:
SET_JMPOFS	src/qcommon/vm_x86.c	375;"	d	file:
SE_CHAR	src/qcommon/qcommon.h	/^	SE_CHAR,		\/\/ evValue is an ascii char$/;"	e	enum:__anon427
SE_CONSOLE	src/qcommon/qcommon.h	/^	SE_CONSOLE		\/\/ evPtr is a char*$/;"	e	enum:__anon427
SE_JOYSTICK_AXIS	src/qcommon/qcommon.h	/^	SE_JOYSTICK_AXIS,	\/\/ evValue is an axis number and evValue2 is the current state (-127 to 127)$/;"	e	enum:__anon427
SE_KEY	src/qcommon/qcommon.h	/^	SE_KEY,			\/\/ evValue is a key code, evValue2 is the down flag$/;"	e	enum:__anon427
SE_MOUSE	src/qcommon/qcommon.h	/^	SE_MOUSE,		\/\/ evValue and evValue2 are relative signed x \/ y moves$/;"	e	enum:__anon427
SE_NONE	src/qcommon/qcommon.h	/^	SE_NONE = 0,		\/\/ evTime is still valid$/;"	e	enum:__anon427
SF_Aggregate	src/server/sqlite3.c	13535;"	d	file:
SF_All	src/server/sqlite3.c	13533;"	d	file:
SF_BAD	src/renderergl1/tr_local.h	/^	SF_BAD,$/;"	e	enum:__anon151
SF_BAD	src/renderergl2/tr_local.h	/^	SF_BAD,$/;"	e	enum:__anon44
SF_Compound	src/server/sqlite3.c	13539;"	d	file:
SF_Converted	src/server/sqlite3.c	13547;"	d	file:
SF_Distinct	src/server/sqlite3.c	13532;"	d	file:
SF_ENTITY	src/renderergl1/tr_local.h	/^	SF_ENTITY,				\/\/ beams, rails, lightning, etc that can be determined by entity$/;"	e	enum:__anon151
SF_ENTITY	src/renderergl2/tr_local.h	/^	SF_ENTITY,				\/\/ beams, rails, lightning, etc that can be determined by entity$/;"	e	enum:__anon44
SF_Expanded	src/server/sqlite3.c	13537;"	d	file:
SF_FACE	src/renderergl1/tr_local.h	/^	SF_FACE,$/;"	e	enum:__anon151
SF_FACE	src/renderergl2/tr_local.h	/^	SF_FACE,$/;"	e	enum:__anon44
SF_FLARE	src/renderergl1/tr_local.h	/^	SF_FLARE,$/;"	e	enum:__anon151
SF_FLARE	src/renderergl2/tr_local.h	/^	SF_FLARE,$/;"	e	enum:__anon44
SF_FixedLimit	src/server/sqlite3.c	13546;"	d	file:
SF_GRID	src/renderergl1/tr_local.h	/^	SF_GRID,$/;"	e	enum:__anon151
SF_GRID	src/renderergl2/tr_local.h	/^	SF_GRID,$/;"	e	enum:__anon44
SF_HasTypeInfo	src/server/sqlite3.c	13538;"	d	file:
SF_IQM	src/renderergl1/tr_local.h	/^	SF_IQM,$/;"	e	enum:__anon151
SF_IQM	src/renderergl2/tr_local.h	/^	SF_IQM,$/;"	e	enum:__anon44
SF_IncludeHidden	src/server/sqlite3.c	13548;"	d	file:
SF_MAX	src/renderergl1/tr_local.h	/^	SF_MAX = 0x7fffffff			\/\/ ensures that sizeof( surfaceType_t ) == sizeof( int )$/;"	e	enum:__anon151
SF_MAX	src/renderergl2/tr_local.h	/^	SF_MAX = 0x7fffffff			\/\/ ensures that sizeof( surfaceType_t ) == sizeof( int )$/;"	e	enum:__anon44
SF_MD3	src/renderergl1/tr_local.h	/^	SF_MD3,$/;"	e	enum:__anon151
SF_MDR	src/renderergl1/tr_local.h	/^	SF_MDR,$/;"	e	enum:__anon151
SF_MDR	src/renderergl2/tr_local.h	/^	SF_MDR,$/;"	e	enum:__anon44
SF_MDV	src/renderergl2/tr_local.h	/^	SF_MDV,$/;"	e	enum:__anon44
SF_MaybeConvert	src/server/sqlite3.c	13543;"	d	file:
SF_MinMaxAgg	src/server/sqlite3.c	13544;"	d	file:
SF_MultiValue	src/server/sqlite3.c	13541;"	d	file:
SF_NUM_SURFACE_TYPES	src/renderergl1/tr_local.h	/^	SF_NUM_SURFACE_TYPES,$/;"	e	enum:__anon151
SF_NUM_SURFACE_TYPES	src/renderergl2/tr_local.h	/^	SF_NUM_SURFACE_TYPES,$/;"	e	enum:__anon44
SF_NestedFrom	src/server/sqlite3.c	13542;"	d	file:
SF_POLY	src/renderergl1/tr_local.h	/^	SF_POLY,$/;"	e	enum:__anon151
SF_POLY	src/renderergl2/tr_local.h	/^	SF_POLY,$/;"	e	enum:__anon44
SF_Recursive	src/server/sqlite3.c	13545;"	d	file:
SF_Resolved	src/server/sqlite3.c	13534;"	d	file:
SF_SKIP	src/renderergl1/tr_local.h	/^	SF_SKIP,				\/\/ ignore$/;"	e	enum:__anon151
SF_SKIP	src/renderergl2/tr_local.h	/^	SF_SKIP,				\/\/ ignore$/;"	e	enum:__anon44
SF_TRIANGLES	src/renderergl1/tr_local.h	/^	SF_TRIANGLES,$/;"	e	enum:__anon151
SF_TRIANGLES	src/renderergl2/tr_local.h	/^	SF_TRIANGLES,$/;"	e	enum:__anon44
SF_UsesEphemeral	src/server/sqlite3.c	13536;"	d	file:
SF_VAO_MDVMESH	src/renderergl2/tr_local.h	/^	SF_VAO_MDVMESH,$/;"	e	enum:__anon44
SF_VAO_MESH	src/renderergl2/tr_local.h	/^	SF_VAO_MESH,$/;"	e	enum:__anon44
SF_Values	src/server/sqlite3.c	13540;"	d	file:
SGN	src/renderergl2/tr_extramath.h	84;"	d
SGN	src/tools/lcc/cpp/eval.c	6;"	d	file:
SH	src/qcommon/vm_powerpc_asm.c	376;"	d	file:
SHADERNUM_BITS	src/renderergl1/tr_local.h	42;"	d
SHADERNUM_BITS	src/renderergl2/tr_local.h	48;"	d
SHADER_MAX_INDEXES	src/qcommon/qfiles.h	40;"	d
SHADER_MAX_VERTEXES	src/qcommon/qfiles.h	39;"	d
SHADOW_DISTANCE	src/cgame/cg_players.c	1632;"	d	file:
SHARED_FIRST	src/server/sqlite3.c	11823;"	d	file:
SHARED_LOCK	src/server/sqlite3.c	11757;"	d	file:
SHARED_SIZE	src/server/sqlite3.c	11824;"	d	file:
SHARP	src/tools/lcc/cpp/cpp.h	/^		COLON, ASGN, COMMA, SHARP, SEMIC, CBRA, CKET,$/;"	e	enum:toktype
SHARP1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
SHC_DARK_BLUE	src/cgame/cg_local.h	/^  SHC_DARK_BLUE,$/;"	e	enum:__anon255
SHC_DARK_GREEN	src/cgame/cg_local.h	/^  SHC_DARK_GREEN,$/;"	e	enum:__anon255
SHC_GREEN_CYAN	src/cgame/cg_local.h	/^  SHC_GREEN_CYAN,$/;"	e	enum:__anon255
SHC_GREY	src/cgame/cg_local.h	/^  SHC_GREY,$/;"	e	enum:__anon255
SHC_LIGHT_BLUE	src/cgame/cg_local.h	/^  SHC_LIGHT_BLUE,$/;"	e	enum:__anon255
SHC_LIGHT_GREEN	src/cgame/cg_local.h	/^  SHC_LIGHT_GREEN,$/;"	e	enum:__anon255
SHC_NUM_SHADER_COLORS	src/cgame/cg_local.h	/^  SHC_NUM_SHADER_COLORS$/;"	e	enum:__anon255
SHC_ORANGE	src/cgame/cg_local.h	/^  SHC_ORANGE,$/;"	e	enum:__anon255
SHC_PINK	src/cgame/cg_local.h	/^  SHC_PINK,$/;"	e	enum:__anon255
SHC_RED	src/cgame/cg_local.h	/^  SHC_RED,$/;"	e	enum:__anon255
SHC_VIOLET	src/cgame/cg_local.h	/^  SHC_VIOLET,$/;"	e	enum:__anon255
SHC_YELLOW	src/cgame/cg_local.h	/^  SHC_YELLOW,$/;"	e	enum:__anon255
SHIFT	src/tools/lcc/cpp/eval.c	22;"	d	file:
SHLIBCFLAGS	GNUmakefile	/^  SHLIBCFLAGS=$/;"	m
SHLIBCFLAGS	GNUmakefile	/^  SHLIBCFLAGS=-fPIC -fno-common$/;"	m
SHLIBCFLAGS	GNUmakefile	/^  SHLIBCFLAGS=-fPIC -fvisibility=hidden$/;"	m
SHLIBCFLAGS	GNUmakefile	/^  SHLIBCFLAGS=-fPIC$/;"	m
SHLIBEXT	GNUmakefile	/^  SHLIBEXT=dll$/;"	m
SHLIBEXT	GNUmakefile	/^  SHLIBEXT=dylib$/;"	m
SHLIBEXT	GNUmakefile	/^  SHLIBEXT=so$/;"	m
SHLIBLDFLAGS	GNUmakefile	/^  SHLIBLDFLAGS=-dynamiclib $(LDFLAGS) -Wl,-U,_com_altivec$/;"	m
SHLIBLDFLAGS	GNUmakefile	/^  SHLIBLDFLAGS=-shared $(LDFLAGS)$/;"	m
SHLIBLDFLAGS	GNUmakefile	/^  SHLIBLDFLAGS=-shared$/;"	m
SHLIBNAME	GNUmakefile	/^  SHLIBNAME=.$(SHLIBEXT)$/;"	m
SHORT2ANGLE	src/qcommon/q_shared.h	1184;"	d
SHOTGUN_DMG	src/game/tremulous.h	415;"	d
SHOTGUN_K_SCALE	src/game/tremulous.h	412;"	d
SHOTGUN_MAXCLIPS	src/game/tremulous.h	410;"	d
SHOTGUN_PELLETS	src/game/tremulous.h	409;"	d
SHOTGUN_PRICE	src/game/tremulous.h	407;"	d
SHOTGUN_RANGE	src/game/tremulous.h	416;"	d
SHOTGUN_RELOAD	src/game/tremulous.h	413;"	d
SHOTGUN_REPEAT	src/game/tremulous.h	411;"	d
SHOTGUN_SHELLS	src/game/tremulous.h	408;"	d
SHOTGUN_SPREAD	src/game/tremulous.h	414;"	d
SHOWNET	src/client/cl_parse.c	/^void SHOWNET( msg_t *msg, char *s) {$/;"	f
SHRT_MAX	src/game/bg_lib.h	48;"	d
SHRT_MIN	src/game/bg_lib.h	49;"	d
SH_MASK	src/qcommon/vm_powerpc_asm.c	377;"	d	file:
SI	src/qcommon/vm_powerpc_asm.c	383;"	d	file:
SIDE_BACK	src/qcommon/cm_polylib.h	35;"	d
SIDE_BACK	src/renderergl1/tr_local.h	640;"	d
SIDE_BACK	src/renderergl1/tr_marks.c	40;"	d	file:
SIDE_BACK	src/renderergl2/tr_local.h	1063;"	d
SIDE_BACK	src/renderergl2/tr_marks.c	40;"	d	file:
SIDE_BACK	src/tools/asm/mathlib.h	41;"	d
SIDE_CROSS	src/qcommon/cm_polylib.h	37;"	d
SIDE_CROSS	src/tools/asm/mathlib.h	42;"	d
SIDE_FRONT	src/qcommon/cm_polylib.h	34;"	d
SIDE_FRONT	src/renderergl1/tr_local.h	639;"	d
SIDE_FRONT	src/renderergl1/tr_marks.c	39;"	d	file:
SIDE_FRONT	src/renderergl2/tr_local.h	1062;"	d
SIDE_FRONT	src/renderergl2/tr_marks.c	39;"	d	file:
SIDE_FRONT	src/tools/asm/mathlib.h	39;"	d
SIDE_ON	src/qcommon/cm_polylib.h	36;"	d
SIDE_ON	src/renderergl1/tr_local.h	641;"	d
SIDE_ON	src/renderergl1/tr_marks.c	41;"	d	file:
SIDE_ON	src/renderergl2/tr_local.h	1064;"	d
SIDE_ON	src/renderergl2/tr_marks.c	41;"	d	file:
SIDE_ON	src/tools/asm/mathlib.h	40;"	d
SIMM13	src/qcommon/vm_sparc.c	268;"	d	file:
SIMM13_P	src/qcommon/vm_sparc.c	274;"	d	file:
SINK_TIME	src/cgame/cg_local.h	55;"	d
SKET	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
SKY_SUBDIVISIONS	src/renderergl1/tr_sky.c	26;"	d	file:
SKY_SUBDIVISIONS	src/renderergl2/tr_sky.c	26;"	d	file:
SL	src/qcommon/vm_powerpc.c	120;"	d	file:
SL	src/qcommon/vm_powerpc.c	122;"	d	file:
SL	src/qcommon/vm_sparc.c	46;"	d	file:
SL	src/qcommon/vm_sparc.c	48;"	d	file:
SLASH	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
SLASH1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
SLIDER_HEIGHT	src/ui/ui_shared.h	117;"	d
SLIDER_THUMB_HEIGHT	src/ui/ui_shared.h	119;"	d
SLIDER_THUMB_WIDTH	src/ui/ui_shared.h	118;"	d
SLIDER_WIDTH	src/ui/ui_shared.h	116;"	d
SLL	src/qcommon/vm_sparc.c	/^	SLLI, SLL,$/;"	e	enum:sparc_iname	file:
SLLI	src/qcommon/vm_sparc.c	/^	SLLI, SLL,$/;"	e	enum:sparc_iname	file:
SLOT_2_0	src/server/sqlite3.c	188406;"	d	file:
SLOT_2_0	src/server/sqlite3.c	26212;"	d	file:
SLOT_4_2_0	src/server/sqlite3.c	188407;"	d	file:
SLOT_4_2_0	src/server/sqlite3.c	26213;"	d	file:
SLOT_ARMS	src/game/bg_public.h	418;"	d
SLOT_BACKPACK	src/game/bg_public.h	420;"	d
SLOT_HEAD	src/game/bg_public.h	416;"	d
SLOT_LEGS	src/game/bg_public.h	419;"	d
SLOT_NONE	src/game/bg_public.h	415;"	d
SLOT_SIDEARM	src/game/bg_public.h	422;"	d
SLOT_TORSO	src/game/bg_public.h	417;"	d
SLOT_WEAPON	src/game/bg_public.h	421;"	d
SL_ARRAY_SIZE	src/server/sv_sqlite.h	11;"	d
SMALLCHAR_HEIGHT	src/qcommon/q_shared.h	381;"	d
SMALLCHAR_WIDTH	src/qcommon/q_shared.h	380;"	d
SMALLEST_INT64	src/server/sqlite3.c	10094;"	d	file:
SMALLEST_INT64	src/server/sqlite3.c	141558;"	d	file:
SMALLEST_INT64	src/server/sqlite3.c	166504;"	d	file:
SMALLEST_INT64	src/server/sqlite3.c	169293;"	d	file:
SMUL	src/qcommon/vm_sparc.c	/^	SMULI, SMUL,$/;"	e	enum:sparc_iname	file:
SMULI	src/qcommon/vm_sparc.c	/^	SMULI, SMUL,$/;"	e	enum:sparc_iname	file:
SNAPFLAG_NOT_ACTIVE	src/qcommon/q_shared.h	1187;"	d
SNAPFLAG_RATE_DELAYED	src/qcommon/q_shared.h	1186;"	d
SNAPFLAG_SERVERCOUNT	src/qcommon/q_shared.h	1188;"	d
SNDDMA_AudioCallback	src/sdl/sdl_snd.c	/^static void SNDDMA_AudioCallback(void *userdata, Uint8 *stream, int len)$/;"	f	file:
SNDDMA_BeginPainting	src/null/null_snddma.c	/^void SNDDMA_BeginPainting (void)$/;"	f
SNDDMA_BeginPainting	src/sdl/sdl_snd.c	/^void SNDDMA_BeginPainting (void)$/;"	f
SNDDMA_GetDMAPos	src/null/null_snddma.c	/^int	SNDDMA_GetDMAPos(void)$/;"	f
SNDDMA_GetDMAPos	src/sdl/sdl_snd.c	/^int SNDDMA_GetDMAPos(void)$/;"	f
SNDDMA_Init	src/null/null_snddma.c	/^qboolean SNDDMA_Init(void)$/;"	f
SNDDMA_Init	src/sdl/sdl_snd.c	/^qboolean SNDDMA_Init(void)$/;"	f
SNDDMA_PrintAudiospec	src/sdl/sdl_snd.c	/^static void SNDDMA_PrintAudiospec(const char *str, const SDL_AudioSpec *spec)$/;"	f	file:
SNDDMA_Shutdown	src/null/null_snddma.c	/^void SNDDMA_Shutdown(void)$/;"	f
SNDDMA_Shutdown	src/sdl/sdl_snd.c	/^void SNDDMA_Shutdown(void)$/;"	f
SNDDMA_Submit	src/null/null_snddma.c	/^void SNDDMA_Submit(void)$/;"	f
SNDDMA_Submit	src/sdl/sdl_snd.c	/^void SNDDMA_Submit(void)$/;"	f
SND_CHUNK_SIZE	src/client/snd_local.h	32;"	d
SND_CHUNK_SIZE_BYTE	src/client/snd_local.h	34;"	d
SND_CHUNK_SIZE_FLOAT	src/client/snd_local.h	33;"	d
SND_free	src/client/snd_mem.c	/^void	SND_free(sndBuffer *v) {$/;"	f
SND_malloc	src/client/snd_mem.c	/^sndBuffer*	SND_malloc(void) {$/;"	f
SND_setup	src/client/snd_mem.c	/^void SND_setup(void) {$/;"	f
SND_shutdown	src/client/snd_mem.c	/^void SND_shutdown(void)$/;"	f
SOCKET	src/qcommon/net_ip.c	/^typedef int SOCKET;$/;"	t	file:
SOCKET_ERROR	src/qcommon/net_ip.c	87;"	d	file:
SOLID_BMODEL	src/qcommon/q_shared.h	1365;"	d
SORTER_MAX_MERGE_COUNT	src/server/sqlite3.c	82298;"	d	file:
SORTER_TYPE_INTEGER	src/server/sqlite3.c	82176;"	d	file:
SORTER_TYPE_TEXT	src/server/sqlite3.c	82177;"	d	file:
SORTFLAG_UseSorter	src/server/sqlite3.c	110563;"	d	file:
SORT_CLIENTS	src/ui/ui_public.h	/^  SORT_CLIENTS,$/;"	e	enum:__anon495
SORT_GAME	src/ui/ui_public.h	/^  SORT_GAME$/;"	e	enum:__anon495
SORT_HOST	src/ui/ui_public.h	/^  SORT_HOST,$/;"	e	enum:__anon495
SORT_MAP	src/ui/ui_public.h	/^  SORT_MAP,$/;"	e	enum:__anon495
SORT_PING	src/ui/ui_public.h	/^  SORT_PING,$/;"	e	enum:__anon495
SOUND_ATTENUATE	src/client/snd_dma.c	53;"	d	file:
SOUND_FULLVOLUME	src/client/snd_dma.c	51;"	d	file:
SPARC_NOP	src/qcommon/vm_sparc.c	153;"	d	file:
SPARC_NUM_OPCODES	src/qcommon/vm_sparc.c	263;"	d	file:
SPCL	src/tools/lcc/cpp/eval.c	21;"	d	file:
SPECTATORS_PIXELS_PER_SECOND	src/cgame/cg_draw.c	1328;"	d	file:
SPECTATOR_FOLLOW	src/game/bg_public.h	/^  SPECTATOR_FOLLOW,$/;"	e	enum:__anon346
SPECTATOR_FREE	src/game/bg_public.h	/^  SPECTATOR_FREE,$/;"	e	enum:__anon346
SPECTATOR_LOCKED	src/game/bg_public.h	/^  SPECTATOR_LOCKED,$/;"	e	enum:__anon346
SPECTATOR_NOT	src/game/bg_public.h	/^  SPECTATOR_NOT,$/;"	e	enum:__anon346
SPECTATOR_SCOREBOARD	src/game/bg_public.h	/^  SPECTATOR_SCOREBOARD$/;"	e	enum:__anon346
SPEEDOMETER_DRAW_GRAPH	src/cgame/cg_draw.c	2277;"	d	file:
SPEEDOMETER_DRAW_TEXT	src/cgame/cg_draw.c	2276;"	d	file:
SPEEDOMETER_IGNORE_Z	src/cgame/cg_draw.c	2278;"	d	file:
SPEEDOMETER_MIN_RANGE	src/cgame/cg_draw.c	2352;"	d	file:
SPEEDOMETER_NUM_DISPLAYED_SAMPLES	src/cgame/cg_draw.c	2275;"	d	file:
SPEEDOMETER_NUM_SAMPLES	src/cgame/cg_draw.c	2274;"	d	file:
SPEED_FAST	src/cgame/cg_draw.c	2354;"	d	file:
SPEED_MED	src/cgame/cg_draw.c	2353;"	d	file:
SPEEXDIR	GNUmakefile	/^SPEEXDIR=$(DEP_DIR)\/libspeex$/;"	m
SPEEX_CFLAGS	GNUmakefile	/^    SPEEX_CFLAGS ?= $(shell pkg-config --silence-errors --cflags speex speexdsp || true)$/;"	m
SPEEX_LIBS	GNUmakefile	/^    SPEEX_LIBS ?= $(shell pkg-config --silence-errors --libs speex speexdsp || echo -lspeex -lspeexdsp)$/;"	m
SPILLFLAG_NOSYNC	src/server/sqlite3.c	44458;"	d	file:
SPILLFLAG_OFF	src/server/sqlite3.c	44456;"	d	file:
SPILLFLAG_ROLLBACK	src/server/sqlite3.c	44457;"	d	file:
SPIN_SPEED	src/cgame/cg_weapons.c	941;"	d	file:
SPR_MASK	src/qcommon/vm_powerpc_asm.c	824;"	d	file:
SP_func_bobbing	src/game/g_mover.c	/^void SP_func_bobbing( gentity_t *ent )$/;"	f
SP_func_button	src/game/g_mover.c	/^void SP_func_button( gentity_t *ent )$/;"	f
SP_func_door	src/game/g_mover.c	/^void SP_func_door( gentity_t *ent )$/;"	f
SP_func_door_model	src/game/g_mover.c	/^void SP_func_door_model( gentity_t *ent )$/;"	f
SP_func_door_rotating	src/game/g_mover.c	/^void SP_func_door_rotating( gentity_t *ent )$/;"	f
SP_func_pendulum	src/game/g_mover.c	/^void SP_func_pendulum( gentity_t *ent )$/;"	f
SP_func_plat	src/game/g_mover.c	/^void SP_func_plat( gentity_t *ent )$/;"	f
SP_func_rotating	src/game/g_mover.c	/^void SP_func_rotating( gentity_t *ent )$/;"	f
SP_func_static	src/game/g_mover.c	/^void SP_func_static( gentity_t *ent )$/;"	f
SP_func_timer	src/game/g_trigger.c	/^void SP_func_timer( gentity_t *self )$/;"	f
SP_func_train	src/game/g_mover.c	/^void SP_func_train( gentity_t *self )$/;"	f
SP_info_alien_intermission	src/game/g_client.c	/^void SP_info_alien_intermission( gentity_t *ent )$/;"	f
SP_info_human_intermission	src/game/g_client.c	/^void SP_info_human_intermission( gentity_t *ent )$/;"	f
SP_info_notnull	src/game/g_misc.c	/^void SP_info_notnull( gentity_t *self )$/;"	f
SP_info_null	src/game/g_misc.c	/^void SP_info_null( gentity_t *self )$/;"	f
SP_info_player_deathmatch	src/game/g_client.c	/^void SP_info_player_deathmatch( gentity_t *ent )$/;"	f
SP_info_player_intermission	src/game/g_client.c	/^void SP_info_player_intermission( gentity_t *ent )$/;"	f
SP_info_player_start	src/game/g_client.c	/^void SP_info_player_start( gentity_t *ent )$/;"	f
SP_light	src/game/g_misc.c	/^void SP_light( gentity_t *self )$/;"	f
SP_misc_anim_model	src/game/g_misc.c	/^void SP_misc_anim_model( gentity_t *self )$/;"	f
SP_misc_light_flare	src/game/g_misc.c	/^void SP_misc_light_flare( gentity_t *self )$/;"	f
SP_misc_model	src/game/g_misc.c	/^void SP_misc_model( gentity_t *ent )$/;"	f
SP_misc_particle_system	src/game/g_misc.c	/^void SP_misc_particle_system( gentity_t *self )$/;"	f
SP_misc_portal_camera	src/game/g_misc.c	/^void SP_misc_portal_camera( gentity_t *ent )$/;"	f
SP_misc_portal_surface	src/game/g_misc.c	/^void SP_misc_portal_surface( gentity_t *ent )$/;"	f
SP_misc_teleporter_dest	src/game/g_misc.c	/^void SP_misc_teleporter_dest( gentity_t *ent )$/;"	f
SP_path_corner	src/game/g_mover.c	/^void SP_path_corner( gentity_t *self )$/;"	f
SP_target_alien_win	src/game/g_target.c	/^void SP_target_alien_win( gentity_t *self )$/;"	f
SP_target_delay	src/game/g_target.c	/^void SP_target_delay( gentity_t *ent )$/;"	f
SP_target_human_win	src/game/g_target.c	/^void SP_target_human_win( gentity_t *self )$/;"	f
SP_target_hurt	src/game/g_target.c	/^void SP_target_hurt( gentity_t *self )$/;"	f
SP_target_kill	src/game/g_target.c	/^void SP_target_kill( gentity_t *self )$/;"	f
SP_target_location	src/game/g_target.c	/^void SP_target_location( gentity_t *self )$/;"	f
SP_target_position	src/game/g_target.c	/^void SP_target_position( gentity_t *self )$/;"	f
SP_target_print	src/game/g_target.c	/^void SP_target_print( gentity_t *ent )$/;"	f
SP_target_push	src/game/g_trigger.c	/^void SP_target_push( gentity_t *self )$/;"	f
SP_target_relay	src/game/g_target.c	/^void SP_target_relay( gentity_t *self )$/;"	f
SP_target_rumble	src/game/g_target.c	/^void SP_target_rumble( gentity_t *self )$/;"	f
SP_target_score	src/game/g_target.c	/^void SP_target_score( gentity_t *ent )$/;"	f
SP_target_speaker	src/game/g_target.c	/^void SP_target_speaker( gentity_t *ent )$/;"	f
SP_target_teleporter	src/game/g_target.c	/^void SP_target_teleporter( gentity_t *self )$/;"	f
SP_toggle_particle_system	src/game/g_misc.c	/^void SP_toggle_particle_system( gentity_t *self )$/;"	f
SP_trigger_always	src/game/g_trigger.c	/^void SP_trigger_always( gentity_t *ent )$/;"	f
SP_trigger_ammo	src/game/g_trigger.c	/^void SP_trigger_ammo( gentity_t *self )$/;"	f
SP_trigger_buildable	src/game/g_trigger.c	/^void SP_trigger_buildable( gentity_t *self )$/;"	f
SP_trigger_class	src/game/g_trigger.c	/^void SP_trigger_class( gentity_t *self )$/;"	f
SP_trigger_equipment	src/game/g_trigger.c	/^void SP_trigger_equipment( gentity_t *self )$/;"	f
SP_trigger_gravity	src/game/g_trigger.c	/^void SP_trigger_gravity( gentity_t *self )$/;"	f
SP_trigger_heal	src/game/g_trigger.c	/^void SP_trigger_heal( gentity_t *self )$/;"	f
SP_trigger_hurt	src/game/g_trigger.c	/^void SP_trigger_hurt( gentity_t *self )$/;"	f
SP_trigger_multiple	src/game/g_trigger.c	/^void SP_trigger_multiple( gentity_t *ent )$/;"	f
SP_trigger_push	src/game/g_trigger.c	/^void SP_trigger_push( gentity_t *self )$/;"	f
SP_trigger_stage	src/game/g_trigger.c	/^void SP_trigger_stage( gentity_t *self )$/;"	f
SP_trigger_teleport	src/game/g_trigger.c	/^void SP_trigger_teleport( gentity_t *self )$/;"	f
SP_trigger_win	src/game/g_trigger.c	/^void SP_trigger_win( gentity_t *self )$/;"	f
SP_use_anim_model	src/game/g_misc.c	/^void SP_use_anim_model( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
SP_use_light_flare	src/game/g_misc.c	/^void SP_use_light_flare( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
SP_use_particle_system	src/game/g_misc.c	/^void SP_use_particle_system( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
SP_worldspawn	src/game/g_spawn.c	/^void SP_worldspawn( void )$/;"	f
SQLITE3_MUTEX_INITIALIZER	src/server/sqlite3.c	20996;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/server/sqlite3.c	20998;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/server/sqlite3.c	21000;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/server/sqlite3.c	21678;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/server/sqlite3.c	21681;"	d	file:
SQLITE3_TEXT	src/server/sqlite3.c	4182;"	d	file:
SQLITE3_TEXT	src/server/sqlite3.h	3957;"	d
SQLITE_ABORT	src/server/sqlite3.c	634;"	d	file:
SQLITE_ABORT	src/server/sqlite3.h	409;"	d
SQLITE_ABORT_ROLLBACK	src/server/sqlite3.c	719;"	d	file:
SQLITE_ABORT_ROLLBACK	src/server/sqlite3.h	494;"	d
SQLITE_ACCESS_EXISTS	src/server/sqlite3.c	1481;"	d	file:
SQLITE_ACCESS_EXISTS	src/server/sqlite3.h	1256;"	d
SQLITE_ACCESS_READ	src/server/sqlite3.c	1483;"	d	file:
SQLITE_ACCESS_READ	src/server/sqlite3.h	1258;"	d
SQLITE_ACCESS_READWRITE	src/server/sqlite3.c	1482;"	d	file:
SQLITE_ACCESS_READWRITE	src/server/sqlite3.h	1257;"	d
SQLITE_AFF_BLOB	src/server/sqlite3.c	12583;"	d	file:
SQLITE_AFF_INTEGER	src/server/sqlite3.c	12586;"	d	file:
SQLITE_AFF_MASK	src/server/sqlite3.c	12595;"	d	file:
SQLITE_AFF_NUMERIC	src/server/sqlite3.c	12585;"	d	file:
SQLITE_AFF_REAL	src/server/sqlite3.c	12587;"	d	file:
SQLITE_AFF_TEXT	src/server/sqlite3.c	12584;"	d	file:
SQLITE_ALLOW_COVERING_INDEX_SCAN	src/server/sqlite3.c	15251;"	d	file:
SQLITE_ALTER_TABLE	src/server/sqlite3.c	2950;"	d	file:
SQLITE_ALTER_TABLE	src/server/sqlite3.h	2725;"	d
SQLITE_AMALGAMATION	src/server/sqlite3.c	21;"	d	file:
SQLITE_ANALYZE	src/server/sqlite3.c	2952;"	d	file:
SQLITE_ANALYZE	src/server/sqlite3.h	2727;"	d
SQLITE_ANY	src/server/sqlite3.c	4546;"	d	file:
SQLITE_ANY	src/server/sqlite3.h	4321;"	d
SQLITE_API	src/server/sqlite3.c	277;"	d	file:
SQLITE_API	src/server/sqlite3.h	52;"	d
SQLITE_ASCII	src/server/sqlite3.c	9915;"	d	file:
SQLITE_ATTACH	src/server/sqlite3.c	2948;"	d	file:
SQLITE_ATTACH	src/server/sqlite3.h	2723;"	d
SQLITE_AUTH	src/server/sqlite3.c	653;"	d	file:
SQLITE_AUTH	src/server/sqlite3.h	428;"	d
SQLITE_AUTH_USER	src/server/sqlite3.c	733;"	d	file:
SQLITE_AUTH_USER	src/server/sqlite3.h	508;"	d
SQLITE_AllOpts	src/server/sqlite3.c	12335;"	d	file:
SQLITE_AutoIndex	src/server/sqlite3.c	12305;"	d	file:
SQLITE_BIGENDIAN	src/server/sqlite3.c	10065;"	d	file:
SQLITE_BIGENDIAN	src/server/sqlite3.c	10072;"	d	file:
SQLITE_BIGENDIAN	src/server/sqlite3.c	10083;"	d	file:
SQLITE_BIG_DBL	src/server/sqlite3.c	9805;"	d	file:
SQLITE_BIG_DBL	src/server/sqlite3.c	9813;"	d	file:
SQLITE_BLOB	src/server/sqlite3.c	4175;"	d	file:
SQLITE_BLOB	src/server/sqlite3.h	3950;"	d
SQLITE_BUSY	src/server/sqlite3.c	635;"	d	file:
SQLITE_BUSY	src/server/sqlite3.h	410;"	d
SQLITE_BUSY_RECOVERY	src/server/sqlite3.c	708;"	d	file:
SQLITE_BUSY_RECOVERY	src/server/sqlite3.h	483;"	d
SQLITE_BUSY_SNAPSHOT	src/server/sqlite3.c	709;"	d	file:
SQLITE_BUSY_SNAPSHOT	src/server/sqlite3.h	484;"	d
SQLITE_BYTEORDER	src/server/sqlite3.c	10064;"	d	file:
SQLITE_BYTEORDER	src/server/sqlite3.c	10071;"	d	file:
SQLITE_BYTEORDER	src/server/sqlite3.c	10082;"	d	file:
SQLITE_CANTOPEN	src/server/sqlite3.c	644;"	d	file:
SQLITE_CANTOPEN	src/server/sqlite3.h	419;"	d
SQLITE_CANTOPEN_BKPT	src/server/sqlite3.c	14179;"	d	file:
SQLITE_CANTOPEN_CONVPATH	src/server/sqlite3.c	713;"	d	file:
SQLITE_CANTOPEN_CONVPATH	src/server/sqlite3.h	488;"	d
SQLITE_CANTOPEN_FULLPATH	src/server/sqlite3.c	712;"	d	file:
SQLITE_CANTOPEN_FULLPATH	src/server/sqlite3.h	487;"	d
SQLITE_CANTOPEN_ISDIR	src/server/sqlite3.c	711;"	d	file:
SQLITE_CANTOPEN_ISDIR	src/server/sqlite3.h	486;"	d
SQLITE_CANTOPEN_NOTEMPDIR	src/server/sqlite3.c	710;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	src/server/sqlite3.h	485;"	d
SQLITE_CDECL	src/server/sqlite3.c	280;"	d	file:
SQLITE_CDECL	src/server/sqlite3.h	55;"	d
SQLITE_CHECKPOINT_FULL	src/server/sqlite3.c	7917;"	d	file:
SQLITE_CHECKPOINT_FULL	src/server/sqlite3.h	7692;"	d
SQLITE_CHECKPOINT_PASSIVE	src/server/sqlite3.c	7916;"	d	file:
SQLITE_CHECKPOINT_PASSIVE	src/server/sqlite3.h	7691;"	d
SQLITE_CHECKPOINT_RESTART	src/server/sqlite3.c	7918;"	d	file:
SQLITE_CHECKPOINT_RESTART	src/server/sqlite3.h	7693;"	d
SQLITE_CHECKPOINT_TRUNCATE	src/server/sqlite3.c	7919;"	d	file:
SQLITE_CHECKPOINT_TRUNCATE	src/server/sqlite3.h	7694;"	d
SQLITE_CONFIG_COVERING_INDEX_SCAN	src/server/sqlite3.c	2083;"	d	file:
SQLITE_CONFIG_COVERING_INDEX_SCAN	src/server/sqlite3.h	1858;"	d
SQLITE_CONFIG_GETMALLOC	src/server/sqlite3.c	2068;"	d	file:
SQLITE_CONFIG_GETMALLOC	src/server/sqlite3.h	1843;"	d
SQLITE_CONFIG_GETMUTEX	src/server/sqlite3.c	2074;"	d	file:
SQLITE_CONFIG_GETMUTEX	src/server/sqlite3.h	1849;"	d
SQLITE_CONFIG_GETPCACHE	src/server/sqlite3.c	2078;"	d	file:
SQLITE_CONFIG_GETPCACHE	src/server/sqlite3.h	1853;"	d
SQLITE_CONFIG_GETPCACHE2	src/server/sqlite3.c	2082;"	d	file:
SQLITE_CONFIG_GETPCACHE2	src/server/sqlite3.h	1857;"	d
SQLITE_CONFIG_HEAP	src/server/sqlite3.c	2071;"	d	file:
SQLITE_CONFIG_HEAP	src/server/sqlite3.h	1846;"	d
SQLITE_CONFIG_LOG	src/server/sqlite3.c	2079;"	d	file:
SQLITE_CONFIG_LOG	src/server/sqlite3.h	1854;"	d
SQLITE_CONFIG_LOOKASIDE	src/server/sqlite3.c	2076;"	d	file:
SQLITE_CONFIG_LOOKASIDE	src/server/sqlite3.h	1851;"	d
SQLITE_CONFIG_MALLOC	src/server/sqlite3.c	2067;"	d	file:
SQLITE_CONFIG_MALLOC	src/server/sqlite3.h	1842;"	d
SQLITE_CONFIG_MEMSTATUS	src/server/sqlite3.c	2072;"	d	file:
SQLITE_CONFIG_MEMSTATUS	src/server/sqlite3.h	1847;"	d
SQLITE_CONFIG_MMAP_SIZE	src/server/sqlite3.c	2085;"	d	file:
SQLITE_CONFIG_MMAP_SIZE	src/server/sqlite3.h	1860;"	d
SQLITE_CONFIG_MULTITHREAD	src/server/sqlite3.c	2065;"	d	file:
SQLITE_CONFIG_MULTITHREAD	src/server/sqlite3.h	1840;"	d
SQLITE_CONFIG_MUTEX	src/server/sqlite3.c	2073;"	d	file:
SQLITE_CONFIG_MUTEX	src/server/sqlite3.h	1848;"	d
SQLITE_CONFIG_PAGECACHE	src/server/sqlite3.c	2070;"	d	file:
SQLITE_CONFIG_PAGECACHE	src/server/sqlite3.h	1845;"	d
SQLITE_CONFIG_PCACHE	src/server/sqlite3.c	2077;"	d	file:
SQLITE_CONFIG_PCACHE	src/server/sqlite3.h	1852;"	d
SQLITE_CONFIG_PCACHE2	src/server/sqlite3.c	2081;"	d	file:
SQLITE_CONFIG_PCACHE2	src/server/sqlite3.h	1856;"	d
SQLITE_CONFIG_PCACHE_HDRSZ	src/server/sqlite3.c	2087;"	d	file:
SQLITE_CONFIG_PCACHE_HDRSZ	src/server/sqlite3.h	1862;"	d
SQLITE_CONFIG_PMASZ	src/server/sqlite3.c	2088;"	d	file:
SQLITE_CONFIG_PMASZ	src/server/sqlite3.h	1863;"	d
SQLITE_CONFIG_SCRATCH	src/server/sqlite3.c	2069;"	d	file:
SQLITE_CONFIG_SCRATCH	src/server/sqlite3.h	1844;"	d
SQLITE_CONFIG_SERIALIZED	src/server/sqlite3.c	2066;"	d	file:
SQLITE_CONFIG_SERIALIZED	src/server/sqlite3.h	1841;"	d
SQLITE_CONFIG_SINGLETHREAD	src/server/sqlite3.c	2064;"	d	file:
SQLITE_CONFIG_SINGLETHREAD	src/server/sqlite3.h	1839;"	d
SQLITE_CONFIG_SQLLOG	src/server/sqlite3.c	2084;"	d	file:
SQLITE_CONFIG_SQLLOG	src/server/sqlite3.h	1859;"	d
SQLITE_CONFIG_STMTJRNL_SPILL	src/server/sqlite3.c	2089;"	d	file:
SQLITE_CONFIG_STMTJRNL_SPILL	src/server/sqlite3.h	1864;"	d
SQLITE_CONFIG_URI	src/server/sqlite3.c	2080;"	d	file:
SQLITE_CONFIG_URI	src/server/sqlite3.h	1855;"	d
SQLITE_CONFIG_WIN32_HEAPSIZE	src/server/sqlite3.c	2086;"	d	file:
SQLITE_CONFIG_WIN32_HEAPSIZE	src/server/sqlite3.h	1861;"	d
SQLITE_CONSTRAINT	src/server/sqlite3.c	649;"	d	file:
SQLITE_CONSTRAINT	src/server/sqlite3.h	424;"	d
SQLITE_CONSTRAINT_CHECK	src/server/sqlite3.c	720;"	d	file:
SQLITE_CONSTRAINT_CHECK	src/server/sqlite3.h	495;"	d
SQLITE_CONSTRAINT_COMMITHOOK	src/server/sqlite3.c	721;"	d	file:
SQLITE_CONSTRAINT_COMMITHOOK	src/server/sqlite3.h	496;"	d
SQLITE_CONSTRAINT_FOREIGNKEY	src/server/sqlite3.c	722;"	d	file:
SQLITE_CONSTRAINT_FOREIGNKEY	src/server/sqlite3.h	497;"	d
SQLITE_CONSTRAINT_FUNCTION	src/server/sqlite3.c	723;"	d	file:
SQLITE_CONSTRAINT_FUNCTION	src/server/sqlite3.h	498;"	d
SQLITE_CONSTRAINT_NOTNULL	src/server/sqlite3.c	724;"	d	file:
SQLITE_CONSTRAINT_NOTNULL	src/server/sqlite3.h	499;"	d
SQLITE_CONSTRAINT_PRIMARYKEY	src/server/sqlite3.c	725;"	d	file:
SQLITE_CONSTRAINT_PRIMARYKEY	src/server/sqlite3.h	500;"	d
SQLITE_CONSTRAINT_ROWID	src/server/sqlite3.c	729;"	d	file:
SQLITE_CONSTRAINT_ROWID	src/server/sqlite3.h	504;"	d
SQLITE_CONSTRAINT_TRIGGER	src/server/sqlite3.c	726;"	d	file:
SQLITE_CONSTRAINT_TRIGGER	src/server/sqlite3.h	501;"	d
SQLITE_CONSTRAINT_UNIQUE	src/server/sqlite3.c	727;"	d	file:
SQLITE_CONSTRAINT_UNIQUE	src/server/sqlite3.h	502;"	d
SQLITE_CONSTRAINT_VTAB	src/server/sqlite3.c	728;"	d	file:
SQLITE_CONSTRAINT_VTAB	src/server/sqlite3.h	503;"	d
SQLITE_COPY	src/server/sqlite3.c	2957;"	d	file:
SQLITE_COPY	src/server/sqlite3.h	2732;"	d
SQLITE_CORE	src/server/sqlite3.c	105861;"	d	file:
SQLITE_CORE	src/server/sqlite3.c	138729;"	d	file:
SQLITE_CORE	src/server/sqlite3.c	20;"	d	file:
SQLITE_CORRUPT	src/server/sqlite3.c	641;"	d	file:
SQLITE_CORRUPT	src/server/sqlite3.h	416;"	d
SQLITE_CORRUPT_BKPT	src/server/sqlite3.c	14177;"	d	file:
SQLITE_CORRUPT_VTAB	src/server/sqlite3.c	714;"	d	file:
SQLITE_CORRUPT_VTAB	src/server/sqlite3.h	489;"	d
SQLITE_CREATE_INDEX	src/server/sqlite3.c	2925;"	d	file:
SQLITE_CREATE_INDEX	src/server/sqlite3.h	2700;"	d
SQLITE_CREATE_TABLE	src/server/sqlite3.c	2926;"	d	file:
SQLITE_CREATE_TABLE	src/server/sqlite3.h	2701;"	d
SQLITE_CREATE_TEMP_INDEX	src/server/sqlite3.c	2927;"	d	file:
SQLITE_CREATE_TEMP_INDEX	src/server/sqlite3.h	2702;"	d
SQLITE_CREATE_TEMP_TABLE	src/server/sqlite3.c	2928;"	d	file:
SQLITE_CREATE_TEMP_TABLE	src/server/sqlite3.h	2703;"	d
SQLITE_CREATE_TEMP_TRIGGER	src/server/sqlite3.c	2929;"	d	file:
SQLITE_CREATE_TEMP_TRIGGER	src/server/sqlite3.h	2704;"	d
SQLITE_CREATE_TEMP_VIEW	src/server/sqlite3.c	2930;"	d	file:
SQLITE_CREATE_TEMP_VIEW	src/server/sqlite3.h	2705;"	d
SQLITE_CREATE_TRIGGER	src/server/sqlite3.c	2931;"	d	file:
SQLITE_CREATE_TRIGGER	src/server/sqlite3.h	2706;"	d
SQLITE_CREATE_VIEW	src/server/sqlite3.c	2932;"	d	file:
SQLITE_CREATE_VIEW	src/server/sqlite3.h	2707;"	d
SQLITE_CREATE_VTABLE	src/server/sqlite3.c	2953;"	d	file:
SQLITE_CREATE_VTABLE	src/server/sqlite3.h	2728;"	d
SQLITE_CacheSpill	src/server/sqlite3.c	12287;"	d	file:
SQLITE_CellSizeCk	src/server/sqlite3.c	12313;"	d	file:
SQLITE_CkptFullFSync	src/server/sqlite3.c	12286;"	d	file:
SQLITE_ColumnCache	src/server/sqlite3.c	12323;"	d	file:
SQLITE_CountRows	src/server/sqlite3.c	12289;"	d	file:
SQLITE_CoverIdxScan	src/server/sqlite3.c	12328;"	d	file:
SQLITE_CursorHints	src/server/sqlite3.c	12334;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	src/server/sqlite3.c	2163;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	src/server/sqlite3.h	1938;"	d
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	src/server/sqlite3.c	2165;"	d	file:
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	src/server/sqlite3.h	1940;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	src/server/sqlite3.c	2164;"	d	file:
SQLITE_DBCONFIG_ENABLE_TRIGGER	src/server/sqlite3.h	1939;"	d
SQLITE_DBCONFIG_LOOKASIDE	src/server/sqlite3.c	2162;"	d	file:
SQLITE_DBCONFIG_LOOKASIDE	src/server/sqlite3.h	1937;"	d
SQLITE_DBSTATUS_CACHE_HIT	src/server/sqlite3.c	7007;"	d	file:
SQLITE_DBSTATUS_CACHE_HIT	src/server/sqlite3.h	6782;"	d
SQLITE_DBSTATUS_CACHE_MISS	src/server/sqlite3.c	7008;"	d	file:
SQLITE_DBSTATUS_CACHE_MISS	src/server/sqlite3.h	6783;"	d
SQLITE_DBSTATUS_CACHE_USED	src/server/sqlite3.c	7001;"	d	file:
SQLITE_DBSTATUS_CACHE_USED	src/server/sqlite3.h	6776;"	d
SQLITE_DBSTATUS_CACHE_WRITE	src/server/sqlite3.c	7009;"	d	file:
SQLITE_DBSTATUS_CACHE_WRITE	src/server/sqlite3.h	6784;"	d
SQLITE_DBSTATUS_DEFERRED_FKS	src/server/sqlite3.c	7010;"	d	file:
SQLITE_DBSTATUS_DEFERRED_FKS	src/server/sqlite3.h	6785;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	src/server/sqlite3.c	7004;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_HIT	src/server/sqlite3.h	6779;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	src/server/sqlite3.c	7006;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	src/server/sqlite3.h	6781;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	src/server/sqlite3.c	7005;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	src/server/sqlite3.h	6780;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	src/server/sqlite3.c	7000;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_USED	src/server/sqlite3.h	6775;"	d
SQLITE_DBSTATUS_MAX	src/server/sqlite3.c	7011;"	d	file:
SQLITE_DBSTATUS_MAX	src/server/sqlite3.h	6786;"	d
SQLITE_DBSTATUS_SCHEMA_USED	src/server/sqlite3.c	7002;"	d	file:
SQLITE_DBSTATUS_SCHEMA_USED	src/server/sqlite3.h	6777;"	d
SQLITE_DBSTATUS_STMT_USED	src/server/sqlite3.c	7003;"	d	file:
SQLITE_DBSTATUS_STMT_USED	src/server/sqlite3.h	6778;"	d
SQLITE_DEBUG_OS_TRACE	src/server/sqlite3.c	133299;"	d	file:
SQLITE_DEFAULT_AUTOVACUUM	src/server/sqlite3.c	10373;"	d	file:
SQLITE_DEFAULT_CACHE_SIZE	src/server/sqlite3.c	9082;"	d	file:
SQLITE_DEFAULT_FILE_FORMAT	src/server/sqlite3.c	9835;"	d	file:
SQLITE_DEFAULT_FILE_PERMISSIONS	src/server/sqlite3.c	27461;"	d	file:
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	src/server/sqlite3.c	11226;"	d	file:
SQLITE_DEFAULT_MEMSTATUS	src/server/sqlite3.c	9300;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/server/sqlite3.c	10156;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/server/sqlite3.c	10160;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/server/sqlite3.c	10161;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE_xc	src/server/sqlite3.c	10157;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	9132;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	9135;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	9136;"	d	file:
SQLITE_DEFAULT_PCACHE_INITSZ	src/server/sqlite3.c	9882;"	d	file:
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	src/server/sqlite3.c	27468;"	d	file:
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	src/server/sqlite3.c	9843;"	d	file:
SQLITE_DEFAULT_SECTOR_SIZE	src/server/sqlite3.c	11711;"	d	file:
SQLITE_DEFAULT_SYNCHRONOUS	src/server/sqlite3.c	11966;"	d	file:
SQLITE_DEFAULT_SYNCHRONOUS	src/server/sqlite3.c	11986;"	d	file:
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	src/server/sqlite3.c	9090;"	d	file:
SQLITE_DEFAULT_WAL_SYNCHRONOUS	src/server/sqlite3.c	11989;"	d	file:
SQLITE_DEFAULT_WORKER_THREADS	src/server/sqlite3.c	9868;"	d	file:
SQLITE_DELETE	src/server/sqlite3.c	2933;"	d	file:
SQLITE_DELETE	src/server/sqlite3.h	2708;"	d
SQLITE_DENY	src/server/sqlite3.c	2902;"	d	file:
SQLITE_DENY	src/server/sqlite3.h	2677;"	d
SQLITE_DEPRECATED	src/server/sqlite3.c	299;"	d	file:
SQLITE_DEPRECATED	src/server/sqlite3.h	74;"	d
SQLITE_DETACH	src/server/sqlite3.c	2949;"	d	file:
SQLITE_DETACH	src/server/sqlite3.h	2724;"	d
SQLITE_DETERMINISTIC	src/server/sqlite3.c	4557;"	d	file:
SQLITE_DETERMINISTIC	src/server/sqlite3.h	4332;"	d
SQLITE_DONE	src/server/sqlite3.c	660;"	d	file:
SQLITE_DONE	src/server/sqlite3.h	435;"	d
SQLITE_DROP_INDEX	src/server/sqlite3.c	2934;"	d	file:
SQLITE_DROP_INDEX	src/server/sqlite3.h	2709;"	d
SQLITE_DROP_TABLE	src/server/sqlite3.c	2935;"	d	file:
SQLITE_DROP_TABLE	src/server/sqlite3.h	2710;"	d
SQLITE_DROP_TEMP_INDEX	src/server/sqlite3.c	2936;"	d	file:
SQLITE_DROP_TEMP_INDEX	src/server/sqlite3.h	2711;"	d
SQLITE_DROP_TEMP_TABLE	src/server/sqlite3.c	2937;"	d	file:
SQLITE_DROP_TEMP_TABLE	src/server/sqlite3.h	2712;"	d
SQLITE_DROP_TEMP_TRIGGER	src/server/sqlite3.c	2938;"	d	file:
SQLITE_DROP_TEMP_TRIGGER	src/server/sqlite3.h	2713;"	d
SQLITE_DROP_TEMP_VIEW	src/server/sqlite3.c	2939;"	d	file:
SQLITE_DROP_TEMP_VIEW	src/server/sqlite3.h	2714;"	d
SQLITE_DROP_TRIGGER	src/server/sqlite3.c	2940;"	d	file:
SQLITE_DROP_TRIGGER	src/server/sqlite3.h	2715;"	d
SQLITE_DROP_VIEW	src/server/sqlite3.c	2941;"	d	file:
SQLITE_DROP_VIEW	src/server/sqlite3.h	2716;"	d
SQLITE_DROP_VTABLE	src/server/sqlite3.c	2954;"	d	file:
SQLITE_DROP_VTABLE	src/server/sqlite3.h	2729;"	d
SQLITE_DYNAMIC	src/server/sqlite3.c	10241;"	d	file:
SQLITE_DeferFKs	src/server/sqlite3.c	12309;"	d	file:
SQLITE_DistinctOpt	src/server/sqlite3.c	12327;"	d	file:
SQLITE_EBCDIC	src/server/sqlite3.c	9913;"	d	file:
SQLITE_ECEL_DUP	src/server/sqlite3.c	14525;"	d	file:
SQLITE_ECEL_FACTOR	src/server/sqlite3.c	14526;"	d	file:
SQLITE_ECEL_REF	src/server/sqlite3.c	14527;"	d	file:
SQLITE_EMPTY	src/server/sqlite3.c	646;"	d	file:
SQLITE_EMPTY	src/server/sqlite3.h	421;"	d
SQLITE_ENABLE_EXPLAIN_COMMENTS	src/server/sqlite3.c	9376;"	d	file:
SQLITE_ENABLE_EXPLAIN_COMMENTS	src/server/sqlite3.c	9496;"	d	file:
SQLITE_ENABLE_FTS3	src/server/sqlite3.c	137847;"	d	file:
SQLITE_ENABLE_FTS3	src/server/sqlite3.c	137857;"	d	file:
SQLITE_ENABLE_FTS3	src/server/sqlite3.c	14194;"	d	file:
SQLITE_ENABLE_FTS3	src/server/sqlite3.c	14204;"	d	file:
SQLITE_ENABLE_FTS4	src/server/sqlite3.c	137848;"	d	file:
SQLITE_ENABLE_FTS4	src/server/sqlite3.c	14195;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/server/sqlite3.c	107199;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/server/sqlite3.c	107201;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/server/sqlite3.c	127;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/server/sqlite3.c	27379;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/server/sqlite3.c	27381;"	d	file:
SQLITE_ENABLE_STAT3	src/server/sqlite3.c	10170;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/server/sqlite3.c	10171;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/server/sqlite3.c	10173;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/server/sqlite3.c	10175;"	d	file:
SQLITE_ERROR	src/server/sqlite3.c	631;"	d	file:
SQLITE_ERROR	src/server/sqlite3.h	406;"	d
SQLITE_EXPERIMENTAL	src/server/sqlite3.c	300;"	d	file:
SQLITE_EXPERIMENTAL	src/server/sqlite3.h	75;"	d
SQLITE_EXTENSION_INIT1	src/server/sqlite3.c	106398;"	d	file:
SQLITE_EXTENSION_INIT1	src/server/sqlite3.c	106405;"	d	file:
SQLITE_EXTENSION_INIT2	src/server/sqlite3.c	106399;"	d	file:
SQLITE_EXTENSION_INIT2	src/server/sqlite3.c	106406;"	d	file:
SQLITE_EXTENSION_INIT3	src/server/sqlite3.c	106400;"	d	file:
SQLITE_EXTENSION_INIT3	src/server/sqlite3.c	106407;"	d	file:
SQLITE_EXTERN	src/server/sqlite3.c	274;"	d	file:
SQLITE_EXTERN	src/server/sqlite3.h	49;"	d
SQLITE_EnableTrigger	src/server/sqlite3.c	12308;"	d	file:
SQLITE_FAIL	src/server/sqlite3.c	8004;"	d	file:
SQLITE_FAIL	src/server/sqlite3.h	7779;"	d
SQLITE_FAULTINJECTOR_COUNT	src/server/sqlite3.c	14962;"	d	file:
SQLITE_FAULTINJECTOR_MALLOC	src/server/sqlite3.c	14961;"	d	file:
SQLITE_FCNTL_BUSYHANDLER	src/server/sqlite3.c	1231;"	d	file:
SQLITE_FCNTL_BUSYHANDLER	src/server/sqlite3.h	1006;"	d
SQLITE_FCNTL_CHUNK_SIZE	src/server/sqlite3.c	1222;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	src/server/sqlite3.h	997;"	d
SQLITE_FCNTL_COMMIT_PHASETWO	src/server/sqlite3.c	1237;"	d	file:
SQLITE_FCNTL_COMMIT_PHASETWO	src/server/sqlite3.h	1012;"	d
SQLITE_FCNTL_DB_UNCHANGED	src/server/sqlite3.c	11845;"	d	file:
SQLITE_FCNTL_FILE_POINTER	src/server/sqlite3.c	1223;"	d	file:
SQLITE_FCNTL_FILE_POINTER	src/server/sqlite3.h	998;"	d
SQLITE_FCNTL_GET_LOCKPROXYFILE	src/server/sqlite3.c	1218;"	d	file:
SQLITE_FCNTL_GET_LOCKPROXYFILE	src/server/sqlite3.h	993;"	d
SQLITE_FCNTL_HAS_MOVED	src/server/sqlite3.c	1235;"	d	file:
SQLITE_FCNTL_HAS_MOVED	src/server/sqlite3.h	1010;"	d
SQLITE_FCNTL_JOURNAL_POINTER	src/server/sqlite3.c	1243;"	d	file:
SQLITE_FCNTL_JOURNAL_POINTER	src/server/sqlite3.h	1018;"	d
SQLITE_FCNTL_LAST_ERRNO	src/server/sqlite3.c	1220;"	d	file:
SQLITE_FCNTL_LAST_ERRNO	src/server/sqlite3.h	995;"	d
SQLITE_FCNTL_LOCKSTATE	src/server/sqlite3.c	1217;"	d	file:
SQLITE_FCNTL_LOCKSTATE	src/server/sqlite3.h	992;"	d
SQLITE_FCNTL_MMAP_SIZE	src/server/sqlite3.c	1233;"	d	file:
SQLITE_FCNTL_MMAP_SIZE	src/server/sqlite3.h	1008;"	d
SQLITE_FCNTL_OVERWRITE	src/server/sqlite3.c	1227;"	d	file:
SQLITE_FCNTL_OVERWRITE	src/server/sqlite3.h	1002;"	d
SQLITE_FCNTL_PERSIST_WAL	src/server/sqlite3.c	1226;"	d	file:
SQLITE_FCNTL_PERSIST_WAL	src/server/sqlite3.h	1001;"	d
SQLITE_FCNTL_POWERSAFE_OVERWRITE	src/server/sqlite3.c	1229;"	d	file:
SQLITE_FCNTL_POWERSAFE_OVERWRITE	src/server/sqlite3.h	1004;"	d
SQLITE_FCNTL_PRAGMA	src/server/sqlite3.c	1230;"	d	file:
SQLITE_FCNTL_PRAGMA	src/server/sqlite3.h	1005;"	d
SQLITE_FCNTL_RBU	src/server/sqlite3.c	1241;"	d	file:
SQLITE_FCNTL_RBU	src/server/sqlite3.h	1016;"	d
SQLITE_FCNTL_SET_LOCKPROXYFILE	src/server/sqlite3.c	1219;"	d	file:
SQLITE_FCNTL_SET_LOCKPROXYFILE	src/server/sqlite3.h	994;"	d
SQLITE_FCNTL_SIZE_HINT	src/server/sqlite3.c	1221;"	d	file:
SQLITE_FCNTL_SIZE_HINT	src/server/sqlite3.h	996;"	d
SQLITE_FCNTL_SYNC	src/server/sqlite3.c	1236;"	d	file:
SQLITE_FCNTL_SYNC	src/server/sqlite3.h	1011;"	d
SQLITE_FCNTL_SYNC_OMITTED	src/server/sqlite3.c	1224;"	d	file:
SQLITE_FCNTL_SYNC_OMITTED	src/server/sqlite3.h	999;"	d
SQLITE_FCNTL_TEMPFILENAME	src/server/sqlite3.c	1232;"	d	file:
SQLITE_FCNTL_TEMPFILENAME	src/server/sqlite3.h	1007;"	d
SQLITE_FCNTL_TRACE	src/server/sqlite3.c	1234;"	d	file:
SQLITE_FCNTL_TRACE	src/server/sqlite3.h	1009;"	d
SQLITE_FCNTL_VFSNAME	src/server/sqlite3.c	1228;"	d	file:
SQLITE_FCNTL_VFSNAME	src/server/sqlite3.h	1003;"	d
SQLITE_FCNTL_VFS_POINTER	src/server/sqlite3.c	1242;"	d	file:
SQLITE_FCNTL_VFS_POINTER	src/server/sqlite3.h	1017;"	d
SQLITE_FCNTL_WAL_BLOCK	src/server/sqlite3.c	1239;"	d	file:
SQLITE_FCNTL_WAL_BLOCK	src/server/sqlite3.h	1014;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	src/server/sqlite3.c	1225;"	d	file:
SQLITE_FCNTL_WIN32_AV_RETRY	src/server/sqlite3.h	1000;"	d
SQLITE_FCNTL_WIN32_SET_HANDLE	src/server/sqlite3.c	1238;"	d	file:
SQLITE_FCNTL_WIN32_SET_HANDLE	src/server/sqlite3.h	1013;"	d
SQLITE_FCNTL_ZIPVFS	src/server/sqlite3.c	1240;"	d	file:
SQLITE_FCNTL_ZIPVFS	src/server/sqlite3.h	1015;"	d
SQLITE_FILE_HEADER	src/server/sqlite3.c	55056;"	d	file:
SQLITE_FLOAT	src/server/sqlite3.c	4174;"	d	file:
SQLITE_FLOAT	src/server/sqlite3.h	3949;"	d
SQLITE_FORMAT	src/server/sqlite3.c	654;"	d	file:
SQLITE_FORMAT	src/server/sqlite3.h	429;"	d
SQLITE_FREE	src/server/sqlite3.c	18517;"	d	file:
SQLITE_FREE	src/server/sqlite3.c	18529;"	d	file:
SQLITE_FSFLAGS_IS_MSDOS	src/server/sqlite3.c	27446;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	src/server/sqlite3.c	144993;"	d	file:
SQLITE_FTS3_MAX_EXPR_DEPTH	src/server/sqlite3.c	138161;"	d	file:
SQLITE_FULL	src/server/sqlite3.c	643;"	d	file:
SQLITE_FULL	src/server/sqlite3.h	418;"	d
SQLITE_FUNCTION	src/server/sqlite3.c	2955;"	d	file:
SQLITE_FUNCTION	src/server/sqlite3.h	2730;"	d
SQLITE_FUNC_CASE	src/server/sqlite3.c	12418;"	d	file:
SQLITE_FUNC_COALESCE	src/server/sqlite3.c	12424;"	d	file:
SQLITE_FUNC_CONSTANT	src/server/sqlite3.c	12426;"	d	file:
SQLITE_FUNC_COUNT	src/server/sqlite3.c	12423;"	d	file:
SQLITE_FUNC_ENCMASK	src/server/sqlite3.c	12416;"	d	file:
SQLITE_FUNC_EPHEM	src/server/sqlite3.c	12419;"	d	file:
SQLITE_FUNC_HASH_SZ	src/server/sqlite3.c	12109;"	d	file:
SQLITE_FUNC_LENGTH	src/server/sqlite3.c	12421;"	d	file:
SQLITE_FUNC_LIKE	src/server/sqlite3.c	12417;"	d	file:
SQLITE_FUNC_MINMAX	src/server/sqlite3.c	12427;"	d	file:
SQLITE_FUNC_NEEDCOLL	src/server/sqlite3.c	12420;"	d	file:
SQLITE_FUNC_SLOCHNG	src/server/sqlite3.c	12428;"	d	file:
SQLITE_FUNC_TYPEOF	src/server/sqlite3.c	12422;"	d	file:
SQLITE_FUNC_UNLIKELY	src/server/sqlite3.c	12425;"	d	file:
SQLITE_FactorOutConst	src/server/sqlite3.c	12325;"	d	file:
SQLITE_ForeignKeys	src/server/sqlite3.c	12304;"	d	file:
SQLITE_Fts3Tokenizer	src/server/sqlite3.c	12314;"	d	file:
SQLITE_FullColNames	src/server/sqlite3.c	12284;"	d	file:
SQLITE_FullFSync	src/server/sqlite3.c	12285;"	d	file:
SQLITE_GET_LOCKPROXYFILE	src/server/sqlite3.c	1246;"	d	file:
SQLITE_GET_LOCKPROXYFILE	src/server/sqlite3.h	1021;"	d
SQLITE_GroupByOrder	src/server/sqlite3.c	12324;"	d	file:
SQLITE_HAVE_ISNAN	src/server/sqlite3.c	9810;"	d	file:
SQLITE_HAVE_OS_TRACE	src/server/sqlite3.c	9473;"	d	file:
SQLITE_HAVE_OS_TRACE	src/server/sqlite3.c	9476;"	d	file:
SQLITE_HOMEGROWN_RECURSIVE_MUTEX	src/server/sqlite3.c	125;"	d	file:
SQLITE_ICU_READ_UTF8	src/server/sqlite3.c	160234;"	d	file:
SQLITE_ICU_SKIP_UTF8	src/server/sqlite3.c	160243;"	d	file:
SQLITE_IDXTYPE_APPDEF	src/server/sqlite3.c	12973;"	d	file:
SQLITE_IDXTYPE_PRIMARYKEY	src/server/sqlite3.c	12975;"	d	file:
SQLITE_IDXTYPE_UNIQUE	src/server/sqlite3.c	12974;"	d	file:
SQLITE_IGNORE	src/server/sqlite3.c	2903;"	d	file:
SQLITE_IGNORE	src/server/sqlite3.h	2678;"	d
SQLITE_INDEX_CONSTRAINT_EQ	src/server/sqlite3.c	5995;"	d	file:
SQLITE_INDEX_CONSTRAINT_EQ	src/server/sqlite3.h	5770;"	d
SQLITE_INDEX_CONSTRAINT_GE	src/server/sqlite3.c	5999;"	d	file:
SQLITE_INDEX_CONSTRAINT_GE	src/server/sqlite3.h	5774;"	d
SQLITE_INDEX_CONSTRAINT_GLOB	src/server/sqlite3.c	6002;"	d	file:
SQLITE_INDEX_CONSTRAINT_GLOB	src/server/sqlite3.h	5777;"	d
SQLITE_INDEX_CONSTRAINT_GT	src/server/sqlite3.c	5996;"	d	file:
SQLITE_INDEX_CONSTRAINT_GT	src/server/sqlite3.h	5771;"	d
SQLITE_INDEX_CONSTRAINT_LE	src/server/sqlite3.c	5997;"	d	file:
SQLITE_INDEX_CONSTRAINT_LE	src/server/sqlite3.h	5772;"	d
SQLITE_INDEX_CONSTRAINT_LIKE	src/server/sqlite3.c	6001;"	d	file:
SQLITE_INDEX_CONSTRAINT_LIKE	src/server/sqlite3.h	5776;"	d
SQLITE_INDEX_CONSTRAINT_LT	src/server/sqlite3.c	5998;"	d	file:
SQLITE_INDEX_CONSTRAINT_LT	src/server/sqlite3.h	5773;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	src/server/sqlite3.c	6000;"	d	file:
SQLITE_INDEX_CONSTRAINT_MATCH	src/server/sqlite3.h	5775;"	d
SQLITE_INDEX_CONSTRAINT_REGEXP	src/server/sqlite3.c	6003;"	d	file:
SQLITE_INDEX_CONSTRAINT_REGEXP	src/server/sqlite3.h	5778;"	d
SQLITE_INDEX_SCAN_UNIQUE	src/server/sqlite3.c	5985;"	d	file:
SQLITE_INDEX_SCAN_UNIQUE	src/server/sqlite3.h	5760;"	d
SQLITE_INSERT	src/server/sqlite3.c	2942;"	d	file:
SQLITE_INSERT	src/server/sqlite3.h	2717;"	d
SQLITE_INTEGER	src/server/sqlite3.c	4173;"	d	file:
SQLITE_INTEGER	src/server/sqlite3.h	3948;"	d
SQLITE_INTEGRITY_CHECK_ERROR_MAX	src/server/sqlite3.c	109045;"	d	file:
SQLITE_INTERNAL	src/server/sqlite3.c	632;"	d	file:
SQLITE_INTERNAL	src/server/sqlite3.h	407;"	d
SQLITE_INTERRUPT	src/server/sqlite3.c	639;"	d	file:
SQLITE_INTERRUPT	src/server/sqlite3.h	414;"	d
SQLITE_INT_TO_PTR	src/server/sqlite3.c	9224;"	d	file:
SQLITE_INT_TO_PTR	src/server/sqlite3.c	9227;"	d	file:
SQLITE_INT_TO_PTR	src/server/sqlite3.c	9230;"	d	file:
SQLITE_INT_TO_PTR	src/server/sqlite3.c	9233;"	d	file:
SQLITE_IOCAP_ATOMIC	src/server/sqlite3.c	793;"	d	file:
SQLITE_IOCAP_ATOMIC	src/server/sqlite3.h	568;"	d
SQLITE_IOCAP_ATOMIC16K	src/server/sqlite3.c	799;"	d	file:
SQLITE_IOCAP_ATOMIC16K	src/server/sqlite3.h	574;"	d
SQLITE_IOCAP_ATOMIC1K	src/server/sqlite3.c	795;"	d	file:
SQLITE_IOCAP_ATOMIC1K	src/server/sqlite3.h	570;"	d
SQLITE_IOCAP_ATOMIC2K	src/server/sqlite3.c	796;"	d	file:
SQLITE_IOCAP_ATOMIC2K	src/server/sqlite3.h	571;"	d
SQLITE_IOCAP_ATOMIC32K	src/server/sqlite3.c	800;"	d	file:
SQLITE_IOCAP_ATOMIC32K	src/server/sqlite3.h	575;"	d
SQLITE_IOCAP_ATOMIC4K	src/server/sqlite3.c	797;"	d	file:
SQLITE_IOCAP_ATOMIC4K	src/server/sqlite3.h	572;"	d
SQLITE_IOCAP_ATOMIC512	src/server/sqlite3.c	794;"	d	file:
SQLITE_IOCAP_ATOMIC512	src/server/sqlite3.h	569;"	d
SQLITE_IOCAP_ATOMIC64K	src/server/sqlite3.c	801;"	d	file:
SQLITE_IOCAP_ATOMIC64K	src/server/sqlite3.h	576;"	d
SQLITE_IOCAP_ATOMIC8K	src/server/sqlite3.c	798;"	d	file:
SQLITE_IOCAP_ATOMIC8K	src/server/sqlite3.h	573;"	d
SQLITE_IOCAP_IMMUTABLE	src/server/sqlite3.c	806;"	d	file:
SQLITE_IOCAP_IMMUTABLE	src/server/sqlite3.h	581;"	d
SQLITE_IOCAP_POWERSAFE_OVERWRITE	src/server/sqlite3.c	805;"	d	file:
SQLITE_IOCAP_POWERSAFE_OVERWRITE	src/server/sqlite3.h	580;"	d
SQLITE_IOCAP_SAFE_APPEND	src/server/sqlite3.c	802;"	d	file:
SQLITE_IOCAP_SAFE_APPEND	src/server/sqlite3.h	577;"	d
SQLITE_IOCAP_SEQUENTIAL	src/server/sqlite3.c	803;"	d	file:
SQLITE_IOCAP_SEQUENTIAL	src/server/sqlite3.h	578;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	src/server/sqlite3.c	804;"	d	file:
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	src/server/sqlite3.h	579;"	d
SQLITE_IOERR	src/server/sqlite3.c	640;"	d	file:
SQLITE_IOERR	src/server/sqlite3.h	415;"	d
SQLITE_IOERR_ACCESS	src/server/sqlite3.c	691;"	d	file:
SQLITE_IOERR_ACCESS	src/server/sqlite3.h	466;"	d
SQLITE_IOERR_AUTH	src/server/sqlite3.c	706;"	d	file:
SQLITE_IOERR_AUTH	src/server/sqlite3.h	481;"	d
SQLITE_IOERR_BLOCKED	src/server/sqlite3.c	689;"	d	file:
SQLITE_IOERR_BLOCKED	src/server/sqlite3.h	464;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	src/server/sqlite3.c	692;"	d	file:
SQLITE_IOERR_CHECKRESERVEDLOCK	src/server/sqlite3.h	467;"	d
SQLITE_IOERR_CLOSE	src/server/sqlite3.c	694;"	d	file:
SQLITE_IOERR_CLOSE	src/server/sqlite3.h	469;"	d
SQLITE_IOERR_CONVPATH	src/server/sqlite3.c	704;"	d	file:
SQLITE_IOERR_CONVPATH	src/server/sqlite3.h	479;"	d
SQLITE_IOERR_DELETE	src/server/sqlite3.c	688;"	d	file:
SQLITE_IOERR_DELETE	src/server/sqlite3.h	463;"	d
SQLITE_IOERR_DELETE_NOENT	src/server/sqlite3.c	701;"	d	file:
SQLITE_IOERR_DELETE_NOENT	src/server/sqlite3.h	476;"	d
SQLITE_IOERR_DIR_CLOSE	src/server/sqlite3.c	695;"	d	file:
SQLITE_IOERR_DIR_CLOSE	src/server/sqlite3.h	470;"	d
SQLITE_IOERR_DIR_FSYNC	src/server/sqlite3.c	683;"	d	file:
SQLITE_IOERR_DIR_FSYNC	src/server/sqlite3.h	458;"	d
SQLITE_IOERR_FSTAT	src/server/sqlite3.c	685;"	d	file:
SQLITE_IOERR_FSTAT	src/server/sqlite3.h	460;"	d
SQLITE_IOERR_FSYNC	src/server/sqlite3.c	682;"	d	file:
SQLITE_IOERR_FSYNC	src/server/sqlite3.h	457;"	d
SQLITE_IOERR_GETTEMPPATH	src/server/sqlite3.c	703;"	d	file:
SQLITE_IOERR_GETTEMPPATH	src/server/sqlite3.h	478;"	d
SQLITE_IOERR_LOCK	src/server/sqlite3.c	693;"	d	file:
SQLITE_IOERR_LOCK	src/server/sqlite3.h	468;"	d
SQLITE_IOERR_MMAP	src/server/sqlite3.c	702;"	d	file:
SQLITE_IOERR_MMAP	src/server/sqlite3.h	477;"	d
SQLITE_IOERR_NOMEM	src/server/sqlite3.c	690;"	d	file:
SQLITE_IOERR_NOMEM	src/server/sqlite3.h	465;"	d
SQLITE_IOERR_NOMEM_BKPT	src/server/sqlite3.c	14184;"	d	file:
SQLITE_IOERR_NOMEM_BKPT	src/server/sqlite3.c	14187;"	d	file:
SQLITE_IOERR_RDLOCK	src/server/sqlite3.c	687;"	d	file:
SQLITE_IOERR_RDLOCK	src/server/sqlite3.h	462;"	d
SQLITE_IOERR_READ	src/server/sqlite3.c	679;"	d	file:
SQLITE_IOERR_READ	src/server/sqlite3.h	454;"	d
SQLITE_IOERR_SEEK	src/server/sqlite3.c	700;"	d	file:
SQLITE_IOERR_SEEK	src/server/sqlite3.h	475;"	d
SQLITE_IOERR_SHMLOCK	src/server/sqlite3.c	698;"	d	file:
SQLITE_IOERR_SHMLOCK	src/server/sqlite3.h	473;"	d
SQLITE_IOERR_SHMMAP	src/server/sqlite3.c	699;"	d	file:
SQLITE_IOERR_SHMMAP	src/server/sqlite3.h	474;"	d
SQLITE_IOERR_SHMOPEN	src/server/sqlite3.c	696;"	d	file:
SQLITE_IOERR_SHMOPEN	src/server/sqlite3.h	471;"	d
SQLITE_IOERR_SHMSIZE	src/server/sqlite3.c	697;"	d	file:
SQLITE_IOERR_SHMSIZE	src/server/sqlite3.h	472;"	d
SQLITE_IOERR_SHORT_READ	src/server/sqlite3.c	680;"	d	file:
SQLITE_IOERR_SHORT_READ	src/server/sqlite3.h	455;"	d
SQLITE_IOERR_TRUNCATE	src/server/sqlite3.c	684;"	d	file:
SQLITE_IOERR_TRUNCATE	src/server/sqlite3.h	459;"	d
SQLITE_IOERR_UNLOCK	src/server/sqlite3.c	686;"	d	file:
SQLITE_IOERR_UNLOCK	src/server/sqlite3.h	461;"	d
SQLITE_IOERR_VNODE	src/server/sqlite3.c	705;"	d	file:
SQLITE_IOERR_VNODE	src/server/sqlite3.h	480;"	d
SQLITE_IOERR_WRITE	src/server/sqlite3.c	681;"	d	file:
SQLITE_IOERR_WRITE	src/server/sqlite3.h	456;"	d
SQLITE_IgnoreChecks	src/server/sqlite3.c	12298;"	d	file:
SQLITE_InternChanges	src/server/sqlite3.c	12283;"	d	file:
SQLITE_JUMPIFNULL	src/server/sqlite3.c	12606;"	d	file:
SQLITE_LAST_ERRNO	src/server/sqlite3.c	1248;"	d	file:
SQLITE_LAST_ERRNO	src/server/sqlite3.h	1023;"	d
SQLITE_LIMIT_ATTACHED	src/server/sqlite3.c	3491;"	d	file:
SQLITE_LIMIT_ATTACHED	src/server/sqlite3.h	3266;"	d
SQLITE_LIMIT_COLUMN	src/server/sqlite3.c	3486;"	d	file:
SQLITE_LIMIT_COLUMN	src/server/sqlite3.h	3261;"	d
SQLITE_LIMIT_COMPOUND_SELECT	src/server/sqlite3.c	3488;"	d	file:
SQLITE_LIMIT_COMPOUND_SELECT	src/server/sqlite3.h	3263;"	d
SQLITE_LIMIT_EXPR_DEPTH	src/server/sqlite3.c	3487;"	d	file:
SQLITE_LIMIT_EXPR_DEPTH	src/server/sqlite3.h	3262;"	d
SQLITE_LIMIT_FUNCTION_ARG	src/server/sqlite3.c	3490;"	d	file:
SQLITE_LIMIT_FUNCTION_ARG	src/server/sqlite3.h	3265;"	d
SQLITE_LIMIT_LENGTH	src/server/sqlite3.c	3484;"	d	file:
SQLITE_LIMIT_LENGTH	src/server/sqlite3.h	3259;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	src/server/sqlite3.c	3492;"	d	file:
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	src/server/sqlite3.h	3267;"	d
SQLITE_LIMIT_SQL_LENGTH	src/server/sqlite3.c	3485;"	d	file:
SQLITE_LIMIT_SQL_LENGTH	src/server/sqlite3.h	3260;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	src/server/sqlite3.c	3494;"	d	file:
SQLITE_LIMIT_TRIGGER_DEPTH	src/server/sqlite3.h	3269;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	src/server/sqlite3.c	3493;"	d	file:
SQLITE_LIMIT_VARIABLE_NUMBER	src/server/sqlite3.h	3268;"	d
SQLITE_LIMIT_VDBE_OP	src/server/sqlite3.c	3489;"	d	file:
SQLITE_LIMIT_VDBE_OP	src/server/sqlite3.h	3264;"	d
SQLITE_LIMIT_WORKER_THREADS	src/server/sqlite3.c	3495;"	d	file:
SQLITE_LIMIT_WORKER_THREADS	src/server/sqlite3.h	3270;"	d
SQLITE_LITTLEENDIAN	src/server/sqlite3.c	10066;"	d	file:
SQLITE_LITTLEENDIAN	src/server/sqlite3.c	10073;"	d	file:
SQLITE_LITTLEENDIAN	src/server/sqlite3.c	10084;"	d	file:
SQLITE_LOCKED	src/server/sqlite3.c	636;"	d	file:
SQLITE_LOCKED	src/server/sqlite3.h	411;"	d
SQLITE_LOCKED_SHAREDCACHE	src/server/sqlite3.c	707;"	d	file:
SQLITE_LOCKED_SHAREDCACHE	src/server/sqlite3.h	482;"	d
SQLITE_LOCKFILEEX_FLAGS	src/server/sqlite3.c	38227;"	d	file:
SQLITE_LOCKFILE_FLAGS	src/server/sqlite3.c	38218;"	d	file:
SQLITE_LOCK_EXCLUSIVE	src/server/sqlite3.c	819;"	d	file:
SQLITE_LOCK_EXCLUSIVE	src/server/sqlite3.h	594;"	d
SQLITE_LOCK_NONE	src/server/sqlite3.c	815;"	d	file:
SQLITE_LOCK_NONE	src/server/sqlite3.h	590;"	d
SQLITE_LOCK_PENDING	src/server/sqlite3.c	818;"	d	file:
SQLITE_LOCK_PENDING	src/server/sqlite3.h	593;"	d
SQLITE_LOCK_RESERVED	src/server/sqlite3.c	817;"	d	file:
SQLITE_LOCK_RESERVED	src/server/sqlite3.h	592;"	d
SQLITE_LOCK_SHARED	src/server/sqlite3.c	816;"	d	file:
SQLITE_LOCK_SHARED	src/server/sqlite3.h	591;"	d
SQLITE_LegacyFileFmt	src/server/sqlite3.c	12300;"	d	file:
SQLITE_LoadExtension	src/server/sqlite3.c	12307;"	d	file:
SQLITE_MAGIC_BUSY	src/server/sqlite3.c	12362;"	d	file:
SQLITE_MAGIC_CLOSED	src/server/sqlite3.c	12360;"	d	file:
SQLITE_MAGIC_ERROR	src/server/sqlite3.c	12363;"	d	file:
SQLITE_MAGIC_OPEN	src/server/sqlite3.c	12359;"	d	file:
SQLITE_MAGIC_SICK	src/server/sqlite3.c	12361;"	d	file:
SQLITE_MAGIC_ZOMBIE	src/server/sqlite3.c	12364;"	d	file:
SQLITE_MALLOC	src/server/sqlite3.c	18516;"	d	file:
SQLITE_MALLOC	src/server/sqlite3.c	18528;"	d	file:
SQLITE_MALLOCSIZE	src/server/sqlite3.c	18519;"	d	file:
SQLITE_MALLOCSIZE	src/server/sqlite3.c	18561;"	d	file:
SQLITE_MALLOCSIZE	src/server/sqlite3.c	18565;"	d	file:
SQLITE_MALLOC_SOFT_LIMIT	src/server/sqlite3.c	9341;"	d	file:
SQLITE_MAX_ATTACHED	src/server/sqlite3.c	9100;"	d	file:
SQLITE_MAX_COLUMN	src/server/sqlite3.c	9017;"	d	file:
SQLITE_MAX_COMPOUND_SELECT	src/server/sqlite3.c	9054;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	9147;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	9150;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/server/sqlite3.c	9151;"	d	file:
SQLITE_MAX_EXPR_DEPTH	src/server/sqlite3.c	9042;"	d	file:
SQLITE_MAX_FILE_FORMAT	src/server/sqlite3.c	9833;"	d	file:
SQLITE_MAX_FUNCTION_ARG	src/server/sqlite3.c	9069;"	d	file:
SQLITE_MAX_LENGTH	src/server/sqlite3.c	8996;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	src/server/sqlite3.c	160208;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	src/server/sqlite3.c	9171;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/server/sqlite3.c	10126;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/server/sqlite3.c	10127;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/server/sqlite3.c	10143;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/server/sqlite3.c	10145;"	d	file:
SQLITE_MAX_MMAP_SIZE_xc	src/server/sqlite3.c	10147;"	d	file:
SQLITE_MAX_PAGE_COUNT	src/server/sqlite3.c	9163;"	d	file:
SQLITE_MAX_PAGE_SIZE	src/server/sqlite3.c	9123;"	d	file:
SQLITE_MAX_PAGE_SIZE	src/server/sqlite3.c	9125;"	d	file:
SQLITE_MAX_PMASZ	src/server/sqlite3.c	81993;"	d	file:
SQLITE_MAX_SCHEMA_RETRY	src/server/sqlite3.c	15871;"	d	file:
SQLITE_MAX_SQL_LENGTH	src/server/sqlite3.c	9028;"	d	file:
SQLITE_MAX_SYMLINKS	src/server/sqlite3.c	27479;"	d	file:
SQLITE_MAX_TRIGGER_DEPTH	src/server/sqlite3.c	9182;"	d	file:
SQLITE_MAX_U32	src/server/sqlite3.c	9977;"	d	file:
SQLITE_MAX_VARIABLE_NUMBER	src/server/sqlite3.c	9108;"	d	file:
SQLITE_MAX_VDBE_OP	src/server/sqlite3.c	9062;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/server/sqlite3.c	9861;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/server/sqlite3.c	9862;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/server/sqlite3.c	9865;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/server/sqlite3.c	9871;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/server/sqlite3.c	9872;"	d	file:
SQLITE_MINIMUM_FILE_DESCRIPTOR	src/server/sqlite3.c	28117;"	d	file:
SQLITE_MISMATCH	src/server/sqlite3.c	650;"	d	file:
SQLITE_MISMATCH	src/server/sqlite3.h	425;"	d
SQLITE_MISUSE	src/server/sqlite3.c	651;"	d	file:
SQLITE_MISUSE	src/server/sqlite3.h	426;"	d
SQLITE_MISUSE_BKPT	src/server/sqlite3.c	14178;"	d	file:
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	src/server/sqlite3.c	9809;"	d	file:
SQLITE_MUTEX_FAST	src/server/sqlite3.c	6638;"	d	file:
SQLITE_MUTEX_FAST	src/server/sqlite3.h	6413;"	d
SQLITE_MUTEX_NOOP	src/server/sqlite3.c	11935;"	d	file:
SQLITE_MUTEX_NREF	src/server/sqlite3.c	20976;"	d	file:
SQLITE_MUTEX_NREF	src/server/sqlite3.c	20978;"	d	file:
SQLITE_MUTEX_OMIT	src/server/sqlite3.c	11927;"	d	file:
SQLITE_MUTEX_PTHREADS	src/server/sqlite3.c	11931;"	d	file:
SQLITE_MUTEX_RECURSIVE	src/server/sqlite3.c	6639;"	d	file:
SQLITE_MUTEX_RECURSIVE	src/server/sqlite3.h	6414;"	d
SQLITE_MUTEX_STATIC_APP1	src/server/sqlite3.c	6648;"	d	file:
SQLITE_MUTEX_STATIC_APP1	src/server/sqlite3.h	6423;"	d
SQLITE_MUTEX_STATIC_APP2	src/server/sqlite3.c	6649;"	d	file:
SQLITE_MUTEX_STATIC_APP2	src/server/sqlite3.h	6424;"	d
SQLITE_MUTEX_STATIC_APP3	src/server/sqlite3.c	6650;"	d	file:
SQLITE_MUTEX_STATIC_APP3	src/server/sqlite3.h	6425;"	d
SQLITE_MUTEX_STATIC_LRU	src/server/sqlite3.c	6645;"	d	file:
SQLITE_MUTEX_STATIC_LRU	src/server/sqlite3.h	6420;"	d
SQLITE_MUTEX_STATIC_LRU2	src/server/sqlite3.c	6646;"	d	file:
SQLITE_MUTEX_STATIC_LRU2	src/server/sqlite3.h	6421;"	d
SQLITE_MUTEX_STATIC_MASTER	src/server/sqlite3.c	6640;"	d	file:
SQLITE_MUTEX_STATIC_MASTER	src/server/sqlite3.h	6415;"	d
SQLITE_MUTEX_STATIC_MEM	src/server/sqlite3.c	6641;"	d	file:
SQLITE_MUTEX_STATIC_MEM	src/server/sqlite3.h	6416;"	d
SQLITE_MUTEX_STATIC_MEM2	src/server/sqlite3.c	6642;"	d	file:
SQLITE_MUTEX_STATIC_MEM2	src/server/sqlite3.h	6417;"	d
SQLITE_MUTEX_STATIC_OPEN	src/server/sqlite3.c	6643;"	d	file:
SQLITE_MUTEX_STATIC_OPEN	src/server/sqlite3.h	6418;"	d
SQLITE_MUTEX_STATIC_PMEM	src/server/sqlite3.c	6647;"	d	file:
SQLITE_MUTEX_STATIC_PMEM	src/server/sqlite3.h	6422;"	d
SQLITE_MUTEX_STATIC_PRNG	src/server/sqlite3.c	6644;"	d	file:
SQLITE_MUTEX_STATIC_PRNG	src/server/sqlite3.h	6419;"	d
SQLITE_MUTEX_STATIC_VFS1	src/server/sqlite3.c	6651;"	d	file:
SQLITE_MUTEX_STATIC_VFS1	src/server/sqlite3.h	6426;"	d
SQLITE_MUTEX_STATIC_VFS2	src/server/sqlite3.c	6652;"	d	file:
SQLITE_MUTEX_STATIC_VFS2	src/server/sqlite3.h	6427;"	d
SQLITE_MUTEX_STATIC_VFS3	src/server/sqlite3.c	6653;"	d	file:
SQLITE_MUTEX_STATIC_VFS3	src/server/sqlite3.h	6428;"	d
SQLITE_MUTEX_W32	src/server/sqlite3.c	11933;"	d	file:
SQLITE_NEED_ERR_NAME	src/server/sqlite3.c	9487;"	d	file:
SQLITE_NEED_ERR_NAME	src/server/sqlite3.c	9489;"	d	file:
SQLITE_NOINLINE	src/server/sqlite3.c	9242;"	d	file:
SQLITE_NOINLINE	src/server/sqlite3.c	9244;"	d	file:
SQLITE_NOINLINE	src/server/sqlite3.c	9246;"	d	file:
SQLITE_NOLFS	src/server/sqlite3.c	652;"	d	file:
SQLITE_NOLFS	src/server/sqlite3.h	427;"	d
SQLITE_NOMEM	src/server/sqlite3.c	637;"	d	file:
SQLITE_NOMEM	src/server/sqlite3.h	412;"	d
SQLITE_NOMEM_BKPT	src/server/sqlite3.c	14183;"	d	file:
SQLITE_NOMEM_BKPT	src/server/sqlite3.c	14186;"	d	file:
SQLITE_NOTADB	src/server/sqlite3.c	656;"	d	file:
SQLITE_NOTADB	src/server/sqlite3.h	431;"	d
SQLITE_NOTFOUND	src/server/sqlite3.c	642;"	d	file:
SQLITE_NOTFOUND	src/server/sqlite3.h	417;"	d
SQLITE_NOTICE	src/server/sqlite3.c	657;"	d	file:
SQLITE_NOTICE	src/server/sqlite3.h	432;"	d
SQLITE_NOTICE_RECOVER_ROLLBACK	src/server/sqlite3.c	731;"	d	file:
SQLITE_NOTICE_RECOVER_ROLLBACK	src/server/sqlite3.h	506;"	d
SQLITE_NOTICE_RECOVER_WAL	src/server/sqlite3.c	730;"	d	file:
SQLITE_NOTICE_RECOVER_WAL	src/server/sqlite3.h	505;"	d
SQLITE_NOTNULL	src/server/sqlite3.c	12609;"	d	file:
SQLITE_NULL	src/server/sqlite3.c	4176;"	d	file:
SQLITE_NULL	src/server/sqlite3.h	3951;"	d
SQLITE_NULLEQ	src/server/sqlite3.c	12608;"	d	file:
SQLITE_N_BTREE_META	src/server/sqlite3.c	10366;"	d	file:
SQLITE_N_COLCACHE	src/server/sqlite3.c	13667;"	d	file:
SQLITE_N_KEYWORD	src/server/sqlite3.c	132381;"	d	file:
SQLITE_N_LIMIT	src/server/sqlite3.c	12065;"	d	file:
SQLITE_NullCallback	src/server/sqlite3.c	12292;"	d	file:
SQLITE_OK	src/server/sqlite3.c	629;"	d	file:
SQLITE_OK	src/server/sqlite3.h	404;"	d
SQLITE_OMIT_DATETIME_FUNCS	src/server/sqlite3.c	9807;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	src/server/sqlite3.c	126;"	d	file:
SQLITE_OMIT_TRACE	src/server/sqlite3.c	9808;"	d	file:
SQLITE_OPEN_AUTOPROXY	src/server/sqlite3.c	747;"	d	file:
SQLITE_OPEN_AUTOPROXY	src/server/sqlite3.h	522;"	d
SQLITE_OPEN_CREATE	src/server/sqlite3.c	744;"	d	file:
SQLITE_OPEN_CREATE	src/server/sqlite3.h	519;"	d
SQLITE_OPEN_DELETEONCLOSE	src/server/sqlite3.c	745;"	d	file:
SQLITE_OPEN_DELETEONCLOSE	src/server/sqlite3.h	520;"	d
SQLITE_OPEN_EXCLUSIVE	src/server/sqlite3.c	746;"	d	file:
SQLITE_OPEN_EXCLUSIVE	src/server/sqlite3.h	521;"	d
SQLITE_OPEN_FULLMUTEX	src/server/sqlite3.c	758;"	d	file:
SQLITE_OPEN_FULLMUTEX	src/server/sqlite3.h	533;"	d
SQLITE_OPEN_MAIN_DB	src/server/sqlite3.c	750;"	d	file:
SQLITE_OPEN_MAIN_DB	src/server/sqlite3.h	525;"	d
SQLITE_OPEN_MAIN_JOURNAL	src/server/sqlite3.c	753;"	d	file:
SQLITE_OPEN_MAIN_JOURNAL	src/server/sqlite3.h	528;"	d
SQLITE_OPEN_MASTER_JOURNAL	src/server/sqlite3.c	756;"	d	file:
SQLITE_OPEN_MASTER_JOURNAL	src/server/sqlite3.h	531;"	d
SQLITE_OPEN_MEMORY	src/server/sqlite3.c	749;"	d	file:
SQLITE_OPEN_MEMORY	src/server/sqlite3.h	524;"	d
SQLITE_OPEN_NOMUTEX	src/server/sqlite3.c	757;"	d	file:
SQLITE_OPEN_NOMUTEX	src/server/sqlite3.h	532;"	d
SQLITE_OPEN_PRIVATECACHE	src/server/sqlite3.c	760;"	d	file:
SQLITE_OPEN_PRIVATECACHE	src/server/sqlite3.h	535;"	d
SQLITE_OPEN_READONLY	src/server/sqlite3.c	742;"	d	file:
SQLITE_OPEN_READONLY	src/server/sqlite3.h	517;"	d
SQLITE_OPEN_READWRITE	src/server/sqlite3.c	743;"	d	file:
SQLITE_OPEN_READWRITE	src/server/sqlite3.h	518;"	d
SQLITE_OPEN_SHAREDCACHE	src/server/sqlite3.c	759;"	d	file:
SQLITE_OPEN_SHAREDCACHE	src/server/sqlite3.h	534;"	d
SQLITE_OPEN_SUBJOURNAL	src/server/sqlite3.c	755;"	d	file:
SQLITE_OPEN_SUBJOURNAL	src/server/sqlite3.h	530;"	d
SQLITE_OPEN_TEMP_DB	src/server/sqlite3.c	751;"	d	file:
SQLITE_OPEN_TEMP_DB	src/server/sqlite3.h	526;"	d
SQLITE_OPEN_TEMP_JOURNAL	src/server/sqlite3.c	754;"	d	file:
SQLITE_OPEN_TEMP_JOURNAL	src/server/sqlite3.h	529;"	d
SQLITE_OPEN_TRANSIENT_DB	src/server/sqlite3.c	752;"	d	file:
SQLITE_OPEN_TRANSIENT_DB	src/server/sqlite3.h	527;"	d
SQLITE_OPEN_URI	src/server/sqlite3.c	748;"	d	file:
SQLITE_OPEN_URI	src/server/sqlite3.h	523;"	d
SQLITE_OPEN_WAL	src/server/sqlite3.c	761;"	d	file:
SQLITE_OPEN_WAL	src/server/sqlite3.h	536;"	d
SQLITE_OS_OTHER	src/server/sqlite3.c	11672;"	d	file:
SQLITE_OS_OTHER	src/server/sqlite3.c	11676;"	d	file:
SQLITE_OS_OTHER	src/server/sqlite3.c	124;"	d	file:
SQLITE_OS_UNIX	src/server/sqlite3.c	11667;"	d	file:
SQLITE_OS_UNIX	src/server/sqlite3.c	11668;"	d	file:
SQLITE_OS_UNIX	src/server/sqlite3.c	11681;"	d	file:
SQLITE_OS_UNIX	src/server/sqlite3.c	11684;"	d	file:
SQLITE_OS_UNIX	src/server/sqlite3.c	11687;"	d	file:
SQLITE_OS_WIN	src/server/sqlite3.c	11669;"	d	file:
SQLITE_OS_WIN	src/server/sqlite3.c	11670;"	d	file:
SQLITE_OS_WIN	src/server/sqlite3.c	11680;"	d	file:
SQLITE_OS_WIN	src/server/sqlite3.c	11683;"	d	file:
SQLITE_OS_WIN	src/server/sqlite3.c	11691;"	d	file:
SQLITE_OS_WINCE	src/server/sqlite3.c	21611;"	d	file:
SQLITE_OS_WINCE	src/server/sqlite3.c	21613;"	d	file:
SQLITE_OS_WINNT	src/server/sqlite3.c	21603;"	d	file:
SQLITE_OS_WINRT	src/server/sqlite3.c	21621;"	d	file:
SQLITE_OS_WIN_THREADS	src/server/sqlite3.c	21640;"	d	file:
SQLITE_OS_WIN_THREADS	src/server/sqlite3.c	21642;"	d	file:
SQLITE_OmitNoopJoin	src/server/sqlite3.c	12332;"	d	file:
SQLITE_OrderByIdxJoin	src/server/sqlite3.c	12329;"	d	file:
SQLITE_PERM	src/server/sqlite3.c	633;"	d	file:
SQLITE_PERM	src/server/sqlite3.h	408;"	d
SQLITE_POWERSAFE_OVERWRITE	src/server/sqlite3.c	9291;"	d	file:
SQLITE_PRAGMA	src/server/sqlite3.c	2943;"	d	file:
SQLITE_PRAGMA	src/server/sqlite3.h	2718;"	d
SQLITE_PRINTF_INTERNAL	src/server/sqlite3.c	13997;"	d	file:
SQLITE_PRINTF_MALLOCED	src/server/sqlite3.c	13999;"	d	file:
SQLITE_PRINTF_SQLFUNC	src/server/sqlite3.c	13998;"	d	file:
SQLITE_PRINT_BUF_SIZE	src/server/sqlite3.c	23018;"	d	file:
SQLITE_PRIVATE	src/server/sqlite3.c	23;"	d	file:
SQLITE_PROTOCOL	src/server/sqlite3.c	645;"	d	file:
SQLITE_PROTOCOL	src/server/sqlite3.h	420;"	d
SQLITE_PTRSIZE	src/server/sqlite3.c	10021;"	d	file:
SQLITE_PTRSIZE	src/server/sqlite3.c	10024;"	d	file:
SQLITE_PTRSIZE	src/server/sqlite3.c	10026;"	d	file:
SQLITE_PTR_TO_INT	src/server/sqlite3.c	9225;"	d	file:
SQLITE_PTR_TO_INT	src/server/sqlite3.c	9228;"	d	file:
SQLITE_PTR_TO_INT	src/server/sqlite3.c	9231;"	d	file:
SQLITE_PTR_TO_INT	src/server/sqlite3.c	9234;"	d	file:
SQLITE_PreferBuiltin	src/server/sqlite3.c	12306;"	d	file:
SQLITE_QueryFlattener	src/server/sqlite3.c	12322;"	d	file:
SQLITE_QueryOnly	src/server/sqlite3.c	12310;"	d	file:
SQLITE_RANGE	src/server/sqlite3.c	655;"	d	file:
SQLITE_RANGE	src/server/sqlite3.h	430;"	d
SQLITE_RBU_UPDATE_CACHESIZE	src/server/sqlite3.c	161569;"	d	file:
SQLITE_READ	src/server/sqlite3.c	2944;"	d	file:
SQLITE_READ	src/server/sqlite3.h	2719;"	d
SQLITE_READONLY	src/server/sqlite3.c	638;"	d	file:
SQLITE_READONLY	src/server/sqlite3.h	413;"	d
SQLITE_READONLY_CANTLOCK	src/server/sqlite3.c	716;"	d	file:
SQLITE_READONLY_CANTLOCK	src/server/sqlite3.h	491;"	d
SQLITE_READONLY_DBMOVED	src/server/sqlite3.c	718;"	d	file:
SQLITE_READONLY_DBMOVED	src/server/sqlite3.h	493;"	d
SQLITE_READONLY_RECOVERY	src/server/sqlite3.c	715;"	d	file:
SQLITE_READONLY_RECOVERY	src/server/sqlite3.h	490;"	d
SQLITE_READONLY_ROLLBACK	src/server/sqlite3.c	717;"	d	file:
SQLITE_READONLY_ROLLBACK	src/server/sqlite3.h	492;"	d
SQLITE_REALLOC	src/server/sqlite3.c	18518;"	d	file:
SQLITE_REALLOC	src/server/sqlite3.c	18530;"	d	file:
SQLITE_RECURSIVE	src/server/sqlite3.c	2958;"	d	file:
SQLITE_RECURSIVE	src/server/sqlite3.h	2733;"	d
SQLITE_REINDEX	src/server/sqlite3.c	2951;"	d	file:
SQLITE_REINDEX	src/server/sqlite3.h	2726;"	d
SQLITE_REPLACE	src/server/sqlite3.c	8006;"	d	file:
SQLITE_REPLACE	src/server/sqlite3.h	7781;"	d
SQLITE_ROLLBACK	src/server/sqlite3.c	8002;"	d	file:
SQLITE_ROLLBACK	src/server/sqlite3.h	7777;"	d
SQLITE_ROW	src/server/sqlite3.c	659;"	d	file:
SQLITE_ROW	src/server/sqlite3.h	434;"	d
SQLITE_ReadUncommitted	src/server/sqlite3.c	12299;"	d	file:
SQLITE_RecTriggers	src/server/sqlite3.c	12303;"	d	file:
SQLITE_RecoveryMode	src/server/sqlite3.c	12301;"	d	file:
SQLITE_ReverseOrder	src/server/sqlite3.c	12302;"	d	file:
SQLITE_SAVEPOINT	src/server/sqlite3.c	2956;"	d	file:
SQLITE_SAVEPOINT	src/server/sqlite3.h	2731;"	d
SQLITE_SCANSTAT_EST	src/server/sqlite3.c	8057;"	d	file:
SQLITE_SCANSTAT_EST	src/server/sqlite3.h	7832;"	d
SQLITE_SCANSTAT_EXPLAIN	src/server/sqlite3.c	8059;"	d	file:
SQLITE_SCANSTAT_EXPLAIN	src/server/sqlite3.h	7834;"	d
SQLITE_SCANSTAT_NAME	src/server/sqlite3.c	8058;"	d	file:
SQLITE_SCANSTAT_NAME	src/server/sqlite3.h	7833;"	d
SQLITE_SCANSTAT_NLOOP	src/server/sqlite3.c	8055;"	d	file:
SQLITE_SCANSTAT_NLOOP	src/server/sqlite3.h	7830;"	d
SQLITE_SCANSTAT_NVISIT	src/server/sqlite3.c	8056;"	d	file:
SQLITE_SCANSTAT_NVISIT	src/server/sqlite3.h	7831;"	d
SQLITE_SCANSTAT_SELECTID	src/server/sqlite3.c	8060;"	d	file:
SQLITE_SCANSTAT_SELECTID	src/server/sqlite3.h	7835;"	d
SQLITE_SCHEMA	src/server/sqlite3.c	647;"	d	file:
SQLITE_SCHEMA	src/server/sqlite3.h	422;"	d
SQLITE_SELECT	src/server/sqlite3.c	2945;"	d	file:
SQLITE_SELECT	src/server/sqlite3.h	2720;"	d
SQLITE_SET_LOCKPROXYFILE	src/server/sqlite3.c	1247;"	d	file:
SQLITE_SET_LOCKPROXYFILE	src/server/sqlite3.h	1022;"	d
SQLITE_SHM_EXCLUSIVE	src/server/sqlite3.c	1510;"	d	file:
SQLITE_SHM_EXCLUSIVE	src/server/sqlite3.h	1285;"	d
SQLITE_SHM_LOCK	src/server/sqlite3.c	1508;"	d	file:
SQLITE_SHM_LOCK	src/server/sqlite3.h	1283;"	d
SQLITE_SHM_NLOCK	src/server/sqlite3.c	1520;"	d	file:
SQLITE_SHM_NLOCK	src/server/sqlite3.h	1295;"	d
SQLITE_SHM_SHARED	src/server/sqlite3.c	1509;"	d	file:
SQLITE_SHM_SHARED	src/server/sqlite3.h	1284;"	d
SQLITE_SHM_UNLOCK	src/server/sqlite3.c	1507;"	d	file:
SQLITE_SHM_UNLOCK	src/server/sqlite3.h	1282;"	d
SQLITE_SKIP_UTF8	src/server/sqlite3.c	14161;"	d	file:
SQLITE_SORTER_PMASZ	src/server/sqlite3.c	15258;"	d	file:
SQLITE_SOURCE_ID	src/server/sqlite3.c	341;"	d	file:
SQLITE_SOURCE_ID	src/server/sqlite3.h	116;"	d
SQLITE_SO_ASC	src/server/sqlite3.c	12565;"	d	file:
SQLITE_SO_DESC	src/server/sqlite3.c	12566;"	d	file:
SQLITE_SO_UNDEFINED	src/server/sqlite3.c	12567;"	d	file:
SQLITE_STAT4_SAMPLES	src/server/sqlite3.c	91897;"	d	file:
SQLITE_STAT4_SAMPLES	src/server/sqlite3.c	91898;"	d	file:
SQLITE_STAT4_SAMPLES	src/server/sqlite3.c	92000;"	d	file:
SQLITE_STATIC	src/server/sqlite3.c	4813;"	d	file:
SQLITE_STATIC	src/server/sqlite3.h	4588;"	d
SQLITE_STATUS_MALLOC_COUNT	src/server/sqlite3.c	6883;"	d	file:
SQLITE_STATUS_MALLOC_COUNT	src/server/sqlite3.h	6658;"	d
SQLITE_STATUS_MALLOC_SIZE	src/server/sqlite3.c	6879;"	d	file:
SQLITE_STATUS_MALLOC_SIZE	src/server/sqlite3.h	6654;"	d
SQLITE_STATUS_MEMORY_USED	src/server/sqlite3.c	6874;"	d	file:
SQLITE_STATUS_MEMORY_USED	src/server/sqlite3.h	6649;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	src/server/sqlite3.c	6876;"	d	file:
SQLITE_STATUS_PAGECACHE_OVERFLOW	src/server/sqlite3.h	6651;"	d
SQLITE_STATUS_PAGECACHE_SIZE	src/server/sqlite3.c	6881;"	d	file:
SQLITE_STATUS_PAGECACHE_SIZE	src/server/sqlite3.h	6656;"	d
SQLITE_STATUS_PAGECACHE_USED	src/server/sqlite3.c	6875;"	d	file:
SQLITE_STATUS_PAGECACHE_USED	src/server/sqlite3.h	6650;"	d
SQLITE_STATUS_PARSER_STACK	src/server/sqlite3.c	6880;"	d	file:
SQLITE_STATUS_PARSER_STACK	src/server/sqlite3.h	6655;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	src/server/sqlite3.c	6878;"	d	file:
SQLITE_STATUS_SCRATCH_OVERFLOW	src/server/sqlite3.h	6653;"	d
SQLITE_STATUS_SCRATCH_SIZE	src/server/sqlite3.c	6882;"	d	file:
SQLITE_STATUS_SCRATCH_SIZE	src/server/sqlite3.h	6657;"	d
SQLITE_STATUS_SCRATCH_USED	src/server/sqlite3.c	6877;"	d	file:
SQLITE_STATUS_SCRATCH_USED	src/server/sqlite3.h	6652;"	d
SQLITE_STDCALL	src/server/sqlite3.c	283;"	d	file:
SQLITE_STDCALL	src/server/sqlite3.h	58;"	d
SQLITE_STMTJRNL_SPILL	src/server/sqlite3.c	15270;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	src/server/sqlite3.c	7079;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	src/server/sqlite3.h	6854;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	src/server/sqlite3.c	7077;"	d	file:
SQLITE_STMTSTATUS_FULLSCAN_STEP	src/server/sqlite3.h	6852;"	d
SQLITE_STMTSTATUS_SORT	src/server/sqlite3.c	7078;"	d	file:
SQLITE_STMTSTATUS_SORT	src/server/sqlite3.h	6853;"	d
SQLITE_STMTSTATUS_VM_STEP	src/server/sqlite3.c	7080;"	d	file:
SQLITE_STMTSTATUS_VM_STEP	src/server/sqlite3.h	6855;"	d
SQLITE_STOREP2	src/server/sqlite3.c	12607;"	d	file:
SQLITE_SYNC_DATAONLY	src/server/sqlite3.c	849;"	d	file:
SQLITE_SYNC_DATAONLY	src/server/sqlite3.h	624;"	d
SQLITE_SYNC_FULL	src/server/sqlite3.c	848;"	d	file:
SQLITE_SYNC_FULL	src/server/sqlite3.h	623;"	d
SQLITE_SYNC_MASK	src/server/sqlite3.c	43896;"	d	file:
SQLITE_SYNC_NORMAL	src/server/sqlite3.c	847;"	d	file:
SQLITE_SYNC_NORMAL	src/server/sqlite3.h	622;"	d
SQLITE_SYSTEM_MALLOC	src/server/sqlite3.c	9333;"	d	file:
SQLITE_ShortColNames	src/server/sqlite3.c	12288;"	d	file:
SQLITE_SqlTrace	src/server/sqlite3.c	12294;"	d	file:
SQLITE_Stat34	src/server/sqlite3.c	12333;"	d	file:
SQLITE_SubqCoroutine	src/server/sqlite3.c	12330;"	d	file:
SQLITE_TEMP_FILE_PREFIX	src/server/sqlite3.c	11736;"	d	file:
SQLITE_TEMP_STORE	src/server/sqlite3.c	9851;"	d	file:
SQLITE_TEMP_STORE_xc	src/server/sqlite3.c	9852;"	d	file:
SQLITE_TESTCTRL_ALWAYS	src/server/sqlite3.c	6741;"	d	file:
SQLITE_TESTCTRL_ALWAYS	src/server/sqlite3.h	6516;"	d
SQLITE_TESTCTRL_ASSERT	src/server/sqlite3.c	6740;"	d	file:
SQLITE_TESTCTRL_ASSERT	src/server/sqlite3.h	6515;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	src/server/sqlite3.c	6738;"	d	file:
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	src/server/sqlite3.h	6513;"	d
SQLITE_TESTCTRL_BITVEC_TEST	src/server/sqlite3.c	6736;"	d	file:
SQLITE_TESTCTRL_BITVEC_TEST	src/server/sqlite3.h	6511;"	d
SQLITE_TESTCTRL_BYTEORDER	src/server/sqlite3.c	6750;"	d	file:
SQLITE_TESTCTRL_BYTEORDER	src/server/sqlite3.h	6525;"	d
SQLITE_TESTCTRL_EXPLAIN_STMT	src/server/sqlite3.c	6747;"	d	file:
SQLITE_TESTCTRL_EXPLAIN_STMT	src/server/sqlite3.h	6522;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	src/server/sqlite3.c	6737;"	d	file:
SQLITE_TESTCTRL_FAULT_INSTALL	src/server/sqlite3.h	6512;"	d
SQLITE_TESTCTRL_FIRST	src/server/sqlite3.c	6732;"	d	file:
SQLITE_TESTCTRL_FIRST	src/server/sqlite3.h	6507;"	d
SQLITE_TESTCTRL_IMPOSTER	src/server/sqlite3.c	6753;"	d	file:
SQLITE_TESTCTRL_IMPOSTER	src/server/sqlite3.h	6528;"	d
SQLITE_TESTCTRL_ISINIT	src/server/sqlite3.c	6751;"	d	file:
SQLITE_TESTCTRL_ISINIT	src/server/sqlite3.h	6526;"	d
SQLITE_TESTCTRL_ISKEYWORD	src/server/sqlite3.c	6744;"	d	file:
SQLITE_TESTCTRL_ISKEYWORD	src/server/sqlite3.h	6519;"	d
SQLITE_TESTCTRL_LAST	src/server/sqlite3.c	6754;"	d	file:
SQLITE_TESTCTRL_LAST	src/server/sqlite3.h	6529;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	src/server/sqlite3.c	6746;"	d	file:
SQLITE_TESTCTRL_LOCALTIME_FAULT	src/server/sqlite3.h	6521;"	d
SQLITE_TESTCTRL_NEVER_CORRUPT	src/server/sqlite3.c	6748;"	d	file:
SQLITE_TESTCTRL_NEVER_CORRUPT	src/server/sqlite3.h	6523;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	src/server/sqlite3.c	6743;"	d	file:
SQLITE_TESTCTRL_OPTIMIZATIONS	src/server/sqlite3.h	6518;"	d
SQLITE_TESTCTRL_PENDING_BYTE	src/server/sqlite3.c	6739;"	d	file:
SQLITE_TESTCTRL_PENDING_BYTE	src/server/sqlite3.h	6514;"	d
SQLITE_TESTCTRL_PRNG_RESET	src/server/sqlite3.c	6735;"	d	file:
SQLITE_TESTCTRL_PRNG_RESET	src/server/sqlite3.h	6510;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	src/server/sqlite3.c	6734;"	d	file:
SQLITE_TESTCTRL_PRNG_RESTORE	src/server/sqlite3.h	6509;"	d
SQLITE_TESTCTRL_PRNG_SAVE	src/server/sqlite3.c	6733;"	d	file:
SQLITE_TESTCTRL_PRNG_SAVE	src/server/sqlite3.h	6508;"	d
SQLITE_TESTCTRL_RESERVE	src/server/sqlite3.c	6742;"	d	file:
SQLITE_TESTCTRL_RESERVE	src/server/sqlite3.h	6517;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	src/server/sqlite3.c	6745;"	d	file:
SQLITE_TESTCTRL_SCRATCHMALLOC	src/server/sqlite3.h	6520;"	d
SQLITE_TESTCTRL_SORTER_MMAP	src/server/sqlite3.c	6752;"	d	file:
SQLITE_TESTCTRL_SORTER_MMAP	src/server/sqlite3.h	6527;"	d
SQLITE_TESTCTRL_VDBE_COVERAGE	src/server/sqlite3.c	6749;"	d	file:
SQLITE_TESTCTRL_VDBE_COVERAGE	src/server/sqlite3.h	6524;"	d
SQLITE_TEXT	src/server/sqlite3.c	4178;"	d	file:
SQLITE_TEXT	src/server/sqlite3.c	4180;"	d	file:
SQLITE_TEXT	src/server/sqlite3.h	3953;"	d
SQLITE_TEXT	src/server/sqlite3.h	3955;"	d
SQLITE_THREADSAFE	src/server/sqlite3.c	9280;"	d	file:
SQLITE_THREADSAFE	src/server/sqlite3.c	9282;"	d	file:
SQLITE_THREADS_IMPLEMENTED	src/server/sqlite3.c	24619;"	d	file:
SQLITE_THREADS_IMPLEMENTED	src/server/sqlite3.c	24691;"	d	file:
SQLITE_TOOBIG	src/server/sqlite3.c	648;"	d	file:
SQLITE_TOOBIG	src/server/sqlite3.h	423;"	d
SQLITE_TRANSACTION	src/server/sqlite3.c	2946;"	d	file:
SQLITE_TRANSACTION	src/server/sqlite3.h	2721;"	d
SQLITE_TRANSIENT	src/server/sqlite3.c	4814;"	d	file:
SQLITE_TRANSIENT	src/server/sqlite3.h	4589;"	d
SQLITE_Transitive	src/server/sqlite3.c	12331;"	d	file:
SQLITE_UNIX_THREADS	src/server/sqlite3.c	27454;"	d	file:
SQLITE_UPDATE	src/server/sqlite3.c	2947;"	d	file:
SQLITE_UPDATE	src/server/sqlite3.h	2722;"	d
SQLITE_USE_MALLOC_H	src/server/sqlite3.c	18537;"	d	file:
SQLITE_USE_MALLOC_H	src/server/sqlite3.c	18546;"	d	file:
SQLITE_USE_MALLOC_USABLE_SIZE	src/server/sqlite3.c	18538;"	d	file:
SQLITE_USE_MSIZE	src/server/sqlite3.c	18547;"	d	file:
SQLITE_USE_URI	src/server/sqlite3.c	15243;"	d	file:
SQLITE_UTF16	src/server/sqlite3.c	4545;"	d	file:
SQLITE_UTF16	src/server/sqlite3.h	4320;"	d
SQLITE_UTF16BE	src/server/sqlite3.c	4544;"	d	file:
SQLITE_UTF16BE	src/server/sqlite3.h	4319;"	d
SQLITE_UTF16LE	src/server/sqlite3.c	4543;"	d	file:
SQLITE_UTF16LE	src/server/sqlite3.h	4318;"	d
SQLITE_UTF16NATIVE	src/server/sqlite3.c	10067;"	d	file:
SQLITE_UTF16NATIVE	src/server/sqlite3.c	10074;"	d	file:
SQLITE_UTF16NATIVE	src/server/sqlite3.c	10085;"	d	file:
SQLITE_UTF16_ALIGNED	src/server/sqlite3.c	4547;"	d	file:
SQLITE_UTF16_ALIGNED	src/server/sqlite3.h	4322;"	d
SQLITE_UTF8	src/server/sqlite3.c	4542;"	d	file:
SQLITE_UTF8	src/server/sqlite3.h	4317;"	d
SQLITE_VERSION	src/server/sqlite3.c	306;"	d	file:
SQLITE_VERSION	src/server/sqlite3.c	339;"	d	file:
SQLITE_VERSION	src/server/sqlite3.h	114;"	d
SQLITE_VERSION	src/server/sqlite3.h	81;"	d
SQLITE_VERSION_NUMBER	src/server/sqlite3.c	309;"	d	file:
SQLITE_VERSION_NUMBER	src/server/sqlite3.c	340;"	d	file:
SQLITE_VERSION_NUMBER	src/server/sqlite3.h	115;"	d
SQLITE_VERSION_NUMBER	src/server/sqlite3.h	84;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	src/server/sqlite3.c	7976;"	d	file:
SQLITE_VTAB_CONSTRAINT_SUPPORT	src/server/sqlite3.h	7751;"	d
SQLITE_Vacuum	src/server/sqlite3.c	12312;"	d	file:
SQLITE_VdbeAddopTrace	src/server/sqlite3.c	12297;"	d	file:
SQLITE_VdbeEQP	src/server/sqlite3.c	12311;"	d	file:
SQLITE_VdbeListing	src/server/sqlite3.c	12295;"	d	file:
SQLITE_VdbeTrace	src/server/sqlite3.c	12282;"	d	file:
SQLITE_W32_MUTEX_INITIALIZER	src/server/sqlite3.c	21675;"	d	file:
SQLITE_WARNING	src/server/sqlite3.c	658;"	d	file:
SQLITE_WARNING	src/server/sqlite3.h	433;"	d
SQLITE_WARNING_AUTOINDEX	src/server/sqlite3.c	732;"	d	file:
SQLITE_WARNING_AUTOINDEX	src/server/sqlite3.h	507;"	d
SQLITE_WIN32_CACHE_SIZE	src/server/sqlite3.c	35644;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/server/sqlite3.c	35646;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	src/server/sqlite3.c	35393;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	src/server/sqlite3.c	35395;"	d	file:
SQLITE_WIN32_DATA_DIRECTORY_TYPE	src/server/sqlite3.c	35603;"	d	file:
SQLITE_WIN32_DBG_BUF_SIZE	src/server/sqlite3.c	35595;"	d	file:
SQLITE_WIN32_GETVERSIONEX	src/server/sqlite3.c	35380;"	d	file:
SQLITE_WIN32_GETVERSIONEX	src/server/sqlite3.c	35382;"	d	file:
SQLITE_WIN32_HAS_ANSI	src/server/sqlite3.c	35338;"	d	file:
SQLITE_WIN32_HAS_WIDE	src/server/sqlite3.c	35347;"	d	file:
SQLITE_WIN32_HEAP_CREATE	src/server/sqlite3.c	35635;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	src/server/sqlite3.c	35670;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	src/server/sqlite3.c	35654;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	src/server/sqlite3.c	35662;"	d	file:
SQLITE_WIN32_IOERR_RETRY	src/server/sqlite3.c	37232;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	src/server/sqlite3.c	37235;"	d	file:
SQLITE_WIN32_MAX_ERRMSG_CHARS	src/server/sqlite3.c	35451;"	d	file:
SQLITE_WIN32_MAX_PATH_BYTES	src/server/sqlite3.c	35435;"	d	file:
SQLITE_WIN32_MAX_PATH_CHARS	src/server/sqlite3.c	35411;"	d	file:
SQLITE_WIN32_TEMP_DIRECTORY_TYPE	src/server/sqlite3.c	35611;"	d	file:
SQLITE_WIN32_VOLATILE	src/server/sqlite3.c	21629;"	d	file:
SQLITE_WIN32_VOLATILE	src/server/sqlite3.c	21631;"	d	file:
SQLITE_WINNT_MAX_PATH_BYTES	src/server/sqlite3.c	35443;"	d	file:
SQLITE_WINNT_MAX_PATH_CHARS	src/server/sqlite3.c	35426;"	d	file:
SQLITE_WITHIN	src/server/sqlite3.c	10048;"	d	file:
SQLITE_WSD	src/server/sqlite3.c	10258;"	d	file:
SQLITE_WSD	src/server/sqlite3.c	10264;"	d	file:
SQLITE_WriteSchema	src/server/sqlite3.c	12296;"	d	file:
SQL_CHOMP_SEGDIR	src/server/sqlite3.c	148753;"	d	file:
SQL_CONTENT_INSERT	src/server/sqlite3.c	148737;"	d	file:
SQL_DELETE_ALL_CONTENT	src/server/sqlite3.c	148721;"	d	file:
SQL_DELETE_ALL_DOCSIZE	src/server/sqlite3.c	148724;"	d	file:
SQL_DELETE_ALL_SEGDIR	src/server/sqlite3.c	148723;"	d	file:
SQL_DELETE_ALL_SEGMENTS	src/server/sqlite3.c	148722;"	d	file:
SQL_DELETE_ALL_STAT	src/server/sqlite3.c	148725;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	src/server/sqlite3.c	148745;"	d	file:
SQL_DELETE_CONTENT	src/server/sqlite3.c	148719;"	d	file:
SQL_DELETE_DOCSIZE	src/server/sqlite3.c	148738;"	d	file:
SQL_DELETE_SEGDIR_ENTRY	src/server/sqlite3.c	148750;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	src/server/sqlite3.c	148735;"	d	file:
SQL_DELETE_SEGDIR_RANGE	src/server/sqlite3.c	148746;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	src/server/sqlite3.c	148736;"	d	file:
SQL_FIND_MERGE_LEVEL	src/server/sqlite3.c	148748;"	d	file:
SQL_INSERT_SEGDIR	src/server/sqlite3.c	148730;"	d	file:
SQL_INSERT_SEGMENTS	src/server/sqlite3.c	148728;"	d	file:
SQL_IS_EMPTY	src/server/sqlite3.c	148720;"	d	file:
SQL_MAX_LEAF_NODE_ESTIMATE	src/server/sqlite3.c	148749;"	d	file:
SQL_NEXT_SEGMENTS_ID	src/server/sqlite3.c	148729;"	d	file:
SQL_NEXT_SEGMENT_INDEX	src/server/sqlite3.c	148727;"	d	file:
SQL_REPLACE_DOCSIZE	src/server/sqlite3.c	148739;"	d	file:
SQL_REPLACE_STAT	src/server/sqlite3.c	148742;"	d	file:
SQL_SEGMENT_IS_APPENDABLE	src/server/sqlite3.c	148754;"	d	file:
SQL_SELECT_ALL_LANGID	src/server/sqlite3.c	148747;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	src/server/sqlite3.c	148744;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	src/server/sqlite3.c	148726;"	d	file:
SQL_SELECT_DOCSIZE	src/server/sqlite3.c	148740;"	d	file:
SQL_SELECT_INDEXES	src/server/sqlite3.c	148755;"	d	file:
SQL_SELECT_LEVEL	src/server/sqlite3.c	148731;"	d	file:
SQL_SELECT_LEVEL_COUNT	src/server/sqlite3.c	148733;"	d	file:
SQL_SELECT_LEVEL_RANGE	src/server/sqlite3.c	148732;"	d	file:
SQL_SELECT_LEVEL_RANGE2	src/server/sqlite3.c	148758;"	d	file:
SQL_SELECT_MXLEVEL	src/server/sqlite3.c	148756;"	d	file:
SQL_SELECT_SEGDIR	src/server/sqlite3.c	148752;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	src/server/sqlite3.c	148734;"	d	file:
SQL_SELECT_STAT	src/server/sqlite3.c	148741;"	d	file:
SQL_SHIFT_SEGDIR_ENTRY	src/server/sqlite3.c	148751;"	d	file:
SQL_UPDATE_LEVEL	src/server/sqlite3.c	148760;"	d	file:
SQL_UPDATE_LEVEL_IDX	src/server/sqlite3.c	148759;"	d	file:
SQLiteThread	src/server/sqlite3.c	/^struct SQLiteThread {$/;"	s	file:
SQLiteThread	src/server/sqlite3.c	/^typedef struct SQLiteThread SQLiteThread;$/;"	t	typeref:struct:SQLiteThread	file:
SQR	src/renderergl1/tr_sky.c	638;"	d	file:
SQR	src/renderergl2/tr_sky.c	734;"	d	file:
SQRTFAST	src/qcommon/q_shared.h	550;"	d
SRA	src/qcommon/vm_sparc.c	/^	SRAI, SRA,$/;"	e	enum:sparc_iname	file:
SRAI	src/qcommon/vm_sparc.c	/^	SRAI, SRA,$/;"	e	enum:sparc_iname	file:
SRCPRI_AMBIENT	src/client/snd_local.h	/^	SRCPRI_AMBIENT = 0,	\/\/ Ambient sound effects$/;"	e	enum:__anon97
SRCPRI_ENTITY	src/client/snd_local.h	/^	SRCPRI_ENTITY,			\/\/ Entity sound effects$/;"	e	enum:__anon97
SRCPRI_LOCAL	src/client/snd_local.h	/^	SRCPRI_LOCAL,				\/\/ Local sounds$/;"	e	enum:__anon97
SRCPRI_ONESHOT	src/client/snd_local.h	/^	SRCPRI_ONESHOT,			\/\/ One-shot sounds$/;"	e	enum:__anon97
SRCPRI_STREAM	src/client/snd_local.h	/^	SRCPRI_STREAM				\/\/ Streams (music, cutscenes)$/;"	e	enum:__anon97
SRL	src/qcommon/vm_sparc.c	/^	SRLI, SRL,$/;"	e	enum:sparc_iname	file:
SRLI	src/qcommon/vm_sparc.c	/^	SRLI, SRL,$/;"	e	enum:sparc_iname	file:
SRT_Coroutine	src/server/sqlite3.c	13631;"	d	file:
SRT_Discard	src/server/sqlite3.c	13618;"	d	file:
SRT_DistFifo	src/server/sqlite3.c	13620;"	d	file:
SRT_DistQueue	src/server/sqlite3.c	13622;"	d	file:
SRT_EphemTab	src/server/sqlite3.c	13630;"	d	file:
SRT_Except	src/server/sqlite3.c	13616;"	d	file:
SRT_Exists	src/server/sqlite3.c	13617;"	d	file:
SRT_Fifo	src/server/sqlite3.c	13619;"	d	file:
SRT_Mem	src/server/sqlite3.c	13628;"	d	file:
SRT_Output	src/server/sqlite3.c	13627;"	d	file:
SRT_Queue	src/server/sqlite3.c	13621;"	d	file:
SRT_Set	src/server/sqlite3.c	13629;"	d	file:
SRT_Table	src/server/sqlite3.c	13632;"	d	file:
SRT_Union	src/server/sqlite3.c	13615;"	d	file:
SRVAL	src/server/sqlite3.c	82294;"	d	file:
SS_ALMOST_NEAREST	src/renderergl1/tr_local.h	/^	SS_ALMOST_NEAREST,	\/\/ gun smoke puffs$/;"	e	enum:__anon130
SS_ALMOST_NEAREST	src/renderergl2/tr_local.h	/^	SS_ALMOST_NEAREST,	\/\/ gun smoke puffs$/;"	e	enum:__anon11
SS_BAD	src/renderergl1/tr_local.h	/^	SS_BAD,$/;"	e	enum:__anon130
SS_BAD	src/renderergl2/tr_local.h	/^	SS_BAD,$/;"	e	enum:__anon11
SS_BANNER	src/renderergl1/tr_local.h	/^	SS_BANNER,$/;"	e	enum:__anon130
SS_BANNER	src/renderergl2/tr_local.h	/^	SS_BANNER,$/;"	e	enum:__anon11
SS_BLEND0	src/renderergl1/tr_local.h	/^	SS_BLEND0,			\/\/ regular transparency and filters$/;"	e	enum:__anon130
SS_BLEND0	src/renderergl2/tr_local.h	/^	SS_BLEND0,			\/\/ regular transparency and filters$/;"	e	enum:__anon11
SS_BLEND1	src/renderergl1/tr_local.h	/^	SS_BLEND1,			\/\/ generally only used for additive type effects$/;"	e	enum:__anon130
SS_BLEND1	src/renderergl2/tr_local.h	/^	SS_BLEND1,			\/\/ generally only used for additive type effects$/;"	e	enum:__anon11
SS_BLEND2	src/renderergl1/tr_local.h	/^	SS_BLEND2,$/;"	e	enum:__anon130
SS_BLEND2	src/renderergl2/tr_local.h	/^	SS_BLEND2,$/;"	e	enum:__anon11
SS_BLEND3	src/renderergl1/tr_local.h	/^	SS_BLEND3,$/;"	e	enum:__anon130
SS_BLEND3	src/renderergl2/tr_local.h	/^	SS_BLEND3,$/;"	e	enum:__anon11
SS_BLEND6	src/renderergl1/tr_local.h	/^	SS_BLEND6,$/;"	e	enum:__anon130
SS_BLEND6	src/renderergl2/tr_local.h	/^	SS_BLEND6,$/;"	e	enum:__anon11
SS_BLOBLOCKED	src/game/bg_public.h	264;"	d
SS_BOOSTED	src/game/bg_public.h	266;"	d
SS_BOOSTEDWARNING	src/game/bg_public.h	267;"	d
SS_CHARGING	src/game/bg_public.h	269;"	d
SS_CREEPSLOWED	src/game/bg_public.h	261;"	d
SS_DEAD	src/server/server.h	/^	SS_DEAD,			\/\/ no map loaded$/;"	e	enum:__anon183
SS_DECAL	src/renderergl1/tr_local.h	/^	SS_DECAL,			\/\/ scorch marks, etc.$/;"	e	enum:__anon130
SS_DECAL	src/renderergl2/tr_local.h	/^	SS_DECAL,			\/\/ scorch marks, etc.$/;"	e	enum:__anon11
SS_ENVIRONMENT	src/renderergl1/tr_local.h	/^	SS_ENVIRONMENT,		\/\/ sky box$/;"	e	enum:__anon130
SS_ENVIRONMENT	src/renderergl2/tr_local.h	/^	SS_ENVIRONMENT,		\/\/ sky box$/;"	e	enum:__anon11
SS_FOG	src/renderergl1/tr_local.h	/^	SS_FOG,$/;"	e	enum:__anon130
SS_FOG	src/renderergl2/tr_local.h	/^	SS_FOG,$/;"	e	enum:__anon11
SS_GAME	src/server/server.h	/^	SS_GAME				\/\/ actively running$/;"	e	enum:__anon183
SS_GRABBED	src/game/bg_public.h	263;"	d
SS_HEALING_2X	src/game/bg_public.h	271;"	d
SS_HEALING_3X	src/game/bg_public.h	272;"	d
SS_HEALING_ACTIVE	src/game/bg_public.h	270;"	d
SS_HOVELING	src/game/bg_public.h	273;"	d
SS_LOADING	src/server/server.h	/^	SS_LOADING,			\/\/ spawning level entities$/;"	e	enum:__anon183
SS_NEAREST	src/renderergl1/tr_local.h	/^	SS_NEAREST			\/\/ blood blobs$/;"	e	enum:__anon130
SS_NEAREST	src/renderergl2/tr_local.h	/^	SS_NEAREST			\/\/ blood blobs$/;"	e	enum:__anon11
SS_OPAQUE	src/renderergl1/tr_local.h	/^	SS_OPAQUE,			\/\/ opaque$/;"	e	enum:__anon130
SS_OPAQUE	src/renderergl2/tr_local.h	/^	SS_OPAQUE,			\/\/ opaque$/;"	e	enum:__anon11
SS_POISONED	src/game/bg_public.h	265;"	d
SS_PORTAL	src/renderergl1/tr_local.h	/^	SS_PORTAL,			\/\/ mirrors, portals, viewscreens$/;"	e	enum:__anon130
SS_PORTAL	src/renderergl2/tr_local.h	/^	SS_PORTAL,			\/\/ mirrors, portals, viewscreens$/;"	e	enum:__anon11
SS_SEE_THROUGH	src/renderergl1/tr_local.h	/^	SS_SEE_THROUGH,		\/\/ ladders, grates, grills that may have small blended edges$/;"	e	enum:__anon130
SS_SEE_THROUGH	src/renderergl2/tr_local.h	/^	SS_SEE_THROUGH,		\/\/ ladders, grates, grills that may have small blended edges$/;"	e	enum:__anon11
SS_SLOWLOCKED	src/game/bg_public.h	268;"	d
SS_SPEEDBOOST	src/game/bg_public.h	262;"	d
SS_STENCIL_SHADOW	src/renderergl1/tr_local.h	/^	SS_STENCIL_SHADOW,$/;"	e	enum:__anon130
SS_STENCIL_SHADOW	src/renderergl2/tr_local.h	/^	SS_STENCIL_SHADOW,$/;"	e	enum:__anon11
SS_UNDERWATER	src/renderergl1/tr_local.h	/^	SS_UNDERWATER,		\/\/ for items that should be drawn in front of the water plane$/;"	e	enum:__anon130
SS_UNDERWATER	src/renderergl2/tr_local.h	/^	SS_UNDERWATER,		\/\/ for items that should be drawn in front of the water plane$/;"	e	enum:__anon11
SS_WALLCLIMBING	src/game/bg_public.h	260;"	d
ST1	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
ST2	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
ST3	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
STACK_LR	src/qcommon/vm_powerpc.c	150;"	d	file:
STACK_POP	src/qcommon/vm_x86.c	217;"	d	file:
STACK_PUSH	src/qcommon/vm_x86.c	212;"	d	file:
STACK_RTEMP	src/qcommon/vm_powerpc.c	157;"	d	file:
STACK_SAVE	src/qcommon/vm_powerpc.c	152;"	d	file:
STACK_TEMP	src/qcommon/vm_powerpc.c	154;"	d	file:
STALKWIDTH	src/cgame/cg_scanner.c	108;"	d	file:
STAMINA_BLACKOUT_LEVEL	src/game/tremulous.h	649;"	d
STAMINA_BREATHING_LEVEL	src/game/tremulous.h	647;"	d
STAMINA_DODGE_TAKE	src/game/tremulous.h	645;"	d
STAMINA_JUMP_TAKE	src/game/tremulous.h	644;"	d
STAMINA_MAX	src/game/tremulous.h	646;"	d
STAMINA_MEDISTAT_RESTORE	src/game/tremulous.h	642;"	d
STAMINA_SLOW_LEVEL	src/game/tremulous.h	648;"	d
STAMINA_SPRINT_TAKE	src/game/tremulous.h	643;"	d
STAMINA_STOP_RESTORE	src/game/tremulous.h	640;"	d
STAMINA_WALK_RESTORE	src/game/tremulous.h	641;"	d
STAR	src/tools/lcc/cpp/cpp.h	/^		ARROW, SBRA, SKET, LP, RP, DOT, AND, STAR, PLUS, MINUS,$/;"	e	enum:toktype
STAR1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
START	src/tools/lcc/cpp/lex.c	/^	START=0, NUM1, NUM2, NUM3, ID1, ST1, ST2, ST3, COM1, COM2, COM3, COM4,$/;"	e	enum:state	file:
START	src/tools/lcc/lburg/gram.c	/^    START = 259,$/;"	e	enum:yytokentype	file:
START	src/tools/lcc/lburg/gram.c	116;"	d	file:
START	src/tools/lcc/src/symbolic.c	26;"	d	file:
START_CHUNK	src/client/cl_avi.c	/^static ID_INLINE void START_CHUNK( const char *s )$/;"	f	file:
START_SAMPLE_IMMEDIATE	src/client/snd_local.h	76;"	d
STAT	src/tools/asm/q3asm.c	821;"	d	file:
STATUS_FADE_TIME	src/cgame/cg_buildable.c	919;"	d	file:
STATUS_MAX_VIEW_DIST	src/cgame/cg_buildable.c	920;"	d	file:
STATUS_PEEK_DIST	src/cgame/cg_buildable.c	921;"	d	file:
STAT_ACTIVEITEMS	src/game/bg_public.h	/^  STAT_ACTIVEITEMS,$/;"	e	enum:__anon331
STAT_BUILDABLE	src/game/bg_public.h	/^  STAT_BUILDABLE, \/\/ which ghost model to display for building$/;"	e	enum:__anon331
STAT_CLASS	src/game/bg_public.h	/^  STAT_CLASS,     \/\/ player class (for aliens AND humans)$/;"	e	enum:__anon331
STAT_FALLDIST	src/game/bg_public.h	/^  STAT_FALLDIST,  \/\/ the distance the player fell$/;"	e	enum:__anon331
STAT_FUEL	src/game/bg_public.h	/^  STAT_FUEL,      \/\/ jetpacks$/;"	e	enum:__anon331
STAT_GET_NDLT	src/server/sqlite3.c	92533;"	d	file:
STAT_GET_NEQ	src/server/sqlite3.c	92531;"	d	file:
STAT_GET_NLT	src/server/sqlite3.c	92532;"	d	file:
STAT_GET_ROWID	src/server/sqlite3.c	92530;"	d	file:
STAT_GET_STAT1	src/server/sqlite3.c	92529;"	d	file:
STAT_HEALTH	src/game/bg_public.h	/^  STAT_HEALTH,$/;"	e	enum:__anon331
STAT_ITEMS	src/game/bg_public.h	/^  STAT_ITEMS,$/;"	e	enum:__anon331
STAT_MAX_HEALTH	src/game/bg_public.h	/^  STAT_MAX_HEALTH,\/\/ health \/ armor limit, changable by handicap$/;"	e	enum:__anon331
STAT_MINUS	src/cgame/cg_local.h	66;"	d
STAT_MISC	src/game/bg_public.h	/^  STAT_MISC,      \/\/ for uh...misc stuff (pounce, trample, lcannon)$/;"	e	enum:__anon331
STAT_READY	src/game/bg_public.h	/^  STAT_READY,     \/\/ player ready state$/;"	e	enum:__anon331
STAT_SHAKE	src/game/bg_public.h	/^  STAT_SHAKE      \/\/ camera shake$/;"	e	enum:__anon331
STAT_STAMINA	src/game/bg_public.h	/^  STAT_STAMINA,   \/\/ stamina (human only)$/;"	e	enum:__anon331
STAT_STATE	src/game/bg_public.h	/^  STAT_STATE,     \/\/ client states e.g. wall climbing$/;"	e	enum:__anon331
STAT_TEAM	src/game/bg_public.h	/^  STAT_TEAM,      \/\/ player team$/;"	e	enum:__anon331
STAT_VIEWLOCK	src/game/bg_public.h	/^  STAT_VIEWLOCK,  \/\/ direction to lock the view in$/;"	e	enum:__anon331
STAT_WEAPON	src/game/bg_public.h	/^  STAT_WEAPON,    \/\/ current primary weapon$/;"	e	enum:__anon331
STB	src/qcommon/vm_sparc.c	/^	STBI, STB,$/;"	e	enum:sparc_iname	file:
STBI	src/qcommon/vm_sparc.c	/^	STBI, STB,$/;"	e	enum:sparc_iname	file:
STEPSIZE	src/game/bg_local.h	28;"	d
STEREO_CENTER	src/renderercommon/tr_types.h	/^	STEREO_CENTER,$/;"	e	enum:__anon116
STEREO_LEFT	src/renderercommon/tr_types.h	/^	STEREO_LEFT,$/;"	e	enum:__anon116
STEREO_RIGHT	src/renderercommon/tr_types.h	/^	STEREO_RIGHT$/;"	e	enum:__anon116
STF	src/qcommon/vm_sparc.c	/^	STFI, STF,$/;"	e	enum:sparc_iname	file:
STFI	src/qcommon/vm_sparc.c	/^	STFI, STF,$/;"	e	enum:sparc_iname	file:
STH	src/qcommon/vm_sparc.c	/^	STHI, STH,$/;"	e	enum:sparc_iname	file:
STHI	src/qcommon/vm_sparc.c	/^	STHI, STH,$/;"	e	enum:sparc_iname	file:
STL	src/qcommon/vm_sparc.c	151;"	d	file:
STLI	src/qcommon/vm_sparc.c	150;"	d	file:
STMT	src/tools/lcc/src/c.h	/^enum { PERM=0, FUNC, STMT };$/;"	e	enum:__anon289
STRACCUM_NOMEM	src/server/sqlite3.c	13995;"	d	file:
STRACCUM_TOOBIG	src/server/sqlite3.c	13996;"	d	file:
STRARRAY_LEN	src/qcommon/q_shared.h	204;"	d
STRING	src/qcommon/q_shared.h	196;"	d
STRING	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
STRINGOBJ	GNUmakefile	/^STRINGOBJ = $(Q3R2STRINGOBJ)$/;"	m
STRING_DELIMITER	src/qcommon/q_shared.h	914;"	d
STRING_POOL_SIZE	src/ui/ui_shared.h	75;"	d
STRING_POOL_SIZE	src/ui/ui_shared.h	77;"	d
STRIP_FLAG	GNUmakefile	/^  STRIP_FLAG = -s$/;"	m
STRIP_FLAG	GNUmakefile	/^  STRIP_FLAG =$/;"	m
STRLEN	src/tools/lcc/cpp/macro.c	418;"	d	file:
STRUGGLE_DIST	src/cgame/cg_view.c	700;"	d	file:
STRUGGLE_TIME	src/cgame/cg_view.c	701;"	d	file:
STR_FUNCTION	src/server/sqlite3.c	12477;"	d	file:
STW	src/qcommon/vm_sparc.c	/^	STWI, STW,$/;"	e	enum:sparc_iname	file:
STWI	src/qcommon/vm_sparc.c	/^	STWI, STW,$/;"	e	enum:sparc_iname	file:
STX	src/qcommon/vm_sparc.c	/^	STXI, STX,$/;"	e	enum:sparc_iname	file:
STXI	src/qcommon/vm_sparc.c	/^	STXI, STX,$/;"	e	enum:sparc_iname	file:
ST_COLORMAP	src/renderergl2/tr_local.h	/^	ST_COLORMAP = 0,			\/\/ vanilla Q3A style shader treatening$/;"	e	enum:__anon25
ST_DIFFUSEMAP	src/renderergl2/tr_local.h	/^	ST_DIFFUSEMAP = 0,          \/\/ treat color and diffusemap the same$/;"	e	enum:__anon25
ST_GLSL	src/renderergl2/tr_local.h	/^	ST_GLSL$/;"	e	enum:__anon25
ST_NORMALMAP	src/renderergl2/tr_local.h	/^	ST_NORMALMAP,$/;"	e	enum:__anon25
ST_NORMALPARALLAXMAP	src/renderergl2/tr_local.h	/^	ST_NORMALPARALLAXMAP,$/;"	e	enum:__anon25
ST_SPECULARMAP	src/renderergl2/tr_local.h	/^	ST_SPECULARMAP,$/;"	e	enum:__anon25
SUB	src/qcommon/vm_sparc.c	/^	SUBI, SUB,$/;"	e	enum:sparc_iname	file:
SUBCC	src/qcommon/vm_sparc.c	/^	SUBCCI, SUBCC,$/;"	e	enum:sparc_iname	file:
SUBCCI	src/qcommon/vm_sparc.c	/^	SUBCCI, SUBCC,$/;"	e	enum:sparc_iname	file:
SUBDIVIDE_DISTANCE	src/qcommon/cm_patch.h	99;"	d
SUBI	src/qcommon/vm_sparc.c	/^	SUBI, SUB,$/;"	e	enum:sparc_iname	file:
SUDDENDEATHWARNING	src/game/g_main.c	1203;"	d	file:
SUDDEN_DEATH_VOTE	src/game/bg_public.h	/^  SUDDEN_DEATH_VOTE,$/;"	e	enum:__anon360
SURFACE_CLIP_EPSILON	src/qcommon/cm_local.h	146;"	d
SURF_ALPHASHADOW	src/qcommon/surfaceflags.h	87;"	d
SURF_DUST	src/qcommon/surfaceflags.h	89;"	d
SURF_FLESH	src/qcommon/surfaceflags.h	77;"	d
SURF_HINT	src/qcommon/surfaceflags.h	79;"	d
SURF_LADDER	src/qcommon/surfaceflags.h	74;"	d
SURF_LIGHTFILTER	src/qcommon/surfaceflags.h	86;"	d
SURF_METALSTEPS	src/qcommon/surfaceflags.h	83;"	d
SURF_NOALIENBUILD	src/qcommon/surfaceflags.h	92;"	d
SURF_NOBUILD	src/qcommon/surfaceflags.h	94;"	d
SURF_NODAMAGE	src/qcommon/surfaceflags.h	71;"	d
SURF_NODLIGHT	src/qcommon/surfaceflags.h	88;"	d
SURF_NODRAW	src/qcommon/surfaceflags.h	78;"	d
SURF_NOHUMANBUILD	src/qcommon/surfaceflags.h	93;"	d
SURF_NOIMPACT	src/qcommon/surfaceflags.h	75;"	d
SURF_NOLIGHTMAP	src/qcommon/surfaceflags.h	81;"	d
SURF_NOMARKS	src/qcommon/surfaceflags.h	76;"	d
SURF_NONSOLID	src/qcommon/surfaceflags.h	85;"	d
SURF_NOSTEPS	src/qcommon/surfaceflags.h	84;"	d
SURF_POINTLIGHT	src/qcommon/surfaceflags.h	82;"	d
SURF_SKIP	src/qcommon/surfaceflags.h	80;"	d
SURF_SKY	src/qcommon/surfaceflags.h	73;"	d
SURF_SLICK	src/qcommon/surfaceflags.h	72;"	d
SVC_BucketForAddress	src/server/sv_main.c	/^static leakyBucket_t *SVC_BucketForAddress( netadr_t address, int burst, int period ) {$/;"	f	file:
SVC_HashForAddress	src/server/sv_main.c	/^static long SVC_HashForAddress( netadr_t address ) {$/;"	f	file:
SVC_Info	src/server/sv_main.c	/^void SVC_Info( netadr_t from ) {$/;"	f
SVC_RateLimit	src/server/sv_main.c	/^qboolean SVC_RateLimit( leakyBucket_t *bucket, int burst, int period ) {$/;"	f
SVC_RateLimitAddress	src/server/sv_main.c	/^qboolean SVC_RateLimitAddress( netadr_t from, int burst, int period ) {$/;"	f
SVC_RemoteCommand	src/server/sv_main.c	/^static void SVC_RemoteCommand( netadr_t from, msg_t *msg ) {$/;"	f	file:
SVC_Status	src/server/sv_main.c	/^static void SVC_Status( netadr_t from ) {$/;"	f	file:
SVF_BROADCAST	src/game/g_public.h	38;"	d
SVF_CAPSULE	src/game/g_public.h	45;"	d
SVF_CLIENTMASK	src/game/g_public.h	34;"	d
SVF_NOCLIENT	src/game/g_public.h	32;"	d
SVF_NOSERVERINFO	src/game/g_public.h	42;"	d
SVF_NOTSINGLECLIENT	src/game/g_public.h	46;"	d
SVF_PORTAL	src/game/g_public.h	39;"	d
SVF_SINGLECLIENT	src/game/g_public.h	41;"	d
SV_AddEntToSnapshot	src/server/sv_snapshot.c	/^static void SV_AddEntToSnapshot( svEntity_t *svEnt, sharedEntity_t *gEnt, snapshotEntityNumbers_t *eNums ) {$/;"	f	file:
SV_AddEntitiesVisibleFromPoint	src/server/sv_snapshot.c	/^static void SV_AddEntitiesVisibleFromPoint( vec3_t origin, clientSnapshot_t *frame, $/;"	f	file:
SV_AddOperatorCommands	src/server/sv_ccmds.c	/^void SV_AddOperatorCommands( void ) {$/;"	f
SV_AddServerCommand	src/server/sv_main.c	/^void SV_AddServerCommand( client_t *client, const char *cmd ) {$/;"	f
SV_AdjustAreaPortalState	src/server/sv_game.c	/^void SV_AdjustAreaPortalState( sharedEntity_t *ent, qboolean open ) {$/;"	f
SV_AreaEntities	src/server/sv_world.c	/^int SV_AreaEntities( const vec3_t mins, const vec3_t maxs, int *entityList, int maxcount ) {$/;"	f
SV_AreaEntities_r	src/server/sv_world.c	/^static void SV_AreaEntities_r( worldSector_t *node, areaParms_t *ap ) {$/;"	f	file:
SV_BeginDownload_f	src/server/sv_client.c	/^static void SV_BeginDownload_f( client_t *cl ) {$/;"	f	file:
SV_BoundMaxClients	src/server/sv_init.c	/^static void SV_BoundMaxClients( int minimum ) {$/;"	f	file:
SV_BuildClientSnapshot	src/server/sv_snapshot.c	/^static void SV_BuildClientSnapshot( client_t *client ) {$/;"	f	file:
SV_CalcPings	src/server/sv_main.c	/^static void SV_CalcPings( void ) {$/;"	f	file:
SV_ChangeMaxClients	src/server/sv_init.c	/^void SV_ChangeMaxClients( void ) {$/;"	f
SV_CheckPaused	src/server/sv_main.c	/^static qboolean SV_CheckPaused( void ) {$/;"	f	file:
SV_CheckTimeouts	src/server/sv_main.c	/^static void SV_CheckTimeouts( void ) {$/;"	f	file:
SV_ClearServer	src/server/sv_init.c	/^static void SV_ClearServer(void) {$/;"	f	file:
SV_ClearWorld	src/server/sv_world.c	/^void SV_ClearWorld( void ) {$/;"	f
SV_ClientCommand	src/server/sv_client.c	/^static qboolean SV_ClientCommand( client_t *cl, msg_t *msg ) {$/;"	f	file:
SV_ClientEnterWorld	src/server/sv_client.c	/^void SV_ClientEnterWorld( client_t *client, usercmd_t *cmd ) {$/;"	f
SV_ClientThink	src/server/sv_client.c	/^void SV_ClientThink (client_t *cl, usercmd_t *cmd) {$/;"	f
SV_ClipHandleForEntity	src/server/sv_world.c	/^clipHandle_t SV_ClipHandleForEntity( const sharedEntity_t *ent ) {$/;"	f
SV_ClipMoveToEntities	src/server/sv_world.c	/^static void SV_ClipMoveToEntities( moveclip_t *clip ) {$/;"	f	file:
SV_ClipToEntity	src/server/sv_world.c	/^void SV_ClipToEntity( trace_t *trace, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int entityNum, int contentmask, traceType_t type ) {$/;"	f
SV_CloseDownload	src/server/sv_client.c	/^static void SV_CloseDownload( client_t *cl ) {$/;"	f	file:
SV_CompleteMapName	src/server/sv_ccmds.c	/^static void SV_CompleteMapName( char *args, int argNum ) {$/;"	f	file:
SV_ConnectionlessPacket	src/server/sv_main.c	/^static void SV_ConnectionlessPacket( netadr_t from, msg_t *msg ) {$/;"	f	file:
SV_CreateBaseline	src/server/sv_init.c	/^static void SV_CreateBaseline( void ) {$/;"	f	file:
SV_CreateworldSector	src/server/sv_world.c	/^static worldSector_t *SV_CreateworldSector( int depth, vec3_t mins, vec3_t maxs ) {$/;"	f	file:
SV_DECODE_START	src/qcommon/qcommon.h	1181;"	d
SV_DirectConnect	src/server/sv_client.c	/^void SV_DirectConnect( netadr_t from ) {$/;"	f
SV_Disconnect_f	src/server/sv_client.c	/^static void SV_Disconnect_f( client_t *cl ) {$/;"	f	file:
SV_DoneDownload_f	src/server/sv_client.c	/^static void SV_DoneDownload_f( client_t *cl ) {$/;"	f	file:
SV_DropClient	src/server/sv_client.c	/^void SV_DropClient( client_t *drop, const char *reason ) {$/;"	f
SV_ENCODE_START	src/qcommon/qcommon.h	1180;"	d
SV_EmitPacketEntities	src/server/sv_snapshot.c	/^static void SV_EmitPacketEntities( int alternateProtocol, clientSnapshot_t *from, clientSnapshot_t *to, msg_t *msg ) {$/;"	f	file:
SV_EntityContact	src/server/sv_game.c	/^qboolean	SV_EntityContact( vec3_t mins, vec3_t maxs, const sharedEntity_t *gEnt, traceType_t type ) {$/;"	f
SV_ExecuteClientCommand	src/server/sv_client.c	/^void SV_ExecuteClientCommand( client_t *cl, const char *s, qboolean clientOK ) {$/;"	f
SV_ExecuteClientMessage	src/server/sv_client.c	/^void SV_ExecuteClientMessage( client_t *cl, msg_t *msg ) {$/;"	f
SV_ExpandNewlines	src/server/sv_main.c	/^static char	*SV_ExpandNewlines( char *in ) {$/;"	f	file:
SV_FinalMessage	src/server/sv_init.c	/^void SV_FinalMessage( char *message ) {$/;"	f
SV_FlushRedirect	src/server/sv_main.c	/^static void SV_FlushRedirect( char *outputbuf ) {$/;"	f	file:
SV_Frame	src/server/sv_main.c	/^void SV_Frame( int msec ) {$/;"	f
SV_FrameMsec	src/server/sv_main.c	/^int SV_FrameMsec()$/;"	f
SV_FreeClient	src/server/sv_client.c	/^void SV_FreeClient(client_t *client)$/;"	f
SV_GEntityForSvEntity	src/server/sv_game.c	/^sharedEntity_t *SV_GEntityForSvEntity( svEntity_t *svEnt ) {$/;"	f
SV_GameClientNum	src/server/sv_game.c	/^playerState_t *SV_GameClientNum( int num ) {$/;"	f
SV_GameCommand	src/server/sv_game.c	/^qboolean SV_GameCommand( void ) {$/;"	f
SV_GameDropClient	src/server/sv_game.c	/^void SV_GameDropClient( int clientNum, const char *reason ) {$/;"	f
SV_GameSendServerCommand	src/server/sv_game.c	/^void SV_GameSendServerCommand( int clientNum, const char *text ) {$/;"	f
SV_GameSystemCalls	src/server/sv_game.c	/^intptr_t SV_GameSystemCalls( intptr_t *args ) {$/;"	f
SV_GentityNum	src/server/sv_game.c	/^sharedEntity_t *SV_GentityNum( int num ) {$/;"	f
SV_GetChallenge	src/server/sv_client.c	/^void SV_GetChallenge(netadr_t from)$/;"	f
SV_GetConfigstring	src/server/sv_init.c	/^void SV_GetConfigstring( int index, char *buffer, int bufferSize ) {$/;"	f
SV_GetServerinfo	src/server/sv_game.c	/^void SV_GetServerinfo( char *buffer, int bufferSize ) {$/;"	f
SV_GetUsercmd	src/server/sv_game.c	/^void SV_GetUsercmd( int clientNum, usercmd_t *cmd ) {$/;"	f
SV_GetUserinfo	src/server/sv_init.c	/^void SV_GetUserinfo( int index, char *buffer, int bufferSize ) {$/;"	f
SV_Heartbeat_f	src/server/sv_ccmds.c	/^void SV_Heartbeat_f( void ) {$/;"	f
SV_Init	src/server/sv_init.c	/^void SV_Init (void)$/;"	f
SV_InitGameProgs	src/server/sv_game.c	/^void SV_InitGameProgs( void ) {$/;"	f
SV_InitGameVM	src/server/sv_game.c	/^static void SV_InitGameVM( qboolean restart ) {$/;"	f	file:
SV_KillServer_f	src/server/sv_ccmds.c	/^static void SV_KillServer_f( void ) {$/;"	f	file:
SV_LinkEntity	src/server/sv_world.c	/^void SV_LinkEntity( sharedEntity_t *gEnt ) {$/;"	f
SV_LocateGameData	src/server/sv_game.c	/^void SV_LocateGameData( sharedEntity_t *gEnts, int numGEntities, int sizeofGEntity_t,$/;"	f
SV_MapRestart_f	src/server/sv_ccmds.c	/^static void SV_MapRestart_f( void ) {$/;"	f	file:
SV_Map_f	src/server/sv_ccmds.c	/^static void SV_Map_f( void ) {$/;"	f	file:
SV_MasterHeartbeat	src/server/sv_main.c	/^void SV_MasterHeartbeat(const char *message)$/;"	f
SV_MasterShutdown	src/server/sv_main.c	/^void SV_MasterShutdown( void ) {$/;"	f
SV_Netchan_Decode	src/server/sv_net_chan.c	/^static void SV_Netchan_Decode( client_t *client, msg_t *msg ) {$/;"	f	file:
SV_Netchan_Encode	src/server/sv_net_chan.c	/^static void SV_Netchan_Encode( client_t *client, msg_t *msg ) {$/;"	f	file:
SV_Netchan_FreeQueue	src/server/sv_net_chan.c	/^void SV_Netchan_FreeQueue(client_t *client)$/;"	f
SV_Netchan_Process	src/server/sv_net_chan.c	/^qboolean SV_Netchan_Process( client_t *client, msg_t *msg ) {$/;"	f
SV_Netchan_Transmit	src/server/sv_net_chan.c	/^void SV_Netchan_Transmit( client_t *client, msg_t *msg)$/;"	f
SV_Netchan_TransmitNextFragment	src/server/sv_net_chan.c	/^int SV_Netchan_TransmitNextFragment(client_t *client)$/;"	f
SV_Netchan_TransmitNextInQueue	src/server/sv_net_chan.c	/^void SV_Netchan_TransmitNextInQueue(client_t *client)$/;"	f
SV_NextDownload_f	src/server/sv_client.c	/^static void SV_NextDownload_f( client_t *cl )$/;"	f	file:
SV_NumForGentity	src/server/sv_game.c	/^int	SV_NumForGentity( sharedEntity_t *ent ) {$/;"	f
SV_OUTPUTBUF_LENGTH	src/server/sv_main.c	689;"	d	file:
SV_PacketEvent	src/server/sv_main.c	/^void SV_PacketEvent( netadr_t from, msg_t *msg ) {$/;"	f
SV_PointContents	src/server/sv_world.c	/^int SV_PointContents( const vec3_t p, int passEntityNum ) {$/;"	f
SV_QsortEntityNumbers	src/server/sv_snapshot.c	/^static int QDECL SV_QsortEntityNumbers( const void *a, const void *b ) {$/;"	f	file:
SV_RateMsec	src/server/sv_main.c	/^int SV_RateMsec(client_t *client)$/;"	f
SV_RemoveOperatorCommands	src/server/sv_ccmds.c	/^void SV_RemoveOperatorCommands( void ) {$/;"	f
SV_ResetPureClient_f	src/server/sv_client.c	/^static void SV_ResetPureClient_f( client_t *cl ) {$/;"	f	file:
SV_RestartGameProgs	src/server/sv_game.c	/^void SV_RestartGameProgs( void ) {$/;"	f
SV_SectorList_f	src/server/sv_world.c	/^void SV_SectorList_f( void ) {$/;"	f
SV_SendClientGameState	src/server/sv_client.c	/^static void SV_SendClientGameState( client_t *client ) {$/;"	f	file:
SV_SendClientMessages	src/server/sv_snapshot.c	/^void SV_SendClientMessages(void)$/;"	f
SV_SendClientSnapshot	src/server/sv_snapshot.c	/^void SV_SendClientSnapshot( client_t *client ) {$/;"	f
SV_SendConfigstring	src/server/sv_init.c	/^static void SV_SendConfigstring(client_t *client, int index)$/;"	f	file:
SV_SendDownloadMessages	src/server/sv_client.c	/^int SV_SendDownloadMessages(void)$/;"	f
SV_SendMessageToClient	src/server/sv_snapshot.c	/^void SV_SendMessageToClient(msg_t *msg, client_t *client)$/;"	f
SV_SendQueuedMessages	src/server/sv_client.c	/^int SV_SendQueuedMessages(void)$/;"	f
SV_SendQueuedPackets	src/server/sv_main.c	/^int SV_SendQueuedPackets()$/;"	f
SV_SendServerCommand	src/server/sv_main.c	/^void QDECL SV_SendServerCommand(client_t *cl, const char *fmt, ...) {$/;"	f
SV_Serverinfo_f	src/server/sv_ccmds.c	/^static void SV_Serverinfo_f( void ) {$/;"	f	file:
SV_SetBrushModel	src/server/sv_game.c	/^void SV_SetBrushModel( sharedEntity_t *ent, const char *name ) {$/;"	f
SV_SetConfigstring	src/server/sv_init.c	/^void SV_SetConfigstring (int index, const char *val) {$/;"	f
SV_SetConfigstringRestrictions	src/server/sv_init.c	/^void SV_SetConfigstringRestrictions (int index, const clientList_t* clientList) {$/;"	f
SV_SetUserinfo	src/server/sv_init.c	/^void SV_SetUserinfo( int index, const char *val ) {$/;"	f
SV_ShouldIgnoreVoipSender	src/server/sv_client.c	/^static qboolean SV_ShouldIgnoreVoipSender(const client_t *cl)$/;"	f	file:
SV_Shutdown	src/server/sv_init.c	/^void SV_Shutdown( char *finalmsg ) {$/;"	f
SV_ShutdownGameProgs	src/server/sv_game.c	/^void SV_ShutdownGameProgs( void ) {$/;"	f
SV_SpawnServer	src/server/sv_init.c	/^void SV_SpawnServer( char *server, qboolean killBots ) {$/;"	f
SV_Startup	src/server/sv_init.c	/^static void SV_Startup( void ) {$/;"	f	file:
SV_StopDownload_f	src/server/sv_client.c	/^static void SV_StopDownload_f( client_t *cl ) {$/;"	f	file:
SV_SvEntityForGentity	src/server/sv_game.c	/^svEntity_t	*SV_SvEntityForGentity( sharedEntity_t *gEnt ) {$/;"	f
SV_Systeminfo_f	src/server/sv_ccmds.c	/^static void SV_Systeminfo_f( void ) {$/;"	f	file:
SV_TouchCGame	src/server/sv_init.c	/^static void SV_TouchCGame(void) {$/;"	f	file:
SV_Trace	src/server/sv_world.c	/^void SV_Trace( trace_t *results, const vec3_t start, vec3_t mins, vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask, traceType_t type ) {$/;"	f
SV_UnlinkEntity	src/server/sv_world.c	/^void SV_UnlinkEntity( sharedEntity_t *gEnt ) {$/;"	f
SV_UpdateConfigstrings	src/server/sv_init.c	/^void SV_UpdateConfigstrings(client_t *client)$/;"	f
SV_UpdateServerCommandsToClient	src/server/sv_snapshot.c	/^void SV_UpdateServerCommandsToClient( client_t *client, msg_t *msg ) {$/;"	f
SV_UpdateUserinfo_f	src/server/sv_client.c	/^static void SV_UpdateUserinfo_f( client_t *cl ) {$/;"	f	file:
SV_UpdateVoipIgnore	src/server/sv_client.c	/^void SV_UpdateVoipIgnore(client_t *cl, const char *idstr, qboolean ignore)$/;"	f	file:
SV_UserMove	src/server/sv_client.c	/^static void SV_UserMove( client_t *cl, msg_t *msg, qboolean delta ) {$/;"	f	file:
SV_UserVoip	src/server/sv_client.c	/^void SV_UserVoip(client_t *cl, msg_t *msg)$/;"	f	file:
SV_UserinfoChanged	src/server/sv_client.c	/^void SV_UserinfoChanged( client_t *cl ) {$/;"	f
SV_VerifyPaks_f	src/server/sv_client.c	/^static void SV_VerifyPaks_f( client_t *cl ) {$/;"	f	file:
SV_Voip_f	src/server/sv_client.c	/^static void SV_Voip_f( client_t *cl ) {$/;"	f	file:
SV_WriteDownloadToClient	src/server/sv_client.c	/^int SV_WriteDownloadToClient(client_t *cl, msg_t *msg)$/;"	f
SV_WriteSnapshotToClient	src/server/sv_snapshot.c	/^static void SV_WriteSnapshotToClient( client_t *client, msg_t *msg ) {$/;"	f	file:
SV_WriteVoipToClient	src/server/sv_snapshot.c	/^static void SV_WriteVoipToClient(client_t *cl, msg_t *msg)$/;"	f	file:
SV_inPVS	src/server/sv_game.c	/^qboolean SV_inPVS (const vec3_t p1, const vec3_t p2)$/;"	f
SV_inPVSIgnorePortals	src/server/sv_game.c	/^qboolean SV_inPVSIgnorePortals( const vec3_t p1, const vec3_t p2)$/;"	f
SWAP	src/server/sqlite3.c	161575;"	d	file:
SWAP	src/server/sqlite3.c	9906;"	d	file:
SWAPINIT	src/game/bg_lib.c	92;"	d	file:
SWAPVAL	src/server/sqlite3.c	178455;"	d	file:
SWSIZE	src/tools/lcc/src/stmt.c	4;"	d	file:
SWTRAP	src/qcommon/vm_sparc.c	272;"	d	file:
SYSCALL	src/server/sqlite3.c	35747;"	d	file:
SYSDIR	GNUmakefile	/^SYSDIR=$(MOUNT_DIR)\/sys$/;"	m
S_AL_AddLoopingSound	src/client/snd_openal.c	/^static void S_AL_AddLoopingSound(int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx)$/;"	f	file:
S_AL_AddRealLoopingSound	src/client/snd_openal.c	/^static void S_AL_AddRealLoopingSound(int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx)$/;"	f	file:
S_AL_AllocateStreamChannel	src/client/snd_openal.c	/^static void S_AL_AllocateStreamChannel(int stream, int entityNum)$/;"	f	file:
S_AL_AvailableCaptureSamples	src/client/snd_openal.c	/^int S_AL_AvailableCaptureSamples( void )$/;"	f	file:
S_AL_BeginRegistration	src/client/snd_openal.c	/^void S_AL_BeginRegistration( void )$/;"	f	file:
S_AL_BufferEvict	src/client/snd_openal.c	/^static qboolean S_AL_BufferEvict( void )$/;"	f	file:
S_AL_BufferFind	src/client/snd_openal.c	/^static sfxHandle_t S_AL_BufferFind(const char *filename)$/;"	f	file:
S_AL_BufferFindFree	src/client/snd_openal.c	/^static sfxHandle_t S_AL_BufferFindFree( void )$/;"	f	file:
S_AL_BufferGet	src/client/snd_openal.c	/^ALuint S_AL_BufferGet(sfxHandle_t sfx)$/;"	f	file:
S_AL_BufferInit	src/client/snd_openal.c	/^qboolean S_AL_BufferInit( void )$/;"	f	file:
S_AL_BufferLoad	src/client/snd_openal.c	/^static void S_AL_BufferLoad(sfxHandle_t sfx, qboolean cache)$/;"	f	file:
S_AL_BufferShutdown	src/client/snd_openal.c	/^void S_AL_BufferShutdown( void )$/;"	f	file:
S_AL_BufferUnload	src/client/snd_openal.c	/^static void S_AL_BufferUnload(sfxHandle_t sfx)$/;"	f	file:
S_AL_BufferUse	src/client/snd_openal.c	/^void S_AL_BufferUse(sfxHandle_t sfx)$/;"	f	file:
S_AL_BufferUseDefault	src/client/snd_openal.c	/^static void S_AL_BufferUseDefault(sfxHandle_t sfx)$/;"	f	file:
S_AL_Capture	src/client/snd_openal.c	/^void S_AL_Capture( int samples, byte *data )$/;"	f	file:
S_AL_CheckInput	src/client/snd_openal.c	/^static qboolean S_AL_CheckInput(int entityNum, sfxHandle_t sfx)$/;"	f	file:
S_AL_ClearError	src/client/snd_openal.c	/^static void S_AL_ClearError( qboolean quiet )$/;"	f	file:
S_AL_ClearLoopingSounds	src/client/snd_openal.c	/^void S_AL_ClearLoopingSounds( qboolean killall )$/;"	f	file:
S_AL_ClearSoundBuffer	src/client/snd_openal.c	/^void S_AL_ClearSoundBuffer( void )$/;"	f	file:
S_AL_CloseMusicFiles	src/client/snd_openal.c	/^static void S_AL_CloseMusicFiles(void)$/;"	f	file:
S_AL_DisableSounds	src/client/snd_openal.c	/^void S_AL_DisableSounds( void )$/;"	f	file:
S_AL_ErrorMsg	src/client/snd_openal.c	/^static const char *S_AL_ErrorMsg(ALenum error)$/;"	f	file:
S_AL_Format	src/client/snd_openal.c	/^ALuint S_AL_Format(int width, int channels)$/;"	f	file:
S_AL_FreeStreamChannel	src/client/snd_openal.c	/^static void S_AL_FreeStreamChannel( int stream )$/;"	f	file:
S_AL_Gain	src/client/snd_openal.c	/^static void S_AL_Gain(ALuint source, float gainval)$/;"	f	file:
S_AL_GenBuffers	src/client/snd_openal.c	/^static qboolean S_AL_GenBuffers(ALsizei numBuffers, ALuint *buffers, const char *name)$/;"	f	file:
S_AL_HearingThroughEntity	src/client/snd_openal.c	/^static qboolean S_AL_HearingThroughEntity( int entityNum )$/;"	f	file:
S_AL_Init	src/client/snd_openal.c	/^qboolean S_AL_Init( soundInterface_t *si )$/;"	f
S_AL_MasterGain	src/client/snd_openal.c	/^void S_AL_MasterGain( float gain )$/;"	f
S_AL_MusicProcess	src/client/snd_openal.c	/^void S_AL_MusicProcess(ALuint b)$/;"	f	file:
S_AL_MusicSourceFree	src/client/snd_openal.c	/^static void S_AL_MusicSourceFree( void )$/;"	f	file:
S_AL_MusicSourceGet	src/client/snd_openal.c	/^static void S_AL_MusicSourceGet( void )$/;"	f	file:
S_AL_MusicUpdate	src/client/snd_openal.c	/^void S_AL_MusicUpdate( void )$/;"	f	file:
S_AL_NewLoopMaster	src/client/snd_openal.c	/^static void S_AL_NewLoopMaster(src_t *rmSource, qboolean iskilled)$/;"	f	file:
S_AL_RawSamples	src/client/snd_openal.c	/^void S_AL_RawSamples(int stream, int samples, int rate, int width, int channels, const byte *data, float volume, int entityNum)$/;"	f	file:
S_AL_RegisterSound	src/client/snd_openal.c	/^sfxHandle_t S_AL_RegisterSound( const char *sample, qboolean compressed )$/;"	f	file:
S_AL_Respatialize	src/client/snd_openal.c	/^void S_AL_Respatialize( int entityNum, const vec3_t origin, vec3_t axis[3], int inwater )$/;"	f	file:
S_AL_SanitiseVector	src/client/snd_openal.c	636;"	d	file:
S_AL_SaveLoopPos	src/client/snd_openal.c	/^static void S_AL_SaveLoopPos(src_t *dest, ALuint alSource)$/;"	f	file:
S_AL_ScaleGain	src/client/snd_openal.c	/^static void S_AL_ScaleGain(src_t *chksrc, vec3_t origin)$/;"	f	file:
S_AL_Shutdown	src/client/snd_openal.c	/^void S_AL_Shutdown( void )$/;"	f	file:
S_AL_SoundDuration	src/client/snd_openal.c	/^int S_AL_SoundDuration( sfxHandle_t sfx )$/;"	f	file:
S_AL_SoundInfo	src/client/snd_openal.c	/^static void S_AL_SoundInfo(void)$/;"	f	file:
S_AL_SoundList	src/client/snd_openal.c	/^void S_AL_SoundList( void )$/;"	f	file:
S_AL_SrcAlloc	src/client/snd_openal.c	/^srcHandle_t S_AL_SrcAlloc( alSrcPriority_t priority, int entnum, int channel )$/;"	f	file:
S_AL_SrcGet	src/client/snd_openal.c	/^ALuint S_AL_SrcGet(srcHandle_t src)$/;"	f	file:
S_AL_SrcInit	src/client/snd_openal.c	/^qboolean S_AL_SrcInit( void )$/;"	f	file:
S_AL_SrcKill	src/client/snd_openal.c	/^static void S_AL_SrcKill(srcHandle_t src)$/;"	f	file:
S_AL_SrcLock	src/client/snd_openal.c	/^void S_AL_SrcLock(srcHandle_t src)$/;"	f	file:
S_AL_SrcLoop	src/client/snd_openal.c	/^static void S_AL_SrcLoop( alSrcPriority_t priority, sfxHandle_t sfx,$/;"	f	file:
S_AL_SrcSetup	src/client/snd_openal.c	/^static void S_AL_SrcSetup(srcHandle_t src, sfxHandle_t sfx, alSrcPriority_t priority,$/;"	f	file:
S_AL_SrcShutdown	src/client/snd_openal.c	/^void S_AL_SrcShutdown( void )$/;"	f	file:
S_AL_SrcShutup	src/client/snd_openal.c	/^void S_AL_SrcShutup( void )$/;"	f	file:
S_AL_SrcUnlock	src/client/snd_openal.c	/^void S_AL_SrcUnlock(srcHandle_t src)$/;"	f	file:
S_AL_SrcUpdate	src/client/snd_openal.c	/^void S_AL_SrcUpdate( void )$/;"	f	file:
S_AL_StartBackgroundTrack	src/client/snd_openal.c	/^void S_AL_StartBackgroundTrack( const char *intro, const char *loop )$/;"	f	file:
S_AL_StartCapture	src/client/snd_openal.c	/^void S_AL_StartCapture( void )$/;"	f	file:
S_AL_StartLocalSound	src/client/snd_openal.c	/^void S_AL_StartLocalSound(sfxHandle_t sfx, int channel)$/;"	f	file:
S_AL_StartSound	src/client/snd_openal.c	/^static void S_AL_StartSound( vec3_t origin, int entnum, int entchannel, sfxHandle_t sfx )$/;"	f	file:
S_AL_StopAllSounds	src/client/snd_openal.c	/^void S_AL_StopAllSounds( void )$/;"	f	file:
S_AL_StopBackgroundTrack	src/client/snd_openal.c	/^void S_AL_StopBackgroundTrack( void )$/;"	f	file:
S_AL_StopCapture	src/client/snd_openal.c	/^void S_AL_StopCapture( void )$/;"	f
S_AL_StopLoopingSound	src/client/snd_openal.c	/^void S_AL_StopLoopingSound(int entityNum )$/;"	f	file:
S_AL_StreamDie	src/client/snd_openal.c	/^void S_AL_StreamDie( int stream )$/;"	f	file:
S_AL_StreamUpdate	src/client/snd_openal.c	/^void S_AL_StreamUpdate( int stream )$/;"	f	file:
S_AL_Update	src/client/snd_openal.c	/^void S_AL_Update( void )$/;"	f	file:
S_AL_UpdateEntityPosition	src/client/snd_openal.c	/^void S_AL_UpdateEntityPosition( int entityNum, const vec3_t origin )$/;"	f	file:
S_AddLoopSounds	src/client/snd_dma.c	/^void S_AddLoopSounds (void) {$/;"	f
S_AddLoopingSound	src/client/snd_main.c	/^void S_AddLoopingSound( int entityNum, const vec3_t origin,$/;"	f
S_AddRealLoopingSound	src/client/snd_main.c	/^void S_AddRealLoopingSound( int entityNum, const vec3_t origin,$/;"	f
S_AdpcmDecode	src/client/snd_adpcm.c	/^\/* static *\/ void S_AdpcmDecode( const char indata[], short *outdata, int len, struct adpcm_state *state ) {$/;"	f
S_AdpcmEncode	src/client/snd_adpcm.c	/^void S_AdpcmEncode( short indata[], char outdata[], int len, struct adpcm_state *state ) {$/;"	f
S_AdpcmEncodeSound	src/client/snd_adpcm.c	/^void S_AdpcmEncodeSound( sfx_t *sfx, short *samples ) {$/;"	f
S_AdpcmGetSamples	src/client/snd_adpcm.c	/^void S_AdpcmGetSamples(sndBuffer *chunk, short *to) {$/;"	f
S_AdpcmMemoryNeeded	src/client/snd_adpcm.c	/^int S_AdpcmMemoryNeeded( const wavinfo_t *info ) {$/;"	f
S_AvailableCaptureSamples	src/client/snd_main.c	/^int S_AvailableCaptureSamples( void )$/;"	f
S_Base_AddLoopingSound	src/client/snd_dma.c	/^void S_Base_AddLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfxHandle ) {$/;"	f
S_Base_AddRealLoopingSound	src/client/snd_dma.c	/^void S_Base_AddRealLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfxHandle ) {$/;"	f
S_Base_AvailableCaptureSamples	src/client/snd_dma.c	/^int S_Base_AvailableCaptureSamples( void )$/;"	f	file:
S_Base_BeginRegistration	src/client/snd_dma.c	/^void S_Base_BeginRegistration( void ) {$/;"	f
S_Base_Capture	src/client/snd_dma.c	/^void S_Base_Capture( int samples, byte *data )$/;"	f	file:
S_Base_ClearLoopingSounds	src/client/snd_dma.c	/^void S_Base_ClearLoopingSounds( qboolean killall ) {$/;"	f
S_Base_ClearSoundBuffer	src/client/snd_dma.c	/^void S_Base_ClearSoundBuffer( void ) {$/;"	f
S_Base_DisableSounds	src/client/snd_dma.c	/^void S_Base_DisableSounds( void ) {$/;"	f
S_Base_HearingThroughEntity	src/client/snd_dma.c	/^static qboolean S_Base_HearingThroughEntity( int entityNum, vec3_t origin )$/;"	f	file:
S_Base_Init	src/client/snd_dma.c	/^qboolean S_Base_Init( soundInterface_t *si ) {$/;"	f
S_Base_MasterGain	src/client/snd_dma.c	/^void S_Base_MasterGain( float val )$/;"	f	file:
S_Base_RawSamples	src/client/snd_dma.c	/^void S_Base_RawSamples( int stream, int samples, int rate, int width, int s_channels, const byte *data, float volume, int entityNum)$/;"	f
S_Base_RegisterSound	src/client/snd_dma.c	/^sfxHandle_t	S_Base_RegisterSound( const char *name, qboolean compressed ) {$/;"	f
S_Base_Respatialize	src/client/snd_dma.c	/^void S_Base_Respatialize( int entityNum, const vec3_t head, vec3_t axis[3], int inwater ) {$/;"	f
S_Base_Shutdown	src/client/snd_dma.c	/^void S_Base_Shutdown( void ) {$/;"	f
S_Base_SoundDuration	src/client/snd_dma.c	/^static int S_Base_SoundDuration( sfxHandle_t handle ) {$/;"	f	file:
S_Base_SoundInfo	src/client/snd_dma.c	/^void S_Base_SoundInfo(void) {	$/;"	f
S_Base_SoundList	src/client/snd_dma.c	/^void S_Base_SoundList( void ) {$/;"	f
S_Base_StartBackgroundTrack	src/client/snd_dma.c	/^void S_Base_StartBackgroundTrack( const char *intro, const char *loop ){$/;"	f
S_Base_StartCapture	src/client/snd_dma.c	/^void S_Base_StartCapture( void )$/;"	f	file:
S_Base_StartLocalSound	src/client/snd_dma.c	/^void S_Base_StartLocalSound( sfxHandle_t sfxHandle, int channelNum ) {$/;"	f
S_Base_StartSound	src/client/snd_dma.c	/^void S_Base_StartSound( vec3_t origin, int entityNum, int entchannel, sfxHandle_t sfxHandle ) {$/;"	f
S_Base_StartSoundEx	src/client/snd_dma.c	/^static void S_Base_StartSoundEx( vec3_t origin, int entityNum, int entchannel, sfxHandle_t sfxHandle, qboolean localSound ) {$/;"	f	file:
S_Base_StopAllSounds	src/client/snd_dma.c	/^void S_Base_StopAllSounds(void) {$/;"	f
S_Base_StopBackgroundTrack	src/client/snd_dma.c	/^void S_Base_StopBackgroundTrack( void ) {$/;"	f
S_Base_StopCapture	src/client/snd_dma.c	/^void S_Base_StopCapture( void )$/;"	f	file:
S_Base_StopLoopingSound	src/client/snd_dma.c	/^void S_Base_StopLoopingSound(int entityNum) {$/;"	f
S_Base_Update	src/client/snd_dma.c	/^void S_Base_Update( void ) {$/;"	f
S_Base_UpdateEntityPosition	src/client/snd_dma.c	/^void S_Base_UpdateEntityPosition( int entityNum, const vec3_t origin ) {$/;"	f
S_BeginRegistration	src/client/snd_main.c	/^void S_BeginRegistration( void )$/;"	f
S_ByteSwapRawSamples	src/client/snd_codec_wav.c	/^static void S_ByteSwapRawSamples( int samples, int width, int s_channels, const byte *data ) {$/;"	f	file:
S_ByteSwapRawSamples	src/client/snd_dma.c	/^void S_ByteSwapRawSamples( int samples, int width, int s_channels, const byte *data ) {$/;"	f
S_COLOR_BLACK	src/qcommon/q_shared.h	430;"	d
S_COLOR_BLUE	src/qcommon/q_shared.h	434;"	d
S_COLOR_CHOCOLATE	src/qcommon/q_shared.h	442;"	d
S_COLOR_CYAN	src/qcommon/q_shared.h	435;"	d
S_COLOR_GOLD	src/qcommon/q_shared.h	443;"	d
S_COLOR_GREEN	src/qcommon/q_shared.h	432;"	d
S_COLOR_INDIGO	src/qcommon/q_shared.h	445;"	d
S_COLOR_MAGENTA	src/qcommon/q_shared.h	436;"	d
S_COLOR_ORANGE	src/qcommon/q_shared.h	438;"	d
S_COLOR_PINK	src/qcommon/q_shared.h	441;"	d
S_COLOR_PURPLE	src/qcommon/q_shared.h	439;"	d
S_COLOR_RED	src/qcommon/q_shared.h	431;"	d
S_COLOR_SILVER	src/qcommon/q_shared.h	444;"	d
S_COLOR_TEAL	src/qcommon/q_shared.h	440;"	d
S_COLOR_WHITE	src/qcommon/q_shared.h	437;"	d
S_COLOR_YELLOW	src/qcommon/q_shared.h	433;"	d
S_COMMENT	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_COMNL	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_Capture	src/client/snd_main.c	/^void S_Capture( int samples, byte *data )$/;"	f
S_ChannelFree	src/client/snd_dma.c	/^void S_ChannelFree(channel_t *v) {$/;"	f
S_ChannelMalloc	src/client/snd_dma.c	/^channel_t*	S_ChannelMalloc( void ) {$/;"	f
S_ChannelSetup	src/client/snd_dma.c	/^void S_ChannelSetup( void ) {$/;"	f
S_ClearLoopingSounds	src/client/snd_main.c	/^void S_ClearLoopingSounds( qboolean killall )$/;"	f
S_ClearSoundBuffer	src/client/snd_main.c	/^void S_ClearSoundBuffer( void )$/;"	f
S_ClearSoundBuffer	src/null/null_snddma.c	/^void S_ClearSoundBuffer( void ) {$/;"	f
S_CodecCloseStream	src/client/snd_codec.c	/^void S_CodecCloseStream(snd_stream_t *stream)$/;"	f
S_CodecGetSound	src/client/snd_codec.c	/^static void *S_CodecGetSound(const char *filename, snd_info_t *info)$/;"	f	file:
S_CodecInit	src/client/snd_codec.c	/^void S_CodecInit()$/;"	f
S_CodecLoad	src/client/snd_codec.c	/^void *S_CodecLoad(const char *filename, snd_info_t *info)$/;"	f
S_CodecOpenStream	src/client/snd_codec.c	/^snd_stream_t *S_CodecOpenStream(const char *filename)$/;"	f
S_CodecReadStream	src/client/snd_codec.c	/^int S_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)$/;"	f
S_CodecRegister	src/client/snd_codec.c	/^void S_CodecRegister(snd_codec_t *codec)$/;"	f
S_CodecShutdown	src/client/snd_codec.c	/^void S_CodecShutdown()$/;"	f
S_CodecUtilClose	src/client/snd_codec.c	/^void S_CodecUtilClose(snd_stream_t **stream)$/;"	f
S_CodecUtilOpen	src/client/snd_codec.c	/^snd_stream_t *S_CodecUtilOpen(const char *filename, snd_codec_t *codec)$/;"	f
S_DefaultSound	src/client/snd_dma.c	/^void S_DefaultSound( sfx_t *sfx ) {$/;"	f
S_DisableSounds	src/client/snd_main.c	/^void S_DisableSounds( void )$/;"	f
S_DisplayFreeMemory	src/client/snd_mem.c	/^void S_DisplayFreeMemory(void) {$/;"	f
S_EOB	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_EOF	src/tools/lcc/cpp/lex.c	/^	S_SELF=MAXSTATE, S_SELFB, S_EOF, S_NL, S_EOFSTR,$/;"	e	enum:state	file:
S_EOFCOM	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_EOFSTR	src/tools/lcc/cpp/lex.c	/^	S_SELF=MAXSTATE, S_SELFB, S_EOF, S_NL, S_EOFSTR,$/;"	e	enum:state	file:
S_FindName	src/client/snd_dma.c	/^static sfx_t *S_FindName( const char *name ) {$/;"	f	file:
S_FindRIFFChunk	src/client/snd_codec_wav.c	/^static int S_FindRIFFChunk( fileHandle_t f, char *chunk ) {$/;"	f	file:
S_FreeOldestSound	src/client/snd_dma.c	/^void S_FreeOldestSound( void ) {$/;"	f
S_GetSoundtime	src/client/snd_dma.c	/^void S_GetSoundtime(void)$/;"	f
S_HashSFXName	src/client/snd_dma.c	/^static long S_HashSFXName(const char *name) {$/;"	f	file:
S_Init	src/client/snd_main.c	/^void S_Init( void )$/;"	f
S_LoadSound	src/client/snd_mem.c	/^qboolean S_LoadSound( sfx_t *sfx )$/;"	f
S_Malloc	src/qcommon/common.c	/^void *S_Malloc( int size ) {$/;"	f
S_Malloc	src/qcommon/qcommon.h	910;"	d
S_MallocDebug	src/qcommon/common.c	/^void *S_MallocDebug( int size, char *label, char *file, int line ) {$/;"	f
S_MasterGain	src/client/snd_main.c	/^void S_MasterGain( float gain )$/;"	f
S_Music_f	src/client/snd_main.c	/^void S_Music_f( void ) {$/;"	f
S_NAME	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_NL	src/tools/lcc/cpp/lex.c	/^	S_SELF=MAXSTATE, S_SELFB, S_EOF, S_NL, S_EOFSTR,$/;"	e	enum:state	file:
S_OGG_Callback_close	src/client/snd_codec_ogg.c	/^int S_OGG_Callback_close(void *datasource)$/;"	f
S_OGG_Callback_read	src/client/snd_codec_ogg.c	/^size_t S_OGG_Callback_read(void *ptr, size_t size, size_t nmemb, void *datasource)$/;"	f
S_OGG_Callback_seek	src/client/snd_codec_ogg.c	/^int S_OGG_Callback_seek(void *datasource, ogg_int64_t offset, int whence)$/;"	f
S_OGG_Callback_tell	src/client/snd_codec_ogg.c	/^long S_OGG_Callback_tell(void *datasource)$/;"	f
S_OGG_Callbacks	src/client/snd_codec_ogg.c	/^const ov_callbacks S_OGG_Callbacks =$/;"	v
S_OGG_CodecCloseStream	src/client/snd_codec_ogg.c	/^void S_OGG_CodecCloseStream(snd_stream_t *stream)$/;"	f
S_OGG_CodecLoad	src/client/snd_codec_ogg.c	/^void *S_OGG_CodecLoad(const char *filename, snd_info_t *info)$/;"	f
S_OGG_CodecOpenStream	src/client/snd_codec_ogg.c	/^snd_stream_t *S_OGG_CodecOpenStream(const char *filename)$/;"	f
S_OGG_CodecReadStream	src/client/snd_codec_ogg.c	/^int S_OGG_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)$/;"	f
S_OggOpus_Callback_close	src/client/snd_codec_opus.c	/^int S_OggOpus_Callback_close(void *datasource)$/;"	f
S_OggOpus_Callback_read	src/client/snd_codec_opus.c	/^int S_OggOpus_Callback_read(void *datasource, unsigned char *ptr, int size )$/;"	f
S_OggOpus_Callback_seek	src/client/snd_codec_opus.c	/^int S_OggOpus_Callback_seek(void *datasource, opus_int64 offset, int whence)$/;"	f
S_OggOpus_Callback_tell	src/client/snd_codec_opus.c	/^opus_int64 S_OggOpus_Callback_tell(void *datasource)$/;"	f
S_OggOpus_Callbacks	src/client/snd_codec_opus.c	/^const OpusFileCallbacks S_OggOpus_Callbacks =$/;"	v
S_OggOpus_CodecCloseStream	src/client/snd_codec_opus.c	/^void S_OggOpus_CodecCloseStream(snd_stream_t *stream)$/;"	f
S_OggOpus_CodecLoad	src/client/snd_codec_opus.c	/^void *S_OggOpus_CodecLoad(const char *filename, snd_info_t *info)$/;"	f
S_OggOpus_CodecOpenStream	src/client/snd_codec_opus.c	/^snd_stream_t *S_OggOpus_CodecOpenStream(const char *filename)$/;"	f
S_OggOpus_CodecReadStream	src/client/snd_codec_opus.c	/^int S_OggOpus_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)$/;"	f
S_OpenBackgroundStream	src/client/snd_dma.c	/^static void S_OpenBackgroundStream( const char *filename ) {$/;"	f	file:
S_PaintChannelFrom16	src/client/snd_mix.c	/^static void S_PaintChannelFrom16( channel_t *ch, const sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {$/;"	f	file:
S_PaintChannelFrom16_altivec	src/client/snd_mix.c	/^static void S_PaintChannelFrom16_altivec( channel_t *ch, const sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {$/;"	f	file:
S_PaintChannelFrom16_scalar	src/client/snd_mix.c	/^static void S_PaintChannelFrom16_scalar( channel_t *ch, const sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {$/;"	f	file:
S_PaintChannelFromADPCM	src/client/snd_mix.c	/^void S_PaintChannelFromADPCM( channel_t *ch, sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {$/;"	f
S_PaintChannelFromMuLaw	src/client/snd_mix.c	/^void S_PaintChannelFromMuLaw( channel_t *ch, sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {$/;"	f
S_PaintChannelFromWavelet	src/client/snd_mix.c	/^void S_PaintChannelFromWavelet( channel_t *ch, sfx_t *sc, int count, int sampleOffset, int bufferOffset ) {$/;"	f
S_PaintChannels	src/client/snd_mix.c	/^void S_PaintChannels( int endtime ) {$/;"	f
S_Play_f	src/client/snd_main.c	/^void S_Play_f( void ) {$/;"	f
S_RawSamples	src/client/snd_main.c	/^void S_RawSamples (int stream, int samples, int rate, int width, int channels,$/;"	f
S_ReadChunkInfo	src/client/snd_codec_wav.c	/^static int S_ReadChunkInfo(fileHandle_t f, char *name)$/;"	f	file:
S_ReadRIFFHeader	src/client/snd_codec_wav.c	/^static qboolean S_ReadRIFFHeader(fileHandle_t file, snd_info_t *info)$/;"	f	file:
S_RegisterSound	src/client/snd_main.c	/^sfxHandle_t	S_RegisterSound( const char *sample, qboolean compressed )$/;"	f
S_RegisterSound	src/null/null_snddma.c	/^sfxHandle_t S_RegisterSound( const char *name, qboolean compressed ) $/;"	f
S_Respatialize	src/client/snd_main.c	/^void S_Respatialize( int entityNum, const vec3_t origin,$/;"	f
S_SELF	src/tools/lcc/cpp/lex.c	/^	S_SELF=MAXSTATE, S_SELFB, S_EOF, S_NL, S_EOFSTR,$/;"	e	enum:state	file:
S_SELFB	src/tools/lcc/cpp/lex.c	/^	S_SELF=MAXSTATE, S_SELFB, S_EOF, S_NL, S_EOFSTR,$/;"	e	enum:state	file:
S_STNL	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_ScanChannelStarts	src/client/snd_dma.c	/^qboolean S_ScanChannelStarts( void ) {$/;"	f
S_Shutdown	src/client/snd_main.c	/^void S_Shutdown( void )$/;"	f
S_SoundDuration	src/client/snd_main.c	/^int S_SoundDuration( sfxHandle_t handle )$/;"	f
S_SoundInfo	src/client/snd_main.c	/^void S_SoundInfo( void )$/;"	f
S_SoundList	src/client/snd_main.c	/^void S_SoundList( void )$/;"	f
S_SpatializeOrigin	src/client/snd_dma.c	/^void S_SpatializeOrigin (vec3_t origin, int master_vol, int *left_vol, int *right_vol)$/;"	f
S_StartBackgroundTrack	src/client/snd_main.c	/^void S_StartBackgroundTrack( const char *intro, const char *loop )$/;"	f
S_StartCapture	src/client/snd_main.c	/^void S_StartCapture( void )$/;"	f
S_StartLocalSound	src/client/snd_main.c	/^void S_StartLocalSound( sfxHandle_t sfx, int channelNum )$/;"	f
S_StartLocalSound	src/null/null_snddma.c	/^void S_StartLocalSound( sfxHandle_t sfxHandle, int channelNum ) {$/;"	f
S_StartSound	src/client/snd_main.c	/^void S_StartSound( vec3_t origin, int entnum, int entchannel, sfxHandle_t sfx )$/;"	f
S_StopAllSounds	src/client/snd_main.c	/^void S_StopAllSounds( void )$/;"	f
S_StopBackgroundTrack	src/client/snd_main.c	/^void S_StopBackgroundTrack( void )$/;"	f
S_StopCapture	src/client/snd_main.c	/^void S_StopCapture( void )$/;"	f
S_StopLoopingSound	src/client/snd_main.c	/^void S_StopLoopingSound( int entityNum )$/;"	f
S_StopMusic_f	src/client/snd_main.c	/^void S_StopMusic_f( void )$/;"	f
S_TransferPaintBuffer	src/client/snd_mix.c	/^void S_TransferPaintBuffer(int endtime)$/;"	f
S_TransferStereo16	src/client/snd_mix.c	/^void S_TransferStereo16 (unsigned long *pbuf, int endtime)$/;"	f
S_Update	src/client/snd_main.c	/^void S_Update( void )$/;"	f
S_UpdateBackgroundTrack	src/client/snd_dma.c	/^void S_UpdateBackgroundTrack( void ) {$/;"	f
S_UpdateEntityPosition	src/client/snd_main.c	/^void S_UpdateEntityPosition( int entityNum, const vec3_t origin )$/;"	f
S_Update_	src/client/snd_dma.c	/^void S_Update_(void) {$/;"	f
S_ValidSoundInterface	src/client/snd_main.c	/^static qboolean S_ValidSoundInterface( soundInterface_t *si )$/;"	f	file:
S_WAV_CodecCloseStream	src/client/snd_codec_wav.c	/^void S_WAV_CodecCloseStream(snd_stream_t *stream)$/;"	f
S_WAV_CodecLoad	src/client/snd_codec_wav.c	/^void *S_WAV_CodecLoad(const char *filename, snd_info_t *info)$/;"	f
S_WAV_CodecOpenStream	src/client/snd_codec_wav.c	/^snd_stream_t *S_WAV_CodecOpenStream(const char *filename)$/;"	f
S_WAV_CodecReadStream	src/client/snd_codec_wav.c	/^int S_WAV_CodecReadStream(snd_stream_t *stream, int bytes, void *buffer)$/;"	f
S_WS	src/tools/lcc/cpp/lex.c	/^	S_STNL, S_COMNL, S_EOFCOM, S_COMMENT, S_EOB, S_WS, S_NAME$/;"	e	enum:state	file:
S_WriteLinearBlastStereo16	src/client/snd_mix.c	/^void S_WriteLinearBlastStereo16 (void)$/;"	f
S_memoryLoad	src/client/snd_dma.c	/^void S_memoryLoad(sfx_t	*sfx) {$/;"	f
SafeFS_Write	src/client/cl_avi.c	/^static ID_INLINE void SafeFS_Write( const void *buffer, int len, fileHandle_t f )$/;"	f	file:
SafeOpenRead	src/tools/asm/cmdlib.c	/^FILE *SafeOpenRead (const char *filename)$/;"	f
SafeOpenWrite	src/tools/asm/cmdlib.c	/^FILE *SafeOpenWrite (const char *filename)$/;"	f
SafeRead	src/tools/asm/cmdlib.c	/^void SafeRead (FILE *f, void *buffer, int count)$/;"	f
SafeWrite	src/tools/asm/cmdlib.c	/^void SafeWrite (FILE *f, const void *buffer, int count)$/;"	f
SaveFile	src/tools/asm/cmdlib.c	/^void    SaveFile (const char *filename, const void *buffer, int count)$/;"	f
Savepoint	src/server/sqlite3.c	/^struct Savepoint {$/;"	s	file:
Savepoint	src/server/sqlite3.c	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint	file:
ScanAndLoadShaderFiles	src/renderergl1/tr_shader.c	/^static void ScanAndLoadShaderFiles( void )$/;"	f	file:
ScanAndLoadShaderFiles	src/renderergl2/tr_shader.c	/^static void ScanAndLoadShaderFiles( void )$/;"	f	file:
ScanStatus	src/server/sqlite3.c	/^struct ScanStatus {$/;"	s	file:
ScanStatus	src/server/sqlite3.c	/^typedef struct ScanStatus ScanStatus;$/;"	t	typeref:struct:ScanStatus	file:
Schema	src/server/sqlite3.c	/^struct Schema {$/;"	s	file:
Schema	src/server/sqlite3.c	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema	file:
ScoreIsTied	src/game/g_main.c	/^qboolean ScoreIsTied( void )$/;"	f
ScoreboardMessage	src/game/g_cmds.c	/^void ScoreboardMessage( gentity_t *ent )$/;"	f
ScratchFreeslot	src/server/sqlite3.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	src/server/sqlite3.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
Script_Close	src/ui/ui_shared.c	/^void Script_Close( itemDef_t *item, char **args )$/;"	f
Script_ConditionalOpen	src/ui/ui_shared.c	/^void Script_ConditionalOpen( itemDef_t *item, char **args )$/;"	f
Script_Exec	src/ui/ui_shared.c	/^void Script_Exec( itemDef_t *item, char **args )$/;"	f
Script_FadeIn	src/ui/ui_shared.c	/^void Script_FadeIn( itemDef_t *item, char **args )$/;"	f
Script_FadeOut	src/ui/ui_shared.c	/^void Script_FadeOut( itemDef_t *item, char **args )$/;"	f
Script_Hide	src/ui/ui_shared.c	/^void Script_Hide( itemDef_t *item, char **args )$/;"	f
Script_Open	src/ui/ui_shared.c	/^void Script_Open( itemDef_t *item, char **args )$/;"	f
Script_Orbit	src/ui/ui_shared.c	/^void Script_Orbit( itemDef_t *item, char **args )$/;"	f
Script_Play	src/ui/ui_shared.c	/^void Script_Play( itemDef_t *item, char **args )$/;"	f
Script_Reset	src/ui/ui_shared.c	/^void Script_Reset( itemDef_t *item, char **args )$/;"	f
Script_SetAsset	src/ui/ui_shared.c	/^void Script_SetAsset( itemDef_t *item, char **args )$/;"	f
Script_SetBackground	src/ui/ui_shared.c	/^void Script_SetBackground( itemDef_t *item, char **args )$/;"	f
Script_SetColor	src/ui/ui_shared.c	/^void Script_SetColor( itemDef_t *item, char **args )$/;"	f
Script_SetCvar	src/ui/ui_shared.c	/^void Script_SetCvar( itemDef_t *item, char **args )$/;"	f
Script_SetFocus	src/ui/ui_shared.c	/^void Script_SetFocus( itemDef_t *item, char **args )$/;"	f
Script_SetItemColor	src/ui/ui_shared.c	/^void Script_SetItemColor( itemDef_t *item, char **args )$/;"	f
Script_SetPlayerHead	src/ui/ui_shared.c	/^void Script_SetPlayerHead( itemDef_t *item, char **args )$/;"	f
Script_SetPlayerModel	src/ui/ui_shared.c	/^void Script_SetPlayerModel( itemDef_t *item, char **args )$/;"	f
Script_Show	src/ui/ui_shared.c	/^void Script_Show( itemDef_t *item, char **args )$/;"	f
Script_Transition	src/ui/ui_shared.c	/^void Script_Transition( itemDef_t *item, char **args )$/;"	f
Script_playLooped	src/ui/ui_shared.c	/^void Script_playLooped( itemDef_t *item, char **args )$/;"	f
Scroll_ListBox_AutoFunc	src/ui/ui_shared.c	/^static void Scroll_ListBox_AutoFunc( void *p )$/;"	f	file:
Scroll_ListBox_ThumbFunc	src/ui/ui_shared.c	/^static void Scroll_ListBox_ThumbFunc( void *p )$/;"	f	file:
Scroll_Slider_ThumbFunc	src/ui/ui_shared.c	/^static void Scroll_Slider_ThumbFunc( void *p )$/;"	f	file:
SearchAddrInfo	src/qcommon/net_ip.c	/^static struct addrinfo *SearchAddrInfo(struct addrinfo *hints, sa_family_t family)$/;"	f	file:
SearchInfostring	src/master/messages.c	/^static char* SearchInfostring (const char* infostring, const char* key)$/;"	f	file:
SecInit	src/master/master.c	/^static qboolean SecInit (void)$/;"	f	file:
SecureInit	src/master/master.c	/^static qboolean SecureInit (void)$/;"	f	file:
SegmentNode	src/server/sqlite3.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	src/server/sqlite3.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentWriter	src/server/sqlite3.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	src/server/sqlite3.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
Select	src/server/sqlite3.c	/^struct Select {$/;"	s	file:
Select	src/server/sqlite3.c	/^typedef struct Select Select;$/;"	t	typeref:struct:Select	file:
SelectDest	src/server/sqlite3.c	/^struct SelectDest {$/;"	s	file:
SelectDest	src/server/sqlite3.c	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest	file:
SendGetInfo	src/master/messages.c	/^static void SendGetInfo (server_t* server)$/;"	f	file:
SendPendingPredictableEvents	src/game/g_active.c	/^void SendPendingPredictableEvents( playerState_t *ps )$/;"	f
SendScoreboardMessageToAllClients	src/game/g_main.c	/^void SendScoreboardMessageToAllClients( void )$/;"	f
SetClipRegion	src/renderercommon/tr_public.h	/^	void	(*SetClipRegion)( const float *region );$/;"	m	struct:__anon108
SetColor	src/renderercommon/tr_public.h	/^	void	(*SetColor)( const float *rgba );	\/\/ NULL = 1,1,1,1$/;"	m	struct:__anon108
SetMoverState	src/game/g_mover.c	/^void SetMoverState( gentity_t *ent, moverState_t moverState, int time )$/;"	f
SetPlaneSignbits	src/qcommon/cm_load.c	/^void SetPlaneSignbits (cplane_t *out) {$/;"	f
SetPlaneSignbits	src/qcommon/q_math.c	/^void SetPlaneSignbits (cplane_t *out) {$/;"	f
SetQdirFromPath	src/tools/asm/cmdlib.c	/^void SetQdirFromPath( const char *path )$/;"	f
SetViewportAndScissor	src/renderergl1/tr_backend.c	/^static void SetViewportAndScissor( void ) {$/;"	f	file:
SetViewportAndScissor	src/renderergl2/tr_backend.c	/^static void SetViewportAndScissor( void ) {$/;"	f	file:
SetWorldVisData	src/renderercommon/tr_public.h	/^	void	(*SetWorldVisData)( const byte *vis );$/;"	m	struct:__anon108
Sflag	src/tools/lcc/etc/lcc.c	/^static int Sflag = 1;		\/* -S specified *\/ \/\/for Q3 we always generate asm$/;"	v	file:
ShaderForShaderNum	src/renderergl1/tr_bsp.c	/^static shader_t *ShaderForShaderNum( int shaderNum, int lightmapNum ) {$/;"	f	file:
ShaderForShaderNum	src/renderergl2/tr_bsp.c	/^static shader_t *ShaderForShaderNum( int shaderNum, int lightmapNum ) {$/;"	f	file:
ShaderRequiresCPUDeforms	src/renderergl2/tr_local.h	/^static ID_INLINE qboolean ShaderRequiresCPUDeforms(const shader_t * shader)$/;"	f
ShmRegion	src/server/sqlite3.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
ShortNoSwap	src/qcommon/q_shared.c	/^short	ShortNoSwap (short l)$/;"	f
ShortSwap	src/qcommon/q_shared.c	/^short   ShortSwap (short l)$/;"	f
ShortSwap	src/tools/asm/cmdlib.c	/^short   ShortSwap (short l)$/;"	f
ShotgunPattern	src/game/g_weapon.c	/^void ShotgunPattern( vec3_t origin, vec3_t origin2, int seed, gentity_t *ent )$/;"	f
ShowHelp	src/tools/asm/q3asm.c	/^static void ShowHelp( char *argv0 ) {$/;"	f	file:
Shutdown	src/client/snd_local.h	/^	void (*Shutdown)(void);$/;"	m	struct:__anon96
Shutdown	src/renderercommon/tr_public.h	/^	void	(*Shutdown)( qboolean destroyWindow );$/;"	m	struct:__anon108
SimulateDiskfullError	src/server/sqlite3.c	21521;"	d	file:
SimulateDiskfullError	src/server/sqlite3.c	21535;"	d	file:
SimulateDiskfullError	src/server/sqlite3.c	27762;"	d	file:
SimulateDiskfullError	src/server/sqlite3.c	27776;"	d	file:
SimulateDiskfullError	src/server/sqlite3.c	35282;"	d	file:
SimulateDiskfullError	src/server/sqlite3.c	35296;"	d	file:
SimulateIOError	src/server/sqlite3.c	21512;"	d	file:
SimulateIOError	src/server/sqlite3.c	21534;"	d	file:
SimulateIOError	src/server/sqlite3.c	27753;"	d	file:
SimulateIOError	src/server/sqlite3.c	27775;"	d	file:
SimulateIOError	src/server/sqlite3.c	35273;"	d	file:
SimulateIOError	src/server/sqlite3.c	35295;"	d	file:
SimulateIOErrorBenign	src/server/sqlite3.c	21511;"	d	file:
SimulateIOErrorBenign	src/server/sqlite3.c	21533;"	d	file:
SimulateIOErrorBenign	src/server/sqlite3.c	27752;"	d	file:
SimulateIOErrorBenign	src/server/sqlite3.c	27774;"	d	file:
SimulateIOErrorBenign	src/server/sqlite3.c	35272;"	d	file:
SimulateIOErrorBenign	src/server/sqlite3.c	35294;"	d	file:
SizeofArray	src/server/sqlite3.c	138187;"	d	file:
SkipBracedSection	src/qcommon/q_shared.c	/^qboolean SkipBracedSection (char **program, int depth) {$/;"	f
SkipColorCodes	src/ui/ui_shared.c	/^static void SkipColorCodes( const char **text, char *lastColor )$/;"	f	file:
SkipRestOfLine	src/qcommon/q_shared.c	/^void SkipRestOfLine ( char **data ) {$/;"	f
SkipWhiteSpace	src/ui/ui_shared.c	/^static void SkipWhiteSpace( const char **text, char *lastColor )$/;"	f	file:
SkipWhitespace	src/qcommon/q_shared.c	/^char *SkipWhitespace( char *data, qboolean *hasNewLines ) {$/;"	f
SnapVector	src/qcommon/q_shared.h	604;"	d
SnapVectorNormal	src/game/g_weapon.c	/^void SnapVectorNormal( vec3_t v, vec3_t normal )$/;"	f
SnapVectorTowards	src/game/g_weapon.c	/^void SnapVectorTowards( vec3_t v, vec3_t to )$/;"	f
SnippetFragment	src/server/sqlite3.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	src/server/sqlite3.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetIter	src/server/sqlite3.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	src/server/sqlite3.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetPhrase	src/server/sqlite3.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	src/server/sqlite3.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SockadrToNetadr	src/qcommon/net_ip.c	/^static void SockadrToNetadr( struct sockaddr *s, netadr_t *a ) {$/;"	f	file:
SortByDimension	src/server/sqlite3.c	/^static void SortByDimension($/;"	f	file:
SortByDistance	src/server/sqlite3.c	/^static void SortByDistance($/;"	f	file:
SortCtx	src/server/sqlite3.c	/^struct SortCtx {$/;"	s	file:
SortCtx	src/server/sqlite3.c	/^typedef struct SortCtx SortCtx;$/;"	t	typeref:struct:SortCtx	file:
SortFlags	src/game/g_admin.c	/^static int SortFlags( const void *pa, const void *pb )$/;"	f	file:
SortNewShader	src/renderergl1/tr_shader.c	/^static void SortNewShader( void ) {$/;"	f	file:
SortNewShader	src/renderergl2/tr_shader.c	/^static void SortNewShader( void ) {$/;"	f	file:
SortPlaypoolEntries	src/game/g_playmap.c	/^static int SortPlaypoolEntries( const void *a, const void *b )$/;"	f	file:
SortRanks	src/game/g_main.c	/^int QDECL SortRanks( const void *a, const void *b )$/;"	f
SortScore	src/cgame/cg_draw.c	/^static int QDECL SortScore( const void *a, const void *b )$/;"	f	file:
SortStrings	src/game/g_cmds.c	/^static int SortStrings( const void *a, const void *b )$/;"	f	file:
SortSubtask	src/server/sqlite3.c	/^struct SortSubtask {$/;"	s	file:
SortSubtask	src/server/sqlite3.c	/^typedef struct SortSubtask SortSubtask;     \/* A sub-task in the sort process *\/$/;"	t	typeref:struct:SortSubtask	file:
SortWeaponClass	src/cgame/cg_draw.c	/^static int QDECL SortWeaponClass( const void *a, const void *b )$/;"	f	file:
SorterCompare	src/server/sqlite3.c	/^typedef int (*SorterCompare)(SortSubtask*,int*,const void*,int,const void*,int);$/;"	t	file:
SorterFile	src/server/sqlite3.c	/^struct SorterFile {$/;"	s	file:
SorterFile	src/server/sqlite3.c	/^typedef struct SorterFile SorterFile;       \/* Temporary file object wrapper *\/$/;"	t	typeref:struct:SorterFile	file:
SorterList	src/server/sqlite3.c	/^struct SorterList {$/;"	s	file:
SorterList	src/server/sqlite3.c	/^typedef struct SorterList SorterList;       \/* In-memory list of records *\/$/;"	t	typeref:struct:SorterList	file:
SorterRecord	src/server/sqlite3.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	src/server/sqlite3.c	/^typedef struct SorterRecord SorterRecord;   \/* A record being sorted *\/$/;"	t	typeref:struct:SorterRecord	file:
SoundDuration	src/client/snd_local.h	/^	int  (*SoundDuration)( sfxHandle_t handle );$/;"	m	struct:__anon96
SoundInfo	src/client/snd_local.h	/^	void (*SoundInfo)( void );$/;"	m	struct:__anon96
SoundList	src/client/snd_local.h	/^	void (*SoundList)( void );$/;"	m	struct:__anon96
Source	src/tools/lcc/cpp/cpp.h	/^} Source;$/;"	t	typeref:struct:source
SpawnCorpse	src/game/g_client.c	/^static void SpawnCorpse( gentity_t *ent )$/;"	f	file:
SpawnPlatTrigger	src/game/g_mover.c	/^void SpawnPlatTrigger( gentity_t *ent )$/;"	f
SpectatorClientEndFrame	src/game/g_active.c	/^void SpectatorClientEndFrame( gentity_t *ent )$/;"	f
SpectatorThink	src/game/g_active.c	/^void SpectatorThink( gentity_t *ent, usercmd_t *ucmd )$/;"	f
SpheresIntersect	src/renderergl2/tr_extramath.c	/^qboolean SpheresIntersect(vec3_t origin1, float radius1, vec3_t origin2, float radius2)$/;"	f
SplitNode	src/server/sqlite3.c	/^static int SplitNode($/;"	f	file:
SpotWouldTelefrag	src/game/g_client.c	/^qboolean SpotWouldTelefrag( gentity_t *spot )$/;"	f
Sqlite3Config	src/server/sqlite3.c	/^struct Sqlite3Config {$/;"	s	file:
Square	src/qcommon/q_shared.h	1479;"	d
SquareRootFloat	src/qcommon/cm_trace.c	/^float SquareRootFloat(float number) {$/;"	f
SrcCount	src/server/sqlite3.c	/^struct SrcCount {$/;"	s	file:
SrcList	src/server/sqlite3.c	/^struct SrcList {$/;"	s	file:
SrcList	src/server/sqlite3.c	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList	file:
SrcList_item	src/server/sqlite3.c	/^  struct SrcList_item {$/;"	s	struct:SrcList	file:
Start	src/tools/lcc/src/c.h	/^	       Label,    Start,    Gen,   Jump,    Switch$/;"	e	enum:code::__anon290
StartBackgroundTrack	src/client/snd_local.h	/^	void (*StartBackgroundTrack)( const char *intro, const char *loop );$/;"	m	struct:__anon96
StartCapture	src/client/snd_local.h	/^	void (*StartCapture)( void );$/;"	m	struct:__anon96
StartLocalSound	src/client/snd_local.h	/^	void (*StartLocalSound)( sfxHandle_t sfx, int channelNum );$/;"	m	struct:__anon96
StartSound	src/client/snd_local.h	/^	void (*StartSound)( vec3_t origin, int entnum, int entchannel, sfxHandle_t sfx );$/;"	m	struct:__anon96
Start_Train	src/game/g_mover.c	/^void Start_Train( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Stat4Accum	src/server/sqlite3.c	/^struct Stat4Accum {$/;"	s	file:
Stat4Accum	src/server/sqlite3.c	/^typedef struct Stat4Accum Stat4Accum;$/;"	t	typeref:struct:Stat4Accum	file:
Stat4Sample	src/server/sqlite3.c	/^struct Stat4Sample {$/;"	s	file:
Stat4Sample	src/server/sqlite3.c	/^typedef struct Stat4Sample Stat4Sample;$/;"	t	typeref:struct:Stat4Sample	file:
StatCell	src/server/sqlite3.c	/^struct StatCell {$/;"	s	file:
StatCell	src/server/sqlite3.c	/^typedef struct StatCell StatCell;$/;"	t	typeref:struct:StatCell	file:
StatCursor	src/server/sqlite3.c	/^struct StatCursor {$/;"	s	file:
StatCursor	src/server/sqlite3.c	/^typedef struct StatCursor StatCursor;$/;"	t	typeref:struct:StatCursor	file:
StatPage	src/server/sqlite3.c	/^struct StatPage {$/;"	s	file:
StatPage	src/server/sqlite3.c	/^typedef struct StatPage StatPage;$/;"	t	typeref:struct:StatPage	file:
StatTable	src/server/sqlite3.c	/^struct StatTable {$/;"	s	file:
StatTable	src/server/sqlite3.c	/^typedef struct StatTable StatTable;$/;"	t	typeref:struct:StatTable	file:
StopAllSounds	src/client/snd_local.h	/^	void (*StopAllSounds)( void );$/;"	m	struct:__anon96
StopBackgroundTrack	src/client/snd_local.h	/^	void (*StopBackgroundTrack)( void );$/;"	m	struct:__anon96
StopCapture	src/client/snd_local.h	/^	void (*StopCapture)( void );$/;"	m	struct:__anon96
StopLoopingSound	src/client/snd_local.h	/^	void (*StopLoopingSound)(int entityNum );$/;"	m	struct:__anon96
Stop_Train	src/game/g_mover.c	/^void Stop_Train( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
StrAccum	src/server/sqlite3.c	/^struct StrAccum {$/;"	s	file:
StrAccum	src/server/sqlite3.c	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum	file:
StrBuffer	src/server/sqlite3.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	src/server/sqlite3.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
String_Alloc	src/ui/ui_shared.c	/^const char *String_Alloc( const char *p )$/;"	f
String_Init	src/ui/ui_shared.c	/^void String_Init( void )$/;"	f
String_Parse	src/ui/ui_shared.c	/^qboolean String_Parse( char **p, const char **out )$/;"	f
String_Report	src/ui/ui_shared.c	/^void String_Report( void )$/;"	f
Stringify	src/server/sqlite3.c	74533;"	d	file:
StripExtension	src/tools/asm/cmdlib.c	/^void    StripExtension (char *path)$/;"	f
StripFilename	src/tools/asm/cmdlib.c	/^void    StripFilename (char *path)$/;"	f
SubProgram	src/server/sqlite3.c	/^struct SubProgram {$/;"	s	file:
SubProgram	src/server/sqlite3.c	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram	file:
SumCtx	src/server/sqlite3.c	/^struct SumCtx {$/;"	s	file:
SumCtx	src/server/sqlite3.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
SurfIsOffscreen	src/renderergl1/tr_main.c	/^static qboolean SurfIsOffscreen( const drawSurf_t *drawSurf, vec4_t clipDest[128] ) {$/;"	f	file:
SurfIsOffscreen	src/renderergl2/tr_main.c	/^static qboolean SurfIsOffscreen( const drawSurf_t *drawSurf, vec4_t clipDest[128] ) {$/;"	f	file:
Sv_AddAddressMapping	src/master/servers.c	/^qboolean Sv_AddAddressMapping (const char* mapping)$/;"	f
Sv_AddressHash	src/master/servers.c	/^static unsigned int Sv_AddressHash (const struct sockaddr_in* address)$/;"	f	file:
Sv_GetAddrmap	src/master/servers.c	/^static const addrmap_t* Sv_GetAddrmap (const struct sockaddr_in* addr)$/;"	f	file:
Sv_GetByAddr	src/master/servers.c	/^server_t* Sv_GetByAddr (const struct sockaddr_in* address, qboolean add_it)$/;"	f
Sv_GetFirst	src/master/servers.c	/^server_t* Sv_GetFirst (void)$/;"	f
Sv_GetNext	src/master/servers.c	/^server_t* Sv_GetNext (void)$/;"	f
Sv_Init	src/master/servers.c	/^qboolean Sv_Init (void)$/;"	f
Sv_InsertAddrmapIntoList	src/master/servers.c	/^static void Sv_InsertAddrmapIntoList (addrmap_t* new_map)$/;"	f	file:
Sv_IsActive	src/master/servers.c	/^static qboolean Sv_IsActive (server_t* server)$/;"	f	file:
Sv_RemoveAndGetNextPtr	src/master/servers.c	/^static server_t* Sv_RemoveAndGetNextPtr (server_t* sv, server_t** prev)$/;"	f	file:
Sv_ResolveAddr	src/master/servers.c	/^static qboolean Sv_ResolveAddr (const char* name, struct sockaddr_in* addr)$/;"	f	file:
Sv_ResolveAddressMappings	src/master/servers.c	/^qboolean Sv_ResolveAddressMappings (void)$/;"	f
Sv_ResolveAddrmap	src/master/servers.c	/^static qboolean Sv_ResolveAddrmap (addrmap_t* addrmap)$/;"	f	file:
Sv_SetHashSize	src/master/servers.c	/^qboolean Sv_SetHashSize (unsigned int size)$/;"	f
Sv_SetMaxNbServers	src/master/servers.c	/^qboolean Sv_SetMaxNbServers (unsigned int nb)$/;"	f
Svcmd_AdmitDefeat_f	src/game/g_svcmds.c	/^static void Svcmd_AdmitDefeat_f( void )$/;"	f	file:
Svcmd_CenterPrint_f	src/game/g_svcmds.c	/^static void Svcmd_CenterPrint_f( void )$/;"	f	file:
Svcmd_DumpUser_f	src/game/g_svcmds.c	/^static void Svcmd_DumpUser_f( void )$/;"	f	file:
Svcmd_EjectClient_f	src/game/g_svcmds.c	/^static void Svcmd_EjectClient_f( void )$/;"	f	file:
Svcmd_EntityList_f	src/game/g_svcmds.c	/^void  Svcmd_EntityList_f( void )$/;"	f
Svcmd_Evacuation_f	src/game/g_svcmds.c	/^static void Svcmd_Evacuation_f( void )$/;"	f	file:
Svcmd_Extend_f	src/game/g_svcmds.c	/^static void Svcmd_Extend_f( void )$/;"	f	file:
Svcmd_ForceTeam_f	src/game/g_svcmds.c	/^static void Svcmd_ForceTeam_f( void )$/;"	f	file:
Svcmd_G_AdvanceMapRotation_f	src/game/g_svcmds.c	/^static void Svcmd_G_AdvanceMapRotation_f( void )$/;"	f	file:
Svcmd_LayoutLoad_f	src/game/g_svcmds.c	/^static void Svcmd_LayoutLoad_f( void )$/;"	f	file:
Svcmd_LayoutSave_f	src/game/g_svcmds.c	/^static void Svcmd_LayoutSave_f( void )$/;"	f	file:
Svcmd_ListMapsWrapper	src/game/g_svcmds.c	/^static void Svcmd_ListMapsWrapper( void )$/;"	f	file:
Svcmd_MapRotation_f	src/game/g_svcmds.c	/^static void Svcmd_MapRotation_f( void )$/;"	f	file:
Svcmd_MessageWrapper	src/game/g_svcmds.c	/^static void Svcmd_MessageWrapper( void )$/;"	f	file:
Svcmd_Pr_f	src/game/g_svcmds.c	/^static void Svcmd_Pr_f( void )$/;"	f	file:
Svcmd_PrintQueue_f	src/game/g_svcmds.c	/^static void Svcmd_PrintQueue_f( void )$/;"	f	file:
Svcmd_Status_f	src/game/g_svcmds.c	/^static void Svcmd_Status_f( void )$/;"	f	file:
Svcmd_SuddenDeath_f	src/game/g_svcmds.c	/^static void Svcmd_SuddenDeath_f( void )$/;"	f	file:
Svcmd_TeamMessage_f	src/game/g_svcmds.c	/^static void Svcmd_TeamMessage_f( void )$/;"	f	file:
Svcmd_TeamWin_f	src/game/g_svcmds.c	/^static void Svcmd_TeamWin_f( void )$/;"	f	file:
Switch	src/tools/lcc/src/c.h	/^	       Label,    Start,    Gen,   Jump,    Switch$/;"	e	enum:code::__anon290
Swtch	src/tools/lcc/src/c.h	/^typedef struct swtch *Swtch;$/;"	t	typeref:struct:swtch
Symbol	src/tools/lcc/src/c.h	/^typedef struct symbol *Symbol;$/;"	t	typeref:struct:symbol
SysInit	src/master/master.c	/^static qboolean SysInit (void)$/;"	f	file:
Sys_AnsiColorPrint	src/sys/sys_main.c	/^void Sys_AnsiColorPrint( const char *msg )$/;"	f
Sys_AppendToExecBuffer	src/sys/sys_unix.c	/^static void Sys_AppendToExecBuffer( const char *text )$/;"	f	file:
Sys_Basename	src/sys/sys_unix.c	/^const char *Sys_Basename( char *path )$/;"	f
Sys_Basename	src/sys/sys_win32.c	/^const char *Sys_Basename( char *path )$/;"	f
Sys_BinaryPath	src/sys/sys_main.c	/^char *Sys_BinaryPath(void)$/;"	f
Sys_ClearExecBuffer	src/sys/sys_unix.c	/^static void Sys_ClearExecBuffer( void )$/;"	f	file:
Sys_ConcatenateFileLists	src/qcommon/files.c	/^static char** Sys_ConcatenateFileLists( char **list0, char **list1 )$/;"	f	file:
Sys_ConsoleInput	src/sys/sys_main.c	/^char *Sys_ConsoleInput(void)$/;"	f
Sys_CountFileList	src/qcommon/files.c	/^static unsigned int Sys_CountFileList(char **list)$/;"	f	file:
Sys_DefaultAppPath	src/sys/sys_main.c	/^char *Sys_DefaultAppPath(void)$/;"	f
Sys_DefaultHomePath	src/sys/sys_unix.c	/^char *Sys_DefaultHomePath(void)$/;"	f
Sys_DefaultHomePath	src/sys/sys_win32.c	/^char *Sys_DefaultHomePath( void )$/;"	f
Sys_DefaultInstallPath	src/sys/sys_main.c	/^char *Sys_DefaultInstallPath(void)$/;"	f
Sys_Dialog	src/sys/sys_unix.c	/^dialogResult_t Sys_Dialog( dialogType_t type, const char *message, const char *title )$/;"	f
Sys_Dialog	src/sys/sys_win32.c	/^dialogResult_t Sys_Dialog( dialogType_t type, const char *message, const char *title )$/;"	f
Sys_Dirname	src/sys/sys_unix.c	/^const char *Sys_Dirname( char *path )$/;"	f
Sys_Dirname	src/sys/sys_win32.c	/^const char *Sys_Dirname( char *path )$/;"	f
Sys_Error	src/null/null_main.c	/^void Sys_Error (char *error, ...) {$/;"	f
Sys_Error	src/sys/sys_main.c	/^void Sys_Error( const char *error, ... )$/;"	f
Sys_ErrorDialog	src/sys/sys_unix.c	/^void Sys_ErrorDialog( const char *error )$/;"	f
Sys_ErrorDialog	src/sys/sys_win32.c	/^void Sys_ErrorDialog( const char *error )$/;"	f
Sys_Exec	src/sys/sys_unix.c	/^static int Sys_Exec( void )$/;"	f	file:
Sys_Exit	src/sys/sys_main.c	/^static __attribute__ ((noreturn)) void Sys_Exit( int exitCode )$/;"	f	file:
Sys_FOpen	src/null/null_main.c	/^FILE	*Sys_FOpen(const char *ospath, const char *mode) {$/;"	f
Sys_FOpen	src/sys/sys_unix.c	/^FILE *Sys_FOpen( const char *ospath, const char *mode ) {$/;"	f
Sys_FOpen	src/sys/sys_win32.c	/^FILE *Sys_FOpen( const char *ospath, const char *mode ) {$/;"	f
Sys_FileTime	src/sys/sys_main.c	/^int Sys_FileTime( char *path )$/;"	f
Sys_FreeFileList	src/sys/sys_unix.c	/^void Sys_FreeFileList( char **list )$/;"	f
Sys_FreeFileList	src/sys/sys_win32.c	/^void Sys_FreeFileList( char **list )$/;"	f
Sys_GLimpInit	src/renderercommon/tr_public.h	/^	void	(*Sys_GLimpInit)( void );$/;"	m	struct:__anon109
Sys_GLimpInit	src/sys/sys_unix.c	/^void Sys_GLimpInit( void )$/;"	f
Sys_GLimpInit	src/sys/sys_win32.c	/^void Sys_GLimpInit( void )$/;"	f
Sys_GLimpSafeInit	src/renderercommon/tr_public.h	/^	void	(*Sys_GLimpSafeInit)( void );$/;"	m	struct:__anon109
Sys_GLimpSafeInit	src/sys/sys_unix.c	/^void Sys_GLimpSafeInit( void )$/;"	f
Sys_GLimpSafeInit	src/sys/sys_win32.c	/^void Sys_GLimpSafeInit( void )$/;"	f
Sys_GetClipboardData	src/null/null_main.c	/^char *Sys_GetClipboardData( void ) {$/;"	f
Sys_GetClipboardData	src/sys/sys_main.c	/^char *Sys_GetClipboardData(void)$/;"	f
Sys_GetProcessorFeatures	src/sys/sys_main.c	/^cpuFeatures_t Sys_GetProcessorFeatures( void )$/;"	f
Sys_In_Restart_f	src/sys/sys_main.c	/^void Sys_In_Restart_f( void )$/;"	f
Sys_Init	src/null/null_main.c	/^void	Sys_Init (void) {$/;"	f
Sys_Init	src/sys/sys_main.c	/^void Sys_Init(void)$/;"	f
Sys_IsLANAddress	src/qcommon/net_ip.c	/^qboolean Sys_IsLANAddress( netadr_t adr ) {$/;"	f
Sys_KdialogCommand	src/sys/sys_unix.c	/^static void Sys_KdialogCommand( dialogType_t type, const char *message, const char *title )$/;"	f	file:
Sys_LibraryError	src/sys/sys_loadlib.h	30;"	d
Sys_LibraryError	src/sys/sys_loadlib.h	36;"	d
Sys_LibraryError	src/sys/sys_loadlib.h	44;"	d
Sys_ListFiles	src/sys/sys_unix.c	/^char **Sys_ListFiles( const char *directory, const char *extension, char *filter, int *numfiles, qboolean wantsubs )$/;"	f
Sys_ListFiles	src/sys/sys_win32.c	/^char **Sys_ListFiles( const char *directory, const char *extension, char *filter, int *numfiles, qboolean wantsubs )$/;"	f
Sys_ListFilteredFiles	src/sys/sys_unix.c	/^void Sys_ListFilteredFiles( const char *basedir, char *subdirs, char *filter, char **list, int *numfiles )$/;"	f
Sys_ListFilteredFiles	src/sys/sys_win32.c	/^void Sys_ListFilteredFiles( const char *basedir, char *subdirs, char *filter, char **list, int *numfiles )$/;"	f
Sys_LoadDll	src/sys/sys_main.c	/^void *Sys_LoadDll(const char *name, qboolean useSystemLib)$/;"	f
Sys_LoadFunction	src/sys/sys_loadlib.h	29;"	d
Sys_LoadFunction	src/sys/sys_loadlib.h	35;"	d
Sys_LoadFunction	src/sys/sys_loadlib.h	43;"	d
Sys_LoadGameDll	src/sys/sys_main.c	/^void *Sys_LoadGameDll(const char *name,$/;"	f
Sys_LoadLibrary	src/sys/sys_loadlib.h	27;"	d
Sys_LoadLibrary	src/sys/sys_loadlib.h	33;"	d
Sys_LoadLibrary	src/sys/sys_loadlib.h	41;"	d
Sys_LowPhysicalMemory	src/renderercommon/tr_public.h	/^	qboolean (*Sys_LowPhysicalMemory)( void );$/;"	m	struct:__anon109
Sys_LowPhysicalMemory	src/sys/sys_unix.c	/^qboolean Sys_LowPhysicalMemory( void )$/;"	f
Sys_LowPhysicalMemory	src/sys/sys_win32.c	/^qboolean Sys_LowPhysicalMemory( void )$/;"	f
Sys_Milliseconds	src/null/null_main.c	/^int		Sys_Milliseconds (void) {$/;"	f
Sys_Milliseconds	src/sys/sys_unix.c	/^int Sys_Milliseconds (void)$/;"	f
Sys_Milliseconds	src/sys/sys_win32.c	/^int Sys_Milliseconds (void)$/;"	f
Sys_Mkdir	src/null/null_main.c	/^void	Sys_Mkdir (char *path) {$/;"	f
Sys_Mkdir	src/sys/sys_unix.c	/^qboolean Sys_Mkdir( const char *path )$/;"	f
Sys_Mkdir	src/sys/sys_win32.c	/^qboolean Sys_Mkdir( const char *path )$/;"	f
Sys_Mkfifo	src/sys/sys_unix.c	/^FILE *Sys_Mkfifo( const char *ospath )$/;"	f
Sys_Mkfifo	src/sys/sys_win32.c	/^FILE *Sys_Mkfifo( const char *ospath )$/;"	f
Sys_ParseArgs	src/sys/sys_main.c	/^void Sys_ParseArgs( int argc, char **argv )$/;"	f
Sys_PlatformExit	src/sys/sys_unix.c	/^void Sys_PlatformExit( void )$/;"	f
Sys_PlatformExit	src/sys/sys_win32.c	/^void Sys_PlatformExit( void )$/;"	f
Sys_PlatformInit	src/sys/sys_unix.c	/^void Sys_PlatformInit( void )$/;"	f
Sys_PlatformInit	src/sys/sys_win32.c	/^void Sys_PlatformInit( void )$/;"	f
Sys_Print	src/sys/sys_main.c	/^void Sys_Print( const char *msg )$/;"	f
Sys_Quit	src/null/null_main.c	/^void Sys_Quit (void) {$/;"	f
Sys_Quit	src/sys/sys_main.c	/^void Sys_Quit( void )$/;"	f
Sys_RandomBytes	src/sys/sys_unix.c	/^qboolean Sys_RandomBytes( byte *string, int len )$/;"	f
Sys_RandomBytes	src/sys/sys_win32.c	/^qboolean Sys_RandomBytes( byte *string, int len )$/;"	f
Sys_SendPacket	src/null/mac_net.c	/^void Sys_SendPacket( int length, void *data, netadr_t to ) {$/;"	f
Sys_SendPacket	src/null/null_net.c	/^void Sys_SendPacket( int length, void *data, netadr_t to ) {$/;"	f
Sys_SendPacket	src/qcommon/net_ip.c	/^void Sys_SendPacket( int length, const void *data, netadr_t to ) {$/;"	f
Sys_SetBinaryPath	src/sys/sys_main.c	/^void Sys_SetBinaryPath(const char *path)$/;"	f
Sys_SetDefaultInstallPath	src/sys/sys_main.c	/^void Sys_SetDefaultInstallPath(const char *path)$/;"	f
Sys_SetFloatEnv	src/sys/sys_unix.c	/^void Sys_SetFloatEnv(void)$/;"	f
Sys_SetFloatEnv	src/sys/sys_win32.c	/^void Sys_SetFloatEnv(void)$/;"	f
Sys_ShowIP	src/qcommon/net_ip.c	/^void Sys_ShowIP(void) {$/;"	f
Sys_SigHandler	src/sys/sys_main.c	/^void Sys_SigHandler( int signal )$/;"	f
Sys_Sleep	src/sys/sys_unix.c	/^void Sys_Sleep( int msec )$/;"	f
Sys_Sleep	src/sys/sys_win32.c	/^void Sys_Sleep( int msec )$/;"	f
Sys_SockaddrToString	src/qcommon/net_ip.c	/^static void Sys_SockaddrToString(char *dest, int destlen, struct sockaddr *input)$/;"	f	file:
Sys_StringToAdr	src/qcommon/net_ip.c	/^qboolean Sys_StringToAdr( const char *s, netadr_t *a, netadrtype_t family ) {$/;"	f
Sys_StringToSockaddr	src/qcommon/net_ip.c	/^static qboolean Sys_StringToSockaddr(const char *s, struct sockaddr *sadr, int sadr_len, sa_family_t family)$/;"	f	file:
Sys_UnloadDll	src/sys/sys_main.c	/^void Sys_UnloadDll( void *dllHandle )$/;"	f
Sys_UnloadLibrary	src/sys/sys_loadlib.h	28;"	d
Sys_UnloadLibrary	src/sys/sys_loadlib.h	34;"	d
Sys_UnloadLibrary	src/sys/sys_loadlib.h	42;"	d
Sys_XmessageCommand	src/sys/sys_unix.c	/^static void Sys_XmessageCommand( dialogType_t type, const char *message, const char *title )$/;"	f	file:
Sys_ZenityCommand	src/sys/sys_unix.c	/^static void Sys_ZenityCommand( dialogType_t type, const char *message, const char *title )$/;"	f	file:
TA	src/qcommon/vm_sparc.c	/^	TA,$/;"	e	enum:sparc_iname	file:
TAG_BOTLIB	src/qcommon/qcommon.h	/^	TAG_BOTLIB,$/;"	e	enum:__anon429
TAG_FREE	src/qcommon/qcommon.h	/^	TAG_FREE,$/;"	e	enum:__anon429
TAG_GENERAL	src/qcommon/qcommon.h	/^	TAG_GENERAL,$/;"	e	enum:__anon429
TAG_RENDERER	src/qcommon/qcommon.h	/^	TAG_RENDERER,$/;"	e	enum:__anon429
TAG_SMALL	src/qcommon/qcommon.h	/^	TAG_SMALL,$/;"	e	enum:__anon429
TAG_STATIC	src/qcommon/qcommon.h	/^	TAG_STATIC$/;"	e	enum:__anon429
TARGETS	GNUmakefile	/^TARGETS =$/;"	m
TBTT_REPEAT	src/cgame/cg_local.h	/^  TBTT_REPEAT$/;"	e	enum:__anon239
TBTT_STRETCH	src/cgame/cg_local.h	/^  TBTT_STRETCH,$/;"	e	enum:__anon239
TB_COLORMAP	src/renderergl2/tr_local.h	/^	TB_COLORMAP    = 0,$/;"	e	enum:__anon24
TB_CUBEMAP	src/renderergl2/tr_local.h	/^	TB_CUBEMAP     = 6,$/;"	e	enum:__anon24
TB_DELUXEMAP	src/renderergl2/tr_local.h	/^	TB_DELUXEMAP   = 3,$/;"	e	enum:__anon24
TB_DIFFUSEMAP	src/renderergl2/tr_local.h	/^	TB_DIFFUSEMAP  = 0,$/;"	e	enum:__anon24
TB_LEVELSMAP	src/renderergl2/tr_local.h	/^	TB_LEVELSMAP   = 1,$/;"	e	enum:__anon24
TB_LIGHTMAP	src/renderergl2/tr_local.h	/^	TB_LIGHTMAP    = 1,$/;"	e	enum:__anon24
TB_NORMALMAP	src/renderergl2/tr_local.h	/^	TB_NORMALMAP   = 2,$/;"	e	enum:__anon24
TB_SHADOWMAP	src/renderergl2/tr_local.h	/^	TB_SHADOWMAP   = 5,$/;"	e	enum:__anon24
TB_SHADOWMAP2	src/renderergl2/tr_local.h	/^	TB_SHADOWMAP2  = 3,$/;"	e	enum:__anon24
TB_SHADOWMAP3	src/renderergl2/tr_local.h	/^	TB_SHADOWMAP3  = 1,$/;"	e	enum:__anon24
TB_SHADOWMAP4	src/renderergl2/tr_local.h	/^	TB_SHADOWMAP4  = 6,$/;"	e	enum:__anon24
TB_SPECULARMAP	src/renderergl2/tr_local.h	/^	TB_SPECULARMAP = 4,$/;"	e	enum:__anon24
TCGEN_BAD	src/renderergl1/tr_local.h	/^	TCGEN_BAD,$/;"	e	enum:__anon135
TCGEN_BAD	src/renderergl2/tr_local.h	/^	TCGEN_BAD,$/;"	e	enum:__anon17
TCGEN_ENVIRONMENT_MAPPED	src/renderergl1/tr_local.h	/^	TCGEN_ENVIRONMENT_MAPPED,$/;"	e	enum:__anon135
TCGEN_ENVIRONMENT_MAPPED	src/renderergl2/tr_local.h	/^	TCGEN_ENVIRONMENT_MAPPED,$/;"	e	enum:__anon17
TCGEN_FOG	src/renderergl1/tr_local.h	/^	TCGEN_FOG,$/;"	e	enum:__anon135
TCGEN_FOG	src/renderergl2/tr_local.h	/^	TCGEN_FOG,$/;"	e	enum:__anon17
TCGEN_IDENTITY	src/renderergl1/tr_local.h	/^	TCGEN_IDENTITY,			\/\/ clear to 0,0$/;"	e	enum:__anon135
TCGEN_IDENTITY	src/renderergl2/tr_local.h	/^	TCGEN_IDENTITY,			\/\/ clear to 0,0$/;"	e	enum:__anon17
TCGEN_LIGHTMAP	src/renderergl1/tr_local.h	/^	TCGEN_LIGHTMAP,$/;"	e	enum:__anon135
TCGEN_LIGHTMAP	src/renderergl2/tr_local.h	/^	TCGEN_LIGHTMAP,$/;"	e	enum:__anon17
TCGEN_TEXTURE	src/renderergl1/tr_local.h	/^	TCGEN_TEXTURE,$/;"	e	enum:__anon135
TCGEN_TEXTURE	src/renderergl2/tr_local.h	/^	TCGEN_TEXTURE,$/;"	e	enum:__anon17
TCGEN_VECTOR	src/renderergl1/tr_local.h	/^	TCGEN_VECTOR			\/\/ S and T from world coordinates$/;"	e	enum:__anon135
TCGEN_VECTOR	src/renderergl2/tr_local.h	/^	TCGEN_VECTOR			\/\/ S and T from world coordinates$/;"	e	enum:__anon17
TCR_BPTC	src/renderergl2/tr_local.h	/^	TCR_BPTC = 0x0002,$/;"	e	enum:__anon59
TCR_LATC	src/renderergl2/tr_local.h	/^	TCR_LATC = 0x0001,$/;"	e	enum:__anon59
TCR_NONE	src/renderergl2/tr_local.h	/^	TCR_NONE = 0x0000,$/;"	e	enum:__anon59
TC_NONE	src/renderercommon/tr_types.h	/^	TC_NONE,$/;"	e	enum:__anon117
TC_S3TC	src/renderercommon/tr_types.h	/^	TC_S3TC,  \/\/ this is for the GL_S3_s3tc extension.$/;"	e	enum:__anon117
TC_S3TC_ARB	src/renderercommon/tr_types.h	/^	TC_S3TC_ARB  \/\/ this is for the GL_EXT_texture_compression_s3tc extension.$/;"	e	enum:__anon117
TEAMOVERLAY_ALL	src/cgame/cg_draw.c	/^  TEAMOVERLAY_ALL,$/;"	e	enum:__anon224	file:
TEAMOVERLAY_NEARBY	src/cgame/cg_draw.c	/^  TEAMOVERLAY_NEARBY,$/;"	e	enum:__anon224	file:
TEAMOVERLAY_OFF	src/cgame/cg_draw.c	/^  TEAMOVERLAY_OFF,$/;"	e	enum:__anon224	file:
TEAMOVERLAY_SORT_NONE	src/cgame/cg_draw.c	/^  TEAMOVERLAY_SORT_NONE,$/;"	e	enum:__anon225	file:
TEAMOVERLAY_SORT_SCORE	src/cgame/cg_draw.c	/^  TEAMOVERLAY_SORT_SCORE,$/;"	e	enum:__anon225	file:
TEAMOVERLAY_SORT_WEAPONCLASS	src/cgame/cg_draw.c	/^  TEAMOVERLAY_SORT_WEAPONCLASS,$/;"	e	enum:__anon225	file:
TEAMOVERLAY_SUPPORT	src/cgame/cg_draw.c	/^  TEAMOVERLAY_SUPPORT,$/;"	e	enum:__anon224	file:
TEAM_ALIENS	src/game/bg_public.h	/^  TEAM_ALIENS,$/;"	e	enum:__anon325
TEAM_HUMANS	src/game/bg_public.h	/^  TEAM_HUMANS,$/;"	e	enum:__anon325
TEAM_LOCATION_UPDATE_TIME	src/game/bg_public.h	837;"	d
TEAM_NONE	src/game/bg_public.h	/^  TEAM_NONE,$/;"	e	enum:__anon325
TEAM_OVERLAY_MAXLOCATION_WIDTH	src/cgame/cg_local.h	80;"	d
TEAM_OVERLAY_MAXNAME_WIDTH	src/cgame/cg_local.h	79;"	d
TEMPDIR	GNUmakefile	/^TEMPDIR=\/tmp$/;"	m
TEMPDIR	src/tools/lcc/etc/lcc.c	22;"	d	file:
TEMPLATE	src/tools/lcc/lburg/gram.c	/^    TEMPLATE = 262,$/;"	e	enum:yytokentype	file:
TEMPLATE	src/tools/lcc/lburg/gram.c	119;"	d	file:
TEMP_MASTER_NAME	src/server/sqlite3.c	10210;"	d	file:
TERM	src/tools/lcc/lburg/lburg.h	/^typedef enum { TERM=1, NONTERM } Kind;$/;"	e	enum:__anon269
TERMINAL	src/tools/lcc/lburg/gram.c	/^    TERMINAL = 258,$/;"	e	enum:yytokentype	file:
TERMINAL	src/tools/lcc/lburg/gram.c	115;"	d	file:
TERM_ANDINFO	src/server/sqlite3.c	120173;"	d	file:
TERM_CODED	src/server/sqlite3.c	120170;"	d	file:
TERM_COLUMNS	GNUmakefile	/^  TERM_COLUMNS=$(shell echo $$((`tput cols`-4)))$/;"	m
TERM_COLUMNS	GNUmakefile	/^  TERM_COLUMNS=76$/;"	m
TERM_COPIED	src/server/sqlite3.c	120171;"	d	file:
TERM_DYNAMIC	src/server/sqlite3.c	120168;"	d	file:
TERM_IS	src/server/sqlite3.c	120183;"	d	file:
TERM_LIKE	src/server/sqlite3.c	120182;"	d	file:
TERM_LIKECOND	src/server/sqlite3.c	120181;"	d	file:
TERM_LIKEOPT	src/server/sqlite3.c	120180;"	d	file:
TERM_ORINFO	src/server/sqlite3.c	120172;"	d	file:
TERM_OR_OK	src/server/sqlite3.c	120174;"	d	file:
TERM_VIRTUAL	src/server/sqlite3.c	120169;"	d	file:
TERM_VNULL	src/server/sqlite3.c	120176;"	d	file:
TERM_VNULL	src/server/sqlite3.c	120178;"	d	file:
TESLAGEN_BP	src/game/tremulous.h	578;"	d
TESLAGEN_BT	src/game/tremulous.h	579;"	d
TESLAGEN_DMG	src/game/tremulous.h	586;"	d
TESLAGEN_HEALTH	src/game/tremulous.h	580;"	d
TESLAGEN_K_SCALE	src/game/tremulous.h	584;"	d
TESLAGEN_RANGE	src/game/tremulous.h	585;"	d
TESLAGEN_REPEAT	src/game/tremulous.h	583;"	d
TESLAGEN_SPLASHDAMAGE	src/game/tremulous.h	581;"	d
TESLAGEN_SPLASHRADIUS	src/game/tremulous.h	582;"	d
TESLAGEN_VALUE	src/game/tremulous.h	587;"	d
TESTBIT	src/server/sqlite3.c	41292;"	d	file:
TESTONLY	src/server/sqlite3.c	138285;"	d	file:
TESTONLY	src/server/sqlite3.c	138287;"	d	file:
TESTONLY	src/server/sqlite3.c	9406;"	d	file:
TESTONLY	src/server/sqlite3.c	9408;"	d	file:
TEXT_ICON_SPACE	src/cgame/cg_local.h	71;"	d
TF_Autoincrement	src/server/sqlite3.c	12712;"	d	file:
TF_Ephemeral	src/server/sqlite3.c	12710;"	d	file:
TF_HasPrimaryKey	src/server/sqlite3.c	12711;"	d	file:
TF_NoVisibleRowid	src/server/sqlite3.c	12715;"	d	file:
TF_OOOHidden	src/server/sqlite3.c	12716;"	d	file:
TF_Readonly	src/server/sqlite3.c	12709;"	d	file:
TF_Virtual	src/server/sqlite3.c	12713;"	d	file:
TF_WithoutRowid	src/server/sqlite3.c	12714;"	d	file:
THIRD_PERSON_THRESHOLD_SQ	src/client/snd_local.h	80;"	d
THREAD_LIBS	GNUmakefile	/^  THREAD_LIBS=-lpthread$/;"	m
THREE_BYTE_INT	src/server/sqlite3.c	71325;"	d	file:
THUNK_ICOUNT	src/qcommon/vm_sparc.c	614;"	d	file:
TICC	src/qcommon/vm_sparc.c	94;"	d	file:
TILDE	src/tools/lcc/cpp/cpp.h	/^		TILDE, NOT, SLASH, PCT, LT, GT, CIRC, OR, QUEST,$/;"	e	enum:toktype
TIMEOUT_CHALLENGE	src/master/messages.c	36;"	d	file:
TIMEOUT_HEARTBEAT	src/master/messages.c	32;"	d	file:
TIMEOUT_INFORESPONSE	src/master/messages.c	33;"	d	file:
TIMER_ATTACK	src/game/bg_local.h	32;"	d
TIMER_ELAPSED	src/server/sqlite3.c	21491;"	d	file:
TIMER_ELAPSED	src/server/sqlite3.c	21495;"	d	file:
TIMER_ELAPSED	src/server/sqlite3.c	27732;"	d	file:
TIMER_ELAPSED	src/server/sqlite3.c	27736;"	d	file:
TIMER_ELAPSED	src/server/sqlite3.c	35252;"	d	file:
TIMER_ELAPSED	src/server/sqlite3.c	35256;"	d	file:
TIMER_END	src/server/sqlite3.c	21490;"	d	file:
TIMER_END	src/server/sqlite3.c	21494;"	d	file:
TIMER_END	src/server/sqlite3.c	27731;"	d	file:
TIMER_END	src/server/sqlite3.c	27735;"	d	file:
TIMER_END	src/server/sqlite3.c	35251;"	d	file:
TIMER_END	src/server/sqlite3.c	35255;"	d	file:
TIMER_GESTURE	src/game/bg_local.h	31;"	d
TIMER_LAND	src/game/bg_local.h	30;"	d
TIMER_START	src/server/sqlite3.c	21489;"	d	file:
TIMER_START	src/server/sqlite3.c	21493;"	d	file:
TIMER_START	src/server/sqlite3.c	27730;"	d	file:
TIMER_START	src/server/sqlite3.c	27734;"	d	file:
TIMER_START	src/server/sqlite3.c	35250;"	d	file:
TIMER_START	src/server/sqlite3.c	35254;"	d	file:
TIME_OFFSET	src/server/sv_database.c	2;"	d	file:
TINYCHAR_HEIGHT	src/qcommon/q_shared.h	378;"	d
TINYCHAR_WIDTH	src/qcommon/q_shared.h	377;"	d
TKFLG_DONTFOLD	src/server/sqlite3.c	9786;"	d	file:
TKFLG_MASK	src/server/sqlite3.c	9782;"	d	file:
TK_ABORT	src/server/sqlite3.c	9647;"	d	file:
TK_ACTION	src/server/sqlite3.c	9648;"	d	file:
TK_ADD	src/server/sqlite3.c	9760;"	d	file:
TK_AFTER	src/server/sqlite3.c	9649;"	d	file:
TK_AGG_COLUMN	src/server/sqlite3.c	9772;"	d	file:
TK_AGG_FUNCTION	src/server/sqlite3.c	9771;"	d	file:
TK_ALL	src/server/sqlite3.c	9734;"	d	file:
TK_ALTER	src/server/sqlite3.c	9759;"	d	file:
TK_ANALYZE	src/server/sqlite3.c	9650;"	d	file:
TK_AND	src/server/sqlite3.c	9690;"	d	file:
TK_ANY	src/server/sqlite3.c	9688;"	d	file:
TK_AS	src/server/sqlite3.c	9642;"	d	file:
TK_ASC	src/server/sqlite3.c	9651;"	d	file:
TK_ASTERISK	src/server/sqlite3.c	9776;"	d	file:
TK_ATTACH	src/server/sqlite3.c	9652;"	d	file:
TK_AUTOINCR	src/server/sqlite3.c	9724;"	d	file:
TK_BEFORE	src/server/sqlite3.c	9653;"	d	file:
TK_BEGIN	src/server/sqlite3.c	9623;"	d	file:
TK_BETWEEN	src/server/sqlite3.c	9692;"	d	file:
TK_BITAND	src/server/sqlite3.c	9703;"	d	file:
TK_BITNOT	src/server/sqlite3.c	9714;"	d	file:
TK_BITOR	src/server/sqlite3.c	9704;"	d	file:
TK_BLOB	src/server/sqlite3.c	9752;"	d	file:
TK_BY	src/server/sqlite3.c	9654;"	d	file:
TK_CASCADE	src/server/sqlite3.c	9655;"	d	file:
TK_CASE	src/server/sqlite3.c	9754;"	d	file:
TK_CAST	src/server/sqlite3.c	9656;"	d	file:
TK_CHECK	src/server/sqlite3.c	9722;"	d	file:
TK_COLLATE	src/server/sqlite3.c	9713;"	d	file:
TK_COLUMN	src/server/sqlite3.c	9770;"	d	file:
TK_COLUMNKW	src/server/sqlite3.c	9657;"	d	file:
TK_COMMA	src/server/sqlite3.c	9644;"	d	file:
TK_COMMIT	src/server/sqlite3.c	9628;"	d	file:
TK_CONCAT	src/server/sqlite3.c	9712;"	d	file:
TK_CONFLICT	src/server/sqlite3.c	9658;"	d	file:
TK_CONSTRAINT	src/server/sqlite3.c	9717;"	d	file:
TK_CREATE	src/server/sqlite3.c	9635;"	d	file:
TK_CTIME_KW	src/server/sqlite3.c	9687;"	d	file:
TK_DATABASE	src/server/sqlite3.c	9659;"	d	file:
TK_DEFAULT	src/server/sqlite3.c	9718;"	d	file:
TK_DEFERRABLE	src/server/sqlite3.c	9730;"	d	file:
TK_DEFERRED	src/server/sqlite3.c	9625;"	d	file:
TK_DELETE	src/server/sqlite3.c	9727;"	d	file:
TK_DESC	src/server/sqlite3.c	9660;"	d	file:
TK_DETACH	src/server/sqlite3.c	9661;"	d	file:
TK_DISTINCT	src/server/sqlite3.c	9739;"	d	file:
TK_DOT	src/server/sqlite3.c	9740;"	d	file:
TK_DROP	src/server/sqlite3.c	9732;"	d	file:
TK_EACH	src/server/sqlite3.c	9662;"	d	file:
TK_ELSE	src/server/sqlite3.c	9757;"	d	file:
TK_END	src/server/sqlite3.c	9629;"	d	file:
TK_END_OF_FILE	src/server/sqlite3.c	9767;"	d	file:
TK_EQ	src/server/sqlite3.c	9697;"	d	file:
TK_ESCAPE	src/server/sqlite3.c	9702;"	d	file:
TK_EXCEPT	src/server/sqlite3.c	9735;"	d	file:
TK_EXCLUSIVE	src/server/sqlite3.c	9627;"	d	file:
TK_EXISTS	src/server/sqlite3.c	9638;"	d	file:
TK_EXPLAIN	src/server/sqlite3.c	9620;"	d	file:
TK_FAIL	src/server/sqlite3.c	9663;"	d	file:
TK_FLOAT	src/server/sqlite3.c	9751;"	d	file:
TK_FOR	src/server/sqlite3.c	9664;"	d	file:
TK_FOREIGN	src/server/sqlite3.c	9731;"	d	file:
TK_FROM	src/server/sqlite3.c	9741;"	d	file:
TK_FUNCTION	src/server/sqlite3.c	9769;"	d	file:
TK_GE	src/server/sqlite3.c	9701;"	d	file:
TK_GROUP	src/server/sqlite3.c	9745;"	d	file:
TK_GT	src/server/sqlite3.c	9698;"	d	file:
TK_HAVING	src/server/sqlite3.c	9746;"	d	file:
TK_ID	src/server/sqlite3.c	9645;"	d	file:
TK_IF	src/server/sqlite3.c	9636;"	d	file:
TK_IGNORE	src/server/sqlite3.c	9665;"	d	file:
TK_ILLEGAL	src/server/sqlite3.c	9779;"	d	file:
TK_IMMEDIATE	src/server/sqlite3.c	9626;"	d	file:
TK_IN	src/server/sqlite3.c	9693;"	d	file:
TK_INDEX	src/server/sqlite3.c	9758;"	d	file:
TK_INDEXED	src/server/sqlite3.c	9646;"	d	file:
TK_INITIALLY	src/server/sqlite3.c	9666;"	d	file:
TK_INSERT	src/server/sqlite3.c	9726;"	d	file:
TK_INSTEAD	src/server/sqlite3.c	9667;"	d	file:
TK_INTEGER	src/server/sqlite3.c	9750;"	d	file:
TK_INTERSECT	src/server/sqlite3.c	9736;"	d	file:
TK_INTO	src/server/sqlite3.c	9749;"	d	file:
TK_IS	src/server/sqlite3.c	9691;"	d	file:
TK_ISNOT	src/server/sqlite3.c	9766;"	d	file:
TK_ISNULL	src/server/sqlite3.c	9694;"	d	file:
TK_JOIN	src/server/sqlite3.c	9742;"	d	file:
TK_JOIN_KW	src/server/sqlite3.c	9716;"	d	file:
TK_KEY	src/server/sqlite3.c	9671;"	d	file:
TK_LE	src/server/sqlite3.c	9699;"	d	file:
TK_LIKE_KW	src/server/sqlite3.c	9668;"	d	file:
TK_LIMIT	src/server/sqlite3.c	9747;"	d	file:
TK_LP	src/server/sqlite3.c	9640;"	d	file:
TK_LSHIFT	src/server/sqlite3.c	9705;"	d	file:
TK_LT	src/server/sqlite3.c	9700;"	d	file:
TK_MATCH	src/server/sqlite3.c	9669;"	d	file:
TK_MINUS	src/server/sqlite3.c	9708;"	d	file:
TK_NE	src/server/sqlite3.c	9696;"	d	file:
TK_NO	src/server/sqlite3.c	9670;"	d	file:
TK_NOT	src/server/sqlite3.c	9637;"	d	file:
TK_NOTNULL	src/server/sqlite3.c	9695;"	d	file:
TK_NULL	src/server/sqlite3.c	9719;"	d	file:
TK_OF	src/server/sqlite3.c	9672;"	d	file:
TK_OFFSET	src/server/sqlite3.c	9673;"	d	file:
TK_ON	src/server/sqlite3.c	9725;"	d	file:
TK_OR	src/server/sqlite3.c	9689;"	d	file:
TK_ORDER	src/server/sqlite3.c	9744;"	d	file:
TK_PLAN	src/server/sqlite3.c	9622;"	d	file:
TK_PLUS	src/server/sqlite3.c	9707;"	d	file:
TK_PRAGMA	src/server/sqlite3.c	9674;"	d	file:
TK_PRIMARY	src/server/sqlite3.c	9720;"	d	file:
TK_QUERY	src/server/sqlite3.c	9621;"	d	file:
TK_RAISE	src/server/sqlite3.c	9675;"	d	file:
TK_RECURSIVE	src/server/sqlite3.c	9676;"	d	file:
TK_REFERENCES	src/server/sqlite3.c	9723;"	d	file:
TK_REGISTER	src/server/sqlite3.c	9775;"	d	file:
TK_REINDEX	src/server/sqlite3.c	9685;"	d	file:
TK_RELEASE	src/server/sqlite3.c	9632;"	d	file:
TK_REM	src/server/sqlite3.c	9711;"	d	file:
TK_RENAME	src/server/sqlite3.c	9686;"	d	file:
TK_REPLACE	src/server/sqlite3.c	9677;"	d	file:
TK_RESTRICT	src/server/sqlite3.c	9678;"	d	file:
TK_ROLLBACK	src/server/sqlite3.c	9630;"	d	file:
TK_ROW	src/server/sqlite3.c	9679;"	d	file:
TK_RP	src/server/sqlite3.c	9641;"	d	file:
TK_RSHIFT	src/server/sqlite3.c	9706;"	d	file:
TK_SAVEPOINT	src/server/sqlite3.c	9631;"	d	file:
TK_SELECT	src/server/sqlite3.c	9737;"	d	file:
TK_SEMI	src/server/sqlite3.c	9619;"	d	file:
TK_SET	src/server/sqlite3.c	9729;"	d	file:
TK_SLASH	src/server/sqlite3.c	9710;"	d	file:
TK_SPACE	src/server/sqlite3.c	9778;"	d	file:
TK_SPAN	src/server/sqlite3.c	9777;"	d	file:
TK_STAR	src/server/sqlite3.c	9709;"	d	file:
TK_STRING	src/server/sqlite3.c	9715;"	d	file:
TK_TABLE	src/server/sqlite3.c	9634;"	d	file:
TK_TEMP	src/server/sqlite3.c	9639;"	d	file:
TK_THEN	src/server/sqlite3.c	9756;"	d	file:
TK_TO	src/server/sqlite3.c	9633;"	d	file:
TK_TO_BLOB	src/server/sqlite3.c	9762;"	d	file:
TK_TO_INT	src/server/sqlite3.c	9764;"	d	file:
TK_TO_NUMERIC	src/server/sqlite3.c	9763;"	d	file:
TK_TO_REAL	src/server/sqlite3.c	9765;"	d	file:
TK_TO_TEXT	src/server/sqlite3.c	9761;"	d	file:
TK_TRANSACTION	src/server/sqlite3.c	9624;"	d	file:
TK_TRIGGER	src/server/sqlite3.c	9680;"	d	file:
TK_UMINUS	src/server/sqlite3.c	9773;"	d	file:
TK_UNCLOSED_STRING	src/server/sqlite3.c	9768;"	d	file:
TK_UNION	src/server/sqlite3.c	9733;"	d	file:
TK_UNIQUE	src/server/sqlite3.c	9721;"	d	file:
TK_UPDATE	src/server/sqlite3.c	9728;"	d	file:
TK_UPLUS	src/server/sqlite3.c	9774;"	d	file:
TK_USING	src/server/sqlite3.c	9743;"	d	file:
TK_VACUUM	src/server/sqlite3.c	9681;"	d	file:
TK_VALUES	src/server/sqlite3.c	9738;"	d	file:
TK_VARIABLE	src/server/sqlite3.c	9753;"	d	file:
TK_VIEW	src/server/sqlite3.c	9682;"	d	file:
TK_VIRTUAL	src/server/sqlite3.c	9683;"	d	file:
TK_WHEN	src/server/sqlite3.c	9755;"	d	file:
TK_WHERE	src/server/sqlite3.c	9748;"	d	file:
TK_WITH	src/server/sqlite3.c	9684;"	d	file:
TK_WITHOUT	src/server/sqlite3.c	9643;"	d	file:
TMOD_ENTITY_TRANSLATE	src/renderergl1/tr_local.h	/^	TMOD_ENTITY_TRANSLATE$/;"	e	enum:__anon138
TMOD_ENTITY_TRANSLATE	src/renderergl2/tr_local.h	/^	TMOD_ENTITY_TRANSLATE$/;"	e	enum:__anon20
TMOD_NONE	src/renderergl1/tr_local.h	/^	TMOD_NONE,$/;"	e	enum:__anon138
TMOD_NONE	src/renderergl2/tr_local.h	/^	TMOD_NONE,$/;"	e	enum:__anon20
TMOD_ROTATE	src/renderergl1/tr_local.h	/^	TMOD_ROTATE,$/;"	e	enum:__anon138
TMOD_ROTATE	src/renderergl2/tr_local.h	/^	TMOD_ROTATE,$/;"	e	enum:__anon20
TMOD_SCALE	src/renderergl1/tr_local.h	/^	TMOD_SCALE,$/;"	e	enum:__anon138
TMOD_SCALE	src/renderergl2/tr_local.h	/^	TMOD_SCALE,$/;"	e	enum:__anon20
TMOD_SCROLL	src/renderergl1/tr_local.h	/^	TMOD_SCROLL,$/;"	e	enum:__anon138
TMOD_SCROLL	src/renderergl2/tr_local.h	/^	TMOD_SCROLL,$/;"	e	enum:__anon20
TMOD_STRETCH	src/renderergl1/tr_local.h	/^	TMOD_STRETCH,$/;"	e	enum:__anon138
TMOD_STRETCH	src/renderergl2/tr_local.h	/^	TMOD_STRETCH,$/;"	e	enum:__anon20
TMOD_TRANSFORM	src/renderergl1/tr_local.h	/^	TMOD_TRANSFORM,$/;"	e	enum:__anon138
TMOD_TRANSFORM	src/renderergl2/tr_local.h	/^	TMOD_TRANSFORM,$/;"	e	enum:__anon20
TMOD_TURBULENT	src/renderergl1/tr_local.h	/^	TMOD_TURBULENT,$/;"	e	enum:__anon138
TMOD_TURBULENT	src/renderergl2/tr_local.h	/^	TMOD_TURBULENT,$/;"	e	enum:__anon20
TMU	src/renderercommon/tr_common.h	/^	int			TMU;				\/\/ only needed for voodoo2$/;"	m	struct:image_s
TOEQ	src/qcommon/vm_powerpc_asm.c	885;"	d	file:
TOGE	src/qcommon/vm_powerpc_asm.c	891;"	d	file:
TOGT	src/qcommon/vm_powerpc_asm.c	890;"	d	file:
TOKEN	src/server/sqlite3.c	131729;"	d	file:
TOLE	src/qcommon/vm_powerpc_asm.c	894;"	d	file:
TOLGE	src/qcommon/vm_powerpc_asm.c	886;"	d	file:
TOLGT	src/qcommon/vm_powerpc_asm.c	883;"	d	file:
TOLLE	src/qcommon/vm_powerpc_asm.c	888;"	d	file:
TOLLT	src/qcommon/vm_powerpc_asm.c	884;"	d	file:
TOLNG	src/qcommon/vm_powerpc_asm.c	889;"	d	file:
TOLNL	src/qcommon/vm_powerpc_asm.c	887;"	d	file:
TOLT	src/qcommon/vm_powerpc_asm.c	893;"	d	file:
TONE	src/qcommon/vm_powerpc_asm.c	896;"	d	file:
TONG	src/qcommon/vm_powerpc_asm.c	895;"	d	file:
TONL	src/qcommon/vm_powerpc_asm.c	892;"	d	file:
TOOLSOBJ	GNUmakefile	/^TOOLSOBJ = $(LBURGOBJ) $(Q3CPPOBJ) $(Q3RCCOBJ) $(Q3LCCOBJ) $(Q3ASMOBJ)$/;"	m
TOOLSOBJ_D_FILES	GNUmakefile	/^  TOOLSOBJ_D_FILES=$(filter %.d,$(TOOLSOBJ:%.o=%.d))$/;"	m
TOOLS_BINEXT	GNUmakefile	/^    TOOLS_BINEXT=.exe$/;"	m
TOOLS_CC	GNUmakefile	/^    TOOLS_CC=$(CC)$/;"	m
TOOLS_CC	GNUmakefile	/^  TOOLS_CC=$(CC)$/;"	m
TOOLS_LDFLAGS	GNUmakefile	/^TOOLS_LDFLAGS =$/;"	m
TOOLS_LIBS	GNUmakefile	/^TOOLS_LIBS =$/;"	m
TOOLS_OPTIMIZE	GNUmakefile	/^TOOLS_OPTIMIZE = -g -Wall -fno-strict-aliasing$/;"	m
TORSO_AFFIRMATIVE	src/game/bg_public.h	/^  TORSO_AFFIRMATIVE,$/;"	e	enum:__anon341
TORSO_ATTACK	src/game/bg_public.h	/^  TORSO_ATTACK,$/;"	e	enum:__anon341
TORSO_ATTACK2	src/game/bg_public.h	/^  TORSO_ATTACK2,$/;"	e	enum:__anon341
TORSO_DROP	src/game/bg_public.h	/^  TORSO_DROP,$/;"	e	enum:__anon341
TORSO_FOLLOWME	src/game/bg_public.h	/^  TORSO_FOLLOWME,$/;"	e	enum:__anon341
TORSO_GESTURE	src/game/bg_public.h	/^  TORSO_GESTURE,$/;"	e	enum:__anon341
TORSO_GETFLAG	src/game/bg_public.h	/^  TORSO_GETFLAG,$/;"	e	enum:__anon341
TORSO_GUARDBASE	src/game/bg_public.h	/^  TORSO_GUARDBASE,$/;"	e	enum:__anon341
TORSO_NEGATIVE	src/game/bg_public.h	/^  TORSO_NEGATIVE,$/;"	e	enum:__anon341
TORSO_PATROL	src/game/bg_public.h	/^  TORSO_PATROL,$/;"	e	enum:__anon341
TORSO_RAISE	src/game/bg_public.h	/^  TORSO_RAISE,$/;"	e	enum:__anon341
TORSO_STAND	src/game/bg_public.h	/^  TORSO_STAND,$/;"	e	enum:__anon341
TORSO_STAND2	src/game/bg_public.h	/^  TORSO_STAND2,$/;"	e	enum:__anon341
TOU	src/qcommon/vm_powerpc_asm.c	897;"	d	file:
TRACE	src/server/sqlite3.c	55833;"	d	file:
TRACE_DEPTH	src/cgame/cg_buildable.c	580;"	d	file:
TRACE_DEPTH	src/cgame/cg_players.c	1870;"	d	file:
TRACE_IDX_INPUTS	src/server/sqlite3.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	src/server/sqlite3.c	124120;"	d	file:
TRACE_IDX_OUTPUTS	src/server/sqlite3.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	src/server/sqlite3.c	124121;"	d	file:
TRAIN_BLOCK_STOPS	src/game/g_mover.c	1913;"	d	file:
TRAIN_START_OFF	src/game/g_mover.c	1912;"	d	file:
TRANS_NONE	src/server/sqlite3.c	55181;"	d	file:
TRANS_READ	src/server/sqlite3.c	55182;"	d	file:
TRANS_WRITE	src/server/sqlite3.c	55183;"	d	file:
TRAPPER_ACCURACY	src/game/g_buildable.c	1737;"	d	file:
TRAPPER_BP	src/game/tremulous.h	312;"	d
TRAPPER_BT	src/game/tremulous.h	313;"	d
TRAPPER_CREEPSIZE	src/game/tremulous.h	318;"	d
TRAPPER_HEALTH	src/game/tremulous.h	314;"	d
TRAPPER_RANGE	src/game/tremulous.h	319;"	d
TRAPPER_REGEN	src/game/tremulous.h	315;"	d
TRAPPER_REPEAT	src/game/tremulous.h	320;"	d
TRAPPER_SPLASHDAMAGE	src/game/tremulous.h	316;"	d
TRAPPER_SPLASHRADIUS	src/game/tremulous.h	317;"	d
TRAPPER_VALUE	src/game/tremulous.h	321;"	d
TRAP_ANGLEVECTORS	src/qcommon/qcommon.h	/^	TRAP_ANGLEVECTORS,$/;"	e	enum:__anon424
TRAP_ATAN2	src/qcommon/qcommon.h	/^	TRAP_ATAN2,$/;"	e	enum:__anon424
TRAP_CEIL	src/qcommon/qcommon.h	/^	TRAP_CEIL,$/;"	e	enum:__anon424
TRAP_COS	src/qcommon/qcommon.h	/^	TRAP_COS,$/;"	e	enum:__anon424
TRAP_FLOOR	src/qcommon/qcommon.h	/^	TRAP_FLOOR,$/;"	e	enum:__anon424
TRAP_MATRIXMULTIPLY	src/qcommon/qcommon.h	/^	TRAP_MATRIXMULTIPLY,$/;"	e	enum:__anon424
TRAP_MEMCPY	src/qcommon/qcommon.h	/^	TRAP_MEMCPY,$/;"	e	enum:__anon424
TRAP_MEMSET	src/qcommon/qcommon.h	/^	TRAP_MEMSET = 100,$/;"	e	enum:__anon424
TRAP_PERPENDICULARVECTOR	src/qcommon/qcommon.h	/^	TRAP_PERPENDICULARVECTOR,$/;"	e	enum:__anon424
TRAP_SIN	src/qcommon/qcommon.h	/^	TRAP_SIN,$/;"	e	enum:__anon424
TRAP_SQRT	src/qcommon/qcommon.h	/^	TRAP_SQRT,$/;"	e	enum:__anon424
TRAP_STRNCPY	src/qcommon/qcommon.h	/^	TRAP_STRNCPY,$/;"	e	enum:__anon424
TRAP_TESTPRINTFLOAT	src/qcommon/qcommon.h	/^	TRAP_TESTPRINTFLOAT$/;"	e	enum:__anon424
TRAP_TESTPRINTINT	src/qcommon/qcommon.h	/^	TRAP_TESTPRINTINT,$/;"	e	enum:__anon424
TRIGGER_AFTER	src/server/sqlite3.c	13913;"	d	file:
TRIGGER_BEFORE	src/server/sqlite3.c	13912;"	d	file:
TRUNCATE_LENGTH	src/qcommon/q_shared.h	958;"	d
TR_BUOYANCY	src/qcommon/q_shared.h	/^	TR_BUOYANCY$/;"	e	enum:__anon475
TR_COMMON_H	src/renderercommon/tr_common.h	24;"	d
TR_GRAVITY	src/qcommon/q_shared.h	/^	TR_GRAVITY,$/;"	e	enum:__anon475
TR_INTERPOLATE	src/qcommon/q_shared.h	/^	TR_INTERPOLATE,				\/\/ non-parametric, but interpolate between snapshots$/;"	e	enum:__anon475
TR_LINEAR	src/qcommon/q_shared.h	/^	TR_LINEAR,$/;"	e	enum:__anon475
TR_LINEAR_STOP	src/qcommon/q_shared.h	/^	TR_LINEAR_STOP,$/;"	e	enum:__anon475
TR_LOCAL_H	src/renderergl1/tr_local.h	26;"	d
TR_LOCAL_H	src/renderergl2/tr_local.h	26;"	d
TR_MAX_TEXMODS	src/renderergl1/tr_local.h	199;"	d
TR_MAX_TEXMODS	src/renderergl2/tr_local.h	275;"	d
TR_POSTPROCESS_H	src/renderergl2/tr_postprocess.h	24;"	d
TR_SINE	src/qcommon/q_shared.h	/^	TR_SINE,					\/\/ value = base + sin( time \/ duration ) * delta$/;"	e	enum:__anon475
TR_STATIONARY	src/qcommon/q_shared.h	/^	TR_STATIONARY,$/;"	e	enum:__anon475
TTY_CONSOLE_PROMPT	src/sys/con_tty.c	73;"	d	file:
TTY_CONSOLE_PROMPT	src/sys/con_tty.c	75;"	d	file:
TTY_con	src/sys/con_tty.c	/^static field_t TTY_con;$/;"	v	file:
TTY_eof	src/sys/con_tty.c	/^static int TTY_eof;$/;"	v	file:
TTY_erase	src/sys/con_tty.c	/^static int TTY_erase;$/;"	v	file:
TTY_tc	src/sys/con_tty.c	/^static struct termios TTY_tc;$/;"	v	typeref:struct:termios	file:
TT_AABB	src/qcommon/q_shared.h	/^	TT_AABB,$/;"	e	enum:__anon469
TT_BINARY	src/qcommon/parse.c	54;"	d	file:
TT_BISPHERE	src/qcommon/q_shared.h	/^	TT_BISPHERE,$/;"	e	enum:__anon469
TT_CAPSULE	src/qcommon/q_shared.h	/^	TT_CAPSULE,$/;"	e	enum:__anon469
TT_DECIMAL	src/qcommon/parse.c	51;"	d	file:
TT_FLOAT	src/qcommon/parse.c	55;"	d	file:
TT_HEX	src/qcommon/parse.c	52;"	d	file:
TT_INTEGER	src/qcommon/parse.c	56;"	d	file:
TT_LITERAL	src/qcommon/parse.c	38;"	d	file:
TT_LITERAL	src/qcommon/q_shared.h	824;"	d
TT_LONG	src/qcommon/parse.c	57;"	d	file:
TT_NAME	src/qcommon/parse.c	40;"	d	file:
TT_NAME	src/qcommon/q_shared.h	826;"	d
TT_NONE	src/qcommon/q_shared.h	/^	TT_NONE,$/;"	e	enum:__anon469
TT_NUMBER	src/qcommon/parse.c	39;"	d	file:
TT_NUMBER	src/qcommon/q_shared.h	825;"	d
TT_NUM_TRACE_TYPES	src/qcommon/q_shared.h	/^	TT_NUM_TRACE_TYPES$/;"	e	enum:__anon469
TT_OCTAL	src/qcommon/parse.c	53;"	d	file:
TT_PUNCTUATION	src/qcommon/parse.c	41;"	d	file:
TT_PUNCTUATION	src/qcommon/q_shared.h	827;"	d
TT_STRING	src/qcommon/parse.c	37;"	d	file:
TT_STRING	src/qcommon/q_shared.h	823;"	d
TT_UNSIGNED	src/qcommon/parse.c	58;"	d	file:
TWOPOWER31	src/server/sqlite3.c	26695;"	d	file:
TWOPOWER32	src/server/sqlite3.c	26694;"	d	file:
TWO_BYTE_INT	src/server/sqlite3.c	71324;"	d	file:
TW_IMMINENT	src/game/g_local.h	/^  TW_IMMINENT,$/;"	e	enum:__anon313
TW_NOT	src/game/g_local.h	/^  TW_NOT = 0,$/;"	e	enum:__anon313
TW_PASSED	src/game/g_local.h	/^  TW_PASSED$/;"	e	enum:__anon313
TYPE_ANY	src/ui/ui_shared.h	/^  TYPE_ANY = -1,$/;"	e	enum:__anon501
TYPE_COMBO	src/ui/ui_shared.h	/^  TYPE_COMBO,$/;"	e	enum:__anon501
TYPE_EDIT	src/ui/ui_shared.h	/^  TYPE_EDIT,$/;"	e	enum:__anon501
TYPE_LIST	src/ui/ui_shared.h	/^  TYPE_LIST,$/;"	e	enum:__anon501
TYPE_MODEL	src/ui/ui_shared.h	/^  TYPE_MODEL$/;"	e	enum:__anon501
TYPE_MULTI	src/ui/ui_shared.h	/^  TYPE_MULTI,$/;"	e	enum:__anon501
TYPE_NONE	src/ui/ui_shared.h	/^  TYPE_NONE,$/;"	e	enum:__anon501
TabResult	src/server/sqlite3.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	src/server/sqlite3.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
Table	src/server/sqlite3.c	/^struct Table {$/;"	s	file:
Table	src/server/sqlite3.c	/^typedef struct Table Table;$/;"	t	typeref:struct:Table	file:
Table	src/tools/lcc/src/c.h	/^typedef struct table *Table;$/;"	t	typeref:struct:table
TableForFunc	src/renderergl1/tr_shade_calc.c	/^static float *TableForFunc( genFunc_t func ) $/;"	f	file:
TableForFunc	src/renderergl2/tr_shade_calc.c	/^static float *TableForFunc( genFunc_t func ) $/;"	f	file:
TableLock	src/server/sqlite3.c	/^struct TableLock {$/;"	s	file:
TableLock	src/server/sqlite3.c	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock	file:
TakeVideoFrame	src/renderercommon/tr_public.h	/^	void (*TakeVideoFrame)( int h, int w, byte* captureBuffer, byte *encodeBuffer, qboolean motionJpeg );$/;"	m	struct:__anon108
TargaHeader	src/renderercommon/tr_image_tga.c	/^} TargaHeader;$/;"	t	typeref:struct:_TargaHeader	file:
Team_GetLocation	src/game/g_team.c	/^gentity_t *Team_GetLocation( gentity_t *ent )$/;"	f
TeamplayInfoMessage	src/game/g_team.c	/^void TeamplayInfoMessage( gentity_t *ent )$/;"	f
TeleportPlayer	src/game/g_misc.c	/^void TeleportPlayer( gentity_t *player, vec3_t origin, vec3_t angles, float speed )$/;"	f
Term	src/tools/lcc/lburg/lburg.h	/^typedef struct term *Term;$/;"	t	typeref:struct:term
TermOffset	src/server/sqlite3.c	/^struct TermOffset {$/;"	s	file:
TermOffset	src/server/sqlite3.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffsetCtx	src/server/sqlite3.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	src/server/sqlite3.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermSelect	src/server/sqlite3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	src/server/sqlite3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
Text_PaintCenter	src/ui/ui_main.c	/^void Text_PaintCenter( float x, float y, float scale, vec4_t color, const char *text, float adjust )$/;"	f
Text_PaintCenter_AutoWrapped	src/ui/ui_main.c	/^void Text_PaintCenter_AutoWrapped( float x, float y, float xmax, float ystep, float scale, vec4_t color, const char *str, float adjust )$/;"	f
Tflag	src/tools/lcc/lburg/lburg.c	/^static int Tflag = 0;$/;"	v	file:
Think_BeginMoving	src/game/g_mover.c	/^void Think_BeginMoving( gentity_t *ent )$/;"	f
Think_CloseModelDoor	src/game/g_mover.c	/^void Think_CloseModelDoor( gentity_t *ent )$/;"	f
Think_ClosedModelDoor	src/game/g_mover.c	/^void Think_ClosedModelDoor( gentity_t *ent )$/;"	f
Think_MatchTeam	src/game/g_mover.c	/^void Think_MatchTeam( gentity_t *ent )$/;"	f
Think_OpenModelDoor	src/game/g_mover.c	/^void Think_OpenModelDoor( gentity_t *ent )$/;"	f
Think_SetupTrainTargets	src/game/g_mover.c	/^void Think_SetupTrainTargets( gentity_t *ent )$/;"	f
Think_SpawnNewDoorTrigger	src/game/g_mover.c	/^void Think_SpawnNewDoorTrigger( gentity_t *ent )$/;"	f
Think_Target_Delay	src/game/g_target.c	/^void Think_Target_Delay( gentity_t *ent )$/;"	f
ToWindowCoords	src/ui/ui_shared.c	/^void ToWindowCoords( float *x, float *y, windowDef_t *window )$/;"	f
Token	src/server/sqlite3.c	/^struct Token {$/;"	s	file:
Token	src/server/sqlite3.c	/^typedef struct Token Token;$/;"	t	typeref:struct:Token	file:
Token	src/tools/lcc/cpp/cpp.h	/^} Token;$/;"	t	typeref:struct:token
TokenCtx	src/server/sqlite3.c	/^struct TokenCtx {$/;"	s	file:
TokenCtx	src/server/sqlite3.c	/^typedef struct TokenCtx TokenCtx;$/;"	t	typeref:struct:TokenCtx	file:
TokenDoclist	src/server/sqlite3.c	/^struct TokenDoclist {$/;"	s	file:
TokenDoclist	src/server/sqlite3.c	/^typedef struct TokenDoclist TokenDoclist;$/;"	t	typeref:struct:TokenDoclist	file:
Tokenrow	src/tools/lcc/cpp/cpp.h	/^} Tokenrow;$/;"	t	typeref:struct:tokenrow
Touch_Button	src/game/g_mover.c	/^void Touch_Button( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
Touch_DoorTrigger	src/game/g_mover.c	/^void Touch_DoorTrigger( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
Touch_Multi	src/game/g_trigger.c	/^void Touch_Multi( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
Touch_Plat	src/game/g_mover.c	/^void Touch_Plat( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
Touch_PlatCenterTrigger	src/game/g_mover.c	/^void Touch_PlatCenterTrigger( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
Transpose	src/renderergl1/tr_curve.c	/^static void Transpose( int width, int height, drawVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {$/;"	f	file:
Transpose	src/renderergl2/tr_curve.c	/^static void Transpose( int width, int height, srfVert_t ctrl[MAX_GRID_SIZE][MAX_GRID_SIZE] ) {$/;"	f	file:
TransposeMatrix	src/qcommon/cm_trace.c	/^void TransposeMatrix(\/*const*\/ vec3_t matrix[3], vec3_t transpose[3]) { \/\/ FIXME$/;"	f
Tree	src/tools/lcc/lburg/lburg.h	/^typedef struct tree *Tree;$/;"	t	typeref:struct:tree
Tree	src/tools/lcc/src/c.h	/^typedef struct tree *Tree;$/;"	t	typeref:struct:tree
TreeView	src/server/sqlite3.c	/^struct TreeView {$/;"	s	file:
TreeView	src/server/sqlite3.c	/^typedef struct TreeView TreeView;$/;"	t	typeref:struct:TreeView	file:
TrigEvent	src/server/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
Trigger	src/server/sqlite3.c	/^struct Trigger {$/;"	s	file:
Trigger	src/server/sqlite3.c	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger	file:
TriggerPrg	src/server/sqlite3.c	/^struct TriggerPrg {$/;"	s	file:
TriggerPrg	src/server/sqlite3.c	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg	file:
TriggerStep	src/server/sqlite3.c	/^struct TriggerStep {$/;"	s	file:
TriggerStep	src/server/sqlite3.c	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep	file:
TryLoadFile	src/tools/asm/cmdlib.c	/^int    TryLoadFile (const char *filename, void **bufferptr)$/;"	f
Type	src/renderercommon/tr_image_png.c	/^	uint32_t Type;$/;"	m	struct:PNG_ChunkHeader	file:
Type	src/tools/lcc/src/c.h	/^typedef struct type *Type;$/;"	t	typeref:struct:type
U	src/tools/lcc/src/c.h	/^	U=UNSIGNED,$/;"	e	enum:__anon286
UAUTH_Admin	src/server/sqlite3.c	12131;"	d	file:
UAUTH_Fail	src/server/sqlite3.c	12129;"	d	file:
UAUTH_Unknown	src/server/sqlite3.c	12128;"	d	file:
UAUTH_User	src/server/sqlite3.c	12130;"	d	file:
UCHAR_MAX	src/game/bg_lib.h	46;"	d
UCTX	src/qcommon/vm_powerpc_asm.c	609;"	d	file:
UCTX_MASK	src/qcommon/vm_powerpc_asm.c	610;"	d	file:
UDIV	src/qcommon/vm_sparc.c	/^	UDIVI, UDIV,$/;"	e	enum:sparc_iname	file:
UDIVI	src/qcommon/vm_sparc.c	/^	UDIVI, UDIV,$/;"	e	enum:sparc_iname	file:
UDPIP6_HEADER_SIZE	src/server/sv_main.c	1139;"	d	file:
UDPIP_HEADER_SIZE	src/server/sv_main.c	1138;"	d	file:
UI	src/qcommon/vm_powerpc_asm.c	387;"	d	file:
UIDIR	GNUmakefile	/^UIDIR=$(MOUNT_DIR)\/ui$/;"	m
UIMENU_INGAME	src/ui/ui_public.h	/^  UIMENU_INGAME$/;"	e	enum:__anon494
UIMENU_MAIN	src/ui/ui_public.h	/^  UIMENU_MAIN,$/;"	e	enum:__anon494
UIMENU_NONE	src/ui/ui_public.h	/^  UIMENU_NONE,$/;"	e	enum:__anon494
UINT16_TYPE	src/server/sqlite3.c	9934;"	d	file:
UINT16_TYPE	src/server/sqlite3.c	9936;"	d	file:
UINT32_TYPE	src/server/sqlite3.c	9927;"	d	file:
UINT32_TYPE	src/server/sqlite3.c	9929;"	d	file:
UINT8_TYPE	src/server/sqlite3.c	9948;"	d	file:
UINT8_TYPE	src/server/sqlite3.c	9950;"	d	file:
UINT_MAX	src/game/bg_lib.h	53;"	d
UIOBJ	GNUmakefile	/^UIOBJ = $(UIOBJ_) $(B)\/ui\/ui_syscalls.o$/;"	m
UIOBJ11_	GNUmakefile	/^UIOBJ11_ = \\$/;"	m
UIOBJ_	GNUmakefile	/^UIOBJ_ = \\$/;"	m
UIVMOBJ	GNUmakefile	/^UIVMOBJ = $(UIOBJ_:%.o=%.asm)$/;"	m
UIVMOBJ11	GNUmakefile	/^UIVMOBJ11 = $(UIOBJ11_:%.o=%.asm)$/;"	m
UI_ABUILDINFOPANE	src/ui/menudef.h	188;"	d
UI_ACLASSINFOPANE	src/ui/menudef.h	183;"	d
UI_API_VERSION	src/ui/ui_public.h	27;"	d
UI_ARGC	src/ui/ui_public.h	/^  UI_ARGC,$/;"	e	enum:__anon493
UI_ARGV	src/ui/ui_public.h	/^  UI_ARGV,$/;"	e	enum:__anon493
UI_ATAN2	src/ui/ui_public.h	/^  UI_ATAN2,$/;"	e	enum:__anon493
UI_AUPGRADEINFOPANE	src/ui/menudef.h	184;"	d
UI_AddCacheEntryLine	src/ui/ui_shared.c	/^static void UI_AddCacheEntryLine( const char *text, float x, float y )$/;"	f	file:
UI_AddClass	src/ui/ui_main.c	/^static void UI_AddClass( class_t class )$/;"	f	file:
UI_AddItem	src/ui/ui_main.c	/^static void UI_AddItem( weapon_t weapon )$/;"	f	file:
UI_AdjustFrom640	src/ui/ui_shared.c	/^void UI_AdjustFrom640( float *x, float *y, float *w, float *h )$/;"	f
UI_Alloc	src/ui/ui_shared.c	/^void *UI_Alloc( int size )$/;"	f
UI_Argv	src/ui/ui_atoms.c	/^char *UI_Argv( int arg )$/;"	f
UI_ArmouryRefreshCb	src/ui/ui_main.c	/^static void UI_ArmouryRefreshCb( void *data )$/;"	f	file:
UI_BIGFONT	src/qcommon/q_shared.h	305;"	d
UI_BLINK	src/qcommon/q_shared.h	308;"	d
UI_BinaryServerInsertion	src/ui/ui_main.c	/^static void UI_BinaryServerInsertion( int num )$/;"	f	file:
UI_BuildFindPlayerList	src/ui/ui_main.c	/^static void UI_BuildFindPlayerList( qboolean force )$/;"	f	file:
UI_BuildPlayerList	src/ui/ui_main.c	/^static void UI_BuildPlayerList( void )$/;"	f	file:
UI_BuildServerDisplayList	src/ui/ui_main.c	/^static void UI_BuildServerDisplayList( int force )$/;"	f	file:
UI_BuildServerStatus	src/ui/ui_main.c	/^static void UI_BuildServerStatus( qboolean force )$/;"	f	file:
UI_CEIL	src/ui/ui_public.h	/^  UI_CEIL$/;"	e	enum:__anon493
UI_CENTER	src/qcommon/q_shared.h	301;"	d
UI_CIN_DRAWCINEMATIC	src/ui/ui_public.h	/^  UI_CIN_DRAWCINEMATIC,$/;"	e	enum:__anon493
UI_CIN_PLAYCINEMATIC	src/ui/ui_public.h	/^  UI_CIN_PLAYCINEMATIC,$/;"	e	enum:__anon493
UI_CIN_RUNCINEMATIC	src/ui/ui_public.h	/^  UI_CIN_RUNCINEMATIC,$/;"	e	enum:__anon493
UI_CIN_SETEXTENTS	src/ui/ui_public.h	/^  UI_CIN_SETEXTENTS,$/;"	e	enum:__anon493
UI_CIN_STOPCINEMATIC	src/ui/ui_public.h	/^  UI_CIN_STOPCINEMATIC,$/;"	e	enum:__anon493
UI_CMD_EXECUTETEXT	src/ui/ui_public.h	/^  UI_CMD_EXECUTETEXT,$/;"	e	enum:__anon493
UI_CM_LERPTAG	src/ui/ui_public.h	/^  UI_CM_LERPTAG,$/;"	e	enum:__anon493
UI_CM_LOADMODEL	src/ui/ui_public.h	/^  UI_CM_LOADMODEL,$/;"	e	enum:__anon493
UI_CONSOLE_COMMAND	src/ui/ui_public.h	/^  UI_CONSOLE_COMMAND,$/;"	e	enum:__anon496
UI_COS	src/ui/ui_public.h	/^  UI_COS,$/;"	e	enum:__anon493
UI_CVAR_CREATE	src/ui/ui_public.h	/^  UI_CVAR_CREATE,$/;"	e	enum:__anon493
UI_CVAR_INFOSTRINGBUFFER	src/ui/ui_public.h	/^  UI_CVAR_INFOSTRINGBUFFER,$/;"	e	enum:__anon493
UI_CVAR_REGISTER	src/ui/ui_public.h	/^  UI_CVAR_REGISTER,$/;"	e	enum:__anon493
UI_CVAR_RESET	src/ui/ui_public.h	/^  UI_CVAR_RESET,$/;"	e	enum:__anon493
UI_CVAR_SET	src/ui/ui_public.h	/^  UI_CVAR_SET,$/;"	e	enum:__anon493
UI_CVAR_SETVALUE	src/ui/ui_public.h	/^  UI_CVAR_SETVALUE,$/;"	e	enum:__anon493
UI_CVAR_UPDATE	src/ui/ui_public.h	/^  UI_CVAR_UPDATE,$/;"	e	enum:__anon493
UI_CVAR_VARIABLESTRINGBUFFER	src/ui/ui_public.h	/^  UI_CVAR_VARIABLESTRINGBUFFER,$/;"	e	enum:__anon493
UI_CVAR_VARIABLEVALUE	src/ui/ui_public.h	/^  UI_CVAR_VARIABLEVALUE,$/;"	e	enum:__anon493
UI_Cache_f	src/ui/ui_atoms.c	/^static void  UI_Cache_f( void )$/;"	f	file:
UI_Char_Width	src/ui/ui_shared.c	/^float UI_Char_Width( const char **text, float scale )$/;"	f
UI_CheckWrapCache	src/ui/ui_shared.c	/^static qboolean UI_CheckWrapCache( const char *text, const rectDef_t *rect, float scale )$/;"	f	file:
UI_ClampCvar	src/ui/ui_atoms.c	/^float UI_ClampCvar( float min, float max, float value )$/;"	f
UI_ClearClipRegion	src/ui/ui_shared.c	/^void UI_ClearClipRegion( void )$/;"	f
UI_CloseMenus_f	src/ui/ui_atoms.c	/^static void UI_CloseMenus_f( void )$/;"	f	file:
UI_ConcatArgs	src/ui/ui_atoms.c	/^char *UI_ConcatArgs( int arg, char *buf, int len )$/;"	f
UI_ConsoleCommand	src/ui/ui_atoms.c	/^qboolean UI_ConsoleCommand( int realTime )$/;"	f
UI_CreateCacheEntry	src/ui/ui_shared.c	/^static void UI_CreateCacheEntry( const char *text, const rectDef_t *rect, float scale )$/;"	f	file:
UI_Cvar_VariableString	src/ui/ui_atoms.c	/^char *UI_Cvar_VariableString( const char *var_name )$/;"	f
UI_DRAW_CONNECT_SCREEN	src/ui/ui_public.h	/^  UI_DRAW_CONNECT_SCREEN$/;"	e	enum:__anon496
UI_DROPSHADOW	src/qcommon/q_shared.h	307;"	d
UI_DisplayAspectString	src/ui/ui_main.c	/^static const char *UI_DisplayAspectString( int w, int h )$/;"	f	file:
UI_DisplayDownloadInfo	src/ui/ui_main.c	/^static void UI_DisplayDownloadInfo( const char *downloadName, float centerPoint, float yStart, float scale )$/;"	f	file:
UI_DoServerRefresh	src/ui/ui_main.c	/^static void UI_DoServerRefresh( void )$/;"	f	file:
UI_DrawCinematic	src/ui/ui_main.c	/^static void UI_DrawCinematic( int handle, float x, float y, float w, float h )$/;"	f	file:
UI_DrawConnectScreen	src/ui/ui_main.c	/^void UI_DrawConnectScreen( qboolean overlay )$/;"	f
UI_DrawGLInfo	src/ui/ui_main.c	/^static void UI_DrawGLInfo( rectDef_t *rect, float scale, int textalign, int textvalign,$/;"	f	file:
UI_DrawHandlePic	src/ui/ui_atoms.c	/^void UI_DrawHandlePic( float x, float y, float w, float h, qhandle_t hShader )$/;"	f
UI_DrawInfoPane	src/ui/ui_main.c	/^static void UI_DrawInfoPane( menuItem_t *item, rectDef_t *rect, float text_x, float text_y,$/;"	f	file:
UI_DrawNamedPic	src/ui/ui_atoms.c	/^void UI_DrawNamedPic( float x, float y, float width, float height, const char *picname )$/;"	f
UI_DrawRect	src/ui/ui_main.c	/^void UI_DrawRect( float x, float y, float width, float height, float size, const float *color )$/;"	f
UI_DrawSelectedMapName	src/ui/ui_main.c	/^static void UI_DrawSelectedMapName( rectDef_t *rect, float scale, vec4_t color, int textStyle )$/;"	f	file:
UI_DrawSelectedMapPreview	src/ui/ui_main.c	/^static void UI_DrawSelectedMapPreview( rectDef_t *rect, float scale, vec4_t color )$/;"	f	file:
UI_DrawServerMapPreview	src/ui/ui_main.c	/^static void UI_DrawServerMapPreview( rectDef_t *rect, float scale, vec4_t color )$/;"	f	file:
UI_DrawSides	src/ui/ui_main.c	/^void UI_DrawSides( float x, float y, float w, float h, float size )$/;"	f
UI_DrawTextBlock	src/ui/ui_shared.c	/^void UI_DrawTextBlock( rectDef_t *rect, float text_x, float text_y, vec4_t color,$/;"	f
UI_DrawTopBottom	src/ui/ui_main.c	/^void UI_DrawTopBottom( float x, float y, float w, float h, float size )$/;"	f
UI_ERROR	src/ui/ui_public.h	/^  UI_ERROR,$/;"	e	enum:__anon493
UI_EmoticonHeight	src/ui/ui_shared.c	/^static ID_INLINE float UI_EmoticonHeight( fontInfo_t *font, float scale )$/;"	f	file:
UI_EmoticonWidth	src/ui/ui_shared.c	/^static ID_INLINE float UI_EmoticonWidth( fontInfo_t *font, float scale )$/;"	f	file:
UI_EscapeEmoticons	src/ui/ui_shared.c	/^void UI_EscapeEmoticons( char *dest, const char *src, int destsize )$/;"	f
UI_FLOOR	src/ui/ui_public.h	/^  UI_FLOOR,$/;"	e	enum:__anon493
UI_FORMATMASK	src/qcommon/q_shared.h	303;"	d
UI_FPS_FRAMES	src/ui/ui_main.c	1143;"	d	file:
UI_FS_FCLOSEFILE	src/ui/ui_public.h	/^  UI_FS_FCLOSEFILE,$/;"	e	enum:__anon493
UI_FS_FOPENFILE	src/ui/ui_public.h	/^  UI_FS_FOPENFILE,$/;"	e	enum:__anon493
UI_FS_GETFILELIST	src/ui/ui_public.h	/^  UI_FS_GETFILELIST,$/;"	e	enum:__anon493
UI_FS_READ	src/ui/ui_public.h	/^  UI_FS_READ,$/;"	e	enum:__anon493
UI_FS_SEEK	src/ui/ui_public.h	/^  UI_FS_SEEK,$/;"	e	enum:__anon493
UI_FS_WRITE	src/ui/ui_public.h	/^  UI_FS_WRITE,$/;"	e	enum:__anon493
UI_FeederCount	src/ui/ui_main.c	/^static int UI_FeederCount( int feederID )$/;"	f	file:
UI_FeederInitialise	src/ui/ui_main.c	/^static int UI_FeederInitialise( int feederID )$/;"	f	file:
UI_FeederItemImage	src/ui/ui_main.c	/^static qhandle_t UI_FeederItemImage( int feederID, int index )$/;"	f	file:
UI_FeederItemText	src/ui/ui_main.c	/^static const char *UI_FeederItemText( int feederID, int index, int column, qhandle_t *handle )$/;"	f	file:
UI_FeederSelection	src/ui/ui_main.c	/^static void UI_FeederSelection( int feederID, int index )$/;"	f	file:
UI_FillRect	src/ui/ui_atoms.c	/^void UI_FillRect( float x, float y, float width, float height, const float *color )$/;"	f
UI_FinishCacheEntry	src/ui/ui_shared.c	/^static void UI_FinishCacheEntry( void )$/;"	f	file:
UI_FontForScale	src/ui/ui_shared.c	/^static ID_INLINE fontInfo_t *UI_FontForScale( float scale )$/;"	f	file:
UI_GETAPIVERSION	src/ui/ui_public.h	/^  UI_GETAPIVERSION = 0, \/\/ system reserved$/;"	e	enum:__anon496
UI_GETCLIENTSTATE	src/ui/ui_public.h	/^  UI_GETCLIENTSTATE,$/;"	e	enum:__anon493
UI_GETCLIPBOARDDATA	src/ui/ui_public.h	/^  UI_GETCLIPBOARDDATA,$/;"	e	enum:__anon493
UI_GETCONFIGSTRING	src/ui/ui_public.h	/^  UI_GETCONFIGSTRING,$/;"	e	enum:__anon493
UI_GETGLCONFIG	src/ui/ui_public.h	/^  UI_GETGLCONFIG,$/;"	e	enum:__anon493
UI_GETNEWS	src/ui/ui_public.h	/^  UI_GETNEWS,$/;"	e	enum:__anon493
UI_GIANTFONT	src/qcommon/q_shared.h	306;"	d
UI_GLINFO	src/ui/menudef.h	177;"	d
UI_GameCommand	src/client/cl_ui.c	/^qboolean UI_GameCommand( void ) {$/;"	f
UI_GameCommand	src/null/null_client.c	/^qboolean UI_GameCommand( void ) {$/;"	f
UI_GameIsInWarmup	src/ui/ui_main.c	/^static int UI_GameIsInWarmup( void )$/;"	f	file:
UI_GetBotInfoByName	src/ui/ui_gameinfo.c	/^char *UI_GetBotInfoByName( const char *name )$/;"	f
UI_GetBotInfoByNumber	src/ui/ui_gameinfo.c	/^char *UI_GetBotInfoByNumber( int num )$/;"	f
UI_GetBotNameByNumber	src/ui/ui_gameinfo.c	/^char *UI_GetBotNameByNumber( int num )$/;"	f
UI_GetCurrentAlienStage	src/ui/ui_main.c	/^static stage_t UI_GetCurrentAlienStage( void )$/;"	f	file:
UI_GetCurrentHumanStage	src/ui/ui_main.c	/^static stage_t UI_GetCurrentHumanStage( void )$/;"	f	file:
UI_GetNumBots	src/ui/ui_gameinfo.c	/^int UI_GetNumBots( void )$/;"	f
UI_GetServerStatusInfo	src/ui/ui_main.c	/^static int UI_GetServerStatusInfo( const char *serverAddress, serverStatusInfo_t *info )$/;"	f	file:
UI_GetValue	src/ui/ui_main.c	/^static float UI_GetValue( int ownerDraw )$/;"	f	file:
UI_HBUILDINFOPANE	src/ui/menudef.h	189;"	d
UI_HBUYINFOPANE	src/ui/menudef.h	186;"	d
UI_HELPINFOPANE	src/ui/menudef.h	190;"	d
UI_HITEMINFOPANE	src/ui/menudef.h	185;"	d
UI_HSELLINFOPANE	src/ui/menudef.h	187;"	d
UI_INIT	src/ui/ui_public.h	/^  UI_INIT,$/;"	e	enum:__anon496
UI_INVERSE	src/qcommon/q_shared.h	309;"	d
UI_IS_FULLSCREEN	src/ui/ui_public.h	/^  UI_IS_FULLSCREEN,$/;"	e	enum:__anon496
UI_Init	src/ui/ui_main.c	/^void UI_Init( qboolean inGameLoad )$/;"	f
UI_InitMemory	src/ui/ui_shared.c	/^void UI_InitMemory( void )$/;"	f
UI_InsertServerIntoDisplayList	src/ui/ui_main.c	/^static void UI_InsertServerIntoDisplayList( int num, int position )$/;"	f	file:
UI_InstallCaptureFunc	src/ui/ui_shared.c	/^void UI_InstallCaptureFunc( CaptureFunc *f, void *data, int timeout )$/;"	f
UI_IsFullscreen	src/ui/ui_main.c	/^qboolean UI_IsFullscreen( void )$/;"	f
UI_KEYBINDSTATUS	src/ui/menudef.h	178;"	d
UI_KEY_CLEARSTATES	src/ui/ui_public.h	/^  UI_KEY_CLEARSTATES,$/;"	e	enum:__anon493
UI_KEY_EVENT	src/ui/ui_public.h	/^  UI_KEY_EVENT,$/;"	e	enum:__anon496
UI_KEY_GETBINDINGBUF	src/ui/ui_public.h	/^  UI_KEY_GETBINDINGBUF,$/;"	e	enum:__anon493
UI_KEY_GETCATCHER	src/ui/ui_public.h	/^  UI_KEY_GETCATCHER,$/;"	e	enum:__anon493
UI_KEY_GETOVERSTRIKEMODE	src/ui/ui_public.h	/^  UI_KEY_GETOVERSTRIKEMODE,$/;"	e	enum:__anon493
UI_KEY_ISDOWN	src/ui/ui_public.h	/^  UI_KEY_ISDOWN,$/;"	e	enum:__anon493
UI_KEY_KEYNUMTOSTRINGBUF	src/ui/ui_public.h	/^  UI_KEY_KEYNUMTOSTRINGBUF,$/;"	e	enum:__anon493
UI_KEY_SETBINDING	src/ui/ui_public.h	/^  UI_KEY_SETBINDING,$/;"	e	enum:__anon493
UI_KEY_SETCATCHER	src/ui/ui_public.h	/^  UI_KEY_SETCATCHER,$/;"	e	enum:__anon493
UI_KEY_SETOVERSTRIKEMODE	src/ui/ui_public.h	/^  UI_KEY_SETOVERSTRIKEMODE,$/;"	e	enum:__anon493
UI_KeyEvent	src/ui/ui_main.c	/^void UI_KeyEvent( int key, qboolean down )$/;"	f
UI_LAN_ADDSERVER	src/ui/ui_public.h	/^  UI_LAN_ADDSERVER,$/;"	e	enum:__anon493
UI_LAN_CLEARPING	src/ui/ui_public.h	/^  UI_LAN_CLEARPING,$/;"	e	enum:__anon493
UI_LAN_COMPARESERVERS	src/ui/ui_public.h	/^  UI_LAN_COMPARESERVERS,$/;"	e	enum:__anon493
UI_LAN_GETPING	src/ui/ui_public.h	/^  UI_LAN_GETPING,$/;"	e	enum:__anon493
UI_LAN_GETPINGINFO	src/ui/ui_public.h	/^  UI_LAN_GETPINGINFO,$/;"	e	enum:__anon493
UI_LAN_GETPINGQUEUECOUNT	src/ui/ui_public.h	/^  UI_LAN_GETPINGQUEUECOUNT,$/;"	e	enum:__anon493
UI_LAN_GETSERVERADDRESSSTRING	src/ui/ui_public.h	/^  UI_LAN_GETSERVERADDRESSSTRING,$/;"	e	enum:__anon493
UI_LAN_GETSERVERCOUNT	src/ui/ui_public.h	/^  UI_LAN_GETSERVERCOUNT,$/;"	e	enum:__anon493
UI_LAN_GETSERVERINFO	src/ui/ui_public.h	/^  UI_LAN_GETSERVERINFO,$/;"	e	enum:__anon493
UI_LAN_GETSERVERPING	src/ui/ui_public.h	/^  UI_LAN_GETSERVERPING,$/;"	e	enum:__anon493
UI_LAN_LOADCACHEDSERVERS	src/ui/ui_public.h	/^  UI_LAN_LOADCACHEDSERVERS,$/;"	e	enum:__anon493
UI_LAN_MARKSERVERVISIBLE	src/ui/ui_public.h	/^  UI_LAN_MARKSERVERVISIBLE,$/;"	e	enum:__anon493
UI_LAN_REMOVESERVER	src/ui/ui_public.h	/^  UI_LAN_REMOVESERVER,$/;"	e	enum:__anon493
UI_LAN_RESETPINGS	src/ui/ui_public.h	/^  UI_LAN_RESETPINGS,$/;"	e	enum:__anon493
UI_LAN_SAVECACHEDSERVERS	src/ui/ui_public.h	/^  UI_LAN_SAVECACHEDSERVERS,$/;"	e	enum:__anon493
UI_LAN_SERVERISVISIBLE	src/ui/ui_public.h	/^  UI_LAN_SERVERISVISIBLE,$/;"	e	enum:__anon493
UI_LAN_SERVERSTATUS	src/ui/ui_public.h	/^  UI_LAN_SERVERSTATUS,$/;"	e	enum:__anon493
UI_LAN_UPDATEVISIBLEPINGS	src/ui/ui_public.h	/^  UI_LAN_UPDATEVISIBLEPINGS,$/;"	e	enum:__anon493
UI_LEFT	src/qcommon/q_shared.h	300;"	d
UI_LOCAL_H	src/ui/ui_local.h	25;"	d
UI_Load	src/ui/ui_main.c	/^void UI_Load( void )$/;"	f
UI_LoadAlienBuilds	src/ui/ui_main.c	/^static void UI_LoadAlienBuilds( void )$/;"	f	file:
UI_LoadAlienClasses	src/ui/ui_main.c	/^static void UI_LoadAlienClasses( void )$/;"	f	file:
UI_LoadAlienUpgrades	src/ui/ui_main.c	/^static void UI_LoadAlienUpgrades( void )$/;"	f	file:
UI_LoadArenas	src/ui/ui_gameinfo.c	/^void UI_LoadArenas( void )$/;"	f
UI_LoadArenasFromFile	src/ui/ui_gameinfo.c	/^static void UI_LoadArenasFromFile( char *filename )$/;"	f	file:
UI_LoadBots	src/ui/ui_gameinfo.c	/^void UI_LoadBots( void )$/;"	f
UI_LoadBotsFromFile	src/ui/ui_gameinfo.c	/^static void UI_LoadBotsFromFile( char *filename )$/;"	f	file:
UI_LoadDemos	src/ui/ui_main.c	/^static void UI_LoadDemos( void )$/;"	f	file:
UI_LoadHelp	src/ui/ui_main.c	/^void UI_LoadHelp( const char *helpFile )$/;"	f
UI_LoadHumanArmouryBuys	src/ui/ui_main.c	/^static void UI_LoadHumanArmouryBuys( void )$/;"	f	file:
UI_LoadHumanArmourySells	src/ui/ui_main.c	/^static void UI_LoadHumanArmourySells( void )$/;"	f	file:
UI_LoadHumanBuilds	src/ui/ui_main.c	/^static void UI_LoadHumanBuilds( void )$/;"	f	file:
UI_LoadHumanItems	src/ui/ui_main.c	/^static void UI_LoadHumanItems( void )$/;"	f	file:
UI_LoadMenus	src/ui/ui_main.c	/^void UI_LoadMenus( const char *menuFile, qboolean reset )$/;"	f
UI_LoadMods	src/ui/ui_main.c	/^static void UI_LoadMods( void )$/;"	f	file:
UI_LoadMovies	src/ui/ui_main.c	/^static void UI_LoadMovies( void )$/;"	f	file:
UI_LoadTeams	src/ui/ui_main.c	/^static void UI_LoadTeams( void )$/;"	f	file:
UI_MEMCPY	src/ui/ui_public.h	/^  UI_MEMCPY,$/;"	e	enum:__anon493
UI_MEMORY_REMAINING	src/ui/ui_public.h	/^  UI_MEMORY_REMAINING,$/;"	e	enum:__anon493
UI_MEMSET	src/ui/ui_public.h	/^  UI_MEMSET = 100,$/;"	e	enum:__anon493
UI_MILLISECONDS	src/ui/ui_public.h	/^  UI_MILLISECONDS,$/;"	e	enum:__anon493
UI_MOUSE_EVENT	src/ui/ui_public.h	/^  UI_MOUSE_EVENT,$/;"	e	enum:__anon496
UI_MOUSE_POSITION	src/ui/ui_public.h	/^  UI_MOUSE_POSITION,$/;"	e	enum:__anon496
UI_MapNameCompare	src/ui/ui_gameinfo.c	/^static int UI_MapNameCompare( const void *a, const void *b )$/;"	f	file:
UI_Me_f	src/ui/ui_atoms.c	/^static void UI_Me_f( void )$/;"	f	file:
UI_Menu_f	src/ui/ui_atoms.c	/^static void UI_Menu_f( void )$/;"	f	file:
UI_MessageMode_f	src/ui/ui_atoms.c	/^static void UI_MessageMode_f( void )$/;"	f	file:
UI_MouseEvent	src/ui/ui_main.c	/^void UI_MouseEvent( int dx, int dy )$/;"	f
UI_MousePosition	src/ui/ui_main.c	/^int UI_MousePosition( void )$/;"	f
UI_NETMAPCINEMATIC	src/ui/menudef.h	174;"	d
UI_NETMAPPREVIEW	src/ui/menudef.h	173;"	d
UI_NETSOURCE	src/ui/menudef.h	172;"	d
UI_NetSource_HandleKey	src/ui/ui_main.c	/^static qboolean UI_NetSource_HandleKey( int key )$/;"	f	file:
UI_NextWrapLine	src/ui/ui_shared.c	/^static qboolean UI_NextWrapLine( const char **text, float *x, float *y )$/;"	f	file:
UI_OutOfMemory	src/ui/ui_shared.c	/^qboolean UI_OutOfMemory( )$/;"	f
UI_OwnerDraw	src/ui/ui_main.c	/^static void UI_OwnerDraw( float x, float y, float w, float h,$/;"	f	file:
UI_OwnerDrawHandleKey	src/ui/ui_main.c	/^static qboolean UI_OwnerDrawHandleKey( int ownerDraw, int key )$/;"	f	file:
UI_OwnerDrawText	src/ui/ui_main.c	/^static const char *UI_OwnerDrawText( int ownerDraw )$/;"	f	file:
UI_OwnerDrawVisible	src/ui/ui_main.c	/^static qboolean UI_OwnerDrawVisible( int flags )$/;"	f	file:
UI_OwnerDrawWidth	src/ui/ui_main.c	/^static int UI_OwnerDrawWidth( int ownerDraw, float scale )$/;"	f	file:
UI_PARSE_ADD_GLOBAL_DEFINE	src/ui/ui_public.h	/^  UI_PARSE_ADD_GLOBAL_DEFINE,$/;"	e	enum:__anon493
UI_PARSE_FREE_SOURCE	src/ui/ui_public.h	/^  UI_PARSE_FREE_SOURCE,$/;"	e	enum:__anon493
UI_PARSE_LOAD_SOURCE	src/ui/ui_public.h	/^  UI_PARSE_LOAD_SOURCE,$/;"	e	enum:__anon493
UI_PARSE_READ_TOKEN	src/ui/ui_public.h	/^  UI_PARSE_READ_TOKEN,$/;"	e	enum:__anon493
UI_PARSE_SOURCE_FILE_AND_LINE	src/ui/ui_public.h	/^  UI_PARSE_SOURCE_FILE_AND_LINE,$/;"	e	enum:__anon493
UI_PRINT	src/ui/ui_public.h	/^  UI_PRINT,$/;"	e	enum:__anon493
UI_PUBLIC_H	src/ui/ui_public.h	25;"	d
UI_PULSE	src/qcommon/q_shared.h	310;"	d
UI_ParseCarriageList	src/ui/ui_main.c	/^static void UI_ParseCarriageList( void )$/;"	f	file:
UI_ParseInfos	src/ui/ui_gameinfo.c	/^int UI_ParseInfos( char *buf, int max, char *infos[] )$/;"	f
UI_ParseMenu	src/ui/ui_main.c	/^void UI_ParseMenu( const char *menuFile )$/;"	f
UI_ParseResolutions	src/ui/ui_main.c	/^void UI_ParseResolutions( void )$/;"	f
UI_Parse_Indent	src/ui/ui_shared.c	/^static float UI_Parse_Indent( const char **text )$/;"	f	file:
UI_Pause	src/ui/ui_main.c	/^static void UI_Pause( qboolean b )$/;"	f	file:
UI_PlayCinematic	src/ui/ui_main.c	/^static int UI_PlayCinematic( const char *name, float x, float y, float w, float h )$/;"	f	file:
UI_PrintTime	src/ui/ui_main.c	/^static void UI_PrintTime ( char *buf, int bufsize, int time )$/;"	f	file:
UI_REAL_TIME	src/ui/ui_public.h	/^  UI_REAL_TIME,$/;"	e	enum:__anon493
UI_REFRESH	src/ui/ui_public.h	/^  UI_REFRESH,$/;"	e	enum:__anon496
UI_RIGHT	src/qcommon/q_shared.h	302;"	d
UI_R_ADDLIGHTTOSCENE	src/ui/ui_public.h	/^  UI_R_ADDLIGHTTOSCENE,$/;"	e	enum:__anon493
UI_R_ADDPOLYTOSCENE	src/ui/ui_public.h	/^  UI_R_ADDPOLYTOSCENE,$/;"	e	enum:__anon493
UI_R_ADDREFENTITYTOSCENE	src/ui/ui_public.h	/^  UI_R_ADDREFENTITYTOSCENE,$/;"	e	enum:__anon493
UI_R_CLEARSCENE	src/ui/ui_public.h	/^  UI_R_CLEARSCENE,$/;"	e	enum:__anon493
UI_R_DRAWSTRETCHPIC	src/ui/ui_public.h	/^  UI_R_DRAWSTRETCHPIC,$/;"	e	enum:__anon493
UI_R_MODELBOUNDS	src/ui/ui_public.h	/^  UI_R_MODELBOUNDS,$/;"	e	enum:__anon493
UI_R_REGISTERFONT	src/ui/ui_public.h	/^  UI_R_REGISTERFONT,$/;"	e	enum:__anon493
UI_R_REGISTERMODEL	src/ui/ui_public.h	/^  UI_R_REGISTERMODEL,$/;"	e	enum:__anon493
UI_R_REGISTERSHADERNOMIP	src/ui/ui_public.h	/^  UI_R_REGISTERSHADERNOMIP,$/;"	e	enum:__anon493
UI_R_REGISTERSKIN	src/ui/ui_public.h	/^  UI_R_REGISTERSKIN,$/;"	e	enum:__anon493
UI_R_REMAP_SHADER	src/ui/ui_public.h	/^  UI_R_REMAP_SHADER,$/;"	e	enum:__anon493
UI_R_RENDERSCENE	src/ui/ui_public.h	/^  UI_R_RENDERSCENE,$/;"	e	enum:__anon493
UI_R_SETCLIPREGION	src/ui/ui_public.h	/^  UI_R_SETCLIPREGION,$/;"	e	enum:__anon493
UI_R_SETCOLOR	src/ui/ui_public.h	/^  UI_R_SETCOLOR,$/;"	e	enum:__anon493
UI_ReadableSize	src/ui/ui_main.c	/^static void UI_ReadableSize ( char *buf, int bufsize, int value )$/;"	f	file:
UI_Refresh	src/ui/ui_main.c	/^void UI_Refresh( int realtime )$/;"	f
UI_RegisterCvars	src/ui/ui_main.c	/^void UI_RegisterCvars( void )$/;"	f
UI_RemoveCaptureFunc	src/ui/ui_shared.c	/^void UI_RemoveCaptureFunc( void )$/;"	f
UI_RemoveServerFromDisplayList	src/ui/ui_main.c	/^static void UI_RemoveServerFromDisplayList( int num )$/;"	f	file:
UI_Report	src/ui/ui_main.c	/^void UI_Report( void )$/;"	f
UI_RunCinematicFrame	src/ui/ui_main.c	/^static void UI_RunCinematicFrame( int handle )$/;"	f	file:
UI_RunMenuScript	src/ui/ui_main.c	/^static void UI_RunMenuScript( char **args )$/;"	f	file:
UI_SELECTEDMAPNAME	src/ui/menudef.h	180;"	d
UI_SELECTEDMAPPREVIEW	src/ui/menudef.h	179;"	d
UI_SERVERMOTD	src/ui/menudef.h	176;"	d
UI_SERVERREFRESHDATE	src/ui/menudef.h	175;"	d
UI_SET_ACTIVE_MENU	src/ui/ui_public.h	/^  UI_SET_ACTIVE_MENU,$/;"	e	enum:__anon496
UI_SET_MOUSE_POSITION	src/ui/ui_public.h	/^  UI_SET_MOUSE_POSITION,$/;"	e	enum:__anon496
UI_SET_PBCLSTATUS	src/ui/ui_public.h	/^  UI_SET_PBCLSTATUS,$/;"	e	enum:__anon493
UI_SHOW_CANTEAMVOTE	src/ui/menudef.h	100;"	d
UI_SHOW_CANVOTE	src/ui/menudef.h	98;"	d
UI_SHOW_FAVORITESERVERS	src/ui/menudef.h	94;"	d
UI_SHOW_NOTFAVORITESERVERS	src/ui/menudef.h	95;"	d
UI_SHOW_NOTSPECTATING	src/ui/menudef.h	102;"	d
UI_SHOW_TEAMVOTEACTIVE	src/ui/menudef.h	99;"	d
UI_SHOW_VOTEACTIVE	src/ui/menudef.h	97;"	d
UI_SHUTDOWN	src/ui/ui_public.h	/^  UI_SHUTDOWN,$/;"	e	enum:__anon496
UI_SIN	src/ui/ui_public.h	/^  UI_SIN,$/;"	e	enum:__anon493
UI_SMALLFONT	src/qcommon/q_shared.h	304;"	d
UI_SQRT	src/ui/ui_public.h	/^  UI_SQRT,$/;"	e	enum:__anon493
UI_STRNCPY	src/ui/ui_public.h	/^  UI_STRNCPY,$/;"	e	enum:__anon493
UI_S_REGISTERSOUND	src/ui/ui_public.h	/^  UI_S_REGISTERSOUND,$/;"	e	enum:__anon493
UI_S_STARTBACKGROUNDTRACK	src/ui/ui_public.h	/^  UI_S_STARTBACKGROUNDTRACK,$/;"	e	enum:__anon493
UI_S_STARTLOCALSOUND	src/ui/ui_public.h	/^  UI_S_STARTLOCALSOUND,$/;"	e	enum:__anon493
UI_S_STOPBACKGROUNDTRACK	src/ui/ui_public.h	/^  UI_S_STOPBACKGROUNDTRACK,$/;"	e	enum:__anon493
UI_SelectedMap	src/ui/ui_main.c	/^static const char *UI_SelectedMap( int index, int *actual )$/;"	f	file:
UI_ServerInfo	src/ui/ui_gameinfo.c	/^void UI_ServerInfo( void )$/;"	f
UI_ServerInfoIsValid	src/ui/ui_main.c	/^static qboolean UI_ServerInfoIsValid( char *info )$/;"	f	file:
UI_ServersQsortCompare	src/ui/ui_main.c	/^static int QDECL UI_ServersQsortCompare( const void *arg1, const void *arg2 )$/;"	f	file:
UI_ServersSort	src/ui/ui_main.c	/^void UI_ServersSort( int column, qboolean force )$/;"	f
UI_SetActiveMenu	src/ui/ui_main.c	/^void UI_SetActiveMenu( uiMenuCommand_t menu )$/;"	f
UI_SetClipRegion	src/ui/ui_shared.c	/^void UI_SetClipRegion( float x, float y, float w, float h )$/;"	f
UI_SetColor	src/ui/ui_atoms.c	/^void UI_SetColor( const float *rgba )$/;"	f
UI_SetMousePosition	src/ui/ui_main.c	/^void UI_SetMousePosition( int x, int y )$/;"	f
UI_Shutdown	src/ui/ui_main.c	/^void UI_Shutdown( void )$/;"	f
UI_SortServerStatusCompare	src/ui/ui_main.c	/^static int UI_SortServerStatusCompare( const void *a, const void *b )$/;"	f	file:
UI_SortServerStatusInfo	src/ui/ui_main.c	/^static void UI_SortServerStatusInfo( serverStatusInfo_t *info )$/;"	f	file:
UI_StartDemoLoop	src/ui/ui_atoms.c	/^void UI_StartDemoLoop( void )$/;"	f
UI_StartServerRefresh	src/ui/ui_main.c	/^static void UI_StartServerRefresh( qboolean full )$/;"	f	file:
UI_StopCinematic	src/ui/ui_main.c	/^static void UI_StopCinematic( int handle )$/;"	f	file:
UI_StopServerRefresh	src/ui/ui_main.c	/^static void UI_StopServerRefresh( void )$/;"	f	file:
UI_TEAMINFOPANE	src/ui/menudef.h	182;"	d
UI_Text_EmHeight	src/ui/ui_shared.c	/^float UI_Text_EmHeight( float scale )$/;"	f
UI_Text_EmWidth	src/ui/ui_shared.c	/^float UI_Text_EmWidth( float scale )$/;"	f
UI_Text_Height	src/ui/ui_shared.c	/^float UI_Text_Height( const char *text, float scale )$/;"	f
UI_Text_IsEmoticon	src/ui/ui_shared.c	/^qboolean UI_Text_IsEmoticon( const char *s, qboolean *escaped,$/;"	f
UI_Text_Paint	src/ui/ui_shared.c	/^void UI_Text_Paint( float x, float y, float scale, vec4_t color, const char *text,$/;"	f
UI_Text_PaintChar	src/ui/ui_shared.c	/^static void UI_Text_PaintChar( float x, float y, float scale,$/;"	f	file:
UI_Text_PaintWithCursor	src/ui/ui_shared.c	/^void UI_Text_PaintWithCursor( float x, float y, float scale, vec4_t color, const char *text,$/;"	f
UI_Text_Paint_Generic	src/ui/ui_shared.c	/^static void UI_Text_Paint_Generic( float x, float y, float scale, float gapAdjust,$/;"	f	file:
UI_Text_Paint_Limit	src/ui/ui_shared.c	/^void UI_Text_Paint_Limit( float *maxX, float x, float y, float scale,$/;"	f
UI_Text_Width	src/ui/ui_shared.c	/^float UI_Text_Width( const char *text, float scale )$/;"	f
UI_UPDATESCREEN	src/ui/ui_public.h	/^  UI_UPDATESCREEN,$/;"	e	enum:__anon493
UI_Update	src/ui/ui_main.c	/^static void UI_Update( const char *name )$/;"	f	file:
UI_UpdateCvars	src/ui/ui_main.c	/^void UI_UpdateCvars( void )$/;"	f
UI_UpdateNews	src/ui/ui_main.c	/^void UI_UpdateNews( qboolean begin )$/;"	f
UI_UpdatePendingPings	src/ui/ui_main.c	/^static void UI_UpdatePendingPings( void )$/;"	f	file:
UI_memoryPool	src/ui/ui_shared.c	/^static char   UI_memoryPool[MEM_POOL_SIZE];$/;"	v	file:
ULONG_MAX	src/game/bg_lib.h	56;"	d
UMINUS	src/tools/lcc/cpp/cpp.h	/^		DSHARP1, NAME1, DEFINED, UMINUS };$/;"	e	enum:toktype
UMUL	src/qcommon/vm_sparc.c	/^	UMULI, UMUL,$/;"	e	enum:sparc_iname	file:
UMULI	src/qcommon/vm_sparc.c	/^	UMULI, UMUL,$/;"	e	enum:sparc_iname	file:
UNARY	src/tools/lcc/cpp/eval.c	23;"	d	file:
UNCLASS	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
UND	src/tools/lcc/cpp/eval.c	8;"	d	file:
UNICODE_STRING_MAX_CHARS	src/server/sqlite3.c	35418;"	d	file:
UNIFORM_ALPHAGEN	src/renderergl2/tr_local.h	/^	UNIFORM_ALPHAGEN,$/;"	e	enum:__anon38
UNIFORM_AMBIENTLIGHT	src/renderergl2/tr_local.h	/^	UNIFORM_AMBIENTLIGHT,$/;"	e	enum:__anon38
UNIFORM_AUTOEXPOSUREMINMAX	src/renderergl2/tr_local.h	/^	UNIFORM_AUTOEXPOSUREMINMAX,$/;"	e	enum:__anon38
UNIFORM_BASECOLOR	src/renderergl2/tr_local.h	/^	UNIFORM_BASECOLOR,$/;"	e	enum:__anon38
UNIFORM_COLOR	src/renderergl2/tr_local.h	/^	UNIFORM_COLOR,$/;"	e	enum:__anon38
UNIFORM_COLORGEN	src/renderergl2/tr_local.h	/^	UNIFORM_COLORGEN,$/;"	e	enum:__anon38
UNIFORM_COUNT	src/renderergl2/tr_local.h	/^	UNIFORM_COUNT$/;"	e	enum:__anon38
UNIFORM_CUBEMAP	src/renderergl2/tr_local.h	/^	UNIFORM_CUBEMAP,$/;"	e	enum:__anon38
UNIFORM_CUBEMAPINFO	src/renderergl2/tr_local.h	/^	UNIFORM_CUBEMAPINFO,$/;"	e	enum:__anon38
UNIFORM_DEFORMGEN	src/renderergl2/tr_local.h	/^	UNIFORM_DEFORMGEN,$/;"	e	enum:__anon38
UNIFORM_DEFORMPARAMS	src/renderergl2/tr_local.h	/^	UNIFORM_DEFORMPARAMS,$/;"	e	enum:__anon38
UNIFORM_DELUXEMAP	src/renderergl2/tr_local.h	/^	UNIFORM_DELUXEMAP,$/;"	e	enum:__anon38
UNIFORM_DIFFUSEMAP	src/renderergl2/tr_local.h	/^	UNIFORM_DIFFUSEMAP = 0,$/;"	e	enum:__anon38
UNIFORM_DIFFUSETEXMATRIX	src/renderergl2/tr_local.h	/^	UNIFORM_DIFFUSETEXMATRIX,$/;"	e	enum:__anon38
UNIFORM_DIFFUSETEXOFFTURB	src/renderergl2/tr_local.h	/^	UNIFORM_DIFFUSETEXOFFTURB,$/;"	e	enum:__anon38
UNIFORM_DIRECTEDLIGHT	src/renderergl2/tr_local.h	/^	UNIFORM_DIRECTEDLIGHT,$/;"	e	enum:__anon38
UNIFORM_DLIGHTINFO	src/renderergl2/tr_local.h	/^	UNIFORM_DLIGHTINFO,$/;"	e	enum:__anon38
UNIFORM_ENABLETEXTURES	src/renderergl2/tr_local.h	/^	UNIFORM_ENABLETEXTURES,$/;"	e	enum:__anon38
UNIFORM_FOGCOLORMASK	src/renderergl2/tr_local.h	/^	UNIFORM_FOGCOLORMASK,$/;"	e	enum:__anon38
UNIFORM_FOGDEPTH	src/renderergl2/tr_local.h	/^	UNIFORM_FOGDEPTH,$/;"	e	enum:__anon38
UNIFORM_FOGDISTANCE	src/renderergl2/tr_local.h	/^	UNIFORM_FOGDISTANCE,$/;"	e	enum:__anon38
UNIFORM_FOGEYET	src/renderergl2/tr_local.h	/^	UNIFORM_FOGEYET,$/;"	e	enum:__anon38
UNIFORM_INVTEXRES	src/renderergl2/tr_local.h	/^	UNIFORM_INVTEXRES,$/;"	e	enum:__anon38
UNIFORM_LEVELSMAP	src/renderergl2/tr_local.h	/^	UNIFORM_LEVELSMAP,$/;"	e	enum:__anon38
UNIFORM_LIGHTFORWARD	src/renderergl2/tr_local.h	/^	UNIFORM_LIGHTFORWARD,$/;"	e	enum:__anon38
UNIFORM_LIGHTMAP	src/renderergl2/tr_local.h	/^	UNIFORM_LIGHTMAP,$/;"	e	enum:__anon38
UNIFORM_LIGHTORIGIN	src/renderergl2/tr_local.h	/^	UNIFORM_LIGHTORIGIN,$/;"	e	enum:__anon38
UNIFORM_LIGHTRADIUS	src/renderergl2/tr_local.h	/^	UNIFORM_LIGHTRADIUS,$/;"	e	enum:__anon38
UNIFORM_LIGHTRIGHT	src/renderergl2/tr_local.h	/^	UNIFORM_LIGHTRIGHT,$/;"	e	enum:__anon38
UNIFORM_LIGHTUP	src/renderergl2/tr_local.h	/^	UNIFORM_LIGHTUP,$/;"	e	enum:__anon38
UNIFORM_LOCALVIEWORIGIN	src/renderergl2/tr_local.h	/^	UNIFORM_LOCALVIEWORIGIN,$/;"	e	enum:__anon38
UNIFORM_MODELLIGHTDIR	src/renderergl2/tr_local.h	/^	UNIFORM_MODELLIGHTDIR,$/;"	e	enum:__anon38
UNIFORM_MODELMATRIX	src/renderergl2/tr_local.h	/^	UNIFORM_MODELMATRIX,$/;"	e	enum:__anon38
UNIFORM_MODELVIEWPROJECTIONMATRIX	src/renderergl2/tr_local.h	/^	UNIFORM_MODELVIEWPROJECTIONMATRIX,$/;"	e	enum:__anon38
UNIFORM_NORMALMAP	src/renderergl2/tr_local.h	/^	UNIFORM_NORMALMAP,$/;"	e	enum:__anon38
UNIFORM_NORMALSCALE	src/renderergl2/tr_local.h	/^	UNIFORM_NORMALSCALE,$/;"	e	enum:__anon38
UNIFORM_PORTALRANGE	src/renderergl2/tr_local.h	/^	UNIFORM_PORTALRANGE,$/;"	e	enum:__anon38
UNIFORM_PRIMARYLIGHTAMBIENT	src/renderergl2/tr_local.h	/^	UNIFORM_PRIMARYLIGHTAMBIENT,$/;"	e	enum:__anon38
UNIFORM_PRIMARYLIGHTCOLOR	src/renderergl2/tr_local.h	/^	UNIFORM_PRIMARYLIGHTCOLOR,$/;"	e	enum:__anon38
UNIFORM_PRIMARYLIGHTORIGIN	src/renderergl2/tr_local.h	/^	UNIFORM_PRIMARYLIGHTORIGIN,$/;"	e	enum:__anon38
UNIFORM_PRIMARYLIGHTRADIUS	src/renderergl2/tr_local.h	/^	UNIFORM_PRIMARYLIGHTRADIUS,$/;"	e	enum:__anon38
UNIFORM_SCREENDEPTHMAP	src/renderergl2/tr_local.h	/^	UNIFORM_SCREENDEPTHMAP,$/;"	e	enum:__anon38
UNIFORM_SCREENIMAGEMAP	src/renderergl2/tr_local.h	/^	UNIFORM_SCREENIMAGEMAP,$/;"	e	enum:__anon38
UNIFORM_SHADOWMAP	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMAP,$/;"	e	enum:__anon38
UNIFORM_SHADOWMAP2	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMAP2,$/;"	e	enum:__anon38
UNIFORM_SHADOWMAP3	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMAP3,$/;"	e	enum:__anon38
UNIFORM_SHADOWMAP4	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMAP4,$/;"	e	enum:__anon38
UNIFORM_SHADOWMVP	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMVP,$/;"	e	enum:__anon38
UNIFORM_SHADOWMVP2	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMVP2,$/;"	e	enum:__anon38
UNIFORM_SHADOWMVP3	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMVP3,$/;"	e	enum:__anon38
UNIFORM_SHADOWMVP4	src/renderergl2/tr_local.h	/^	UNIFORM_SHADOWMVP4,$/;"	e	enum:__anon38
UNIFORM_SPECULARMAP	src/renderergl2/tr_local.h	/^	UNIFORM_SPECULARMAP,$/;"	e	enum:__anon38
UNIFORM_SPECULARSCALE	src/renderergl2/tr_local.h	/^	UNIFORM_SPECULARSCALE,$/;"	e	enum:__anon38
UNIFORM_TCGEN0	src/renderergl2/tr_local.h	/^	UNIFORM_TCGEN0,$/;"	e	enum:__anon38
UNIFORM_TCGEN0VECTOR0	src/renderergl2/tr_local.h	/^	UNIFORM_TCGEN0VECTOR0,$/;"	e	enum:__anon38
UNIFORM_TCGEN0VECTOR1	src/renderergl2/tr_local.h	/^	UNIFORM_TCGEN0VECTOR1,$/;"	e	enum:__anon38
UNIFORM_TEXTUREMAP	src/renderergl2/tr_local.h	/^	UNIFORM_TEXTUREMAP,$/;"	e	enum:__anon38
UNIFORM_TIME	src/renderergl2/tr_local.h	/^	UNIFORM_TIME,$/;"	e	enum:__anon38
UNIFORM_TONEMINAVGMAXLINEAR	src/renderergl2/tr_local.h	/^	UNIFORM_TONEMINAVGMAXLINEAR,$/;"	e	enum:__anon38
UNIFORM_VERTCOLOR	src/renderergl2/tr_local.h	/^	UNIFORM_VERTCOLOR,$/;"	e	enum:__anon38
UNIFORM_VERTEXLERP	src/renderergl2/tr_local.h	/^	UNIFORM_VERTEXLERP,$/;"	e	enum:__anon38
UNIFORM_VIEWFORWARD	src/renderergl2/tr_local.h	/^	UNIFORM_VIEWFORWARD,$/;"	e	enum:__anon38
UNIFORM_VIEWINFO	src/renderergl2/tr_local.h	/^	UNIFORM_VIEWINFO, \/\/ znear, zfar, width\/2, height\/2$/;"	e	enum:__anon38
UNIFORM_VIEWLEFT	src/renderergl2/tr_local.h	/^	UNIFORM_VIEWLEFT,$/;"	e	enum:__anon38
UNIFORM_VIEWORIGIN	src/renderergl2/tr_local.h	/^	UNIFORM_VIEWORIGIN,$/;"	e	enum:__anon38
UNIFORM_VIEWUP	src/renderergl2/tr_local.h	/^	UNIFORM_VIEWUP,$/;"	e	enum:__anon38
UNIXFILE_DELETE	src/server/sqlite3.c	27587;"	d	file:
UNIXFILE_DIRSYNC	src/server/sqlite3.c	27582;"	d	file:
UNIXFILE_DIRSYNC	src/server/sqlite3.c	27584;"	d	file:
UNIXFILE_EXCL	src/server/sqlite3.c	27578;"	d	file:
UNIXFILE_NOLOCK	src/server/sqlite3.c	27589;"	d	file:
UNIXFILE_PERSIST_WAL	src/server/sqlite3.c	27580;"	d	file:
UNIXFILE_PSOW	src/server/sqlite3.c	27586;"	d	file:
UNIXFILE_RDONLY	src/server/sqlite3.c	27579;"	d	file:
UNIXFILE_URI	src/server/sqlite3.c	27588;"	d	file:
UNIXVFS	src/server/sqlite3.c	35008;"	d	file:
UNIX_SHM_BASE	src/server/sqlite3.c	31579;"	d	file:
UNIX_SHM_DMS	src/server/sqlite3.c	31580;"	d	file:
UNKNOWN_LOCK	src/server/sqlite3.c	44403;"	d	file:
UNMUTE_VOTE	src/game/bg_public.h	/^  UNMUTE_VOTE,$/;"	e	enum:__anon360
UNS	src/tools/lcc/cpp/eval.c	7;"	d	file:
UNSMARK	src/tools/lcc/cpp/eval.c	10;"	d	file:
UNUSED	src/qcommon/vm_powerpc_asm.c	246;"	d	file:
UNUSED_PARAM	src/server/sqlite3.c	166499;"	d	file:
UNUSED_PARAM	src/server/sqlite3.c	169338;"	d	file:
UNUSED_PARAM2	src/server/sqlite3.c	169342;"	d	file:
UNUSED_PARAMETER	src/server/sqlite3.c	10285;"	d	file:
UNUSED_PARAMETER	src/server/sqlite3.c	138270;"	d	file:
UNUSED_PARAMETER	src/server/sqlite3.c	156719;"	d	file:
UNUSED_PARAMETER2	src/server/sqlite3.c	10286;"	d	file:
UNUSED_VAR	src/qcommon/q_shared.h	87;"	d
UNUSED_VAR	src/qcommon/q_shared.h	89;"	d
UNUSED_VARIABLE_VALUE	src/server/sqlite3.c	35467;"	d	file:
UPDATE_MAX_BLOBSIZE	src/server/sqlite3.c	74490;"	d	file:
UPDATE_MAX_BLOBSIZE	src/server/sqlite3.c	74492;"	d	file:
UP_AMMO	src/game/bg_public.h	/^  UP_AMMO,$/;"	e	enum:__anon336
UP_BATTLESUIT	src/game/bg_public.h	/^  UP_BATTLESUIT,$/;"	e	enum:__anon336
UP_BATTPACK	src/game/bg_public.h	/^  UP_BATTPACK,$/;"	e	enum:__anon336
UP_GRENADE	src/game/bg_public.h	/^  UP_GRENADE,$/;"	e	enum:__anon336
UP_HELMET	src/game/bg_public.h	/^  UP_HELMET,$/;"	e	enum:__anon336
UP_JETPACK	src/game/bg_public.h	/^  UP_JETPACK,$/;"	e	enum:__anon336
UP_LIGHTARMOUR	src/game/bg_public.h	/^  UP_LIGHTARMOUR,$/;"	e	enum:__anon336
UP_MEDKIT	src/game/bg_public.h	/^  UP_MEDKIT,$/;"	e	enum:__anon336
UP_NONE	src/game/bg_public.h	/^  UP_NONE,$/;"	e	enum:__anon336
UP_NUM_UPGRADES	src/game/bg_public.h	/^  UP_NUM_UPGRADES$/;"	e	enum:__anon336
UP_VEL	src/game/g_client.c	1465;"	d	file:
USEFETCH	src/server/sqlite3.c	44787;"	d	file:
USEFETCH	src/server/sqlite3.c	44789;"	d	file:
USE_CODEC_OPUS	GNUmakefile	/^USE_CODEC_OPUS=1$/;"	m
USE_CODEC_VORBIS	GNUmakefile	/^USE_CODEC_VORBIS=0$/;"	m
USE_CURL	GNUmakefile	/^USE_CURL=1$/;"	m
USE_CURL_DLOPEN	GNUmakefile	/^    USE_CURL_DLOPEN=0$/;"	m
USE_CURL_DLOPEN	GNUmakefile	/^    USE_CURL_DLOPEN=1$/;"	m
USE_FREETYPE	GNUmakefile	/^USE_FREETYPE=0$/;"	m
USE_GIT	GNUmakefile	/^      USE_GIT=1$/;"	m
USE_GIT	GNUmakefile	/^  USE_GIT=$/;"	m
USE_INTERNAL_JPEG	GNUmakefile	/^USE_INTERNAL_JPEG=$(USE_INTERNAL_LIBS)$/;"	m
USE_INTERNAL_LIBS	GNUmakefile	/^USE_INTERNAL_LIBS=1$/;"	m
USE_INTERNAL_MINIZIP	GNUmakefile	/^USE_INTERNAL_MINIZIP=$(USE_INTERNAL_LIBS)$/;"	m
USE_INTERNAL_OGG	GNUmakefile	/^USE_INTERNAL_OGG=$(USE_INTERNAL_LIBS)$/;"	m
USE_INTERNAL_OPUS	GNUmakefile	/^USE_INTERNAL_OPUS=$(USE_INTERNAL_LIBS)$/;"	m
USE_INTERNAL_SPEEX	GNUmakefile	/^USE_INTERNAL_SPEEX=$(USE_INTERNAL_LIBS)$/;"	m
USE_INTERNAL_VORBIS	GNUmakefile	/^USE_INTERNAL_VORBIS=$(USE_INTERNAL_LIBS)$/;"	m
USE_INTERNAL_ZLIB	GNUmakefile	/^USE_INTERNAL_ZLIB=$(USE_INTERNAL_LIBS)$/;"	m
USE_MUMBLE	GNUmakefile	/^  USE_MUMBLE=0$/;"	m
USE_MUMBLE	GNUmakefile	/^USE_MUMBLE=1$/;"	m
USE_OBJECT_RANGE	src/game/g_active.c	1817;"	d	file:
USE_OPENAL	GNUmakefile	/^USE_OPENAL=1$/;"	m
USE_OPENAL_DLOPEN	GNUmakefile	/^USE_OPENAL_DLOPEN=1$/;"	m
USE_PREAD	src/server/sqlite3.c	27391;"	d	file:
USE_PREAD	src/server/sqlite3.c	27395;"	d	file:
USE_PREAD64	src/server/sqlite3.c	27392;"	d	file:
USE_PREAD64	src/server/sqlite3.c	27394;"	d	file:
USE_RENDERER_DLOPEN	GNUmakefile	/^USE_RENDERER_DLOPEN=1$/;"	m
USE_VERT_TANGENT_SPACE	src/renderergl2/tr_local.h	61;"	d
USE_VOIP	GNUmakefile	/^USE_VOIP=1$/;"	m
USHRT_MAX	src/game/bg_lib.h	50;"	d
UnfilterImage	src/renderercommon/tr_image_png.c	/^static qboolean UnfilterImage(uint8_t  *DecompressedData, $/;"	f	file:
Unicode61Tokenizer	src/server/sqlite3.c	/^struct Unicode61Tokenizer {$/;"	s	file:
Unicode61Tokenizer	src/server/sqlite3.c	/^typedef struct Unicode61Tokenizer Unicode61Tokenizer;$/;"	t	typeref:struct:Unicode61Tokenizer	file:
UnixUnusedFd	src/server/sqlite3.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	src/server/sqlite3.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnpackedRecord	src/server/sqlite3.c	/^struct UnpackedRecord {$/;"	s	file:
UnpackedRecord	src/server/sqlite3.c	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord	file:
UnsecureInit	src/master/master.c	/^static qboolean UnsecureInit (void)$/;"	f	file:
Update	src/client/snd_local.h	/^	void (*Update)( void );$/;"	m	struct:__anon96
UpdateEntityPosition	src/client/snd_local.h	/^	void (*UpdateEntityPosition)( int entityNum, const vec3_t origin );$/;"	m	struct:__anon96
UpdatePaths	src/tools/lcc/etc/bytecode.c	/^void UpdatePaths( const char *lccBinary )$/;"	f
Upload32	src/renderergl1/tr_image.c	/^static void Upload32( unsigned *data, $/;"	f	file:
Upload32	src/renderergl2/tr_image.c	/^static void Upload32( byte *data, int width, int height, imgType_t type, imgFlags_t flags,$/;"	f	file:
UploadCinematic	src/renderercommon/tr_public.h	/^	void	(*UploadCinematic) (int w, int h, int cols, int rows, const byte *data, int client, qboolean dirty);$/;"	m	struct:__anon108
UpperToLower	src/server/sqlite3.c	25674;"	d	file:
Use_BinaryMover	src/game/g_mover.c	/^void Use_BinaryMover( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_Multi	src/game/g_trigger.c	/^void Use_Multi( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_Target_Delay	src/game/g_target.c	/^void Use_Target_Delay( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_Target_Print	src/game/g_target.c	/^void Use_Target_Print( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_Target_Score	src/game/g_target.c	/^void Use_Target_Score( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_Target_Speaker	src/game/g_target.c	/^void Use_Target_Speaker( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_Train	src/game/g_mover.c	/^void Use_Train( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
Use_target_push	src/game/g_trigger.c	/^void Use_target_push( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
Utf8Read	src/server/sqlite3.c	100871;"	d	file:
Utf8Read	src/server/sqlite3.c	100873;"	d	file:
V	src/tools/lcc/src/c.h	/^	V=VOID,$/;"	e	enum:__anon286
VAL	src/renderercommon/tr_noise.c	29;"	d	file:
VALIGN_BOTTOM	src/ui/menudef.h	29;"	d
VALIGN_CENTER	src/ui/menudef.h	30;"	d
VALIGN_NONE	src/ui/menudef.h	32;"	d
VALIGN_TOP	src/ui/menudef.h	31;"	d
VAO_MAX_ATTRIBS	src/renderergl2/tr_local.h	100;"	d
VAO_USAGE_DYNAMIC	src/renderergl2/tr_local.h	/^	VAO_USAGE_DYNAMIC$/;"	e	enum:__anon10
VAO_USAGE_STATIC	src/renderergl2/tr_local.h	/^	VAO_USAGE_STATIC,$/;"	e	enum:__anon10
VDBE_DISPLAY_P4	src/server/sqlite3.c	15880;"	d	file:
VDBE_DISPLAY_P4	src/server/sqlite3.c	15882;"	d	file:
VDBE_MAGIC_DEAD	src/server/sqlite3.c	16274;"	d	file:
VDBE_MAGIC_HALT	src/server/sqlite3.c	16273;"	d	file:
VDBE_MAGIC_INIT	src/server/sqlite3.c	16271;"	d	file:
VDBE_MAGIC_RUN	src/server/sqlite3.c	16272;"	d	file:
VDBE_OFFSET_LINENO	src/server/sqlite3.c	11180;"	d	file:
VDBE_OFFSET_LINENO	src/server/sqlite3.c	11186;"	d	file:
VECCONST_UINT8	src/qcommon/q_platform.h	51;"	d
VECCONST_UINT8	src/qcommon/q_platform.h	54;"	d
VERSION	GNUmakefile	/^      VERSION:=$(VERSION)_GIT_$(GIT_REV)$/;"	m
VERSION	GNUmakefile	/^VERSION=gpp1$/;"	m
VERSION	src/master/master.c	41;"	d	file:
VERTEXSIZE	src/renderergl1/tr_local.h	542;"	d
VFUNCTION	src/server/sqlite3.c	12468;"	d	file:
VIS_HEADER	src/qcommon/cm_load.c	601;"	d	file:
VMA	src/qcommon/qcommon.h	367;"	d
VMF	src/qcommon/qcommon.h	374;"	d
VMFREE_BUFFERS	src/qcommon/vm_x86.c	62;"	d	file:
VMI_BYTECODE	src/qcommon/qcommon.h	/^	VMI_BYTECODE,$/;"	e	enum:__anon423
VMI_COMPILED	src/qcommon/qcommon.h	/^	VMI_COMPILED$/;"	e	enum:__anon423
VMI_NATIVE	src/qcommon/qcommon.h	/^	VMI_NATIVE,$/;"	e	enum:__anon423
VM_AnalyzeFunction	src/qcommon/vm_powerpc.c	/^VM_AnalyzeFunction($/;"	f	file:
VM_ArgPtr	src/qcommon/vm.c	/^void *VM_ArgPtr( intptr_t intValue ) {$/;"	f
VM_AsmCall	src/qcommon/vm_powerpc.c	/^VM_AsmCall( int callSyscallInvNum, int callProgramStack )$/;"	f	file:
VM_BLOCK_COPY	src/qcommon/vm_x86.c	/^	VM_BLOCK_COPY = 1$/;"	e	enum:__anon445	file:
VM_BlockCopy	src/qcommon/vm.c	/^void VM_BlockCopy(unsigned int dest, unsigned int src, size_t n)$/;"	f
VM_Call	src/qcommon/vm.c	/^intptr_t QDECL VM_Call( vm_t *vm, int callnum, ... )$/;"	f
VM_CallCompiled	src/qcommon/vm_none.c	/^int VM_CallCompiled( vm_t *vm, int *args ) {$/;"	f
VM_CallCompiled	src/qcommon/vm_powerpc.c	/^VM_CallCompiled( vm_t *vm, int *args )$/;"	f
VM_CallCompiled	src/qcommon/vm_sparc.c	/^int VM_CallCompiled(vm_t *vm, int *args)$/;"	f
VM_CallCompiled	src/qcommon/vm_x86.c	/^int VM_CallCompiled(vm_t *vm, int *args)$/;"	f
VM_CallInterpreted	src/qcommon/vm_interpreted.c	/^int	VM_CallInterpreted( vm_t *vm, int *args ) {$/;"	f
VM_Clear	src/qcommon/vm.c	/^void VM_Clear(void) {$/;"	f
VM_ClearCallLevel	src/qcommon/vm.c	/^void VM_ClearCallLevel(vm_t *vm) {$/;"	f
VM_Compile	src/qcommon/vm_none.c	/^void VM_Compile( vm_t *vm, vmHeader_t *header ) {$/;"	f
VM_Compile	src/qcommon/vm_powerpc.c	/^VM_Compile( vm_t *vm, vmHeader_t *header )$/;"	f
VM_Compile	src/qcommon/vm_sparc.c	/^void VM_Compile(vm_t *vm, vmHeader_t *header)$/;"	f
VM_Compile	src/qcommon/vm_x86.c	/^void VM_Compile(vm_t *vm, vmHeader_t *header)$/;"	f
VM_CompileFunction	src/qcommon/vm_powerpc.c	/^VM_CompileFunction( source_instruction_t * const i_first )$/;"	f	file:
VM_Create	src/qcommon/vm.c	/^vm_t *VM_Create( const char *module, intptr_t (*systemCalls)(intptr_t *), $/;"	f
VM_Data	src/qcommon/vm_powerpc.c	/^typedef struct VM_Data {$/;"	s	file:
VM_Data	src/qcommon/vm_sparc.c	/^typedef struct VM_Data {$/;"	s	file:
VM_Data_Offset	src/qcommon/vm_powerpc.c	333;"	d	file:
VM_Data_Offset	src/qcommon/vm_powerpc.c	337;"	d	file:
VM_Data_Offset	src/qcommon/vm_sparc.c	520;"	d	file:
VM_Data_Offset	src/qcommon/vm_sparc.c	524;"	d	file:
VM_Debug	src/qcommon/vm.c	/^void VM_Debug( int level ) {$/;"	f
VM_Destroy_Compiled	src/qcommon/vm_powerpc.c	/^VM_Destroy_Compiled( vm_t *self )$/;"	f	file:
VM_Destroy_Compiled	src/qcommon/vm_sparc.c	/^static void VM_Destroy_Compiled(vm_t *vm)$/;"	f	file:
VM_Destroy_Compiled	src/qcommon/vm_x86.c	/^void VM_Destroy_Compiled(vm_t* self)$/;"	f
VM_DllSyscall	src/qcommon/vm.c	/^intptr_t QDECL VM_DllSyscall( intptr_t arg, ... ) {$/;"	f
VM_ExplicitArgPtr	src/qcommon/vm.c	/^void *VM_ExplicitArgPtr( vm_t *vm, intptr_t intValue ) {$/;"	f
VM_Forced_Unload_Done	src/qcommon/vm.c	/^void VM_Forced_Unload_Done(void) {$/;"	f
VM_Forced_Unload_Start	src/qcommon/vm.c	/^void VM_Forced_Unload_Start(void) {$/;"	f
VM_Free	src/qcommon/vm.c	/^void VM_Free( vm_t *vm ) {$/;"	f
VM_Indent	src/qcommon/vm_interpreted.c	/^char *VM_Indent( vm_t *vm ) {$/;"	f
VM_Init	src/qcommon/vm.c	/^void VM_Init( void ) {$/;"	f
VM_JMP_VIOLATION	src/qcommon/vm_x86.c	/^	VM_JMP_VIOLATION = 0,$/;"	e	enum:__anon445	file:
VM_LoadQVM	src/qcommon/vm.c	/^vmHeader_t *VM_LoadQVM( vm_t *vm, qboolean alloc, qboolean unpure)$/;"	f
VM_LoadSymbols	src/qcommon/vm.c	/^void VM_LoadSymbols( vm_t *vm ) {$/;"	f
VM_LogSyscalls	src/qcommon/vm.c	/^void VM_LogSyscalls( int *args ) {$/;"	f
VM_MAGIC	src/qcommon/qfiles.h	54;"	d
VM_MAGIC_VER2	src/qcommon/qfiles.h	55;"	d
VM_OFFSET_PROGRAM_STACK	src/qcommon/vm_local.h	142;"	d
VM_OFFSET_SYSTEM_CALL	src/qcommon/vm_local.h	143;"	d
VM_POWERPC_ASM_H	src/qcommon/vm_powerpc_asm.h	25;"	d
VM_PrepareInterpreter	src/qcommon/vm_interpreted.c	/^void VM_PrepareInterpreter( vm_t *vm, vmHeader_t *header ) {$/;"	f
VM_ProfileSort	src/qcommon/vm.c	/^static int QDECL VM_ProfileSort( const void *a, const void *b ) {$/;"	f	file:
VM_Restart	src/qcommon/vm.c	/^vm_t *VM_Restart(vm_t *vm, qboolean unpure)$/;"	f
VM_SPARC_H	src/qcommon/vm_sparc.h	2;"	d
VM_StackTrace	src/qcommon/vm_interpreted.c	/^void VM_StackTrace( vm_t *vm, int programCounter, int programStack ) {$/;"	f
VM_SymbolToValue	src/qcommon/vm.c	/^int VM_SymbolToValue( vm_t *vm, const char *symbol ) {$/;"	f
VM_ValueToFunctionSymbol	src/qcommon/vm.c	/^vmSymbol_t *VM_ValueToFunctionSymbol( vm_t *vm, int value ) {$/;"	f
VM_ValueToSymbol	src/qcommon/vm.c	/^const char *VM_ValueToSymbol( vm_t *vm, int value ) {$/;"	f
VM_VmInfo_f	src/qcommon/vm.c	/^void VM_VmInfo_f( void ) {$/;"	f
VM_VmProfile_f	src/qcommon/vm.c	/^void VM_VmProfile_f( void ) {$/;"	f
VM_X86_MMAP	src/qcommon/vm_x86.c	38;"	d	file:
VOICE_CHAN_ALL	src/game/bg_public.h	/^  VOICE_CHAN_ALL,$/;"	e	enum:__anon358
VOICE_CHAN_LOCAL	src/game/bg_public.h	/^  VOICE_CHAN_LOCAL,$/;"	e	enum:__anon358
VOICE_CHAN_NUM_CHANS	src/game/bg_public.h	/^  VOICE_CHAN_NUM_CHANS$/;"	e	enum:__anon358
VOICE_CHAN_TEAM	src/game/bg_public.h	/^  VOICE_CHAN_TEAM ,$/;"	e	enum:__anon358
VOICE_ENTHUSIASM_DECAY	src/game/bg_public.h	1320;"	d
VOID_VOTE	src/game/bg_public.h	/^  VOID_VOTE$/;"	e	enum:__anon360
VOIP_DIRECT	src/qcommon/q_shared.h	1068;"	d
VOIP_FLAGCNT	src/qcommon/q_shared.h	1072;"	d
VOIP_QUEUE_LENGTH	src/server/server.h	38;"	d
VOIP_SPATIAL	src/qcommon/q_shared.h	1067;"	d
VORBISDIR	GNUmakefile	/^VORBISDIR=$(DEP_DIR)\/libvorbis-1.3.4$/;"	m
VORBIS_CFLAGS	GNUmakefile	/^    VORBIS_CFLAGS ?= $(shell pkg-config --silence-errors --cflags vorbisfile vorbis || true)$/;"	m
VORBIS_LIBS	GNUmakefile	/^    VORBIS_LIBS ?= $(shell pkg-config --silence-errors --libs vorbisfile vorbis || echo -lvorbisfile -lvorbis)$/;"	m
VOTE_DESCRIPTION_STRING	src/qcommon/q_shared.h	/^  VOTE_DESCRIPTION_STRING = 0,$/;"	e	enum:__anon466
VOTE_EXTRA_STRING	src/qcommon/q_shared.h	/^  VOTE_EXTRA_STRING,$/;"	e	enum:__anon466
VOTE_TIME	src/game/bg_public.h	36;"	d
VPF_DEPTHCLAMP	src/renderergl2/tr_local.h	/^	VPF_DEPTHCLAMP      = 0x08,$/;"	e	enum:__anon42
VPF_DEPTHSHADOW	src/renderergl2/tr_local.h	/^	VPF_DEPTHSHADOW     = 0x04,$/;"	e	enum:__anon42
VPF_FARPLANEFRUSTUM	src/renderergl2/tr_local.h	/^	VPF_FARPLANEFRUSTUM = 0x40,$/;"	e	enum:__anon42
VPF_NOCUBEMAPS	src/renderergl2/tr_local.h	/^	VPF_NOCUBEMAPS      = 0x80$/;"	e	enum:__anon42
VPF_NONE	src/renderergl2/tr_local.h	/^	VPF_NONE            = 0x00,$/;"	e	enum:__anon42
VPF_NOVIEWMODEL	src/renderergl2/tr_local.h	/^	VPF_NOVIEWMODEL     = 0x01,$/;"	e	enum:__anon42
VPF_ORTHOGRAPHIC	src/renderergl2/tr_local.h	/^	VPF_ORTHOGRAPHIC    = 0x10,$/;"	e	enum:__anon42
VPF_SHADOWMAP	src/renderergl2/tr_local.h	/^	VPF_SHADOWMAP       = 0x02,$/;"	e	enum:__anon42
VPF_USESUNLIGHT	src/renderergl2/tr_local.h	/^	VPF_USESUNLIGHT     = 0x20,$/;"	e	enum:__anon42
VQ0	src/client/cl_cin.c	/^	void ( *VQ0)(byte *status, void *qdata );$/;"	m	struct:__anon100	file:
VQ1	src/client/cl_cin.c	/^	void ( *VQ1)(byte *status, void *qdata );$/;"	m	struct:__anon100	file:
VQ2TO2	src/client/cl_cin.c	552;"	d	file:
VQ2TO4	src/client/cl_cin.c	529;"	d	file:
VQBuffer	src/client/cl_cin.c	/^	void ( *VQBuffer)(byte *status, void *qdata );$/;"	m	struct:__anon100	file:
VQNormal	src/client/cl_cin.c	/^	void ( *VQNormal)(byte *status, void *qdata );$/;"	m	struct:__anon100	file:
VREG	src/tools/lcc/src/config.h	/^enum { VREG=(44<<4) };$/;"	e	enum:__anon280
VTAB_SCHEMA	src/server/sqlite3.c	165816;"	d	file:
VTable	src/server/sqlite3.c	/^struct VTable {$/;"	s	file:
VTable	src/server/sqlite3.c	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable	file:
VVA_ONLY	src/server/sqlite3.c	9420;"	d	file:
VVA_ONLY	src/server/sqlite3.c	9422;"	d	file:
VX	src/qcommon/vm_powerpc_asm.c	662;"	d	file:
VXA	src/qcommon/vm_powerpc_asm.c	668;"	d	file:
VXA_MASK	src/qcommon/vm_powerpc_asm.c	671;"	d	file:
VXR	src/qcommon/vm_powerpc_asm.c	674;"	d	file:
VXR_MASK	src/qcommon/vm_powerpc_asm.c	677;"	d	file:
VX_MASK	src/qcommon/vm_powerpc_asm.c	665;"	d	file:
Value	src/tools/lcc/src/c.h	/^} Value;$/;"	t	typeref:union:value
ValueNewStat4Ctx	src/server/sqlite3.c	/^struct ValueNewStat4Ctx {$/;"	s	file:
Vao_SetVertexPointers	src/renderergl2/tr_vbo.c	/^void Vao_SetVertexPointers(vao_t *vao)$/;"	f
Vdbe	src/server/sqlite3.c	/^struct Vdbe {$/;"	s	file:
Vdbe	src/server/sqlite3.c	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe	file:
VdbeBranchTaken	src/server/sqlite3.c	74512;"	d	file:
VdbeBranchTaken	src/server/sqlite3.c	74514;"	d	file:
VdbeComment	src/server/sqlite3.c	11138;"	d	file:
VdbeComment	src/server/sqlite3.c	11147;"	d	file:
VdbeCoverage	src/server/sqlite3.c	11176;"	d	file:
VdbeCoverage	src/server/sqlite3.c	11182;"	d	file:
VdbeCoverageAlwaysTaken	src/server/sqlite3.c	11178;"	d	file:
VdbeCoverageAlwaysTaken	src/server/sqlite3.c	11184;"	d	file:
VdbeCoverageIf	src/server/sqlite3.c	11177;"	d	file:
VdbeCoverageIf	src/server/sqlite3.c	11183;"	d	file:
VdbeCoverageNeverTaken	src/server/sqlite3.c	11179;"	d	file:
VdbeCoverageNeverTaken	src/server/sqlite3.c	11185;"	d	file:
VdbeCursor	src/server/sqlite3.c	/^struct VdbeCursor {$/;"	s	file:
VdbeCursor	src/server/sqlite3.c	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor	file:
VdbeFrame	src/server/sqlite3.c	/^struct VdbeFrame {$/;"	s	file:
VdbeFrame	src/server/sqlite3.c	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame	file:
VdbeFrameMem	src/server/sqlite3.c	16021;"	d	file:
VdbeMemDynamic	src/server/sqlite3.c	16110;"	d	file:
VdbeModuleComment	src/server/sqlite3.c	11142;"	d	file:
VdbeModuleComment	src/server/sqlite3.c	11144;"	d	file:
VdbeModuleComment	src/server/sqlite3.c	11149;"	d	file:
VdbeNoopComment	src/server/sqlite3.c	11140;"	d	file:
VdbeNoopComment	src/server/sqlite3.c	11148;"	d	file:
VdbeOp	src/server/sqlite3.c	/^struct VdbeOp {$/;"	s	file:
VdbeOp	src/server/sqlite3.c	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp	file:
VdbeOpIter	src/server/sqlite3.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	src/server/sqlite3.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpList	src/server/sqlite3.c	/^struct VdbeOpList {$/;"	s	file:
VdbeOpList	src/server/sqlite3.c	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList	file:
VdbeSorter	src/server/sqlite3.c	/^struct VdbeSorter {$/;"	s	file:
VdbeSorter	src/server/sqlite3.c	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter	file:
Vector2Set	src/qcommon/q_shared.h	593;"	d
Vector4Add	src/qcommon/q_shared.h	598;"	d
Vector4Copy	src/qcommon/q_shared.h	597;"	d
Vector4Lerp	src/qcommon/q_shared.h	599;"	d
Vector4Scale	src/qcommon/q_math.c	/^void Vector4Scale( const vec4_t in, vec_t scale, vec4_t out ) {$/;"	f
VectorAdd	src/qcommon/q_shared.h	563;"	d
VectorAdd	src/qcommon/q_shared.h	575;"	d
VectorAdd	src/tools/asm/mathlib.h	63;"	d
VectorArrayNormalize	src/renderergl1/tr_surface.c	/^static void VectorArrayNormalize(vec4_t *normals, unsigned int count)$/;"	f	file:
VectorClear	src/qcommon/q_shared.h	594;"	d
VectorClear	src/tools/asm/mathlib.h	66;"	d
VectorCompare	src/qcommon/q_shared.h	/^static ID_INLINE int VectorCompare( const vec3_t v1, const vec3_t v2 ) {$/;"	f
VectorCompare4	src/renderergl2/tr_extramath.h	/^static ID_INLINE int VectorCompare4(const vec4_t v1, const vec4_t v2)$/;"	f
VectorCompare5	src/renderergl2/tr_extramath.h	/^static ID_INLINE int VectorCompare5(const vec5_t v1, const vec5_t v2)$/;"	f
VectorCompareEpsilon	src/qcommon/q_shared.h	/^static ID_INLINE int VectorCompareEpsilon($/;"	f
VectorCopy	src/qcommon/q_shared.h	564;"	d
VectorCopy	src/qcommon/q_shared.h	576;"	d
VectorCopy	src/qcommon/q_shared.h	584;"	d
VectorCopy	src/qcommon/q_shared.h	589;"	d
VectorCopy	src/tools/asm/mathlib.h	64;"	d
VectorCopy2	src/renderergl2/tr_extramath.h	44;"	d
VectorCopy4	src/renderergl2/tr_extramath.h	47;"	d
VectorCopy5	src/renderergl2/tr_extramath.h	52;"	d
VectorInverse	src/qcommon/q_shared.h	/^static ID_INLINE void VectorInverse( vec3_t v ){$/;"	f
VectorLength	src/qcommon/q_shared.h	/^static ID_INLINE vec_t VectorLength( const vec3_t v ) {$/;"	f
VectorLengthSquared	src/qcommon/q_shared.h	/^static ID_INLINE vec_t VectorLengthSquared( const vec3_t v ) {$/;"	f
VectorLerp	src/renderergl2/tr_extramath.c	/^void VectorLerp( vec3_t a, vec3_t b, float lerp, vec3_t c)$/;"	f
VectorLerp2	src/qcommon/q_shared.h	567;"	d
VectorMA	src/qcommon/q_shared.h	566;"	d
VectorMA	src/qcommon/q_shared.h	578;"	d
VectorMatrixMultiply	src/qcommon/q_math.c	/^void VectorMatrixMultiply( const vec3_t p, vec3_t m[ 3 ], vec3_t out )$/;"	f
VectorMaxComponent	src/qcommon/q_math.c	/^float VectorMaxComponent( vec3_t v )$/;"	f
VectorMinComponent	src/qcommon/q_math.c	/^float VectorMinComponent( vec3_t v )$/;"	f
VectorNegate	src/qcommon/q_shared.h	595;"	d
VectorNegate	src/tools/asm/mathlib.h	67;"	d
VectorNormalize	src/qcommon/q_math.c	/^vec_t VectorNormalize( vec3_t v ) {$/;"	f
VectorNormalize2	src/qcommon/q_math.c	/^vec_t VectorNormalize2( const vec3_t v, vec3_t out) {$/;"	f
VectorNormalizeFast	src/qcommon/q_shared.h	/^static ID_INLINE void VectorNormalizeFast( vec3_t v )$/;"	f
VectorRotate	src/qcommon/q_math.c	/^void VectorRotate( vec3_t in, vec3_t matrix[3], vec3_t out )$/;"	f
VectorScale	src/qcommon/q_shared.h	565;"	d
VectorScale	src/qcommon/q_shared.h	577;"	d
VectorScale	src/tools/asm/mathlib.h	65;"	d
VectorScale4	src/renderergl2/tr_extramath.h	50;"	d
VectorSet	src/qcommon/q_shared.h	596;"	d
VectorSet2	src/renderergl2/tr_extramath.h	45;"	d
VectorSet4	src/renderergl2/tr_extramath.h	48;"	d
VectorSubtract	src/qcommon/q_shared.h	562;"	d
VectorSubtract	src/qcommon/q_shared.h	574;"	d
VectorSubtract	src/tools/asm/mathlib.h	62;"	d
VertexLightingCollapse	src/renderergl1/tr_shader.c	/^static void VertexLightingCollapse( void ) {$/;"	f	file:
VertexLightingCollapse	src/renderergl2/tr_shader.c	/^static void VertexLightingCollapse( void ) {$/;"	f	file:
VisibleRowid	src/server/sqlite3.c	12750;"	d	file:
VoterInactivityTimer	src/game/g_active.c	/^void VoterInactivityTimer( gentity_t *ent )$/;"	f
VtabCtx	src/server/sqlite3.c	/^struct VtabCtx {$/;"	s	file:
VtabCtx	src/server/sqlite3.c	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx	file:
WALINDEX_HDR_SIZE	src/server/sqlite3.c	51757;"	d	file:
WALINDEX_LOCK_OFFSET	src/server/sqlite3.c	51756;"	d	file:
WALINDEX_MAX_VERSION	src/server/sqlite3.c	51634;"	d	file:
WALINDEX_PGSZ	src/server/sqlite3.c	51889;"	d	file:
WALTRACE	src/server/sqlite3.c	51615;"	d	file:
WALTRACE	src/server/sqlite3.c	51617;"	d	file:
WAL_ALL_BUT_WRITE	src/server/sqlite3.c	51642;"	d	file:
WAL_CKPT_LOCK	src/server/sqlite3.c	51643;"	d	file:
WAL_EXCLUSIVE_MODE	src/server/sqlite3.c	51826;"	d	file:
WAL_FRAME_HDRSIZE	src/server/sqlite3.c	51760;"	d	file:
WAL_HDRSIZE	src/server/sqlite3.c	51764;"	d	file:
WAL_HEAPMEMORY_MODE	src/server/sqlite3.c	51827;"	d	file:
WAL_LOCK_CKPT	src/server/sqlite3.c	161661;"	d	file:
WAL_LOCK_READ0	src/server/sqlite3.c	161662;"	d	file:
WAL_LOCK_WRITE	src/server/sqlite3.c	161660;"	d	file:
WAL_MAGIC	src/server/sqlite3.c	51775;"	d	file:
WAL_MAX_VERSION	src/server/sqlite3.c	51633;"	d	file:
WAL_NORMAL_MODE	src/server/sqlite3.c	51825;"	d	file:
WAL_NREADER	src/server/sqlite3.c	51646;"	d	file:
WAL_RDONLY	src/server/sqlite3.c	51833;"	d	file:
WAL_RDWR	src/server/sqlite3.c	51832;"	d	file:
WAL_READ_LOCK	src/server/sqlite3.c	51645;"	d	file:
WAL_RECOVER_LOCK	src/server/sqlite3.c	51644;"	d	file:
WAL_RETRY	src/server/sqlite3.c	53487;"	d	file:
WAL_SAVEPOINT_NDATA	src/server/sqlite3.c	43920;"	d	file:
WAL_SHM_RDONLY	src/server/sqlite3.c	51834;"	d	file:
WAL_SYNC_TRANSACTIONS	src/server/sqlite3.c	43895;"	d	file:
WAL_WRITE_LOCK	src/server/sqlite3.c	51641;"	d	file:
WANIM_ATTACK1	src/game/bg_public.h	/^  WANIM_ATTACK1,$/;"	e	enum:__anon344
WANIM_ATTACK2	src/game/bg_public.h	/^  WANIM_ATTACK2,$/;"	e	enum:__anon344
WANIM_ATTACK3	src/game/bg_public.h	/^  WANIM_ATTACK3,$/;"	e	enum:__anon344
WANIM_ATTACK4	src/game/bg_public.h	/^  WANIM_ATTACK4,$/;"	e	enum:__anon344
WANIM_ATTACK5	src/game/bg_public.h	/^  WANIM_ATTACK5,$/;"	e	enum:__anon344
WANIM_ATTACK6	src/game/bg_public.h	/^  WANIM_ATTACK6,$/;"	e	enum:__anon344
WANIM_ATTACK7	src/game/bg_public.h	/^  WANIM_ATTACK7,$/;"	e	enum:__anon344
WANIM_ATTACK8	src/game/bg_public.h	/^  WANIM_ATTACK8,$/;"	e	enum:__anon344
WANIM_DROP	src/game/bg_public.h	/^  WANIM_DROP,$/;"	e	enum:__anon344
WANIM_IDLE	src/game/bg_public.h	/^  WANIM_IDLE,$/;"	e	enum:__anon344
WANIM_NONE	src/game/bg_public.h	/^  WANIM_NONE,$/;"	e	enum:__anon344
WANIM_RAISE	src/game/bg_public.h	/^  WANIM_RAISE,$/;"	e	enum:__anon344
WANIM_RELOAD	src/game/bg_public.h	/^  WANIM_RELOAD,$/;"	e	enum:__anon344
WARNING	src/tools/lcc/cpp/cpp.h	/^enum errtype { WARNING, ERROR, FATAL };$/;"	e	enum:errtype
WAVEVALUE	src/renderergl1/tr_shade_calc.c	31;"	d	file:
WAVEVALUE	src/renderergl2/tr_shade_calc.c	31;"	d	file:
WAVE_AMPLITUDE	src/cgame/cg_view.c	839;"	d	file:
WAVE_FREQUENCY	src/cgame/cg_view.c	840;"	d	file:
WAV_FORMAT_PCM	src/client/snd_local.h	114;"	d
WEAPON_CLICK_REPEAT	src/cgame/cg_weapons.c	1231;"	d	file:
WEAPON_DROPPING	src/game/bg_public.h	/^  WEAPON_DROPPING,$/;"	e	enum:__anon329
WEAPON_FIRING	src/game/bg_public.h	/^  WEAPON_FIRING,$/;"	e	enum:__anon329
WEAPON_RAISING	src/game/bg_public.h	/^  WEAPON_RAISING,$/;"	e	enum:__anon329
WEAPON_READY	src/game/bg_public.h	/^  WEAPON_READY,$/;"	e	enum:__anon329
WEAPON_RELOADING	src/game/bg_public.h	/^  WEAPON_RELOADING,$/;"	e	enum:__anon329
WEAPON_SELECT_TIME	src/cgame/cg_local.h	50;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	src/renderercommon/qgl.h	998;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	src/renderercommon/qgl.h	997;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	src/renderercommon/qgl.h	995;"	d
WGL_CONTEXT_FLAGS_ARB	src/renderercommon/qgl.h	993;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	src/renderercommon/qgl.h	996;"	d
WGL_CONTEXT_LAYER_PLANE_ARB	src/renderercommon/qgl.h	992;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	src/renderercommon/qgl.h	990;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	src/renderercommon/qgl.h	991;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	src/renderercommon/qgl.h	994;"	d
WHERETRACE	src/server/sqlite3.c	119927;"	d	file:
WHERETRACE	src/server/sqlite3.c	119930;"	d	file:
WHERETRACE_ENABLED	src/server/sqlite3.c	119928;"	d	file:
WHERE_AUTO_INDEX	src/server/sqlite3.c	120434;"	d	file:
WHERE_BOTH_LIMIT	src/server/sqlite3.c	120426;"	d	file:
WHERE_BTM_LIMIT	src/server/sqlite3.c	120425;"	d	file:
WHERE_COLUMN_EQ	src/server/sqlite3.c	120419;"	d	file:
WHERE_COLUMN_IN	src/server/sqlite3.c	120421;"	d	file:
WHERE_COLUMN_NULL	src/server/sqlite3.c	120422;"	d	file:
WHERE_COLUMN_RANGE	src/server/sqlite3.c	120420;"	d	file:
WHERE_CONSTRAINT	src/server/sqlite3.c	120423;"	d	file:
WHERE_DISTINCTBY	src/server/sqlite3.c	13425;"	d	file:
WHERE_DISTINCT_NOOP	src/server/sqlite3.c	13434;"	d	file:
WHERE_DISTINCT_ORDERED	src/server/sqlite3.c	13436;"	d	file:
WHERE_DISTINCT_UNIQUE	src/server/sqlite3.c	13435;"	d	file:
WHERE_DISTINCT_UNORDERED	src/server/sqlite3.c	13437;"	d	file:
WHERE_DUPLICATES_OK	src/server/sqlite3.c	13419;"	d	file:
WHERE_FORCE_TABLE	src/server/sqlite3.c	13421;"	d	file:
WHERE_GROUPBY	src/server/sqlite3.c	13424;"	d	file:
WHERE_IDX_ONLY	src/server/sqlite3.c	120427;"	d	file:
WHERE_INDEXED	src/server/sqlite3.c	120429;"	d	file:
WHERE_IN_ABLE	src/server/sqlite3.c	120431;"	d	file:
WHERE_IPK	src/server/sqlite3.c	120428;"	d	file:
WHERE_LOOP_XFER_SZ	src/server/sqlite3.c	120040;"	d	file:
WHERE_MULTI_OR	src/server/sqlite3.c	120433;"	d	file:
WHERE_NO_AUTOINDEX	src/server/sqlite3.c	13423;"	d	file:
WHERE_OMIT_OPEN_CLOSE	src/server/sqlite3.c	13420;"	d	file:
WHERE_ONEPASS_DESIRED	src/server/sqlite3.c	13418;"	d	file:
WHERE_ONEPASS_MULTIROW	src/server/sqlite3.c	13429;"	d	file:
WHERE_ONEROW	src/server/sqlite3.c	120432;"	d	file:
WHERE_ONETABLE_ONLY	src/server/sqlite3.c	13422;"	d	file:
WHERE_ORDERBY_MAX	src/server/sqlite3.c	13417;"	d	file:
WHERE_ORDERBY_MIN	src/server/sqlite3.c	13416;"	d	file:
WHERE_ORDERBY_NORMAL	src/server/sqlite3.c	13415;"	d	file:
WHERE_PARTIALIDX	src/server/sqlite3.c	120437;"	d	file:
WHERE_REOPEN_IDX	src/server/sqlite3.c	13428;"	d	file:
WHERE_SKIPSCAN	src/server/sqlite3.c	120435;"	d	file:
WHERE_SORTBYGROUP	src/server/sqlite3.c	13427;"	d	file:
WHERE_TOP_LIMIT	src/server/sqlite3.c	120424;"	d	file:
WHERE_UNQ_WANTED	src/server/sqlite3.c	120436;"	d	file:
WHERE_USE_LIMIT	src/server/sqlite3.c	13430;"	d	file:
WHERE_VIRTUALTABLE	src/server/sqlite3.c	120430;"	d	file:
WHERE_WANT_DISTINCT	src/server/sqlite3.c	13426;"	d	file:
WINCE_DELETION_ATTEMPTS	src/server/sqlite3.c	37796;"	d	file:
WINDOW_BACKCOLORSET	src/ui/ui_shared.h	65;"	d
WINDOW_BORDER_FULL	src/ui/menudef.h	44;"	d
WINDOW_BORDER_HORZ	src/ui/menudef.h	45;"	d
WINDOW_BORDER_KCGRADIENT	src/ui/menudef.h	47;"	d
WINDOW_BORDER_NONE	src/ui/menudef.h	43;"	d
WINDOW_BORDER_VERT	src/ui/menudef.h	46;"	d
WINDOW_DECORATION	src/ui/ui_shared.h	48;"	d
WINDOW_FADINGIN	src/ui/ui_shared.h	50;"	d
WINDOW_FADINGOUT	src/ui/ui_shared.h	49;"	d
WINDOW_FORCED	src/ui/ui_shared.h	63;"	d
WINDOW_FORECOLORSET	src/ui/ui_shared.h	53;"	d
WINDOW_GREY	src/ui/ui_shared.h	47;"	d
WINDOW_HASFOCUS	src/ui/ui_shared.h	45;"	d
WINDOW_HORIZONTAL	src/ui/ui_shared.h	54;"	d
WINDOW_INTRANSITION	src/ui/ui_shared.h	52;"	d
WINDOW_LB_DOWNARROW	src/ui/ui_shared.h	56;"	d
WINDOW_LB_PGDN	src/ui/ui_shared.h	59;"	d
WINDOW_LB_PGUP	src/ui/ui_shared.h	58;"	d
WINDOW_LB_THUMB	src/ui/ui_shared.h	57;"	d
WINDOW_LB_UPARROW	src/ui/ui_shared.h	55;"	d
WINDOW_MOUSEOVER	src/ui/ui_shared.h	44;"	d
WINDOW_MOUSEOVERTEXT	src/ui/ui_shared.h	51;"	d
WINDOW_OOB_CLICK	src/ui/ui_shared.h	61;"	d
WINDOW_ORBITING	src/ui/ui_shared.h	60;"	d
WINDOW_POPUP	src/ui/ui_shared.h	64;"	d
WINDOW_STYLE_CINEMATIC	src/ui/menudef.h	54;"	d
WINDOW_STYLE_EMPTY	src/ui/menudef.h	49;"	d
WINDOW_STYLE_FILLED	src/ui/menudef.h	50;"	d
WINDOW_STYLE_GRADIENT	src/ui/menudef.h	51;"	d
WINDOW_STYLE_SHADER	src/ui/menudef.h	52;"	d
WINDOW_STYLE_TEAMCOLOR	src/ui/menudef.h	53;"	d
WINDOW_TIMEDVISIBLE	src/ui/ui_shared.h	66;"	d
WINDOW_VISIBLE	src/ui/ui_shared.h	46;"	d
WINDOW_WRAPPED	src/ui/ui_shared.h	62;"	d
WINDRES	GNUmakefile	/^      WINDRES=$(strip $(foreach MINGW_PREFIX, $(MINGW_PREFIXES), \\$/;"	m
WINDRES	GNUmakefile	/^      WINDRES=windres$/;"	m
WINFILE_PERSIST_WAL	src/server/sqlite3.c	35588;"	d	file:
WINFILE_PSOW	src/server/sqlite3.c	35589;"	d	file:
WINFILE_RDONLY	src/server/sqlite3.c	35587;"	d	file:
WINMEM_MAGIC1	src/server/sqlite3.c	35691;"	d	file:
WINMEM_MAGIC2	src/server/sqlite3.c	35692;"	d	file:
WIN_SHM_BASE	src/server/sqlite3.c	38802;"	d	file:
WIN_SHM_DMS	src/server/sqlite3.c	38803;"	d	file:
WORKBLOCK_BORDER	src/renderergl2/tr_image.c	1101;"	d	file:
WORKBLOCK_REALSIZE	src/renderergl2/tr_image.c	1102;"	d	file:
WORKBLOCK_SIZE	src/renderergl2/tr_image.c	1100;"	d	file:
WORLD_SIZE	src/qcommon/qfiles.h	359;"	d
WO_ALL	src/server/sqlite3.c	120411;"	d	file:
WO_AND	src/server/sqlite3.c	120407;"	d	file:
WO_EQ	src/server/sqlite3.c	120398;"	d	file:
WO_EQUIV	src/server/sqlite3.c	120408;"	d	file:
WO_GE	src/server/sqlite3.c	120402;"	d	file:
WO_GT	src/server/sqlite3.c	120401;"	d	file:
WO_IN	src/server/sqlite3.c	120397;"	d	file:
WO_IS	src/server/sqlite3.c	120404;"	d	file:
WO_ISNULL	src/server/sqlite3.c	120405;"	d	file:
WO_LE	src/server/sqlite3.c	120400;"	d	file:
WO_LT	src/server/sqlite3.c	120399;"	d	file:
WO_MATCH	src/server/sqlite3.c	120403;"	d	file:
WO_NOOP	src/server/sqlite3.c	120409;"	d	file:
WO_OR	src/server/sqlite3.c	120406;"	d	file:
WO_SINGLE	src/server/sqlite3.c	120412;"	d	file:
WPM_NONE	src/game/bg_public.h	/^  WPM_NONE,$/;"	e	enum:__anon334
WPM_NOTFIRING	src/game/bg_public.h	/^  WPM_NOTFIRING,$/;"	e	enum:__anon334
WPM_NUM_WEAPONMODES	src/game/bg_public.h	/^  WPM_NUM_WEAPONMODES$/;"	e	enum:__anon334
WPM_PRIMARY	src/game/bg_public.h	/^  WPM_PRIMARY,$/;"	e	enum:__anon334
WPM_SECONDARY	src/game/bg_public.h	/^  WPM_SECONDARY,$/;"	e	enum:__anon334
WPM_TERTIARY	src/game/bg_public.h	/^  WPM_TERTIARY,$/;"	e	enum:__anon334
WP_ABUILD	src/game/bg_public.h	/^  WP_ABUILD,$/;"	e	enum:__anon335
WP_ABUILD2	src/game/bg_public.h	/^  WP_ABUILD2,$/;"	e	enum:__anon335
WP_ALEVEL0	src/game/bg_public.h	/^  WP_ALEVEL0,$/;"	e	enum:__anon335
WP_ALEVEL1	src/game/bg_public.h	/^  WP_ALEVEL1,$/;"	e	enum:__anon335
WP_ALEVEL1_UPG	src/game/bg_public.h	/^  WP_ALEVEL1_UPG,$/;"	e	enum:__anon335
WP_ALEVEL2	src/game/bg_public.h	/^  WP_ALEVEL2,$/;"	e	enum:__anon335
WP_ALEVEL2_UPG	src/game/bg_public.h	/^  WP_ALEVEL2_UPG,$/;"	e	enum:__anon335
WP_ALEVEL3	src/game/bg_public.h	/^  WP_ALEVEL3,$/;"	e	enum:__anon335
WP_ALEVEL3_UPG	src/game/bg_public.h	/^  WP_ALEVEL3_UPG,$/;"	e	enum:__anon335
WP_ALEVEL4	src/game/bg_public.h	/^  WP_ALEVEL4,$/;"	e	enum:__anon335
WP_BLASTER	src/game/bg_public.h	/^  WP_BLASTER,$/;"	e	enum:__anon335
WP_CHAINGUN	src/game/bg_public.h	/^  WP_CHAINGUN,$/;"	e	enum:__anon335
WP_FLAMER	src/game/bg_public.h	/^  WP_FLAMER,$/;"	e	enum:__anon335
WP_GRENADE	src/game/bg_public.h	/^  WP_GRENADE,$/;"	e	enum:__anon335
WP_HBUILD	src/game/bg_public.h	/^  WP_HBUILD,$/;"	e	enum:__anon335
WP_HIVE	src/game/bg_public.h	/^  WP_HIVE,$/;"	e	enum:__anon335
WP_LAS_GUN	src/game/bg_public.h	/^  WP_LAS_GUN,$/;"	e	enum:__anon335
WP_LOCKBLOB_LAUNCHER	src/game/bg_public.h	/^  WP_LOCKBLOB_LAUNCHER,$/;"	e	enum:__anon335
WP_LUCIFER_CANNON	src/game/bg_public.h	/^  WP_LUCIFER_CANNON,$/;"	e	enum:__anon335
WP_MACHINEGUN	src/game/bg_public.h	/^  WP_MACHINEGUN,$/;"	e	enum:__anon335
WP_MASS_DRIVER	src/game/bg_public.h	/^  WP_MASS_DRIVER,$/;"	e	enum:__anon335
WP_MGTURRET	src/game/bg_public.h	/^  WP_MGTURRET,$/;"	e	enum:__anon335
WP_NONE	src/game/bg_public.h	/^  WP_NONE,$/;"	e	enum:__anon335
WP_NUM_WEAPONS	src/game/bg_public.h	/^  WP_NUM_WEAPONS$/;"	e	enum:__anon335
WP_PAIN_SAW	src/game/bg_public.h	/^  WP_PAIN_SAW,$/;"	e	enum:__anon335
WP_PULSE_RIFLE	src/game/bg_public.h	/^  WP_PULSE_RIFLE,$/;"	e	enum:__anon335
WP_SHOTGUN	src/game/bg_public.h	/^  WP_SHOTGUN,$/;"	e	enum:__anon335
WP_TESLAGEN	src/game/bg_public.h	/^  WP_TESLAGEN,$/;"	e	enum:__anon335
WR	src/qcommon/vm_sparc.c	/^	WRI, WR,$/;"	e	enum:sparc_iname	file:
WRAP_POINT_EPSILON	src/qcommon/cm_patch.h	101;"	d
WRC_Abort	src/server/sqlite3.c	14129;"	d	file:
WRC_Continue	src/server/sqlite3.c	14127;"	d	file:
WRC_Prune	src/server/sqlite3.c	14128;"	d	file:
WRI	src/qcommon/vm_sparc.c	/^	WRI, WR,$/;"	e	enum:sparc_iname	file:
WRITE_2BYTES	src/client/cl_avi.c	/^static ID_INLINE void WRITE_2BYTES( int x )$/;"	f	file:
WRITE_4BYTES	src/client/cl_avi.c	/^static ID_INLINE void WRITE_4BYTES( int x )$/;"	f	file:
WRITE_LOCK	src/server/sqlite3.c	55134;"	d	file:
WRITE_STRING	src/client/cl_avi.c	/^static ID_INLINE void WRITE_STRING( const char *s )$/;"	f	file:
WRITE_UTF16BE	src/server/sqlite3.c	24954;"	d	file:
WRITE_UTF16LE	src/server/sqlite3.c	24942;"	d	file:
WRITE_UTF8	src/server/sqlite3.c	155934;"	d	file:
WRITE_UTF8	src/server/sqlite3.c	186917;"	d	file:
WRITE_UTF8	src/server/sqlite3.c	24922;"	d	file:
WS	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	e	enum:toktype
WS1	src/tools/lcc/cpp/lex.c	/^	CC1, CC2, WS1, PLUS1, MINUS1, STAR1, SLASH1, PCT1, SHARP1,$/;"	e	enum:state	file:
Wal	src/server/sqlite3.c	/^struct Wal {$/;"	s	file:
Wal	src/server/sqlite3.c	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal	file:
WalCkptInfo	src/server/sqlite3.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	src/server/sqlite3.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalIndexHdr	src/server/sqlite3.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	src/server/sqlite3.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIterator	src/server/sqlite3.c	/^struct WalIterator {$/;"	s	file:
WalIterator	src/server/sqlite3.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalSegment	src/server/sqlite3.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
WalWriter	src/server/sqlite3.c	/^typedef struct WalWriter {$/;"	s	file:
WalWriter	src/server/sqlite3.c	/^} WalWriter;$/;"	t	typeref:struct:WalWriter	file:
Walker	src/server/sqlite3.c	/^struct Walker {$/;"	s	file:
Walker	src/server/sqlite3.c	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker	file:
WhereAndInfo	src/server/sqlite3.c	/^struct WhereAndInfo {$/;"	s	file:
WhereAndInfo	src/server/sqlite3.c	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo	file:
WhereClause	src/server/sqlite3.c	/^struct WhereClause {$/;"	s	file:
WhereClause	src/server/sqlite3.c	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause	file:
WhereInfo	src/server/sqlite3.c	/^struct WhereInfo {$/;"	s	file:
WhereInfo	src/server/sqlite3.c	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo	file:
WhereLevel	src/server/sqlite3.c	/^struct WhereLevel {$/;"	s	file:
WhereLevel	src/server/sqlite3.c	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel	file:
WhereLoop	src/server/sqlite3.c	/^struct WhereLoop {$/;"	s	file:
WhereLoop	src/server/sqlite3.c	/^typedef struct WhereLoop WhereLoop;$/;"	t	typeref:struct:WhereLoop	file:
WhereLoopBuilder	src/server/sqlite3.c	/^struct WhereLoopBuilder {$/;"	s	file:
WhereLoopBuilder	src/server/sqlite3.c	/^typedef struct WhereLoopBuilder WhereLoopBuilder;$/;"	t	typeref:struct:WhereLoopBuilder	file:
WhereMaskSet	src/server/sqlite3.c	/^struct WhereMaskSet {$/;"	s	file:
WhereMaskSet	src/server/sqlite3.c	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet	file:
WhereOrCost	src/server/sqlite3.c	/^struct WhereOrCost {$/;"	s	file:
WhereOrCost	src/server/sqlite3.c	/^typedef struct WhereOrCost WhereOrCost;$/;"	t	typeref:struct:WhereOrCost	file:
WhereOrInfo	src/server/sqlite3.c	/^struct WhereOrInfo {$/;"	s	file:
WhereOrInfo	src/server/sqlite3.c	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo	file:
WhereOrSet	src/server/sqlite3.c	/^struct WhereOrSet {$/;"	s	file:
WhereOrSet	src/server/sqlite3.c	/^typedef struct WhereOrSet WhereOrSet;$/;"	t	typeref:struct:WhereOrSet	file:
WherePath	src/server/sqlite3.c	/^struct WherePath {$/;"	s	file:
WherePath	src/server/sqlite3.c	/^typedef struct WherePath WherePath;$/;"	t	typeref:struct:WherePath	file:
WhereScan	src/server/sqlite3.c	/^struct WhereScan {$/;"	s	file:
WhereScan	src/server/sqlite3.c	/^typedef struct WhereScan WhereScan;$/;"	t	typeref:struct:WhereScan	file:
WhereTerm	src/server/sqlite3.c	/^struct WhereTerm {$/;"	s	file:
WhereTerm	src/server/sqlite3.c	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm	file:
WideBloodSpurt	src/game/g_weapon.c	/^static void WideBloodSpurt( gentity_t *attacker, gentity_t *victim, trace_t *tr )$/;"	f	file:
Width	src/renderercommon/tr_image_png.c	/^	uint32_t Width;$/;"	m	struct:PNG_Chunk_IHDR	file:
WindingArea	src/qcommon/cm_polylib.c	/^vec_t	WindingArea (winding_t *w)$/;"	f
WindingBounds	src/qcommon/cm_polylib.c	/^void	WindingBounds (winding_t *w, vec3_t mins, vec3_t maxs)$/;"	f
WindingCenter	src/qcommon/cm_polylib.c	/^void	WindingCenter (winding_t *w, vec3_t center)$/;"	f
WindingOnPlaneSide	src/qcommon/cm_polylib.c	/^int		WindingOnPlaneSide (winding_t *w, vec3_t normal, vec_t dist)$/;"	f
WindingPlane	src/qcommon/cm_polylib.c	/^void WindingPlane (winding_t *w, vec3_t normal, vec_t *dist)$/;"	f
Window	src/ui/ui_shared.h	/^typedef windowDef_t Window;$/;"	t
Window_CacheContents	src/ui/ui_shared.c	/^static void Window_CacheContents( windowDef_t *window )$/;"	f	file:
Window_CloseCinematic	src/ui/ui_shared.c	/^static void Window_CloseCinematic( windowDef_t *window )$/;"	f	file:
Window_Init	src/ui/ui_shared.c	/^void Window_Init( Window *w )$/;"	f
Window_Paint	src/ui/ui_shared.c	/^static void Window_Paint( Window *w, float fadeAmount, float fadeClamp, float fadeCycle )$/;"	f	file:
With	src/server/sqlite3.c	/^struct With {$/;"	s	file:
With	src/server/sqlite3.c	/^typedef struct With With;$/;"	t	typeref:struct:With	file:
WriteMapFile	src/tools/asm/q3asm.c	/^static void WriteMapFile( void ) {$/;"	f	file:
WriteTGA	src/renderercommon/tr_font.c	/^void WriteTGA (char *filename, byte *data, int width, int height) {$/;"	f
WriteVmFile	src/tools/asm/q3asm.c	/^static void WriteVmFile( void ) {$/;"	f	file:
X	src/qcommon/vm_powerpc_asm.c	680;"	d	file:
XCMPL_MASK	src/qcommon/vm_powerpc_asm.c	733;"	d	file:
XCMP_MASK	src/qcommon/vm_powerpc_asm.c	729;"	d	file:
XDSS	src/qcommon/vm_powerpc_asm.c	753;"	d	file:
XDSS_MASK	src/qcommon/vm_powerpc_asm.c	754;"	d	file:
XEH_MASK	src/qcommon/vm_powerpc_asm.c	750;"	d	file:
XE_MASK	src/qcommon/vm_powerpc_asm.c	839;"	d	file:
XFL	src/qcommon/vm_powerpc_asm.c	757;"	d	file:
XFL_MASK	src/qcommon/vm_powerpc_asm.c	758;"	d	file:
XFXFXM_MASK	src/qcommon/vm_powerpc_asm.c	817;"	d	file:
XFXM	src/qcommon/vm_powerpc_asm.c	820;"	d	file:
XISEL	src/qcommon/vm_powerpc_asm.c	761;"	d	file:
XISEL_MASK	src/qcommon/vm_powerpc_asm.c	762;"	d	file:
XL	src/qcommon/vm_powerpc_asm.c	765;"	d	file:
XLBB_MASK	src/qcommon/vm_powerpc_asm.c	791;"	d	file:
XLBH_MASK	src/qcommon/vm_powerpc_asm.c	796;"	d	file:
XLBOBB_MASK	src/qcommon/vm_powerpc_asm.c	799;"	d	file:
XLBOBIBB_MASK	src/qcommon/vm_powerpc_asm.c	802;"	d	file:
XLBOCBBB_MASK	src/qcommon/vm_powerpc_asm.c	793;"	d	file:
XLLK	src/qcommon/vm_powerpc_asm.c	768;"	d	file:
XLO	src/qcommon/vm_powerpc_asm.c	774;"	d	file:
XLOCB	src/qcommon/vm_powerpc_asm.c	785;"	d	file:
XLOCB_MASK	src/qcommon/vm_powerpc_asm.c	787;"	d	file:
XLO_MASK	src/qcommon/vm_powerpc_asm.c	776;"	d	file:
XLRT_MASK	src/qcommon/vm_powerpc_asm.c	711;"	d	file:
XLYBB_MASK	src/qcommon/vm_powerpc_asm.c	792;"	d	file:
XLYLK	src/qcommon/vm_powerpc_asm.c	780;"	d	file:
XLYLK_MASK	src/qcommon/vm_powerpc_asm.c	781;"	d	file:
XL_MASK	src/qcommon/vm_powerpc_asm.c	771;"	d	file:
XNOR	src/qcommon/vm_sparc.c	/^	XNORI, XNOR,$/;"	e	enum:sparc_iname	file:
XNORI	src/qcommon/vm_sparc.c	/^	XNORI, XNOR,$/;"	e	enum:sparc_iname	file:
XN_EXPR	src/server/sqlite3.c	12987;"	d	file:
XN_ROWID	src/server/sqlite3.c	12986;"	d	file:
XO	src/qcommon/vm_powerpc_asm.c	805;"	d	file:
XOPL	src/qcommon/vm_powerpc_asm.c	726;"	d	file:
XOR	src/qcommon/vm_sparc.c	/^	XORI, XOR,$/;"	e	enum:sparc_iname	file:
XORB_MASK	src/qcommon/vm_powerpc_asm.c	810;"	d	file:
XORI	src/qcommon/vm_sparc.c	/^	XORI, XOR,$/;"	e	enum:sparc_iname	file:
XO_MASK	src/qcommon/vm_powerpc_asm.c	807;"	d	file:
XPWS	src/tools/lcc/cpp/cpp.h	37;"	d
XRARB_MASK	src/qcommon/vm_powerpc_asm.c	714;"	d	file:
XRA_MASK	src/qcommon/vm_powerpc_asm.c	699;"	d	file:
XRB_MASK	src/qcommon/vm_powerpc_asm.c	705;"	d	file:
XRC	src/qcommon/vm_powerpc_asm.c	686;"	d	file:
XRLARB_MASK	src/qcommon/vm_powerpc_asm.c	717;"	d	file:
XRTLRA_MASK	src/qcommon/vm_powerpc_asm.c	723;"	d	file:
XRTRA_MASK	src/qcommon/vm_powerpc_asm.c	720;"	d	file:
XRT_MASK	src/qcommon/vm_powerpc_asm.c	708;"	d	file:
XS	src/qcommon/vm_powerpc_asm.c	813;"	d	file:
XSPR	src/qcommon/vm_powerpc_asm.c	826;"	d	file:
XSPRBAT_MASK	src/qcommon/vm_powerpc_asm.c	832;"	d	file:
XSPRG_MASK	src/qcommon/vm_powerpc_asm.c	836;"	d	file:
XSPR_MASK	src/qcommon/vm_powerpc_asm.c	828;"	d	file:
XSTRING	src/qcommon/q_shared.h	198;"	d
XSYNC	src/qcommon/vm_powerpc_asm.c	744;"	d	file:
XSYNC_MASK	src/qcommon/vm_powerpc_asm.c	747;"	d	file:
XS_MASK	src/qcommon/vm_powerpc_asm.c	814;"	d	file:
XTLB	src/qcommon/vm_powerpc_asm.c	740;"	d	file:
XTLB_MASK	src/qcommon/vm_powerpc_asm.c	741;"	d	file:
XTO	src/qcommon/vm_powerpc_asm.c	736;"	d	file:
XTO_MASK	src/qcommon/vm_powerpc_asm.c	737;"	d	file:
XUC	src/qcommon/vm_powerpc_asm.c	842;"	d	file:
XUC_MASK	src/qcommon/vm_powerpc_asm.c	843;"	d	file:
XWRA_MASK	src/qcommon/vm_powerpc_asm.c	702;"	d	file:
X_MASK	src/qcommon/vm_powerpc_asm.c	692;"	d	file:
Xinterface	src/tools/lcc/src/config.h	/^} Xinterface;$/;"	t	typeref:struct:__anon273
Xnode	src/tools/lcc/src/config.h	/^} Xnode;$/;"	t	typeref:struct:__anon274
Xsymbol	src/tools/lcc/src/config.h	/^} Xsymbol;$/;"	t	typeref:struct:__anon277
Xtype	src/tools/lcc/src/c.h	/^} Xtype;$/;"	t	typeref:struct:__anon282
Y	src/server/sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
YAW	src/qcommon/q_shared.h	221;"	d
YCoCgAtoRGBA	src/renderergl2/tr_image.c	/^static void YCoCgAtoRGBA(const byte *in, byte *out, int width, int height)$/;"	f	file:
YYABORT	src/tools/lcc/lburg/gram.c	571;"	d	file:
YYACCEPT	src/tools/lcc/lburg/gram.c	570;"	d	file:
YYACTIONTYPE	src/server/sqlite3.c	128571;"	d	file:
YYBACKUP	src/tools/lcc/lburg/gram.c	577;"	d	file:
YYBISON	src/tools/lcc/lburg/gram.c	44;"	d	file:
YYBISON_VERSION	src/tools/lcc/lburg/gram.c	47;"	d	file:
YYCASE_	src/tools/lcc/lburg/gram.c	918;"	d	file:
YYCASE_	src/tools/lcc/lburg/gram.c	928;"	d	file:
YYCODETYPE	src/server/sqlite3.c	128569;"	d	file:
YYCOPY	src/tools/lcc/lburg/gram.c	374;"	d	file:
YYCOPY	src/tools/lcc/lburg/gram.c	377;"	d	file:
YYCOPY_NEEDED	src/tools/lcc/lburg/gram.c	349;"	d	file:
YYDEBUG	src/tools/lcc/lburg/gram.c	94;"	d	file:
YYDPRINTF	src/tools/lcc/lburg/gram.c	608;"	d	file:
YYDPRINTF	src/tools/lcc/lburg/gram.c	723;"	d	file:
YYEMPTY	src/tools/lcc/lburg/gram.c	567;"	d	file:
YYEOF	src/tools/lcc/lburg/gram.c	568;"	d	file:
YYERRCODE	src/tools/lcc/lburg/gram.c	596;"	d	file:
YYERROR	src/tools/lcc/lburg/gram.c	572;"	d	file:
YYERROR_VERBOSE	src/tools/lcc/lburg/gram.c	85;"	d	file:
YYERROR_VERBOSE	src/tools/lcc/lburg/gram.c	86;"	d	file:
YYERROR_VERBOSE	src/tools/lcc/lburg/gram.c	88;"	d	file:
YYFALLBACK	src/server/sqlite3.c	128598;"	d	file:
YYFINAL	src/tools/lcc/lburg/gram.c	390;"	d	file:
YYFPRINTF	src/tools/lcc/lburg/gram.c	605;"	d	file:
YYFREE	src/tools/lcc/lburg/gram.c	320;"	d	file:
YYINITDEPTH	src/tools/lcc/lburg/gram.c	732;"	d	file:
YYLAST	src/tools/lcc/lburg/gram.c	392;"	d	file:
YYMALLOC	src/tools/lcc/lburg/gram.c	314;"	d	file:
YYMALLOCARGTYPE	src/server/sqlite3.c	128343;"	d	file:
YYMALLOCARGTYPE	src/server/sqlite3.c	129716;"	d	file:
YYMAXDEPTH	src/tools/lcc/lburg/gram.c	743;"	d	file:
YYMAXUTOK	src/tools/lcc/lburg/gram.c	406;"	d	file:
YYMINORTYPE	src/server/sqlite3.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon216	file:
YYNNTS	src/tools/lcc/lburg/gram.c	397;"	d	file:
YYNOCODE	src/server/sqlite3.c	128570;"	d	file:
YYNOERRORRECOVERY	src/server/sqlite3.c	128326;"	d	file:
YYNRULE	src/server/sqlite3.c	128600;"	d	file:
YYNRULES	src/tools/lcc/lburg/gram.c	399;"	d	file:
YYNSTATE	src/server/sqlite3.c	128599;"	d	file:
YYNSTATES	src/tools/lcc/lburg/gram.c	401;"	d	file:
YYNTOKENS	src/tools/lcc/lburg/gram.c	395;"	d	file:
YYPACT_NINF	src/tools/lcc/lburg/gram.c	476;"	d	file:
YYPARSEFREENEVERNULL	src/server/sqlite3.c	128337;"	d	file:
YYPOPSTACK	src/tools/lcc/lburg/gram.c	1043;"	d	file:
YYPULL	src/tools/lcc/lburg/gram.c	59;"	d	file:
YYPURE	src/tools/lcc/lburg/gram.c	53;"	d	file:
YYPUSH	src/tools/lcc/lburg/gram.c	56;"	d	file:
YYRECOVERING	src/tools/lcc/lburg/gram.c	575;"	d	file:
YYSIZE_MAXIMUM	src/tools/lcc/lburg/gram.c	193;"	d	file:
YYSIZE_T	src/tools/lcc/lburg/gram.c	182;"	d	file:
YYSIZE_T	src/tools/lcc/lburg/gram.c	184;"	d	file:
YYSIZE_T	src/tools/lcc/lburg/gram.c	187;"	d	file:
YYSIZE_T	src/tools/lcc/lburg/gram.c	189;"	d	file:
YYSKELETON_NAME	src/tools/lcc/lburg/gram.c	50;"	d	file:
YYSTACKDEPTH	src/server/sqlite3.c	128592;"	d	file:
YYSTACK_ALLOC	src/tools/lcc/lburg/gram.c	268;"	d	file:
YYSTACK_ALLOC	src/tools/lcc/lburg/gram.c	272;"	d	file:
YYSTACK_ALLOC	src/tools/lcc/lburg/gram.c	277;"	d	file:
YYSTACK_ALLOC	src/tools/lcc/lburg/gram.c	300;"	d	file:
YYSTACK_ALLOC_MAXIMUM	src/tools/lcc/lburg/gram.c	297;"	d	file:
YYSTACK_ALLOC_MAXIMUM	src/tools/lcc/lburg/gram.c	303;"	d	file:
YYSTACK_BYTES	src/tools/lcc/lburg/gram.c	345;"	d	file:
YYSTACK_FREE	src/tools/lcc/lburg/gram.c	291;"	d	file:
YYSTACK_FREE	src/tools/lcc/lburg/gram.c	301;"	d	file:
YYSTACK_GAP_MAXIMUM	src/tools/lcc/lburg/gram.c	341;"	d	file:
YYSTACK_RELOCATE	src/tools/lcc/lburg/gram.c	356;"	d	file:
YYSTYPE	src/tools/lcc/lburg/gram.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	src/tools/lcc/lburg/gram.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE_IS_DECLARED	src/tools/lcc/lburg/gram.c	137;"	d	file:
YYSTYPE_IS_TRIVIAL	src/tools/lcc/lburg/gram.c	136;"	d	file:
YYTABLE_NINF	src/tools/lcc/lburg/gram.c	481;"	d	file:
YYTERROR	src/tools/lcc/lburg/gram.c	595;"	d	file:
YYTOKENTYPE	src/tools/lcc/lburg/gram.c	102;"	d	file:
YYTRANSLATE	src/tools/lcc/lburg/gram.c	408;"	d	file:
YYUNDEFTOK	src/tools/lcc/lburg/gram.c	405;"	d	file:
YYUSE	src/tools/lcc/lburg/gram.c	236;"	d	file:
YYUSE	src/tools/lcc/lburg/gram.c	238;"	d	file:
YYWILDCARD	src/server/sqlite3.c	128572;"	d	file:
YY_	src/tools/lcc/lburg/gram.c	199;"	d	file:
YY_	src/tools/lcc/lburg/gram.c	203;"	d	file:
YY_ACCEPT_ACTION	src/server/sqlite3.c	128607;"	d	file:
YY_ACTTAB_COUNT	src/server/sqlite3.c	128676;"	d	file:
YY_ATTRIBUTE	src/tools/lcc/lburg/gram.c	211;"	d	file:
YY_ATTRIBUTE	src/tools/lcc/lburg/gram.c	213;"	d	file:
YY_ATTRIBUTE_PURE	src/tools/lcc/lburg/gram.c	218;"	d	file:
YY_ATTRIBUTE_UNUSED	src/tools/lcc/lburg/gram.c	222;"	d	file:
YY_ERROR_ACTION	src/server/sqlite3.c	128606;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	src/tools/lcc/lburg/gram.c	243;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	src/tools/lcc/lburg/gram.c	253;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	src/tools/lcc/lburg/gram.c	247;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	src/tools/lcc/lburg/gram.c	254;"	d	file:
YY_INITIAL_VALUE	src/tools/lcc/lburg/gram.c	250;"	d	file:
YY_INITIAL_VALUE	src/tools/lcc/lburg/gram.c	257;"	d	file:
YY_LOCATION_PRINT	src/tools/lcc/lburg/gram.c	616;"	d	file:
YY_MAX_REDUCE	src/server/sqlite3.c	128605;"	d	file:
YY_MAX_SHIFT	src/server/sqlite3.c	128601;"	d	file:
YY_MAX_SHIFTREDUCE	src/server/sqlite3.c	128603;"	d	file:
YY_MIN_REDUCE	src/server/sqlite3.c	128604;"	d	file:
YY_MIN_SHIFTREDUCE	src/server/sqlite3.c	128602;"	d	file:
YY_NO_ACTION	src/server/sqlite3.c	128608;"	d	file:
YY_NULLPTR	src/tools/lcc/lburg/gram.c	77;"	d	file:
YY_NULLPTR	src/tools/lcc/lburg/gram.c	79;"	d	file:
YY_REDUCE_COUNT	src/server/sqlite3.c	129032;"	d	file:
YY_REDUCE_MAX	src/server/sqlite3.c	129034;"	d	file:
YY_REDUCE_MIN	src/server/sqlite3.c	129033;"	d	file:
YY_REDUCE_PRINT	src/tools/lcc/lburg/gram.c	713;"	d	file:
YY_REDUCE_PRINT	src/tools/lcc/lburg/gram.c	726;"	d	file:
YY_REDUCE_USE_DFLT	src/server/sqlite3.c	129031;"	d	file:
YY_SHIFT_COUNT	src/server/sqlite3.c	128982;"	d	file:
YY_SHIFT_MAX	src/server/sqlite3.c	128984;"	d	file:
YY_SHIFT_MIN	src/server/sqlite3.c	128983;"	d	file:
YY_SHIFT_USE_DFLT	src/server/sqlite3.c	128981;"	d	file:
YY_STACK_PRINT	src/tools/lcc/lburg/gram.c	682;"	d	file:
YY_STACK_PRINT	src/tools/lcc/lburg/gram.c	725;"	d	file:
YY_SYMBOL_PRINT	src/tools/lcc/lburg/gram.c	620;"	d	file:
YY_SYMBOL_PRINT	src/tools/lcc/lburg/gram.c	724;"	d	file:
YYcheck	src/tools/lcc/src/main.c	/^Symbol YYcheck;		\/* _YYcheck symbol if -nvalidate,check specified *\/$/;"	v
YYcounts	src/tools/lcc/src/prof.c	/^static Symbol YYcounts;	\/* symbol for _YYcounts if -b specified *\/$/;"	v	file:
YYlink	src/tools/lcc/src/prof.c	/^static Symbol YYlink;	\/* symbol for file's struct _bbdata *\/$/;"	v	file:
YYnull	src/tools/lcc/src/main.c	/^Symbol YYnull;		\/* _YYnull  symbol if -n or -nvalidate specified *\/$/;"	v
Y_MASK	src/qcommon/vm_powerpc_asm.c	583;"	d	file:
Y_REG	src/qcommon/vm_sparc.h	73;"	d
Z	src/qcommon/vm_powerpc_asm.c	683;"	d	file:
Z2_MASK	src/qcommon/vm_powerpc_asm.c	696;"	d	file:
ZA_SOUND_MONO	src/client/cl_cin.c	51;"	d	file:
ZA_SOUND_STEREO	src/client/cl_cin.c	52;"	d	file:
ZDIR	GNUmakefile	/^ZDIR=$(DEP_DIR)\/zlib$/;"	m
ZERO_PAGE_SIZE	src/tools/asm/q3asm.c	35;"	d	file:
ZLIB_CFLAGS	GNUmakefile	/^  ZLIB_CFLAGS = -DNO_GZIP -I$(ZDIR)$/;"	m
ZLIB_CFLAGS	GNUmakefile	/^  ZLIB_CFLAGS ?= $(shell pkg-config --silence-errors --cflags zlib || true)$/;"	m
ZLIB_LIBS	GNUmakefile	/^  ZLIB_LIBS ?= $(shell pkg-config --silence-errors --libs zlib || echo -lz)$/;"	m
ZONEID	src/qcommon/common.c	743;"	d	file:
ZONE_DEBUG	src/qcommon/qcommon.h	904;"	d
ZOOM_TIME	src/cgame/cg_local.h	52;"	d
ZRC	src/qcommon/vm_powerpc_asm.c	689;"	d	file:
Z_AvailableMemory	src/qcommon/common.c	/^int Z_AvailableMemory( void ) {$/;"	f
Z_AvailableZoneMemory	src/qcommon/common.c	/^int Z_AvailableZoneMemory( memzone_t *zone ) {$/;"	f
Z_CheckHeap	src/qcommon/common.c	/^void Z_CheckHeap( void ) {$/;"	f
Z_ClearZone	src/qcommon/common.c	/^void Z_ClearZone( memzone_t *zone, int size ) {$/;"	f
Z_Free	src/qcommon/common.c	/^void Z_Free( void *ptr ) {$/;"	f
Z_FreeTags	src/qcommon/common.c	/^void Z_FreeTags( int tag ) {$/;"	f
Z_LogHeap	src/qcommon/common.c	/^void Z_LogHeap( void ) {$/;"	f
Z_LogZoneHeap	src/qcommon/common.c	/^void Z_LogZoneHeap( memzone_t *zone, char *name ) {$/;"	f
Z_MASK	src/qcommon/vm_powerpc_asm.c	695;"	d	file:
Z_Malloc	src/qcommon/qcommon.h	909;"	d
Z_MallocDebug	src/qcommon/common.c	/^void *Z_MallocDebug( int size, char *label, char *file, int line ) {$/;"	f
Z_TagMalloc	src/qcommon/qcommon.h	908;"	d
Z_TagMallocDebug	src/qcommon/common.c	/^void *Z_TagMallocDebug( int size, int tag, char *label, char *file, int line ) {$/;"	f
_	src/qcommon/vm_powerpc_asm.c	228;"	d	file:
_4	src/server/server.h	/^		byte	_4[4];$/;"	m	union:leakyBucket_s::__anon189
_6	src/server/server.h	/^		byte	_6[16];$/;"	m	union:leakyBucket_s::__anon189
_APS_NEXT_COMMAND_VALUE	src/sys/win_resource.h	41;"	d
_APS_NEXT_CONTROL_VALUE	src/sys/win_resource.h	42;"	d
_APS_NEXT_RESOURCE_VALUE	src/sys/win_resource.h	40;"	d
_APS_NEXT_SYMED_VALUE	src/sys/win_resource.h	43;"	d
_APS_NO_MFC	src/sys/win_resource.h	39;"	d
_BSD_SOCKLEN_T_	src/qcommon/net_ip.c	64;"	d	file:
_BSD_SOURCE	src/server/sqlite3.c	185;"	d	file:
_BTREE_H_	src/server/sqlite3.c	10361;"	d	file:
_CEIL	src/renderercommon/tr_font.c	84;"	d	file:
_COMMON_H_	src/master/common.h	25;"	d
_CRT_RAND_S	src/server/sqlite3.c	48;"	d	file:
_DotProduct	src/qcommon/q_math.c	/^vec_t _DotProduct( const vec3_t v1, const vec3_t v2 ) {$/;"	f
_FILE_OFFSET_BITS	src/server/sqlite3.c	167;"	d	file:
_FLOOR	src/renderercommon/tr_font.c	83;"	d	file:
_FTS3_HASH_H_	src/server/sqlite3.c	138054;"	d	file:
_FTS3_TOKENIZER_H_	src/server/sqlite3.c	137891;"	d	file:
_FTS5INT_H	src/server/sqlite3.c	169262;"	d	file:
_FTS5_H	src/server/sqlite3.c	168690;"	d	file:
_FTS5_H	src/server/sqlite3.c	8402;"	d	file:
_FTS5_H	src/server/sqlite3.h	8177;"	d
_FTSINT_H	src/server/sqlite3.c	137839;"	d	file:
_FloatByteUnion	src/tools/asm/cmdlib.c	/^} _FloatByteUnion;$/;"	t	typeref:union:__anon263	file:
_GNU_SOURCE	src/server/sqlite3.c	181;"	d	file:
_G_ADMIN_H	src/game/g_admin.h	24;"	d
_HWTIME_H_	src/server/sqlite3.c	21414;"	d	file:
_HWTIME_H_	src/server/sqlite3.c	27655;"	d	file:
_HWTIME_H_	src/server/sqlite3.c	35175;"	d	file:
_HWTIME_H_	src/server/sqlite3.c	74899;"	d	file:
_INTSIZEOF	src/game/bg_lib.h	38;"	d
_LARGEFILE_SOURCE	src/server/sqlite3.c	169;"	d	file:
_LARGE_FILE	src/server/sqlite3.c	165;"	d	file:
_MCW_EM	src/sys/sys_win32.c	61;"	d	file:
_MCW_PC	src/sys/sys_win32.c	63;"	d	file:
_MCW_RC	src/sys/sys_win32.c	62;"	d	file:
_MESSAGES_H_	src/master/messages.h	25;"	d
_MSVC_H_	src/server/sqlite3.c	74;"	d	file:
_Noreturn	src/tools/lcc/lburg/gram.c	228;"	d	file:
_Noreturn	src/tools/lcc/lburg/gram.c	230;"	d	file:
_OS_COMMON_H_	src/server/sqlite3.c	21375;"	d	file:
_OS_COMMON_H_	src/server/sqlite3.c	27616;"	d	file:
_OS_COMMON_H_	src/server/sqlite3.c	35136;"	d	file:
_OS_SETUP_H_	src/server/sqlite3.c	11655;"	d	file:
_OS_WIN_H_	src/server/sqlite3.c	21573;"	d	file:
_PAGER_H_	src/server/sqlite3.c	11218;"	d	file:
_PC_53	src/sys/sys_win32.c	65;"	d	file:
_POSIX_C_SOURCE	src/client/libmumblelink.c	30;"	d	file:
_P_WAIT	src/tools/lcc/etc/lcc.c	286;"	d	file:
_QCOMMON_H_	src/qcommon/qcommon.h	25;"	d
_RC_NEAR	src/sys/sys_win32.c	64;"	d	file:
_SERVERS_H_	src/master/servers.h	25;"	d
_SHM_RDLCK	src/server/sqlite3.c	38809;"	d	file:
_SHM_UNLCK	src/server/sqlite3.c	38808;"	d	file:
_SHM_WRLCK	src/server/sqlite3.c	38810;"	d	file:
_SND_CODEC_H_	src/client/snd_codec.h	26;"	d
_SQLITE3EXT_H_	src/server/sqlite3.c	105883;"	d	file:
_SQLITE3RBU_H	src/server/sqlite3.c	161324;"	d	file:
_SQLITE3RTREE_H_	src/server/sqlite3.c	8278;"	d	file:
_SQLITE3RTREE_H_	src/server/sqlite3.h	8053;"	d
_SQLITE3_H_	src/server/sqlite3.c	259;"	d	file:
_SQLITE3_H_	src/server/sqlite3.h	34;"	d
_SQLITEINT_H_	src/server/sqlite3.c	41;"	d	file:
_SQLITE_HASH_H_	src/server/sqlite3.c	9533;"	d	file:
_SQLITE_OS_C_	src/server/sqlite3.c	17894;"	d	file:
_SQLITE_OS_C_	src/server/sqlite3.c	17896;"	d	file:
_SQLITE_OS_H_	src/server/sqlite3.c	11631;"	d	file:
_SQLITE_VDBE_H_	src/server/sqlite3.c	10703;"	d	file:
_S_AL_SanitiseVector	src/client/snd_openal.c	/^static void _S_AL_SanitiseVector( vec3_t v, int line )$/;"	f	file:
_Scroll_ListBox_AutoFunc	src/ui/ui_shared.c	/^static void _Scroll_ListBox_AutoFunc( scrollInfo_t *si )$/;"	f	file:
_Scroll_ListBox_ThumbFunc	src/ui/ui_shared.c	/^static void _Scroll_ListBox_ThumbFunc( scrollInfo_t *si )$/;"	f	file:
_TRUNC	src/renderercommon/tr_font.c	85;"	d	file:
_TargaHeader	src/renderercommon/tr_image_tga.c	/^typedef struct _TargaHeader {$/;"	s	file:
_USE_32BIT_TIME_T	src/server/sqlite3.c	217;"	d	file:
_VDBEINT_H_	src/server/sqlite3.c	15864;"	d	file:
_VectorAdd	src/qcommon/q_math.c	/^void _VectorAdd( const vec3_t veca, const vec3_t vecb, vec3_t out ) {$/;"	f
_VectorCopy	src/qcommon/q_math.c	/^void _VectorCopy( const vec3_t in, vec3_t out ) {$/;"	f
_VectorMA	src/qcommon/q_math.c	/^void _VectorMA( const vec3_t veca, float scale, const vec3_t vecb, vec3_t vecc) {$/;"	f
_VectorScale	src/qcommon/q_math.c	/^void _VectorScale( const vec3_t in, vec_t scale, vec3_t out ) {$/;"	f
_VectorSubtract	src/qcommon/q_math.c	/^void _VectorSubtract( const vec3_t veca, const vec3_t vecb, vec3_t out ) {$/;"	f
_WAL_H_	src/server/sqlite3.c	43888;"	d	file:
_XOPEN_SOURCE	src/server/sqlite3.c	9351;"	d	file:
__ASM_I386__	src/asm/qasm.h	24;"	d
__ASM_INLINE_I386__	src/asm/qasm-inline.h	24;"	d
__BSD__	src/qcommon/q_platform.h	237;"	d
__BYTEBOOL__	src/tools/asm/cmdlib.h	55;"	d
__CMDLIB__	src/tools/asm/cmdlib.h	26;"	d
__IQM_H__	src/renderercommon/iqm.h	24;"	d
__KEYCODES_H__	src/client/keycodes.h	25;"	d
__MATHLIB__	src/tools/asm/mathlib.h	24;"	d
__PUFF_H	src/qcommon/puff.h	31;"	d
__Q3_VM_MATH	src/qcommon/q_math.c	30;"	d	file:
__QAL_H__	src/client/qal.h	27;"	d
__QCURL_H__	src/client/cl_curl.h	26;"	d
__QFILES_H__	src/qcommon/qfiles.h	24;"	d
__QGL_H__	src/renderercommon/qgl.h	28;"	d
__Q_PLATFORM_H	src/qcommon/q_platform.h	25;"	d
__Q_SHARED_H	src/qcommon/q_shared.h	25;"	d
__STDC__	src/tools/lcc/src/c.h	27;"	d
__TR_EXTRAMATH_H__	src/renderergl2/tr_extramath.h	25;"	d
__TR_EXTRATYPES_H__	src/renderergl2/tr_extratypes.h	24;"	d
__TR_FBO_H__	src/renderergl2/tr_fbo.h	25;"	d
__TR_PUBLIC_H	src/renderercommon/tr_public.h	24;"	d
__TR_TYPES_H	src/renderercommon/tr_types.h	25;"	d
__UI_SHARED_H	src/ui/ui_shared.h	25;"	d
__attribute__	src/qcommon/q_shared.h	82;"	d
__attribute__	src/qcommon/qcommon.h	32;"	d
__attribute__	src/qcommon/qfiles.h	34;"	d
__declspec	src/client/snd_mix.c	/^__declspec( naked ) void S_WriteLinearBlastStereo16 (void)$/;"	f
__declspec	src/server/sqlite3.c	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
__declspec	src/server/sqlite3.c	/^__declspec(dllexport)$/;"	f
__do_emit_one	src/qcommon/vm_sparc.c	/^static void __do_emit_one(struct func_info * const fp, unsigned int insn)$/;"	f	file:
__func__	src/qcommon/files.c	296;"	d	file:
__func__	src/qcommon/files.c	298;"	d	file:
__lwbrx	src/qcommon/vm_interpreted.c	/^static ID_INLINE unsigned int __lwbrx(register void *addr,$/;"	f	file:
__scalbnf	src/game/bg_lib.c	/^static float __scalbnf( float x, int n )$/;"	f	file:
_atof	src/game/bg_lib.c	/^double _atof( const char **stringPtr )$/;"	f
_atoi	src/game/bg_lib.c	/^int _atoi( const char **stringPtr )$/;"	f
_flag_status	src/qcommon/q_shared.h	/^typedef enum _flag_status {$/;"	g
_fts3ht	src/server/sqlite3.c	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash	file:
_hextoi	src/game/bg_lib.c	/^unsigned int _hextoi( const char **stringPtr )$/;"	f
_ht	src/server/sqlite3.c	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash	file:
_is_playermodel_uniq	src/game/g_playermodel.c	/^_is_playermodel_uniq(const char *model)$/;"	f	file:
_isinstruction	src/tools/lcc/src/config.h	/^	char *_isinstruction;$/;"	m	struct:__anon273
_kids	src/tools/lcc/src/config.h	/^	void (*_kids)(Node, int, Node*);$/;"	m	struct:__anon273
_label	src/tools/lcc/src/config.h	/^	void (*_label)(Node);$/;"	m	struct:__anon273
_ntname	src/tools/lcc/src/config.h	/^	char **_ntname;$/;"	m	struct:__anon273
_nts	src/tools/lcc/src/config.h	/^	short **_nts;$/;"	m	struct:__anon273
_printf	src/tools/asm/cmdlib.c	/^void _printf( const char *format, ... ) {$/;"	f
_rule	src/tools/lcc/src/config.h	/^	int (*_rule)(void*, int);$/;"	m	struct:__anon273
_sqliteZone_	src/server/sqlite3.c	/^static malloc_zone_t* _sqliteZone_;$/;"	v	file:
_string	src/tools/lcc/src/config.h	/^	char **_string;$/;"	m	struct:__anon273
_templates	src/tools/lcc/src/config.h	/^	char **_templates;$/;"	m	struct:__anon273
_vmf	src/qcommon/qcommon.h	/^static ID_INLINE float _vmf(intptr_t x)$/;"	f
a	src/client/cl_avi.c	/^  audioFormat_t a;$/;"	m	struct:aviFileData_s	file:
a	src/server/sqlite3.c	/^  FuncDef *a[SQLITE_FUNC_HASH_SZ];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash	file:
a	src/server/sqlite3.c	/^  Stat4Sample *a;           \/* Array of mxSample Stat4Sample objects *\/$/;"	m	struct:Stat4Accum	file:
a	src/server/sqlite3.c	/^  WhereLevel a[1];          \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo	file:
a	src/server/sqlite3.c	/^  WhereOrCost a[N_OR_COST];   \/* Set of best costs *\/$/;"	m	struct:WhereOrSet	file:
a	src/server/sqlite3.c	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause	file:
a	src/server/sqlite3.c	/^  char *a;                        \/* Pointer to allocation *\/$/;"	m	struct:Blob	file:
a	src/server/sqlite3.c	/^  const u8 *a;                    \/* Buffer containing position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
a	src/server/sqlite3.c	/^  const u8 *a;                    \/* Position list to iterate through *\/$/;"	m	struct:Fts5PoslistReader	file:
a	src/server/sqlite3.c	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter	file:
a	src/server/sqlite3.c	/^  unsigned char *a;   \/* Gather entropy into this buffer *\/$/;"	m	struct:EntropyGatherer	file:
a	src/server/sqlite3.c	/^  } *a;                  \/* Alloc a power of two greater or equal to nExpr *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item	file:
a	src/server/sqlite3.c	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item	file:
a	src/server/sqlite3.c	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item	file:
a	src/server/sqlite3.c	/^  } a[1];$/;"	m	struct:With	typeref:struct:With::Cte	file:
a	src/server/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
a	src/server/sqlite3.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	src/tools/lcc/src/alloc.c	/^	union align a;$/;"	m	union:header	typeref:union:header::align	file:
aAction	src/server/sqlite3.c	/^  u8 aAction[2];        \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey	file:
aAll	src/server/sqlite3.c	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist	file:
aAlloc	src/server/sqlite3.c	/^  u8 *aAlloc;                 \/* Space for aKey if aBuffer and pMap wont work *\/$/;"	m	struct:PmaReader	file:
aAltMap	src/server/sqlite3.c	/^  int *aAltMap;           \/* Mapping from table to index column numbers *\/$/;"	m	struct:VdbeCursor	file:
aAsciiTokenChar	src/server/sqlite3.c	/^static unsigned char aAsciiTokenChar[128] = {$/;"	v	file:
aAvgEq	src/server/sqlite3.c	/^  tRowcnt *aAvgEq;         \/* Average nEq values for keys not in aSample *\/$/;"	m	struct:Index	file:
aBest	src/server/sqlite3.c	/^  Stat4Sample *aBest;       \/* Array of nCol best samples *\/$/;"	m	struct:Stat4Accum	file:
aBitmap	src/server/sqlite3.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon207	file:
aBuf	src/server/sqlite3.c	/^  char *aBuf;$/;"	m	struct:PorterContext	file:
aBuf	src/server/sqlite3.c	/^  char aBuf[FTS5_PORTER_MAX_TOKEN + 64];$/;"	m	struct:PorterTokenizer	file:
aBuf	src/server/sqlite3.c	/^  u8 *aBuf;$/;"	m	struct:sqlite3rbu	file:
aBuffer	src/server/sqlite3.c	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader	file:
aBuffer	src/server/sqlite3.c	/^  u8 *aBuffer;                    \/* Pointer to write buffer *\/$/;"	m	struct:PmaWriter	file:
aBuffer	src/server/sqlite3.c	/^  u8 *aBuffer;                \/* Current read buffer *\/$/;"	m	struct:PmaReader	file:
aCell	src/server/sqlite3.c	/^  StatCell *aCell;                \/* Array of parsed cells *\/$/;"	m	struct:StatPage	file:
aCellIdx	src/server/sqlite3.c	/^  u8 *aCellIdx;        \/* The cell index area *\/$/;"	m	struct:MemPage	file:
aChar	src/server/sqlite3.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aCksum	src/server/sqlite3.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCnt	src/server/sqlite3.c	/^  i64 *aCnt;$/;"	m	struct:Fts5VocabCursor	file:
aCol	src/server/sqlite3.c	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table	file:
aCol	src/server/sqlite3.c	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col	file:
aCol	src/server/sqlite3.c	/^  } aCol[1];            \/* One entry for each of nCol columns *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap	file:
aColCache	src/server/sqlite3.c	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache	file:
aColExpr	src/server/sqlite3.c	/^  ExprList *aColExpr;      \/* Column expressions *\/$/;"	m	struct:Index	file:
aColName	src/server/sqlite3.c	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe	file:
aColl	src/server/sqlite3.c	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo	file:
aCollSeq	src/server/sqlite3.c	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3	file:
aColmask	src/server/sqlite3.c	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg	file:
aColumnSize	src/server/sqlite3.c	/^  int *aColumnSize;               \/* Values for xColumnSize() *\/$/;"	m	struct:Fts5Cursor	file:
aConstraint	src/server/sqlite3.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	src/server/sqlite3.c	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	file:
aConstraint	src/server/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	src/server/sqlite3.c	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
aConstraintUsage	src/server/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aCoord	src/server/sqlite3.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];  \/* Bounding box coordinates *\/$/;"	m	struct:RtreeCell	file:
aCoord	src/server/sqlite3.c	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
aCoord	src/server/sqlite3.h	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aCounter	src/server/sqlite3.c	/^  u32 aCounter[5];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe	file:
aCtrl	src/server/sqlite3.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aData	src/server/sqlite3.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	src/server/sqlite3.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	src/server/sqlite3.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	src/server/sqlite3.c	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage	file:
aDataEnd	src/server/sqlite3.c	/^  u8 *aDataEnd;        \/* One byte past the end of usable data *\/$/;"	m	struct:MemPage	file:
aDataOfst	src/server/sqlite3.c	/^  u8 *aDataOfst;       \/* Same as aData for leaves.  aData+4 for interior *\/$/;"	m	struct:MemPage	file:
aDb	src/server/sqlite3.c	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3	file:
aDbStatic	src/server/sqlite3.c	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3	file:
aDigits	src/server/sqlite3.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDlidx	src/server/sqlite3.c	/^  Fts5DlidxWriter *aDlidx;        \/* Array of Fts5DlidxWriter objects *\/$/;"	m	struct:Fts5SegWriter	file:
aDoc	src/server/sqlite3.c	/^  i64 *aDoc;$/;"	m	struct:Fts5VocabCursor	file:
aDoclist	src/server/sqlite3.c	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor	file:
aDoclist	src/server/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
aDoclist	src/server/sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aDoclist	src/server/sqlite3.c	/^  const char *aDoclist;           \/* Pointer to doclist *\/$/;"	m	struct:NodeReader	file:
aEntry	src/server/sqlite3.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aEof	src/server/sqlite3.c	/^  u8 *aEof;                       \/* Pointer to 1 byte past end of doclist *\/$/;"	m	struct:Fts5DoclistIter	file:
aExt	src/server/sqlite3.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExtension	src/server/sqlite3.c	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3	file:
aFile	src/server/sqlite3.c	/^  SorterFile aFile[2];            \/* aFile[0] for reading, [1] for writing *\/$/;"	m	struct:IncrMerger	file:
aFirst	src/server/sqlite3.c	/^  Fts5CResult *aFirst;            \/* Current merge state (see above) *\/$/;"	m	struct:Fts5Iter	file:
aFold	src/server/sqlite3.c	/^  char *aFold;                    \/* Buffer to fold text into *\/$/;"	m	struct:Unicode61Tokenizer	file:
aFrame	src/server/sqlite3.c	/^  RbuFrame *aFrame;$/;"	m	struct:sqlite3rbu	file:
aFrameCksum	src/server/sqlite3.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFreq	src/server/sqlite3.c	/^  double *aFreq;                  \/* Array used to calculate phrase freq. *\/$/;"	m	struct:Fts5Bm25Data	file:
aFunc	src/server/sqlite3.c	/^  Hash aFunc;                   \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3	file:
aFunc	src/server/sqlite3.c	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func	file:
aHardLimit	src/server/sqlite3.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHash	src/server/sqlite3.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon207	file:
aHash	src/server/sqlite3.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/ $/;"	m	struct:Rtree	file:
aIDF	src/server/sqlite3.c	/^  double *aIDF;                   \/* IDF for each phrase *\/$/;"	m	struct:Fts5Bm25Data	file:
aIdx	src/server/sqlite3.c	/^  int aIdx[1];                    \/* Offsets into aPoslist for current row *\/$/;"	m	struct:Fts5Sorter	file:
aInLoop	src/server/sqlite3.c	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon210::__anon211	typeref:struct:WhereLevel::__anon210::__anon211::InLoop	file:
aIndent	src/server/sqlite3.c	/^  u16 aIndent[100];  \/* Levels of indentation *\/$/;"	m	struct:Explain	file:
aIndex	src/server/sqlite3.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aIndex	src/server/sqlite3.c	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index	file:
aInput	src/server/sqlite3.c	/^  const unsigned char *aInput;    \/* Input text being tokenized *\/$/;"	m	struct:unicode_cursor	file:
aInst	src/server/sqlite3.c	/^  int *aInst;                     \/* 3 integers per phrase instance *\/$/;"	m	struct:Fts5Cursor	file:
aInstIter	src/server/sqlite3.c	/^  Fts5PoslistReader *aInstIter;   \/* One for each phrase *\/$/;"	m	struct:Fts5Cursor	file:
aJournalMagic	src/server/sqlite3.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aKey	src/server/sqlite3.c	/^  u8 *aKey;                   \/* Pointer to current key *\/$/;"	m	struct:PmaReader	file:
aLTerm	src/server/sqlite3.c	/^  WhereTerm **aLTerm;   \/* WhereTerms used *\/$/;"	m	struct:WhereLoop	file:
aLTermSpace	src/server/sqlite3.c	/^  WhereTerm *aLTermSpace[3];  \/* Initial aLTerm[] space *\/$/;"	m	struct:WhereLoop	file:
aLabel	src/server/sqlite3.c	/^  int *aLabel;         \/* Space to hold the labels *\/$/;"	m	struct:Parse	file:
aLevel	src/server/sqlite3.c	/^  Fts5StructureLevel aLevel[1];   \/* Array of nLevel level objects *\/$/;"	m	struct:Fts5Structure	file:
aLimit	src/server/sqlite3.c	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3	file:
aLock	src/server/sqlite3.c	/^  u8 aLock[SQLITE_SHM_NLOCK];     \/* Reserved space for locks *\/$/;"	m	struct:WalCkptInfo	file:
aLoop	src/server/sqlite3.c	/^  WhereLoop **aLoop;    \/* Array of WhereLoop objects implementing this path *\/$/;"	m	struct:WherePath	file:
aLvl	src/server/sqlite3.c	/^  Fts5DlidxLvl aLvl[1];$/;"	m	struct:Fts5DlidxIter	file:
aMI	src/server/sqlite3.c	/^  u32 *aMI;                  \/* See above *\/$/;"	m	struct:Fts3Expr	file:
aMap	src/server/sqlite3.c	/^  u8 *aMap;                   \/* Pointer to mapping of entire file *\/$/;"	m	struct:PmaReader	file:
aMatchinfo	src/server/sqlite3.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMatchinfo	src/server/sqlite3.c	/^  u32 aMatchinfo[1];$/;"	m	struct:MatchinfoBuffer	file:
aMem	src/server/sqlite3.c	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aMem	src/server/sqlite3.c	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe	file:
aMem	src/server/sqlite3.c	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord	file:
aMemory	src/server/sqlite3.c	/^  u8 *aMemory;                    \/* If non-NULL, bulk memory to hold pList *\/$/;"	m	struct:SorterList	file:
aModule	src/server/sqlite3.c	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3	file:
aNode	src/server/sqlite3.c	/^  JsonNode *aNode;   \/* Array of nodes containing the parse *\/$/;"	m	struct:JsonParse	file:
aNode	src/server/sqlite3.c	/^  RtreeNode *aNode[RTREE_CACHE_SZ]; \/* Rtree node cache *\/$/;"	m	struct:RtreeCursor	file:
aNode	src/server/sqlite3.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aNode	src/server/sqlite3.c	/^  const char *aNode;$/;"	m	struct:NodeReader	file:
aNodeWriter	src/server/sqlite3.c	/^  NodeWriter aNodeWriter[FTS_MAX_APPENDABLE_HEIGHT];$/;"	m	struct:IncrmergeWriter	file:
aOffset	src/server/sqlite3.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	src/server/sqlite3.c	/^  u32 *aOffset;         \/* Pointer to aType[nField] *\/$/;"	m	struct:VdbeCursor	file:
aOnceFlag	src/server/sqlite3.c	/^  u8 *aOnceFlag;          \/* Array of OP_Once flags for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOnceFlag	src/server/sqlite3.c	/^  u8 *aOnceFlag;          \/* Flags for OP_Once *\/$/;"	m	struct:Vdbe	file:
aOp	src/server/sqlite3.c	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOp	src/server/sqlite3.c	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe	file:
aOp	src/server/sqlite3.c	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram	file:
aOrderBy	src/server/sqlite3.c	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	file:
aOrderBy	src/server/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aOverflow	src/server/sqlite3.c	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor	file:
aOvfl	src/server/sqlite3.c	/^  u32 *aOvfl;                     \/* Array of overflow page numbers *\/$/;"	m	struct:StatCell	file:
aPadding	src/server/sqlite3.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aPage	src/server/sqlite3.c	/^  StatPage aPage[32];$/;"	m	struct:StatCursor	file:
aParam	src/server/sqlite3.c	/^  RtreeDValue aParam[1];      \/* Values for parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
aParam	src/server/sqlite3.c	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
aParam	src/server/sqlite3.c	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
aParam	src/server/sqlite3.h	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	src/server/sqlite3.h	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aPgRef	src/server/sqlite3.c	/^  u8 *aPgRef;       \/* 1 bit per page in the db (see above) *\/$/;"	m	struct:IntegrityCk	file:
aPgno	src/server/sqlite3.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPhrase	src/server/sqlite3.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPoint	src/server/sqlite3.c	/^  RtreeSearchPoint *aPoint;         \/* Priority queue for search points *\/$/;"	m	struct:RtreeCursor	file:
aPool	src/server/sqlite3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPopulator	src/server/sqlite3.c	/^  Fts5PoslistPopulator *aPopulator;$/;"	m	struct:Fts5ExprCtx	file:
aPoslist	src/server/sqlite3.c	/^  const u8 *aPoslist;             \/* Position lists for current row *\/$/;"	m	struct:Fts5Sorter	file:
aPoslist	src/server/sqlite3.c	/^  u8 *aPoslist;$/;"	m	struct:Fts5DoclistIter	file:
aPragmaNames	src/server/sqlite3.c	/^} aPragmaNames[] = {$/;"	v	typeref:struct:sPragmaNames	file:
aPrefix	src/server/sqlite3.c	/^  int *aPrefix;                   \/* Sizes in bytes of nPrefix prefix indexes *\/$/;"	m	struct:Fts5Config	file:
aPrefix	src/server/sqlite3.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aReadMark	src/server/sqlite3.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aReadr	src/server/sqlite3.c	/^  PmaReader *aReadr;         \/* Array of PmaReaders to merge data from *\/$/;"	m	struct:MergeEngine	file:
aRef	src/server/sqlite3.c	/^  u8 aRef[3];$/;"	m	struct:MatchinfoBuffer	file:
aRegion	src/server/sqlite3.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aRow	src/server/sqlite3.c	/^  const u8 *aRow;       \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor	file:
aRowid	src/server/sqlite3.c	/^    u8 *aRowid;                     \/* Key for WITHOUT ROWID tables *\/$/;"	m	union:Stat4Sample::__anon209	file:
aRowidOffset	src/server/sqlite3.c	/^  int *aRowidOffset;              \/* Array of offset to rowid fields *\/$/;"	m	struct:Fts5SegIter	file:
aSalt	src/server/sqlite3.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSample	src/server/sqlite3.c	/^  IndexSample *aSample;    \/* Samples of the left-most key *\/$/;"	m	struct:Index	file:
aSavepoint	src/server/sqlite3.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aScan	src/server/sqlite3.c	/^  ScanStatus *aScan;      \/* Scan definitions for sqlite3_stmt_scanstatus() *\/$/;"	m	struct:Vdbe	file:
aSeg	src/server/sqlite3.c	/^  Fts5SegIter aSeg[1];            \/* Array of segment iterators *\/$/;"	m	struct:Fts5Iter	file:
aSeg	src/server/sqlite3.c	/^  Fts5StructureSegment *aSeg;     \/* Array of segments. aSeg[0] is oldest. *\/$/;"	m	struct:Fts5StructureLevel	file:
aSegment	src/server/sqlite3.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSemName	src/server/sqlite3.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSlot	src/server/sqlite3.c	/^  Fts5HashEntry **aSlot;          \/* Array of hash slots *\/$/;"	m	struct:Fts5Hash	file:
aSortOrder	src/server/sqlite3.c	/^  u8 *aSortOrder;          \/* for each column: True==DESC, False==ASC *\/$/;"	m	struct:Index	file:
aSortOrder	src/server/sqlite3.c	/^  u8 *aSortOrder;     \/* Sort order for each column. *\/$/;"	m	struct:KeyInfo	file:
aStat	src/server/sqlite3.c	/^  int aStat[3];               \/* Total cache hits, misses and writes *\/$/;"	m	struct:Pager	file:
aStat	src/server/sqlite3.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStatic	src/server/sqlite3.c	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStatic	src/server/sqlite3.c	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStmt	src/server/sqlite3.c	/^  sqlite3_stmt *aStmt[11];$/;"	m	struct:Fts5Storage	file:
aStmt	src/server/sqlite3.c	/^  sqlite3_stmt *aStmt[40];$/;"	m	struct:Fts3Table	file:
aSyscall	src/server/sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aSyscall	src/server/sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:win_syscall	file:
aTableLock	src/server/sqlite3.c	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse	file:
aTask	src/server/sqlite3.c	/^  SortSubtask aTask[1];           \/* One or more subtasks *\/$/;"	m	struct:VdbeSorter	file:
aTempReg	src/server/sqlite3.c	/^  int aTempReg[8];     \/* Holding area for temporary registers *\/$/;"	m	struct:Parse	file:
aTerm	src/server/sqlite3.c	/^  Fts5ExprTerm aTerm[1];          \/* Terms that make up this phrase *\/$/;"	m	struct:Fts5ExprPhrase	file:
aTerm	src/server/sqlite3.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aToken	src/server/sqlite3.c	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
aTokenChar	src/server/sqlite3.c	/^  unsigned char aTokenChar[128];  \/* ASCII range token characters *\/$/;"	m	struct:Unicode61Tokenizer	file:
aTokenChar	src/server/sqlite3.c	/^  unsigned char aTokenChar[128];$/;"	m	struct:AsciiTokenizer	file:
aTotalSize	src/server/sqlite3.c	/^  i64 *aTotalSize;                \/* Total sizes of each column *\/ $/;"	m	struct:Fts5Storage	file:
aTree	src/server/sqlite3.c	/^  int *aTree;                \/* Current state of incremental merge *\/$/;"	m	struct:MergeEngine	file:
aType	src/server/sqlite3.c	/^  u32 aType[1];         \/* Type values for all entries in the record *\/$/;"	m	struct:VdbeCursor	file:
aUp	src/server/sqlite3.c	/^  u32 *aUp;          \/* Index of parent of each node *\/$/;"	m	struct:JsonParse	file:
aVTrans	src/server/sqlite3.c	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3	file:
aVar	src/server/sqlite3.c	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe	file:
aWalData	src/server/sqlite3.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
aaOutput	src/server/sqlite3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
abIndexed	src/server/sqlite3.c	/^  u8 *abIndexed;                  \/* Array of flags, set on indexed & PK cols *\/$/;"	m	struct:RbuObjIter	file:
abNotNull	src/server/sqlite3.c	/^  u8 *abNotNull;                  \/* Array of flags, set on NOT NULL columns *\/$/;"	m	struct:RbuObjIter	file:
abNotindexed	src/server/sqlite3.c	/^  u8 *abNotindexed;               \/* True for 'notindexed' columns *\/$/;"	m	struct:Fts3Table	file:
abTblPk	src/server/sqlite3.c	/^  u8 *abTblPk;                    \/* Array of flags, set on target PK columns *\/$/;"	m	struct:RbuObjIter	file:
abUnindexed	src/server/sqlite3.c	/^  u8 *abUnindexed;                \/* True for unindexed columns *\/$/;"	m	struct:Fts5Config	file:
abilities	src/game/bg_public.h	/^  int       abilities;$/;"	m	struct:__anon349
abortframe	src/qcommon/common.c	/^jmp_buf abortframe;		\/\/ an ERR_DROP occured, exit the entire frame$/;"	v
abs	src/game/bg_lib.c	/^int abs( int n )$/;"	f
absFunc	src/server/sqlite3.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
abs_val	src/game/bg_lib.c	/^static LDOUBLE abs_val (LDOUBLE value)$/;"	f	file:
absmax	src/game/g_public.h	/^  vec3_t    absmin, absmax;   \/\/ derived from mins\/maxs and origin + rotation$/;"	m	struct:__anon361
absmin	src/game/g_public.h	/^  vec3_t    absmin, absmax;   \/\/ derived from mins\/maxs and origin + rotation$/;"	m	struct:__anon361
ac	src/tools/lcc/etc/lcc.c	/^static int ac;			\/* argument count *\/$/;"	v	file:
acaller	src/tools/lcc/src/profio.c	/^static void acaller(char *caller, char *file, int x, int y, int count, struct func *callee) {$/;"	f	file:
accError	src/server/sqlite3.c	/^  u8   accError;       \/* STRACCUM_NOMEM or STRACCUM_TOOBIG *\/$/;"	m	struct:StrAccum	file:
accMoveType	src/cgame/cg_local.h	/^  pMoveType_t       accMoveType;$/;"	m	struct:particle_s
accMoveType	src/cgame/cg_local.h	/^  pMoveType_t     accMoveType;$/;"	m	struct:baseParticle_s
accMoveValues	src/cgame/cg_local.h	/^  pMoveValues_t     accMoveValues;$/;"	m	struct:particle_s
accMoveValues	src/cgame/cg_local.h	/^  pMoveValues_t   accMoveValues;$/;"	m	struct:baseParticle_s
acceleration	src/game/bg_public.h	/^  float     acceleration;$/;"	m	struct:__anon349
acceleration	src/game/g_local.h	/^  vec3_t            acceleration;$/;"	m	struct:gentity_s
accessPayload	src/server/sqlite3.c	/^static int accessPayload($/;"	f	file:
acff_t	src/renderergl1/tr_local.h	/^} acff_t;$/;"	t	typeref:enum:__anon136
acff_t	src/renderergl2/tr_local.h	/^} acff_t;$/;"	t	typeref:enum:__anon18
acos	src/game/bg_lib.c	/^double acos( double x )$/;"	f
action	src/ui/ui_shared.h	/^  const char *action;            \/\/ select script$/;"	m	struct:itemDef_s
actionName	src/server/sqlite3.c	/^static const char *actionName(u8 action){$/;"	f	file:
activator	src/game/g_local.h	/^  gentity_t         *activator;$/;"	m	struct:gentity_s
active	src/client/client.h	/^	qboolean	active;			\/\/ current state$/;"	m	struct:__anon91
active	src/client/snd_local.h	/^	qboolean	active;$/;"	m	struct:loopSound_s
active	src/game/g_local.h	/^  int active;$/;"	m	struct:__anon312
active	src/game/g_local.h	/^  qboolean          active;             \/\/ for power repeater, but could be useful elsewhere$/;"	m	struct:gentity_s
active	src/master/servers.h	/^	qboolean active;$/;"	m	struct:server_s
active	src/renderergl1/tr_local.h	/^	qboolean		active;$/;"	m	struct:__anon142
active	src/renderergl2/tr_local.h	/^	qboolean		active;$/;"	m	struct:__anon26
activeCURLNotGameRelated	src/client/client.h	/^	qboolean	activeCURLNotGameRelated;$/;"	m	struct:__anon87
activeCursor	src/cgame/cg_local.h	/^  qhandle_t     activeCursor;$/;"	m	struct:__anon253
activeSnapshots	src/cgame/cg_local.h	/^  snapshot_t    activeSnapshots[ 2 ];$/;"	m	struct:__anon249
actor	src/game/g_local.h	/^  namelog_t    *actor;$/;"	m	struct:__anon315
add	src/tools/lcc/src/decl.c	4;"	d	file:
addAggInfoColumn	src/server/sqlite3.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	src/server/sqlite3.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addArgumentToVtab	src/server/sqlite3.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addColOffset	src/server/sqlite3.c	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table	file:
addModuleArgument	src/server/sqlite3.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addRefEntityToScene	src/ui/ui_shared.h	/^  void ( *addRefEntityToScene ) ( const refEntity_t *re );$/;"	m	struct:__anon506
addToBlockedList	src/server/sqlite3.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToSavepointBitvecs	src/server/sqlite3.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToVTrans	src/server/sqlite3.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addWhereTerm	src/server/sqlite3.c	/^static void addWhereTerm($/;"	f	file:
add_bit	src/qcommon/huffman.c	/^static void add_bit (char bit, byte *fout) {$/;"	f	file:
add_map_stmt	src/server/sv_database.c	/^sqlite3_stmt	*add_map_stmt = NULL,$/;"	v
add_mapstat_stmt	src/server/sv_database.c	/^				*add_mapstat_stmt = NULL,$/;"	v
add_seen_stmt	src/server/sv_database.c	/^				*add_seen_stmt = NULL,$/;"	v
addd	src/tools/lcc/src/simp.c	/^static int addd(double x, double y, double min, double max, int needconst) {$/;"	f	file:
addedFrame	src/renderergl1/tr_flares.c	/^	int			addedFrame;$/;"	m	struct:flare_s	file:
addedFrame	src/renderergl2/tr_flares.c	/^	int			addedFrame;$/;"	m	struct:flare_s	file:
addi	src/tools/lcc/src/simp.c	/^static int addi(long x, long y, long min, long max, int needconst) {$/;"	f	file:
additive	src/renderergl1/tr_local.h	/^	int		additive;			\/\/ texture detail is lost tho when the lightmap is dark$/;"	m	struct:dlight_s
additive	src/renderergl2/tr_local.h	/^	int		additive;			\/\/ texture detail is lost tho when the lightmap is dark$/;"	m	struct:dlight_s
addlocal	src/tools/lcc/src/stmt.c	/^void addlocal(Symbol p) {$/;"	f
addr	src/game/g_admin.h	/^  byte addr[ ADDRLEN ];$/;"	m	struct:__anon376
addr	src/qcommon/net_ip.c	/^	struct sockaddr_storage addr;$/;"	m	struct:__anon489	typeref:struct:__anon489::sockaddr_storage	file:
addr	src/tools/lcc/src/c.h	/^		} addr;$/;"	m	union:code::__anon291	typeref:struct:code::__anon291::__anon293
addr4parse	src/game/g_utils.c	/^static const char *addr4parse( const char *str, addr_t *addr )$/;"	f	file:
addr6parse	src/game/g_utils.c	/^static const char *addr6parse( const char *str, addr_t *addr )$/;"	f	file:
addrBody	src/server/sqlite3.c	/^  int addrBody;         \/* Beginning of the body of this loop *\/$/;"	m	struct:WhereLevel	file:
addrBrk	src/server/sqlite3.c	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel	file:
addrCont	src/server/sqlite3.c	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel	file:
addrCrTab	src/server/sqlite3.c	/^  int addrCrTab;       \/* Address of OP_CreateTable opcode on CREATE TABLE *\/$/;"	m	struct:Parse	file:
addrExplain	src/server/sqlite3.c	/^  int addrExplain;                \/* OP_Explain for loop *\/$/;"	m	struct:ScanStatus	file:
addrFillSub	src/server/sqlite3.c	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item	file:
addrFirst	src/server/sqlite3.c	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel	file:
addrInTop	src/server/sqlite3.c	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon210::__anon211::InLoop	file:
addrLikeRep	src/server/sqlite3.c	/^  int addrLikeRep;      \/* LIKE range processing address *\/$/;"	m	struct:WhereLevel	file:
addrLoop	src/server/sqlite3.c	/^  int addrLoop;                   \/* Address of "loops" counter *\/$/;"	m	struct:ScanStatus	file:
addrNxt	src/server/sqlite3.c	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel	file:
addrOpenEphm	src/server/sqlite3.c	/^  int addrOpenEphm[2];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select	file:
addrSkip	src/server/sqlite3.c	/^  int addrSkip;         \/* Jump here for next iteration of skip-scan *\/$/;"	m	struct:WhereLevel	file:
addrSortIndex	src/server/sqlite3.c	/^  int addrSortIndex;    \/* Address of the OP_SorterOpen or OP_OpenEphemeral *\/$/;"	m	struct:SortCtx	file:
addrTnct	src/server/sqlite3.c	/^  int addrTnct;   \/* Address of OP_OpenEphemeral opcode for tabTnct *\/$/;"	m	struct:DistinctCtx	file:
addrVisit	src/server/sqlite3.c	/^  int addrVisit;                  \/* Address of "rows visited" counter *\/$/;"	m	struct:ScanStatus	file:
addrVisit	src/server/sqlite3.c	/^  int addrVisit;        \/* Address at which row is visited *\/$/;"	m	struct:WhereLevel	file:
addr_t	src/game/g_admin.h	/^} addr_t;$/;"	t	typeref:struct:__anon376
address	src/client/cl_main.c	/^	netadr_t address;$/;"	m	struct:serverStatus_s	file:
address	src/master/master.c	/^	char address[ ADDRESS_LENGTH ]; \/\/ Dotted quad$/;"	m	struct:__anon384	file:
address	src/master/servers.h	/^	struct sockaddr_in address;$/;"	m	struct:server_s	typeref:struct:server_s::sockaddr_in
address	src/tools/lcc/src/bytecode.c	/^static void I(address)(Symbol q, Symbol p, long n) {$/;"	f	file:
address	src/tools/lcc/src/c.h	/^void (*address)(Symbol p, Symbol q, long n);$/;"	m	struct:interface
address	src/tools/lcc/src/null.c	/^static void I(address)(Symbol q, Symbol p, long n) {}$/;"	f	file:
address	src/tools/lcc/src/symbolic.c	/^static void I(address)(Symbol q, Symbol p, long n) {$/;"	f	file:
address	src/ui/ui_local.h	/^  char address[MAX_ADDRESSLENGTH];$/;"	m	struct:__anon511
addressed	src/tools/lcc/src/c.h	/^	unsigned addressed:1;$/;"	m	struct:symbol
addrmap	src/master/servers.h	/^	const struct addrmap_s* addrmap;$/;"	m	struct:server_s	typeref:struct:server_s::addrmap_s
addrmap_s	src/master/servers.h	/^typedef struct addrmap_s$/;"	s
addrmap_t	src/master/servers.h	/^} addrmap_t;$/;"	t	typeref:struct:addrmap_s
addrmaps	src/master/servers.c	/^static addrmap_t* addrmaps = NULL;$/;"	v	file:
addrof	src/tools/lcc/src/enode.c	/^Tree addrof(Tree p) {$/;"	f
addrtree	src/tools/lcc/src/simp.c	/^static Tree addrtree(Tree e, long n, Type ty) {$/;"	f	file:
addtree	src/tools/lcc/src/enode.c	/^static Tree addtree(int op, Tree l, Tree r) {$/;"	f	file:
adjustColorsForFog	src/renderergl1/tr_local.h	/^	acff_t			adjustColorsForFog;$/;"	m	struct:__anon142
adjustColorsForFog	src/renderergl2/tr_local.h	/^	acff_t			adjustColorsForFog;$/;"	m	struct:__anon26
adjustStats	src/server/sqlite3.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
adjustValue	src/ui/ui_shared.c	/^  int adjustValue;$/;"	m	struct:scrollInfo_s	file:
adjustrow	src/tools/lcc/cpp/tokens.c	/^adjustrow(Tokenrow *trp, int nt)$/;"	f
admin	src/game/g_local.h	/^  g_admin_admin_t     *admin;$/;"	m	struct:__anon311
adminFlagList	src/game/g_admin.c	/^static AdminFlagListEntry_t adminFlagList[] =$/;"	v	file:
adminLog	src/game/g_admin.c	/^static char adminLog[ MAX_STRING_CHARS ];$/;"	v	file:
adminLogLen	src/game/g_admin.c	/^static int  adminLogLen;$/;"	v	file:
adminNumCmds	src/game/g_admin.c	/^static size_t adminNumCmds = ARRAY_LEN( g_admin_cmds );$/;"	v	file:
adminNumFlags	src/game/g_admin.c	/^static int adminNumFlags = sizeof(adminFlagList) \/ sizeof(adminFlagList[ 0 ]);$/;"	v	file:
admin_create_ban	src/game/g_admin.c	/^static void admin_create_ban( gentity_t *ent,$/;"	f	file:
admin_default_levels	src/game/g_admin.c	/^static void admin_default_levels( void )$/;"	f	file:
admin_higher	src/game/g_admin.c	/^static qboolean admin_higher( gentity_t *admin, gentity_t *victim )$/;"	f	file:
admin_higher_admin	src/game/g_admin.c	/^static qboolean admin_higher_admin( g_admin_admin_t *a, g_admin_admin_t *b )$/;"	f	file:
admin_higher_guid	src/game/g_admin.c	/^static qboolean admin_higher_guid( char *admin_guid, char *victim_guid )$/;"	f	file:
admin_level_maxname	src/game/g_admin.c	/^static int admin_level_maxname = 0;$/;"	v	file:
admin_listadmins	src/game/g_admin.c	/^static int admin_listadmins( gentity_t *ent, int start, char *search )$/;"	f	file:
admin_log	src/game/g_admin.c	/^static void admin_log( const char *str )$/;"	f	file:
admin_log_abort	src/game/g_admin.c	/^static void admin_log_abort( void )$/;"	f	file:
admin_log_end	src/game/g_admin.c	/^static void admin_log_end( const qboolean ok )$/;"	f	file:
admin_log_start	src/game/g_admin.c	/^static void admin_log_start( gentity_t *admin, const char *cmd )$/;"	f	file:
admin_match	src/game/g_admin.c	/^static qboolean admin_match( void *admin, const void *match )$/;"	f	file:
admin_out	src/game/g_admin.c	/^static void admin_out( void *admin, char *str )$/;"	f	file:
admin_permission	src/game/g_admin.c	/^static qboolean admin_permission( char *flags, const char *flag, qboolean *perm )$/;"	f	file:
admin_readconfig_int	src/game/g_admin.c	/^static void admin_readconfig_int( char **cnf, int *v )$/;"	f	file:
admin_readconfig_string	src/game/g_admin.c	/^static void admin_readconfig_string( char **cnf, char *s, int size )$/;"	f	file:
admin_search	src/game/g_admin.c	/^static int admin_search( gentity_t *ent,$/;"	f	file:
admin_writeconfig	src/game/g_admin.c	/^static void admin_writeconfig( void )$/;"	f	file:
admin_writeconfig_int	src/game/g_admin.c	/^static void admin_writeconfig_int( int v, fileHandle_t f )$/;"	f	file:
admin_writeconfig_string	src/game/g_admin.c	/^static void admin_writeconfig_string( char *s, fileHandle_t f )$/;"	f	file:
adpcm	src/client/snd_local.h	/^	adpcm_state_t			adpcm;$/;"	m	struct:sndBuffer_s
adpcm_state	src/client/snd_local.h	/^typedef struct adpcm_state {$/;"	s
adpcm_state_t	src/client/snd_local.h	/^} adpcm_state_t;$/;"	t	typeref:struct:adpcm_state
adr	src/client/client.h	/^	netadr_t	adr;$/;"	m	struct:__anon88
adr	src/client/client.h	/^	netadr_t	adr;$/;"	m	struct:__anon89
adr	src/server/server.h	/^	netadr_t	adr;$/;"	m	struct:__anon187
adrstr	src/ui/ui_local.h	/^  char    adrstr[MAX_ADDRESSLENGTH];$/;"	m	struct:__anon509
adrstr	src/ui/ui_local.h	/^  char  adrstr[MAX_ADDRESSLENGTH];$/;"	m	struct:__anon508
afd	src/client/cl_avi.c	/^static aviFileData_t afd;$/;"	v	file:
affSdst	src/server/sqlite3.c	/^  char affSdst;        \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest	file:
affinity	src/server/sqlite3.c	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr	file:
affinity	src/server/sqlite3.c	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column	file:
afpCheckReservedLock	src/server/sqlite3.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpClose	src/server/sqlite3.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpLock	src/server/sqlite3.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLockingContext	src/server/sqlite3.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	src/server/sqlite3.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpSetLock	src/server/sqlite3.c	/^static int afpSetLock($/;"	f	file:
afpUnlock	src/server/sqlite3.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpfsByteRangeLock2FSCTL	src/server/sqlite3.c	30136;"	d	file:
afunc	src/tools/lcc/src/prof.c	/^static Symbol afunc;	\/* current function's struct func *\/$/;"	v	file:
afunction	src/tools/lcc/src/profio.c	/^static struct func *afunction(char *name, char *file, int x, int y, int count) {$/;"	f	file:
aggregate_context	src/server/sqlite3.c	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_count	src/server/sqlite3.c	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
ai	src/server/sqlite3.c	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::p4union	file:
aiClass	src/server/sqlite3.c	/^static const unsigned char aiClass[] = {$/;"	v	file:
aiCol	src/server/sqlite3.c	/^    int *aiCol;                                \/* array of column indexes *\/$/;"	m	union:Walker::__anon201	file:
aiCol	src/server/sqlite3.c	/^  int aiCol[1];$/;"	m	struct:Fts5Colset	file:
aiColumn	src/server/sqlite3.c	/^  i16 *aiColumn;           \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index	file:
aiColumn	src/server/sqlite3.c	/^  i16 aiColumn[11];          \/* Corresponding column number in the eq-class *\/$/;"	m	struct:WhereScan	file:
aiCur	src/server/sqlite3.c	/^  int aiCur[11];             \/* Cursors in the equivalence class *\/$/;"	m	struct:WhereScan	file:
aiCurOnePass	src/server/sqlite3.c	/^  int aiCurOnePass[2];      \/* OP_OpenWrite cursors for the ONEPASS opt *\/$/;"	m	struct:WhereInfo	file:
aiException	src/server/sqlite3.c	/^  int *aiException;$/;"	m	struct:Unicode61Tokenizer	file:
aiException	src/server/sqlite3.c	/^  int *aiException;$/;"	m	struct:unicode_tokenizer	file:
aiFreelist	src/server/sqlite3.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiHash	src/server/sqlite3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiIdx	src/server/sqlite3.c	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH];        \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor	file:
aiOvfl	src/server/sqlite3.c	/^  u16 aiOvfl[5];       \/* Insert the i-th overflow cell before the aiOvfl-th$/;"	m	struct:MemPage	file:
aiRowEst	src/server/sqlite3.c	/^  tRowcnt *aiRowEst;       \/* Non-logarithmic stat1 data for this index *\/$/;"	m	struct:Index	file:
aiRowLogEst	src/server/sqlite3.c	/^  LogEst *aiRowLogEst;     \/* From ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index	file:
aiSmall	src/server/sqlite3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
aiSrcOrder	src/server/sqlite3.c	/^  int *aiSrcOrder;                \/* src table col -> target table col *\/$/;"	m	struct:RbuObjIter	file:
airAcceleration	src/game/bg_public.h	/^  float     airAcceleration;$/;"	m	struct:__anon349
airOutTime	src/game/g_local.h	/^  int                 airOutTime;$/;"	m	struct:gclient_s
alBuffersInitialised	src/client/snd_openal.c	/^static qboolean alBuffersInitialised = qfalse;$/;"	v	file:
alCaptureDevice	src/client/snd_openal.c	/^static ALCdevice *alCaptureDevice;$/;"	v	file:
alContext	src/client/snd_openal.c	/^static ALCcontext *alContext;$/;"	v	file:
alDevice	src/client/snd_openal.c	/^static ALCdevice *alDevice;$/;"	v	file:
alSfx_s	src/client/snd_openal.c	/^typedef struct alSfx_s$/;"	s	file:
alSfx_t	src/client/snd_openal.c	/^} alSfx_t;$/;"	t	typeref:struct:alSfx_s	file:
alSource	src/client/snd_openal.c	/^	ALuint		alSource;		\/\/ OpenAL source object$/;"	m	struct:src_s	file:
alSourcesInitialised	src/client/snd_openal.c	/^static qboolean alSourcesInitialised = qfalse;$/;"	v	file:
alSrcPriority_t	src/client/snd_local.h	/^} alSrcPriority_t;$/;"	t	typeref:enum:__anon97
alarmBusy	src/server/sqlite3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmThreshold	src/server/sqlite3.c	/^  sqlite3_int64 alarmThreshold; \/* The soft heap limit *\/$/;"	m	struct:Mem0Global	file:
alias	src/tools/lcc/src/c.h	/^		Symbol alias;$/;"	m	union:symbol::__anon296
alienAcidTubePS	src/cgame/cg_local.h	/^  qhandle_t   alienAcidTubePS;$/;"	m	struct:__anon251
alienBleedPS	src/cgame/cg_local.h	/^  qhandle_t   alienBleedPS;$/;"	m	struct:__anon251
alienBuildCount	src/ui/ui_local.h	/^  int         alienBuildCount;$/;"	m	struct:__anon518
alienBuildIndex	src/ui/ui_local.h	/^  int         alienBuildIndex;$/;"	m	struct:__anon518
alienBuildList	src/ui/ui_local.h	/^  menuItem_t  alienBuildList[ 32 ];$/;"	m	struct:__anon518
alienBuildPointQueue	src/game/g_local.h	/^  int               alienBuildPointQueue;$/;"	m	struct:__anon316
alienBuildPoints	src/game/g_local.h	/^  int               alienBuildPoints;$/;"	m	struct:__anon316
alienBuildStat	src/cgame/cg_local.h	/^  buildStat_t   alienBuildStat;$/;"	m	struct:__anon253
alienBuildableBleedPS	src/cgame/cg_local.h	/^  qhandle_t   alienBuildableBleedPS;$/;"	m	struct:__anon251
alienBuildableDamage	src/cgame/cg_local.h	/^  sfxHandle_t alienBuildableDamage;$/;"	m	struct:__anon251
alienBuildableDamagedPS	src/cgame/cg_local.h	/^  qhandle_t   alienBuildableDamagedPS;$/;"	m	struct:__anon251
alienBuildableDestroyedPS	src/cgame/cg_local.h	/^  qhandle_t   alienBuildableDestroyedPS;$/;"	m	struct:__anon251
alienBuildableExplosion	src/cgame/cg_local.h	/^  sfxHandle_t alienBuildableExplosion;$/;"	m	struct:__anon251
alienBuildablePos	src/cgame/cg_local.h	/^  vec3_t    alienBuildablePos[ MAX_GENTITIES ];$/;"	m	struct:__anon246
alienBuildablePrebuild	src/cgame/cg_local.h	/^  sfxHandle_t alienBuildablePrebuild;$/;"	m	struct:__anon251
alienBuildableTimes	src/cgame/cg_local.h	/^  int       alienBuildableTimes[ MAX_GENTITIES ];$/;"	m	struct:__anon246
alienClassCount	src/ui/ui_local.h	/^  int         alienClassCount;$/;"	m	struct:__anon518
alienClassIndex	src/ui/ui_local.h	/^  int         alienClassIndex;$/;"	m	struct:__anon518
alienClassList	src/ui/ui_local.h	/^  menuItem_t  alienClassList[ 3 ];$/;"	m	struct:__anon518
alienClientPos	src/cgame/cg_local.h	/^  vec3_t    alienClientPos[ MAX_CLIENTS ];$/;"	m	struct:__anon246
alienCredits	src/cgame/cg_local.h	/^  int           alienCredits;$/;"	m	struct:__anon253
alienEvolvePS	src/cgame/cg_local.h	/^  qhandle_t   alienEvolvePS;$/;"	m	struct:__anon251
alienEvolveSound	src/cgame/cg_local.h	/^  sfxHandle_t alienEvolveSound;$/;"	m	struct:__anon251
alienKills	src/game/g_local.h	/^  int               alienKills;$/;"	m	struct:__anon316
alienL1Grab	src/cgame/cg_local.h	/^  sfxHandle_t alienL1Grab;$/;"	m	struct:__anon251
alienL4ChargePrepare	src/cgame/cg_local.h	/^  sfxHandle_t alienL4ChargePrepare;$/;"	m	struct:__anon251
alienL4ChargeStart	src/cgame/cg_local.h	/^  sfxHandle_t alienL4ChargeStart;$/;"	m	struct:__anon251
alienNextQueueTime	src/game/g_local.h	/^  int               alienNextQueueTime;$/;"	m	struct:__anon316
alienNextStageThreshold	src/cgame/cg_local.h	/^  int           alienNextStageThreshold;$/;"	m	struct:__anon253
alienNextStageThreshold	src/game/g_local.h	/^  int               alienNextStageThreshold;$/;"	m	struct:__anon316
alienOvermindAttack	src/cgame/cg_local.h	/^  sfxHandle_t alienOvermindAttack;$/;"	m	struct:__anon251
alienOvermindDying	src/cgame/cg_local.h	/^  sfxHandle_t alienOvermindDying;$/;"	m	struct:__anon251
alienOvermindSpawns	src/cgame/cg_local.h	/^  sfxHandle_t alienOvermindSpawns;$/;"	m	struct:__anon251
alienSpawnQueue	src/game/g_local.h	/^  spawnQueue_t      alienSpawnQueue;$/;"	m	struct:__anon316
alienStage	src/cgame/cg_local.h	/^  int           alienStage;$/;"	m	struct:__anon253
alienStage2Time	src/game/g_local.h	/^  int               alienStage2Time;$/;"	m	struct:__anon316
alienStage3Time	src/game/g_local.h	/^  int               alienStage3Time;$/;"	m	struct:__anon316
alienStageTransition	src/cgame/cg_local.h	/^  sfxHandle_t alienStageTransition;$/;"	m	struct:__anon251
alienTalkSound	src/cgame/cg_local.h	/^  sfxHandle_t alienTalkSound;$/;"	m	struct:__anon251
alienTeamLocked	src/game/g_local.h	/^  qboolean          alienTeamLocked;$/;"	m	struct:__anon316
alienUpgradeCount	src/ui/ui_local.h	/^  int         alienUpgradeCount;$/;"	m	struct:__anon518
alienUpgradeIndex	src/ui/ui_local.h	/^  int         alienUpgradeIndex;$/;"	m	struct:__anon518
alienUpgradeList	src/ui/ui_local.h	/^  menuItem_t  alienUpgradeList[ 16 ];$/;"	m	struct:__anon518
align	src/tools/lcc/src/alloc.c	/^union align {$/;"	u	file:
align	src/tools/lcc/src/c.h	/^	int align;$/;"	m	struct:type
align	src/tools/lcc/src/c.h	/^	unsigned char size, align, outofline;$/;"	m	struct:metrics
align	src/ui/ui_shared.h	/^  int align;$/;"	m	struct:columnInfo_s
alignment	src/ui/ui_shared.h	/^  int alignment;                 \/\/ left center right$/;"	m	struct:itemDef_s
alinit_fail	src/client/qal.c	/^static qboolean alinit_fail = qfalse;$/;"	v	file:
alist	src/tools/lcc/etc/lcc.c	/^static List alist;		\/* assembler flags *\/$/;"	v	file:
all	src/tools/lcc/src/sym.c	/^	Symbol all;$/;"	m	struct:table	file:
allSpaces	src/server/sqlite3.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
alloc	src/tools/lcc/etc/lcc.c	/^static void *alloc(int n) {$/;"	f	file:
alloc	src/tools/lcc/lburg/lburg.c	/^void *alloc(int nbytes) {$/;"	f
allocPoint	src/ui/ui_shared.c	/^static int    allocPoint, outOfMemory;$/;"	v	file:
allocSize	src/qcommon/common.c	/^	int allocSize;$/;"	m	struct:zonedebug_s	file:
allocSpace	src/server/sqlite3.c	/^static void *allocSpace($/;"	f	file:
allocTime	src/client/snd_local.h	/^	int			allocTime;$/;"	m	struct:__anon94
alloca	src/tools/lcc/lburg/gram.c	275;"	d	file:
allocate	src/tools/lcc/src/alloc.c	/^void *allocate(unsigned long n, unsigned a) {$/;"	f
allocateBtreePage	src/server/sqlite3.c	/^static int allocateBtreePage($/;"	f	file:
allocateCursor	src/server/sqlite3.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateIndexInfo	src/server/sqlite3.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateSpace	src/server/sqlite3.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateTempSpace	src/server/sqlite3.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
allowedOp	src/server/sqlite3.c	/^static int allowedOp(int op){$/;"	f	file:
allowoverflow	src/qcommon/qcommon.h	/^	qboolean	allowoverflow;	\/\/ if false, do a Com_Error$/;"	m	struct:__anon418
allsolid	src/qcommon/q_shared.h	/^	qboolean	allsolid;	\/\/ if true, plane is not valid$/;"	m	struct:__anon470
allsymbols	src/tools/lcc/src/sym.c	/^Symbol allsymbols(Table tp) {$/;"	f
alpha	src/cgame/cg_local.h	/^  byte                    alpha;$/;"	m	struct:trailBeamNode_s
alpha	src/cgame/cg_local.h	/^  pLerpValues_t     alpha;$/;"	m	struct:particle_s
alpha	src/cgame/cg_local.h	/^  pLerpValues_t   alpha;$/;"	m	struct:baseParticle_s
alphaFade	src/cgame/cg_local.h	/^  qboolean          alphaFade;    \/\/ fade alpha instead of rgb$/;"	m	struct:markPoly_s
alphaGen	src/renderergl1/tr_local.h	/^	alphaGen_t		alphaGen;$/;"	m	struct:__anon142
alphaGen	src/renderergl2/tr_local.h	/^	alphaGen_t		alphaGen;$/;"	m	struct:__anon26
alphaGen_t	src/renderergl1/tr_local.h	/^} alphaGen_t;$/;"	t	typeref:enum:__anon133
alphaGen_t	src/renderergl2/tr_local.h	/^} alphaGen_t;$/;"	t	typeref:enum:__anon15
alphaWave	src/renderergl1/tr_local.h	/^	waveForm_t		alphaWave;$/;"	m	struct:__anon142
alphaWave	src/renderergl2/tr_local.h	/^	waveForm_t		alphaWave;$/;"	m	struct:__anon26
altName	src/ui/ui_main.c	/^  char *name, *altName;$/;"	m	struct:__anon491	file:
alterGameState	src/client/cl_cin.c	/^	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;$/;"	m	struct:__anon100	file:
alternateEntityState_s	src/client/client.h	/^typedef struct alternateEntityState_s {$/;"	s
alternateEntityState_t	src/client/client.h	/^} alternateEntityState_t;$/;"	t	typeref:struct:alternateEntityState_s
alternateInfos	src/server/sv_init.c	/^char alternateInfos[2][2][BIG_INFO_STRING];$/;"	v
alternatePlayerStateFields	src/qcommon/msg.c	/^netField_t	alternatePlayerStateFields[] =$/;"	v
alternatePlayerState_s	src/client/client.h	/^typedef struct alternatePlayerState_s {$/;"	s
alternatePlayerState_s	src/qcommon/msg.c	/^typedef struct alternatePlayerState_s {$/;"	s	file:
alternatePlayerState_t	src/client/client.h	/^} alternatePlayerState_t;$/;"	t	typeref:struct:alternatePlayerState_s
alternatePlayerState_t	src/qcommon/msg.c	/^} alternatePlayerState_t;$/;"	t	typeref:struct:alternatePlayerState_s	file:
alternateProtocol	src/game/g_local.h	/^  int                 alternateProtocol;$/;"	m	struct:__anon311
alternateProtocol	src/qcommon/qcommon.h	/^	int			alternateProtocol;$/;"	m	struct:__anon422
alternateProtocol	src/qcommon/qcommon.h	/^	int	alternateProtocol;$/;"	m	struct:__anon421
alternatePs	src/client/client.h	/^	alternatePlayerState_t	alternatePs;	\/\/ complete information about the current player at this time$/;"	m	struct:__anon84
alternateSnapshot_t	src/client/client.h	/^} alternateSnapshot_t;$/;"	t	typeref:struct:__anon83
always	src/tools/lcc/cpp/cpp.h	/^	char	always;$/;"	m	struct:includelist
alwaysImpact	src/cgame/cg_local.h	/^  qboolean    alwaysImpact;$/;"	m	struct:weaponInfoMode_s
ambientLight	src/renderergl1/tr_local.h	/^	vec3_t		ambientLight;	\/\/ color normalized to 0-255$/;"	m	struct:__anon128
ambientLight	src/renderergl2/tr_local.h	/^	vec3_t		ambientLight;	\/\/ color normalized to 0-255$/;"	m	struct:__anon8
ambientLightInt	src/renderergl1/tr_local.h	/^	int			ambientLightInt;	\/\/ 32 bit rgba packed$/;"	m	struct:__anon128
ambientLightInt	src/renderergl2/tr_local.h	/^	int			ambientLightInt;	\/\/ 32 bit rgba packed$/;"	m	struct:__anon8
ammo	src/cgame/cg_local.h	/^	int			ammo[16];$/;"	m	struct:__anon256
ammo	src/client/client.h	/^	int			ammo[MAX_WEAPONS];$/;"	m	struct:alternatePlayerState_s
ammo	src/qcommon/msg.c	/^	int			ammo[MAX_WEAPONS];$/;"	m	struct:alternatePlayerState_s	file:
ammo	src/qcommon/q_shared.h	/^	int			ammo;			\/\/ ammo held$/;"	m	struct:playerState_s
ammoIcon	src/cgame/cg_local.h	/^  qhandle_t         ammoIcon;$/;"	m	struct:weaponInfo_s
amplitude	src/renderergl1/tr_local.h	/^	float amplitude;$/;"	m	struct:__anon137
amplitude	src/renderergl2/tr_local.h	/^	float amplitude;$/;"	m	struct:__anon19
anDLt	src/server/sqlite3.c	/^  tRowcnt *anDLt;                 \/* sqlite_stat4.nDLt *\/$/;"	m	struct:Stat4Sample	file:
anDLt	src/server/sqlite3.c	/^  tRowcnt *anDLt;   \/* Est. number of distinct keys less than this sample *\/$/;"	m	struct:IndexSample	file:
anEq	src/server/sqlite3.c	/^  tRowcnt *anEq;                  \/* sqlite_stat4.nEq *\/$/;"	m	struct:Stat4Sample	file:
anEq	src/server/sqlite3.c	/^  tRowcnt *anEq;    \/* Est. number of rows where the key equals this sample *\/$/;"	m	struct:IndexSample	file:
anExec	src/server/sqlite3.c	/^  i64 *anExec;            \/* Event counters from parent frame *\/$/;"	m	struct:VdbeFrame	file:
anExec	src/server/sqlite3.c	/^  i64 *anExec;            \/* Number of times each op has been executed *\/$/;"	m	struct:Vdbe	file:
anLt	src/server/sqlite3.c	/^  tRowcnt *anLt;                  \/* sqlite_stat4.nLt *\/$/;"	m	struct:Stat4Sample	file:
anLt	src/server/sqlite3.c	/^  tRowcnt *anLt;    \/* Est. number of rows where key is less than this sample *\/$/;"	m	struct:IndexSample	file:
anOutput	src/server/sqlite3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anQueue	src/server/sqlite3.c	/^  u32 anQueue[RTREE_MAX_DEPTH+1];   \/* Number of queued entries by iLevel *\/$/;"	m	struct:RtreeCursor	file:
anQueue	src/server/sqlite3.c	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
anQueue	src/server/sqlite3.h	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
anStat	src/server/sqlite3.c	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside	file:
analysisInfo	src/server/sqlite3.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	src/server/sqlite3.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisLoader	src/server/sqlite3.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analyzeAggregate	src/server/sqlite3.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregatesInSelect	src/server/sqlite3.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeDatabase	src/server/sqlite3.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeOneTable	src/server/sqlite3.c	/^static void analyzeOneTable($/;"	f	file:
analyzeTable	src/server/sqlite3.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
analyze_function	src/qcommon/vm_sparc.c	/^static void analyze_function(struct func_info * const fp)$/;"	f	file:
andtree	src/tools/lcc/src/enode.c	/^static Tree andtree(int op, Tree l, Tree r) {$/;"	f	file:
angle	src/ui/ui_shared.h	/^  int angle;$/;"	m	struct:modelDef_s
angles	src/cgame/cg_local.h	/^	vec3_t	angles;$/;"	m	struct:__anon257
angles	src/client/client.h	/^	vec3_t	angles;$/;"	m	struct:alternateEntityState_s
angles	src/game/g_local.h	/^  vec3_t       angles;$/;"	m	struct:__anon315
angles	src/game/g_mover.c	/^  vec3_t  angles;$/;"	m	struct:__anon319	file:
angles	src/qcommon/q_shared.h	/^	int				angles[3];$/;"	m	struct:usercmd_s
angles	src/qcommon/q_shared.h	/^	vec3_t	angles;$/;"	m	struct:entityState_s
angles2	src/cgame/cg_local.h	/^	vec3_t	angles2;$/;"	m	struct:__anon257
angles2	src/client/client.h	/^	vec3_t	angles2;$/;"	m	struct:alternateEntityState_s
angles2	src/game/g_local.h	/^  vec3_t       angles2;$/;"	m	struct:__anon315
angles2	src/qcommon/q_shared.h	/^	vec3_t	angles2;$/;"	m	struct:entityState_s
angularVelocity	src/game/bg_public.h	/^  vec3_t angularVelocity;$/;"	m	struct:__anon330
animInit	src/cgame/cg_local.h	/^  qboolean              animInit;$/;"	m	struct:centity_s
animLastState	src/cgame/cg_local.h	/^  qboolean              animLastState;$/;"	m	struct:centity_s
animPlaying	src/cgame/cg_local.h	/^  qboolean              animPlaying;$/;"	m	struct:centity_s
animTime	src/game/g_local.h	/^  int               animTime;           \/\/ last animation change$/;"	m	struct:gentity_s
animation	src/cgame/cg_local.h	/^  animation_t *animation;$/;"	m	struct:__anon235
animation	src/game/g_local.h	/^  vec4_t            animation;          \/\/ animated map objects$/;"	m	struct:gentity_s
animationNumber	src/cgame/cg_local.h	/^  int         animationNumber;  \/\/ may include ANIM_TOGGLEBIT$/;"	m	struct:__anon235
animationTime	src/cgame/cg_local.h	/^  int         animationTime;    \/\/ time when the first frame of the animation will be exact$/;"	m	struct:__anon235
animation_s	src/game/bg_public.h	/^typedef struct animation_s$/;"	s
animation_t	src/game/bg_public.h	/^} animation_t;$/;"	t	typeref:struct:animation_s
animations	src/cgame/cg_local.h	/^  animation_t       animations[ MAX_WEAPON_ANIMATIONS ];$/;"	m	struct:weaponInfo_s
animations	src/cgame/cg_local.h	/^  animation_t animations[ MAX_BUILDABLE_ANIMATIONS ];$/;"	m	struct:__anon245
animations	src/cgame/cg_local.h	/^  animation_t animations[ MAX_PLAYER_TOTALANIMATIONS ];$/;"	m	struct:__anon243
anykeydown	src/client/cl_keys.c	/^int				anykeydown;$/;"	v
ap	src/tools/lcc/cpp/cpp.h	/^	Tokenrow *ap;		\/* list of argument names, if any *\/$/;"	m	struct:nlist
apArg	src/server/sqlite3.c	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe	file:
apArg	src/server/sqlite3.c	/^  sqlite3_value **apArg;   \/* The argument values *\/$/;"	m	struct:PrintfArguments	file:
apCell	src/server/sqlite3.c	/^  u8 **apCell;            \/* All cells begin balanced *\/$/;"	m	struct:CellArray	file:
apChild	src/server/sqlite3.c	/^  Fts5ExprNode *apChild[1];       \/* Array of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
apCsr	src/server/sqlite3.c	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame	file:
apCsr	src/server/sqlite3.c	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe	file:
apExprPhrase	src/server/sqlite3.c	/^  Fts5ExprPhrase **apExprPhrase;  \/* Pointers to phrase objects *\/$/;"	m	struct:Fts5Expr	file:
apHash	src/server/sqlite3.c	/^  Fts5TermsetEntry *apHash[512];$/;"	m	struct:Fts5Termset	file:
apHash	src/server/sqlite3.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apOvfl	src/server/sqlite3.c	/^  u8 *apOvfl[5];       \/* Pointers to the body of overflow cells *\/$/;"	m	struct:MemPage	file:
apPage	src/server/sqlite3.c	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH];  \/* Pages from root to current page *\/$/;"	m	struct:BtCursor	file:
apPhrase	src/server/sqlite3.c	/^  Fts5ExprPhrase **apPhrase;      \/* Array of all phrases *\/$/;"	m	struct:Fts5Parse	file:
apPhrase	src/server/sqlite3.c	/^  Fts5ExprPhrase *apPhrase[1];    \/* Array of phrase pointers *\/$/;"	m	struct:Fts5ExprNearset	file:
apRankArg	src/server/sqlite3.c	/^  sqlite3_value **apRankArg;      \/* Array of trailing arguments *\/$/;"	m	struct:Fts5Cursor	file:
apRegion	src/server/sqlite3.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apSegment	src/server/sqlite3.c	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader	file:
apShm	src/server/sqlite3.c	/^  char **apShm;                   \/* Array of mmap'd *-shm regions *\/$/;"	m	struct:rbu_file	file:
apSqlParam	src/server/sqlite3.c	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
apSqlParam	src/server/sqlite3.c	/^  sqlite3_value **apSqlParam; \/* Original SQL parameter values *\/$/;"	m	struct:RtreeMatchArg	file:
apSqlParam	src/server/sqlite3.h	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
apSub	src/server/sqlite3.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon207	file:
apSub	src/server/sqlite3.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apTrigger	src/server/sqlite3.c	/^  Trigger *apTrigger[2];\/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey	file:
apVtabLock	src/server/sqlite3.c	/^  Table **apVtabLock;       \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse	file:
apWiData	src/server/sqlite3.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
api	src/server/sqlite3.c	/^  fts5_api api;                   \/* User visible part of object (see fts5.h) *\/$/;"	m	struct:Fts5Global	file:
apiOomError	src/server/sqlite3.c	/^static SQLITE_NOINLINE int apiOomError(sqlite3 *db){$/;"	f	file:
apoint	src/tools/lcc/src/profio.c	/^static void apoint(int i, char *file, int x, int y, int count) {$/;"	f	file:
apos	src/cgame/cg_local.h	/^	trajectory_t	apos;	\/\/ for calculating angles$/;"	m	struct:__anon257
apos	src/client/client.h	/^	trajectory_t	apos;	\/\/ for calculating angles$/;"	m	struct:alternateEntityState_s
apos	src/qcommon/q_shared.h	/^	trajectory_t	apos;	\/\/ for calculating angles$/;"	m	struct:entityState_s
append	src/tools/lcc/etc/lcc.c	/^static List append(char *str, List list) {$/;"	f	file:
append	src/tools/lcc/src/list.c	/^List append(void *x, List list) {$/;"	f
appendDirToIncludeList	src/tools/lcc/cpp/include.c	/^void appendDirToIncludeList( char *dir )$/;"	f
appendstr	src/tools/lcc/src/trace.c	/^static void appendstr(char *str) {$/;"	f	file:
apply	src/tools/lcc/src/event.c	/^void apply(List event, void *arg1, void *arg2) {$/;"	f
applyAffinity	src/server/sqlite3.c	/^static void applyAffinity($/;"	f	file:
applyNumericAffinity	src/server/sqlite3.c	/^static void applyNumericAffinity(Mem *pRec, int bTryForInt){$/;"	f	file:
approx	src/server/sqlite3.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
archive	src/tools/asm/cmdlib.c	/^qboolean		archive;$/;"	v
archivedir	src/tools/asm/cmdlib.c	/^char			archivedir[1024];$/;"	v
area	src/game/g_local.h	/^  float     area, modifier, minHeight, maxHeight;$/;"	m	struct:damageRegion_s
area	src/qcommon/cm_local.h	/^	int			area;$/;"	m	struct:__anon435
area	src/qcommon/qfiles.h	/^	int			area;$/;"	m	struct:__anon411
area	src/renderergl1/tr_local.h	/^	int			area;$/;"	m	struct:mnode_s
area	src/renderergl2/tr_local.h	/^	int			area;$/;"	m	struct:mnode_s
areaParms_t	src/server/sv_world.c	/^} areaParms_t;$/;"	t	typeref:struct:__anon181	file:
areaPortals	src/qcommon/cm_local.h	/^	int			*areaPortals;	\/\/ [ numAreas*numAreas ] reference counts$/;"	m	struct:__anon440
areaZapFire	src/game/g_weapon.c	/^void areaZapFire( gentity_t *ent )$/;"	f
areabits	src/game/g_local.h	/^  char                *areabits;$/;"	m	struct:gclient_s
areabits	src/server/server.h	/^	byte			areabits[MAX_MAP_AREA_BYTES];		\/\/ portalarea visibility bits$/;"	m	struct:__anon185
areabytes	src/server/server.h	/^	int				areabytes;$/;"	m	struct:__anon185
areamask	src/cgame/cg_local.h	/^  byte          areamask[ MAX_MAP_AREA_BYTES ];       \/\/ portalarea visibility bits$/;"	m	struct:__anon258
areamask	src/cgame/cg_public.h	/^  byte          areamask[ MAX_MAP_AREA_BYTES ];       \/\/ portalarea visibility bits$/;"	m	struct:__anon228
areamask	src/client/client.h	/^	byte			areamask[MAX_MAP_AREA_BYTES];		\/\/ portalarea visibility bits$/;"	m	struct:__anon84
areamask	src/client/client.h	/^  byte          areamask[ MAX_MAP_AREA_BYTES ];       \/\/ portalarea visibility bits$/;"	m	struct:__anon83
areamask	src/renderercommon/tr_types.h	/^	byte		areamask[MAX_MAP_AREA_BYTES];$/;"	m	struct:__anon115
areamask	src/renderergl1/tr_local.h	/^	byte		areamask[MAX_MAP_AREA_BYTES];$/;"	m	struct:__anon147
areamask	src/renderergl2/tr_local.h	/^	byte		areamask[MAX_MAP_AREA_BYTES];$/;"	m	struct:__anon39
areamaskModified	src/renderergl1/tr_local.h	/^	qboolean	areamaskModified;	\/\/ qtrue if areamask changed since last scene$/;"	m	struct:__anon147
areamaskModified	src/renderergl2/tr_local.h	/^	qboolean	areamaskModified;	\/\/ qtrue if areamask changed since last scene$/;"	m	struct:__anon39
areanum	src/server/server.h	/^	int			areanum, areanum2;$/;"	m	struct:svEntity_s
areanum2	src/server/server.h	/^	int			areanum, areanum2;$/;"	m	struct:svEntity_s
areas	src/qcommon/cm_local.h	/^	cArea_t		*areas;$/;"	m	struct:__anon440
arena	src/tools/lcc/src/alloc.c	/^	*arena[] = { &first[0], &first[1], &first[2] };$/;"	v	typeref:struct:	file:
arena	src/tools/lcc/src/alloc.c	/^union header *arena[3];$/;"	v	typeref:union:header
arg	src/qcommon/vm_powerpc.c	/^	} arg;$/;"	m	struct:source_instruction_s	typeref:union:source_instruction_s::__anon453	file:
arg	src/qcommon/vm_sparc.c	/^	} arg;$/;"	m	struct:src_insn	typeref:union:src_insn::__anon484	file:
argc	src/qcommon/cmd.c	/^	int		argc;$/;"	m	struct:cmdContext_s	file:
argc	src/server/sqlite3.c	/^  u8 argc;                \/* Number of arguments *\/$/;"	m	struct:sqlite3_context	file:
argno	src/tools/lcc/src/config.h	/^	short argno;$/;"	m	struct:__anon274
argoffset	src/tools/lcc/src/gen.c	/^int argoffset;$/;"	v
args	src/qcommon/vm_sparc.c	/^	unsigned char	args[4];$/;"	m	struct:sparc_opcode	file:
args	src/tools/lcc/src/trace.c	/^static Tree args;		\/* printf arguments *\/$/;"	v	file:
args	src/ui/ui_shared.h	/^  const char *args[MAX_SCRIPT_ARGS];$/;"	m	struct:__anon497
argv	src/qcommon/cmd.c	/^	char	*argv[ MAX_STRING_TOKENS ];	\/\/ points into cmd.tokenized$/;"	m	struct:cmdContext_s	file:
argv	src/server/sqlite3.c	/^  sqlite3_value *argv[1]; \/* Argument set *\/$/;"	m	struct:sqlite3_context	file:
argvIndex	src/server/sqlite3.c	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
argvIndex	src/server/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
arity	src/tools/lcc/cpp/eval.c	/^	char	arity;$/;"	m	struct:pri	file:
arity	src/tools/lcc/lburg/lburg.h	/^	int arity;		\/* operator arity *\/$/;"	m	struct:term
array	src/tools/lcc/src/types.c	/^Type array(Type ty, int n, int a) {$/;"	f
as	src/tools/lcc/etc/bytecode.c	/^char *as[] = { 0 };$/;"	v
asciiFold	src/server/sqlite3.c	/^static void asciiFold(char *aOut, const char *aIn, int nByte){$/;"	f	file:
asgn	src/tools/lcc/src/enode.c	/^Tree asgn(Symbol p, Tree e) {$/;"	f
asgnnode	src/tools/lcc/src/dag.c	/^static Node asgnnode(Symbol tmp, Node p) {$/;"	f	file:
asgntree	src/tools/lcc/src/enode.c	/^Tree asgntree(int op, Tree l, Tree r) {$/;"	f
askfixedreg	src/tools/lcc/src/gen.c	/^static Symbol askfixedreg(Symbol s) {$/;"	f	file:
askreg	src/tools/lcc/src/gen.c	/^static Symbol askreg(Symbol rs, unsigned rmask[]) {$/;"	f	file:
askregvar	src/tools/lcc/src/gen.c	/^int askregvar(Symbol p, Symbol regs) {$/;"	f
asmFileNames	src/tools/asm/q3asm.c	/^char	*asmFileNames[MAX_ASM_FILES];$/;"	v
asmFiles	src/tools/asm/q3asm.c	/^char	*asmFiles[MAX_ASM_FILES];$/;"	v
asm_instruction	src/qcommon/vm_powerpc_asm.c	/^asm_instruction( powerpc_iname_t sname, const int argc, const long int *argv )$/;"	f
asmcall	src/qcommon/vm_sparc.c	/^static int asmcall(int call, int pstack)$/;"	f	file:
aspectBias	src/ui/ui_shared.h	/^  int aspectBias;                 \/\/ direction in which to aspect compensate$/;"	m	struct:__anon499
aspectScale	src/ui/ui_shared.h	/^  float      aspectScale;$/;"	m	struct:__anon506
assert	src/game/bg_lib.h	82;"	d
assertCellInfo	src/server/sqlite3.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	src/server/sqlite3.c	60042;"	d	file:
assertColumnName	src/server/sqlite3.c	/^static void assertColumnName(sqlite3_stmt *pStmt, int iCol, const char *zName){$/;"	f	file:
assertColumnName	src/server/sqlite3.c	164083;"	d	file:
assertMutexHeld	src/server/sqlite3.c	137228;"	d	file:
assertParentIndex	src/server/sqlite3.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	src/server/sqlite3.c	60601;"	d	file:
assertTruncateConstraint	src/server/sqlite3.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	src/server/sqlite3.c	47860;"	d	file:
assertTruncateConstraintCb	src/server/sqlite3.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assert_nc	src/server/sqlite3.c	169330;"	d	file:
assert_nc	src/server/sqlite3.c	169332;"	d	file:
assert_pager_state	src/server/sqlite3.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
asset	src/ui/ui_shared.h	/^  qhandle_t asset;               \/\/ handle to asset$/;"	m	struct:itemDef_s
assign	src/tools/lcc/src/enode.c	/^Type assign(Type xty, Tree e) {$/;"	f
assignargs	src/tools/lcc/src/dag.c	/^int assignargs = 1;$/;"	v
atEOF	src/server/sqlite3.c	/^  u8 atEOF;                         \/* True if at end of search *\/$/;"	m	struct:RtreeCursor	file:
atRest	src/cgame/cg_local.h	/^  qboolean          atRest;$/;"	m	struct:particle_s
atof	src/game/bg_lib.c	/^double atof( const char *string )$/;"	f
atof_neg	src/game/bg_misc.c	/^float atof_neg( char *token, qboolean allowNegative )$/;"	f
atoi	src/game/bg_lib.c	/^int atoi( const char *string )$/;"	f
atoi64	src/tools/asm/q3asm.c	419;"	d	file:
atoi64	src/tools/asm/q3asm.c	422;"	d	file:
atoiNoCap	src/tools/asm/q3asm.c	/^static int atoiNoCap (const char *s)$/;"	f	file:
atoi_neg	src/game/bg_misc.c	/^int atoi_neg( char *token, qboolean allowNegative )$/;"	f
atop	src/tools/lcc/src/types.c	/^Type atop(Type ty) {$/;"	f
attach	src/tools/lcc/src/event.c	/^void attach(Apply func, void *cl, List *list) {$/;"	f
attachBackupObject	src/server/sqlite3.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachFunc	src/server/sqlite3.c	/^static void attachFunc($/;"	f	file:
attached	src/cgame/cg_local.h	/^  qboolean          attached;$/;"	m	struct:attachment_s
attachment	src/cgame/cg_local.h	/^  attachment_t          attachment;$/;"	m	struct:particleSystem_s
attachmentType_t	src/cgame/cg_local.h	/^} attachmentType_t;$/;"	t	typeref:enum:__anon236
attachment_s	src/cgame/cg_local.h	/^typedef struct attachment_s$/;"	s
attachment_t	src/cgame/cg_local.h	/^} attachment_t;$/;"	t	typeref:struct:attachment_s
attackerTime	src/cgame/cg_local.h	/^  int           attackerTime;$/;"	m	struct:__anon249
attribPointers	src/renderergl2/tr_local.h	/^	void *attribPointers[ATTR_INDEX_COUNT];$/;"	m	struct:shaderCommands_s
attribs	src/renderergl2/tr_local.h	/^	uint32_t        attribs;	\/\/ vertex array attributes$/;"	m	struct:shaderProgram_s
attribs	src/renderergl2/tr_local.h	/^	vaoAttrib_t     attribs[VAO_MAX_ATTRIBS];$/;"	m	struct:vao_s
attributes	src/renderercommon/tr_image_tga.c	/^	unsigned char	pixel_size, attributes;$/;"	m	struct:_TargaHeader	file:
audio	src/client/cl_avi.c	/^  qboolean      audio;$/;"	m	struct:aviFileData_s	file:
audioFormat_s	src/client/cl_avi.c	/^typedef struct audioFormat_s$/;"	s	file:
audioFormat_t	src/client/cl_avi.c	/^} audioFormat_t;$/;"	t	typeref:struct:audioFormat_s	file:
auth	src/server/sqlite3.c	/^  sqlite3_userauth auth;        \/* User authentication information *\/$/;"	m	struct:sqlite3	file:
authLevel	src/server/sqlite3.c	/^  u8 authLevel;                 \/* Current authentication level *\/$/;"	m	struct:sqlite3_userauth	file:
authorizeAddress	src/server/server.h	/^	netadr_t	authorizeAddress;			\/\/ for rcon return messages$/;"	m	struct:__anon188
authorizeServer	src/client/client.h	/^	netadr_t	authorizeServer;$/;"	m	struct:__anon90
autoAngles	src/cgame/cg_local.h	/^  vec3_t        autoAngles;$/;"	m	struct:__anon249
autoAnglesFast	src/cgame/cg_local.h	/^  vec3_t        autoAnglesFast;$/;"	m	struct:__anon249
autoAxis	src/cgame/cg_local.h	/^  vec3_t        autoAxis[ 3 ];$/;"	m	struct:__anon249
autoAxisFast	src/cgame/cg_local.h	/^  vec3_t        autoAxisFast[ 3 ];$/;"	m	struct:__anon249
autoCommit	src/server/sqlite3.c	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3	file:
autoExposureMinMax	src/renderergl2/tr_local.h	/^	float       autoExposureMinMax[2];$/;"	m	struct:__anon39
autoExposureMinMax	src/renderergl2/tr_local.h	/^	vec2_t                  autoExposureMinMax;$/;"	m	struct:__anon63
autoIncBegin	src/server/sqlite3.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	src/server/sqlite3.c	103879;"	d	file:
autoIncStep	src/server/sqlite3.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	src/server/sqlite3.c	103880;"	d	file:
autoIncrementEnd	src/server/sqlite3.c	/^static SQLITE_NOINLINE void autoIncrementEnd(Parse *pParse){$/;"	f	file:
autoVacuum	src/server/sqlite3.c	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
autoVacuumCommit	src/server/sqlite3.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
autoWeaponHit	src/game/bg_public.h	/^  qboolean      autoWeaponHit[ 32 ];$/;"	m	struct:pmove_s
auto_extension	src/server/sqlite3.c	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines	file:
autolockIoFinder	src/server/sqlite3.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinderImpl	src/server/sqlite3.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
autos	src/tools/lcc/src/decl.c	/^static List autos, registers;$/;"	v	file:
av	src/tools/lcc/etc/lcc.c	/^static char **av;		\/* argument vector *\/$/;"	v	file:
avail	src/game/g_playmap.h	/^  qboolean avail;		\/* Whether flag is available for users *\/$/;"	m	struct:playMapFlagDesc_s
avail	src/tools/lcc/src/alloc.c	/^	char *avail;$/;"	m	struct:block	file:
averageNumAlienClients	src/game/g_local.h	/^  float             averageNumAlienClients;$/;"	m	struct:__anon316
averageNumHumanClients	src/game/g_local.h	/^  float             averageNumHumanClients;$/;"	m	struct:__anon316
avgFinalize	src/server/sqlite3.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
avgdl	src/server/sqlite3.c	/^  double avgdl;                   \/* Average number of tokens in each row *\/$/;"	m	struct:Fts5Bm25Data	file:
aviFileData_s	src/client/cl_avi.c	/^typedef struct aviFileData_s$/;"	s	file:
aviFileData_t	src/client/cl_avi.c	/^} aviFileData_t;$/;"	t	typeref:struct:aviFileData_s	file:
aviSoundFrameRemainder	src/client/client.h	/^	float		aviSoundFrameRemainder;$/;"	m	struct:__anon87
aviVideoFrameRemainder	src/client/client.h	/^	float		aviVideoFrameRemainder;$/;"	m	struct:__anon87
axis	src/cgame/cg_local.h	/^  vec3_t   axis[ 3 ];$/;"	m	struct:buildableCache_s
axis	src/qcommon/q_shared.h	/^	vec3_t		axis[3];$/;"	m	struct:__anon472
axis	src/qcommon/qfiles.h	/^	vec3_t		axis[3];$/;"	m	struct:md3Tag_s
axis	src/renderercommon/tr_types.h	/^	vec3_t		axis[3];			\/\/ rotation vectors$/;"	m	struct:__anon114
axis	src/renderergl1/tr_local.h	/^	vec3_t		axis[3];		\/\/ orientation in world$/;"	m	struct:__anon129
axis	src/renderergl2/tr_local.h	/^	float           axis[3][3];$/;"	m	struct:__anon51
axis	src/renderergl2/tr_local.h	/^	vec3_t		axis[3];		\/\/ orientation in world$/;"	m	struct:__anon9
axis	src/server/sv_world.c	/^	int		axis;		\/\/ -1 = leaf node$/;"	m	struct:worldSector_s	file:
axisDefault	src/qcommon/q_math.c	/^vec3_t	axisDefault[3] = { { 1, 0, 0 }, { 0, 1, 0 }, { 0, 0, 1 } };$/;"	v
axisLength	src/renderergl1/tr_local.h	/^	float		axisLength;		\/\/ compensate for non-normalized axis$/;"	m	struct:__anon128
axisLength	src/renderergl2/tr_local.h	/^	float		axisLength;		\/\/ compensate for non-normalized axis$/;"	m	struct:__anon8
azCol	src/server/sqlite3.c	/^  char **azCol;                   \/* Column names *\/$/;"	m	struct:Fts5Config	file:
azCol	src/server/sqlite3.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azColl	src/server/sqlite3.c	/^  const char **azColl;     \/* Array of collation sequence names for index *\/$/;"	m	struct:Index	file:
azColumn	src/server/sqlite3.c	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table	file:
azCompileOpt	src/server/sqlite3.c	/^static const char * const azCompileOpt[] = {$/;"	v	file:
azFileLock	src/server/sqlite3.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azModuleArg	src/server/sqlite3.c	/^  char **azModuleArg;  \/* 0: module 1: schema 2: vtab name 3...: args *\/$/;"	m	struct:Table	file:
azResult	src/server/sqlite3.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azTblCol	src/server/sqlite3.c	/^  char **azTblCol;                \/* Array of unquoted target column names *\/$/;"	m	struct:RbuObjIter	file:
azTblType	src/server/sqlite3.c	/^  char **azTblType;               \/* Array of target column types *\/$/;"	m	struct:RbuObjIter	file:
azVar	src/server/sqlite3.c	/^  char **azVar;             \/* Pointers to names of parameters *\/$/;"	m	struct:Parse	file:
azVar	src/server/sqlite3.c	/^  char **azVar;           \/* Name of variables *\/$/;"	m	struct:Vdbe	file:
b	src/qcommon/common.c	/^	memblock_t b;$/;"	m	struct:memstatic_s	file:
b	src/qcommon/vm_powerpc.c	/^		unsigned char b;$/;"	m	union:source_instruction_s::__anon453	file:
b	src/qcommon/vm_sparc.c	/^		unsigned char	b;$/;"	m	union:src_insn::__anon484	file:
b	src/renderergl1/tr_local.h	/^		byte	*b;$/;"	m	union:__anon154::__anon155
b	src/renderergl2/tr_local.h	/^		byte	*b;$/;"	m	union:__anon46::__anon47
b	src/server/sqlite3.c	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter	file:
b	src/server/sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
b	src/server/sqlite3.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
b	src/tools/lcc/src/alloc.c	/^	struct block b;$/;"	m	union:header	typeref:struct:header::block	file:
b	src/ui/ui_shared.c	/^  int f, b;$/;"	m	struct:exprList_s	file:
b0	src/qcommon/q_shared.h	/^	byte	b0;$/;"	m	struct:__anon467
b1	src/cgame/cg_local.h	/^  qhandle_t b1;$/;"	m	struct:__anon250
b1	src/qcommon/q_shared.h	/^	byte	b1;$/;"	m	struct:__anon467
b2	src/cgame/cg_local.h	/^  qhandle_t b2;$/;"	m	struct:__anon250
b2	src/qcommon/q_shared.h	/^	byte	b2;$/;"	m	struct:__anon467
b3	src/cgame/cg_local.h	/^  qhandle_t b3;$/;"	m	struct:__anon250
b3	src/qcommon/q_shared.h	/^	byte	b3;$/;"	m	struct:__anon467
b4	src/qcommon/q_shared.h	/^	byte	b4;$/;"	m	struct:__anon467
b5	src/qcommon/q_shared.h	/^	byte	b5;$/;"	m	struct:__anon467
b6	src/qcommon/q_shared.h	/^	byte	b6;$/;"	m	struct:__anon467
b7	src/qcommon/q_shared.h	/^	byte	b7;$/;"	m	struct:__anon467
bBenignMalloc	src/server/sqlite3.c	/^  u8 bBenignMalloc;             \/* Do not require OOMs if true *\/$/;"	m	struct:sqlite3	file:
bBusy	src/server/sqlite3.c	/^  u8 bBusy;            \/* Prevent endless loops on corrupt database files *\/$/;"	m	struct:MemPage	file:
bCleanup	src/server/sqlite3.c	/^  int bCleanup;                   \/* True in "cleanup" state *\/$/;"	m	struct:RbuObjIter	file:
bColumnsize	src/server/sqlite3.c	/^  int bColumnsize;                \/* "columnsize=" option value (dflt==1) *\/$/;"	m	struct:Fts5Config	file:
bConstraint	src/server/sqlite3.c	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable	file:
bContent	src/server/sqlite3.c	/^  u8 bContent;                    \/* Set content-flag (detail=none mode) *\/$/;"	m	struct:Fts5HashEntry	file:
bCoreMutex	src/server/sqlite3.c	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bDeclared	src/server/sqlite3.c	/^  int bDeclared;      \/* True after sqlite3_declare_vtab() is called *\/$/;"	m	struct:VtabCtx	file:
bDeferred	src/server/sqlite3.c	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr	file:
bDel	src/server/sqlite3.c	/^  u8 bDel;                        \/* Set delete-flag @ iSzPoslist *\/$/;"	m	struct:Fts5HashEntry	file:
bDel	src/server/sqlite3.c	/^  u8 bDel;                        \/* True if the delete flag is set *\/$/;"	m	struct:Fts5SegIter	file:
bDelete	src/server/sqlite3.c	/^  int bDelete;                    \/* Current write is a delete *\/$/;"	m	struct:Fts5Index	file:
bDesc	src/server/sqlite3.c	/^  int bDesc;                      \/* Iterate in descending rowid order *\/$/;"	m	struct:Fts5Expr	file:
bDesc	src/server/sqlite3.c	/^  int bDesc;                      \/* True for "ORDER BY rowid DESC" queries *\/$/;"	m	struct:Fts5Cursor	file:
bDesc	src/server/sqlite3.c	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor	file:
bDescIdx	src/server/sqlite3.c	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table	file:
bDestLocked	src/server/sqlite3.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bDisable	src/server/sqlite3.c	/^  u32 bDisable;           \/* Only operate the lookaside when zero *\/$/;"	m	struct:Lookaside	file:
bDoTruncate	src/server/sqlite3.c	/^  u8 bDoTruncate;       \/* True to truncate db on commit *\/$/;"	m	struct:BtShared	file:
bDone	src/server/sqlite3.c	/^  int bDone;                      \/* Set if thread is finished but not joined *\/$/;"	m	struct:SortSubtask	file:
bEof	src/server/sqlite3.c	/^  int bEof;                       \/* Set to true when merge is finished *\/$/;"	m	struct:IncrMerger	file:
bEof	src/server/sqlite3.c	/^  int bEof;                       \/* True at EOF *\/$/;"	m	struct:Fts5ExprNode	file:
bEof	src/server/sqlite3.c	/^  int bEof;                       \/* True if this cursor is at EOF *\/$/;"	m	struct:Fts5VocabCursor	file:
bEof	src/server/sqlite3.c	/^  int bEof;                     \/* At EOF already *\/$/;"	m	struct:Fts5DlidxLvl	file:
bEof	src/server/sqlite3.c	/^  u8 bEof;                        \/* Set to true at EOF *\/$/;"	m	struct:Fts5PoslistReader	file:
bEof	src/server/sqlite3.c	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr	file:
bEof	src/server/sqlite3.c	/^  u8 bEof;$/;"	m	struct:Fts5IndexIter	file:
bErr	src/server/sqlite3.c	/^  u8 bErr;                 \/* True if an error has been encountered *\/$/;"	m	struct:JsonString	file:
bExclusive	src/server/sqlite3.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bFirst	src/server/sqlite3.c	/^  int bFirst;                     \/* True if token must appear at position 0 *\/$/;"	m	struct:Fts3PhraseToken	file:
bFirstRowidInDoclist	src/server/sqlite3.c	/^  u8 bFirstRowidInDoclist;        \/* True if next rowid is first in doclist *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInPage	src/server/sqlite3.c	/^  u8 bFirstRowidInPage;           \/* True if next rowid is first in page *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstTermInPage	src/server/sqlite3.c	/^  u8 bFirstTermInPage;            \/* True if next term will be first in leaf *\/$/;"	m	struct:Fts5SegWriter	file:
bFlag	src/server/sqlite3.c	/^  u8 bFlag;                       \/* For client use (any custom purpose) *\/$/;"	m	struct:Fts5PoslistReader	file:
bFreeList	src/server/sqlite3.c	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist	file:
bFts4	src/server/sqlite3.c	/^  int bFts4;                          \/* True to allow FTS4-only syntax *\/$/;"	m	struct:ParseContext	file:
bFts4	src/server/sqlite3.c	/^  u8 bFts4;                       \/* True for FTS4, false for FTS3 *\/$/;"	m	struct:Fts3Table	file:
bFullMutex	src/server/sqlite3.c	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bGlobal	src/server/sqlite3.c	/^  int bGlobal;                    \/* Set if global data is loaded *\/$/;"	m	struct:MatchinfoBuffer	file:
bHasDocsize	src/server/sqlite3.c	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table	file:
bHasStat	src/server/sqlite3.c	/^  u8 bHasStat;                    \/* True if %_stat table exists (2==unknown) *\/$/;"	m	struct:Fts3Table	file:
bIgnore	src/server/sqlite3.c	/^  int bIgnore;$/;"	m	struct:TokenDoclist	file:
bIgnoreSavepoint	src/server/sqlite3.c	/^  u8 bIgnoreSavepoint;            \/* True to ignore xSavepoint invocations *\/$/;"	m	struct:Fts3Table	file:
bIncr	src/server/sqlite3.c	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase	file:
bIsReader	src/server/sqlite3.c	/^  bft bIsReader:1;        \/* True for statements that read *\/$/;"	m	struct:Vdbe	file:
bLine	src/server/sqlite3.c	/^  u8  bLine[100];         \/* Draw vertical in column i if bLine[i] is true *\/$/;"	m	struct:TreeView	file:
bLocaltimeFault	src/server/sqlite3.c	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config	file:
bLookup	src/server/sqlite3.c	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader	file:
bLookup	src/server/sqlite3.c	/^  u8 bLookup;                     \/* True for a lookup only *\/$/;"	m	struct:Fts3SegReader	file:
bMalloced	src/server/sqlite3.c	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside	file:
bMemstat	src/server/sqlite3.c	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config	file:
bMiss	src/server/sqlite3.c	/^  int bMiss;$/;"	m	struct:Fts5PoslistPopulator	file:
bNoIncrDoclist	src/server/sqlite3.c	/^  int bNoIncrDoclist;$/;"	m	struct:Fts3Table	file:
bNoLeafData	src/server/sqlite3.c	/^  u8 bNoLeafData;                 \/* If true, store 0 for segment size *\/$/;"	m	struct:IncrmergeWriter	file:
bNomatch	src/server/sqlite3.c	/^  int bNomatch;                   \/* True if entry is not a match *\/$/;"	m	struct:Fts5ExprNode	file:
bNot	src/server/sqlite3.c	/^  int bNot;         \/* True if the NOT keyword is present *\/$/;"	m	struct:LikeOp	file:
bOk	src/server/sqlite3.c	/^  int bOk;                        \/* True if ok to populate *\/$/;"	m	struct:Fts5PoslistPopulator	file:
bOpenUri	src/server/sqlite3.c	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config	file:
bOwned	src/server/sqlite3.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bPending	src/server/sqlite3.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPoint	src/server/sqlite3.c	/^  u8 bPoint;                        \/* True if sPoint is valid *\/$/;"	m	struct:RtreeCursor	file:
bPrefix	src/server/sqlite3.c	/^  int bPrefix;                    \/* True for a prefix term *\/$/;"	m	struct:Fts5ExprTerm	file:
bPrefixIndex	src/server/sqlite3.c	/^  int bPrefixIndex;               \/* True to use prefix-indexes *\/$/;"	m	struct:Fts5Config	file:
bPrevDelete	src/server/sqlite3.c	/^  int bPrevDelete;                \/* True if last operation was a delete *\/$/;"	m	struct:Fts3Table	file:
bPrevValid	src/server/sqlite3.c	/^  int bPrevValid;                 \/* True if iPrev is valid *\/$/;"	m	struct:Fts5DlidxWriter	file:
bProcessLock	src/server/sqlite3.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bPurgeable	src/server/sqlite3.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bPurgeable	src/server/sqlite3.c	/^  u8 bPurgeable;                      \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bRecursive	src/server/sqlite3.c	/^  u8 bRecursive;             \/* True for json_tree().  False for json_each() *\/$/;"	m	struct:JsonEachCursor	file:
bRemoveDiacritic	src/server/sqlite3.c	/^  int bRemoveDiacritic;           \/* True if remove_diacritics=1 is set *\/$/;"	m	struct:Unicode61Tokenizer	file:
bRemoveDiacritic	src/server/sqlite3.c	/^  int bRemoveDiacritic;$/;"	m	struct:unicode_tokenizer	file:
bReserved	src/server/sqlite3.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bRestart	src/server/sqlite3.c	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader	file:
bRev	src/server/sqlite3.c	/^  int bRev;                       \/* True to iterate in reverse order *\/$/;"	m	struct:Fts5Iter	file:
bSkipEmpty	src/server/sqlite3.c	/^  u8 bSkipEmpty;                  \/* True to skip deleted entries *\/$/;"	m	struct:Fts5Iter	file:
bSpanIsTab	src/server/sqlite3.c	/^    unsigned bSpanIsTab :1; \/* zSpan holds DB.TABLE.COLUMN *\/$/;"	m	struct:ExprList::ExprList_item	file:
bStart	src/server/sqlite3.c	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr	file:
bStatic	src/server/sqlite3.c	/^  u8 bStatic;              \/* True if zBuf is static space *\/$/;"	m	struct:JsonString	file:
bSyncSet	src/server/sqlite3.c	/^  u8 bSyncSet;         \/* True if "PRAGMA synchronous=N" has been run *\/$/;"	m	struct:Db	file:
bTermEq	src/server/sqlite3.c	/^  u8 bTermEq;                     \/* True if the terms are equal *\/$/;"	m	struct:Fts5CResult	file:
bTotalsValid	src/server/sqlite3.c	/^  int bTotalsValid;               \/* True if nTotalRow\/aTotalSize[] are valid *\/$/;"	m	struct:Fts5Storage	file:
bTriggers	src/game/g_local.h	/^  buildable_t       bTriggers[ BA_NUM_BUILDABLES ]; \/\/ which buildables are triggers$/;"	m	struct:gentity_s
bUnderPressure	src/server/sqlite3.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnique	src/server/sqlite3.c	/^  int bUnique;                    \/* Current index is unique *\/$/;"	m	struct:RbuObjIter	file:
bUnordered	src/server/sqlite3.c	/^  unsigned bUnordered:1;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index	file:
bUseCis	src/server/sqlite3.c	/^  int bUseCis;                      \/* Use covering indices for full-scans *\/$/;"	m	struct:Sqlite3Config	file:
bUseFetch	src/server/sqlite3.c	/^  u8 bUseFetch;               \/* True to use xFetch() *\/$/;"	m	struct:Pager	file:
bUsePMA	src/server/sqlite3.c	/^  u8 bUsePMA;                     \/* True if one or more PMAs created *\/$/;"	m	struct:VdbeSorter	file:
bUseThread	src/server/sqlite3.c	/^  int bUseThread;                 \/* True to use a bg thread for this object *\/$/;"	m	struct:IncrMerger	file:
bUseThreads	src/server/sqlite3.c	/^  u8 bUseThreads;                 \/* True to use background threads *\/$/;"	m	struct:VdbeSorter	file:
bVarOnly	src/server/sqlite3.c	/^  int bVarOnly;       \/* Check for variable references only *\/$/;"	m	struct:DbFixer	file:
b_blockbeg	src/tools/lcc/src/bytecode.c	320;"	d	file:
b_blockend	src/tools/lcc/src/bytecode.c	321;"	d	file:
back	src/game/g_local.h	/^  int front, back;$/;"	m	struct:spawnQueue_s
backAlpha	src/cgame/cg_local.h	/^  float                   backAlpha;$/;"	m	struct:baseTrailBeam_s
backAttachment	src/cgame/cg_local.h	/^  attachment_t        backAttachment;$/;"	m	struct:trailSystem_s
backColor	src/cgame/cg_local.h	/^  byte                    backColor[ 3 ];$/;"	m	struct:baseTrailBeam_s
backColor	src/cgame/cg_local.h	/^  vec4_t        backColor;$/;"	m	struct:__anon252
backColor	src/ui/ui_shared.h	/^  vec4_t backColor;               \/\/ border color$/;"	m	struct:__anon499
backEnd	src/renderergl1/tr_backend.c	/^backEndState_t	backEnd;$/;"	v
backEnd	src/renderergl2/tr_backend.c	/^backEndState_t	backEnd;$/;"	v
backEndCounters_t	src/renderergl1/tr_local.h	/^} backEndCounters_t;$/;"	t	typeref:struct:__anon161
backEndCounters_t	src/renderergl2/tr_local.h	/^} backEndCounters_t;$/;"	t	typeref:struct:__anon61
backEndData	src/renderergl1/tr_backend.c	/^backEndData_t	*backEndData;$/;"	v
backEndData	src/renderergl2/tr_backend.c	/^backEndData_t	*backEndData;$/;"	v
backEndData_t	src/renderergl1/tr_local.h	/^} backEndData_t;$/;"	t	typeref:struct:__anon177
backEndData_t	src/renderergl2/tr_local.h	/^} backEndData_t;$/;"	t	typeref:struct:__anon79
backEndState_t	src/renderergl1/tr_local.h	/^} backEndState_t;$/;"	t	typeref:struct:__anon162
backEndState_t	src/renderergl2/tr_local.h	/^} backEndState_t;$/;"	t	typeref:struct:__anon62
backTextureCoord	src/cgame/cg_local.h	/^  float                   backTextureCoord;$/;"	m	struct:baseTrailBeam_s
backTileShader	src/cgame/cg_local.h	/^  qhandle_t   backTileShader;$/;"	m	struct:__anon251
backWidth	src/cgame/cg_local.h	/^  float                   backWidth;$/;"	m	struct:baseTrailBeam_s
background	src/ui/ui_shared.h	/^  qhandle_t background;           \/\/ background asset$/;"	m	struct:__anon499
backlerp	src/cgame/cg_local.h	/^  float       backlerp;$/;"	m	struct:__anon235
backlerp	src/renderercommon/tr_types.h	/^	float		backlerp;			\/\/ 0.0 = current, 1.0 = old$/;"	m	struct:__anon114
backslash	src/tools/lcc/src/lex.c	/^static int backslash(int q) {$/;"	f	file:
backtrace	src/server/sqlite3.c	18790;"	d	file:
backtrace_symbols_fd	src/server/sqlite3.c	18791;"	d	file:
backupOnePage	src/server/sqlite3.c	/^static int backupOnePage($/;"	f	file:
backupTruncateFile	src/server/sqlite3.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backupUpdate	src/server/sqlite3.c	/^static SQLITE_NOINLINE void backupUpdate($/;"	f	file:
backup_finish	src/server/sqlite3.c	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_init	src/server/sqlite3.c	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
backup_pagecount	src/server/sqlite3.c	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_remaining	src/server/sqlite3.c	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_step	src/server/sqlite3.c	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines	file:
balance	src/server/sqlite3.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance_deeper	src/server/sqlite3.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_nonroot	src/server/sqlite3.c	/^static int balance_nonroot($/;"	f	file:
balance_quick	src/server/sqlite3.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
balloonShader	src/cgame/cg_local.h	/^  qhandle_t   balloonShader;$/;"	m	struct:__anon251
ban_matchip	src/game/g_admin.c	/^static qboolean ban_matchip( void *ban, const void *ip )$/;"	f	file:
ban_matchname	src/game/g_admin.c	/^static qboolean ban_matchname( void *ban, const void *name )$/;"	f	file:
ban_out	src/game/g_admin.c	/^static void ban_out( void *ban, char *str )$/;"	f	file:
banned	src/game/g_local.h	/^  qboolean          banned;$/;"	m	struct:namelog_s
banner	src/game/g_admin.h	/^  char banner[ MAX_NAME_LENGTH ];$/;"	m	struct:g_admin_ban
barrelAngle	src/cgame/cg_local.h	/^  float       barrelAngle;$/;"	m	struct:__anon241
barrelModel	src/cgame/cg_local.h	/^  qhandle_t         barrelModel;$/;"	m	struct:weaponInfo_s
barrelModel3rdPerson	src/cgame/cg_local.h	/^  qhandle_t         barrelModel3rdPerson;$/;"	m	struct:weaponInfo_s
barrelSpinning	src/cgame/cg_local.h	/^  qboolean    barrelSpinning;$/;"	m	struct:__anon241
barrelTime	src/cgame/cg_local.h	/^  int         barrelTime;$/;"	m	struct:__anon241
base	src/renderergl1/tr_local.h	/^	float base;$/;"	m	struct:__anon137
base	src/renderergl2/tr_local.h	/^	float base;$/;"	m	struct:__anon19
base	src/server/sqlite3.c	/^  Fts5IndexIter base;             \/* Base class containing output vars *\/$/;"	m	struct:Fts5Iter	file:
base	src/server/sqlite3.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	src/server/sqlite3.c	/^  sqlite3_file base;              \/* sqlite3_file methods *\/$/;"	m	struct:rbu_file	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:unicode_tokenizer	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	src/server/sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:unicode_cursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vfs base;               \/* rbu VFS shim methods *\/$/;"	m	struct:rbu_vfs	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokTable	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Table	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;          \/* Base class.  Must be first *\/$/;"	m	struct:Rtree	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:Fts5VocabTable	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:StatTable	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;         \/* Base class.  Must be first *\/$/;"	m	struct:RtreeCursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokCursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Cursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:JsonEachCursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:Fts5VocabCursor	file:
base	src/server/sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:StatCursor	file:
base	src/tools/lcc/src/c.h	/^			Symbol base;$/;"	m	struct:code::__anon291::__anon293
baseName	src/renderergl1/tr_local.h	/^	char		baseName[MAX_QPATH];	\/\/ ie: tim_dm2$/;"	m	struct:__anon157
baseName	src/renderergl2/tr_local.h	/^	char		baseName[MAX_QPATH];	\/\/ ie: tim_dm2$/;"	m	struct:__anon49
baseParticleEjector_s	src/cgame/cg_local.h	/^typedef struct baseParticleEjector_s$/;"	s
baseParticleEjector_t	src/cgame/cg_local.h	/^} baseParticleEjector_t;$/;"	t	typeref:struct:baseParticleEjector_s
baseParticleEjectors	src/cgame/cg_particles.c	/^static baseParticleEjector_t  baseParticleEjectors[ MAX_BASEPARTICLE_EJECTORS ];$/;"	v	file:
baseParticleSystem_s	src/cgame/cg_local.h	/^typedef struct baseParticleSystem_s$/;"	s
baseParticleSystem_t	src/cgame/cg_local.h	/^} baseParticleSystem_t;$/;"	t	typeref:struct:baseParticleSystem_s
baseParticleSystems	src/cgame/cg_particles.c	/^static baseParticleSystem_t   baseParticleSystems[ MAX_BASEPARTICLE_SYSTEMS ];$/;"	v	file:
baseParticle_s	src/cgame/cg_local.h	/^typedef struct baseParticle_s$/;"	s
baseParticle_t	src/cgame/cg_local.h	/^} baseParticle_t;$/;"	t	typeref:struct:baseParticle_s
baseParticles	src/cgame/cg_particles.c	/^static baseParticle_t         baseParticles[ MAX_BASEPARTICLES ];$/;"	v	file:
baseTrailBeam_s	src/cgame/cg_local.h	/^typedef struct baseTrailBeam_s$/;"	s
baseTrailBeam_t	src/cgame/cg_local.h	/^} baseTrailBeam_t;$/;"	t	typeref:struct:baseTrailBeam_s
baseTrailBeams	src/cgame/cg_trails.c	/^static baseTrailBeam_t    baseTrailBeams[ MAX_BASETRAIL_BEAMS ];$/;"	v	file:
baseTrailJitter_s	src/cgame/cg_local.h	/^typedef struct baseTrailJitter_s$/;"	s
baseTrailJitter_t	src/cgame/cg_local.h	/^} baseTrailJitter_t;$/;"	t	typeref:struct:baseTrailJitter_s
baseTrailSystem_s	src/cgame/cg_local.h	/^typedef struct baseTrailSystem_s$/;"	s
baseTrailSystem_t	src/cgame/cg_local.h	/^} baseTrailSystem_t;$/;"	t	typeref:struct:baseTrailSystem_s
baseTrailSystems	src/cgame/cg_trails.c	/^static baseTrailSystem_t  baseTrailSystems[ MAX_BASETRAIL_SYSTEMS ];$/;"	v	file:
basedir	src/ui/ui_local.h	/^  const char *basedir;$/;"	m	struct:serverFilter_s
baseline	src/server/server.h	/^	entityState_t	baseline;		\/\/ for delta compression of initial sighting$/;"	m	struct:svEntity_s
basename	src/tools/lcc/etc/lcc.c	/^char *basename(char *name) {$/;"	f
basepath	src/tools/lcc/cpp/unix.c	/^char *basepath( char *fname )$/;"	f
battpackModel	src/cgame/cg_local.h	/^  qhandle_t battpackModel;$/;"	m	struct:__anon251
bbcall	src/tools/lcc/src/prof.c	/^static void bbcall(Symbol yycounts, Coordinate *cp, Tree *e) {$/;"	f	file:
bbentry	src/tools/lcc/src/prof.c	/^static void bbentry(Symbol yylink, Symbol f) {$/;"	f	file:
bbexit	src/tools/lcc/src/prof.c	/^static void bbexit(Symbol yylink, Symbol f, Tree e) {$/;"	f	file:
bbfile	src/tools/lcc/src/prof.c	/^static int bbfile(char *file) {$/;"	f	file:
bbfunc	src/tools/lcc/src/prof.c	/^static void bbfunc(Symbol yylink, Symbol f) {$/;"	f	file:
bbincr	src/tools/lcc/src/prof.c	/^static void bbincr(Symbol yycounts, Coordinate *cp, Tree *e) {$/;"	f	file:
bbmax	src/renderercommon/iqm.h	/^    float bbmin[3], bbmax[3];$/;"	m	struct:iqmbounds
bbmin	src/renderercommon/iqm.h	/^    float bbmin[3], bbmax[3];$/;"	m	struct:iqmbounds
bbvars	src/tools/lcc/src/prof.c	/^static void bbvars(Symbol yylink) {$/;"	f	file:
be	src/tools/lcc/src/prof.c	/^		struct { unsigned int index:6,x:10,y:16; } be;$/;"	m	union:callsite::coordinate	typeref:struct:callsite::coordinate::__anon272	file:
beamEnd	src/cgame/cg_local.h	/^  vec3_t                beamEnd;$/;"	m	struct:centity_s
beams	src/cgame/cg_local.h	/^  baseTrailBeam_t *beams[ MAX_BEAMS_PER_SYSTEM ];$/;"	m	struct:baseTrailSystem_s
begin	src/tools/lcc/src/c.h	/^		Code begin;$/;"	m	union:code::__anon291
bflag	src/tools/lcc/src/gen.c	/^int bflag = 0;  \/* omit *\/$/;"	v
bft	src/server/sqlite3.c	/^typedef unsigned bft;  \/* Bit Field Type *\/$/;"	t	file:
bg_buildableConfigList	src/game/bg_misc.c	/^static buildableConfig_t bg_buildableConfigList[ BA_NUM_BUILDABLES ];$/;"	v	file:
bg_buildableList	src/game/bg_misc.c	/^static const buildableAttributes_t bg_buildableList[ ] =$/;"	v	file:
bg_classConfigList	src/game/bg_misc.c	/^static classConfig_t bg_classConfigList[ PCL_NUM_CLASSES ];$/;"	v	file:
bg_classList	src/game/bg_misc.c	/^static const classAttributes_t bg_classList[ ] =$/;"	v	file:
bg_disabledGameElements	src/game/bg_misc.c	/^static gameElements_t bg_disabledGameElements;$/;"	v	file:
bg_numBuildables	src/game/bg_misc.c	/^size_t bg_numBuildables = ARRAY_LEN( bg_buildableList );$/;"	v
bg_numClasses	src/game/bg_misc.c	/^size_t bg_numClasses = ARRAY_LEN( bg_classList );$/;"	v
bg_numTeams	src/game/bg_misc.c	/^size_t bg_numTeams = ARRAY_LEN( bg_teamList );$/;"	v
bg_numUpgrades	src/game/bg_misc.c	/^size_t bg_numUpgrades = ARRAY_LEN( bg_upgrades );$/;"	v
bg_numWeapons	src/game/bg_misc.c	/^size_t bg_numWeapons = ARRAY_LEN( bg_weapons );$/;"	v
bg_teamList	src/game/bg_misc.c	/^static const teamAttributes_t bg_teamList[ ] =$/;"	v	file:
bg_upgrades	src/game/bg_misc.c	/^static const upgradeAttributes_t bg_upgrades[ ] =$/;"	v	file:
bg_weapons	src/game/bg_misc.c	/^static const weaponAttributes_t bg_weapons[ ] =$/;"	v	file:
bi	src/qcommon/vm_powerpc.c	/^	long int bo, bi;$/;"	m	struct:symbolic_jump	file:
biSphere	src/qcommon/cm_local.h	/^	biSphere_t	biSphere;$/;"	m	struct:__anon443
biSphere_t	src/qcommon/cm_local.h	/^} biSphere_t;$/;"	t	typeref:struct:__anon441
bigEndCksum	src/server/sqlite3.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
bigFont	src/ui/ui_shared.h	/^  fontInfo_t bigFont;$/;"	m	struct:__anon504
bigFontScale	src/ui/ui_shared.h	/^  float      bigFontScale;$/;"	m	struct:__anon506
bigfsm	src/tools/lcc/cpp/lex.c	/^short	bigfsm[256][MAXSTATE];$/;"	v
binCollFunc	src/server/sqlite3.c	/^static int binCollFunc($/;"	f	file:
bin_path	GNUmakefile	/^bin_path=$(shell which $(1) 2> \/dev\/null)$/;"	m
binary	src/tools/lcc/src/expr.c	/^Type binary(Type xty, Type yty) {$/;"	f
binaryAlpha1Shader	src/cgame/cg_local.h	/^  qhandle_t   binaryAlpha1Shader;$/;"	m	struct:__anon251
binaryCompareP5	src/server/sqlite3.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryPath	src/sys/sys_main.c	/^static char binaryPath[ MAX_OSPATH ] = { 0 };$/;"	v	file:
binaryShaderSettings	src/cgame/cg_local.h	/^  cgBinaryShaderSetting_t binaryShaderSettings[ NUM_BINARY_SHADERS ];$/;"	m	struct:__anon249
binaryShaders	src/cgame/cg_local.h	/^  cgMediaBinaryShader_t binaryShaders[ NUM_BINARY_SHADERS ];$/;"	m	struct:__anon251
binaryToUnaryIfNull	src/server/sqlite3.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
bind1	src/ui/ui_shared.c	/^  int   bind1;$/;"	m	struct:__anon522	file:
bind2	src/ui/ui_shared.c	/^  int   bind2;$/;"	m	struct:__anon522	file:
bindText	src/server/sqlite3.c	/^static int bindText($/;"	f	file:
bind_blob	src/server/sqlite3.c	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_blob64	src/server/sqlite3.c	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
bind_double	src/server/sqlite3.c	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	file:
bind_int	src/server/sqlite3.c	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_int64	src/server/sqlite3.c	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
bind_null	src/server/sqlite3.c	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_count	src/server/sqlite3.c	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_index	src/server/sqlite3.c	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_name	src/server/sqlite3.c	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_t	src/cgame/cg_tutorial.c	/^} bind_t;$/;"	t	typeref:struct:__anon227	file:
bind_t	src/ui/ui_shared.c	/^bind_t;$/;"	t	typeref:struct:__anon522	file:
bind_text	src/server/sqlite3.c	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text16	src/server/sqlite3.c	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text64	src/server/sqlite3.c	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
bind_value	src/server/sqlite3.c	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob	src/server/sqlite3.c	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob64	src/server/sqlite3.c	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
binding	src/client/keys.h	/^	char		*binding;$/;"	m	struct:__anon98
binding	src/tools/lcc/src/c.h	/^typedef struct binding {$/;"	s
bindings	src/cgame/cg_tutorial.c	/^static bind_t bindings[ ] =$/;"	v	file:
bindings	src/tools/lcc/src/bind.c	/^Binding bindings[] = {$/;"	v
birthTime	src/cgame/cg_local.h	/^  int                 birthTime;$/;"	m	struct:trailSystem_s
birthTime	src/cgame/cg_local.h	/^  int               birthTime;$/;"	m	struct:particle_s
bit	src/qcommon/qcommon.h	/^	int		bit;				\/\/ for bitwise reads and writes$/;"	m	struct:__anon418
bitangent	src/renderergl2/tr_local.h	/^	vec3_t          bitangent;$/;"	m	struct:__anon53
bitbuf	src/qcommon/puff.c	/^    int32_t bitbuf;                 \/* bit buffer *\/$/;"	m	struct:state	file:
bitcnt	src/qcommon/puff.c	/^    int32_t bitcnt;                 \/* number of bits in bit buffer *\/$/;"	m	struct:state	file:
bitm	src/qcommon/vm_powerpc_asm.c	/^	unsigned int bitm;$/;"	m	struct:powerpc_operand	file:
bitmapDataOffset	src/renderercommon/tr_image_bmp.c	/^	unsigned bitmapDataOffset;$/;"	m	struct:__anon110	file:
bitmapDataSize	src/renderercommon/tr_image_bmp.c	/^	unsigned bitmapDataSize;$/;"	m	struct:__anon110	file:
bitmapHeaderSize	src/renderercommon/tr_image_bmp.c	/^	unsigned bitmapHeaderSize;$/;"	m	struct:__anon110	file:
bits	src/client/cl_avi.c	/^  int bits;$/;"	m	struct:audioFormat_s	file:
bits	src/qcommon/md5.c	/^	uint32_t bits[2];$/;"	m	struct:MD5Context	file:
bits	src/qcommon/msg.c	/^	int		bits;		\/\/ 0 = float$/;"	m	struct:__anon485	file:
bits	src/qcommon/puff.c	/^local int32_t bits(struct state *s, int32_t need)$/;"	f
bits2bytes	src/tools/lcc/src/decl.c	6;"	d	file:
bitsPerPixel	src/renderercommon/tr_image_bmp.c	/^	unsigned short bitsPerPixel;$/;"	m	struct:__anon110	file:
bits_per_pixel	src/renderercommon/tr_image_pcx.c	/^	char	bits_per_pixel;$/;"	m	struct:__anon124	file:
bitsize	src/tools/lcc/src/c.h	/^	short bitsize;$/;"	m	struct:field
bittree	src/tools/lcc/src/enode.c	/^Tree bittree(int op, Tree l, Tree r) {$/;"	f
blasterFire	src/game/g_weapon.c	/^void blasterFire( gentity_t *ent )$/;"	f
blendA	src/renderergl1/tr_shader.c	/^	int		blendA;$/;"	m	struct:__anon127	file:
blendB	src/renderergl1/tr_shader.c	/^	int		blendB;$/;"	m	struct:__anon127	file:
blendIndexes	src/renderergl1/tr_local.h	/^	byte		*blendIndexes;$/;"	m	struct:__anon154
blendIndexes	src/renderergl2/tr_local.h	/^	byte		*blendIndexes;$/;"	m	struct:__anon46
blendWeights	src/renderergl1/tr_local.h	/^	} blendWeights;$/;"	m	struct:__anon154	typeref:union:__anon154::__anon155
blendWeights	src/renderergl2/tr_local.h	/^	} blendWeights;$/;"	m	struct:__anon46	typeref:union:__anon46::__anon47
blendWeightsType	src/renderergl1/tr_local.h	/^	byte blendWeightsType; \/\/ IQM_UBYTE or IQM_FLOAT$/;"	m	struct:__anon154
blendWeightsType	src/renderergl2/tr_local.h	/^	byte blendWeightsType; \/\/ IQM_UBYTE or IQM_FLOAT$/;"	m	struct:__anon46
blist	src/tools/lcc/lburg/gram.y	/^blist	: \/* lambda *\/$/;"	l
blit2_32	src/client/cl_cin.c	/^static void blit2_32( byte *src, byte *dst, int spl  )$/;"	f	file:
blit4_32	src/client/cl_cin.c	/^static void blit4_32( byte *src, byte *dst, int spl  )$/;"	f	file:
blit8_32	src/client/cl_cin.c	/^static void blit8_32( byte *src, byte *dst, int spl  )$/;"	f	file:
blitVQQuad32fs	src/client/cl_cin.c	/^static void blitVQQuad32fs( byte **status, unsigned char *data )$/;"	f	file:
blkcopy	src/tools/lcc/src/gen.c	/^void blkcopy(int dreg, int doff, int sreg, int soff, int size, int tmp[]) {$/;"	f
blkfetch	src/tools/lcc/src/config.h	/^	void (*blkfetch)(int size, int off, int reg, int tmp);$/;"	m	struct:__anon273
blkloop	src/tools/lcc/src/config.h	/^	void (*blkloop)(int dreg, int doff,$/;"	m	struct:__anon273
blkstore	src/tools/lcc/src/config.h	/^	void (*blkstore)(int size, int off, int reg, int tmp);$/;"	m	struct:__anon273
blkunroll	src/tools/lcc/src/gen.c	/^static void blkunroll(int k, int dreg, int doff, int sreg, int soff, int size, int tmp[]) {$/;"	f	file:
blobGrowBuffer	src/server/sqlite3.c	/^static void blobGrowBuffer(Blob *pBlob, int nMin, int *pRc){$/;"	f	file:
blobReadWrite	src/server/sqlite3.c	/^static int blobReadWrite($/;"	f	file:
blobSeekToRow	src/server/sqlite3.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blob_bytes	src/server/sqlite3.c	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_close	src/server/sqlite3.c	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_open	src/server/sqlite3.c	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines	file:
blob_read	src/server/sqlite3.c	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_reopen	src/server/sqlite3.c	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
blob_write	src/server/sqlite3.c	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bloc	src/qcommon/huffman.c	/^static int			bloc = 0;$/;"	v	file:
blocNode	src/qcommon/qcommon.h	/^	int			blocNode;$/;"	m	struct:__anon432
blocPtrs	src/qcommon/qcommon.h	/^	int			blocPtrs;$/;"	m	struct:__anon432
block	src/server/sqlite3.c	/^  Blob block;                     \/* Current block image *\/$/;"	m	struct:NodeWriter	file:
block	src/tools/lcc/lburg/lburg.c	/^static struct block {$/;"	s	file:
block	src/tools/lcc/src/alloc.c	/^struct block {$/;"	s	file:
block	src/tools/lcc/src/c.h	/^		} block;$/;"	m	union:code::__anon291	typeref:struct:code::__anon291::__anon292
blockbeg	src/tools/lcc/src/c.h	/^void (*blockbeg)(Env *);$/;"	m	struct:interface
blockbeg	src/tools/lcc/src/gen.c	/^void blockbeg(Env *e) {$/;"	f
blockbeg	src/tools/lcc/src/null.c	/^static void I(blockbeg)(Env *e) {}$/;"	f	file:
blockbeg	src/tools/lcc/src/symbolic.c	/^static void I(blockbeg)(Env *e) {$/;"	f	file:
blockcopy	src/qcommon/vm_sparc.c	/^static void blockcopy(unsigned int dest, unsigned int src, unsigned int count)$/;"	f	file:
blocked	src/game/g_local.h	/^  void              (*blocked)( gentity_t *self, gentity_t *other );$/;"	m	struct:gentity_s
blockend	src/tools/lcc/src/c.h	/^void (*blockend)(Env *);$/;"	m	struct:interface
blockend	src/tools/lcc/src/gen.c	/^void blockend(Env *e) {$/;"	f
blockend	src/tools/lcc/src/null.c	/^static void I(blockend)(Env *e) {}$/;"	f	file:
blockend	src/tools/lcc/src/symbolic.c	/^static void I(blockend)(Env *e) {$/;"	f	file:
blockentry	src/tools/lcc/src/c.h	/^	List blockentry;$/;"	m	struct:__anon284
blockexit	src/tools/lcc/src/c.h	/^	List blockexit;$/;"	m	struct:__anon284
blocklist	src/qcommon/common.c	/^	memblock_t	blocklist;	\/\/ start \/ end cap for linked list$/;"	m	struct:__anon449	file:
blurFactor	src/renderergl2/tr_extratypes.h	/^	float			blurFactor;$/;"	m	struct:__anon6
blurFactor	src/renderergl2/tr_local.h	/^	float		blurFactor;$/;"	m	struct:__anon39
bmodel	src/game/g_public.h	/^  qboolean  bmodel;       \/\/ if false, assume an explicit mins \/ maxs bounding box$/;"	m	struct:__anon361
bmodel	src/renderergl1/tr_local.h	/^	bmodel_t	*bmodel;		\/\/ only if type == MOD_BRUSH$/;"	m	struct:model_s
bmodel	src/renderergl2/tr_local.h	/^	bmodel_t	*bmodel;		\/\/ only if type == MOD_BRUSH$/;"	m	struct:model_s
bmodel_t	src/renderergl1/tr_local.h	/^} bmodel_t;$/;"	t	typeref:struct:__anon156
bmodel_t	src/renderergl2/tr_local.h	/^} bmodel_t;$/;"	t	typeref:struct:__anon48
bmodels	src/renderergl1/tr_local.h	/^	bmodel_t	*bmodels;$/;"	m	struct:__anon157
bmodels	src/renderergl2/tr_local.h	/^	bmodel_t	*bmodels;$/;"	m	struct:__anon49
bo	src/qcommon/vm_powerpc.c	/^	long int bo, bi;$/;"	m	struct:symbolic_jump	file:
bob	src/game/bg_public.h	/^  float     bob;$/;"	m	struct:__anon349
bobCycle	src/cgame/cg_local.h	/^	int			bobCycle;		\/\/ for view bobbing and footstep generation$/;"	m	struct:__anon256
bobCycle	src/client/client.h	/^	int			bobCycle;		\/\/ for view bobbing and footstep generation$/;"	m	struct:alternatePlayerState_s
bobCycle	src/game/bg_public.h	/^  float     bobCycle;$/;"	m	struct:__anon349
bobCycle	src/qcommon/msg.c	/^	int			bobCycle;		\/\/ for view bobbing and footstep generation$/;"	m	struct:alternatePlayerState_s	file:
bobCycle	src/qcommon/q_shared.h	/^	int			bobCycle;		\/\/ for view bobbing and footstep generation$/;"	m	struct:playerState_s
bobcycle	src/cgame/cg_local.h	/^  int           bobcycle;$/;"	m	struct:__anon249
bobfracsin	src/cgame/cg_local.h	/^  float         bobfracsin;$/;"	m	struct:__anon249
body_die	src/game/g_combat.c	/^void body_die( gentity_t *self, gentity_t *unused, gentity_t *unused2, int damage, int meansOfDeath )$/;"	f
bokehShader	src/renderergl2/tr_local.h	/^	shaderProgram_t bokehShader;$/;"	m	struct:__anon63
boneIndex	src/qcommon/qfiles.h	/^	int			boneIndex;	\/\/ these are indexes into the boneReferences,$/;"	m	struct:__anon394
boneIndex	src/qcommon/qfiles.h	/^        int                     boneIndex;$/;"	m	struct:__anon403
boneWeight	src/qcommon/qfiles.h	/^	float		   boneWeight;		\/\/ not the global per-frame bone list$/;"	m	struct:__anon394
bones	src/qcommon/qfiles.h	/^	mdrBone_t	bones[1];		\/\/ [numBones]$/;"	m	struct:__anon399
bones	src/qcommon/qfiles.h	/^        mdrCompBone_t   bones[1];		\/\/ [numBones]$/;"	m	struct:__anon401
boostedTime	src/game/g_local.h	/^  int                 boostedTime;      \/\/ last time we touched a booster$/;"	m	struct:gclient_s
border	src/ui/ui_shared.h	/^  int border;                     \/\/$/;"	m	struct:__anon499
borderColor	src/ui/ui_shared.h	/^  vec4_t borderColor;             \/\/ border color$/;"	m	struct:__anon499
borderInward	src/qcommon/cm_patch.h	/^	int			borderInward[4+6+16];$/;"	m	struct:__anon487
borderNoAdjust	src/qcommon/cm_patch.h	/^	qboolean	borderNoAdjust[4+6+16];$/;"	m	struct:__anon487
borderPlanes	src/qcommon/cm_patch.h	/^	int			borderPlanes[4+6+16];$/;"	m	struct:__anon487
borderSize	src/ui/ui_shared.h	/^  float borderSize;               \/\/$/;"	m	struct:__anon499
bottom	src/qcommon/q_shared.h	/^  int bottom;       \/\/ bottom of glyph in buffer$/;"	m	struct:__anon478
bounce	src/game/bg_public.h	/^  float         bounce;$/;"	m	struct:__anon353
bounceBallFire	src/game/g_weapon.c	/^void bounceBallFire( gentity_t *ent )$/;"	f
bounceCull	src/cgame/cg_local.h	/^  qboolean        bounceCull;$/;"	m	struct:baseParticle_s
bounceFrac	src/cgame/cg_local.h	/^  float           bounceFrac;$/;"	m	struct:baseParticle_s
bounceFracRandFrac	src/cgame/cg_local.h	/^  float           bounceFracRandFrac;$/;"	m	struct:baseParticle_s
bounceMark	src/cgame/cg_local.h	/^  qhandle_t       bounceMark;$/;"	m	struct:baseParticle_s
bounceMarkCount	src/cgame/cg_local.h	/^  float           bounceMarkCount;$/;"	m	struct:baseParticle_s
bounceMarkCount	src/cgame/cg_local.h	/^  int               bounceMarkCount;$/;"	m	struct:particle_s
bounceMarkCountRandFrac	src/cgame/cg_local.h	/^  float           bounceMarkCountRandFrac;$/;"	m	struct:baseParticle_s
bounceMarkName	src/cgame/cg_local.h	/^  char            bounceMarkName[ MAX_QPATH ];$/;"	m	struct:baseParticle_s
bounceMarkRadius	src/cgame/cg_local.h	/^  float             bounceMarkRadius;$/;"	m	struct:particle_s
bounceMarkRadius	src/cgame/cg_local.h	/^  float           bounceMarkRadius;$/;"	m	struct:baseParticle_s
bounceMarkRadiusRandFrac	src/cgame/cg_local.h	/^  float           bounceMarkRadiusRandFrac;$/;"	m	struct:baseParticle_s
bounceSound	src/cgame/cg_local.h	/^  qhandle_t       bounceSound;$/;"	m	struct:baseParticle_s
bounceSoundCount	src/cgame/cg_local.h	/^  float           bounceSoundCount;$/;"	m	struct:baseParticle_s
bounceSoundCount	src/cgame/cg_local.h	/^  int               bounceSoundCount;$/;"	m	struct:particle_s
bounceSoundCountRandFrac	src/cgame/cg_local.h	/^  float           bounceSoundCountRandFrac;$/;"	m	struct:baseParticle_s
bounceSoundName	src/cgame/cg_local.h	/^  char            bounceSoundName[ MAX_QPATH ];$/;"	m	struct:baseParticle_s
bounds	src/qcommon/cm_local.h	/^	vec3_t			bounds[2];	\/\/ enclosing box of start and end surrounding by size$/;"	m	struct:__anon443
bounds	src/qcommon/cm_local.h	/^	vec3_t		bounds[2];$/;"	m	struct:__anon437
bounds	src/qcommon/cm_local.h	/^	vec3_t	bounds[2];$/;"	m	struct:leafList_s
bounds	src/qcommon/cm_patch.h	/^	vec3_t	bounds[2];$/;"	m	struct:patchCollide_s
bounds	src/qcommon/qfiles.h	/^	vec3_t		bounds[2];		\/\/ bounds of all surfaces of all LOD's for this frame$/;"	m	struct:__anon399
bounds	src/qcommon/qfiles.h	/^	vec3_t		bounds[2];$/;"	m	struct:md3Frame_s
bounds	src/qcommon/qfiles.h	/^        vec3_t          bounds[2];		\/\/ bounds of all surfaces of all LOD's for this frame$/;"	m	struct:__anon401
bounds	src/renderergl1/tr_local.h	/^	float		*bounds;$/;"	m	struct:__anon154
bounds	src/renderergl1/tr_local.h	/^	vec3_t			bounds[2];$/;"	m	struct:__anon153
bounds	src/renderergl1/tr_local.h	/^	vec3_t		bounds[2];		\/\/ for culling$/;"	m	struct:__anon156
bounds	src/renderergl1/tr_local.h	/^	vec3_t		bounds[2];$/;"	m	struct:__anon149
bounds	src/renderergl2/tr_local.h	/^	float		*bounds;$/;"	m	struct:__anon46
bounds	src/renderergl2/tr_local.h	/^	float           bounds[2][3];$/;"	m	struct:__anon50
bounds	src/renderergl2/tr_local.h	/^	vec3_t		bounds[2];		\/\/ for culling$/;"	m	struct:__anon48
bounds	src/renderergl2/tr_local.h	/^	vec3_t		bounds[2];$/;"	m	struct:__anon41
bounds	src/renderergl2/tr_local.h	/^	vec3_t          bounds[2];$/;"	m	struct:cullinfo_s
boundto	src/qcommon/net_ip.c	/^static struct sockaddr_in6 boundto;$/;"	v	typeref:struct:sockaddr_in6	file:
box_brush	src/qcommon/cm_load.c	/^cbrush_t	*box_brush;$/;"	v
box_model	src/qcommon/cm_load.c	/^cmodel_t	box_model;$/;"	v
box_planes	src/qcommon/cm_load.c	/^cplane_t	*box_planes;$/;"	v
boxmaxs	src/server/sv_world.c	/^	vec3_t		boxmins, boxmaxs;\/\/ enclose the test object along entire move$/;"	m	struct:__anon182	file:
boxmins	src/server/sv_world.c	/^	vec3_t		boxmins, boxmaxs;\/\/ enclose the test object along entire move$/;"	m	struct:__anon182	file:
bp	src/game/bg_lib.c	/^bp[ ]   = { 1.0, 1.5, },$/;"	v	file:
bp	src/tools/lcc/cpp/cpp.h	/^	Token	*bp;		\/* base (allocated value) *\/$/;"	m	struct:tokenrow
bp	src/tools/lcc/lburg/gram.c	/^static char buf[BUFSIZ], *bp = buf;$/;"	v	file:
branch	src/tools/lcc/src/stmt.c	/^void branch(int lab) {$/;"	f
branchAlways	src/qcommon/vm_powerpc_asm.h	116;"	d
branchExtLink	src/qcommon/vm_powerpc_asm.h	119;"	d
branchFalse	src/qcommon/vm_powerpc_asm.h	114;"	d
branchLikely	src/qcommon/vm_powerpc_asm.h	113;"	d
branchTrue	src/qcommon/vm_powerpc_asm.h	115;"	d
breakCount	src/qcommon/vm_local.h	/^	int			breakCount;$/;"	m	struct:vm_s
breakFunction	src/qcommon/vm_local.h	/^	int			breakFunction;		\/\/ increment breakCount on function entry to this$/;"	m	struct:vm_s
brushNum	src/qcommon/qfiles.h	/^	int			brushNum;$/;"	m	struct:__anon414
brushes	src/qcommon/cm_local.h	/^	cbrush_t	*brushes;$/;"	m	struct:__anon440
brushsides	src/qcommon/cm_local.h	/^	cbrushside_t *brushsides;$/;"	m	struct:__anon440
bsearch	src/game/bg_lib.c	/^void *bsearch( const void *key, const void *base, size_t nmemb, size_t size,$/;"	f
bsize	src/tools/lcc/src/input.c	/^static int bsize;$/;"	v	file:
bssLength	src/qcommon/qfiles.h	/^	int		bssLength;			\/\/ zero filled memory appended to datalength$/;"	m	struct:__anon387
btot	src/tools/lcc/src/types.c	/^Type btot(int op, int size) {$/;"	f
btree	src/server/sqlite3.c	/^    } btree;$/;"	m	union:WhereLoop::__anon212	typeref:struct:WhereLoop::__anon212::__anon213	file:
btreeClearHasContent	src/server/sqlite3.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeCreateTable	src/server/sqlite3.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCursor	src/server/sqlite3.c	/^static int btreeCursor($/;"	f	file:
btreeDropTable	src/server/sqlite3.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeEndTransaction	src/server/sqlite3.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeGetHasContent	src/server/sqlite3.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetPage	src/server/sqlite3.c	/^static int btreeGetPage($/;"	f	file:
btreeGetUnusedPage	src/server/sqlite3.c	/^static int btreeGetUnusedPage($/;"	f	file:
btreeHeapInsert	src/server/sqlite3.c	/^static void btreeHeapInsert(u32 *aHeap, u32 x){$/;"	f	file:
btreeHeapPull	src/server/sqlite3.c	/^static int btreeHeapPull(u32 *aHeap, u32 *pOut){$/;"	f	file:
btreeInitPage	src/server/sqlite3.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeIntegrity	src/server/sqlite3.c	55449;"	d	file:
btreeInvokeBusyHandler	src/server/sqlite3.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeLockCarefully	src/server/sqlite3.c	/^static void SQLITE_NOINLINE btreeLockCarefully(Btree *p){$/;"	f	file:
btreeMask	src/server/sqlite3.c	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe	file:
btreeMoveto	src/server/sqlite3.c	/^static int btreeMoveto($/;"	f	file:
btreeNext	src/server/sqlite3.c	/^static SQLITE_NOINLINE int btreeNext(BtCursor *pCur, int *pRes){$/;"	f	file:
btreePageFromDbPage	src/server/sqlite3.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageLookup	src/server/sqlite3.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePagecount	src/server/sqlite3.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreeParseCell	src/server/sqlite3.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCellAdjustSizeForOverflow	src/server/sqlite3.c	/^static SQLITE_NOINLINE void btreeParseCellAdjustSizeForOverflow($/;"	f	file:
btreeParseCellPtr	src/server/sqlite3.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeParseCellPtrIndex	src/server/sqlite3.c	/^static void btreeParseCellPtrIndex($/;"	f	file:
btreeParseCellPtrNoPayload	src/server/sqlite3.c	/^static void btreeParseCellPtrNoPayload($/;"	f	file:
btreePrevious	src/server/sqlite3.c	/^static SQLITE_NOINLINE int btreePrevious(BtCursor *pCur, int *pRes){$/;"	f	file:
btreeReleaseAllCursorPages	src/server/sqlite3.c	/^static void btreeReleaseAllCursorPages(BtCursor *pCur){$/;"	f	file:
btreeRestoreCursorPosition	src/server/sqlite3.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeSetHasContent	src/server/sqlite3.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btsFlags	src/server/sqlite3.c	/^  u16 btsFlags;         \/* Boolean parameters.  See BTS_* macros below *\/$/;"	m	struct:BtShared	file:
btterm	src/server/sqlite3.c	/^  Fts5Buffer btterm;              \/* Next term to insert into %_idx table *\/$/;"	m	struct:Fts5SegWriter	file:
bucketHashes	src/server/sv_main.c	/^static leakyBucket_t *bucketHashes[ MAX_HASHES ];$/;"	v	file:
buckets	src/server/sv_main.c	/^static leakyBucket_t buckets[ MAX_BUCKETS ];$/;"	v	file:
buckets	src/tools/asm/q3asm.c	/^  int buckets;$/;"	m	struct:hashtable_s	file:
buckets	src/tools/lcc/src/dag.c	/^} *buckets[16];$/;"	v	typeref:struct:dag	file:
buckets	src/tools/lcc/src/string.c	/^} *buckets[1024];$/;"	v	typeref:struct:string	file:
buckets	src/tools/lcc/src/sym.c	/^	} *buckets[256];$/;"	m	struct:table	typeref:struct:table::entry	file:
buf	src/client/cl_cin.c	/^	byte*				buf;$/;"	m	struct:__anon100	file:
buf	src/qcommon/md5.c	/^	uint32_t buf[4];$/;"	m	struct:MD5Context	file:
buf	src/qcommon/vm_x86.c	/^static	byte	*buf = NULL;$/;"	v	file:
buf	src/server/sqlite3.c	/^  Fts5Buffer buf;                 \/* Buffer containing leaf data *\/$/;"	m	struct:Fts5PageWriter	file:
buf	src/server/sqlite3.c	/^  Fts5Buffer buf;                 \/* Buffer containing page data *\/$/;"	m	struct:Fts5DlidxWriter	file:
buf	src/tools/lcc/lburg/gram.c	/^static char buf[BUFSIZ], *bp = buf;$/;"	v	file:
bufIndex	src/client/cl_avi.c	/^static int  bufIndex;$/;"	v	file:
buffer	src/client/cl_avi.c	/^static byte buffer[ MAX_AVI_BUFFER ];$/;"	v	file:
buffer	src/client/snd_local.h	/^	byte		*buffer;$/;"	m	struct:__anon93
buffer	src/client/snd_mem.c	/^static	sndBuffer	*buffer = NULL;$/;"	v	file:
buffer	src/client/snd_openal.c	/^	ALuint		buffer;					\/\/ OpenAL buffer$/;"	m	struct:alSfx_s	file:
buffer	src/qcommon/parse.c	/^  char *buffer;                   \/\/buffer containing the script$/;"	m	struct:script_s	file:
buffer	src/qcommon/qcommon.h	/^	char	buffer[MAX_EDIT_LINE];$/;"	m	struct:__anon425
buffer	src/renderergl1/tr_local.h	/^	int		buffer;$/;"	m	struct:__anon166
buffer	src/renderergl1/tr_local.h	/^	int		buffer;$/;"	m	struct:__anon169
buffer	src/renderergl2/tr_local.h	/^	int		buffer;$/;"	m	struct:__anon66
buffer	src/renderergl2/tr_local.h	/^	int		buffer;$/;"	m	struct:__anon69
buffer	src/tools/lcc/src/input.c	/^static unsigned char buffer[MAXLINE+1 + BUFSIZE+1];$/;"	v	file:
bugs	src/tools/lcc/doc/install.html	/^<h2><a NAME="bugs">Reporting Bugs<\/a><\/h2>$/;"	a
buildBuffer	src/qcommon/files.c	/^	fileInPack_t*	buildBuffer;				\/\/ buffer with the filenames etc.$/;"	m	struct:pack_s	file:
buildDist	src/game/bg_public.h	/^  float     buildDist;$/;"	m	struct:__anon349
buildFate_t	src/game/g_local.h	/^} buildFate_t;$/;"	t	typeref:enum:__anon314
buildFire	src/game/g_weapon.c	/^void buildFire( gentity_t *ent, dynMenu_t menu )$/;"	f
buildId	src/game/g_local.h	/^  int               buildId;$/;"	m	struct:__anon316
buildLog	src/game/g_local.h	/^  buildLog_t        buildLog[ MAX_BUILDLOG ];$/;"	m	struct:__anon316
buildLog_t	src/game/g_local.h	/^} buildLog_t;$/;"	t	typeref:struct:__anon315
buildPointZone	src/game/g_local.h	/^  int               buildPointZone;                 \/\/ index for zone$/;"	m	struct:gentity_s
buildPointZone_t	src/game/g_local.h	/^} buildPointZone_t;$/;"	t	typeref:struct:__anon312
buildPointZones	src/game/g_local.h	/^  buildPointZone_t  *buildPointZones;$/;"	m	struct:__anon316
buildPoints	src/game/bg_public.h	/^  int           buildPoints;$/;"	m	struct:__anon353
buildStat_t	src/cgame/cg_local.h	/^} buildStat_t;$/;"	t	typeref:struct:__anon252
buildTime	src/game/bg_public.h	/^  int           buildTime;$/;"	m	struct:__anon353
buildTime	src/game/g_local.h	/^  int               buildTime;          \/\/ when this buildable was built$/;"	m	struct:gentity_s
buildWeapon	src/game/bg_public.h	/^  weapon_t      buildWeapon;$/;"	m	struct:__anon353
buildWeaponTimerPie	src/cgame/cg_local.h	/^  qhandle_t   buildWeaponTimerPie[ 8 ];$/;"	m	struct:__anon251
buildable	src/ui/ui_local.h	/^    buildable_t buildable;$/;"	m	union:__anon515::__anon516
buildableAnim	src/cgame/cg_local.h	/^  buildableAnimNumber_t buildableAnim;    \/\/persistant anim number$/;"	m	struct:centity_s
buildableAnimNumber_t	src/game/bg_public.h	/^} buildableAnimNumber_t;$/;"	t	typeref:enum:__anon343
buildableAttributes_t	src/game/bg_public.h	/^} buildableAttributes_t;$/;"	t	typeref:struct:__anon353
buildableCache	src/cgame/cg_local.h	/^  buildableCache_t      buildableCache;   \/\/ so we don't recalculate things$/;"	m	struct:centity_s
buildableCache_s	src/cgame/cg_local.h	/^typedef struct buildableCache_s$/;"	s
buildableCache_t	src/cgame/cg_local.h	/^} buildableCache_t;$/;"	t	typeref:struct:buildableCache_s
buildableConfig_t	src/game/bg_public.h	/^} buildableConfig_t;$/;"	t	typeref:struct:__anon354
buildableIdleAnim	src/cgame/cg_local.h	/^  qboolean              buildableIdleAnim; \/\/to check if new idle anim$/;"	m	struct:centity_s
buildableInfo_t	src/cgame/cg_local.h	/^} buildableInfo_t;$/;"	t	typeref:struct:__anon245
buildablePS	src/cgame/cg_local.h	/^  particleSystem_t      *buildablePS;$/;"	m	struct:centity_s
buildableRangeMarkerMask	src/game/g_local.h	/^  int                 buildableRangeMarkerMask;$/;"	m	struct:__anon311
buildableRepairSound	src/cgame/cg_local.h	/^  sfxHandle_t buildableRepairSound;$/;"	m	struct:__anon251
buildableRepairedSound	src/cgame/cg_local.h	/^  sfxHandle_t buildableRepairedSound;$/;"	m	struct:__anon251
buildableStack	src/game/g_local.h	/^  int               buildableStack[ MAX_GENTITIES ];$/;"	m	struct:gentity_s
buildableStatus	src/cgame/cg_local.h	/^  buildableStatus_t     buildableStatus;$/;"	m	struct:centity_s
buildableStatus_s	src/cgame/cg_local.h	/^typedef struct buildableStatus_s$/;"	s
buildableStatus_t	src/cgame/cg_local.h	/^} buildableStatus_t;$/;"	t	typeref:struct:buildableStatus_s
buildableTeam	src/game/g_local.h	/^  team_t            buildableTeam;      \/\/ buildable item team$/;"	m	struct:gentity_s
buildable_t	src/game/bg_public.h	/^} buildable_t;$/;"	t	typeref:enum:__anon337
buildables	src/game/bg_misc.c	/^  buildable_t       buildables[ BA_NUM_BUILDABLES ];$/;"	m	struct:gameElements_s	file:
buildablesFraction	src/cgame/cg_local.h	/^  float         buildablesFraction;$/;"	m	struct:__anon249
builder	src/game/g_local.h	/^  gentity_t         *builder;           \/\/ occupant of this hovel$/;"	m	struct:gentity_s
builtBy	src/game/g_local.h	/^  namelog_t    *builtBy;$/;"	m	struct:__anon315
builtBy	src/game/g_local.h	/^  struct namelog_s  *builtBy;           \/\/ person who built this$/;"	m	struct:gentity_s	typeref:struct:gentity_s::namelog_s
builtin	src/qcommon/parse.c	/^  int builtin;                \/\/ > 0 if builtin define$/;"	m	struct:define_s	file:
builtin	src/tools/lcc/cpp/macro.c	/^builtin(Tokenrow *trp, int biname)$/;"	f
bulgeHeight	src/renderergl1/tr_local.h	/^	float		bulgeHeight;$/;"	m	struct:__anon139
bulgeHeight	src/renderergl2/tr_local.h	/^	float		bulgeHeight;$/;"	m	struct:__anon21
bulgeSpeed	src/renderergl1/tr_local.h	/^	float		bulgeSpeed;$/;"	m	struct:__anon139
bulgeSpeed	src/renderergl2/tr_local.h	/^	float		bulgeSpeed;$/;"	m	struct:__anon21
bulgeWidth	src/renderergl1/tr_local.h	/^	float		bulgeWidth;$/;"	m	struct:__anon139
bulgeWidth	src/renderergl2/tr_local.h	/^	float		bulgeWidth;$/;"	m	struct:__anon21
bulletFire	src/game/g_weapon.c	/^void bulletFire( gentity_t *ent, float spread, int damage, int mod )$/;"	f
bundle	src/renderergl1/tr_local.h	/^	textureBundle_t	bundle[NUM_TEXTURE_BUNDLES];$/;"	m	struct:__anon142
bundle	src/renderergl2/tr_local.h	/^	textureBundle_t	bundle[NUM_TEXTURE_BUNDLES];$/;"	m	struct:__anon26
burst	src/server/server.h	/^	signed char		burst;$/;"	m	struct:leakyBucket_s
busy	src/server/sqlite3.c	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
busyHandler	src/server/sqlite3.c	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3	file:
busyTimeout	src/server/sqlite3.c	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3	file:
busy_handler	src/server/sqlite3.c	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
busy_timeout	src/server/sqlite3.c	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	file:
buttonInside	src/ui/ui_shared.h	/^  qhandle_t buttonInside;$/;"	m	struct:__anon504
buttonMiddle	src/ui/ui_shared.h	/^  qhandle_t buttonMiddle;$/;"	m	struct:__anon504
buttons	src/game/g_local.h	/^  int                 buttons;$/;"	m	struct:gclient_s
buttons	src/qcommon/q_shared.h	/^	int 			buttons;$/;"	m	struct:usercmd_s
buttons	src/sdl/sdl_input.c	/^	qboolean buttons[16];  \/\/ !!! FIXME: these might be too many.$/;"	m	struct:__anon379	file:
byte	src/qcommon/q_shared.h	/^typedef unsigned char 		byte;$/;"	t
byte	src/tools/asm/cmdlib.h	/^typedef unsigned char byte;$/;"	t
byteReverse	src/qcommon/md5.c	/^	static void byteReverse(unsigned char *buf, unsigned longs)$/;"	f	file:
byteReverse	src/qcommon/md5.c	27;"	d	file:
bytecodeIR	src/tools/lcc/src/bytecode.c	/^Interface bytecodeIR = {$/;"	v
bytedirs	src/qcommon/q_math.c	/^vec3_t	bytedirs[NUMVERTEXNORMALS] =$/;"	v
bytes_per_line	src/renderercommon/tr_image_pcx.c	/^	unsigned short	bytes_per_line;$/;"	m	struct:__anon124	file:
bytes_per_pixel	src/sdl/sdl_icon.h	/^  unsigned int 	 bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/ $/;"	m	struct:__anon378
c	src/tools/lcc/src/c.h	/^		} c;$/;"	m	union:symbol::__anon296	typeref:struct:symbol::__anon296::__anon300
cArea_t	src/qcommon/cm_local.h	/^} cArea_t;$/;"	t	typeref:struct:__anon439
cBuffer	src/client/cl_avi.c	/^  byte          *cBuffer, *eBuffer;$/;"	m	struct:aviFileData_s	file:
cGrid_t	src/qcommon/cm_patch.h	/^} cGrid_t;$/;"	t	typeref:struct:__anon488
cId	src/server/sqlite3.c	/^  char cId;             \/* Symbolic ID of this loop for debugging use *\/$/;"	m	struct:WhereLoop	file:
cLeaf_t	src/qcommon/cm_local.h	/^} cLeaf_t;$/;"	t	typeref:struct:__anon435
cNode_t	src/qcommon/cm_local.h	/^} cNode_t;$/;"	t	typeref:struct:__anon434
cPatch_t	src/qcommon/cm_local.h	/^} cPatch_t;$/;"	t	typeref:struct:__anon438
cTriggers	src/game/g_local.h	/^  class_t           cTriggers[ PCL_NUM_CLASSES ];   \/\/ which classes are triggers$/;"	m	struct:gentity_s
cType	src/server/sqlite3.c	/^static const char cType[] = {$/;"	v	file:
cURLDisconnected	src/client/client.h	/^	qboolean	cURLDisconnected;$/;"	m	struct:__anon87
cURLEnabled	src/client/client.h	/^	qboolean	cURLEnabled;$/;"	m	struct:__anon87
cURLLib	src/client/cl_curl.c	/^static void *cURLLib = NULL;$/;"	v	file:
cURLUsed	src/client/client.h	/^	qboolean	cURLUsed;$/;"	m	struct:__anon87
c_active_windings	src/qcommon/cm_polylib.c	/^int	c_active_windings;$/;"	v
c_begins	src/renderergl1/tr_shade.c	/^static int		c_begins;$/;"	v	file:
c_box_cull_md3_clip	src/renderergl1/tr_local.h	/^	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;$/;"	m	struct:__anon159
c_box_cull_md3_clip	src/renderergl2/tr_local.h	/^	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;$/;"	m	struct:__anon56
c_box_cull_md3_in	src/renderergl1/tr_local.h	/^	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;$/;"	m	struct:__anon159
c_box_cull_md3_in	src/renderergl2/tr_local.h	/^	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;$/;"	m	struct:__anon56
c_box_cull_md3_out	src/renderergl1/tr_local.h	/^	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;$/;"	m	struct:__anon159
c_box_cull_md3_out	src/renderergl2/tr_local.h	/^	int		c_box_cull_md3_in, c_box_cull_md3_clip, c_box_cull_md3_out;$/;"	m	struct:__anon56
c_box_cull_patch_clip	src/renderergl1/tr_local.h	/^	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;$/;"	m	struct:__anon159
c_box_cull_patch_clip	src/renderergl2/tr_local.h	/^	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;$/;"	m	struct:__anon56
c_box_cull_patch_in	src/renderergl1/tr_local.h	/^	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;$/;"	m	struct:__anon159
c_box_cull_patch_in	src/renderergl2/tr_local.h	/^	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;$/;"	m	struct:__anon56
c_box_cull_patch_out	src/renderergl1/tr_local.h	/^	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;$/;"	m	struct:__anon159
c_box_cull_patch_out	src/renderergl2/tr_local.h	/^	int		c_box_cull_patch_in, c_box_cull_patch_clip, c_box_cull_patch_out;$/;"	m	struct:__anon56
c_brush_traces	src/qcommon/cm_load.c	/^int			c_traces, c_brush_traces, c_patch_traces;$/;"	v
c_dlightDraws	src/renderergl2/tr_local.h	/^	int     c_dlightDraws;$/;"	m	struct:__anon61
c_dlightIndexes	src/renderergl1/tr_local.h	/^	int		c_dlightIndexes;$/;"	m	struct:__anon161
c_dlightIndexes	src/renderergl2/tr_local.h	/^	int		c_dlightIndexes;$/;"	m	struct:__anon61
c_dlightSurfaces	src/renderergl1/tr_local.h	/^	int		c_dlightSurfaces;$/;"	m	struct:__anon159
c_dlightSurfaces	src/renderergl2/tr_local.h	/^	int		c_dlightSurfaces;$/;"	m	struct:__anon56
c_dlightSurfacesCulled	src/renderergl1/tr_local.h	/^	int		c_dlightSurfacesCulled;$/;"	m	struct:__anon159
c_dlightSurfacesCulled	src/renderergl2/tr_local.h	/^	int		c_dlightSurfacesCulled;$/;"	m	struct:__anon56
c_dlightVertexes	src/renderergl1/tr_local.h	/^	int		c_dlightVertexes;$/;"	m	struct:__anon161
c_dlightVertexes	src/renderergl2/tr_local.h	/^	int		c_dlightVertexes;$/;"	m	struct:__anon61
c_dynamicVaoDraws	src/renderergl2/tr_local.h	/^	int     c_dynamicVaoDraws;$/;"	m	struct:__anon61
c_flareAdds	src/renderergl1/tr_local.h	/^	int		c_flareAdds;$/;"	m	struct:__anon161
c_flareAdds	src/renderergl2/tr_local.h	/^	int		c_flareAdds;$/;"	m	struct:__anon61
c_flareRenders	src/renderergl1/tr_local.h	/^	int		c_flareRenders;$/;"	m	struct:__anon161
c_flareRenders	src/renderergl2/tr_local.h	/^	int		c_flareRenders;$/;"	m	struct:__anon61
c_flareTests	src/renderergl1/tr_local.h	/^	int		c_flareTests;$/;"	m	struct:__anon161
c_flareTests	src/renderergl2/tr_local.h	/^	int		c_flareTests;$/;"	m	struct:__anon61
c_fogDraws	src/renderergl2/tr_local.h	/^	int     c_fogDraws;$/;"	m	struct:__anon61
c_genericDraws	src/renderergl2/tr_local.h	/^	int     c_genericDraws;$/;"	m	struct:__anon61
c_glslShaderBinds	src/renderergl2/tr_local.h	/^	int     c_glslShaderBinds;$/;"	m	struct:__anon61
c_gridVerts	src/renderergl1/tr_bsp.c	/^int			c_gridVerts;$/;"	v
c_gridVerts	src/renderergl2/tr_bsp.c	/^int			c_gridVerts;$/;"	v
c_indexes	src/renderergl1/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon161
c_indexes	src/renderergl2/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon61
c_leafs	src/renderergl1/tr_local.h	/^	int		c_leafs;$/;"	m	struct:__anon159
c_leafs	src/renderergl2/tr_local.h	/^	int		c_leafs;$/;"	m	struct:__anon56
c_lightallDraws	src/renderergl2/tr_local.h	/^	int     c_lightallDraws;$/;"	m	struct:__anon61
c_multidraws	src/renderergl2/tr_local.h	/^	int     c_multidraws;$/;"	m	struct:__anon61
c_multidrawsMerged	src/renderergl2/tr_local.h	/^	int     c_multidrawsMerged;$/;"	m	struct:__anon61
c_overDraw	src/renderergl1/tr_local.h	/^	float	c_overDraw;$/;"	m	struct:__anon161
c_overDraw	src/renderergl2/tr_local.h	/^	float	c_overDraw;$/;"	m	struct:__anon61
c_patch_traces	src/qcommon/cm_load.c	/^int			c_traces, c_brush_traces, c_patch_traces;$/;"	v
c_peak_windings	src/qcommon/cm_polylib.c	/^int	c_peak_windings;$/;"	v
c_pmove	src/game/bg_pmove.c	/^int   c_pmove = 0;$/;"	v
c_pointcontents	src/qcommon/cm_load.c	/^int			c_pointcontents;$/;"	v
c_removed	src/qcommon/cm_polylib.c	/^int	c_removed;$/;"	v
c_shaders	src/renderergl1/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon161
c_shaders	src/renderergl2/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon61
c_sphere_cull_md3_clip	src/renderergl1/tr_local.h	/^	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;$/;"	m	struct:__anon159
c_sphere_cull_md3_clip	src/renderergl2/tr_local.h	/^	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;$/;"	m	struct:__anon56
c_sphere_cull_md3_in	src/renderergl1/tr_local.h	/^	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;$/;"	m	struct:__anon159
c_sphere_cull_md3_in	src/renderergl2/tr_local.h	/^	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;$/;"	m	struct:__anon56
c_sphere_cull_md3_out	src/renderergl1/tr_local.h	/^	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;$/;"	m	struct:__anon159
c_sphere_cull_md3_out	src/renderergl2/tr_local.h	/^	int		c_sphere_cull_md3_in, c_sphere_cull_md3_clip, c_sphere_cull_md3_out;$/;"	m	struct:__anon56
c_sphere_cull_patch_clip	src/renderergl1/tr_local.h	/^	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;$/;"	m	struct:__anon159
c_sphere_cull_patch_clip	src/renderergl2/tr_local.h	/^	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;$/;"	m	struct:__anon56
c_sphere_cull_patch_in	src/renderergl1/tr_local.h	/^	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;$/;"	m	struct:__anon159
c_sphere_cull_patch_in	src/renderergl2/tr_local.h	/^	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;$/;"	m	struct:__anon56
c_sphere_cull_patch_out	src/renderergl1/tr_local.h	/^	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;$/;"	m	struct:__anon159
c_sphere_cull_patch_out	src/renderergl2/tr_local.h	/^	int		c_sphere_cull_patch_in, c_sphere_cull_patch_clip, c_sphere_cull_patch_out;$/;"	m	struct:__anon56
c_staticVaoDraws	src/renderergl2/tr_local.h	/^	int     c_staticVaoDraws;$/;"	m	struct:__anon61
c_subdivisions	src/renderergl1/tr_bsp.c	/^int			c_subdivisions;$/;"	v
c_subdivisions	src/renderergl2/tr_bsp.c	/^int			c_subdivisions;$/;"	v
c_surfBatches	src/renderergl2/tr_local.h	/^	int     c_surfBatches;$/;"	m	struct:__anon61
c_surfaces	src/renderergl1/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon161
c_surfaces	src/renderergl2/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon61
c_totalIndexes	src/renderergl1/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon161
c_totalIndexes	src/renderergl2/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon61
c_totalPatchBlocks	src/qcommon/cm_patch.c	/^int	c_totalPatchBlocks;$/;"	v
c_totalPatchEdges	src/qcommon/cm_patch.c	/^int	c_totalPatchEdges;$/;"	v
c_totalPatchSurfaces	src/qcommon/cm_patch.c	/^int	c_totalPatchSurfaces;$/;"	v
c_traces	src/qcommon/cm_load.c	/^int			c_traces, c_brush_traces, c_patch_traces;$/;"	v
c_vaoBinds	src/renderergl2/tr_local.h	/^	int		c_vaoBinds;$/;"	m	struct:__anon61
c_vaoIndexes	src/renderergl2/tr_local.h	/^	int		c_vaoIndexes;$/;"	m	struct:__anon61
c_vaoVertexes	src/renderergl2/tr_local.h	/^	int		c_vaoVertexes;$/;"	m	struct:__anon61
c_vertexes	src/renderergl1/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon161
c_vertexes	src/renderergl1/tr_shade.c	/^static int		c_vertexes;		\/\/ for seeing how long our average strips are$/;"	v	file:
c_vertexes	src/renderergl2/tr_local.h	/^	int		c_surfaces, c_shaders, c_vertexes, c_indexes, c_totalIndexes;$/;"	m	struct:__anon61
c_winding_allocs	src/qcommon/cm_polylib.c	/^int	c_winding_allocs;$/;"	v
c_winding_points	src/qcommon/cm_polylib.c	/^int	c_winding_points;$/;"	v
cacheCreationFailed	src/ui/ui_shared.c	/^static qboolean     cacheCreationFailed = qfalse;$/;"	v	file:
cacheCtr	src/server/sqlite3.c	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe	file:
cacheEntryClear	src/server/sqlite3.c	/^static void cacheEntryClear(Parse *pParse, struct yColCache *p){$/;"	f	file:
cacheReadIndex	src/ui/ui_shared.c	/^static int          cacheReadIndex    = 0;$/;"	v	file:
cacheReadLineNum	src/ui/ui_shared.c	/^static int          cacheReadLineNum  = 0;$/;"	v	file:
cacheStatus	src/server/sqlite3.c	/^  u32 cacheStatus;      \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor	file:
cacheWriteIndex	src/ui/ui_shared.c	/^static int          cacheWriteIndex   = 0;$/;"	v	file:
cache_size	src/server/sqlite3.c	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema	file:
cachedAngles	src/cgame/cg_local.h	/^  vec3_t   cachedAngles;   \/\/  cached versions, then the cache is invalid$/;"	m	struct:buildableCache_s
cachedAssets_t	src/ui/ui_shared.h	/^cachedAssets_t;$/;"	t	typeref:struct:__anon504
cachedCellSize	src/server/sqlite3.c	/^static u16 cachedCellSize(CellArray *p, int N){$/;"	f	file:
cachedNormal	src/cgame/cg_local.h	/^  vec3_t   cachedNormal;$/;"	m	struct:buildableCache_s
cachedOrigin	src/cgame/cg_local.h	/^  vec3_t   cachedOrigin;   \/\/ If any of the values differ from their$/;"	m	struct:buildableCache_s
cachedType	src/cgame/cg_local.h	/^  buildable_t cachedType;$/;"	m	struct:buildableCache_s
cached_const	src/qcommon/vm_sparc.c	/^	struct src_insn		*cached_const;$/;"	m	struct:func_info	typeref:struct:func_info::src_insn	file:
calcLevelsFbo	src/renderergl2/tr_local.h	/^	FBO_t					*calcLevelsFbo;$/;"	m	struct:__anon63
calcLevelsImage	src/renderergl2/tr_local.h	/^	image_t					*calcLevelsImage;$/;"	m	struct:__anon63
calclevels4xShader	src/renderergl2/tr_local.h	/^	shaderProgram_t calclevels4xShader[2];$/;"	m	struct:__anon63
call	src/tools/lcc/src/enode.c	/^Tree call(Tree f, Type fty, Coordinate src) {$/;"	f
callCollNeeded	src/server/sqlite3.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callFinaliser	src/server/sqlite3.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
callLevel	src/qcommon/vm_local.h	/^	int			callLevel;		\/\/ counts recursive VM_Call$/;"	m	struct:vm_s
callStatGet	src/server/sqlite3.c	/^static void callStatGet(Vdbe *v, int regStat4, int iParam, int regOut){$/;"	f	file:
callee	src/tools/lcc/src/c.h	/^			Symbol *callee;$/;"	m	struct:symbol::__anon296::__anon301
caller	src/tools/lcc/src/profio.c	/^		struct caller {		\/* caller data: *\/$/;"	s	struct:file::func	file:
callers	src/tools/lcc/src/prof.c	/^	struct caller *callers;$/;"	m	struct:func	typeref:struct:func::caller	file:
callers	src/tools/lcc/src/profio.c	/^		} *callers;$/;"	m	struct:file::func	typeref:struct:file::func::caller	file:
calls	src/tools/lcc/src/c.h	/^	List calls;$/;"	m	struct:__anon284
callsite	src/tools/lcc/src/prof.c	/^struct callsite {$/;"	s	file:
callsys	src/tools/lcc/etc/lcc.c	/^static int callsys(char **av) {$/;"	f	file:
calltree	src/tools/lcc/src/enode.c	/^Tree calltree(Tree f, Type ty, Tree args, Symbol t3) {$/;"	f
canZoom	src/game/bg_public.h	/^  qboolean  canZoom;$/;"	m	struct:__anon355
cancelBuildFire	src/game/g_weapon.c	/^void cancelBuildFire( gentity_t *ent )$/;"	f
cancel_auto_extension	src/server/sqlite3.c	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines	file:
cannotBeFunction	src/server/sqlite3.c	/^static int cannotBeFunction(Parse *pParse, struct SrcList_item *pFrom){$/;"	f	file:
capShadowmapCommand_t	src/renderergl2/tr_local.h	/^} capShadowmapCommand_t;$/;"	t	typeref:struct:__anon76
captureBuffer	src/renderergl1/tr_local.h	/^	byte					*captureBuffer;$/;"	m	struct:__anon173
captureBuffer	src/renderergl2/tr_local.h	/^	byte					*captureBuffer;$/;"	m	struct:__anon73
captureData	src/ui/ui_shared.c	/^static void *captureData = NULL;$/;"	v	file:
captureFunc	src/ui/ui_shared.c	/^static CaptureFunc *captureFunc = voidFunction;$/;"	v	file:
captureFuncExpiry	src/ui/ui_shared.c	/^static int captureFuncExpiry = 0;$/;"	v	file:
capture_ext	src/client/snd_openal.c	/^static qboolean capture_ext = qfalse;$/;"	v	file:
capturedItem	src/cgame/cg_local.h	/^  void          *capturedItem;$/;"	m	struct:__anon253
caselabel	src/tools/lcc/src/stmt.c	/^static void caselabel(Swtch swp, long val, int lab) {$/;"	f	file:
cast	src/tools/lcc/src/expr.c	/^Tree cast(Tree p, Type type) {$/;"	f
cb	src/server/sqlite3.c	/^  RtreeGeomCallback cb;       \/* Info about the callback functions *\/$/;"	m	struct:RtreeMatchArg	file:
cblock_t	src/tools/asm/cmdlib.h	/^} cblock_t;$/;"	t	typeref:struct:__anon262
cbrush_t	src/qcommon/cm_local.h	/^} cbrush_t;$/;"	t	typeref:struct:__anon437
cbrushedge_s	src/qcommon/cm_local.h	/^typedef struct cbrushedge_s$/;"	s
cbrushedge_t	src/qcommon/cm_local.h	/^} cbrushedge_t;$/;"	t	typeref:struct:cbrushedge_s
cbrushside_t	src/qcommon/cm_local.h	/^} cbrushside_t;$/;"	t	typeref:struct:__anon436
cbuf	src/tools/lcc/src/lex.c	/^static char cbuf[BUFSIZE+1];$/;"	v	file:
cbufExec_t	src/qcommon/q_shared.h	/^} cbufExec_t;$/;"	t	typeref:enum:__anon458
cdateFunc	src/server/sqlite3.c	/^static void cdateFunc($/;"	f	file:
cddialog	src/client/client.h	/^	qboolean	cddialog;			\/\/ bring up the cd needed dialog next frame$/;"	m	struct:__anon90
cellArea	src/server/sqlite3.c	/^static RtreeDValue cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellContains	src/server/sqlite3.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellGrowth	src/server/sqlite3.c	/^static RtreeDValue cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellMargin	src/server/sqlite3.c	/^static RtreeDValue cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellOffset	src/server/sqlite3.c	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage	file:
cellOverlap	src/server/sqlite3.c	/^static RtreeDValue cellOverlap($/;"	f	file:
cellSize	src/server/sqlite3.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSizePtr	src/server/sqlite3.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtrNoPayload	src/server/sqlite3.c	/^static u16 cellSizePtrNoPayload(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellUnion	src/server/sqlite3.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
censors	src/game/g_cmds.c	/^static char censors[ 20000 ];$/;"	v	file:
centNum	src/cgame/cg_local.h	/^  int               centNum;$/;"	m	struct:attachment_s
centValid	src/cgame/cg_local.h	/^  qboolean          centValid;$/;"	m	struct:attachment_s
centerPrint	src/cgame/cg_local.h	/^  char          centerPrint[ MAX_STRING_CHARS ];$/;"	m	struct:__anon249
centerPrintCharWidth	src/cgame/cg_local.h	/^  int           centerPrintCharWidth;$/;"	m	struct:__anon249
centerPrintLines	src/cgame/cg_local.h	/^  int           centerPrintLines;$/;"	m	struct:__anon249
centerPrintTime	src/cgame/cg_local.h	/^  int           centerPrintTime;$/;"	m	struct:__anon249
centerPrintY	src/cgame/cg_local.h	/^  int           centerPrintY;$/;"	m	struct:__anon249
centity_s	src/cgame/cg_local.h	/^typedef struct centity_s$/;"	s
centity_t	src/cgame/cg_local.h	/^} centity_t;$/;"	t	typeref:struct:centity_s
cfields	src/tools/lcc/src/c.h	/^			unsigned cfields:1;$/;"	m	struct:symbol::__anon296::__anon298
cflag	src/tools/lcc/etc/lcc.c	/^static int cflag;		\/* -c specified *\/$/;"	v	file:
cfoldcnst	src/tools/lcc/src/simp.c	33;"	d	file:
cfunc	src/tools/lcc/src/decl.c	/^Symbol cfunc;		\/* current function *\/$/;"	v
cg	src/cgame/cg_main.c	/^cg_t        cg;$/;"	v
cgBinaryShaderSetting_t	src/cgame/cg_local.h	/^} cgBinaryShaderSetting_t;$/;"	t	typeref:struct:__anon248
cgDC	src/cgame/cg_main.c	/^displayContextDef_t cgDC;$/;"	v
cgInterface	src/client/cl_cgame.c	/^int cgInterface;$/;"	v
cgMediaBinaryShader_t	src/cgame/cg_local.h	/^} cgMediaBinaryShader_t;$/;"	t	typeref:struct:__anon250
cgMedia_t	src/cgame/cg_local.h	/^} cgMedia_t;$/;"	t	typeref:struct:__anon251
cgProbingJB	src/client/cl_cgame.c	/^static jmp_buf cgProbingJB;$/;"	v	file:
cg_activeMarkPolys	src/cgame/cg_marks.c	/^markPoly_t  cg_activeMarkPolys;     \/\/ double linked list$/;"	v
cg_addMarks	src/cgame/cg_main.c	/^vmCvar_t  cg_addMarks;$/;"	v
cg_animSpeed	src/cgame/cg_main.c	/^vmCvar_t  cg_animSpeed;$/;"	v
cg_binaryShaderScreenScale	src/cgame/cg_main.c	/^vmCvar_t  cg_binaryShaderScreenScale;$/;"	v
cg_blood	src/cgame/cg_main.c	/^vmCvar_t  cg_blood;$/;"	v
cg_bounceParticles	src/cgame/cg_main.c	/^vmCvar_t  cg_bounceParticles;$/;"	v
cg_buildableSoundNames	src/cgame/cg_buildable.c	/^char *cg_buildableSoundNames[ MAX_BUILDABLE_ANIMATIONS ] =$/;"	v
cg_buildables	src/cgame/cg_main.c	/^buildableInfo_t cg_buildables[ BA_NUM_BUILDABLES ];$/;"	v
cg_cameraMode	src/cgame/cg_main.c	/^vmCvar_t  cg_cameraMode;$/;"	v
cg_cameraShakeMagnitude	src/cgame/cg_main.c	/^vmCvar_t  cg_cameraShakeMagnitude;$/;"	v
cg_centertime	src/cgame/cg_main.c	/^vmCvar_t  cg_centertime;$/;"	v
cg_chatTeamPrefix	src/cgame/cg_main.c	/^vmCvar_t  cg_chatTeamPrefix;$/;"	v
cg_consoleLatency	src/cgame/cg_main.c	/^vmCvar_t  cg_consoleLatency;$/;"	v
cg_crosshairSize	src/cgame/cg_main.c	/^vmCvar_t  cg_crosshairSize;$/;"	v
cg_customSoundNames	src/cgame/cg_players.c	/^char *cg_customSoundNames[ MAX_CUSTOM_SOUNDS ] =$/;"	v
cg_debugAnim	src/cgame/cg_main.c	/^vmCvar_t  cg_debugAnim;$/;"	v
cg_debugEvents	src/cgame/cg_main.c	/^vmCvar_t  cg_debugEvents;$/;"	v
cg_debugMove	src/cgame/cg_main.c	/^vmCvar_t  cg_debugMove;$/;"	v
cg_debugPVS	src/cgame/cg_main.c	/^vmCvar_t  cg_debugPVS;$/;"	v
cg_debugParticles	src/cgame/cg_main.c	/^vmCvar_t  cg_debugParticles;$/;"	v
cg_debugPosition	src/cgame/cg_main.c	/^vmCvar_t  cg_debugPosition;$/;"	v
cg_debugRandom	src/cgame/cg_main.c	/^vmCvar_t  cg_debugRandom;$/;"	v
cg_debugTrails	src/cgame/cg_main.c	/^vmCvar_t  cg_debugTrails;$/;"	v
cg_debugVoices	src/cgame/cg_main.c	/^vmCvar_t  cg_debugVoices;$/;"	v
cg_depthSortParticles	src/cgame/cg_main.c	/^vmCvar_t  cg_depthSortParticles;$/;"	v
cg_disableBlueprintErrors	src/cgame/cg_main.c	/^vmCvar_t  cg_disableBlueprintErrors;$/;"	v
cg_disableBuildDialogs	src/cgame/cg_main.c	/^vmCvar_t  cg_disableBuildDialogs;$/;"	v
cg_disableCommandDialogs	src/cgame/cg_main.c	/^vmCvar_t  cg_disableCommandDialogs;$/;"	v
cg_disableScannerPlane	src/cgame/cg_main.c	/^vmCvar_t  cg_disableScannerPlane;$/;"	v
cg_disableUpgradeDialogs	src/cgame/cg_main.c	/^vmCvar_t  cg_disableUpgradeDialogs;$/;"	v
cg_disableWarningDialogs	src/cgame/cg_main.c	/^vmCvar_t  cg_disableWarningDialogs;$/;"	v
cg_draw2D	src/cgame/cg_main.c	/^vmCvar_t  cg_draw2D;$/;"	v
cg_drawBBOX	src/cgame/cg_main.c	/^vmCvar_t  cg_drawBBOX;$/;"	v
cg_drawChargeBar	src/cgame/cg_main.c	/^vmCvar_t  cg_drawChargeBar;$/;"	v
cg_drawClock	src/cgame/cg_main.c	/^vmCvar_t  cg_drawClock;$/;"	v
cg_drawCrosshair	src/cgame/cg_main.c	/^vmCvar_t  cg_drawCrosshair;$/;"	v
cg_drawCrosshairNames	src/cgame/cg_main.c	/^vmCvar_t  cg_drawCrosshairNames;$/;"	v
cg_drawDemoState	src/cgame/cg_main.c	/^vmCvar_t  cg_drawDemoState;$/;"	v
cg_drawFPS	src/cgame/cg_main.c	/^vmCvar_t  cg_drawFPS;$/;"	v
cg_drawGun	src/cgame/cg_main.c	/^vmCvar_t  cg_drawGun;$/;"	v
cg_drawSnapshot	src/cgame/cg_main.c	/^vmCvar_t  cg_drawSnapshot;$/;"	v
cg_drawSpeed	src/cgame/cg_main.c	/^vmCvar_t  cg_drawSpeed;$/;"	v
cg_drawSurfNormal	src/cgame/cg_main.c	/^vmCvar_t  cg_drawSurfNormal;$/;"	v
cg_drawTeamOverlay	src/cgame/cg_main.c	/^vmCvar_t  cg_drawTeamOverlay;$/;"	v
cg_drawTimer	src/cgame/cg_main.c	/^vmCvar_t  cg_drawTimer;$/;"	v
cg_emoticons	src/cgame/cg_main.c	/^vmCvar_t  cg_emoticons;$/;"	v
cg_entities	src/cgame/cg_main.c	/^centity_t   cg_entities[ MAX_GENTITIES ];$/;"	v
cg_errorDecay	src/cgame/cg_main.c	/^vmCvar_t  cg_errorDecay;$/;"	v
cg_footsteps	src/cgame/cg_main.c	/^vmCvar_t  cg_footsteps;$/;"	v
cg_freeMarkPolys	src/cgame/cg_marks.c	/^markPoly_t  *cg_freeMarkPolys;      \/\/ single linked list$/;"	v
cg_fuelInfoScale	src/cgame/cg_main.c	/^vmCvar_t  cg_fuelInfoScale;$/;"	v
cg_fuelInfoX	src/cgame/cg_main.c	/^vmCvar_t  cg_fuelInfoX;$/;"	v
cg_fuelInfoY	src/cgame/cg_main.c	/^vmCvar_t  cg_fuelInfoY;$/;"	v
cg_gun_frame	src/cgame/cg_main.c	/^vmCvar_t  cg_gun_frame;$/;"	v
cg_gun_x	src/cgame/cg_main.c	/^vmCvar_t  cg_gun_x;$/;"	v
cg_gun_y	src/cgame/cg_main.c	/^vmCvar_t  cg_gun_y;$/;"	v
cg_gun_z	src/cgame/cg_main.c	/^vmCvar_t  cg_gun_z;$/;"	v
cg_hudFiles	src/cgame/cg_main.c	/^vmCvar_t  cg_hudFiles;$/;"	v
cg_hudFilesEnable	src/cgame/cg_main.c	/^vmCvar_t  cg_hudFilesEnable;$/;"	v
cg_lagometer	src/cgame/cg_main.c	/^vmCvar_t  cg_lagometer;$/;"	v
cg_lightFlare	src/cgame/cg_main.c	/^vmCvar_t  cg_lightFlare;$/;"	v
cg_markPolys	src/cgame/cg_marks.c	/^markPoly_t  cg_markPolys[ MAX_MARK_POLYS ];$/;"	v
cg_maxSpeedTimeWindow	src/cgame/cg_main.c	/^vmCvar_t  cg_maxSpeedTimeWindow;$/;"	v
cg_noPlayerAnims	src/cgame/cg_main.c	/^vmCvar_t  cg_noPlayerAnims;$/;"	v
cg_noPrintDuplicate	src/cgame/cg_main.c	/^vmCvar_t  cg_noPrintDuplicate;$/;"	v
cg_noTaunt	src/cgame/cg_main.c	/^vmCvar_t  cg_noTaunt;$/;"	v
cg_noVoiceChats	src/cgame/cg_main.c	/^vmCvar_t  cg_noVoiceChats;$/;"	v
cg_noVoiceText	src/cgame/cg_main.c	/^vmCvar_t  cg_noVoiceText;$/;"	v
cg_nopredict	src/cgame/cg_main.c	/^vmCvar_t  cg_nopredict;$/;"	v
cg_numSolidEntities	src/cgame/cg_predict.c	/^static  int     cg_numSolidEntities;$/;"	v	file:
cg_numTriggerEntities	src/cgame/cg_predict.c	/^static  int     cg_numTriggerEntities;$/;"	v	file:
cg_optimizePrediction	src/cgame/cg_main.c	/^vmCvar_t  cg_optimizePrediction;$/;"	v
cg_painBlendDownRate	src/cgame/cg_main.c	/^vmCvar_t  cg_painBlendDownRate;$/;"	v
cg_painBlendMax	src/cgame/cg_main.c	/^vmCvar_t  cg_painBlendMax;$/;"	v
cg_painBlendScale	src/cgame/cg_main.c	/^vmCvar_t  cg_painBlendScale;$/;"	v
cg_painBlendUpRate	src/cgame/cg_main.c	/^vmCvar_t  cg_painBlendUpRate;$/;"	v
cg_painBlendZoom	src/cgame/cg_main.c	/^vmCvar_t  cg_painBlendZoom;$/;"	v
cg_paused	src/cgame/cg_main.c	/^vmCvar_t  cg_paused;$/;"	v
cg_pmove	src/cgame/cg_predict.c	/^static  pmove_t   cg_pmove;$/;"	v	file:
cg_projectileNudge	src/cgame/cg_main.c	/^vmCvar_t  cg_projectileNudge;$/;"	v
cg_rangeMarkerBuildableTypes	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerBuildableTypes;$/;"	v
cg_rangeMarkerDrawFrontline	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerDrawFrontline;$/;"	v
cg_rangeMarkerDrawIntersection	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerDrawIntersection;$/;"	v
cg_rangeMarkerDrawSurface	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerDrawSurface;$/;"	v
cg_rangeMarkerForBlueprint	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerForBlueprint;$/;"	v
cg_rangeMarkerLineOpacity	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerLineOpacity;$/;"	v
cg_rangeMarkerLineThickness	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerLineThickness;$/;"	v
cg_rangeMarkerSurfaceOpacity	src/cgame/cg_main.c	/^vmCvar_t  cg_rangeMarkerSurfaceOpacity;$/;"	v
cg_runpitch	src/cgame/cg_main.c	/^vmCvar_t  cg_runpitch;$/;"	v
cg_runroll	src/cgame/cg_main.c	/^vmCvar_t  cg_runroll;$/;"	v
cg_shaderColors	src/cgame/cg_main.c	/^const vec3_t cg_shaderColors[ SHC_NUM_SHADER_COLORS ] =$/;"	v
cg_shadows	src/cgame/cg_main.c	/^vmCvar_t  cg_shadows;$/;"	v
cg_showmiss	src/cgame/cg_main.c	/^vmCvar_t  cg_showmiss;$/;"	v
cg_smoothClients	src/cgame/cg_main.c	/^vmCvar_t  cg_smoothClients;$/;"	v
cg_solidEntities	src/cgame/cg_predict.c	/^static  centity_t *cg_solidEntities[MAX_ENTITIES_IN_SNAPSHOT];$/;"	v	file:
cg_spectatorWallhack	src/cgame/cg_main.c	/^vmCvar_t  cg_spectatorWallhack;$/;"	v
cg_sprintToggle	src/cgame/cg_main.c	/^vmCvar_t  cg_sprintToggle;$/;"	v
cg_staticDeathCam	src/cgame/cg_main.c	/^vmCvar_t  cg_staticDeathCam;$/;"	v
cg_stats	src/cgame/cg_main.c	/^vmCvar_t  cg_stats;$/;"	v
cg_stereoSeparation	src/cgame/cg_main.c	/^vmCvar_t  cg_stereoSeparation;$/;"	v
cg_stickySpec	src/cgame/cg_main.c	/^vmCvar_t  cg_stickySpec;$/;"	v
cg_swingSpeed	src/cgame/cg_main.c	/^vmCvar_t  cg_swingSpeed;$/;"	v
cg_synchronousClients	src/cgame/cg_main.c	/^vmCvar_t  cg_synchronousClients;$/;"	v
cg_t	src/cgame/cg_local.h	/^} cg_t;$/;"	t	typeref:struct:__anon249
cg_teamChatsOnly	src/cgame/cg_main.c	/^vmCvar_t  cg_teamChatsOnly;$/;"	v
cg_teamOverlayMaxPlayers	src/cgame/cg_main.c	/^vmCvar_t  cg_teamOverlayMaxPlayers;$/;"	v
cg_teamOverlaySortMode	src/cgame/cg_main.c	/^vmCvar_t  cg_teamOverlaySortMode;$/;"	v
cg_teamOverlayUserinfo	src/cgame/cg_main.c	/^vmCvar_t  cg_teamOverlayUserinfo;$/;"	v
cg_teslaTrailTime	src/cgame/cg_main.c	/^vmCvar_t  cg_teslaTrailTime;$/;"	v
cg_thirdPerson	src/cgame/cg_main.c	/^vmCvar_t  cg_thirdPerson;$/;"	v
cg_thirdPersonAngle	src/cgame/cg_main.c	/^vmCvar_t  cg_thirdPersonAngle;$/;"	v
cg_thirdPersonPitchFollow	src/cgame/cg_main.c	/^vmCvar_t  cg_thirdPersonPitchFollow;$/;"	v
cg_thirdPersonRange	src/cgame/cg_main.c	/^vmCvar_t  cg_thirdPersonRange;$/;"	v
cg_thirdPersonShoulderViewMode	src/cgame/cg_main.c	/^vmCvar_t  cg_thirdPersonShoulderViewMode;$/;"	v
cg_timescale	src/cgame/cg_main.c	/^vmCvar_t  cg_timescale;$/;"	v
cg_timescaleFadeEnd	src/cgame/cg_main.c	/^vmCvar_t  cg_timescaleFadeEnd;$/;"	v
cg_timescaleFadeSpeed	src/cgame/cg_main.c	/^vmCvar_t  cg_timescaleFadeSpeed;$/;"	v
cg_tracerChance	src/cgame/cg_main.c	/^vmCvar_t  cg_tracerChance;$/;"	v
cg_tracerLength	src/cgame/cg_main.c	/^vmCvar_t  cg_tracerLength;$/;"	v
cg_tracerWidth	src/cgame/cg_main.c	/^vmCvar_t  cg_tracerWidth;$/;"	v
cg_triggerEntities	src/cgame/cg_predict.c	/^static  centity_t *cg_triggerEntities[MAX_ENTITIES_IN_SNAPSHOT];$/;"	v	file:
cg_tutorial	src/cgame/cg_main.c	/^vmCvar_t  cg_tutorial;$/;"	v
cg_unlagged	src/cgame/cg_main.c	/^vmCvar_t  cg_unlagged;$/;"	v
cg_upgrades	src/cgame/cg_main.c	/^upgradeInfo_t   cg_upgrades[ 32 ];$/;"	v
cg_viewsize	src/cgame/cg_main.c	/^vmCvar_t  cg_viewsize;$/;"	v
cg_voice	src/cgame/cg_main.c	/^vmCvar_t  cg_voice;$/;"	v
cg_weapons	src/cgame/cg_main.c	/^weaponInfo_t    cg_weapons[ 32 ];$/;"	v
cg_wwSmoothTime	src/cgame/cg_main.c	/^vmCvar_t  cg_wwSmoothTime;$/;"	v
cgameExport_t	src/cgame/cg_public.h	/^} cgameExport_t;$/;"	t	typeref:enum:__anon231
cgameImport_t	src/cgame/cg_public.h	/^} cgameImport_t;$/;"	t	typeref:enum:__anon230
cgameSensitivity	src/client/client.h	/^	float		cgameSensitivity;$/;"	m	struct:__anon86
cgameStarted	src/client/client.h	/^	qboolean	cgameStarted;$/;"	m	struct:__anon90
cgameUserCmdValue	src/client/client.h	/^	int			cgameUserCmdValue;	\/\/ current weapon to add to usercmd_t$/;"	m	struct:__anon86
cgs	src/cgame/cg_main.c	/^cgs_t       cgs;$/;"	v
cgs_t	src/cgame/cg_local.h	/^} cgs_t;$/;"	t	typeref:struct:__anon253
cgvm	src/client/cl_main.c	/^vm_t				*cgvm;$/;"	v
ch	src/asm/snd_mixa.s	/^#define ch		4+16$/;"	d
ch	src/tools/lcc/cpp/lex.c	/^	uchar	ch[4];		\/* and see one of these characters *\/$/;"	m	struct:fsm	file:
chain	src/game/g_local.h	/^  gentity_t         *chain;$/;"	m	struct:gentity_s
chain	src/server/sqlite3.c	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
chain	src/server/sqlite3.c	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht	file:
chain	src/tools/lcc/lburg/lburg.h	/^	Rule chain;		\/* chain rules w\/nonterminal on rhs *\/$/;"	m	struct:nonterm
chain	src/tools/lcc/lburg/lburg.h	/^	Rule chain;		\/* next chain rule with same rhs *\/$/;"	m	struct:rule
challenge	src/client/client.h	/^	int			challenge;					\/\/ from the server to use for connecting$/;"	m	struct:__anon87
challenge	src/master/servers.h	/^	char challenge [CHALLENGE_MAX_LENGTH];$/;"	m	struct:server_s
challenge	src/qcommon/qcommon.h	/^	int			challenge;$/;"	m	struct:__anon422
challenge	src/server/server.h	/^	int				challenge;$/;"	m	struct:client_s
challenge	src/server/server.h	/^	int			challenge;$/;"	m	struct:__anon187
challenge_t	src/server/server.h	/^} challenge_t;$/;"	t	typeref:struct:__anon187
challenge_timeout	src/master/servers.h	/^	time_t challenge_timeout;$/;"	m	struct:server_s
challenges	src/server/server.h	/^	challenge_t	challenges[MAX_CHALLENGES];	\/\/ to prevent invalid IPs from connecting$/;"	m	struct:__anon188
changeCntOn	src/server/sqlite3.c	/^  bft changeCntOn:1;      \/* True to update the change-counter *\/$/;"	m	struct:Vdbe	file:
changeCountDone	src/server/sqlite3.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeTempStorage	src/server/sqlite3.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changemap	src/game/g_local.h	/^  char              *changemap;$/;"	m	struct:__anon316
changes	src/server/sqlite3.c	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
changes	src/server/sqlite3.c	/^static void changes($/;"	f	file:
channel	src/client/snd_openal.c	/^	int		channel;		\/\/ Associated channel (-1 if none)$/;"	m	struct:src_s	file:
channel_t	src/client/snd_local.h	/^} channel_t;$/;"	t	typeref:struct:__anon94
channeloffset	src/renderercommon/iqm.h	/^    float channeloffset[10];$/;"	m	struct:iqmpose
channels	src/client/cl_avi.c	/^  int channels;$/;"	m	struct:audioFormat_s	file:
channels	src/client/snd_codec.h	/^	int channels;$/;"	m	struct:snd_info_s
channels	src/client/snd_local.h	/^	int			channels;$/;"	m	struct:__anon93
channels	src/client/snd_local.h	/^	int			channels;$/;"	m	struct:__anon95
channelscale	src/renderercommon/iqm.h	/^    float channelscale[10];$/;"	m	struct:iqmpose
charFunc	src/server/sqlite3.c	/^static void charFunc($/;"	f	file:
charMap	src/server/sqlite3.c	132059;"	d	file:
charMap	src/server/sqlite3.c	132062;"	d	file:
charModelFraction	src/cgame/cg_local.h	/^  float         charModelFraction;                  \/\/ loading percentages$/;"	m	struct:__anon249
charSetShader	src/client/client.h	/^	qhandle_t	charSetShader;$/;"	m	struct:__anon90
char_to_int	src/game/bg_lib.c	2098;"	d	file:
charge	src/cgame/cg_local.h	/^  int                   charge;$/;"	m	struct:particleSystem_s
chargeMeterAlpha	src/cgame/cg_local.h	/^  float         chargeMeterAlpha;$/;"	m	struct:__anon249
chargeMeterValue	src/cgame/cg_local.h	/^  float         chargeMeterValue;$/;"	m	struct:__anon249
charging	src/game/g_local.h	/^  qboolean            charging;$/;"	m	struct:gclient_s
charmetric	src/tools/lcc/src/c.h	/^	Metrics charmetric;$/;"	m	struct:interface
charptype	src/tools/lcc/src/types.c	/^Type charptype;			\/* char* *\/$/;"	v
charset	src/server/sqlite3.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
charsetShader	src/cgame/cg_local.h	/^  qhandle_t   charsetShader;$/;"	m	struct:__anon251
chartype	src/tools/lcc/src/types.c	/^Type chartype;			\/* char *\/$/;"	v
chaseFollow	src/cgame/cg_local.h	/^  qboolean      chaseFollow;$/;"	m	struct:__anon249
chatTeam	src/ui/ui_local.h	/^  qboolean  chatTeam;$/;"	m	struct:__anon518
checkActiveVdbeCnt	src/server/sqlite3.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	src/server/sqlite3.c	70451;"	d	file:
checkAppendMsg	src/server/sqlite3.c	/^static void checkAppendMsg($/;"	f	file:
checkColumnOverlap	src/server/sqlite3.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkConstraintExprNode	src/server/sqlite3.c	/^static int checkConstraintExprNode(Walker *pWalker, Expr *pExpr){$/;"	f	file:
checkConstraintUnchanged	src/server/sqlite3.c	/^static int checkConstraintUnchanged(Expr *pExpr, int *aiChng, int chngRowid){$/;"	f	file:
checkForMultiColumnSelectError	src/server/sqlite3.c	/^static int checkForMultiColumnSelectError($/;"	f	file:
checkList	src/server/sqlite3.c	/^static void checkList($/;"	f	file:
checkListProperties	src/server/sqlite3.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	src/server/sqlite3.c	137273;"	d	file:
checkPage	src/server/sqlite3.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkProfileCallback	src/server/sqlite3.c	72592;"	d	file:
checkProfileCallback	src/server/sqlite3.c	72595;"	d	file:
checkPtrmap	src/server/sqlite3.c	/^static void checkPtrmap($/;"	f	file:
checkReadTransaction	src/server/sqlite3.c	/^static int checkReadTransaction(sqlite3 *db, Btree *p){$/;"	f	file:
checkRef	src/server/sqlite3.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage){$/;"	f	file:
checkSavepointCount	src/server/sqlite3.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSchema	src/server/sqlite3.c	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse	file:
checkTreePage	src/server/sqlite3.c	/^static int checkTreePage($/;"	f	file:
checkcount	src/qcommon/cm_local.h	/^	int			checkcount;					\/\/ incremented on each trace$/;"	m	struct:__anon440
checkcount	src/qcommon/cm_local.h	/^	int			checkcount;				\/\/ to avoid repeated testings$/;"	m	struct:__anon438
checkcount	src/qcommon/cm_local.h	/^	int			checkcount;		\/\/ to avoid repeated testings$/;"	m	struct:__anon437
checkhideset	src/tools/lcc/cpp/hideset.c	/^checkhideset(int hs, Nlist *np)$/;"	f
checklab	src/tools/lcc/src/decl.c	/^void checklab(Symbol p, void *cl) {$/;"	f
checkref	src/tools/lcc/src/decl.c	/^static void checkref(Symbol p, void *cl) {$/;"	f	file:
checksum	src/qcommon/files.c	/^	int				checksum;					\/\/ regular checksum$/;"	m	struct:pack_s	file:
checksumFeed	src/client/client.h	/^	int			checksumFeed;				\/\/ from the server for checksum calculations$/;"	m	struct:__anon87
checksumFeed	src/server/server.h	/^	int				checksumFeed;		\/\/ the feed key that we use to compute the pure checksum strings$/;"	m	struct:__anon184
checksumFeedServerId	src/server/server.h	/^	int       checksumFeedServerId;	$/;"	m	struct:__anon184
childParticleSystem	src/cgame/cg_local.h	/^  particleSystem_t  *childParticleSystem;$/;"	m	struct:particle_s
childPtrSize	src/server/sqlite3.c	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage	file:
childSystemHandle	src/cgame/cg_local.h	/^  qhandle_t       childSystemHandle;$/;"	m	struct:baseParticle_s
childSystemName	src/cgame/cg_local.h	/^  char            childSystemName[ MAX_QPATH ];$/;"	m	struct:baseParticle_s
childTrailSystemHandle	src/cgame/cg_local.h	/^  qhandle_t       childTrailSystemHandle;$/;"	m	struct:baseParticle_s
childTrailSystemName	src/cgame/cg_local.h	/^  char            childTrailSystemName[ MAX_QPATH ];$/;"	m	struct:baseParticle_s
children	src/game/bg_public.h	/^  int       children[ 3 ];$/;"	m	struct:__anon349
children	src/qcommon/cm_local.h	/^	int			children[2];		\/\/ negative numbers are leafs$/;"	m	struct:__anon434
children	src/qcommon/qfiles.h	/^	int			children[2];	\/\/ negative numbers are -(leafs+1), not nodes$/;"	m	struct:__anon410
children	src/renderergl1/tr_local.h	/^	struct mnode_s	*children[2];	$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
children	src/renderergl2/tr_local.h	/^	struct mnode_s	*children[2];	$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
children	src/server/sv_world.c	/^	struct worldSector_s	*children[2];$/;"	m	struct:worldSector_s	typeref:struct:worldSector_s::worldSector_s	file:
chkoverflow	src/tools/lcc/src/decl.c	5;"	d	file:
chunkStack	src/client/cl_avi.c	/^  int           chunkStack[ MAX_RIFF_CHUNKS ];$/;"	m	struct:aviFileData_s	file:
chunkStackTop	src/client/cl_avi.c	/^  int           chunkStackTop;$/;"	m	struct:aviFileData_s	file:
cin	src/client/cl_cin.c	/^static cinematics_t		cin;$/;"	v	file:
cinTable	src/client/cl_cin.c	/^static cin_cache		cinTable[MAX_VIDEO_HANDLES];$/;"	v	file:
cin_cache	src/client/cl_cin.c	/^} cin_cache;$/;"	t	typeref:struct:__anon100	file:
cinematic	src/ui/ui_local.h	/^  int cinematic;$/;"	m	struct:__anon507
cinematic	src/ui/ui_shared.h	/^  int cinematic;                  \/\/ cinematic handle$/;"	m	struct:__anon499
cinematicName	src/ui/ui_shared.h	/^  const char *cinematicName;      \/\/ cinematic name$/;"	m	struct:__anon499
cinematics_t	src/client/cl_cin.c	/^} cinematics_t;$/;"	t	typeref:struct:__anon99	file:
ck	src/tools/lcc/src/gen.c	251;"	d	file:
ckBase	src/server/sqlite3.c	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse	file:
ckptLock	src/server/sqlite3.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptSyncFlags	src/server/sqlite3.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
ckreach	src/tools/lcc/lburg/lburg.c	/^static void ckreach(Nonterm p) {$/;"	f	file:
cksum	src/server/sqlite3.c	/^  u64 cksum;$/;"	m	struct:Fts5IntegrityCtx	file:
cksumInit	src/server/sqlite3.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
cl	src/client/cl_main.c	/^clientActive_t		cl;$/;"	v
cl	src/tools/lcc/src/event.c	/^	void *cl;$/;"	m	struct:entry	file:
clSnapshot_t	src/client/client.h	/^} clSnapshot_t;$/;"	t	typeref:struct:__anon84
cl_activeAction	src/client/cl_main.c	/^cvar_t	*cl_activeAction;$/;"	v
cl_allowDownload	src/client/cl_main.c	/^cvar_t	*cl_allowDownload;$/;"	v
cl_anglespeedkey	src/client/cl_input.c	/^cvar_t	*cl_anglespeedkey;$/;"	v
cl_autoRecordDemo	src/client/cl_main.c	/^cvar_t	*cl_autoRecordDemo;$/;"	v
cl_aviFrameRate	src/client/cl_main.c	/^cvar_t	*cl_aviFrameRate;$/;"	v
cl_aviMotionJpeg	src/client/cl_main.c	/^cvar_t	*cl_aviMotionJpeg;$/;"	v
cl_cURLLib	src/client/cl_curl.c	/^cvar_t *cl_cURLLib;$/;"	v
cl_conXOffset	src/client/cl_main.c	/^cvar_t	*cl_conXOffset;$/;"	v
cl_connectedToCheatServer	src/client/cl_parse.c	/^int cl_connectedToCheatServer;$/;"	v
cl_connectedToPureServer	src/client/cl_parse.c	/^int cl_connectedToPureServer;$/;"	v
cl_consoleKeys	src/client/cl_main.c	/^cvar_t	*cl_consoleKeys;$/;"	v
cl_debugMove	src/client/cl_main.c	/^cvar_t	*cl_debugMove;$/;"	v
cl_debuggraph	src/client/cl_scrn.c	/^cvar_t		*cl_debuggraph;$/;"	v
cl_forceavidemo	src/client/cl_main.c	/^cvar_t	*cl_forceavidemo;$/;"	v
cl_freelook	src/client/cl_main.c	/^cvar_t	*cl_freelook;$/;"	v
cl_freezeDemo	src/client/cl_main.c	/^cvar_t	*cl_freezeDemo;$/;"	v
cl_graphheight	src/client/cl_scrn.c	/^cvar_t		*cl_graphheight;$/;"	v
cl_graphscale	src/client/cl_scrn.c	/^cvar_t		*cl_graphscale;$/;"	v
cl_graphshift	src/client/cl_scrn.c	/^cvar_t		*cl_graphshift;$/;"	v
cl_guidServerUniq	src/client/cl_main.c	/^cvar_t	*cl_guidServerUniq;$/;"	v
cl_inGameVideo	src/client/cl_main.c	/^cvar_t	*cl_inGameVideo;$/;"	v
cl_lanForcePackets	src/client/cl_main.c	/^cvar_t	*cl_lanForcePackets;$/;"	v
cl_maxpackets	src/client/cl_main.c	/^cvar_t	*cl_maxpackets;$/;"	v
cl_motd	src/client/cl_main.c	/^cvar_t	*cl_motd;$/;"	v
cl_motdString	src/client/cl_main.c	/^cvar_t	*cl_motdString;$/;"	v
cl_mouseAccel	src/client/cl_main.c	/^cvar_t	*cl_mouseAccel;$/;"	v
cl_mouseAccelOffset	src/client/cl_main.c	/^cvar_t	*cl_mouseAccelOffset;$/;"	v
cl_mouseAccelStyle	src/client/cl_main.c	/^cvar_t	*cl_mouseAccelStyle;$/;"	v
cl_mumbleScale	src/client/cl_main.c	/^cvar_t	*cl_mumbleScale;$/;"	v
cl_nodelta	src/client/cl_main.c	/^cvar_t	*cl_nodelta;$/;"	v
cl_noprint	src/client/cl_main.c	/^cvar_t	*cl_noprint;$/;"	v
cl_oldGame	src/client/cl_main.c	/^char				cl_oldGame[MAX_QPATH];$/;"	v
cl_oldGameSet	src/client/cl_main.c	/^qboolean			cl_oldGameSet;$/;"	v
cl_packetdelay	src/qcommon/common.c	/^cvar_t  *cl_packetdelay;$/;"	v
cl_packetdup	src/client/cl_main.c	/^cvar_t	*cl_packetdup;$/;"	v
cl_paused	src/qcommon/common.c	/^cvar_t	*cl_paused;$/;"	v
cl_pinglist	src/client/cl_main.c	/^ping_t	cl_pinglist[MAX_PINGREQUESTS];$/;"	v
cl_pitchspeed	src/client/cl_input.c	/^cvar_t	*cl_pitchspeed;$/;"	v
cl_rate	src/client/cl_main.c	/^cvar_t	*cl_rate;$/;"	v
cl_reconnectArgs	src/client/cl_main.c	/^char				cl_reconnectArgs[MAX_OSPATH];$/;"	v
cl_renderer	src/client/cl_main.c	/^cvar_t	*cl_renderer;$/;"	v
cl_run	src/client/cl_input.c	/^cvar_t	*cl_run;$/;"	v
cl_sensitivity	src/client/cl_main.c	/^cvar_t	*cl_sensitivity;$/;"	v
cl_serverStatusList	src/client/cl_main.c	/^serverStatus_t cl_serverStatusList[MAX_SERVERSTATUSREQUESTS];$/;"	v
cl_serverStatusResendTime	src/client/cl_main.c	/^cvar_t	*cl_serverStatusResendTime;$/;"	v
cl_showMouseRate	src/client/cl_main.c	/^cvar_t	*cl_showMouseRate;$/;"	v
cl_showSend	src/client/cl_main.c	/^cvar_t	*cl_showSend;$/;"	v
cl_showTimeDelta	src/client/cl_main.c	/^cvar_t	*cl_showTimeDelta;$/;"	v
cl_shownet	src/client/cl_main.c	/^cvar_t	*cl_shownet;$/;"	v
cl_shownet	src/null/null_client.c	/^cvar_t *cl_shownet;$/;"	v
cl_timeNudge	src/client/cl_main.c	/^cvar_t	*cl_timeNudge;$/;"	v
cl_timedemo	src/client/cl_main.c	/^cvar_t	*cl_timedemo;$/;"	v
cl_timedemoLog	src/client/cl_main.c	/^cvar_t	*cl_timedemoLog;$/;"	v
cl_timegraph	src/client/cl_scrn.c	/^cvar_t		*cl_timegraph;$/;"	v
cl_timeout	src/client/cl_main.c	/^cvar_t	*cl_timeout;$/;"	v
cl_useMumble	src/client/cl_main.c	/^cvar_t	*cl_useMumble;$/;"	v
cl_voip	src/client/cl_main.c	/^cvar_t	*cl_voip;$/;"	v
cl_voipCaptureMult	src/client/cl_main.c	/^cvar_t	*cl_voipCaptureMult;$/;"	v
cl_voipGainDuringCapture	src/client/cl_main.c	/^cvar_t	*cl_voipGainDuringCapture;$/;"	v
cl_voipSend	src/client/cl_main.c	/^cvar_t	*cl_voipSend;$/;"	v
cl_voipSendTarget	src/client/cl_main.c	/^cvar_t	*cl_voipSendTarget;$/;"	v
cl_voipShowMeter	src/client/cl_main.c	/^cvar_t	*cl_voipShowMeter;$/;"	v
cl_voipUseVAD	src/client/cl_main.c	/^cvar_t	*cl_voipUseVAD;$/;"	v
cl_voipVADThreshold	src/client/cl_main.c	/^cvar_t	*cl_voipVADThreshold;$/;"	v
cl_yawspeed	src/client/cl_input.c	/^cvar_t	*cl_yawspeed;$/;"	v
clampTime	src/renderergl1/tr_local.h	/^  float clampTime;                                  \/\/ time this shader is clamped to$/;"	m	struct:shader_s
clampTime	src/renderergl2/tr_local.h	/^  float clampTime;                                  \/\/ time this shader is clamped to$/;"	m	struct:shader_s
clampToBack	src/cgame/cg_local.h	/^  qboolean                clampToBack;$/;"	m	struct:baseTrailBeam_s
classAttributes_t	src/game/bg_public.h	/^} classAttributes_t;$/;"	t	typeref:struct:__anon349
classConfig_t	src/game/bg_public.h	/^} classConfig_t;$/;"	t	typeref:struct:__anon350
classSelection	src/game/g_local.h	/^  class_t             classSelection;     \/\/ player class (copied to ent->client->ps.stats[ STAT_CLASS ] once spawned)$/;"	m	struct:__anon311
class_t	src/game/bg_public.h	/^} class_t;$/;"	t	typeref:enum:__anon345
classes	src/game/bg_misc.c	/^  class_t           classes[ PCL_NUM_CLASSES ];$/;"	m	struct:gameElements_s	file:
classname	src/game/g_local.h	/^  char              *classname;     \/\/ set in QuakeEd$/;"	m	struct:gentity_s
clc	src/client/cl_main.c	/^clientConnection_t	clc;$/;"	v
clc_EOF	src/qcommon/qcommon.h	/^	clc_EOF,$/;"	e	enum:clc_ops_e
clc_bad	src/qcommon/qcommon.h	/^	clc_bad,$/;"	e	enum:clc_ops_e
clc_clientCommand	src/qcommon/qcommon.h	/^	clc_clientCommand,		\/\/ [string] message$/;"	e	enum:clc_ops_e
clc_move	src/qcommon/qcommon.h	/^	clc_move,				\/\/ [[usercmd_t]$/;"	e	enum:clc_ops_e
clc_moveNoDelta	src/qcommon/qcommon.h	/^	clc_moveNoDelta,		\/\/ [[usercmd_t]$/;"	e	enum:clc_ops_e
clc_nop	src/qcommon/qcommon.h	/^	clc_nop, 		$/;"	e	enum:clc_ops_e
clc_ops_e	src/qcommon/qcommon.h	/^enum clc_ops_e {$/;"	g
clc_voip	src/qcommon/qcommon.h	/^	clc_voip,   \/\/ not wrapped in USE_VOIP, so this value is reserved.$/;"	e	enum:clc_ops_e
cleanUp	src/master/master.c	/^static void cleanUp( int signal )$/;"	f	file:
clearAllSharedCacheTableLocks	src/server/sqlite3.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	src/server/sqlite3.c	55910;"	d	file:
clearCell	src/server/sqlite3.c	/^static int clearCell($/;"	f	file:
clearDatabasePage	src/server/sqlite3.c	/^static int clearDatabasePage($/;"	f	file:
clearDepthCommand_t	src/renderergl1/tr_local.h	/^} clearDepthCommand_t;$/;"	t	typeref:struct:__anon175
clearDepthCommand_t	src/renderergl2/tr_local.h	/^} clearDepthCommand_t;$/;"	t	typeref:struct:__anon75
clearScene	src/ui/ui_shared.h	/^  void ( *clearScene ) ( void );$/;"	m	struct:__anon506
clearSelect	src/server/sqlite3.c	/^static void clearSelect(sqlite3 *db, Select *p, int bFree){$/;"	f	file:
clearSolid	src/renderergl1/tr_shader.c	/^	int		clearSolid, surfaceFlags, contents;$/;"	m	struct:__anon126	file:
clearSolid	src/renderergl2/tr_shader.c	/^	int		clearSolid, surfaceFlags, contents;$/;"	m	struct:__anon7	file:
clearYMD_HMS_TZ	src/server/sqlite3.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clear_bindings	src/server/sqlite3.c	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
client	src/cgame/cg_local.h	/^  int       client;$/;"	m	struct:__anon242
client	src/game/g_local.h	/^  struct gclient_s  *client;        \/\/ NULL if not a client$/;"	m	struct:gentity_s	typeref:struct:gentity_s::gclient_s
clientActive_t	src/client/client.h	/^} clientActive_t;$/;"	t	typeref:struct:__anon86
clientChallenge	src/server/server.h	/^	int			clientChallenge;		\/\/ challenge number coming from the client$/;"	m	struct:__anon187
clientConnected_t	src/game/g_local.h	/^} clientConnected_t;$/;"	t	typeref:enum:__anon309
clientConnection_t	src/client/client.h	/^} clientConnection_t;$/;"	t	typeref:struct:__anon87
clientFrame	src/cgame/cg_local.h	/^  int           clientFrame;                        \/\/ incremented each frame$/;"	m	struct:__anon249
clientInfo_t	src/cgame/cg_local.h	/^} clientInfo_t;$/;"	t	typeref:struct:__anon243
clientList	src/server/server.h	/^	clientList_t	clientList;$/;"	m	struct:configString_s
clientList_t	src/qcommon/q_shared.h	/^} clientList_t;$/;"	t	typeref:struct:__anon463
clientName	src/game/g_playmap.h	/^  char *clientName;$/;"	m	struct:playMap_s
clientNum	src/cgame/cg_local.h	/^	int			clientNum;		\/\/ ranges from 0 to MAX_CLIENTS-1$/;"	m	struct:__anon256
clientNum	src/cgame/cg_local.h	/^	int		clientNum;		\/\/ 0 to (MAX_CLIENTS - 1), for players and corpses$/;"	m	struct:__anon257
clientNum	src/cgame/cg_local.h	/^  int           clientNum;$/;"	m	struct:__anon249
clientNum	src/client/client.h	/^	int			clientNum;		\/\/ ranges from 0 to MAX_CLIENTS-1$/;"	m	struct:alternatePlayerState_s
clientNum	src/client/client.h	/^	int			clientNum;$/;"	m	struct:__anon87
clientNum	src/client/client.h	/^	int		clientNum;		\/\/ 0 to (MAX_CLIENTS - 1), for players and corpses$/;"	m	struct:alternateEntityState_s
clientNum	src/qcommon/msg.c	/^	int			clientNum;		\/\/ ranges from 0 to MAX_CLIENTS-1$/;"	m	struct:alternatePlayerState_s	file:
clientNum	src/qcommon/q_shared.h	/^	int			clientNum;		\/\/ ranges from 0 to MAX_CLIENTS-1$/;"	m	struct:playerState_s
clientNum	src/qcommon/q_shared.h	/^	int		clientNum;		\/\/ 0 to (MAX_CLIENTS - 1), for players and corpses$/;"	m	struct:entityState_s
clientNum	src/ui/ui_public.h	/^  int       clientNum;$/;"	m	struct:__anon492
clientNums	src/ui/ui_local.h	/^  int clientNums[MAX_CLIENTS];$/;"	m	struct:__anon518
clientPersistant_t	src/game/g_local.h	/^} clientPersistant_t;$/;"	t	typeref:struct:__anon311
clientSession_t	src/game/g_local.h	/^} clientSession_t;$/;"	t	typeref:struct:__anon310
clientSnapshot_t	src/server/server.h	/^} clientSnapshot_t;$/;"	t	typeref:struct:__anon185
clientSpawnTime	src/game/g_local.h	/^  int               clientSpawnTime;    \/\/ the time until this spawn can spawn a client$/;"	m	struct:gentity_s
clientState_t	src/server/server.h	/^} clientState_t;$/;"	t	typeref:enum:__anon186
clientStatic_t	src/client/client.h	/^} clientStatic_t;$/;"	t	typeref:struct:__anon90
client_s	src/server/server.h	/^typedef struct client_s {$/;"	s
client_t	src/server/server.h	/^} client_t;$/;"	t	typeref:struct:client_s
clientinfo	src/cgame/cg_local.h	/^  clientInfo_t  clientinfo[ MAX_CLIENTS ];$/;"	m	struct:__anon253
clients	src/client/client.h	/^	int		  	clients;$/;"	m	struct:__anon89
clients	src/game/g_local.h	/^  int clients[ MAX_CLIENTS ];$/;"	m	struct:spawnQueue_s
clients	src/game/g_local.h	/^  struct gclient_s  *clients;   \/\/ [maxclients]$/;"	m	struct:__anon316	typeref:struct:__anon316::gclient_s
clients	src/server/server.h	/^	client_t	*clients;					\/\/ [sv_maxclients->integer];$/;"	m	struct:__anon188
clipBrush	src/game/g_local.h	/^  gentity_t         *clipBrush;     \/\/ clipping brush for model doors$/;"	m	struct:gentity_s
clipHandle_t	src/qcommon/q_shared.h	/^typedef int		clipHandle_t;$/;"	t
clipMap_t	src/qcommon/cm_local.h	/^} clipMap_t;$/;"	t	typeref:struct:__anon440
clipRegion	src/renderergl1/tr_local.h	/^	vec4_t					clipRegion;			\/\/ 2D clipping region$/;"	m	struct:__anon163
clipRegion	src/renderergl2/tr_local.h	/^	vec4_t					clipRegion;			\/\/ 2D clipping region$/;"	m	struct:__anon63
clipmask	src/game/g_local.h	/^  int               clipmask;       \/\/ brushes with this content value will be collided against$/;"	m	struct:gentity_s
cliprcontents	src/game/g_local.h	/^  int                 cliprcontents;  \/\/ the backup layer of ent->r.contents for when noclipping$/;"	m	struct:gclient_s
clips	src/qcommon/q_shared.h	/^	int			clips;			\/\/ clips held$/;"	m	struct:playerState_s
clist	src/tools/lcc/etc/lcc.c	/^static List clist;		\/* compiler flags *\/$/;"	v	file:
clobber	src/tools/lcc/src/config.h	/^	void (*clobber)(Node);$/;"	m	struct:__anon273
close	src/client/snd_codec.h	/^	CODEC_CLOSE close;$/;"	m	struct:snd_codec_s
close	src/server/sqlite3.c	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
closeAllCursors	src/server/sqlite3.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closeCursorsInFrame	src/server/sqlite3.c	/^static void closeCursorsInFrame(Vdbe *p){$/;"	f	file:
closePendingFds	src/server/sqlite3.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closeUnixFile	src/server/sqlite3.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
close_v2	src/server/sqlite3.c	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
closesocket	src/qcommon/net_ip.c	88;"	d	file:
cloudHeight	src/renderergl1/tr_local.h	/^	float		cloudHeight;$/;"	m	struct:__anon145
cloudHeight	src/renderergl2/tr_local.h	/^	float		cloudHeight;$/;"	m	struct:__anon29
cls	src/client/cl_main.c	/^clientStatic_t		cls;$/;"	v
cluster	src/qcommon/cm_local.h	/^	int			cluster;$/;"	m	struct:__anon435
cluster	src/qcommon/qfiles.h	/^	int			cluster;			\/\/ -1 = opaque cluster (do I still store these?)$/;"	m	struct:__anon411
cluster	src/renderergl1/tr_local.h	/^	int			cluster;$/;"	m	struct:mnode_s
cluster	src/renderergl2/tr_local.h	/^	int			cluster;$/;"	m	struct:mnode_s
clusterBytes	src/qcommon/cm_local.h	/^	int			clusterBytes;$/;"	m	struct:__anon440
clusterBytes	src/renderergl1/tr_local.h	/^	int			clusterBytes;$/;"	m	struct:__anon157
clusterBytes	src/renderergl2/tr_local.h	/^	int			clusterBytes;$/;"	m	struct:__anon49
clusternums	src/server/server.h	/^	int			clusternums[MAX_ENT_CLUSTERS];$/;"	m	struct:svEntity_s
cm	src/qcommon/cm_load.c	/^clipMap_t	cm;$/;"	v
cm_noAreas	src/qcommon/cm_load.c	/^cvar_t		*cm_noAreas;$/;"	v
cm_noCurves	src/qcommon/cm_load.c	/^cvar_t		*cm_noCurves;$/;"	v
cm_playerCurveClip	src/qcommon/cm_load.c	/^cvar_t		*cm_playerCurveClip;$/;"	v
cmd	src/cgame/cg_local.h	/^  char *cmd;$/;"	m	struct:__anon254
cmd	src/game/bg_public.h	/^  char              cmd[ MAX_VOICE_CMD_LEN ];$/;"	m	struct:voiceCmd_s
cmd	src/game/bg_public.h	/^  usercmd_t     cmd;$/;"	m	struct:pmove_s
cmd	src/game/g_local.h	/^  usercmd_t           cmd;                \/\/ we would lose angles if not persistant$/;"	m	struct:__anon311
cmd	src/game/g_svcmds.c	/^  char     *cmd;$/;"	m	struct:svcmd	file:
cmd	src/qcommon/cmd.c	/^	char	cmd[ BIG_INFO_STRING ]; \/\/ the original command we received (no token processing)$/;"	m	struct:cmdContext_s	file:
cmd	src/qcommon/cmd.c	/^static cmdContext_t		cmd;$/;"	v	file:
cmd	src/ui/ui_atoms.c	/^  char *cmd;$/;"	m	struct:uicmd	file:
cmd	src/ui/ui_local.h	/^  const char    *cmd;$/;"	m	struct:__anon515
cmdAnglesChanged	src/game/g_local.h	/^  qboolean            cmdAnglesChanged;$/;"	m	struct:__anon311
cmdContext_s	src/qcommon/cmd.c	/^typedef struct cmdContext_s$/;"	s	file:
cmdContext_t	src/qcommon/cmd.c	/^} cmdContext_t;$/;"	t	typeref:struct:cmdContext_s	file:
cmdFlags	src/game/g_local.h	/^  int  cmdFlags;$/;"	m	struct:__anon317
cmdHandler	src/game/g_local.h	/^  void ( *cmdHandler )( gentity_t *ent );$/;"	m	struct:__anon317
cmdName	src/game/g_local.h	/^  char *cmdName;$/;"	m	struct:__anon317
cmdNum	src/client/client.h	/^	int				cmdNum;			\/\/ the next cmdNum the server is expecting$/;"	m	struct:__anon84
cmdNumber	src/client/client.h	/^	int			cmdNumber;			\/\/ incremented each frame, because multiple$/;"	m	struct:__anon86
cmd_function_s	src/qcommon/cmd.c	/^typedef struct cmd_function_s$/;"	s	file:
cmd_function_t	src/qcommon/cmd.c	/^} cmd_function_t;$/;"	t	typeref:struct:cmd_function_s	file:
cmd_functions	src/qcommon/cmd.c	/^static cmd_function_t	*cmd_functions;		\/\/ possible commands to execute$/;"	v	file:
cmd_t	src/qcommon/cmd.c	/^} cmd_t;$/;"	t	typeref:struct:__anon446	file:
cmd_text	src/qcommon/cmd.c	/^cmd_t		cmd_text;$/;"	v
cmd_text_buf	src/qcommon/cmd.c	/^byte		cmd_text_buf[MAX_CMD_BUFFER];$/;"	v
cmd_wait	src/qcommon/cmd.c	/^int			cmd_wait;$/;"	v
cmdcmp	src/game/bg_misc.c	/^int cmdcmp( const void *a, const void *b )$/;"	f
cmds	src/client/client.h	/^	usercmd_t	cmds[CMD_BACKUP];	\/\/ each mesage will send several old cmds$/;"	m	struct:__anon86
cmds	src/game/bg_public.h	/^  voiceCmd_t       *cmds;$/;"	m	struct:voice_s
cmds	src/game/g_cmds.c	/^commands_t cmds[ ] = {$/;"	v
cmds	src/renderergl1/tr_local.h	/^	byte	cmds[MAX_RENDER_COMMANDS];$/;"	m	struct:__anon164
cmds	src/renderergl2/tr_local.h	/^	byte	cmds[MAX_RENDER_COMMANDS];$/;"	m	struct:__anon64
cmod_base	src/qcommon/cm_load.c	/^byte		*cmod_base;$/;"	v
cmodel_s	src/qcommon/cm_local.h	/^typedef struct cmodel_s {$/;"	s
cmodel_t	src/qcommon/cm_local.h	/^} cmodel_t;$/;"	t	typeref:struct:cmodel_s
cmodels	src/qcommon/cm_local.h	/^	cmodel_t	*cmodels;$/;"	m	struct:__anon440
cmp	src/tools/lcc/src/stmt.c	/^static void cmp(int op, Symbol p, long n, int lab) {$/;"	f	file:
cmpBuildable	src/game/g_buildable.c	/^static buildable_t  cmpBuildable;$/;"	v	file:
cmpOrigin	src/game/g_buildable.c	/^static vec3_t       cmpOrigin;$/;"	v	file:
cmp_t	src/game/bg_lib.h	/^typedef int cmp_t( const void *, const void * );$/;"	t
cmplevel	src/game/g_admin.c	/^static int cmplevel( const void *a, const void *b )$/;"	f	file:
cmptree	src/tools/lcc/src/enode.c	/^static Tree cmptree(int op, Tree l, Tree r) {$/;"	f	file:
cns	src/tools/lcc/src/sym.c	/^	cns = { CONSTANTS },$/;"	v	typeref:struct:table	file:
cnsttree	src/tools/lcc/src/enode.c	/^Tree cnsttree(Type ty, ...) {$/;"	f
cnt	src/server/sqlite3.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	src/server/sqlite3.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
cnt	src/server/sqlite3.c	/^  u32 cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp	file:
code	src/cgame/cg_syscalls.asm	/^code$/;"	l
code	src/cgame/cg_syscalls_11.asm	/^code$/;"	l
code	src/game/g_syscalls.asm	/^code$/;"	l
code	src/qcommon/vm_powerpc.c	/^	ppc_instruction_t code[0];$/;"	m	struct:dest_instruction	file:
code	src/qcommon/vm_sparc.c	/^	unsigned int		code[0];$/;"	m	struct:dst_insn	file:
code	src/qcommon/vm_x86.c	/^static	byte	*code = NULL;$/;"	v	file:
code	src/tools/lcc/lburg/gram.c	/^static int code = 0;$/;"	v	file:
code	src/tools/lcc/lburg/lburg.h	/^	char *code;		\/* cost, if an expression *\/$/;"	m	struct:rule
code	src/tools/lcc/src/c.h	/^struct code {$/;"	s
code	src/tools/lcc/src/stmt.c	/^Code code(int kind) {$/;"	f
code	src/ui/ui_syscalls.asm	/^code$/;"	l
code	src/ui/ui_syscalls_11.asm	/^code$/;"	l
codeAllEqualityTerms	src/server/sqlite3.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeApplyAffinity	src/server/sqlite3.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeAttach	src/server/sqlite3.c	/^static void codeAttach($/;"	f	file:
codeBase	src/qcommon/vm_local.h	/^	byte		*codeBase;$/;"	m	struct:vm_s
codeCompare	src/server/sqlite3.c	/^static int codeCompare($/;"	f	file:
codeCursorHint	src/server/sqlite3.c	/^static void codeCursorHint($/;"	f	file:
codeCursorHint	src/server/sqlite3.c	121163;"	d	file:
codeCursorHintCheckExpr	src/server/sqlite3.c	/^static int codeCursorHintCheckExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintFixExpr	src/server/sqlite3.c	/^static int codeCursorHintFixExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeDeferredSeek	src/server/sqlite3.c	/^static void codeDeferredSeek($/;"	f	file:
codeDistinct	src/server/sqlite3.c	/^static void codeDistinct($/;"	f	file:
codeEqualityTerm	src/server/sqlite3.c	/^static int codeEqualityTerm($/;"	f	file:
codeInteger	src/server/sqlite3.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeLength	src/qcommon/qfiles.h	/^	int		codeLength;$/;"	m	struct:__anon387
codeLength	src/qcommon/vm_local.h	/^	int			codeLength;$/;"	m	struct:vm_s
codeLength	src/qcommon/vm_powerpc.c	/^	size_t codeLength;$/;"	m	struct:VM_Data	file:
codeLength	src/qcommon/vm_sparc.c	/^	unsigned int codeLength;$/;"	m	struct:VM_Data	file:
codeOffset	src/qcommon/qfiles.h	/^	int		codeOffset;$/;"	m	struct:__anon387
codeOffset	src/server/sqlite3.c	/^static void codeOffset($/;"	f	file:
codeReal	src/server/sqlite3.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeRowTrigger	src/server/sqlite3.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeTableLocks	src/server/sqlite3.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	src/server/sqlite3.c	94581;"	d	file:
codeTriggerProgram	src/server/sqlite3.c	/^static int codeTriggerProgram($/;"	f	file:
codec	src/client/snd_codec.h	/^	snd_codec_t *codec;$/;"	m	struct:snd_stream_s
codecs	src/client/snd_codec.c	/^static snd_codec_t *codecs;$/;"	v	file:
codehead	src/tools/lcc/src/stmt.c	/^struct code codehead = { Start };$/;"	v	typeref:struct:code
codelist	src/tools/lcc/src/stmt.c	/^Code codelist = &codehead;$/;"	v
codes	src/qcommon/puff.c	/^local int32_t codes(struct state *s,$/;"	f
colFlags	src/server/sqlite3.c	/^  u8 colFlags;     \/* Boolean properties.  See COLFLAG_ defines below *\/$/;"	m	struct:Column	file:
colNamesSet	src/server/sqlite3.c	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse	file:
colUsed	src/server/sqlite3.c	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item	file:
colUsed	src/server/sqlite3.c	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info	file:
colUsed	src/server/sqlite3.h	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info
collapse	src/renderergl1/tr_shader.c	/^static collapse_t	collapse[] = {$/;"	v	file:
collapse_t	src/renderergl1/tr_shader.c	/^} collapse_t;$/;"	t	typeref:struct:__anon127	file:
collationMatch	src/server/sqlite3.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collation_needed	src/server/sqlite3.c	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collation_needed16	src/server/sqlite3.c	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collided	src/qcommon/cm_local.h	/^	qboolean	collided; \/\/ marker for optimisation$/;"	m	struct:__anon437
collisionType	src/server/sv_world.c	/^	traceType_t	collisionType;$/;"	m	struct:__anon182	file:
color	src/cgame/cg_local.h	/^  byte                    color[ 3 ];$/;"	m	struct:trailBeamNode_s
color	src/cgame/cg_local.h	/^  byte color[ 3 ];$/;"	m	struct:__anon248
color	src/cgame/cg_local.h	/^  float             color[ 4 ];$/;"	m	struct:markPoly_s
color	src/client/cl_console.c	/^	vec4_t	color;$/;"	m	struct:__anon102	file:
color	src/qcommon/qfiles.h	/^	byte		color[4];$/;"	m	struct:__anon415
color	src/renderergl1/tr_flares.c	/^	vec3_t		color;$/;"	m	struct:flare_s	file:
color	src/renderergl1/tr_local.h	/^	float	color[4];$/;"	m	struct:__anon165
color	src/renderergl1/tr_local.h	/^	vec3_t			color;$/;"	m	struct:srfFlare_s
color	src/renderergl1/tr_local.h	/^	vec3_t	color;				\/\/ range from 0.0 to 1.0, should be color normalized$/;"	m	struct:dlight_s
color	src/renderergl1/tr_local.h	/^	vec3_t	color;$/;"	m	struct:__anon146
color	src/renderergl2/tr_flares.c	/^	vec3_t		color;$/;"	m	struct:flare_s	file:
color	src/renderergl2/tr_local.h	/^	float	color[4];$/;"	m	struct:__anon65
color	src/renderergl2/tr_local.h	/^	vec3_t			color;$/;"	m	struct:srfFlare_s
color	src/renderergl2/tr_local.h	/^	vec3_t	color;				\/\/ range from 0.0 to 1.0, should be color normalized$/;"	m	struct:dlight_s
color	src/renderergl2/tr_local.h	/^	vec3_t	color;$/;"	m	struct:__anon30
color	src/ui/ui_shared.h	/^  vec4_t  color;$/;"	m	struct:__anon500
color2D	src/renderergl1/tr_local.h	/^	byte		color2D[4];$/;"	m	struct:__anon162
color2D	src/renderergl2/tr_local.h	/^	byte		color2D[4];$/;"	m	struct:__anon62
color4ub_t	src/renderergl1/tr_local.h	/^typedef byte color4ub_t[4];$/;"	t
color4ub_t	src/renderergl2/tr_local.h	/^typedef byte color4ub_t[4];$/;"	t
colorBits	src/renderercommon/tr_types.h	/^	int						colorBits, depthBits, stencilBits;$/;"	m	struct:__anon120
colorBlack	src/qcommon/q_math.c	/^vec4_t		colorBlack	= {0, 0, 0, 1};$/;"	v
colorBlue	src/qcommon/q_math.c	/^vec4_t		colorBlue	= {0, 0, 1, 1};$/;"	v
colorBuffers	src/renderergl2/tr_fbo.h	/^	uint32_t        colorBuffers[16];$/;"	m	struct:FBO_s
colorChocolate	src/qcommon/q_math.c	/^vec4_t		colorChocolate	= {0.82, 0.41, 0.12, 1};$/;"	v
colorCyan	src/qcommon/q_math.c	/^vec4_t		colorCyan	= {0, 1, 1, 1};$/;"	v
colorDelay	src/cgame/cg_local.h	/^  int               colorDelay;$/;"	m	struct:particle_s
colorDelay	src/cgame/cg_local.h	/^  int             colorDelay;$/;"	m	struct:baseParticle_s
colorDelayRandFrac	src/cgame/cg_local.h	/^  float           colorDelayRandFrac;$/;"	m	struct:baseParticle_s
colorDkGrey	src/qcommon/q_math.c	/^vec4_t		colorDkGrey	= {0.25, 0.25, 0.25, 1};$/;"	v
colorFormat	src/renderergl2/tr_fbo.h	/^	int             colorFormat;$/;"	m	struct:FBO_s
colorGen_t	src/renderergl1/tr_local.h	/^} colorGen_t;$/;"	t	typeref:enum:__anon134
colorGen_t	src/renderergl2/tr_local.h	/^} colorGen_t;$/;"	t	typeref:enum:__anon16
colorGold	src/qcommon/q_math.c	/^vec4_t		colorGold	= {1, 0.84, 0, 1};$/;"	v
colorGreen	src/qcommon/q_math.c	/^vec4_t		colorGreen	= {0, 1, 0, 1};$/;"	v
colorImage	src/renderergl2/tr_fbo.h	/^	struct image_s  *colorImage[16];$/;"	m	struct:FBO_s	typeref:struct:FBO_s::image_s
colorIndigo	src/qcommon/q_math.c	/^vec4_t		colorIndigo	= {0.29, 0, 0.51, 1};$/;"	v
colorInt	src/renderergl1/tr_local.h	/^	unsigned	colorInt;				\/\/ in packed byte format$/;"	m	struct:__anon149
colorInt	src/renderergl2/tr_local.h	/^	unsigned	colorInt;				\/\/ in packed byte format$/;"	m	struct:__anon41
colorLtGrey	src/qcommon/q_math.c	/^vec4_t		colorLtGrey	= {0.75, 0.75, 0.75, 1};$/;"	v
colorMagenta	src/qcommon/q_math.c	/^vec4_t		colorMagenta	= {1, 0, 1, 1};$/;"	v
colorMask	src/renderergl2/tr_local.h	/^	qboolean    colorMask[4];$/;"	m	struct:__anon62
colorMaskCommand_t	src/renderergl1/tr_local.h	/^} colorMaskCommand_t;$/;"	t	typeref:struct:__anon174
colorMaskCommand_t	src/renderergl2/tr_local.h	/^} colorMaskCommand_t;$/;"	t	typeref:struct:__anon74
colorMdGrey	src/qcommon/q_math.c	/^vec4_t		colorMdGrey	= {0.5, 0.5, 0.5, 1};$/;"	v
colorOrange	src/qcommon/q_math.c	/^vec4_t		colorOrange	= {1, 0.65, 0, 1};$/;"	v
colorPink	src/qcommon/q_math.c	/^vec4_t		colorPink	= {1, 0.75, 0.80, 1};$/;"	v
colorPurple	src/qcommon/q_math.c	/^vec4_t		colorPurple	= {0.5, 0, 0.5, 1};$/;"	v
colorRangeDef_t	src/ui/ui_shared.h	/^colorRangeDef_t;$/;"	t	typeref:struct:__anon500
colorRanges	src/ui/ui_shared.h	/^  colorRangeDef_t colorRanges[MAX_COLOR_RANGES];$/;"	m	struct:itemDef_s
colorRed	src/qcommon/q_math.c	/^vec4_t		colorRed	= {1, 0, 0, 1};$/;"	v
colorScale	src/renderergl2/tr_local.h	/^	float       colorScale;$/;"	m	struct:__anon39
colorTeal	src/qcommon/q_math.c	/^vec4_t		colorTeal	= {0, 0.31, 0.31, 1};$/;"	v
colorWhite	src/qcommon/q_math.c	/^vec4_t		colorWhite	= {1, 1, 1, 1};$/;"	v
colorYellow	src/qcommon/q_math.c	/^vec4_t		colorYellow	= {1, 1, 0, 1};$/;"	v
color_planes	src/renderercommon/tr_image_pcx.c	/^	char	color_planes;$/;"	m	struct:__anon124	file:
colormap_index	src/renderercommon/tr_image_tga.c	/^	unsigned short	colormap_index, colormap_length;$/;"	m	struct:_TargaHeader	file:
colormap_length	src/renderercommon/tr_image_tga.c	/^	unsigned short	colormap_index, colormap_length;$/;"	m	struct:_TargaHeader	file:
colormap_size	src/renderercommon/tr_image_tga.c	/^	unsigned char	colormap_size;$/;"	m	struct:_TargaHeader	file:
colormap_type	src/renderercommon/tr_image_tga.c	/^	unsigned char 	id_length, colormap_type, image_type;$/;"	m	struct:_TargaHeader	file:
colors	src/renderercommon/tr_image_bmp.c	/^	unsigned colors;$/;"	m	struct:__anon110	file:
colors	src/renderergl1/tr_local.h	/^	byte		*colors;$/;"	m	struct:__anon154
colors	src/renderergl1/tr_local.h	/^	color4ub_t	colors[SHADER_MAX_VERTEXES];$/;"	m	struct:stageVars
colors	src/renderergl2/tr_local.h	/^	byte		*colors;$/;"	m	struct:__anon46
colors	src/renderergl2/tr_local.h	/^	color4ub_t	colors[SHADER_MAX_VERTEXES];$/;"	m	struct:stageVars
columnIndex	src/server/sqlite3.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnInfo	src/ui/ui_shared.h	/^  columnInfo_t columnInfo[MAX_LB_COLUMNS];$/;"	m	struct:listBoxDef_s
columnInfo_s	src/ui/ui_shared.h	/^typedef struct columnInfo_s$/;"	s
columnInfo_t	src/ui/ui_shared.h	/^columnInfo_t;$/;"	t	typeref:struct:columnInfo_s
columnMallocFailure	src/server/sqlite3.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMem	src/server/sqlite3.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnName	src/server/sqlite3.c	/^static const void *columnName($/;"	f	file:
columnNullValue	src/server/sqlite3.c	/^static const Mem *columnNullValue(void){$/;"	f	file:
columnType	src/server/sqlite3.c	111835;"	d	file:
columnType	src/server/sqlite3.c	111837;"	d	file:
columnTypeImpl	src/server/sqlite3.c	/^static const char *columnTypeImpl($/;"	f	file:
column_blob	src/server/sqlite3.c	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes	src/server/sqlite3.c	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes16	src/server/sqlite3.c	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_count	src/server/sqlite3.c	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name	src/server/sqlite3.c	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name16	src/server/sqlite3.c	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype	src/server/sqlite3.c	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype16	src/server/sqlite3.c	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_double	src/server/sqlite3.c	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int	src/server/sqlite3.c	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int64	src/server/sqlite3.c	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_name	src/server/sqlite3.c	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name16	src/server/sqlite3.c	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name	src/server/sqlite3.c	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name16	src/server/sqlite3.c	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name	src/server/sqlite3.c	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name16	src/server/sqlite3.c	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_text	src/server/sqlite3.c	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text16	src/server/sqlite3.c	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_type	src/server/sqlite3.c	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_value	src/server/sqlite3.c	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
columnsInIndex	src/server/sqlite3.c	/^static Bitmask columnsInIndex(Index *pIdx){$/;"	f	file:
com	src/tools/lcc/etc/bytecode.c	/^char *com[] = { "q3rcc" BINEXT, "-target=bytecode", "$1", "$2", "$3", 0 };$/;"	v
com_abnormalExit	src/qcommon/common.c	/^cvar_t	*com_abnormalExit;$/;"	v
com_altivec	src/qcommon/common.c	/^cvar_t	*com_altivec;$/;"	v
com_altivec	src/renderergl1/tr_init.c	/^cvar_t  *com_altivec;$/;"	v
com_altivec	src/renderergl2/tr_init.c	/^cvar_t  *com_altivec;$/;"	v
com_ansiColor	src/qcommon/common.c	/^cvar_t	*com_ansiColor;$/;"	v
com_argc	src/qcommon/common.c	/^int		com_argc;$/;"	v
com_argv	src/qcommon/common.c	/^char	*com_argv[MAX_NUM_ARGVS+1];$/;"	v
com_blood	src/qcommon/common.c	/^cvar_t	*com_blood;$/;"	v
com_buildScript	src/qcommon/common.c	/^cvar_t	*com_buildScript;	\/\/ for automated data building scripts$/;"	v
com_busyWait	src/qcommon/common.c	/^cvar_t	*com_busyWait;$/;"	v
com_cameraMode	src/qcommon/common.c	/^cvar_t	*com_cameraMode;$/;"	v
com_cl_running	src/qcommon/common.c	/^cvar_t	*com_cl_running;$/;"	v
com_consoleLines	src/qcommon/common.c	/^char	*com_consoleLines[MAX_CONSOLE_LINES];$/;"	v
com_dedicated	src/qcommon/common.c	/^cvar_t	*com_dedicated;$/;"	v
com_developer	src/qcommon/common.c	/^cvar_t	*com_developer;$/;"	v
com_downloadPrompt	src/client/cl_main.c	/^cvar_t	*com_downloadPrompt;$/;"	v
com_eof	src/tools/asm/cmdlib.c	/^qboolean	com_eof;$/;"	v
com_errorEntered	src/qcommon/common.c	/^qboolean	com_errorEntered = qfalse;$/;"	v
com_errorMessage	src/qcommon/common.c	/^char	com_errorMessage[MAXPRINTMSG];$/;"	v
com_fixedtime	src/qcommon/common.c	/^cvar_t	*com_fixedtime;$/;"	v
com_frameNumber	src/qcommon/common.c	/^int			com_frameNumber;$/;"	v
com_frameTime	src/qcommon/common.c	/^int			com_frameTime;$/;"	v
com_fullyInitialized	src/qcommon/common.c	/^qboolean	com_fullyInitialized = qfalse;$/;"	v
com_gameRestarting	src/qcommon/common.c	/^qboolean	com_gameRestarting = qfalse;$/;"	v
com_gamename	src/qcommon/common.c	/^cvar_t	*com_gamename;$/;"	v
com_homepath	src/qcommon/common.c	/^cvar_t  *com_homepath;$/;"	v
com_journal	src/qcommon/common.c	/^cvar_t	*com_journal;$/;"	v
com_journalDataFile	src/qcommon/common.c	/^fileHandle_t	com_journalDataFile;		\/\/ config files are written here$/;"	v
com_journalFile	src/qcommon/common.c	/^fileHandle_t	com_journalFile;			\/\/ events are written here$/;"	v
com_lines	src/qcommon/q_shared.c	/^static	int		com_lines;$/;"	v	file:
com_logfile	src/qcommon/common.c	/^cvar_t	*com_logfile;		\/\/ 1 = buffer log, 2 = flush after each print$/;"	v
com_maxfps	src/qcommon/common.c	/^cvar_t	*com_maxfps;$/;"	v
com_maxfpsMinimized	src/qcommon/common.c	/^cvar_t	*com_maxfpsMinimized;$/;"	v
com_maxfpsUnfocused	src/qcommon/common.c	/^cvar_t	*com_maxfpsUnfocused;$/;"	v
com_minimized	src/qcommon/common.c	/^cvar_t	*com_minimized;$/;"	v
com_numConsoleLines	src/qcommon/common.c	/^int		com_numConsoleLines;$/;"	v
com_parsename	src/qcommon/q_shared.c	/^static	char	com_parsename[MAX_TOKEN_CHARS];$/;"	v	file:
com_pipefile	src/qcommon/common.c	/^cvar_t	*com_pipefile;$/;"	v
com_pushedEvents	src/qcommon/common.c	/^static sysEvent_t	com_pushedEvents[MAX_PUSHED_EVENTS];$/;"	v	file:
com_pushedEventsHead	src/qcommon/common.c	/^static int com_pushedEventsHead = 0;$/;"	v	file:
com_pushedEventsTail	src/qcommon/common.c	/^static int com_pushedEventsTail = 0;$/;"	v	file:
com_showtrace	src/qcommon/common.c	/^cvar_t	*com_showtrace;$/;"	v
com_speeds	src/qcommon/common.c	/^cvar_t	*com_speeds;$/;"	v
com_sv_running	src/qcommon/common.c	/^cvar_t	*com_sv_running;$/;"	v
com_timedemo	src/qcommon/common.c	/^cvar_t	*com_timedemo;$/;"	v
com_timescale	src/qcommon/common.c	/^cvar_t	*com_timescale;$/;"	v
com_token	src/qcommon/q_shared.c	/^static	char	com_token[MAX_TOKEN_CHARS];$/;"	v	file:
com_token	src/tools/asm/cmdlib.c	/^char		com_token[1024];$/;"	v
com_tokenline	src/qcommon/q_shared.c	/^static	int		com_tokenline;$/;"	v	file:
com_unfocused	src/qcommon/common.c	/^cvar_t	*com_unfocused;$/;"	v
com_version	src/qcommon/common.c	/^cvar_t	*com_version;$/;"	v
command	src/cgame/cg_tutorial.c	/^  char      *command;$/;"	m	struct:__anon227	file:
command	src/game/g_admin.h	/^  char command[ MAX_ADMIN_CMD_LEN ];$/;"	m	struct:g_admin_command
command	src/ui/ui_shared.c	/^  char  *command;$/;"	m	struct:__anon522	file:
command	src/ui/ui_shared.h	/^  const char *command;$/;"	m	struct:__anon497
commandComp	src/ui/ui_shared.c	/^static int commandComp( const void *a, const void *b )$/;"	f	file:
commandDef_t	src/ui/ui_shared.h	/^commandDef_t;$/;"	t	typeref:struct:__anon505
commandId	src/renderergl1/tr_local.h	/^	int						commandId;$/;"	m	struct:__anon173
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon165
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon166
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon167
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon168
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon169
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon170
commandId	src/renderergl1/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon171
commandId	src/renderergl1/tr_local.h	/^	int commandId;$/;"	m	struct:__anon172
commandId	src/renderergl1/tr_local.h	/^	int commandId;$/;"	m	struct:__anon174
commandId	src/renderergl1/tr_local.h	/^	int commandId;$/;"	m	struct:__anon175
commandId	src/renderergl2/tr_local.h	/^	int						commandId;$/;"	m	struct:__anon73
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon65
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon66
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon67
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon68
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon69
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon70
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon71
commandId	src/renderergl2/tr_local.h	/^	int		commandId;$/;"	m	struct:__anon77
commandId	src/renderergl2/tr_local.h	/^	int commandId;$/;"	m	struct:__anon72
commandId	src/renderergl2/tr_local.h	/^	int commandId;$/;"	m	struct:__anon74
commandId	src/renderergl2/tr_local.h	/^	int commandId;$/;"	m	struct:__anon75
commandId	src/renderergl2/tr_local.h	/^	int commandId;$/;"	m	struct:__anon76
commandList	src/ui/ui_shared.c	/^commandDef_t commandList[] =$/;"	v
commandTime	src/cgame/cg_local.h	/^	int			commandTime;	\/\/ cmd->serverTime of last executed command$/;"	m	struct:__anon256
commandTime	src/client/client.h	/^	int			commandTime;	\/\/ cmd->serverTime of last executed command$/;"	m	struct:alternatePlayerState_s
commandTime	src/qcommon/msg.c	/^	int			commandTime;	\/\/ cmd->serverTime of last executed command$/;"	m	struct:alternatePlayerState_s	file:
commandTime	src/qcommon/q_shared.h	/^	int			commandTime;	\/\/ cmd->serverTime of last executed command$/;"	m	struct:playerState_s
commands	src/cgame/cg_consolecmds.c	/^static consoleCommand_t commands[ ] =$/;"	v	file:
commands	src/renderergl1/tr_local.h	/^	renderCommandList_t	commands;$/;"	m	struct:__anon177
commands	src/renderergl2/tr_local.h	/^	renderCommandList_t	commands;$/;"	m	struct:__anon79
commands	src/ui/ui_atoms.c	/^} commands[ ] = {$/;"	v	typeref:struct:uicmd
commands_t	src/game/g_local.h	/^} commands_t;$/;"	t	typeref:struct:__anon317
comment	src/tools/lcc/src/main.c	/^static char *comment;$/;"	v	file:
commit_hook	src/server/sqlite3.c	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
commute	src/tools/lcc/src/simp.c	8;"	d	file:
compare	src/tools/lcc/src/profio.c	/^static int compare(struct count *a, struct count *b) {$/;"	f	file:
compare2pow63	src/server/sqlite3.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compareInfo	src/server/sqlite3.c	/^struct compareInfo {$/;"	s	file:
comparetokens	src/tools/lcc/cpp/tokens.c	/^comparetokens(Tokenrow *tr1, Tokenrow *tr2)$/;"	f
comparisonAffinity	src/server/sqlite3.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
compatible	src/tools/lcc/src/enode.c	/^static int compatible(Type ty1, Type ty2) {$/;"	f	file:
compile	src/tools/lcc/etc/lcc.c	/^static int compile(char *src, char *dst) {$/;"	f	file:
compile_function	src/qcommon/vm_sparc.c	/^static void compile_function(vm_t *vm, struct func_info * const fp)$/;"	f	file:
compile_one_insn	src/qcommon/vm_sparc.c	/^static void compile_one_insn(vm_t *vm, struct func_info * const fp, struct src_insn *sp)$/;"	f	file:
compiled	src/qcommon/vm_local.h	/^	qboolean	compiled;$/;"	m	struct:vm_s
compiledOfs	src/qcommon/vm_x86.c	/^static	int		compiledOfs = 0;$/;"	v	file:
compileoption_get	src/server/sqlite3.c	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_used	src/server/sqlite3.c	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
compileoptiongetFunc	src/server/sqlite3.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptionusedFunc	src/server/sqlite3.c	/^static void compileoptionusedFunc($/;"	f	file:
complete	src/qcommon/cmd.c	/^	completionFunc_t	complete;$/;"	m	struct:cmd_function_s	file:
complete	src/server/sqlite3.c	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete16	src/server/sqlite3.c	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	file:
completionField	src/qcommon/common.c	/^static field_t *completionField;$/;"	v	file:
completionFunc_t	src/qcommon/qcommon.h	/^typedef void (*completionFunc_t)( char *args, int argNum );$/;"	t
completionString	src/qcommon/common.c	/^static const char *completionString;$/;"	v	file:
compose	src/tools/lcc/etc/lcc.c	/^static void compose(char *cmd[], List a, List b, List c) {$/;"	f	file:
compose	src/tools/lcc/src/types.c	/^Type compose(Type ty1, Type ty2) {$/;"	f
compound	src/tools/lcc/src/decl.c	/^void compound(int loop, struct swtch *swp, int lev) {$/;"	f
compression	src/renderercommon/tr_image_bmp.c	/^	unsigned compression;$/;"	m	struct:__anon110	file:
compressor	src/qcommon/qcommon.h	/^	huff_t		compressor;$/;"	m	struct:__anon433
computeCellSize	src/server/sqlite3.c	/^static SQLITE_NOINLINE u16 computeCellSize(CellArray *p, int N){$/;"	f	file:
computeHMS	src/server/sqlite3.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeJD	src/server/sqlite3.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeLimitRegisters	src/server/sqlite3.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeNumericType	src/server/sqlite3.c	/^static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){$/;"	f	file:
computeYMD	src/server/sqlite3.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD_HMS	src/server/sqlite3.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
computed	src/tools/lcc/src/c.h	/^	unsigned computed:1;$/;"	m	struct:symbol
computekids	src/tools/lcc/lburg/lburg.c	/^static char *computekids(Tree t, char *v, char *bp, int *ip) {$/;"	f	file:
computents	src/tools/lcc/lburg/lburg.c	/^static char *computents(Tree t, char *bp) {$/;"	f	file:
con	src/client/cl_console.c	/^console_t	con;$/;"	v
con_conspeed	src/client/cl_console.c	/^cvar_t		*con_conspeed;$/;"	v
concat	src/tools/lcc/etc/lcc.c	/^char *concat(char *s1, char *s2) {$/;"	f
conchFile	src/server/sqlite3.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	src/server/sqlite3.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	src/server/sqlite3.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
cond	src/tools/lcc/src/expr.c	/^Tree cond(Tree p) {$/;"	f
condition	src/game/g_maprotation.c	/^    condition_t condition;$/;"	m	union:node_s::__anon323	file:
conditionOp_t	src/game/g_maprotation.c	/^} conditionOp_t;$/;"	t	typeref:enum:__anon321	file:
conditionVariable_t	src/game/g_maprotation.c	/^} conditionVariable_t;$/;"	t	typeref:enum:__anon320	file:
condition_s	src/game/g_maprotation.c	/^typedef struct condition_s$/;"	s	file:
condition_t	src/game/g_maprotation.c	/^} condition_t;$/;"	t	typeref:struct:condition_s	file:
conditional	src/tools/lcc/src/stmt.c	/^static Tree conditional(int tok) {$/;"	f	file:
condtree	src/tools/lcc/src/enode.c	/^Tree condtree(Tree e, Tree l, Tree r) {$/;"	f
configString_s	src/server/server.h	/^typedef struct configString_s {$/;"	s
configString_t	src/server/server.h	/^} configString_t;$/;"	t	typeref:struct:configString_s
configcvar_t	src/ui/ui_shared.c	/^configcvar_t;$/;"	t	typeref:struct:__anon523	file:
configstrings	src/server/server.h	/^	configString_t	configstrings[MAX_CONFIGSTRINGS];$/;"	m	struct:__anon184
connState	src/ui/ui_public.h	/^  connstate_t   connState;$/;"	m	struct:__anon492
connectPacketCount	src/client/client.h	/^	int			connectPacketCount;			\/\/ for display on connection dialog$/;"	m	struct:__anon87
connectPacketCount	src/ui/ui_public.h	/^  int       connectPacketCount;$/;"	m	struct:__anon492
connectTime	src/client/client.h	/^	int			connectTime;				\/\/ for connection retransmits$/;"	m	struct:__anon87
connected	src/game/g_local.h	/^  clientConnected_t   connected;$/;"	m	struct:__anon311
connected	src/server/server.h	/^	qboolean	connected;$/;"	m	struct:__anon187
connectionIsBusy	src/server/sqlite3.c	/^static int connectionIsBusy(sqlite3 *db){$/;"	f	file:
connectionShader	src/cgame/cg_local.h	/^  qhandle_t   connectionShader;$/;"	m	struct:__anon251
connstate_t	src/qcommon/q_shared.h	/^} connstate_t;$/;"	t	typeref:enum:__anon477
consoleCommand_t	src/cgame/cg_local.h	/^} consoleCommand_t;$/;"	t	typeref:struct:__anon254
consoleLine_t	src/cgame/cg_local.h	/^} consoleLine_t;$/;"	t	typeref:struct:__anon247
consoleLines	src/cgame/cg_local.h	/^  consoleLine_t consoleLines[ MAX_CONSOLE_LINES ];$/;"	m	struct:__anon249
consoleLog	src/sys/con_log.c	/^static char          consoleLog[ MAX_LOG ];$/;"	v	file:
consoleSaveBuffer	src/client/cl_keys.c	/^static char	consoleSaveBuffer[ MAX_CONSOLE_SAVE_BUFFER ];$/;"	v	file:
consoleSaveBufferSize	src/client/cl_keys.c	/^static int	consoleSaveBufferSize = 0;$/;"	v	file:
consoleShader	src/client/client.h	/^	qhandle_t	consoleShader;$/;"	m	struct:__anon90
consoleText	src/cgame/cg_local.h	/^  char          consoleText[ MAX_CONSOLE_TEXT ];$/;"	m	struct:__anon249
console_t	src/client/cl_console.c	/^} console_t;$/;"	t	typeref:struct:__anon102	file:
constant	src/tools/lcc/src/sym.c	/^Symbol constant(Type ty, Value v) {$/;"	f
constantColor	src/renderergl1/tr_local.h	/^	byte			constantColor[4];			\/\/ for CGEN_CONST and AGEN_CONST$/;"	m	struct:__anon142
constantColor	src/renderergl2/tr_local.h	/^	byte			constantColor[4];			\/\/ for CGEN_CONST and AGEN_CONST$/;"	m	struct:__anon26
constantLight	src/cgame/cg_local.h	/^	int		constantLight;	\/\/ r + (g<<8) + (b<<16) + (intensity<<24)$/;"	m	struct:__anon257
constantLight	src/client/client.h	/^	int		constantLight;	\/\/ r + (g<<8) + (b<<16) + (intensity<<24)$/;"	m	struct:alternateEntityState_s
constantLight	src/qcommon/q_shared.h	/^	int		constantLight;	\/\/ r + (g<<8) + (b<<16) + (intensity<<24)$/;"	m	struct:entityState_s
constants	src/tools/lcc/doc/4.html	/^<h2><a NAME="constants">5.9 Constants<\/a><\/h2>$/;"	a
constants	src/tools/lcc/src/sym.c	/^Table constants   = &cns;$/;"	v
constexpr	src/tools/lcc/src/simp.c	/^Tree constexpr(int tok) {$/;"	f
constraintName	src/server/sqlite3.c	/^  Token constraintName;\/* Name of the constraint currently being parsed *\/$/;"	m	struct:Parse	file:
construct	src/qcommon/puff.c	/^local int32_t construct(struct huffman *h, int16_t *length, int32_t n)$/;"	f
constructAutomaticIndex	src/server/sqlite3.c	/^static void constructAutomaticIndex($/;"	f	file:
consttree	src/tools/lcc/src/enode.c	/^Tree consttree(unsigned n, Type ty) {$/;"	f
contentFlags	src/qcommon/qfiles.h	/^	int			contentFlags;$/;"	m	struct:__anon408
contentFlags	src/renderergl1/tr_local.h	/^	int			contentFlags;$/;"	m	struct:shader_s
contentFlags	src/renderergl2/tr_local.h	/^	int			contentFlags;$/;"	m	struct:shader_s
contentmask	src/server/sv_world.c	/^	int			contentmask;$/;"	m	struct:__anon182	file:
contents	src/game/g_public.h	/^  int     contents;     \/\/ CONTENTS_TRIGGER, CONTENTS_SOLID, CONTENTS_BODY, etc$/;"	m	struct:__anon361
contents	src/qcommon/cm_local.h	/^	int					contents;	\/\/ ored contents of the model tracing through$/;"	m	struct:__anon443
contents	src/qcommon/cm_local.h	/^	int			contents;$/;"	m	struct:__anon437
contents	src/qcommon/cm_local.h	/^	int			contents;$/;"	m	struct:__anon438
contents	src/qcommon/q_shared.h	/^	int			contents;	\/\/ contents on other side of surface hit$/;"	m	struct:__anon470
contents	src/renderergl1/tr_local.h	/^	int			contents;		\/\/ -1 for nodes, to differentiate from leafs$/;"	m	struct:mnode_s
contents	src/renderergl1/tr_shader.c	/^	int		clearSolid, surfaceFlags, contents;$/;"	m	struct:__anon126	file:
contents	src/renderergl2/tr_local.h	/^	int			contents;		\/\/ -1 for nodes, to differentiate from leafs$/;"	m	struct:mnode_s
contents	src/renderergl2/tr_shader.c	/^	int		clearSolid, surfaceFlags, contents;$/;"	m	struct:__anon7	file:
context	src/client/libmumblelink.c	/^	unsigned char context[256];$/;"	m	struct:__anon104	file:
contextMalloc	src/server/sqlite3.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
context_db_handle	src/server/sqlite3.c	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
context_len	src/client/libmumblelink.c	/^	uint32_t context_len;$/;"	m	struct:__anon104	file:
continuousFlash	src/cgame/cg_local.h	/^  qboolean    continuousFlash;$/;"	m	struct:weaponInfoMode_s
control	src/tools/lcc/cpp/cpp.c	/^control(Tokenrow *trp)$/;"	f
convertCompoundSelectToSubquery	src/server/sqlite3.c	/^static int convertCompoundSelectToSubquery(Walker *pWalker, Select *p){$/;"	f	file:
convertToWithoutRowidTable	src/server/sqlite3.c	/^static void convertToWithoutRowidTable(Parse *pParse, Table *pTab){$/;"	f	file:
cookie	src/game/bg_alloc.c	/^  int cookie, size;        \/\/ Size includes node (obviously)$/;"	m	struct:freeMemNode_s	file:
cookieMask	src/server/sqlite3.c	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse	file:
cookieValue	src/server/sqlite3.c	/^  int cookieValue[SQLITE_MAX_ATTACHED+2];  \/* Values of cookies to verify *\/$/;"	m	struct:Parse	file:
coord	src/tools/lcc/src/c.h	/^typedef struct coord {$/;"	s
coord	src/tools/lcc/src/prof.c	/^		unsigned int coord;$/;"	m	union:callsite::coordinate	file:
coordinate	src/tools/lcc/src/prof.c	/^	union coordinate {$/;"	u	struct:callsite	file:
copy	src/tools/lcc/src/config.h	/^	unsigned copy:1;$/;"	m	struct:__anon274
copy4	src/qcommon/md4.c	/^static void copy4(byte *out,uint32_t x)$/;"	f	file:
copy64	src/qcommon/md4.c	/^static void copy64(uint32_t *M, byte *in)$/;"	f	file:
copyKey	src/server/sqlite3.c	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash	file:
copyNodeContent	src/server/sqlite3.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyPayload	src/server/sqlite3.c	/^static int copyPayload($/;"	f	file:
copy_stemmer	src/server/sqlite3.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copysignf	src/game/bg_lib.c	/^static float copysignf( float x, float y )$/;"	f	file:
copystring	src/tools/asm/cmdlib.c	/^char *copystring(const char *s)$/;"	f
copytokenrow	src/tools/lcc/cpp/tokens.c	/^copytokenrow(Tokenrow *dtr, Tokenrow *str)$/;"	f
corpseinfo	src/cgame/cg_local.h	/^  clientInfo_t  corpseinfo[ MAX_CLIENTS ];$/;"	m	struct:__anon253
corruptSchema	src/server/sqlite3.c	/^static void corruptSchema($/;"	f	file:
cost	src/game/bg_public.h	/^  int       cost;$/;"	m	struct:__anon349
cost	src/tools/lcc/lburg/gram.y	/^cost	: CODE				{ if (*$1 == 0) $$ = "0"; }$/;"	l
cost	src/tools/lcc/lburg/lburg.h	/^	int cost;		\/* cost, if a constant *\/$/;"	m	struct:rule
costMult	src/server/sqlite3.c	/^  LogEst costMult;     \/* Cost multiplier for using this table *\/$/;"	m	struct:Table	file:
count	src/asm/snd_mixa.s	/^#define count	12+16$/;"	d
count	src/cgame/cg_local.h	/^  int                   count;$/;"	m	struct:particleEjector_s
count	src/game/g_local.h	/^  int               count;$/;"	m	struct:gentity_s
count	src/qcommon/cm_local.h	/^	int		count;$/;"	m	struct:leafList_s
count	src/qcommon/puff.c	/^    int16_t *count;       \/* number of symbols of each length *\/$/;"	m	struct:huffman	file:
count	src/qcommon/vm_powerpc.c	/^	long int count;$/;"	m	struct:local_data_s	file:
count	src/qcommon/vm_powerpc.c	/^	unsigned long int count;$/;"	m	struct:dest_instruction	file:
count	src/qcommon/vm_sparc.c	/^	int count;$/;"	m	struct:data_hunk	file:
count	src/qcommon/vm_sparc.c	/^	unsigned int		count;$/;"	m	struct:dst_insn	file:
count	src/renderergl2/tr_local.h	/^	uint32_t count;$/;"	m	struct:vaoAttrib_s
count	src/server/sqlite3.c	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht	file:
count	src/server/sqlite3.c	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
count	src/server/sqlite3.c	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash	file:
count	src/server/sqlite3.c	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash	file:
count	src/server/sv_world.c	/^	int			count, maxcount;$/;"	m	struct:__anon181	file:
count	src/tools/asm/cmdlib.h	/^	int		count, width, height;$/;"	m	struct:__anon262
count	src/tools/lcc/src/c.h	/^	short count;$/;"	m	struct:node
count	src/tools/lcc/src/profio.c	/^			int count;		\/* number of calls from this site *\/$/;"	m	struct:file::func::caller	file:
count	src/tools/lcc/src/profio.c	/^		struct count count;		\/* total number of calls *\/$/;"	m	struct:file::func	typeref:struct:file::func::count	file:
count	src/tools/lcc/src/profio.c	/^	int count;			\/* associated execution count *\/$/;"	m	struct:count	file:
count	src/tools/lcc/src/profio.c	/^	int count;			\/* counts[0..count-1] hold valid data *\/$/;"	m	struct:file	file:
count	src/tools/lcc/src/profio.c	/^struct count {			\/* count data: *\/$/;"	s	file:
count	src/ui/ui_shared.h	/^  int count;$/;"	m	struct:multiDef_s
countFinalize	src/server/sqlite3.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countStep	src/server/sqlite3.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countValidCursors	src/server/sqlite3.c	/^static int countValidCursors(BtShared *pBt, int wrOnly){$/;"	f	file:
countdownModificationCount	src/game/g_local.h	/^  int               countdownModificationCount;      \/\/ for detecting if g_countdown is changed$/;"	m	struct:__anon316
countdownTime	src/cgame/cg_local.h	/^  int           countdownTime;$/;"	m	struct:__anon249
countdownTime	src/game/g_local.h	/^  int               countdownTime;     \/\/ restart match at this time$/;"	m	struct:__anon316
counts	src/tools/lcc/src/profio.c	/^	struct count *counts;		\/* count data *\/$/;"	m	struct:file	typeref:struct:file::count	file:
covered	src/server/sqlite3.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
cp	src/game/bg_lib.c	/^cp      =  9.6179670095e-01, \/* 0x3f76384f =2\/(3ln2) *\/$/;"	v	file:
cp	src/tools/lcc/src/input.c	/^unsigned char *cp;	\/* current input character *\/$/;"	v
cp_h	src/game/bg_lib.c	/^cp_h    =  9.6179199219e-01, \/* 0x3f763800 =head of cp *\/$/;"	v	file:
cp_l	src/game/bg_lib.c	/^cp_l    =  4.7017383622e-06, \/* 0x369dc3a0 =tail of cp_h *\/$/;"	v	file:
cplane_s	src/qcommon/q_shared.h	/^typedef struct cplane_s {$/;"	s
cplane_t	src/qcommon/q_shared.h	/^} cplane_t;$/;"	t	typeref:struct:cplane_s
cpp	src/tools/lcc/etc/bytecode.c	/^char *cpp[] = { "q3cpp" BINEXT,$/;"	v
cpuFeatures_t	src/qcommon/qcommon.h	/^} cpuFeatures_t;$/;"	t	typeref:enum:__anon426
cput	src/tools/lcc/src/lex.c	/^static void *cput(int c, void *cl) {$/;"	f	file:
cr0	src/qcommon/vm_powerpc_asm.h	98;"	d
cr1	src/qcommon/vm_powerpc_asm.h	99;"	d
cr2	src/qcommon/vm_powerpc_asm.h	100;"	d
cr3	src/qcommon/vm_powerpc_asm.h	101;"	d
cr4	src/qcommon/vm_powerpc_asm.h	102;"	d
cr5	src/qcommon/vm_powerpc_asm.h	103;"	d
cr6	src/qcommon/vm_powerpc_asm.h	104;"	d
cr7	src/qcommon/vm_powerpc_asm.h	105;"	d
crandom	src/qcommon/q_shared.h	730;"	d
crctable	src/tools/asm/cmdlib.c	/^static unsigned short crctable[256] =$/;"	v	file:
createAggContext	src/server/sqlite3.c	/^static SQLITE_NOINLINE void *createAggContext(sqlite3_context *p, int nByte){$/;"	f	file:
createCollation	src/server/sqlite3.c	/^static int createCollation($/;"	f	file:
createMask	src/server/sqlite3.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createModule	src/server/sqlite3.c	/^static int createModule($/;"	f	file:
createTableStmt	src/server/sqlite3.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
create_collation	src/server/sqlite3.c	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation16	src/server/sqlite3.c	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation_v2	src/server/sqlite3.c	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function	src/server/sqlite3.c	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function16	src/server/sqlite3.c	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function_v2	src/server/sqlite3.c	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_module	src/server/sqlite3.c	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	file:
create_module_v2	src/server/sqlite3.c	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines	file:
creator	src/game/g_local.h	/^  gentity_t     *creator;$/;"	m	struct:zap_s
credit	src/game/g_local.h	/^  int                 credit;$/;"	m	struct:__anon311
credits	src/game/g_local.h	/^  int               credits;$/;"	m	struct:namelog_s
credits	src/game/g_local.h	/^  int               credits[ MAX_CLIENTS ];     \/\/ human credits for each client$/;"	m	struct:gentity_s
creepShader	src/cgame/cg_local.h	/^  qhandle_t   creepShader;$/;"	m	struct:__anon251
creepSize	src/game/bg_public.h	/^  int           creepSize;$/;"	m	struct:__anon353
creepTest	src/game/bg_public.h	/^  qboolean      creepTest;$/;"	m	struct:__anon353
crossHair	src/cgame/cg_local.h	/^  qhandle_t         crossHair;$/;"	m	struct:weaponInfo_s
crossHairSize	src/cgame/cg_local.h	/^  int               crossHairSize;$/;"	m	struct:weaponInfo_s
crosshairBuildable	src/cgame/cg_local.h	/^  int           crosshairBuildable;$/;"	m	struct:__anon249
crosshairClientNum	src/cgame/cg_local.h	/^  int           crosshairClientNum;$/;"	m	struct:__anon249
crosshairClientTime	src/cgame/cg_local.h	/^  int           crosshairClientTime;$/;"	m	struct:__anon249
crosshairEnemyTime	src/cgame/cg_local.h	/^  int           crosshairEnemyTime;$/;"	m	struct:__anon249
crosshairShader	src/cgame/cg_local.h	/^  qhandle_t   crosshairShader[ WP_NUM_WEAPONS ];$/;"	m	struct:__anon251
crouch	src/game/g_local.h	/^  qboolean  crouch;$/;"	m	struct:damageRegion_s
crouchMaxs	src/game/bg_public.h	/^  vec3_t    crouchMaxs;$/;"	m	struct:__anon350
crouchViewheight	src/game/bg_public.h	/^  int       crouchViewheight;$/;"	m	struct:__anon350
crt_hash_ind	src/master/servers.c	/^static int crt_hash_ind = -1;$/;"	v	file:
crt_server	src/master/servers.c	/^static server_t* crt_server = NULL;$/;"	v	file:
crt_time	src/master/master.c	/^time_t crt_time;$/;"	v
csUpdated	src/server/server.h	/^	qboolean		csUpdated[MAX_CONFIGSTRINGS];$/;"	m	struct:client_s
cse	src/tools/lcc/src/c.h	/^			Node cse;$/;"	m	struct:symbol::__anon296::__anon302
csr	src/server/sqlite3.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
csrflags	src/server/sqlite3.c	/^  int csrflags;                   \/* Mask of cursor flags (see below) *\/$/;"	m	struct:Fts5Cursor	file:
ctimeFunc	src/server/sqlite3.c	/^static void ctimeFunc($/;"	f	file:
ctimestampFunc	src/server/sqlite3.c	/^static void ctimestampFunc($/;"	f	file:
ctrlFlags	src/server/sqlite3.c	/^  u8 ctrlFlags;           \/* Flags.  See WINFILE_* below *\/$/;"	m	struct:winFile	file:
ctrlFlags	src/server/sqlite3.c	/^  unsigned short int ctrlFlags;       \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
ctype	src/tools/lcc/cpp/eval.c	/^	char	ctype;$/;"	m	struct:pri	file:
cubeSide	src/renderergl2/tr_local.h	/^	int cubeSide;$/;"	m	struct:__anon76
cubemapIndex	src/renderergl2/tr_local.h	/^	int                 cubemapIndex;$/;"	m	struct:drawSurf_s
cubemapIndex	src/renderergl2/tr_local.h	/^	int                 cubemapIndex;$/;"	m	struct:msurface_s
cubemapIndex	src/renderergl2/tr_local.h	/^	int         cubemapIndex;$/;"	m	struct:shaderCommands_s
cubemapOrigins	src/renderergl2/tr_local.h	/^	vec3_t                  *cubemapOrigins;$/;"	m	struct:__anon63
cubemaps	src/renderergl2/tr_local.h	/^	image_t                 **cubemaps;$/;"	m	struct:__anon63
cullBounds	src/renderergl2/tr_local.h	/^	vec3_t			cullBounds[2];$/;"	m	struct:srfBspSurface_s
cullOnStartSolid	src/cgame/cg_local.h	/^  qboolean        cullOnStartSolid;$/;"	m	struct:baseParticle_s
cullOrigin	src/renderergl2/tr_local.h	/^	vec3_t			cullOrigin;$/;"	m	struct:srfBspSurface_s
cullPlane	src/renderergl2/tr_local.h	/^	cplane_t        cullPlane;$/;"	m	struct:srfBspSurface_s
cullPlane	src/renderergl2/tr_local.h	/^	cplane_t cullPlane;$/;"	m	struct:pshadow_s
cullRadius	src/renderergl2/tr_local.h	/^	float			cullRadius;$/;"	m	struct:srfBspSurface_s
cullType	src/renderergl1/tr_local.h	/^	cullType_t	cullType;				\/\/ CT_FRONT_SIDED, CT_BACK_SIDED, or CT_TWO_SIDED$/;"	m	struct:shader_s
cullType	src/renderergl2/tr_local.h	/^	cullType_t	cullType;				\/\/ CT_FRONT_SIDED, CT_BACK_SIDED, or CT_TWO_SIDED$/;"	m	struct:shader_s
cullType_t	src/renderergl1/tr_local.h	/^} cullType_t;$/;"	t	typeref:enum:__anon143
cullType_t	src/renderergl2/tr_local.h	/^} cullType_t;$/;"	t	typeref:enum:__anon27
cullinfo	src/renderergl2/tr_local.h	/^	cullinfo_t          cullinfo;$/;"	m	struct:msurface_s
cullinfo_s	src/renderergl2/tr_local.h	/^typedef struct cullinfo_s {$/;"	s
cullinfo_t	src/renderergl2/tr_local.h	/^} cullinfo_t;$/;"	t	typeref:struct:cullinfo_s
curFlags	src/server/sqlite3.c	/^  u8 curFlags;              \/* zero or more BTCF_* flags defined below *\/$/;"	m	struct:BtCursor	file:
curGain	src/client/snd_openal.c	/^	float		curGain;		\/\/ gain employed if source is within maxdistance.$/;"	m	struct:src_s	file:
curIntKey	src/server/sqlite3.c	/^  u8 curIntKey;             \/* Value of apPage[0]->intKey *\/$/;"	m	struct:BtCursor	file:
curPagerFlags	src/server/sqlite3.c	/^  u8 curPagerFlags;         \/* Flags to send to sqlite3PagerGet() *\/$/;"	m	struct:BtCursor	file:
curWeaponClass	src/cgame/cg_local.h	/^  int         curWeaponClass;             \/\/ sends current weapon for H, current class for A$/;"	m	struct:__anon243
curgroup	src/qcommon/net_ip.c	/^static struct ipv6_mreq curgroup;$/;"	v	typeref:struct:ipv6_mreq	file:
current	src/client/cl_console.c	/^	int		current;		\/\/ line where next message will be printed$/;"	m	struct:__anon102	file:
current	src/client/cl_scrn.c	/^static	int			current;$/;"	v	file:
current	src/server/sqlite3.c	/^  Stat4Sample current;      \/* Current row as a Stat4Sample *\/$/;"	m	struct:Stat4Accum	file:
currentAngles	src/game/g_public.h	/^  vec3_t    currentAngles;$/;"	m	struct:__anon361
currentArgOffset	src/tools/asm/q3asm.c	/^int		currentArgOffset;		\/\/ byte offset in currentArgs to store next arg, reset each call$/;"	v
currentArgs	src/tools/asm/q3asm.c	/^int		currentArgs;			\/\/ bytes of largest argument list called from this function$/;"	v
currentCount	src/server/sqlite3.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentEntity	src/renderergl1/tr_local.h	/^	trRefEntity_t			*currentEntity;$/;"	m	struct:__anon163
currentEntity	src/renderergl1/tr_local.h	/^	trRefEntity_t	*currentEntity;$/;"	m	struct:__anon162
currentEntity	src/renderergl2/tr_local.h	/^	trRefEntity_t			*currentEntity;$/;"	m	struct:__anon63
currentEntity	src/renderergl2/tr_local.h	/^	trRefEntity_t	*currentEntity;$/;"	m	struct:__anon62
currentEntityNum	src/renderergl1/tr_local.h	/^	int						currentEntityNum;$/;"	m	struct:__anon163
currentEntityNum	src/renderergl2/tr_local.h	/^	int						currentEntityNum;$/;"	m	struct:__anon63
currentFBO	src/renderergl2/tr_local.h	/^	FBO_t          *currentFBO;$/;"	m	struct:__anon57
currentFileIndex	src/tools/asm/q3asm.c	/^int		currentFileIndex;$/;"	v
currentFileLine	src/tools/asm/q3asm.c	/^int		currentFileLine;$/;"	v
currentFileName	src/tools/asm/q3asm.c	/^char	*currentFileName;$/;"	v
currentFoundPlayerServer	src/ui/ui_local.h	/^  int currentFoundPlayerServer;$/;"	m	struct:__anon518
currentHandle	src/client/cl_cin.c	/^	int					currentHandle;$/;"	m	struct:__anon99	file:
currentHandle	src/client/cl_cin.c	/^static int				currentHandle = -1;$/;"	v	file:
currentLocals	src/tools/asm/q3asm.c	/^int		currentLocals;			\/\/ bytes of locals needed by this function$/;"	v
currentModel	src/renderergl1/tr_local.h	/^	model_t					*currentModel;$/;"	m	struct:__anon163
currentModel	src/renderergl2/tr_local.h	/^	model_t					*currentModel;$/;"	m	struct:__anon63
currentNode	src/game/g_maprotation.c	/^  int     currentNode;$/;"	m	struct:mapRotation_s	file:
currentOrigin	src/game/g_public.h	/^  vec3_t    currentOrigin;$/;"	m	struct:__anon361
currentOut	src/server/sqlite3.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentProgram	src/renderergl2/tr_local.h	/^	shaderProgram_t *currentProgram;$/;"	m	struct:__anon57
currentSegment	src/tools/asm/q3asm.c	/^segment_t	*currentSegment;$/;"	v
currentServer	src/ui/ui_local.h	/^  int    currentServer;$/;"	m	struct:serverStatus_s
currentServerCinematic	src/ui/ui_local.h	/^  int    currentServerCinematic;$/;"	m	struct:serverStatus_s
currentServerPreview	src/ui/ui_local.h	/^  qhandle_t currentServerPreview;$/;"	m	struct:serverStatus_s
currentStageIteratorFunc	src/renderergl1/tr_local.h	/^	void		(*currentStageIteratorFunc)( void );$/;"	m	struct:shaderCommands_s
currentStageIteratorFunc	src/renderergl2/tr_local.h	/^	void		(*currentStageIteratorFunc)( void );$/;"	m	struct:shaderCommands_s
currentState	src/cgame/cg_local.h	/^  entityState_t         currentState;     \/\/ from cg.frame$/;"	m	struct:centity_s
currentTimeFunc	src/server/sqlite3.c	/^static void currentTimeFunc($/;"	f	file:
currentVM	src/qcommon/vm.c	/^vm_t	*currentVM = NULL;$/;"	v
currentValid	src/cgame/cg_local.h	/^  qboolean              currentValid;     \/\/ true if cg.frame holds this entity$/;"	m	struct:centity_s
currentVao	src/renderergl2/tr_local.h	/^	vao_t          *currentVao;$/;"	m	struct:__anon57
currentfile	src/tools/lcc/src/main.c	/^static char *currentfile;       \/* current file name *\/$/;"	v	file:
currentline	src/tools/lcc/src/main.c	/^static int currentline;		\/* current line number *\/$/;"	v	file:
currentlyInterpreting	src/qcommon/vm_local.h	/^	qboolean	currentlyInterpreting;$/;"	m	struct:vm_s
currentping	src/ui/ui_local.h	/^  int    currentping;$/;"	m	struct:serverStatus_s
currenttextures	src/renderergl1/tr_local.h	/^	int			currenttextures[2];$/;"	m	struct:__anon160
currenttextures	src/renderergl2/tr_local.h	/^	int			currenttextures[NUM_TEXTURE_BUNDLES];$/;"	m	struct:__anon57
currenttmu	src/renderergl1/tr_local.h	/^	int			currenttmu;$/;"	m	struct:__anon160
currenttmu	src/renderergl2/tr_local.h	/^	int			currenttmu;$/;"	m	struct:__anon57
curseg	src/tools/lcc/src/init.c	/^static int curseg;		\/* current segment *\/$/;"	v	file:
cursize	src/qcommon/cmd.c	/^	int		cursize;$/;"	m	struct:__anon446	file:
cursize	src/qcommon/qcommon.h	/^	int		cursize;$/;"	m	struct:__anon418
cursor	src/cgame/cg_local.h	/^  qhandle_t   cursor;$/;"	m	struct:__anon251
cursor	src/qcommon/qcommon.h	/^	int		cursor;$/;"	m	struct:__anon425
cursor	src/ui/ui_shared.h	/^  qhandle_t cursor;$/;"	m	struct:__anon504
cursor	src/ui/ui_shared.h	/^  qhandle_t cursor;$/;"	m	struct:__anon506
cursorHoldsMutex	src/server/sqlite3.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cursorItem	src/ui/ui_shared.h	/^  int cursorItem;                    \/\/ which item as the cursor$/;"	m	struct:__anon503
cursorOwnsBtShared	src/server/sqlite3.c	/^static int cursorOwnsBtShared(BtCursor *p){$/;"	f	file:
cursorPos	src/ui/ui_shared.h	/^  int cursorPos;                 \/\/ cursor position in characters$/;"	m	struct:itemDef_s
cursorPos	src/ui/ui_shared.h	/^  int cursorPos;$/;"	m	struct:cycleDef_s
cursorPos	src/ui/ui_shared.h	/^  int cursorPos;$/;"	m	struct:listBoxDef_s
cursorStr	src/ui/ui_shared.h	/^  const char *cursorStr;$/;"	m	struct:__anon504
cursorX	src/cgame/cg_local.h	/^  int           cursorX;$/;"	m	struct:__anon253
cursorY	src/cgame/cg_local.h	/^  int           cursorY;$/;"	m	struct:__anon253
cursorx	src/ui/ui_shared.h	/^  float      cursorx;$/;"	m	struct:__anon506
cursory	src/ui/ui_shared.h	/^  float      cursory;$/;"	m	struct:__anon506
cursource	src/tools/lcc/cpp/cpp.c	/^Source	*cursource;$/;"	v
curtime	src/sys/sys_unix.c	/^int curtime;$/;"	v
curtime	src/tools/lcc/cpp/cpp.c	/^char	*curtime;$/;"	v
customFootsteps	src/cgame/cg_local.h	/^  sfxHandle_t customFootsteps[ 4 ];$/;"	m	struct:__anon243
customMetalFootsteps	src/cgame/cg_local.h	/^  sfxHandle_t customMetalFootsteps[ 4 ];$/;"	m	struct:__anon243
customShader	src/renderercommon/tr_types.h	/^	qhandle_t	customShader;		\/\/ use one image for the entire thing$/;"	m	struct:__anon114
customSkin	src/renderercommon/tr_types.h	/^	qhandle_t	customSkin;			\/\/ NULL for default skin$/;"	m	struct:__anon114
cv_alienBuildPoints	src/game/g_main.c	/^static char cv_alienBuildPoints[ MAX_CVAR_VALUE_STRING ];$/;"	v	file:
cv_alienMaxStage	src/game/g_main.c	/^static char cv_alienMaxStage[ MAX_CVAR_VALUE_STRING ];$/;"	v	file:
cv_gravity	src/game/g_main.c	/^static char cv_gravity[ MAX_CVAR_VALUE_STRING ];$/;"	v	file:
cv_humanBuildPoints	src/game/g_main.c	/^static char cv_humanBuildPoints[ MAX_CVAR_VALUE_STRING ];$/;"	v	file:
cv_humanMaxStage	src/game/g_main.c	/^static char cv_humanMaxStage[ MAX_CVAR_VALUE_STRING ];$/;"	v	file:
cv_humanRepeaterBuildPoints	src/game/g_main.c	/^static char cv_humanRepeaterBuildPoints[ MAX_CVAR_VALUE_STRING ];$/;"	v	file:
cvar	src/ui/ui_shared.h	/^  const char *cvar;              \/\/ associated cvar$/;"	m	struct:itemDef_s
cvarFlags	src/cgame/cg_main.c	/^  int       cvarFlags;$/;"	m	struct:__anon260	file:
cvarFlags	src/game/g_main.c	/^  int       cvarFlags;$/;"	m	struct:__anon371	file:
cvarFlags	src/ui/ui_main.c	/^  int     cvarFlags;$/;"	m	struct:__anon490	file:
cvarFlags	src/ui/ui_shared.h	/^  int cvarFlags;                 \/\/  what type of action to take on cvarenables$/;"	m	struct:itemDef_s
cvarHandle_t	src/qcommon/q_shared.h	/^typedef int	cvarHandle_t;$/;"	t
cvarList	src/ui/ui_shared.h	/^  const char *cvarList[MAX_MULTI_CVARS];$/;"	m	struct:multiDef_s
cvarName	src/cgame/cg_main.c	/^  char      *cvarName;$/;"	m	struct:__anon260	file:
cvarName	src/game/g_main.c	/^  char      *cvarName;$/;"	m	struct:__anon371	file:
cvarName	src/ui/ui_main.c	/^  char    *cvarName;$/;"	m	struct:__anon490	file:
cvarStr	src/ui/ui_shared.h	/^  const char *cvarStr[MAX_MULTI_CVARS];$/;"	m	struct:multiDef_s
cvarTable	src/cgame/cg_main.c	/^static cvarTable_t cvarTable[ ] =$/;"	v	file:
cvarTable	src/ui/ui_main.c	/^static cvarTable_t    cvarTable[ ] =$/;"	v	file:
cvarTableSize	src/cgame/cg_main.c	/^static size_t cvarTableSize = ARRAY_LEN( cvarTable );$/;"	v	file:
cvarTableSize	src/ui/ui_main.c	/^static size_t cvarTableSize = ARRAY_LEN( cvarTable );$/;"	v	file:
cvarTable_t	src/cgame/cg_main.c	/^} cvarTable_t;$/;"	t	typeref:struct:__anon260	file:
cvarTable_t	src/game/g_main.c	/^} cvarTable_t;$/;"	t	typeref:struct:__anon371	file:
cvarTable_t	src/ui/ui_main.c	/^cvarTable_t;$/;"	t	typeref:struct:__anon490	file:
cvarTest	src/ui/ui_shared.h	/^  const char *cvarTest;          \/\/ associated cvar for enable actions$/;"	m	struct:itemDef_s
cvarValue	src/ui/ui_shared.h	/^  float cvarValue[MAX_MULTI_CVARS];$/;"	m	struct:multiDef_s
cvar_cheats	src/qcommon/cvar.c	/^cvar_t		*cvar_cheats;$/;"	v
cvar_indexes	src/qcommon/cvar.c	/^cvar_t		cvar_indexes[MAX_CVARS];$/;"	v
cvar_modifiedFlags	src/qcommon/cvar.c	/^int			cvar_modifiedFlags;$/;"	v
cvar_numIndexes	src/qcommon/cvar.c	/^int			cvar_numIndexes;$/;"	v
cvar_s	src/qcommon/q_shared.h	/^struct cvar_s {$/;"	s
cvar_t	src/qcommon/q_shared.h	/^typedef struct cvar_s cvar_t;$/;"	t	typeref:struct:cvar_s
cvar_vars	src/qcommon/cvar.c	/^cvar_t		*cvar_vars = NULL;$/;"	v
cvtconst	src/tools/lcc/src/dag.c	/^Tree cvtconst(Tree p) {$/;"	f
cycle	src/ui/ui_shared.h	/^    cycleDef_t     *cycle;$/;"	m	union:itemDef_s::__anon502
cycleDef_s	src/ui/ui_shared.h	/^typedef struct cycleDef_s$/;"	s
cycleDef_t	src/ui/ui_shared.h	/^cycleDef_t;$/;"	t	typeref:struct:cycleDef_s
cycles	src/server/sqlite3.c	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp	file:
d	src/qcommon/common.c	/^	zonedebug_t d;$/;"	m	struct:memblock_s	file:
d	src/tools/lcc/src/alloc.c	/^	double d;$/;"	m	union:align	file:
d	src/tools/lcc/src/c.h	/^	double d;$/;"	m	union:value
dLightColor	src/cgame/cg_local.h	/^  byte            dLightColor[ 3 ];$/;"	m	struct:baseParticle_s
dLightRadius	src/cgame/cg_local.h	/^  pLerpValues_t     dLightRadius;$/;"	m	struct:particle_s
dLightRadius	src/cgame/cg_local.h	/^  pLerpValues_t   dLightRadius;$/;"	m	struct:baseParticle_s
daemon_mode	src/master/master.c	/^static qboolean daemon_mode = qfalse;$/;"	v	file:
dag	src/tools/lcc/src/dag.c	/^static struct dag {$/;"	s	file:
dagnode	src/tools/lcc/src/dag.c	/^static struct dag *dagnode(int op, Node l, Node r, Symbol sym) {$/;"	f	file:
dalign	src/tools/lcc/src/gen.c	/^int dalign, salign;$/;"	v
damage	src/game/g_local.h	/^  int               damage;$/;"	m	struct:gentity_s
damageCount	src/cgame/cg_local.h	/^	int			damageCount;$/;"	m	struct:__anon256
damageCount	src/client/client.h	/^	int			damageCount;$/;"	m	struct:alternatePlayerState_s
damageCount	src/qcommon/msg.c	/^	int			damageCount;$/;"	m	struct:alternatePlayerState_s	file:
damageCount	src/qcommon/q_shared.h	/^	int			damageCount;$/;"	m	struct:playerState_s
damageDroppedBuildable	src/game/g_local.h	/^  qboolean          damageDroppedBuildable;$/;"	m	struct:gentity_s
damageEvent	src/cgame/cg_local.h	/^	int			damageEvent;	\/\/ when it changes, latch the other parms$/;"	m	struct:__anon256
damageEvent	src/client/client.h	/^	int			damageEvent;	\/\/ when it changes, latch the other parms$/;"	m	struct:alternatePlayerState_s
damageEvent	src/qcommon/msg.c	/^	int			damageEvent;	\/\/ when it changes, latch the other parms$/;"	m	struct:alternatePlayerState_s	file:
damageEvent	src/qcommon/q_shared.h	/^	int			damageEvent;	\/\/ when it changes, latch the other parms$/;"	m	struct:playerState_s
damagePitch	src/cgame/cg_local.h	/^	int			damagePitch;$/;"	m	struct:__anon256
damagePitch	src/client/client.h	/^	int			damagePitch;$/;"	m	struct:alternatePlayerState_s
damagePitch	src/qcommon/msg.c	/^	int			damagePitch;$/;"	m	struct:alternatePlayerState_s	file:
damagePitch	src/qcommon/q_shared.h	/^	int			damagePitch;$/;"	m	struct:playerState_s
damageRegion_s	src/game/g_local.h	/^typedef struct damageRegion_s$/;"	s
damageRegion_t	src/game/g_local.h	/^} damageRegion_t;$/;"	t	typeref:struct:damageRegion_s
damageTime	src/cgame/cg_local.h	/^  float         damageTime;$/;"	m	struct:__anon249
damageValue	src/cgame/cg_local.h	/^  float         damageX, damageY, damageValue;$/;"	m	struct:__anon249
damageX	src/cgame/cg_local.h	/^  float         damageX, damageY, damageValue;$/;"	m	struct:__anon249
damageY	src/cgame/cg_local.h	/^  float         damageX, damageY, damageValue;$/;"	m	struct:__anon249
damageYaw	src/cgame/cg_local.h	/^	int			damageYaw;$/;"	m	struct:__anon256
damageYaw	src/client/client.h	/^	int			damageYaw;$/;"	m	struct:alternatePlayerState_s
damageYaw	src/qcommon/msg.c	/^	int			damageYaw;$/;"	m	struct:alternatePlayerState_s	file:
damageYaw	src/qcommon/q_shared.h	/^	int			damageYaw;$/;"	m	struct:playerState_s
damage_armor	src/game/g_local.h	/^  int                 damage_armor;     \/\/ damage absorbed by armor$/;"	m	struct:gclient_s
damage_blood	src/game/g_local.h	/^  int                 damage_blood;     \/\/ damage taken out of health$/;"	m	struct:gclient_s
damage_from	src/game/g_local.h	/^  vec3_t              damage_from;      \/\/ origin for vector calculation$/;"	m	struct:gclient_s
damage_fromWorld	src/game/g_local.h	/^  qboolean            damage_fromWorld; \/\/ if true, don't use the damage_from vector$/;"	m	struct:gclient_s
damage_knockback	src/game/g_local.h	/^  int                 damage_knockback; \/\/ impact damage$/;"	m	struct:gclient_s
data	src/qcommon/cmd.c	/^	byte	*data;$/;"	m	struct:__anon446	file:
data	src/qcommon/net_chan.c	/^	byte	data[MAX_PACKETLEN];$/;"	m	struct:__anon447	file:
data	src/qcommon/net_chan.c	/^        byte *data;$/;"	m	struct:packetQueue_s	file:
data	src/qcommon/qcommon.h	/^	byte	*data;$/;"	m	struct:__anon418
data	src/qcommon/vm_powerpc.c	/^	unsigned int data[ LOCAL_DATA_CHUNK ];$/;"	m	struct:local_data_s	file:
data	src/qcommon/vm_powerpc.c	/^	unsigned int data[0];$/;"	m	struct:VM_Data	file:
data	src/qcommon/vm_sparc.c	/^	unsigned int data[0];$/;"	m	struct:VM_Data	file:
data	src/qcommon/vm_sparc.c	/^	unsigned int data[HUNK_SIZE];$/;"	m	struct:data_hunk	file:
data	src/renderercommon/tr_image_pcx.c	/^	unsigned char	data[];$/;"	m	struct:__anon124	file:
data	src/renderergl1/tr_local.h	/^	iqmData_t	*data;$/;"	m	struct:srfIQModel_s
data	src/renderergl1/tr_local.h	/^	surfaceType_t		*data;			\/\/ any of srf*_t$/;"	m	struct:msurface_s
data	src/renderergl1/tr_local.h	/^	void	*data;$/;"	m	struct:__anon167
data	src/renderergl2/tr_local.h	/^	iqmData_t	*data;$/;"	m	struct:srfIQModel_s
data	src/renderergl2/tr_local.h	/^	surfaceType_t		*data;			\/\/ any of srf*_t$/;"	m	struct:msurface_s
data	src/renderergl2/tr_local.h	/^	void	*data;$/;"	m	struct:__anon67
data	src/server/server.h	/^	byte data[1024];$/;"	m	struct:voipServerPacket_s
data	src/server/sqlite3.c	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem	file:
data	src/server/sqlite3.c	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
data	src/tools/asm/cmdlib.h	/^	void	*data;$/;"	m	struct:__anon262
data	src/tools/asm/q3asm.c	/^  void *data;$/;"	m	struct:hashchain_s	file:
data	src/ui/ui_shared.h	/^    void           *data;$/;"	m	union:itemDef_s::__anon502
dataBase	src/qcommon/vm_local.h	/^	byte		*dataBase;$/;"	m	struct:vm_s
dataCount	src/qcommon/q_shared.h	/^	int			dataCount;$/;"	m	struct:__anon474
dataLength	src/qcommon/qfiles.h	/^	int		dataLength;$/;"	m	struct:__anon387
dataLength	src/qcommon/vm_powerpc.c	/^	size_t dataLength;$/;"	m	struct:VM_Data	file:
dataLength	src/qcommon/vm_sparc.c	/^	unsigned int dataLength;$/;"	m	struct:VM_Data	file:
dataMask	src/qcommon/vm_local.h	/^	int			dataMask;$/;"	m	struct:vm_s
dataMask	src/qcommon/vm_powerpc.c	/^	unsigned int dataMask;$/;"	m	struct:VM_Data	file:
dataOffset	src/qcommon/qfiles.h	/^	int		dataOffset;$/;"	m	struct:__anon387
dataSize	src/renderergl1/tr_local.h	/^	int			dataSize;	\/\/ just for listing purposes$/;"	m	struct:model_s
dataSize	src/renderergl1/tr_local.h	/^	int			dataSize;$/;"	m	struct:__anon157
dataSize	src/renderergl2/tr_local.h	/^	int			dataSize;	\/\/ just for listing purposes$/;"	m	struct:model_s
dataSize	src/renderergl2/tr_local.h	/^	int			dataSize;$/;"	m	struct:__anon49
data_acc	src/qcommon/vm_powerpc.c	/^static long int data_acc = 0;$/;"	v	file:
data_count	src/server/sqlite3.c	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
data_first	src/qcommon/vm_powerpc.c	/^static local_data_t *data_first = NULL;$/;"	v	file:
data_first	src/qcommon/vm_sparc.c	/^	struct data_hunk	*data_first;$/;"	m	struct:func_info	typeref:struct:func_info::data_hunk	file:
data_hunk	src/qcommon/vm_sparc.c	/^struct data_hunk {$/;"	s	file:
data_num	src/qcommon/vm_sparc.c	/^	int			data_num;$/;"	m	struct:func_info	file:
databaseIsUnmoved	src/server/sqlite3.c	/^static int databaseIsUnmoved(Pager *pPager){$/;"	f	file:
database_data	src/game/g_local.h	/^  char              database_data[ DATABASE_DATA_MAX ];$/;"	m	struct:__anon316
datalen	src/qcommon/net_chan.c	/^	int		datalen;$/;"	m	struct:__anon447	file:
dataofs	src/client/snd_codec.h	/^	int dataofs;$/;"	m	struct:snd_info_s
dataofs	src/client/snd_local.h	/^	int			dataofs;		\/\/ chunk starts this many bytes from file start$/;"	m	struct:__anon95
dateFunc	src/server/sqlite3.c	/^static void dateFunc($/;"	f	file:
datetimeFunc	src/server/sqlite3.c	/^static void datetimeFunc($/;"	f	file:
daub4	src/client/snd_wavelet.c	/^void daub4(float b[], unsigned long n, int isign)$/;"	f
db	src/server/sqlite3.c	/^  sqlite3 *db;                    \/* Associated database connection *\/ $/;"	m	struct:Fts5Global	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;                    \/* Database connection *\/$/;"	m	struct:VdbeSorter	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5Config	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5VocabTable	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;              \/* Database connection, for malloc() *\/$/;"	m	struct:Stat4Accum	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:Mem	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon200	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:StatTable	file:
db	src/server/sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
dbArray_t	src/game/g_public.h	/^} dbArray_t;$/;"	t	typeref:enum:__anon365
dbFileSize	src/server/sqlite3.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileVers	src/server/sqlite3.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbHintSize	src/server/sqlite3.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbMain	src/server/sqlite3.c	/^  sqlite3 *dbMain;                \/* target database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbMallocRawFinish	src/server/sqlite3.c	/^static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n){$/;"	f	file:
dbOptFlags	src/server/sqlite3.c	/^  u16 dbOptFlags;               \/* Flags to enable\/disable optimizations *\/$/;"	m	struct:sqlite3	file:
dbOrigSize	src/server/sqlite3.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbPath	src/server/sqlite3.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	src/server/sqlite3.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbRbu	src/server/sqlite3.c	/^  sqlite3 *dbRbu;                 \/* rbu database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbReallocFinish	src/server/sqlite3.c	/^static SQLITE_NOINLINE void *dbReallocFinish(sqlite3 *db, void *p, u64 n){$/;"	f	file:
dbSize	src/server/sqlite3.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbUpdate	src/server/sqlite3.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
db_add_mapstat	src/server/sv_database.c	/^int db_add_mapstat( char *data, int *steps ) {$/;"	f
db_add_seen	src/server/sv_database.c	/^int db_add_seen( char *data, int *steps ) {$/;"	f
db_cacheflush	src/server/sqlite3.c	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_config	src/server/sqlite3.c	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines	file:
db_filename	src/server/sqlite3.c	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
db_get_last_maps	src/server/sv_database.c	/^int db_get_last_maps( char *data, int *steps ) {$/;"	f
db_get_seen	src/server/sv_database.c	/^int db_get_seen( char *data, int *steps ) {$/;"	f
db_get_time	src/server/sv_database.c	/^int db_get_time( char *data, int *steps ) {$/;"	f
db_handle	src/server/sqlite3.c	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
db_mutex	src/server/sqlite3.c	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_readonly	src/server/sqlite3.c	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
db_release_memory	src/server/sqlite3.c	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_status	src/server/sqlite3.c	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
dbrush_t	src/qcommon/qfiles.h	/^} dbrush_t;$/;"	t	typeref:struct:__anon413
dbrushside_t	src/qcommon/qfiles.h	/^} dbrushside_t;$/;"	t	typeref:struct:__anon412
dcc	src/game/g_local.h	/^  int               dcc;                \/\/ number of controlling dccs$/;"	m	struct:gentity_s
dccTest	src/game/bg_public.h	/^  qboolean      dccTest;$/;"	m	struct:__anon353
dclglobal	src/tools/lcc/src/decl.c	/^static Symbol dclglobal(int sclass, char *id, Type ty, Coordinate *pos) {$/;"	f	file:
dcllocal	src/tools/lcc/src/decl.c	/^static Symbol dcllocal(int sclass, char *id, Type ty, Coordinate *pos) {$/;"	f	file:
dclparam	src/tools/lcc/src/decl.c	/^static Symbol dclparam(int sclass, char *id, Type ty, Coordinate *pos) {$/;"	f	file:
dclr	src/tools/lcc/src/decl.c	/^static Type dclr(Type basety, char **id, Symbol **params, int abstract) {$/;"	f	file:
dclr1	src/tools/lcc/src/decl.c	/^static Type dclr1(char **id, Symbol **params, int abstract) {$/;"	f	file:
deadMaxs	src/game/bg_public.h	/^  vec3_t    deadMaxs;$/;"	m	struct:__anon350
deadMins	src/game/bg_public.h	/^  vec3_t    deadMins;$/;"	m	struct:__anon350
deallocate	src/tools/lcc/src/alloc.c	/^void deallocate(unsigned a) {$/;"	f
debug	src/tools/lcc/src/config.h	101;"	d
debug	src/tools/lcc/src/config.h	99;"	d
debug	src/ui/ui_shared.h	/^  qboolean  debug;$/;"	m	struct:__anon506
debugBlock	src/qcommon/cm_patch.c	/^static qboolean		debugBlock;$/;"	v	file:
debugBlockPoints	src/qcommon/cm_patch.c	/^static vec3_t		debugBlockPoints[4];$/;"	v	file:
debugFacet	src/qcommon/cm_patch.c	/^static const facet_t		*debugFacet;$/;"	v	file:
debugLevel	src/game/bg_public.h	/^  int           debugLevel;     \/\/ if set, diagnostic output will be printed$/;"	m	struct:pmove_s
debugMutexAlloc	src/server/sqlite3.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexEnd	src/server/sqlite3.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnter	src/server/sqlite3.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	src/server/sqlite3.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	src/server/sqlite3.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexInit	src/server/sqlite3.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexLeave	src/server/sqlite3.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	src/server/sqlite3.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	src/server/sqlite3.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
debugPatchCollide	src/qcommon/cm_patch.c	/^static const patchCollide_t	*debugPatchCollide;$/;"	v	file:
debuglogfile	src/qcommon/common.c	/^FILE *debuglogfile;$/;"	v
decl	src/tools/lcc/lburg/gram.y	/^decl	: TERMINAL  blist '\\n'$/;"	l
decl	src/tools/lcc/src/decl.c	/^static void decl(Symbol (*dcl)(int, char *, Type, Coordinate *)) {$/;"	f	file:
declareVtab	src/server/sqlite3.c	/^  u8 declareVtab;           \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse	file:
declare_vtab	src/server/sqlite3.c	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
decls	src/tools/lcc/lburg/gram.y	/^decls	: \/* lambda *\/$/;"	l
decode	src/qcommon/puff.c	/^local int32_t decode(struct state *s, struct huffman *h)$/;"	f
decode	src/tools/lcc/lburg/lburg.h	/^	Rule decode;		\/* next rule with same lhs *\/$/;"	m	struct:rule
decodeCodeBook	src/client/cl_cin.c	/^static void decodeCodeBook( byte *input, unsigned short roq_flags )$/;"	f	file:
decodeFlags	src/server/sqlite3.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
decodeIntArray	src/server/sqlite3.c	/^static void decodeIntArray($/;"	f	file:
decodeMuLaw	src/client/snd_wavelet.c	/^void decodeMuLaw(sndBuffer *chunk, short *to) {$/;"	f
decodeWavelet	src/client/snd_wavelet.c	/^void decodeWavelet(sndBuffer *chunk, short *to) {$/;"	f
decode_buffer	src/client/snd_openal.c	/^static byte decode_buffer[MUSIC_BUFFER_SIZE];$/;"	v	file:
decompressor	src/qcommon/qcommon.h	/^	huff_t		decompressor;$/;"	m	struct:__anon433
deconstruct	src/game/g_local.h	/^  qboolean          deconstruct;        \/\/ deconstruct if no BP left$/;"	m	struct:gentity_s
deconstruct	src/game/g_local.h	/^  qboolean     deconstruct;$/;"	m	struct:__anon315
deconstructTime	src/game/g_local.h	/^  int               deconstructTime;    \/\/ time at which structure marked$/;"	m	struct:gentity_s
deconstructTime	src/game/g_local.h	/^  int          deconstructTime;$/;"	m	struct:__anon315
dedicated	src/game/g_svcmds.c	/^  qboolean dedicated;$/;"	m	struct:svcmd	file:
defVal	src/game/g_playmap.h	/^  qboolean defVal;		\/* Whether flag is on by default *\/$/;"	m	struct:playMapFlagDesc_s
defVal	src/ui/ui_shared.h	/^  float defVal;                  \/\/$/;"	m	struct:editFieldDef_s
defaddress	src/tools/lcc/src/bytecode.c	/^static void I(defaddress)(Symbol p) {$/;"	f	file:
defaddress	src/tools/lcc/src/c.h	/^void (*defaddress)(Symbol);$/;"	m	struct:interface
defaddress	src/tools/lcc/src/null.c	/^static void I(defaddress)(Symbol p) {}$/;"	f	file:
defaddress	src/tools/lcc/src/symbolic.c	/^static void I(defaddress)(Symbol p){$/;"	f	file:
defaultAlienSounds	src/cgame/cg_buildable.c	/^static sfxHandle_t defaultAlienSounds[ MAX_BUILDABLE_ANIMATIONS ];$/;"	v	file:
defaultHumanSounds	src/cgame/cg_buildable.c	/^static sfxHandle_t defaultHumanSounds[ MAX_BUILDABLE_ANIMATIONS ];$/;"	v	file:
defaultImage	src/renderergl1/tr_local.h	/^	image_t					*defaultImage;$/;"	m	struct:__anon163
defaultImage	src/renderergl2/tr_local.h	/^	image_t					*defaultImage;$/;"	m	struct:__anon63
defaultShader	src/renderergl1/tr_local.h	/^	qboolean	defaultShader;			\/\/ we want to return index 0 if the shader failed to$/;"	m	struct:shader_s
defaultShader	src/renderergl1/tr_local.h	/^	shader_t				*defaultShader;$/;"	m	struct:__anon163
defaultShader	src/renderergl2/tr_local.h	/^	qboolean	defaultShader;			\/\/ we want to return index 0 if the shader failed to$/;"	m	struct:shader_s
defaultShader	src/renderergl2/tr_local.h	/^	shader_t				*defaultShader;$/;"	m	struct:__anon63
defaultSound	src/client/snd_local.h	/^	qboolean		defaultSound;			\/\/ couldn't be loaded, so use buzz$/;"	m	struct:sfx_s
defaultString	src/cgame/cg_main.c	/^  char      *defaultString;$/;"	m	struct:__anon260	file:
defaultString	src/game/g_main.c	/^  char      *defaultString;$/;"	m	struct:__anon371	file:
defaultString	src/ui/ui_main.c	/^  char    *defaultString;$/;"	m	struct:__anon490	file:
default_punctuations	src/qcommon/parse.c	/^punctuation_t default_punctuations[] =$/;"	v
default_rc	src/server/sqlite3.c	/^  i8 default_rc;      \/* Comparison result if keys are equal *\/$/;"	m	struct:UnpackedRecord	file:
default_sfx	src/client/snd_openal.c	/^static sfxHandle_t default_sfx;$/;"	v	file:
defaultbind1	src/ui/ui_shared.c	/^  int   defaultbind1;$/;"	m	struct:__anon522	file:
defaultbind2	src/ui/ui_shared.c	/^  int   defaultbind2;$/;"	m	struct:__anon522	file:
defaultvalue	src/ui/ui_shared.c	/^  float defaultvalue;$/;"	m	struct:__anon523	file:
defconst	src/tools/lcc/src/bytecode.c	/^static void I(defconst)(int suffix, int size, Value v) {$/;"	f	file:
defconst	src/tools/lcc/src/c.h	/^void (*defconst)  (int suffix, int size, Value v);$/;"	m	struct:interface
defconst	src/tools/lcc/src/null.c	/^static void I(defconst)(int suffix, int size, Value v) {}$/;"	f	file:
defconst	src/tools/lcc/src/symbolic.c	/^static void I(defconst)(int suffix, int size, Value v) {$/;"	f	file:
deferredMoveto	src/server/sqlite3.c	/^  u8 deferredMoveto;    \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor	file:
deferredPlayerLoading	src/cgame/cg_local.h	/^  int           deferredPlayerLoading;$/;"	m	struct:__anon249
defglobal	src/tools/lcc/src/decl.c	/^void defglobal(Symbol p, int seg) {$/;"	f
define_s	src/qcommon/parse.c	/^typedef struct define_s$/;"	s	file:
define_t	src/qcommon/parse.c	/^} define_t;$/;"	t	typeref:struct:define_s	file:
defined	src/tools/lcc/src/c.h	/^	unsigned defined:1;$/;"	m	struct:symbol
definehash	src/qcommon/parse.c	/^  define_t **definehash;        \/\/hash chain with defines$/;"	m	struct:source_s	file:
definelab	src/tools/lcc/src/stmt.c	/^void definelab(int lab) {$/;"	f
definept	src/tools/lcc/src/stmt.c	/^void definept(Coordinate *p) {$/;"	f
defines	src/qcommon/parse.c	/^  define_t *defines;            \/\/list with macro definitions$/;"	m	struct:source_s	file:
definitions	src/tools/lcc/doc/4.html	/^<h2><a NAME="definitions">5.8 Definitions<\/a><\/h2>$/;"	a
deflab	src/tools/lcc/src/c.h	/^			Symbol deflab;$/;"	m	struct:code::__anon291::__anon295
deflab	src/tools/lcc/src/c.h	/^	Symbol deflab;$/;"	m	struct:swtch
deformGen_t	src/renderergl2/tr_local.h	/^} deformGen_t;$/;"	t	typeref:enum:__anon14
deformStage_t	src/renderergl1/tr_local.h	/^} deformStage_t;$/;"	t	typeref:struct:__anon139
deformStage_t	src/renderergl2/tr_local.h	/^} deformStage_t;$/;"	t	typeref:struct:__anon21
deform_t	src/renderergl1/tr_local.h	/^} deform_t;$/;"	t	typeref:enum:__anon132
deform_t	src/renderergl2/tr_local.h	/^} deform_t;$/;"	t	typeref:enum:__anon13
deformation	src/renderergl1/tr_local.h	/^	deform_t	deformation;			\/\/ vertex coordinate modification type$/;"	m	struct:__anon139
deformation	src/renderergl2/tr_local.h	/^	deform_t	deformation;			\/\/ vertex coordinate modification type$/;"	m	struct:__anon21
deformationSpread	src/renderergl1/tr_local.h	/^	float		deformationSpread;$/;"	m	struct:__anon139
deformationSpread	src/renderergl2/tr_local.h	/^	float		deformationSpread;$/;"	m	struct:__anon21
deformationWave	src/renderergl1/tr_local.h	/^	waveForm_t	deformationWave;$/;"	m	struct:__anon139
deformationWave	src/renderergl2/tr_local.h	/^	waveForm_t	deformationWave;$/;"	m	struct:__anon21
deforms	src/renderergl1/tr_local.h	/^	deformStage_t	deforms[MAX_SHADER_DEFORMS];$/;"	m	struct:shader_s
deforms	src/renderergl2/tr_local.h	/^	deformStage_t	deforms[MAX_SHADER_DEFORMS];$/;"	m	struct:shader_s
defpointer	src/tools/lcc/src/init.c	/^void defpointer(Symbol p) {$/;"	f
defragmentPage	src/server/sqlite3.c	/^static int defragmentPage(MemPage *pPage){$/;"	f	file:
defstring	src/tools/lcc/src/bytecode.c	/^static void I(defstring)(int len, char *str) {$/;"	f	file:
defstring	src/tools/lcc/src/c.h	/^void (*defstring)(int n, char *s);$/;"	m	struct:interface
defstring	src/tools/lcc/src/null.c	/^static void I(defstring)(int len, char *s) {}$/;"	f	file:
defstring	src/tools/lcc/src/symbolic.c	/^static void I(defstring)(int len, char *s) {$/;"	f	file:
defsymbol	src/tools/lcc/src/bytecode.c	/^static void I(defsymbol)(Symbol p) {$/;"	f	file:
defsymbol	src/tools/lcc/src/c.h	/^void (*defsymbol)(Symbol);$/;"	m	struct:interface
defsymbol	src/tools/lcc/src/null.c	/^static void I(defsymbol)(Symbol p) {}$/;"	f	file:
defsymbol	src/tools/lcc/src/symbolic.c	/^static void I(defsymbol)(Symbol p) {$/;"	f	file:
delay	src/cgame/cg_local.h	/^  int   delay;$/;"	m	struct:pLerpValues_s
delayRandFrac	src/cgame/cg_local.h	/^  float delayRandFrac;$/;"	m	struct:pLerpValues_s
deleteCell	src/server/sqlite3.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
deleted	src/tools/lcc/cpp/cpp.h	/^	char	deleted;$/;"	m	struct:includelist
delim	src/server/sqlite3.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
deltaMessage	src/server/server.h	/^	int				deltaMessage;		\/\/ frame last client usercmd message$/;"	m	struct:client_s
deltaNum	src/client/client.h	/^	int				deltaNum;		\/\/ messageNum the delta is from$/;"	m	struct:__anon84
delta_angles	src/cgame/cg_local.h	/^	int			delta_angles[3];	\/\/ add to command angles to get view direction$/;"	m	struct:__anon256
delta_angles	src/client/client.h	/^	int			delta_angles[3];	\/\/ add to command angles to get view direction$/;"	m	struct:alternatePlayerState_s
delta_angles	src/qcommon/msg.c	/^	int			delta_angles[3];	\/\/ add to command angles to get view direction$/;"	m	struct:alternatePlayerState_s	file:
delta_angles	src/qcommon/q_shared.h	/^	int			delta_angles[3];	\/\/ add to command angles to get view direction$/;"	m	struct:playerState_s
deltayaw	src/game/g_mover.c	/^  float deltayaw;$/;"	m	struct:__anon319	file:
deluxemaps	src/renderergl2/tr_local.h	/^	image_t					**deluxemaps;$/;"	m	struct:__anon63
demoCount	src/ui/ui_local.h	/^  int demoCount;$/;"	m	struct:__anon518
demoIndex	src/ui/ui_local.h	/^  int demoIndex;$/;"	m	struct:__anon518
demoList	src/ui/ui_local.h	/^  const char *demoList[MAX_DEMOS];$/;"	m	struct:__anon518
demoName	src/client/cl_main.c	/^static char		demoName[MAX_QPATH];	\/\/ compiler bug workaround$/;"	v	file:
demoName	src/client/client.h	/^	char		demoName[MAX_QPATH];$/;"	m	struct:__anon87
demoPlayback	src/cgame/cg_local.h	/^  qboolean      demoPlayback;$/;"	m	struct:__anon249
demoState_t	src/qcommon/q_shared.h	/^} demoState_t;$/;"	t	typeref:enum:__anon481
demo_protocols	src/qcommon/common.c	/^int demo_protocols[] =$/;"	v
demofile	src/client/client.h	/^	fileHandle_t	demofile;$/;"	m	struct:__anon87
demoplaying	src/client/client.h	/^	qboolean	demoplaying;$/;"	m	struct:__anon87
demorecording	src/client/client.h	/^	qboolean	demorecording;$/;"	m	struct:__anon87
demowaiting	src/client/client.h	/^	qboolean	demowaiting;	\/\/ don't record until a non-delta message is received$/;"	m	struct:__anon87
den	src/tools/lcc/src/stmt.c	6;"	d	file:
density	src/tools/lcc/src/stmt.c	/^float density = 0.5;$/;"	v
denyBuild	src/game/g_local.h	/^  qboolean          denyBuild;$/;"	m	struct:namelog_s
depth	src/tools/lcc/src/dag.c	/^static int depth = 0;$/;"	v	file:
depthBits	src/renderercommon/tr_types.h	/^	int						colorBits, depthBits, stencilBits;$/;"	m	struct:__anon120
depthBlurShader	src/renderergl2/tr_local.h	/^	shaderProgram_t depthBlurShader[2];$/;"	m	struct:__anon63
depthBuffer	src/renderergl2/tr_fbo.h	/^	uint32_t        depthBuffer;$/;"	m	struct:FBO_s
depthClamp	src/renderergl2/tr_local.h	/^	qboolean depthClamp;$/;"	m	struct:__anon60
depthFbo	src/renderergl2/tr_local.h	/^	FBO_t					*depthFbo;$/;"	m	struct:__anon63
depthFill	src/renderergl2/tr_local.h	/^	qboolean    depthFill;$/;"	m	struct:__anon62
depthForOpaque	src/renderergl1/tr_local.h	/^	float	depthForOpaque;$/;"	m	struct:__anon146
depthForOpaque	src/renderergl2/tr_local.h	/^	float	depthForOpaque;$/;"	m	struct:__anon30
depthFormat	src/renderergl2/tr_fbo.h	/^	int             depthFormat;$/;"	m	struct:FBO_s
deref	src/tools/lcc/src/types.c	/^Type deref(Type ty) {$/;"	f
desc	src/game/g_admin.h	/^  char desc[ 50 ];$/;"	m	struct:g_admin_command
desc	src/server/sqlite3.c	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
desc	src/server/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
description	src/client/libmumblelink.c	/^	wchar_t description[2048];$/;"	m	struct:__anon104	file:
description	src/game/g_admin.c	/^  char *description;$/;"	m	struct:__anon374	file:
description	src/qcommon/q_shared.h	/^	char			*description;$/;"	m	struct:cvar_s
description	src/ui/ui_local.h	/^  const char *description;$/;"	m	struct:serverFilter_s
deserializeGeometry	src/server/sqlite3.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
dest_instruction	src/qcommon/vm_powerpc.c	/^struct dest_instruction {$/;"	s	file:
dest_instruction_t	src/qcommon/vm_powerpc.c	/^typedef struct dest_instruction dest_instruction_t;$/;"	t	typeref:struct:dest_instruction	file:
destroy	src/qcommon/vm_local.h	/^	void (*destroy)(vm_t* self);$/;"	m	struct:vm_s
destroyRootPage	src/server/sqlite3.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyTable	src/server/sqlite3.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
destroyTime	src/cgame/cg_local.h	/^  int                 destroyTime;$/;"	m	struct:trailSystem_s
detachFunc	src/server/sqlite3.c	/^static void detachFunc($/;"	f	file:
dev	src/server/sqlite3.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
deviceCharacteristics	src/server/sqlite3.c	/^  int deviceCharacteristics;          \/* Precomputed device characteristics *\/$/;"	m	struct:unixFile	file:
deviceSupportsGamma	src/renderercommon/tr_types.h	/^	qboolean				deviceSupportsGamma;$/;"	m	struct:__anon120
dflag	src/tools/lcc/src/gen.c	/^int dflag = 0;$/;"	v
dfltLockMode	src/server/sqlite3.c	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3	file:
dfog_t	src/qcommon/qfiles.h	/^} dfog_t;$/;"	t	typeref:struct:__anon414
dheader_t	src/qcommon/qfiles.h	/^} dheader_t;$/;"	t	typeref:struct:__anon406
di_count	src/qcommon/vm_powerpc.c	/^static unsigned long int di_count = 0;$/;"	v	file:
di_first	src/qcommon/vm_powerpc.c	/^static dest_instruction_t *di_first = NULL, *di_last = NULL;$/;"	v	file:
di_last	src/qcommon/vm_powerpc.c	/^static dest_instruction_t *di_first = NULL, *di_last = NULL;$/;"	v	file:
di_pointers	src/qcommon/vm_powerpc.c	/^static dest_instruction_t **di_pointers = NULL;$/;"	v	file:
dialogResult_t	src/qcommon/qcommon.h	/^} dialogResult_t;$/;"	t	typeref:enum:__anon430
dialogType_t	src/cgame/cg_local.h	/^} dialogType_t;$/;"	t	typeref:enum:__anon259
dialogType_t	src/qcommon/qcommon.h	/^} dialogType_t;$/;"	t	typeref:enum:__anon431
die	src/game/g_local.h	/^  void              (*die)( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod );$/;"	m	struct:gentity_s
diffAnglesPeriod	src/game/bg_public.h	/^  float  diffAnglesPeriod;$/;"	m	struct:__anon330
digit	src/tools/lcc/cpp/eval.c	/^digit(int i)$/;"	f
dir	src/cgame/cg_local.h	/^  vec3_t      dir;$/;"	m	struct:pMoveValues_u
dir	src/qcommon/files.c	/^	directory_t	*dir;$/;"	m	struct:searchpath_s	file:
dirRandAngle	src/cgame/cg_local.h	/^  float       dirRandAngle;$/;"	m	struct:pMoveValues_u
dirType	src/cgame/cg_local.h	/^  pDirType_t  dirType;$/;"	m	struct:pMoveValues_u
directMode	src/server/sqlite3.c	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo	file:
directedLight	src/renderergl1/tr_local.h	/^	vec3_t		directedLight;$/;"	m	struct:__anon128
directedLight	src/renderergl2/tr_local.h	/^	vec3_t		directedLight;$/;"	m	struct:__anon8
directive_s	src/qcommon/parse.c	/^typedef struct directive_s$/;"	s	file:
directive_t	src/qcommon/parse.c	/^} directive_t;$/;"	t	typeref:struct:directive_s	file:
directives	src/qcommon/parse.c	/^directive_t directives[20] =$/;"	v
directory_t	src/qcommon/files.c	/^} directory_t;$/;"	t	typeref:struct:__anon454	file:
dirty	src/client/cl_cin.c	/^	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;$/;"	m	struct:__anon100	file:
disableBlueprintErrors	src/game/g_local.h	/^  qboolean            disableBlueprintErrors; \/\/ should the buildable blueprint never be hidden from the players?$/;"	m	struct:__anon311
disableColor	src/ui/ui_shared.h	/^  vec4_t disableColor;              \/\/ focus color for items$/;"	m	struct:__anon503
disableIn3rdPerson	src/cgame/cg_local.h	/^  qboolean          disableIn3rdPerson;$/;"	m	struct:weaponInfo_s
disableLookaside	src/server/sqlite3.c	/^  u8 disableLookaside; \/* Number of times lookaside has been disabled *\/$/;"	m	struct:Parse	file:
disableLookaside	src/server/sqlite3.c	/^static void disableLookaside(Parse *pParse){$/;"	f	file:
disableTerm	src/server/sqlite3.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTriggers	src/server/sqlite3.c	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse	file:
disable_simulated_io_errors	src/server/sqlite3.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	src/server/sqlite3.c	11420;"	d	file:
disable_simulated_io_errors	src/server/sqlite3.c	47743;"	d	file:
disallow	src/server/sqlite3.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon203	file:
disconnectAllVtab	src/server/sqlite3.c	/^static void disconnectAllVtab(sqlite3 *db){$/;"	f	file:
disconnectPS	src/cgame/cg_local.h	/^  qhandle_t   disconnectPS;$/;"	m	struct:__anon251
disconnectSound	src/cgame/cg_local.h	/^  qhandle_t   disconnectSound;$/;"	m	struct:__anon251
displacement	src/cgame/cg_local.h	/^  vec3_t          displacement;$/;"	m	struct:baseParticle_s
display	src/client/cl_console.c	/^	int		display;		\/\/ bottom of console displays this line$/;"	m	struct:__anon102	file:
displayAspect	src/renderercommon/tr_types.h	/^	float					displayAspect;$/;"	m	struct:__anon120
displayAspect	src/renderergl2/tr_init.c	/^float       displayAspect = 0.0f;$/;"	v
displayComment	src/server/sqlite3.c	/^static int displayComment($/;"	f	file:
displayContextDef_t	src/ui/ui_shared.h	/^displayContextDef_t;$/;"	t	typeref:struct:__anon506
displayFrac	src/client/cl_console.c	/^	float	displayFrac;	\/\/ aproaches finalFrac at scr_conspeed$/;"	m	struct:__anon102	file:
displayFrequency	src/renderercommon/tr_types.h	/^	int						displayFrequency;$/;"	m	struct:__anon120
displayP4	src/server/sqlite3.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
displayP4Expr	src/server/sqlite3.c	/^static void displayP4Expr(StrAccum *p, Expr *pExpr){$/;"	f	file:
displayServers	src/ui/ui_local.h	/^  int    displayServers[MAX_DISPLAY_SERVERS];$/;"	m	struct:serverStatus_s
dist	src/qcommon/q_shared.h	/^	float	dist;$/;"	m	struct:cplane_s
dist	src/qcommon/qfiles.h	/^	float		dist;$/;"	m	struct:__anon409
dist	src/server/sv_world.c	/^	float	dist;$/;"	m	struct:worldSector_s	file:
distances	src/game/g_local.h	/^  float         distances[ LEVEL2_AREAZAP_MAX_TARGETS ];$/;"	m	struct:zap_s
divd	src/tools/lcc/src/simp.c	/^static int divd(double x, double y, double min, double max, int needconst) {$/;"	f	file:
divi	src/tools/lcc/src/simp.c	/^static int divi(long x, long y, long min, long max, int needconst) {$/;"	f	file:
dleaf_t	src/qcommon/qfiles.h	/^} dleaf_t;$/;"	t	typeref:struct:__anon411
dlightBits	src/renderergl1/tr_local.h	/^	int				dlightBits;$/;"	m	struct:__anon153
dlightBits	src/renderergl1/tr_local.h	/^	int				dlightBits;$/;"	m	struct:srfGridMesh_s
dlightBits	src/renderergl1/tr_local.h	/^	int			dlightBits;	\/\/ or together of all vertexDlightBits$/;"	m	struct:shaderCommands_s
dlightBits	src/renderergl1/tr_local.h	/^	int			dlightBits;$/;"	m	struct:__anon152
dlightBits	src/renderergl2/tr_local.h	/^	int				dlightBits;$/;"	m	struct:srfBspSurface_s
dlightBits	src/renderergl2/tr_local.h	/^	int			dlightBits;	\/\/ or together of all vertexDlightBits$/;"	m	struct:shaderCommands_s
dlightImage	src/renderergl1/tr_local.h	/^	image_t					*dlightImage;	\/\/ inverse-quare highlight for projective adding$/;"	m	struct:__anon163
dlightImage	src/renderergl2/tr_local.h	/^	image_t					*dlightImage;	\/\/ inverse-quare highlight for projective adding$/;"	m	struct:__anon63
dlightMask	src/renderergl2/tr_local.h	/^	unsigned int dlightMask;$/;"	m	struct:__anon39
dlightShader	src/renderergl2/tr_local.h	/^	shaderProgram_t dlightShader[DLIGHTDEF_COUNT];$/;"	m	struct:__anon63
dlight_s	src/renderergl1/tr_local.h	/^typedef struct dlight_s {$/;"	s
dlight_s	src/renderergl2/tr_local.h	/^typedef struct dlight_s {$/;"	s
dlight_t	src/renderergl1/tr_local.h	/^} dlight_t;$/;"	t	typeref:struct:dlight_s
dlight_t	src/renderergl2/tr_local.h	/^} dlight_t;$/;"	t	typeref:struct:dlight_s
dlights	src/renderergl1/tr_local.h	/^	dlight_t	dlights[MAX_DLIGHTS];$/;"	m	struct:__anon177
dlights	src/renderergl1/tr_local.h	/^	struct dlight_s	*dlights;$/;"	m	struct:__anon147	typeref:struct:__anon147::dlight_s
dlights	src/renderergl2/tr_local.h	/^	dlight_t	dlights[MAX_DLIGHTS];$/;"	m	struct:__anon79
dlights	src/renderergl2/tr_local.h	/^	struct dlight_s	*dlights;$/;"	m	struct:__anon39	typeref:struct:__anon39::dlight_s
dllHandle	src/qcommon/vm_local.h	/^	void		*dllHandle;$/;"	m	struct:vm_s
dma	src/client/snd_dma.c	/^dma_t		dma;$/;"	v
dma_t	src/client/snd_local.h	/^} dma_t;$/;"	t	typeref:struct:__anon93
dmapos	src/sdl/sdl_snd.c	/^static int dmapos = 0;$/;"	v	file:
dmasize	src/sdl/sdl_snd.c	/^static int dmasize = 0;$/;"	v	file:
dmodel_t	src/qcommon/qfiles.h	/^} dmodel_t;$/;"	t	typeref:struct:__anon407
dnode_t	src/qcommon/qfiles.h	/^} dnode_t;$/;"	t	typeref:struct:__anon410
doNotSpill	src/server/sqlite3.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doWalCallbacks	src/server/sqlite3.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
do_emit_const	src/qcommon/vm_sparc.c	/^static void do_emit_const(struct func_info * const fp, struct src_insn *sp)$/;"	f	file:
doadefine	src/tools/lcc/cpp/macro.c	/^doadefine(Tokenrow *trp, int type)$/;"	f
doarg	src/tools/lcc/src/config.h	/^	void (*doarg)(Node);$/;"	m	struct:__anon273
docall	src/tools/lcc/src/gen.c	/^static void docall(Node p) {$/;"	f	file:
doclist	src/server/sqlite3.c	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase	file:
doconcat	src/tools/lcc/cpp/macro.c	/^doconcat(Tokenrow *trp)$/;"	f
doconst	src/tools/lcc/src/decl.c	/^void doconst(Symbol p, void *cl) {$/;"	f
dodefine	src/tools/lcc/cpp/macro.c	/^dodefine(Tokenrow *trp)$/;"	f
doextern	src/tools/lcc/src/decl.c	/^static void doextern(Symbol p, void *cl) {$/;"	f	file:
dofree	src/tools/lcc/cpp/cpp.c	/^dofree(void *p)$/;"	f
doglobal	src/tools/lcc/src/decl.c	/^static void doglobal(Symbol p, void *cl) {$/;"	f	file:
doinclude	src/tools/lcc/cpp/include.c	/^doinclude(Tokenrow *trp)$/;"	f
doingRerun	src/server/sqlite3.c	/^  bft doingRerun:1;       \/* True if rerunning after an auto-reprepare *\/$/;"	m	struct:Vdbe	file:
dollardirectives	src/qcommon/parse.c	/^directive_t dollardirectives[20] =$/;"	v
domalloc	src/tools/lcc/cpp/cpp.c	/^domalloc(int size)$/;"	f
done	src/server/sqlite3.c	/^    unsigned done :1;       \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item	file:
done	src/server/sqlite3.c	/^  int done;                      \/* Set to true when thread finishes *\/$/;"	m	struct:SQLiteThread	file:
doorState	src/cgame/cg_local.h	/^  qboolean              doorState;$/;"	m	struct:centity_s
doppler	src/client/snd_local.h	/^	qboolean	doppler;$/;"	m	struct:__anon94
doppler	src/client/snd_local.h	/^	qboolean	doppler;$/;"	m	struct:loopSound_s
dopplerScale	src/client/snd_local.h	/^	float		dopplerScale;$/;"	m	struct:__anon94
dopplerScale	src/client/snd_local.h	/^	float		dopplerScale;$/;"	m	struct:loopSound_s
dopr	src/game/bg_lib.c	/^static int dopr (char *buffer, size_t maxlen, const char *format, va_list args)$/;"	f	file:
dopr_outch	src/game/bg_lib.c	/^static int dopr_outch (char *buffer, size_t *currlen, size_t maxlen, char c)$/;"	f	file:
dostmt	src/tools/lcc/src/stmt.c	/^static void dostmt(int lab, Swtch swp, int lev) {$/;"	f	file:
dotlockCheckReservedLock	src/server/sqlite3.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockClose	src/server/sqlite3.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockLock	src/server/sqlite3.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	src/server/sqlite3.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
double	src/server/sqlite3.c	493;"	d	file:
double	src/server/sqlite3.c	8256;"	d	file:
double	src/server/sqlite3.c	9801;"	d	file:
double	src/server/sqlite3.h	268;"	d
double	src/server/sqlite3.h	8031;"	d
doubleClick	src/ui/ui_shared.h	/^  const char *doubleClick;$/;"	m	struct:listBoxDef_s
doubleConsonant	src/server/sqlite3.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleToInt64	src/server/sqlite3.c	/^static i64 doubleToInt64(double r){$/;"	f	file:
doublemetric	src/tools/lcc/src/c.h	/^	Metrics doublemetric;$/;"	m	struct:interface
doubletype	src/tools/lcc/src/types.c	/^Type doubletype;		\/* double *\/$/;"	v
down	src/client/client.h	/^	int			down[2];		\/\/ key nums holding it down$/;"	m	struct:__anon91
down	src/client/keys.h	/^	qboolean	down;$/;"	m	struct:__anon98
down4xShader	src/renderergl2/tr_local.h	/^	shaderProgram_t down4xShader;$/;"	m	struct:__anon63
downgradeAllSharedCacheTableLocks	src/server/sqlite3.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	src/server/sqlite3.c	55911;"	d	file:
download	src/client/client.h	/^	fileHandle_t download;$/;"	m	struct:__anon87
download	src/server/server.h	/^	fileHandle_t	download;			\/\/ file being downloaded$/;"	m	struct:client_s
downloadBlock	src/client/client.h	/^	int			downloadBlock;	\/\/ block we are waiting for$/;"	m	struct:__anon87
downloadBlockSize	src/server/server.h	/^	int				downloadBlockSize[MAX_DOWNLOAD_WINDOW];$/;"	m	struct:client_s
downloadBlocks	src/server/server.h	/^	unsigned char	*downloadBlocks[MAX_DOWNLOAD_WINDOW];	\/\/ the buffers for the download blocks$/;"	m	struct:client_s
downloadCURL	src/client/client.h	/^	CURL		*downloadCURL;$/;"	m	struct:__anon87
downloadCURLM	src/client/client.h	/^	CURLM		*downloadCURLM;$/;"	m	struct:__anon87
downloadClientBlock	src/server/server.h	/^	int				downloadClientBlock;	\/\/ last block we sent to the client, awaiting ack$/;"	m	struct:client_s
downloadCount	src/client/client.h	/^	int			downloadCount;	\/\/ how many bytes we got$/;"	m	struct:__anon87
downloadCount	src/server/server.h	/^ 	int				downloadCount;		\/\/ bytes sent$/;"	m	struct:client_s
downloadCurrentBlock	src/server/server.h	/^	int				downloadCurrentBlock;	\/\/ current block number$/;"	m	struct:client_s
downloadEOF	src/server/server.h	/^	qboolean		downloadEOF;		\/\/ We have sent the EOF block$/;"	m	struct:client_s
downloadList	src/client/client.h	/^	char		downloadList[MAX_INFO_STRING]; \/\/ list of paks we need to download$/;"	m	struct:__anon87
downloadName	src/client/client.h	/^	char		downloadName[MAX_OSPATH];$/;"	m	struct:__anon87
downloadName	src/server/server.h	/^	char			downloadName[MAX_QPATH]; \/\/ if not empty string, we are downloading$/;"	m	struct:client_s
downloadNumber	src/client/client.h	/^	int			downloadNumber;$/;"	m	struct:__anon87
downloadRestart	src/client/client.h	/^	qboolean	downloadRestart;	\/\/ if true, we need to do another FS_Restart because we downloaded a pak$/;"	m	struct:__anon87
downloadSendTime	src/server/server.h	/^	int				downloadSendTime;	\/\/ time we last got an ack from the client$/;"	m	struct:client_s
downloadSize	src/client/client.h	/^	int			downloadSize;	\/\/ how many bytes we got$/;"	m	struct:__anon87
downloadSize	src/server/server.h	/^ 	int				downloadSize;		\/\/ total bytes (can't use EOF because of paks)$/;"	m	struct:client_s
downloadTempName	src/client/client.h	/^	char		downloadTempName[MAX_OSPATH];$/;"	m	struct:__anon87
downloadURL	src/client/client.h	/^	char		downloadURL[MAX_OSPATH];$/;"	m	struct:__anon87
downloadXmitBlock	src/server/server.h	/^	int				downloadXmitBlock;	\/\/ last block we xmited$/;"	m	struct:client_s
downtime	src/client/client.h	/^	unsigned	downtime;		\/\/ msec timestamp$/;"	m	struct:__anon91
dp_h	src/game/bg_lib.c	/^dp_h[ ] = { 0.0, 5.84960938e-01, }, \/* 0x3f15c000 *\/$/;"	v	file:
dp_l	src/game/bg_lib.c	/^dp_l[ ] = { 0.0, 1.56322085e-06, }, \/* 0x35d1cfdc *\/$/;"	v	file:
dplane_t	src/qcommon/qfiles.h	/^} dplane_t;$/;"	t	typeref:struct:__anon409
drawBufferCommand_t	src/renderergl1/tr_local.h	/^} drawBufferCommand_t;$/;"	t	typeref:struct:__anon166
drawBufferCommand_t	src/renderergl2/tr_local.h	/^} drawBufferCommand_t;$/;"	t	typeref:struct:__anon66
drawCinematic	src/ui/ui_shared.h	/^  void ( *drawCinematic )( int handle, float x, float y, float w, float h );$/;"	m	struct:__anon506
drawFrontline	src/cgame/cg_local.h	/^  qboolean drawFrontline;$/;"	m	struct:__anon248
drawHandlePic	src/ui/ui_shared.h	/^  void ( *drawHandlePic ) ( float x, float y, float w, float h, qhandle_t asset );$/;"	m	struct:__anon506
drawIntensity	src/renderergl1/tr_flares.c	/^	float		drawIntensity;		\/\/ may be non 0 even if !visible due to fading$/;"	m	struct:flare_s	file:
drawIntensity	src/renderergl2/tr_flares.c	/^	float		drawIntensity;		\/\/ may be non 0 even if !visible due to fading$/;"	m	struct:flare_s	file:
drawIntersection	src/cgame/cg_local.h	/^  qboolean drawIntersection;$/;"	m	struct:__anon248
drawRangeElements	src/renderergl2/tr_local.h	/^	qboolean    drawRangeElements;$/;"	m	struct:__anon60
drawRect	src/ui/ui_shared.h	/^  void ( *drawRect ) ( float x, float y, float w, float h, float size, const vec4_t color );$/;"	m	struct:__anon506
drawSides	src/ui/ui_shared.h	/^  void ( *drawSides ) ( float x, float y, float w, float h, float size );$/;"	m	struct:__anon506
drawStretchPic	src/ui/ui_shared.h	/^  void ( *drawStretchPic ) ( float x, float y, float w, float h, float s1, float t1, float s2, float t2, qhandle_t hShader );$/;"	m	struct:__anon506
drawSurf_s	src/renderergl1/tr_local.h	/^typedef struct drawSurf_s {$/;"	s
drawSurf_s	src/renderergl2/tr_local.h	/^typedef struct drawSurf_s {$/;"	s
drawSurf_t	src/renderergl1/tr_local.h	/^} drawSurf_t;$/;"	t	typeref:struct:drawSurf_s
drawSurf_t	src/renderergl2/tr_local.h	/^} drawSurf_t;$/;"	t	typeref:struct:drawSurf_s
drawSurfs	src/renderergl1/tr_local.h	/^	drawSurf_t	drawSurfs[MAX_DRAWSURFS];$/;"	m	struct:__anon177
drawSurfs	src/renderergl1/tr_local.h	/^	drawSurf_t *drawSurfs;$/;"	m	struct:__anon171
drawSurfs	src/renderergl1/tr_local.h	/^	struct drawSurf_s	*drawSurfs;$/;"	m	struct:__anon147	typeref:struct:__anon147::drawSurf_s
drawSurfs	src/renderergl2/tr_local.h	/^	drawSurf_t	drawSurfs[MAX_DRAWSURFS];$/;"	m	struct:__anon79
drawSurfs	src/renderergl2/tr_local.h	/^	drawSurf_t *drawSurfs;$/;"	m	struct:__anon71
drawSurfs	src/renderergl2/tr_local.h	/^	struct drawSurf_s	*drawSurfs;$/;"	m	struct:__anon39	typeref:struct:__anon39::drawSurf_s
drawSurfsCommand_t	src/renderergl1/tr_local.h	/^} drawSurfsCommand_t;$/;"	t	typeref:struct:__anon171
drawSurfsCommand_t	src/renderergl2/tr_local.h	/^} drawSurfsCommand_t;$/;"	t	typeref:struct:__anon71
drawTextWithCursor	src/ui/ui_shared.h	/^  void ( *drawTextWithCursor )( float x, float y, float scale, vec4_t color, const char *text, int cursorPos, char cursor, int limit, int style );$/;"	m	struct:__anon506
drawTopBottom	src/ui/ui_shared.h	/^  void ( *drawTopBottom ) ( float x, float y, float w, float h, float size );$/;"	m	struct:__anon506
drawVert_t	src/qcommon/qfiles.h	/^} drawVert_t;$/;"	t	typeref:struct:__anon415
drawVert_t_cleared	src/qcommon/qfiles.h	459;"	d
drawX	src/client/cl_cin.c	/^	long				drawX, drawY;$/;"	m	struct:__anon100	file:
drawY	src/client/cl_cin.c	/^	long				drawX, drawY;$/;"	m	struct:__anon100	file:
driver	src/tools/lcc/doc/install.html	/^<h2><a NAME="driver">Building the Driver<\/a><\/h2>$/;"	a
driverType	src/renderercommon/tr_types.h	/^	glDriverType_t			driverType;$/;"	m	struct:__anon120
dropCell	src/server/sqlite3.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
dropItems	src/ui/ui_shared.h	/^  int dropItems;$/;"	m	struct:listBoxDef_s
dropped	src/qcommon/qcommon.h	/^	int			dropped;			\/\/ between last packet and previous$/;"	m	struct:__anon422
dropperNum	src/game/g_local.h	/^  int               dropperNum;$/;"	m	struct:gentity_s
dshader_t	src/qcommon/qfiles.h	/^} dshader_t;$/;"	t	typeref:struct:__anon408
dst_by_i_count	src/qcommon/vm_sparc.c	/^	struct dst_insn		**dst_by_i_count;$/;"	m	struct:func_info	typeref:struct:func_info::dst_insn	file:
dst_count	src/qcommon/vm_sparc.c	/^	int			dst_count;$/;"	m	struct:func_info	file:
dst_first	src/qcommon/vm_sparc.c	/^	struct dst_insn		*dst_first;$/;"	m	struct:func_info	typeref:struct:func_info::dst_insn	file:
dst_insn	src/qcommon/vm_sparc.c	/^struct dst_insn {$/;"	s	file:
dst_insn_append	src/qcommon/vm_sparc.c	/^static void dst_insn_append(struct func_info * const fp)$/;"	f	file:
dst_insn_insert_tail	src/qcommon/vm_sparc.c	/^static void dst_insn_insert_tail(struct func_info * const fp,$/;"	f	file:
dst_last	src/qcommon/vm_sparc.c	/^	struct dst_insn		*dst_last;$/;"	m	struct:func_info	typeref:struct:func_info::dst_insn	file:
dst_new	src/qcommon/vm_sparc.c	/^static struct dst_insn *dst_new(struct func_info * const fp, unsigned int length,$/;"	f	file:
dst_reg_flags	src/qcommon/vm_sparc.c	/^	unsigned char		dst_reg_flags;$/;"	m	struct:src_insn	file:
dsurface_t	src/qcommon/qfiles.h	/^} dsurface_t;$/;"	t	typeref:struct:__anon417
duckChange	src/cgame/cg_local.h	/^  float         duckChange;                         \/\/ for duck viewheight smoothing$/;"	m	struct:__anon249
duckTime	src/cgame/cg_local.h	/^  int           duckTime;$/;"	m	struct:__anon249
dummyCmd_t	src/game/bg_public.h	/^} dummyCmd_t;$/;"	t	typeref:struct:__anon359
dumpcover	src/tools/lcc/src/gen.c	/^static void dumpcover(Node p, int nt, int in) {$/;"	f	file:
dumpregs	src/tools/lcc/src/gen.c	/^static void dumpregs(char *msg, char *a, char *b) {$/;"	f	file:
dumprule	src/tools/lcc/src/gen.c	/^static void dumprule(int rulenum) {$/;"	f	file:
dumptree	src/tools/lcc/src/bytecode.c	/^static void dumptree(Node p) {$/;"	f	file:
dumptree	src/tools/lcc/src/gen.c	/^static void dumptree(Node p) {$/;"	f	file:
dupedExprNodeSize	src/server/sqlite3.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	src/server/sqlite3.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	src/server/sqlite3.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
duration	src/client/snd_local.h	/^	int				duration;$/;"	m	struct:sfx_s
duration	src/client/snd_openal.c	/^	int				duration;				\/\/ Milliseconds$/;"	m	struct:alSfx_s	file:
duration	src/game/bg_public.h	/^  int                    duration;$/;"	m	struct:voiceTrack_s
dustTrailTime	src/cgame/cg_local.h	/^  int                   dustTrailTime;$/;"	m	struct:centity_s
dynMenu_t	src/game/bg_public.h	/^} dynMenu_t;$/;"	t	typeref:enum:__anon340
dynamic	src/qcommon/puff.c	/^local int32_t dynamic(struct state *s)$/;"	f
dynamicLight	src/cgame/cg_local.h	/^  qboolean        dynamicLight;$/;"	m	struct:baseParticle_s
e	src/renderergl1/tr_local.h	/^	refEntity_t	e;$/;"	m	struct:__anon128
e	src/renderergl2/tr_local.h	/^	refEntity_t	e;$/;"	m	struct:__anon8
eBuffer	src/client/cl_avi.c	/^  byte          *cBuffer, *eBuffer;$/;"	m	struct:aviFileData_s	file:
eCode	src/server/sqlite3.c	/^  u8 eCode;                                 \/* A small processing code *\/$/;"	m	struct:Walker	file:
eContent	src/server/sqlite3.c	/^  int eContent;                   \/* An FTS5_CONTENT value *\/$/;"	m	struct:Fts5Config	file:
eCoordType	src/server/sqlite3.c	/^  u8 eCoordType;              \/* RTREE_COORD_REAL32 or RTREE_COORD_INT32 *\/$/;"	m	struct:Rtree	file:
eCreate	src/server/sqlite3.c	/^  u8 eCreate;                         \/* eCreate value for for xFetch() *\/$/;"	m	struct:PCache	file:
eCurType	src/server/sqlite3.c	/^  u8 eCurType;          \/* One of the CURTYPE_* values above *\/$/;"	m	struct:VdbeCursor	file:
eDest	src/server/sqlite3.c	/^  u8 eDest;            \/* How to dispose of the results.  On of SRT_* above. *\/$/;"	m	struct:SelectDest	file:
eDetail	src/server/sqlite3.c	/^  int eDetail;                    \/* Copy of Fts5Config.eDetail *\/$/;"	m	struct:Fts5Hash	file:
eDetail	src/server/sqlite3.c	/^  int eDetail;                    \/* FTS5_DETAIL_XXX value *\/$/;"	m	struct:Fts5Config	file:
eDistinct	src/server/sqlite3.c	/^  u8 eDistinct;             \/* One of the WHERE_DISTINCT_* values below *\/$/;"	m	struct:WhereInfo	file:
eEndLoopOp	src/server/sqlite3.c	/^        u8 eEndLoopOp;         \/* IN Loop terminator. OP_Next or OP_Prev *\/$/;"	m	struct:WhereLevel::__anon210::__anon211::InLoop	file:
eEvalmode	src/server/sqlite3.c	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor	file:
eFWErr	src/server/sqlite3.c	/^  int eFWErr;                     \/* Non-zero if in an error state *\/$/;"	m	struct:PmaWriter	file:
eFileLock	src/server/sqlite3.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	src/server/sqlite3.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eFlags	src/cgame/cg_local.h	/^	int			eFlags;			\/\/ copied to entityState_t->eFlags$/;"	m	struct:__anon256
eFlags	src/cgame/cg_local.h	/^	int		eFlags;$/;"	m	struct:__anon257
eFlags	src/client/client.h	/^	int			eFlags;			\/\/ copied to entityState_t->eFlags$/;"	m	struct:alternatePlayerState_s
eFlags	src/client/client.h	/^	int		eFlags;$/;"	m	struct:alternateEntityState_s
eFlags	src/qcommon/msg.c	/^	int			eFlags;			\/\/ copied to entityState_t->eFlags$/;"	m	struct:alternatePlayerState_s	file:
eFlags	src/qcommon/q_shared.h	/^	int			eFlags;			\/\/ copied to entityState_t->eFlags$/;"	m	struct:playerState_s
eFlags	src/qcommon/q_shared.h	/^	int		eFlags;$/;"	m	struct:entityState_s
eLock	src/server/sqlite3.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eLock	src/server/sqlite3.c	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock	file:
eMatchOp	src/server/sqlite3.c	/^  u8 eMatchOp;            \/* Op for vtab MATCH\/LIKE\/GLOB\/REGEXP terms *\/$/;"	m	struct:WhereTerm	file:
eOnePass	src/server/sqlite3.c	/^  u8 eOnePass;              \/* ONEPASS_OFF, or _SINGLE, or _MULTI *\/$/;"	m	struct:WhereInfo	file:
eOperator	src/server/sqlite3.c	/^  Token eOperator;  \/* "like" or "glob" or "regexp" *\/$/;"	m	struct:LikeOp	file:
eOperator	src/server/sqlite3.c	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm	file:
eOrconf	src/server/sqlite3.c	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse	file:
eParentWithin	src/server/sqlite3.c	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
eParentWithin	src/server/sqlite3.h	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
ePlan	src/server/sqlite3.c	/^  int ePlan;                      \/* FTS5_PLAN_XXX value *\/$/;"	m	struct:Fts5Cursor	file:
ePragTyp	src/server/sqlite3.c	/^  u8 ePragTyp;              \/* PragTyp_XXX value *\/$/;"	m	struct:sPragmaNames	file:
eSearch	src/server/sqlite3.c	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor	file:
eStage	src/server/sqlite3.c	/^  int eStage;                     \/* Value of RBU_STATE_STAGE field *\/$/;"	m	struct:sqlite3rbu	file:
eStage	src/server/sqlite3.c	/^  int eStage;$/;"	m	struct:RbuState	file:
eState	src/server/sqlite3.c	/^  int eState;                     \/* 0==closed, 1==open, 2==synced *\/$/;"	m	struct:Fts5TransactionState	file:
eState	src/server/sqlite3.c	/^  int eState;                     \/* See above *\/$/;"	m	struct:PoslistCallbackCtx	file:
eState	src/server/sqlite3.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eState	src/server/sqlite3.c	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor	file:
eSubtype	src/server/sqlite3.c	/^  u8  eSubtype;       \/* Subtype for this value *\/$/;"	m	struct:Mem	file:
eTnctType	src/server/sqlite3.c	/^  u8 eTnctType;   \/* One of the WHERE_DISTINCT_* operators *\/$/;"	m	struct:DistinctCtx	file:
eTriggerOp	src/server/sqlite3.c	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse	file:
eType	src/cgame/cg_local.h	/^	int		eType;			\/\/ entityType_t$/;"	m	struct:__anon257
eType	src/client/client.h	/^	int		eType;			\/\/ entityType_t$/;"	m	struct:alternateEntityState_s
eType	src/qcommon/q_shared.h	/^	int		eType;			\/\/ entityType_t$/;"	m	struct:entityState_s
eType	src/server/sqlite3.c	/^  int eType;                      \/* FTS5_VOCAB_COL or ROW *\/$/;"	m	struct:Fts5VocabTable	file:
eType	src/server/sqlite3.c	/^  int eType;                      \/* Node type *\/$/;"	m	struct:Fts5ExprNode	file:
eType	src/server/sqlite3.c	/^  int eType;                      \/* Table type - an RBU_PK_XXX value *\/$/;"	m	struct:RbuObjIter	file:
eType	src/server/sqlite3.c	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr	file:
eType	src/server/sqlite3.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	src/server/sqlite3.c	/^  u8 eType;                  \/* Type of top-level element *\/$/;"	m	struct:JsonEachCursor	file:
eType	src/server/sqlite3.c	/^  u8 eType;              \/* One of the JSON_ type values *\/$/;"	m	struct:JsonNode	file:
eVal	src/server/sqlite3.c	/^  int eVal;$/;"	m	struct:Fts5Enum	file:
eWithin	src/server/sqlite3.c	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
eWithin	src/server/sqlite3.c	/^  u8 eWithin;            \/* PARTLY_WITHIN or FULLY_WITHIN *\/$/;"	m	struct:RtreeSearchPoint	file:
eWithin	src/server/sqlite3.h	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
e_status	src/qcommon/q_shared.h	/^} e_status;$/;"	t	typeref:enum:__anon480
eaddr	src/tools/lcc/src/config.h	/^	unsigned int eaddr;  \/* omit *\/$/;"	m	struct:__anon277
ebcdicToAscii	src/server/sqlite3.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
echo_cmd	GNUmakefile	/^echo_cmd=@:$/;"	m
echo_cmd	GNUmakefile	/^echo_cmd=@echo$/;"	m
edgeDef_t	src/renderergl1/tr_shadows.c	/^} edgeDef_t;$/;"	t	typeref:struct:__anon125	file:
edgeDef_t	src/renderergl2/tr_shadows.c	/^} edgeDef_t;$/;"	t	typeref:struct:__anon3	file:
edgeDefs	src/renderergl1/tr_shadows.c	/^static	edgeDef_t	edgeDefs[SHADER_MAX_VERTEXES][MAX_EDGE_DEFS];$/;"	v	file:
edgeDefs	src/renderergl2/tr_shadows.c	/^static	edgeDef_t	edgeDefs[SHADER_MAX_VERTEXES][MAX_EDGE_DEFS];$/;"	v	file:
edgeName_t	src/qcommon/cm_patch.c	/^} edgeName_t;$/;"	t	typeref:enum:__anon385	file:
edgeVerts	src/renderergl1/tr_shade_calc.c	/^int edgeVerts[6][2] = {$/;"	v
edgeVerts	src/renderergl2/tr_shade_calc.c	/^int edgeVerts[6][2] = {$/;"	v
edges	src/qcommon/cm_local.h	/^	cbrushedge_t	*edges;$/;"	m	struct:__anon437
edit	src/ui/ui_shared.h	/^    editFieldDef_t *edit;$/;"	m	union:itemDef_s::__anon502
editFieldDef_s	src/ui/ui_shared.h	/^typedef struct editFieldDef_s$/;"	s
editFieldDef_t	src/ui/ui_shared.h	/^editFieldDef_t;$/;"	t	typeref:struct:editFieldDef_s
editPage	src/server/sqlite3.c	/^static int editPage($/;"	f	file:
effectChannel	src/game/g_local.h	/^  gentity_t     *effectChannel;$/;"	m	struct:zap_s
eject	src/cgame/cg_local.h	/^  pLerpValues_t   eject;          \/\/zero period indicates creation of all particles at once$/;"	m	struct:baseParticleEjector_s
ejectPeriod	src/cgame/cg_local.h	/^  pLerpValues_t         ejectPeriod;$/;"	m	struct:particleEjector_s
ejectors	src/cgame/cg_local.h	/^  baseParticleEjector_t *ejectors[ MAX_EJECTORS_PER_SYSTEM ];$/;"	m	struct:baseParticleSystem_s
elementHeight	src/ui/ui_shared.h	/^  float elementHeight;$/;"	m	struct:listBoxDef_s
elementStyle	src/ui/ui_shared.h	/^  int elementStyle;$/;"	m	struct:listBoxDef_s
elementWidth	src/ui/ui_shared.h	/^  float elementWidth;$/;"	m	struct:listBoxDef_s
emit	src/tools/lcc/src/bytecode.c	/^static void I(emit)(Node p) {$/;"	f	file:
emit	src/tools/lcc/src/c.h	/^void (*emit)    (Node);$/;"	m	struct:interface
emit	src/tools/lcc/src/gen.c	/^void emit(Node p) {$/;"	f
emit	src/tools/lcc/src/null.c	/^static void I(emit)(Node p) {}$/;"	f	file:
emit	src/tools/lcc/src/symbolic.c	/^static void I(emit)(Node p){$/;"	f	file:
emit2	src/tools/lcc/src/config.h	/^	void (*emit2)(Node);$/;"	m	struct:__anon273
emitCoord	src/tools/lcc/src/symbolic.c	/^static void emitCoord(Coordinate src) {$/;"	f	file:
emitEnd	src/qcommon/vm_powerpc.c	537;"	d	file:
emitJump	src/qcommon/vm_powerpc.c	544;"	d	file:
emitStart	src/qcommon/vm_powerpc.c	527;"	d	file:
emitString	src/tools/lcc/src/symbolic.c	/^static void emitString(int len, const char *s) {$/;"	f	file:
emitSymRef	src/tools/lcc/src/symbolic.c	/^static void emitSymRef(Symbol p) {$/;"	f	file:
emitSymbol	src/tools/lcc/src/symbolic.c	/^static void emitSymbol(Symbol p) {$/;"	f	file:
emit_jump	src/qcommon/vm_sparc.c	/^static void emit_jump(vm_t *vm, struct func_info * const fp, enum sparc_iname iname, int dest)$/;"	f	file:
emit_vm_thunk	src/qcommon/vm_sparc.c	/^static void emit_vm_thunk(struct func_info * const fp)$/;"	f	file:
emitasm	src/tools/lcc/src/gen.c	/^static unsigned emitasm(Node p, int nt) {$/;"	f	file:
emitcase	src/tools/lcc/lburg/lburg.c	/^static void emitcase(Term p, int ntnumber) {$/;"	f	file:
emitclosure	src/tools/lcc/lburg/lburg.c	/^static void emitclosure(Nonterm nts) {$/;"	f	file:
emitcode	src/tools/lcc/src/dag.c	/^void emitcode(void) {$/;"	f
emitcost	src/tools/lcc/lburg/lburg.c	/^static void emitcost(Tree t, char *v) {$/;"	f	file:
emitdefs	src/tools/lcc/lburg/lburg.c	/^static void emitdefs(Nonterm nts, int ntnumber) {$/;"	f	file:
emitheader	src/tools/lcc/lburg/lburg.c	/^static void emitheader(void) {$/;"	f	file:
emitkids	src/tools/lcc/lburg/lburg.c	/^static void emitkids(Rule rules, int nrules) {$/;"	f	file:
emitlabel	src/tools/lcc/lburg/lburg.c	/^static void emitlabel(Term terms, Nonterm start, int ntnumber) {$/;"	f	file:
emitnts	src/tools/lcc/lburg/lburg.c	/^static void emitnts(Rule rules, int nrules) {$/;"	f	file:
emitrecalc	src/tools/lcc/lburg/lburg.c	/^static void emitrecalc(char *pre, Term root, Term kid) {$/;"	f	file:
emitrecord	src/tools/lcc/lburg/lburg.c	/^static void emitrecord(char *pre, Rule r, char *c, int cost) {$/;"	f	file:
emitrule	src/tools/lcc/lburg/lburg.c	/^static void emitrule(Nonterm nts) {$/;"	f	file:
emitstring	src/tools/lcc/lburg/lburg.c	/^static void emitstring(Rule rules) {$/;"	f	file:
emitstruct	src/tools/lcc/lburg/lburg.c	/^static void emitstruct(Nonterm nts, int ntnumber) {$/;"	f	file:
emitted	src/tools/lcc/src/config.h	/^	unsigned emitted:1;$/;"	m	struct:__anon274
emitter	src/tools/lcc/src/gen.c	/^unsigned (*emitter)(Node, int) = emitasm;$/;"	v
emittest	src/tools/lcc/lburg/lburg.c	/^static void emittest(Tree t, char *v, char *suffix) {$/;"	f	file:
emoticonCount	src/game/g_local.h	/^  int               emoticonCount;$/;"	m	struct:__anon316
emoticonCount	src/ui/ui_shared.h	/^  int emoticonCount;$/;"	m	struct:__anon504
emoticon_t	src/qcommon/q_shared.h	/^} emoticon_t;$/;"	t	typeref:struct:__anon482
emoticons	src/game/g_local.h	/^  emoticon_t        emoticons[ MAX_EMOTICONS ];$/;"	m	struct:__anon316
emoticons	src/ui/ui_shared.h	/^  emoticon_t emoticons[ MAX_EMOTICONS ];$/;"	m	struct:__anon504
empty_output_buffer	src/renderercommon/tr_image_jpg.c	/^empty_output_buffer (j_compress_ptr cinfo)$/;"	f	file:
emptystring	src/qcommon/common.c	/^memstatic_t emptystring =$/;"	v
enableCvar	src/ui/ui_shared.h	/^  const char *enableCvar;         \/\/ enable, disable, show, or hide based on value, this can contain a list$/;"	m	struct:itemDef_s
enable_shared_cache	src/server/sqlite3.c	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	file:
enable_simulated_io_errors	src/server/sqlite3.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	src/server/sqlite3.c	11421;"	d	file:
enable_simulated_io_errors	src/server/sqlite3.c	47744;"	d	file:
enabled	src/cgame/cg_local.h	/^  qboolean    enabled;$/;"	m	struct:__anon244
enabled	src/renderergl2/tr_local.h	/^	uint32_t enabled;$/;"	m	struct:vaoAttrib_s
enc	src/server/sqlite3.c	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:Mem	file:
enc	src/server/sqlite3.c	/^  u8 enc;                       \/* Text encoding *\/$/;"	m	struct:sqlite3	file:
enc	src/server/sqlite3.c	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq	file:
enc	src/server/sqlite3.c	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema	file:
enc	src/server/sqlite3.c	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo	file:
encodeBuffer	src/renderergl1/tr_local.h	/^	byte					*encodeBuffer;$/;"	m	struct:__anon173
encodeBuffer	src/renderergl2/tr_local.h	/^	byte					*encodeBuffer;$/;"	m	struct:__anon73
encodeMuLaw	src/client/snd_wavelet.c	/^void encodeMuLaw( sfx_t *sfx, short *packets) {$/;"	f
encodeWavelet	src/client/snd_wavelet.c	/^void encodeWavelet( sfx_t *sfx, short *packets) {$/;"	f
encoding	src/renderercommon/tr_image_pcx.c	/^	char	encoding;$/;"	m	struct:__anon124	file:
end	src/qcommon/cm_local.h	/^	vec3_t			end;$/;"	m	struct:__anon443
end	src/server/sv_world.c	/^	vec3_t		end;$/;"	m	struct:__anon182	file:
end	src/tools/lcc/src/c.h	/^	List end;$/;"	m	struct:__anon284
endFrameCommand_t	src/renderergl1/tr_local.h	/^} endFrameCommand_t;$/;"	t	typeref:struct:__anon169
endFrameCommand_t	src/renderergl2/tr_local.h	/^} endFrameCommand_t;$/;"	t	typeref:struct:__anon69
endPos	src/ui/ui_shared.h	/^  int endPos;$/;"	m	struct:listBoxDef_s
endRadius	src/qcommon/cm_local.h	/^	float		endRadius;$/;"	m	struct:__anon441
end_emit	src/qcommon/vm_sparc.c	/^static void end_emit(struct func_info * const fp)$/;"	f	file:
end_p	src/qcommon/parse.c	/^  char *end_p;                    \/\/pointer to the end of the script$/;"	m	struct:script_s	file:
endif	src/asm/ftola.asm	/^endif$/;"	l
endpoint	src/server/sqlite3.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
endpos	src/qcommon/q_shared.h	/^	vec3_t		endpos;		\/\/ final position$/;"	m	struct:__anon470
endwhitespace_p	src/qcommon/parse.c	/^  char *endwhitespace_p;         $/;"	m	struct:script_s	file:
endwhitespace_p	src/qcommon/parse.c	/^  char *endwhitespace_p;        \/\/start of white space before token$/;"	m	struct:token_s	file:
enemy	src/game/g_local.h	/^  gentity_t         *enemy;$/;"	m	struct:gentity_s
enlargeAndAppend	src/server/sqlite3.c	/^static void SQLITE_NOINLINE enlargeAndAppend(StrAccum *p, const char *z, int N){$/;"	f	file:
ent	src/game/g_mover.c	/^  gentity_t *ent;$/;"	m	struct:__anon319	file:
entchannel	src/client/snd_local.h	/^	int			entchannel;		\/\/ to allow overriding a specific sound$/;"	m	struct:__anon94
enterMutex	src/server/sqlite3.c	/^static void enterMutex(void){$/;"	f	file:
enterTime	src/game/g_local.h	/^  int                 enterTime;          \/\/ level.time the client entered the game$/;"	m	struct:__anon311
enterscope	src/tools/lcc/src/sym.c	/^void enterscope(void) {$/;"	f
enthusiasm	src/game/bg_public.h	/^  int                    enthusiasm;$/;"	m	struct:voiceTrack_s
entities	src/cgame/cg_local.h	/^  moduleAlternateEntityState_t entities[ MAX_ENTITIES_IN_SNAPSHOT ]; \/\/ at the time of this snapshot$/;"	m	struct:__anon258
entities	src/cgame/cg_public.h	/^  entityState_t entities[ MAX_ENTITIES_IN_SNAPSHOT ]; \/\/ at the time of this snapshot$/;"	m	struct:__anon228
entities	src/client/client.h	/^  alternateEntityState_t entities[ MAX_ENTITIES_IN_SNAPSHOT ]; \/\/ at the time of this snapshot$/;"	m	struct:__anon83
entities	src/renderergl1/tr_local.h	/^	trRefEntity_t	*entities;$/;"	m	struct:__anon147
entities	src/renderergl1/tr_local.h	/^	trRefEntity_t	entities[MAX_REFENTITIES];$/;"	m	struct:__anon177
entities	src/renderergl2/tr_local.h	/^	trRefEntity_t	*entities;$/;"	m	struct:__anon39
entities	src/renderergl2/tr_local.h	/^	trRefEntity_t	entities[MAX_REFENTITIES];$/;"	m	struct:__anon79
entities	src/server/sv_world.c	/^	svEntity_t	*entities;$/;"	m	struct:worldSector_s	file:
entity	src/client/snd_openal.c	/^	int		entity;			\/\/ Owning entity (-1 if none)$/;"	m	struct:src_s	file:
entity2D	src/renderergl1/tr_local.h	/^	trRefEntity_t	entity2D;	\/\/ currentEntity will point at this when doing 2D rendering$/;"	m	struct:__anon162
entity2D	src/renderergl2/tr_local.h	/^	trRefEntity_t	entity2D;	\/\/ currentEntity will point at this when doing 2D rendering$/;"	m	struct:__anon62
entityBaselines	src/client/client.h	/^	entityState_t	entityBaselines[MAX_GENTITIES];	\/\/ for delta compression when not in previous frame$/;"	m	struct:__anon86
entityEventSequence	src/cgame/cg_local.h	/^	int			entityEventSequence;$/;"	m	struct:__anon256
entityEventSequence	src/client/client.h	/^	int			entityEventSequence;$/;"	m	struct:alternatePlayerState_s
entityEventSequence	src/qcommon/msg.c	/^	int			entityEventSequence;$/;"	m	struct:alternatePlayerState_s	file:
entityEventSequence	src/qcommon/q_shared.h	/^	int			entityEventSequence;$/;"	m	struct:playerState_s
entityList	src/client/snd_openal.c	/^static sentity_t entityList[MAX_GENTITIES];$/;"	v	file:
entityMergable	src/renderergl1/tr_local.h	/^	qboolean	entityMergable;			\/\/ merge across entites optimizable (smoke, blood)$/;"	m	struct:shader_s
entityMergable	src/renderergl2/tr_local.h	/^	qboolean	entityMergable;			\/\/ merge across entites optimizable (smoke, blood)$/;"	m	struct:shader_s
entityName	src/game/bg_public.h	/^  char          *entityName;$/;"	m	struct:__anon353
entityNum	src/qcommon/q_shared.h	/^	int			entityNum;	\/\/ entity the contacted surface is a part of$/;"	m	struct:__anon470
entityNums	src/renderergl2/tr_local.h	/^	int    entityNums[8];$/;"	m	struct:pshadow_s
entityOrigins	src/renderergl2/tr_local.h	/^	vec3_t entityOrigins[8];$/;"	m	struct:pshadow_s
entityPS	src/cgame/cg_local.h	/^  particleSystem_t      *entityPS;$/;"	m	struct:centity_s
entityPSMissing	src/cgame/cg_local.h	/^  qboolean              entityPSMissing;$/;"	m	struct:centity_s
entityParsePoint	src/renderergl1/tr_local.h	/^	char		*entityParsePoint;$/;"	m	struct:__anon157
entityParsePoint	src/renderergl2/tr_local.h	/^	char		*entityParsePoint;$/;"	m	struct:__anon49
entityParsePoint	src/server/server.h	/^	char			*entityParsePoint;	\/\/ used during game VM init$/;"	m	struct:__anon184
entityPos_t	src/cgame/cg_local.h	/^} entityPos_t;$/;"	t	typeref:struct:__anon246
entityPositions	src/cgame/cg_scanner.c	/^static entityPos_t entityPositions;$/;"	v	file:
entityRadiuses	src/renderergl2/tr_local.h	/^	float  entityRadiuses[8];$/;"	m	struct:pshadow_s
entityShared_t	src/game/g_public.h	/^} entityShared_t;$/;"	t	typeref:struct:__anon361
entityStateFields	src/qcommon/msg.c	/^netField_t	entityStateFields[] = $/;"	v
entityState_s	src/qcommon/q_shared.h	/^typedef struct entityState_s {$/;"	s
entityState_t	src/qcommon/q_shared.h	/^} entityState_t;$/;"	t	typeref:struct:entityState_s
entityString	src/qcommon/cm_local.h	/^	char		*entityString;$/;"	m	struct:__anon440
entityString	src/renderergl1/tr_local.h	/^	char		*entityString;$/;"	m	struct:__anon157
entityString	src/renderergl2/tr_local.h	/^	char		*entityString;$/;"	m	struct:__anon49
entitySurface	src/renderergl1/tr_main.c	/^surfaceType_t	entitySurface = SF_ENTITY;$/;"	v
entitySurface	src/renderergl2/tr_main.c	/^surfaceType_t	entitySurface = SF_ENTITY;$/;"	v
entityType_t	src/game/bg_public.h	/^} entityType_t;$/;"	t	typeref:enum:__anon357
entity_event_t	src/game/bg_public.h	/^} entity_event_t;$/;"	t	typeref:enum:__anon339
entnum	src/client/snd_local.h	/^	int			entnum;			\/\/ to allow overriding a specific sound$/;"	m	struct:__anon94
entry	src/tools/lcc/lburg/lburg.c	/^struct entry {$/;"	s	file:
entry	src/tools/lcc/src/c.h	/^	List entry;$/;"	m	struct:__anon284
entry	src/tools/lcc/src/event.c	/^struct entry {$/;"	s	file:
entry	src/tools/lcc/src/sym.c	/^	struct entry {$/;"	s	struct:table	file:
entry	src/tools/lcc/src/types.c	/^static struct entry {$/;"	s	file:
entryOfs	src/qcommon/vm_local.h	/^	int			entryOfs;$/;"	m	struct:vm_s
entryPoint	src/qcommon/vm_local.h	/^	intptr_t			(QDECL *entryPoint)( int callNum, ... );$/;"	m	struct:vm_s
entryPoint	src/tools/asm/q3asm.c	/^	int		entryPoint;$/;"	m	struct:__anon265	file:
enumFormat	src/sdl/sdl_snd.c	/^	Uint16	enumFormat;$/;"	m	struct:__anon381	file:
enumdcl	src/tools/lcc/src/decl.c	/^Type enumdcl(void) {$/;"	f
enumeration_all_ext	src/client/snd_openal.c	/^static qboolean enumeration_all_ext = qfalse;$/;"	v	file:
enumeration_ext	src/client/snd_openal.c	/^static qboolean enumeration_ext = qfalse;$/;"	v	file:
env	src/qcommon/puff.c	/^    jmp_buf env;$/;"	m	struct:state	file:
env	src/qcommon/vm_powerpc.c	/^	void *env;$/;"	m	struct:__anon452	file:
epochStartTime	src/game/g_local.h	/^  int               epochStartTime;$/;"	m	struct:__anon316
eq	src/qcommon/vm_powerpc_asm.h	109;"	d
eqSeen	src/server/sqlite3.c	/^  u8 eqSeen;          \/* True if an equality comparison has been seen *\/$/;"	m	struct:UnpackedRecord	file:
eqtree	src/tools/lcc/src/enode.c	/^Tree eqtree(int op, Tree l, Tree r) {$/;"	f
eqtype	src/tools/lcc/src/types.c	/^int eqtype(Type ty1, Type ty2, int ret) {$/;"	f
equal	src/tools/lcc/src/stmt.c	/^static int equal(Symbol lprime, Symbol dst) {$/;"	f	file:
equalp	src/tools/lcc/src/sym.c	5;"	d	file:
equatable	src/tools/lcc/src/config.h	/^	unsigned equatable:1;$/;"	m	struct:__anon274
equated	src/tools/lcc/src/dag.c	/^static Symbol equated(Symbol p) {$/;"	f	file:
equatedto	src/tools/lcc/src/c.h	/^			Symbol equatedto;$/;"	m	struct:symbol::__anon296::__anon297
equatelab	src/tools/lcc/src/stmt.c	/^void equatelab(Symbol old, Symbol new) {$/;"	f
ern	src/tools/lcc/lburg/lburg.h	/^	int ern;		\/* external rule number *\/$/;"	m	struct:rule
errCode	src/server/sqlite3.c	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3	file:
errCode	src/server/sqlite3.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errCode	src/server/sqlite3.c	/^  u8 errCode;         \/* Error detected by xRecordCompare (CORRUPT or NOMEM) *\/$/;"	m	struct:UnpackedRecord	file:
errMask	src/server/sqlite3.c	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3	file:
errMsg	src/server/sqlite3.c	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk	file:
errcnt	src/tools/lcc/etc/lcc.c	/^static int errcnt;		\/* number of errors *\/$/;"	v	file:
errcnt	src/tools/lcc/lburg/gram.c	/^int errcnt = 0;$/;"	v
errcnt	src/tools/lcc/src/error.c	/^int errcnt   = 0;$/;"	v
errcode	src/server/sqlite3.c	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	file:
errlimit	src/tools/lcc/src/error.c	/^int errlimit = 20;$/;"	v
errlogFunc	src/server/sqlite3.c	/^static void errlogFunc($/;"	f	file:
errmsg	src/server/sqlite3.c	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg16	src/server/sqlite3.c	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
error	src/tools/lcc/cpp/cpp.c	/^error(enum errtype type, char *string, ...)$/;"	f
error	src/tools/lcc/etc/lcc.c	/^static void error(char *fmt, char *msg) {$/;"	f	file:
error	src/tools/lcc/src/error.c	/^void error(const char *fmt, ...) {$/;"	f
errorAction	src/server/sqlite3.c	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe	file:
errorAngles	src/cgame/cg_local.h	/^  vec3_t                errorAngles;$/;"	m	struct:centity_s
errorCode	src/game/g_playmap.h	/^  int errorCode;$/;"	m	struct:playMapError_s
errorCount	src/tools/asm/q3asm.c	/^int		errorCount;$/;"	v
errorMessage	src/game/g_playmap.h	/^  char *errorMessage;$/;"	m	struct:playMapError_s
errorOrigin	src/cgame/cg_local.h	/^  vec3_t                errorOrigin;$/;"	m	struct:centity_s
errorParm_t	src/qcommon/q_shared.h	/^} errorParm_t;$/;"	t	typeref:enum:__anon460
errorTime	src/cgame/cg_local.h	/^  int                   errorTime;        \/\/ decay the error from this time$/;"	m	struct:centity_s
errstr	src/server/sqlite3.c	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines	file:
errtype	src/tools/lcc/cpp/cpp.h	/^enum errtype { WARNING, ERROR, FATAL };$/;"	g
escapeDoubleQuotes	src/tools/lcc/etc/lcc.c	/^static char *escapeDoubleQuotes(const char *string) {$/;"	f	file:
esn	src/tools/lcc/lburg/lburg.h	/^	int esn;		\/* external symbol number *\/$/;"	m	struct:term
estLog	src/server/sqlite3.c	/^static LogEst estLog(LogEst N){$/;"	f	file:
estimateIndexWidth	src/server/sqlite3.c	/^static void estimateIndexWidth(Index *pIdx){$/;"	f	file:
estimateTableWidth	src/server/sqlite3.c	/^static void estimateTableWidth(Table *pTab){$/;"	f	file:
estimatedCost	src/server/sqlite3.c	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedCost	src/server/sqlite3.h	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
estimatedRows	src/server/sqlite3.c	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedRows	src/server/sqlite3.h	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info
etBUFSIZE	src/server/sqlite3.c	23020;"	d	file:
etByte	src/server/sqlite3.c	/^typedef unsigned char etByte;$/;"	t	file:
etCHARX	src/server/sqlite3.c	22879;"	d	file:
etDYNSTRING	src/server/sqlite3.c	22877;"	d	file:
etEXP	src/server/sqlite3.c	22873;"	d	file:
etFLOAT	src/server/sqlite3.c	22872;"	d	file:
etGENERIC	src/server/sqlite3.c	22874;"	d	file:
etINVALID	src/server/sqlite3.c	22890;"	d	file:
etORDINAL	src/server/sqlite3.c	22888;"	d	file:
etPERCENT	src/server/sqlite3.c	22878;"	d	file:
etPOINTER	src/server/sqlite3.c	22886;"	d	file:
etRADIX	src/server/sqlite3.c	22871;"	d	file:
etSIZE	src/server/sqlite3.c	22875;"	d	file:
etSQLESCAPE	src/server/sqlite3.c	22881;"	d	file:
etSQLESCAPE2	src/server/sqlite3.c	22882;"	d	file:
etSQLESCAPE3	src/server/sqlite3.c	22887;"	d	file:
etSRCLIST	src/server/sqlite3.c	22885;"	d	file:
etSTRING	src/server/sqlite3.c	22876;"	d	file:
etTOKEN	src/server/sqlite3.c	22884;"	d	file:
et_getdigit	src/server/sqlite3.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_info	src/server/sqlite3.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	src/server/sqlite3.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
evPtr	src/qcommon/qcommon.h	/^	void			*evPtr;			\/\/ this must be manually freed if not NULL$/;"	m	struct:__anon428
evPtrLength	src/qcommon/qcommon.h	/^	int				evPtrLength;	\/\/ bytes of data pointed to by evPtr, for journaling$/;"	m	struct:__anon428
evTime	src/qcommon/qcommon.h	/^	int				evTime;$/;"	m	struct:__anon428
evType	src/qcommon/qcommon.h	/^	sysEventType_t	evType;$/;"	m	struct:__anon428
evValue	src/qcommon/qcommon.h	/^	int				evValue, evValue2;$/;"	m	struct:__anon428
evValue2	src/qcommon/qcommon.h	/^	int				evValue, evValue2;$/;"	m	struct:__anon428
eval	src/tools/lcc/cpp/eval.c	/^eval(Tokenrow *trp, int kw)$/;"	f
evalop	src/tools/lcc/cpp/eval.c	/^evalop(struct pri pri)$/;"	f
evaluateAcceleration	src/game/g_local.h	/^  qboolean          evaluateAcceleration;$/;"	m	struct:gentity_s
event	src/cgame/cg_local.h	/^	int		event;			\/\/ impulse events -- muzzle flashes, footsteps, etc$/;"	m	struct:__anon257
event	src/client/client.h	/^	int		event;			\/\/ impulse events -- muzzle flashes, footsteps, etc$/;"	m	struct:alternateEntityState_s
event	src/qcommon/q_shared.h	/^	int		event;			\/\/ impulse events -- muzzle flashes, footsteps, etc$/;"	m	struct:entityState_s
eventHandling	src/cgame/cg_local.h	/^  qboolean      eventHandling;$/;"	m	struct:__anon253
eventHead	src/qcommon/common.c	/^static int         eventHead = 0;$/;"	v	file:
eventParm	src/cgame/cg_local.h	/^	int		eventParm;$/;"	m	struct:__anon257
eventParm	src/client/client.h	/^	int		eventParm;$/;"	m	struct:alternateEntityState_s
eventParm	src/qcommon/q_shared.h	/^	int		eventParm;$/;"	m	struct:entityState_s
eventParms	src/cgame/cg_local.h	/^	int			eventParms[MAX_PS_EVENTS];$/;"	m	struct:__anon256
eventParms	src/client/client.h	/^	int			eventParms[MAX_PS_EVENTS];$/;"	m	struct:alternatePlayerState_s
eventParms	src/qcommon/msg.c	/^	int			eventParms[MAX_PS_EVENTS];$/;"	m	struct:alternatePlayerState_s	file:
eventParms	src/qcommon/q_shared.h	/^	int			eventParms[MAX_PS_EVENTS];$/;"	m	struct:playerState_s
eventQueue	src/qcommon/common.c	/^static sysEvent_t  eventQueue[ MAX_QUEUED_EVENTS ];$/;"	v	file:
eventSequence	src/cgame/cg_local.h	/^	int			eventSequence;	\/\/ pmove generated events$/;"	m	struct:__anon256
eventSequence	src/cgame/cg_local.h	/^  int           eventSequence;$/;"	m	struct:__anon249
eventSequence	src/client/client.h	/^	int			eventSequence;	\/\/ pmove generated events$/;"	m	struct:alternatePlayerState_s
eventSequence	src/qcommon/msg.c	/^	int			eventSequence;	\/\/ pmove generated events$/;"	m	struct:alternatePlayerState_s	file:
eventSequence	src/qcommon/q_shared.h	/^	int			eventSequence;	\/\/ pmove generated events$/;"	m	struct:playerState_s
eventTail	src/qcommon/common.c	/^static int         eventTail = 0;$/;"	v	file:
eventTime	src/game/g_local.h	/^  int               eventTime;      \/\/ events will be cleared EVENT_VALID_MSEC after set$/;"	m	struct:gentity_s
eventnames	src/game/bg_misc.c	/^char *eventnames[ ] =$/;"	v
events	src/cgame/cg_local.h	/^	int			events[MAX_PS_EVENTS];$/;"	m	struct:__anon256
events	src/client/client.h	/^	int			events[MAX_PS_EVENTS];$/;"	m	struct:alternatePlayerState_s
events	src/qcommon/msg.c	/^	int			events[MAX_PS_EVENTS];$/;"	m	struct:alternatePlayerState_s	file:
events	src/qcommon/q_shared.h	/^	int			events[MAX_PS_EVENTS];$/;"	m	struct:playerState_s
events	src/tools/lcc/src/event.c	/^Events events;$/;"	v
evolveHealthFraction	src/game/g_local.h	/^  float               evolveHealthFraction;$/;"	m	struct:__anon311
ex_argc	src/tools/asm/cmdlib.c	/^int		ex_argc;$/;"	v
ex_argv	src/tools/asm/cmdlib.c	/^char	*ex_argv[MAX_EX_ARGC];$/;"	v
exclMask	src/server/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	src/server/sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
exclMask	src/server/sqlite3.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclusiveMode	src/server/sqlite3.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	src/server/sqlite3.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exec	src/game/g_admin.h	/^  char exec[ MAX_QPATH ];$/;"	m	struct:g_admin_command
exec	src/server/sqlite3.c	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	file:
execArgc	src/sys/sys_unix.c	/^static int execArgc;$/;"	v	file:
execArgv	src/sys/sys_unix.c	/^static char *execArgv[ 16 ];$/;"	v	file:
execBuffer	src/sys/sys_unix.c	/^static char execBuffer[ 1024 ];$/;"	v	file:
execBufferPointer	src/sys/sys_unix.c	/^static char *execBufferPointer;$/;"	v	file:
execExecSql	src/server/sqlite3.c	/^static int execExecSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execSql	src/server/sqlite3.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
executableHeader_t	src/tools/asm/q3asm.c	/^} executableHeader_t;$/;"	t	typeref:struct:__anon265	file:
executeText	src/ui/ui_shared.h	/^  void ( *executeText )( int exec_when, const char *text );$/;"	m	struct:__anon506
exists	src/tools/lcc/etc/lcc.c	/^static char *exists(char *name) {$/;"	f	file:
exit	src/tools/lcc/src/c.h	/^	List exit;$/;"	m	struct:__anon284
exitNow	src/master/master.c	/^static qboolean exitNow = qfalse;$/;"	v	file:
exitTime	src/game/g_local.h	/^  int               exitTime;$/;"	m	struct:__anon316
exited	src/game/g_local.h	/^  qboolean          exited;$/;"	m	struct:__anon316
exitparams	src/tools/lcc/src/decl.c	/^static void exitparams(Symbol params[]) {$/;"	f	file:
exitscope	src/tools/lcc/src/sym.c	/^void exitscope(void) {$/;"	f
expand	src/tools/lcc/cpp/macro.c	/^expand(Tokenrow *trp, Nlist *np)$/;"	f
expandlex	src/tools/lcc/cpp/lex.c	/^expandlex(void)$/;"	f
expandrow	src/tools/lcc/cpp/macro.c	/^expandrow(Tokenrow *trp, char *flag)$/;"	f
expect	src/tools/lcc/src/error.c	/^void expect(int tok) {$/;"	f
expired	src/server/sqlite3.c	/^  bft expired:1;          \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe	file:
expired	src/server/sqlite3.c	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
expires	src/game/g_admin.h	/^  int expires;$/;"	m	struct:g_admin_ban
explain	src/server/sqlite3.c	/^  bft explain:2;          \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe	file:
explain	src/server/sqlite3.c	/^  u8 explain;               \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse	file:
explainAppendTerm	src/server/sqlite3.c	/^static void explainAppendTerm($/;"	f	file:
explainComposite	src/server/sqlite3.c	/^static void explainComposite($/;"	f	file:
explainComposite	src/server/sqlite3.c	111682;"	d	file:
explainIndexColumnName	src/server/sqlite3.c	/^static const char *explainIndexColumnName(Index *pIdx, int i){$/;"	f	file:
explainIndexRange	src/server/sqlite3.c	/^static void explainIndexRange(StrAccum *pStr, WhereLoop *pLoop){$/;"	f	file:
explainSetInteger	src/server/sqlite3.c	111640;"	d	file:
explainSetInteger	src/server/sqlite3.c	111645;"	d	file:
explainSimpleCount	src/server/sqlite3.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	src/server/sqlite3.c	115288;"	d	file:
explainTempTable	src/server/sqlite3.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	src/server/sqlite3.c	111644;"	d	file:
explicit	src/game/g_main.c	/^  char      *explicit;$/;"	m	struct:__anon371	file:
explicitCast	src/tools/lcc/src/simp.c	/^int explicitCast;$/;"	v
explicitlyDefined	src/renderergl1/tr_local.h	/^	qboolean	explicitlyDefined;		\/\/ found in a .shader file$/;"	m	struct:shader_s
explicitlyDefined	src/renderergl2/tr_local.h	/^	qboolean	explicitlyDefined;		\/\/ found in a .shader file$/;"	m	struct:shader_s
expmask	src/server/sqlite3.c	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe	file:
exponent	src/renderergl2/tr_extramath.c	/^		unsigned int exponent:5;$/;"	m	struct:f16_u::__anon5	file:
exponent	src/renderergl2/tr_extramath.c	/^		unsigned int exponent:8;$/;"	m	struct:f32_u::__anon4	file:
export	src/tools/lcc/src/bytecode.c	/^static void I(export)(Symbol p) {$/;"	f	file:
export	src/tools/lcc/src/c.h	/^void (*export)(Symbol);$/;"	m	struct:interface
export	src/tools/lcc/src/null.c	/^static void I(export)(Symbol p) {}$/;"	f	file:
export	src/tools/lcc/src/symbolic.c	/^static void I(export)(Symbol p) {$/;"	f	file:
expr	src/tools/lcc/src/expr.c	/^Tree expr(int tok) {$/;"	f
expr0	src/tools/lcc/src/expr.c	/^Tree expr0(int tok) {$/;"	f
expr1	src/tools/lcc/src/expr.c	/^Tree expr1(int tok) {$/;"	f
expr2	src/tools/lcc/src/expr.c	/^static Tree expr2(void) {$/;"	f	file:
expr3	src/tools/lcc/src/expr.c	/^static Tree expr3(int k) {$/;"	f	file:
exprAlwaysFalse	src/server/sqlite3.c	/^static int exprAlwaysFalse(Expr *p){$/;"	f	file:
exprAlwaysTrue	src/server/sqlite3.c	/^static int exprAlwaysTrue(Expr *p){$/;"	f	file:
exprAnalyze	src/server/sqlite3.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyzeOrTerm	src/server/sqlite3.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprCodeBetween	src/server/sqlite3.c	/^static void exprCodeBetween($/;"	f	file:
exprCommute	src/server/sqlite3.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprDup	src/server/sqlite3.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int flags, u8 **pzBuffer){$/;"	f	file:
exprIsConst	src/server/sqlite3.c	/^static int exprIsConst(Expr *p, int initFlag, int iCur){$/;"	f	file:
exprList_s	src/ui/ui_shared.c	/^typedef struct exprList_s$/;"	s	file:
exprList_t	src/ui/ui_shared.c	/^exprList_t;$/;"	t	typeref:struct:exprList_s	file:
exprMightBeIndexed	src/server/sqlite3.c	/^static int exprMightBeIndexed($/;"	f	file:
exprNodeIsConstant	src/server/sqlite3.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNot	src/server/sqlite3.c	/^  static void exprNot(Parse *pParse, int doNot, ExprSpan *pSpan){$/;"	f	file:
exprProbability	src/server/sqlite3.c	/^static int exprProbability(Expr *p){$/;"	f	file:
exprSelectUsage	src/server/sqlite3.c	/^static Bitmask exprSelectUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSetHeight	src/server/sqlite3.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	src/server/sqlite3.c	87079;"	d	file:
exprSrcCount	src/server/sqlite3.c	/^static int exprSrcCount(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprStructSize	src/server/sqlite3.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprTableColumn	src/server/sqlite3.c	/^static Expr *exprTableColumn($/;"	f	file:
exprTableRegister	src/server/sqlite3.c	/^static Expr *exprTableRegister($/;"	f	file:
exprToRegister	src/server/sqlite3.c	/^static void exprToRegister(Expr *p, int iReg){$/;"	f	file:
exprToString	src/server/sqlite3.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
exprToken_s	src/ui/ui_shared.c	/^typedef struct exprToken_s$/;"	s	file:
exprToken_t	src/ui/ui_shared.c	/^exprToken_t;$/;"	t	typeref:struct:exprToken_s	file:
exprType_t	src/ui/ui_shared.c	/^exprType_t;$/;"	t	typeref:enum:__anon519	file:
ext	src/client/snd_codec.h	/^	char *ext;$/;"	m	struct:snd_codec_s
ext	src/qcommon/vm_powerpc.c	/^	unsigned long ext;$/;"	m	struct:symbolic_jump	file:
ext	src/renderergl1/tr_image.c	/^	char *ext;$/;"	m	struct:__anon179	file:
ext	src/renderergl1/tr_model.c	/^	char *ext;$/;"	m	struct:__anon180	file:
ext	src/renderergl2/tr_image.c	/^	char *ext;$/;"	m	struct:__anon81	file:
ext	src/renderergl2/tr_model.c	/^	char *ext;$/;"	m	struct:__anon82	file:
ext	src/tools/lcc/src/sym.c	/^	ext = { GLOBAL },$/;"	v	typeref:struct:	file:
extend	src/tools/lcc/src/c.h	35;"	d
extendTimeLimit	src/game/g_local.h	/^  int               extendTimeLimit;              \/\/ set the time limit to level.matchBaseTimeLimit + this value$/;"	m	struct:__anon316
extendVoteCount	src/game/g_local.h	/^  int               extendVoteCount;$/;"	m	struct:__anon316
extended_errcode	src/server/sqlite3.c	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
extended_result_codes	src/server/sqlite3.c	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
extensions_string	src/renderercommon/tr_types.h	/^	char					extensions_string[BIG_INFO_STRING];$/;"	m	struct:__anon120
extents	src/qcommon/cm_local.h	/^	vec3_t			extents;	\/\/ greatest of abs(size[0]) and abs(size[1])$/;"	m	struct:__anon443
externalEvent	src/cgame/cg_local.h	/^	int			externalEvent;	\/\/ events set on player from another source$/;"	m	struct:__anon256
externalEvent	src/client/client.h	/^	int			externalEvent;	\/\/ events set on player from another source$/;"	m	struct:alternatePlayerState_s
externalEvent	src/qcommon/msg.c	/^	int			externalEvent;	\/\/ events set on player from another source$/;"	m	struct:alternatePlayerState_s	file:
externalEvent	src/qcommon/q_shared.h	/^	int			externalEvent;	\/\/ events set on player from another source$/;"	m	struct:playerState_s
externalEventParm	src/cgame/cg_local.h	/^	int			externalEventParm;$/;"	m	struct:__anon256
externalEventParm	src/client/client.h	/^	int			externalEventParm;$/;"	m	struct:alternatePlayerState_s
externalEventParm	src/qcommon/msg.c	/^	int			externalEventParm;$/;"	m	struct:alternatePlayerState_s	file:
externalEventParm	src/qcommon/q_shared.h	/^	int			externalEventParm;$/;"	m	struct:playerState_s
externalEventTime	src/cgame/cg_local.h	/^	int			externalEventTime;$/;"	m	struct:__anon256
externalEventTime	src/client/client.h	/^	int			externalEventTime;$/;"	m	struct:alternatePlayerState_s
externalEventTime	src/qcommon/msg.c	/^	int			externalEventTime;$/;"	m	struct:alternatePlayerState_s	file:
externalEventTime	src/qcommon/q_shared.h	/^	int			externalEventTime;$/;"	m	struct:playerState_s
externalVisData	src/renderergl1/tr_local.h	/^	const byte				*externalVisData;	\/\/ from RE_SetWorldVisData, shared with CM_Load$/;"	m	struct:__anon163
externalVisData	src/renderergl2/tr_local.h	/^	const byte				*externalVisData;	\/\/ from RE_SetWorldVisData, shared with CM_Load$/;"	m	struct:__anon63
externals	src/tools/lcc/src/sym.c	/^Table externals   = &ext;$/;"	v
extraSync	src/server/sqlite3.c	/^  u8 extraSync;               \/* sync directory after journal delete *\/$/;"	m	struct:Pager	file:
extrapolated	src/cgame/cg_local.h	/^  qboolean              extrapolated;     \/\/ false if origin \/ angles is an interpolation$/;"	m	struct:centity_s
extrapolatedSnapshot	src/client/client.h	/^	qboolean	extrapolatedSnapshot;	\/\/ set if any cgame frame has been forced to extrapolate$/;"	m	struct:__anon86
eyeZ	src/renderergl1/tr_flares.c	/^	float		eyeZ;$/;"	m	struct:flare_s	file:
eyeZ	src/renderergl2/tr_flares.c	/^	float		eyeZ;$/;"	m	struct:flare_s	file:
f	src/client/cl_avi.c	/^  fileHandle_t  f;$/;"	m	struct:aviFileData_s	file:
f	src/qcommon/q_shared.h	/^	float f;$/;"	m	union:__anon457
f	src/renderergl1/tr_local.h	/^		float	*f;$/;"	m	union:__anon154::__anon155
f	src/renderergl2/tr_extramath.c	/^	float f;$/;"	m	union:f32_u	file:
f	src/renderergl2/tr_local.h	/^		float	*f;$/;"	m	union:__anon46::__anon47
f	src/server/sqlite3.c	/^  RtreeValue f;      \/* Floating point value *\/$/;"	m	union:RtreeCoord	file:
f	src/tools/asm/cmdlib.c	/^    float	f;$/;"	m	union:__anon263	file:
f	src/tools/lcc/src/alloc.c	/^	int (*f)(void);$/;"	m	union:align	file:
f	src/tools/lcc/src/c.h	/^		} f;$/;"	m	union:symbol::__anon296	typeref:struct:symbol::__anon296::__anon301
f	src/tools/lcc/src/c.h	/^		} f;$/;"	m	union:type::__anon306	typeref:struct:type::__anon306::__anon307
f	src/tools/lcc/src/c.h	/^	float f;$/;"	m	union:__anon283
f	src/ui/ui_shared.c	/^  int f, b;$/;"	m	struct:exprList_s	file:
f0	src/qcommon/vm_powerpc_asm.h	65;"	d
f1	src/cgame/cg_local.h	/^  qhandle_t f1;$/;"	m	struct:__anon250
f1	src/qcommon/vm_powerpc_asm.h	66;"	d
f10	src/qcommon/vm_powerpc_asm.h	75;"	d
f11	src/qcommon/vm_powerpc_asm.h	76;"	d
f12	src/qcommon/vm_powerpc_asm.h	77;"	d
f13	src/qcommon/vm_powerpc_asm.h	78;"	d
f14	src/qcommon/vm_powerpc_asm.h	79;"	d
f15	src/qcommon/vm_powerpc_asm.h	80;"	d
f16	src/qcommon/vm_powerpc_asm.h	81;"	d
f16_u	src/renderergl2/tr_extramath.c	/^union f16_u {$/;"	u	file:
f17	src/qcommon/vm_powerpc_asm.h	82;"	d
f18	src/qcommon/vm_powerpc_asm.h	83;"	d
f19	src/qcommon/vm_powerpc_asm.h	84;"	d
f2	src/cgame/cg_local.h	/^  qhandle_t f2;$/;"	m	struct:__anon250
f2	src/qcommon/vm_powerpc_asm.h	67;"	d
f20	src/qcommon/vm_powerpc_asm.h	85;"	d
f21	src/qcommon/vm_powerpc_asm.h	86;"	d
f22	src/qcommon/vm_powerpc_asm.h	87;"	d
f23	src/qcommon/vm_powerpc_asm.h	88;"	d
f24	src/qcommon/vm_powerpc_asm.h	89;"	d
f25	src/qcommon/vm_powerpc_asm.h	90;"	d
f26	src/qcommon/vm_powerpc_asm.h	91;"	d
f27	src/qcommon/vm_powerpc_asm.h	92;"	d
f28	src/qcommon/vm_powerpc_asm.h	93;"	d
f29	src/qcommon/vm_powerpc_asm.h	94;"	d
f3	src/cgame/cg_local.h	/^  qhandle_t f3;$/;"	m	struct:__anon250
f3	src/qcommon/vm_powerpc_asm.h	68;"	d
f30	src/qcommon/vm_powerpc_asm.h	95;"	d
f31	src/qcommon/vm_powerpc_asm.h	96;"	d
f32_u	src/renderergl2/tr_extramath.c	/^union f32_u {$/;"	u	file:
f4	src/qcommon/vm_powerpc_asm.h	69;"	d
f5	src/qcommon/vm_powerpc_asm.h	70;"	d
f6	src/qcommon/vm_powerpc_asm.h	71;"	d
f7	src/qcommon/vm_powerpc_asm.h	72;"	d
f8	src/qcommon/vm_powerpc_asm.h	73;"	d
f9	src/qcommon/vm_powerpc_asm.h	74;"	d
fAvatarFront	src/client/libmumblelink.c	/^	float   fAvatarFront[3];$/;"	m	struct:__anon104	file:
fAvatarPosition	src/client/libmumblelink.c	/^	float   fAvatarPosition[3];$/;"	m	struct:__anon104	file:
fAvatarTop	src/client/libmumblelink.c	/^	float   fAvatarTop[3];$/;"	m	struct:__anon104	file:
fCameraFront	src/client/libmumblelink.c	/^	float   fCameraFront[3];$/;"	m	struct:__anon104	file:
fCameraPosition	src/client/libmumblelink.c	/^	float   fCameraPosition[3];$/;"	m	struct:__anon104	file:
fCameraTop	src/client/libmumblelink.c	/^	float   fCameraTop[3];$/;"	m	struct:__anon104	file:
fErrorOrAux	src/server/sqlite3.c	/^  u8 fErrorOrAux;         \/* isError!=0 or pVdbe->pAuxData modified *\/$/;"	m	struct:sqlite3_context	file:
fFIRST	src/qcommon/vm_powerpc.c	748;"	d	file:
fFIRST	src/qcommon/vm_sparc.c	589;"	d	file:
fSECOND	src/qcommon/vm_powerpc.c	749;"	d	file:
fSECOND	src/qcommon/vm_sparc.c	590;"	d	file:
fTEMP	src/qcommon/vm_powerpc.c	750;"	d	file:
fTMP	src/qcommon/vm_powerpc.c	751;"	d	file:
fabs	src/game/bg_lib.c	/^double fabs( double x )$/;"	f
faceCullFront	src/renderergl2/tr_local.h	/^	int         faceCullFront;$/;"	m	struct:__anon57
faceCulling	src/renderergl1/tr_local.h	/^	int			faceCulling;$/;"	m	struct:__anon160
faceCulling	src/renderergl2/tr_local.h	/^	int			faceCulling;$/;"	m	struct:__anon57
facet_t	src/qcommon/cm_patch.h	/^} facet_t;$/;"	t	typeref:struct:__anon487
facets	src/qcommon/cm_patch.c	/^static	facet_t			facets[MAX_PATCH_PLANES]; \/\/maybe MAX_FACETS ??$/;"	v	file:
facets	src/qcommon/cm_patch.h	/^	facet_t	*facets;$/;"	m	struct:patchCollide_s
facing	src/renderergl1/tr_shadows.c	/^	int		facing;$/;"	m	struct:__anon125	file:
facing	src/renderergl1/tr_shadows.c	/^static	int			facing[SHADER_MAX_INDEXES\/3];$/;"	v	file:
facing	src/renderergl2/tr_shadows.c	/^	int		facing;$/;"	m	struct:__anon3	file:
facing	src/renderergl2/tr_shadows.c	/^static	int			facing[SHADER_MAX_INDEXES\/3];$/;"	v	file:
fadeAmount	src/ui/ui_shared.h	/^  float fadeAmount;                  \/\/$/;"	m	struct:__anon503
fadeAmount	src/ui/ui_shared.h	/^  float fadeAmount;$/;"	m	struct:__anon504
fadeClamp	src/ui/ui_shared.h	/^  float fadeClamp;                  \/\/$/;"	m	struct:__anon503
fadeClamp	src/ui/ui_shared.h	/^  float fadeClamp;$/;"	m	struct:__anon504
fadeCycle	src/ui/ui_shared.h	/^  int fadeCycle;                    \/\/$/;"	m	struct:__anon503
fadeCycle	src/ui/ui_shared.h	/^  int fadeCycle;$/;"	m	struct:__anon504
fadeOutTime	src/cgame/cg_local.h	/^  int                     fadeOutTime;$/;"	m	struct:baseTrailBeam_s
fadeTime	src/renderergl1/tr_flares.c	/^	int			fadeTime;$/;"	m	struct:flare_s	file:
fadeTime	src/renderergl2/tr_flares.c	/^	int			fadeTime;$/;"	m	struct:flare_s	file:
fallDamage	src/game/bg_public.h	/^  float     fallDamage;$/;"	m	struct:__anon349
fallSound	src/cgame/cg_local.h	/^  sfxHandle_t fallSound;$/;"	m	struct:__anon251
fallVelocity	src/game/bg_public.h	/^  float  fallVelocity;$/;"	m	struct:__anon330
family	src/qcommon/net_ip.c	/^	sa_family_t family;$/;"	m	struct:__anon489	file:
fastMaskHi	src/qcommon/vm_powerpc.c	/^static long int fastMaskHi = 0, fastMaskLo = 31;$/;"	v	file:
fastMaskLo	src/qcommon/vm_powerpc.c	/^static long int fastMaskHi = 0, fastMaskLo = 31;$/;"	v	file:
fatLightmapSize	src/renderergl2/tr_local.h	/^	int                     fatLightmapSize;$/;"	m	struct:__anon63
fatLightmapStep	src/renderergl2/tr_local.h	/^	int		                fatLightmapStep;$/;"	m	struct:__anon63
fatal	src/tools/lcc/src/error.c	/^int fatal(const char *name, const char *fmt, int n) {$/;"	f
fate	src/game/g_local.h	/^  buildFate_t  fate;$/;"	m	struct:__anon315
fates	src/game/g_admin.c	/^static char *fates[] =$/;"	v	file:
favoriteServers	src/client/client.h	/^	serverInfo_t	favoriteServers[MAX_OTHER_SERVERS];$/;"	m	struct:__anon90
fbos	src/renderergl2/tr_local.h	/^	FBO_t					*fbos[MAX_FBOS];$/;"	m	struct:__anon63
fcntlSizeHint	src/server/sqlite3.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fcon	src/tools/lcc/src/lex.c	/^static Symbol fcon(void) {$/;"	f	file:
fd	src/server/sqlite3.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	src/server/sqlite3.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	src/server/sqlite3.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fd	src/tools/lcc/cpp/cpp.h	/^	int	fd;		\/* input source *\/$/;"	m	struct:source
fdFile	src/renderercommon/tr_font.c	/^static byte	*fdFile;$/;"	v	file:
fdOffset	src/renderercommon/tr_font.c	/^static int fdOffset;$/;"	v	file:
fdatasync	src/server/sqlite3.c	30882;"	d	file:
feederCount	src/ui/ui_shared.h	/^  int ( *feederCount )( int feederID );$/;"	m	struct:__anon506
feederID	src/ui/ui_shared.h	/^  int feederID;                  \/\/ where to get data for this item$/;"	m	struct:itemDef_s
feederInitialise	src/ui/ui_shared.h	/^  int ( *feederInitialise )( int feederID );$/;"	m	struct:__anon506
feederItemImage	src/ui/ui_shared.h	/^  qhandle_t ( *feederItemImage )( int feederID, int index );$/;"	m	struct:__anon506
feederItemText	src/ui/ui_shared.h	/^  const char *( *feederItemText )( int feederID, int index, int column, qhandle_t *handle );$/;"	m	struct:__anon506
feederSelection	src/ui/ui_shared.h	/^  void ( *feederSelection )( int feederID, int index );$/;"	m	struct:__anon506
fetchPayload	src/server/sqlite3.c	/^static const void *fetchPayload($/;"	f	file:
ffred	src/renderercommon/tr_font.c	/^	float	ffred;$/;"	m	union:__anon105	file:
fg	src/server/sqlite3.c	/^    } fg;$/;"	m	struct:SrcList::SrcList_item	typeref:struct:SrcList::SrcList_item::__anon198	file:
field	src/tools/lcc/src/c.h	/^		Field field;$/;"	m	union:tree::__anon304
field	src/tools/lcc/src/c.h	/^struct field {$/;"	s
field	src/tools/lcc/src/expr.c	/^Tree field(Tree p, const char *name) {$/;"	f
field_t	src/game/g_spawn.c	/^} field_t;$/;"	t	typeref:struct:__anon367	file:
field_t	src/qcommon/qcommon.h	/^} field_t;$/;"	t	typeref:struct:__anon425
fieldleft	src/tools/lcc/src/c.h	62;"	d
fieldlist	src/tools/lcc/src/types.c	/^Field fieldlist(Type ty) {$/;"	f
fieldmask	src/tools/lcc/src/c.h	64;"	d
fieldref	src/tools/lcc/src/types.c	/^Field fieldref(const char *name, Type ty) {$/;"	f
fieldright	src/tools/lcc/src/c.h	61;"	d
fields	src/game/g_spawn.c	/^field_t fields[ ] =$/;"	v
fields	src/tools/lcc/src/decl.c	/^static void fields(Type ty) {$/;"	f	file:
fieldsize	src/tools/lcc/src/c.h	60;"	d
fieldtype_t	src/game/g_spawn.c	/^} fieldtype_t;$/;"	t	typeref:enum:__anon366	file:
fight	src/game/g_local.h	/^  qboolean          fight;$/;"	m	struct:__anon316
fightSound	src/cgame/cg_local.h	/^  sfxHandle_t fightSound;$/;"	m	struct:__anon251
file	src/client/cl_cin.c	/^	byte				file[65536];$/;"	m	struct:__anon99	file:
file	src/client/snd_codec.h	/^	fileHandle_t file;$/;"	m	struct:snd_stream_s
file	src/qcommon/common.c	/^	char *file;$/;"	m	struct:hunkblock_s	file:
file	src/qcommon/common.c	/^	char *file;$/;"	m	struct:zonedebug_s	file:
file	src/qcommon/files.c	/^	qfile_gut	file;$/;"	m	struct:qfile_us	file:
file	src/server/sqlite3.c	/^  SorterFile file;                \/* Temp file for level-0 PMAs *\/$/;"	m	struct:SortSubtask	file:
file	src/tools/lcc/cpp/cpp.h	/^	char	*file;$/;"	m	struct:includelist
file	src/tools/lcc/src/c.h	/^	char *file;$/;"	m	struct:coord
file	src/tools/lcc/src/input.c	/^char *file;		\/* current input file name *\/$/;"	v
file	src/tools/lcc/src/prof.c	/^	char *file, *name;$/;"	m	struct:callsite	file:
file	src/tools/lcc/src/profio.c	/^			char *file;		\/* call site: file, x, y *\/$/;"	m	struct:file::func::caller	file:
file	src/tools/lcc/src/profio.c	/^struct file {			\/* per-file prof.out data: *\/$/;"	s	file:
file2	src/server/sqlite3.c	/^  SorterFile file2;               \/* Space for other PMAs *\/$/;"	m	struct:SortSubtask	file:
fileBase	src/renderergl1/tr_bsp.c	/^static	byte		*fileBase;$/;"	v	file:
fileBase	src/renderergl2/tr_bsp.c	/^static	byte		*fileBase;$/;"	v	file:
fileChunkSize	src/server/sqlite3.c	84625;"	d	file:
fileHandleData_t	src/qcommon/files.c	/^} fileHandleData_t;$/;"	t	typeref:struct:__anon455	file:
fileHandle_t	src/qcommon/q_shared.h	/^typedef int		fileHandle_t;$/;"	t
fileHasMoved	src/server/sqlite3.c	/^static int fileHasMoved(unixFile *pFile){$/;"	f	file:
fileId	src/server/sqlite3.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
fileInPack_s	src/qcommon/files.c	/^typedef struct fileInPack_s {$/;"	s	file:
fileInPack_t	src/qcommon/files.c	/^} fileInPack_t;$/;"	t	typeref:struct:fileInPack_s	file:
fileName	src/client/cl_avi.c	/^  char          fileName[ MAX_QPATH ];$/;"	m	struct:aviFileData_s	file:
fileName	src/client/cl_cin.c	/^	char				fileName[MAX_OSPATH];$/;"	m	struct:__anon100	file:
fileName	src/renderergl1/tr_local.h	/^	char *fileName;$/;"	m	struct:__anon172
fileName	src/renderergl2/tr_local.h	/^	char *fileName;$/;"	m	struct:__anon72
fileOpen	src/client/cl_avi.c	/^  qboolean      fileOpen;$/;"	m	struct:aviFileData_s	file:
fileSize	src/client/cl_avi.c	/^  int           fileSize;$/;"	m	struct:aviFileData_s	file:
fileSize	src/qcommon/files.c	/^	int			fileSize;$/;"	m	struct:__anon455	file:
fileSize	src/renderercommon/tr_image_bmp.c	/^	unsigned fileSize;$/;"	m	struct:__anon110	file:
file_control	src/server/sqlite3.c	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	file:
file_format	src/server/sqlite3.c	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema	file:
filelen	src/qcommon/qfiles.h	/^	int		fileofs, filelen;$/;"	m	struct:__anon405
filelength	src/tools/lcc/src/bytecode.c	/^static int filelength( FILE *f ) {$/;"	f	file:
filelist	src/tools/lcc/src/prof.c	/^static List filelist;	\/* list of file names *\/$/;"	v	file:
filelist	src/tools/lcc/src/profio.c	/^} *filelist;$/;"	v	typeref:struct:file
filename	src/client/snd_openal.c	/^	char			filename[MAX_QPATH];$/;"	m	struct:alSfx_s	file:
filename	src/qcommon/parse.c	/^  char filename[1024];            \/\/file name of the script$/;"	m	struct:script_s	file:
filename	src/qcommon/parse.c	/^  char filename[MAX_QPATH];     \/\/file name of the script$/;"	m	struct:source_s	file:
filename	src/tools/lcc/cpp/cpp.h	/^	char	*filename;	\/* name of file of the source *\/$/;"	m	struct:source
filename	src/tools/lcc/etc/lcc.c	/^static int filename(char *name, char *base) {$/;"	f	file:
fileofs	src/qcommon/qfiles.h	/^	int		fileofs, filelen;$/;"	m	struct:__anon405
filesize	src/renderercommon/iqm.h	/^    unsigned int filesize;$/;"	m	struct:iqmheader
fillInCell	src/server/sqlite3.c	/^static int fillInCell($/;"	f	file:
fillInUnixFile	src/server/sqlite3.c	/^static int fillInUnixFile($/;"	f	file:
fillRect	src/ui/ui_shared.h	/^  void ( *fillRect ) ( float x, float y, float w, float h, const vec4_t color );$/;"	m	struct:__anon506
fillbuf	src/tools/lcc/cpp/lex.c	/^fillbuf(Source *s)$/;"	f
fillbuf	src/tools/lcc/src/input.c	/^void fillbuf(void) {$/;"	f
filler	src/renderercommon/tr_image_pcx.c	/^	char	filler[54];$/;"	m	struct:__anon124	file:
filter	src/server/sqlite3.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
final	src/cgame/cg_local.h	/^  float final;$/;"	m	struct:pLerpValues_s
finalColor	src/cgame/cg_local.h	/^  byte            finalColor[ 3 ];$/;"	m	struct:baseParticle_s
finalDbSize	src/server/sqlite3.c	/^static Pgno finalDbSize(BtShared *pBt, Pgno nOrig, Pgno nFree){$/;"	f	file:
finalFrac	src/client/cl_console.c	/^	float	finalFrac;		\/\/ 0.0 to 1.0 lines of console to display$/;"	m	struct:__anon102	file:
finalRandFrac	src/cgame/cg_local.h	/^  float finalRandFrac;$/;"	m	struct:pLerpValues_s
finalize	src/server/sqlite3.c	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
finalize	src/tools/lcc/src/decl.c	/^void finalize(void) {$/;"	f
finalizeAggFunctions	src/server/sqlite3.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
find	src/tools/lcc/etc/lcc.c	/^static List find(char *str, List list) {$/;"	f	file:
findBtree	src/server/sqlite3.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findCell	src/server/sqlite3.c	56819;"	d	file:
findCellPastPtr	src/server/sqlite3.c	56821;"	d	file:
findCollSeqEntry	src/server/sqlite3.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCreateFileMode	src/server/sqlite3.c	/^static int findCreateFileMode($/;"	f	file:
findElementWithHash	src/server/sqlite3.c	/^static HashElem *findElementWithHash($/;"	f	file:
findEmptySpot	src/game/g_misc.c	/^static void findEmptySpot( vec3_t origin, float radius, vec3_t spot )$/;"	f	file:
findIndexCol	src/server/sqlite3.c	/^static int findIndexCol($/;"	f	file:
findIndexOrPrimaryKey	src/server/sqlite3.c	/^static Index *findIndexOrPrimaryKey($/;"	f	file:
findInodeInfo	src/server/sqlite3.c	/^static int findInodeInfo($/;"	f	file:
findLeafNode	src/server/sqlite3.c	/^static int findLeafNode($/;"	f	file:
findNextHostParameter	src/server/sqlite3.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findPlayerName	src/ui/ui_local.h	/^  char findPlayerName[MAX_STRING_CHARS];$/;"	m	struct:__anon518
findReusableFd	src/server/sqlite3.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findRightmost	src/server/sqlite3.c	/^static Select *findRightmost(Select *p){$/;"	f	file:
findcount	src/tools/lcc/src/profio.c	/^int findcount(char *file, int x, int y) {$/;"	f
finder_type	src/server/sqlite3.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
findfile	src/tools/lcc/src/profio.c	/^static struct file *findfile(char *name) {$/;"	f	file:
findfunc	src/tools/lcc/src/profio.c	/^int findfunc(char *name, char *file) {$/;"	f
findlabel	src/tools/lcc/src/sym.c	/^Symbol findlabel(int lab) {$/;"	f
findtype	src/tools/lcc/src/sym.c	/^Symbol findtype(Type ty) {$/;"	f
finishCalled	src/renderergl1/tr_local.h	/^	qboolean	finishCalled;$/;"	m	struct:__anon160
finishCalled	src/renderergl2/tr_local.h	/^	qboolean	finishCalled;$/;"	m	struct:__anon57
fire2Held	src/game/g_local.h	/^  qboolean            fire2Held;        \/\/ used for alt fire$/;"	m	struct:gclient_s
fireHeld	src/game/g_local.h	/^  qboolean            fireHeld;         \/\/ used for hook$/;"	m	struct:gclient_s
fire_blaster	src/game/g_missile.c	/^gentity_t *fire_blaster( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_bounceBall	src/game/g_missile.c	/^gentity_t *fire_bounceBall( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_flamer	src/game/g_missile.c	/^gentity_t *fire_flamer( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_hive	src/game/g_missile.c	/^gentity_t *fire_hive( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_lockblob	src/game/g_missile.c	/^gentity_t *fire_lockblob( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_luciferCannon	src/game/g_missile.c	/^gentity_t *fire_luciferCannon( gentity_t *self, vec3_t start, vec3_t dir,$/;"	f
fire_paraLockBlob	src/game/g_missile.c	/^gentity_t *fire_paraLockBlob( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_pulseRifle	src/game/g_missile.c	/^gentity_t *fire_pulseRifle( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
fire_slowBlob	src/game/g_missile.c	/^gentity_t *fire_slowBlob( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
firingSound	src/cgame/cg_local.h	/^  sfxHandle_t firingSound;$/;"	m	struct:weaponInfoMode_s
first	src/qcommon/vm_sparc.c	/^	struct src_insn		*first;$/;"	m	struct:func_info	typeref:struct:func_info::src_insn	file:
first	src/server/sqlite3.c	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash	file:
first	src/server/sqlite3.c	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash	file:
first	src/tools/lcc/etc/lcc.c	/^static char *first(char *list) {$/;"	f	file:
first	src/tools/lcc/src/alloc.c	/^	 first[] = {  { NULL },  { NULL },  { NULL } },$/;"	v	typeref:struct:block	file:
firstBrush	src/qcommon/qfiles.h	/^	int			firstBrush, numBrushes;$/;"	m	struct:__anon407
firstDemoFrameSkipped	src/client/client.h	/^	qboolean	firstDemoFrameSkipped;$/;"	m	struct:__anon87
firstFrame	src/game/bg_public.h	/^  int   firstFrame;$/;"	m	struct:animation_s
firstIndex	src/qcommon/qfiles.h	/^	int			firstIndex;$/;"	m	struct:__anon417
firstIndex	src/renderergl2/tr_local.h	/^	int			firstIndex;$/;"	m	struct:shaderCommands_s
firstIndex	src/renderergl2/tr_local.h	/^	int             firstIndex;$/;"	m	struct:srfBspSurface_s
firstLeafBrush	src/qcommon/cm_local.h	/^	int			firstLeafBrush;$/;"	m	struct:__anon435
firstLeafBrush	src/qcommon/qfiles.h	/^	int			firstLeafBrush;$/;"	m	struct:__anon411
firstLeafSurface	src/qcommon/cm_local.h	/^	int			firstLeafSurface;$/;"	m	struct:__anon435
firstLeafSurface	src/qcommon/qfiles.h	/^	int			firstLeafSurface;$/;"	m	struct:__anon411
firstPoint	src/qcommon/q_shared.h	/^	int		firstPoint;$/;"	m	struct:__anon471
firstSide	src/qcommon/qfiles.h	/^	int			firstSide;$/;"	m	struct:__anon413
firstSurface	src/qcommon/qfiles.h	/^	int			firstSurface, numSurfaces;$/;"	m	struct:__anon407
firstSurface	src/renderergl1/tr_local.h	/^	msurface_t	*firstSurface;$/;"	m	struct:__anon156
firstSurface	src/renderergl2/tr_local.h	/^	int	        firstSurface;$/;"	m	struct:__anon48
firstTime	src/server/server.h	/^	int			firstTime;			\/\/ time the adr was first used, for authorize timeout checks$/;"	m	struct:__anon187
firstVert	src/qcommon/qfiles.h	/^	int			firstVert;$/;"	m	struct:__anon417
firstVert	src/renderergl2/tr_local.h	/^	int             firstVert;$/;"	m	struct:srfBspSurface_s
first_entity	src/server/server.h	/^	int				first_entity;		\/\/ into the circular sv_packet_entities[]$/;"	m	struct:__anon185
first_frame	src/renderercommon/iqm.h	/^    unsigned int first_frame, num_frames;$/;"	m	struct:iqmanim
first_triangle	src/renderercommon/iqm.h	/^    unsigned int first_triangle, num_triangles;$/;"	m	struct:iqmmesh
first_triangle	src/renderergl1/tr_local.h	/^	int		first_triangle, num_triangles;$/;"	m	struct:srfIQModel_s
first_triangle	src/renderergl2/tr_local.h	/^	int		first_triangle, num_triangles;$/;"	m	struct:srfIQModel_s
first_vertex	src/renderercommon/iqm.h	/^    unsigned int first_vertex, num_vertexes;$/;"	m	struct:iqmmesh
first_vertex	src/renderergl1/tr_local.h	/^	int		first_vertex, num_vertexes;$/;"	m	struct:srfIQModel_s
first_vertex	src/renderergl2/tr_local.h	/^	int		first_vertex, num_vertexes;$/;"	m	struct:srfIQModel_s
firstarg	src/tools/lcc/src/dag.c	/^static Tree firstarg;$/;"	v	file:
firstfile	src/tools/lcc/src/input.c	/^char *firstfile;	\/* first input file *\/$/;"	v
firstmarksurface	src/renderergl1/tr_local.h	/^	msurface_t	**firstmarksurface;$/;"	m	struct:mnode_s
firstmarksurface	src/renderergl2/tr_local.h	/^	int         firstmarksurface;$/;"	m	struct:mnode_s
fixBoundingBox	src/server/sqlite3.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixLeafParent	src/server/sqlite3.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fixed	src/qcommon/puff.c	/^local int32_t fixed(struct state *s)$/;"	f
fixed16_t	src/qcommon/q_shared.h	/^typedef	int	fixed16_t;$/;"	t
fixed4_t	src/qcommon/q_shared.h	/^typedef	int	fixed4_t;$/;"	t
fixed8_t	src/qcommon/q_shared.h	/^typedef	int	fixed8_t;$/;"	t
fixedLevelsImage	src/renderergl2/tr_local.h	/^	image_t					*fixedLevelsImage;$/;"	m	struct:__anon63
fixed_origin	src/client/snd_local.h	/^	qboolean	fixed_origin;	\/\/ use origin instead of fetching entnum's origin$/;"	m	struct:__anon94
fixedlegs	src/cgame/cg_local.h	/^  qboolean    fixedlegs;                  \/\/ true if legs yaw is always the same as torso yaw$/;"	m	struct:__anon243
fixedtorso	src/cgame/cg_local.h	/^  qboolean    fixedtorso;                 \/\/ true if torso never changes yaw$/;"	m	struct:__anon243
fixlex	src/tools/lcc/cpp/lex.c	/^fixlex(void)$/;"	f
fixup	src/tools/lcc/src/dag.c	/^static void fixup(Node p) {$/;"	f	file:
fkActionTrigger	src/server/sqlite3.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkChildIsModified	src/server/sqlite3.c	/^static int fkChildIsModified($/;"	f	file:
fkLookupParent	src/server/sqlite3.c	/^static void fkLookupParent($/;"	f	file:
fkParentIsModified	src/server/sqlite3.c	/^static int fkParentIsModified($/;"	f	file:
fkScanChildren	src/server/sqlite3.c	/^static void fkScanChildren($/;"	f	file:
fkTriggerDelete	src/server/sqlite3.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkeyHash	src/server/sqlite3.c	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema	file:
flag	src/game/g_admin.c	/^  char *flag;$/;"	m	struct:__anon374	file:
flag	src/game/g_admin.h	/^  char *flag;$/;"	m	struct:__anon375
flag	src/game/g_admin.h	/^  char flag[ MAX_ADMIN_FLAG_LEN ];$/;"	m	struct:g_admin_command
flag	src/game/g_playmap.h	/^  int 	   flag;		\/* Flag bit *\/$/;"	m	struct:playMapFlagDesc_s
flag	src/server/sqlite3.c	/^  char flag;$/;"	m	struct:MatchInfo	file:
flag	src/tools/lcc/cpp/cpp.h	/^	char	flag;		\/* is defined, is pp name *\/$/;"	m	struct:nlist
flag	src/tools/lcc/cpp/cpp.h	/^	unsigned char 	flag;$/;"	m	struct:token
flag	src/tools/lcc/cpp/nlist.c	/^	int	flag;$/;"	m	struct:kwtab	file:
flagDesc	src/game/g_playmap.h	/^  char 	   *flagDesc;		\/* Description string *\/$/;"	m	struct:playMapFlagDesc_s
flagName	src/game/g_playmap.h	/^  char 	   *flagName;		\/* String to parse *\/$/;"	m	struct:playMapFlagDesc_s
flagStatus_t	src/qcommon/q_shared.h	/^} flagStatus_t;$/;"	t	typeref:enum:_flag_status
flags	src/game/g_admin.h	/^  char flags[ MAX_ADMIN_FLAGS ];$/;"	m	struct:g_admin_admin
flags	src/game/g_admin.h	/^  char flags[ MAX_ADMIN_FLAGS ];$/;"	m	struct:g_admin_level
flags	src/game/g_local.h	/^  int               flags;          \/\/ FL_* variables$/;"	m	struct:gentity_s
flags	src/game/g_playmap.h	/^  int flags;$/;"	m	struct:playMap_s
flags	src/qcommon/parse.c	/^  int flags;                      \/\/several script flags$/;"	m	struct:script_s	file:
flags	src/qcommon/parse.c	/^  int flags;                  \/\/define flags$/;"	m	struct:define_s	file:
flags	src/qcommon/q_shared.h	/^	int				flags;$/;"	m	struct:cvar_s
flags	src/qcommon/qfiles.h	/^	int			flags;$/;"	m	struct:__anon393
flags	src/qcommon/qfiles.h	/^	int		flags;$/;"	m	struct:__anon388
flags	src/qcommon/vm_powerpc_asm.c	/^	ppc_cpu_t flags;$/;"	m	struct:powerpc_opcode	file:
flags	src/qcommon/vm_powerpc_asm.c	/^	unsigned long flags;$/;"	m	struct:powerpc_operand	file:
flags	src/renderercommon/iqm.h	/^    unsigned int flags;$/;"	m	struct:iqmanim
flags	src/renderercommon/iqm.h	/^    unsigned int flags;$/;"	m	struct:iqmheader
flags	src/renderercommon/iqm.h	/^    unsigned int flags;$/;"	m	struct:iqmvertexarray
flags	src/renderercommon/tr_common.h	/^	imgFlags_t  flags;$/;"	m	struct:image_s
flags	src/renderergl2/tr_local.h	/^	viewParmFlags_t flags;$/;"	m	struct:__anon43
flags	src/server/server.h	/^	int flags;$/;"	m	struct:voipServerPacket_s
flags	src/server/sqlite3.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	src/server/sqlite3.c	/^  int flags;                      \/* Mask of configuration flags *\/$/;"	m	struct:Fts5SegIter	file:
flags	src/server/sqlite3.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:MemJournal	file:
flags	src/server/sqlite3.c	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3	file:
flags	src/server/sqlite3.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	src/server/sqlite3.c	/^  int flags;              \/* Copy of "flags" passed to sqlite3_blob_open() *\/$/;"	m	struct:Incrblob	file:
flags	src/server/sqlite3.c	/^  int flags;$/;"	m	struct:Fts3SegFilter	file:
flags	src/server/sqlite3.c	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr	file:
flags	src/server/sqlite3.c	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:Mem	file:
flags	src/server/sqlite3.c	/^  u32 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr	file:
flags	src/server/sqlite3.c	/^  u8 flags;                       \/* Copy of flags byte *\/$/;"	m	struct:StatPage	file:
flags	src/tools/lcc/doc/4.html	/^<h2><a NAME="flags">5.6 Interface Flags<\/a><\/h2>$/;"	a
flags	src/ui/ui_shared.h	/^  int flags;                      \/\/ visible, focus, mouseover, cursor$/;"	m	struct:__anon499
flamerFire	src/game/g_weapon.c	/^void flamerFire( gentity_t *ent )$/;"	f
flareCoeff	src/renderergl1/tr_flares.c	/^int flareCoeff;$/;"	v
flareCoeff	src/renderergl2/tr_flares.c	/^int flareCoeff;$/;"	v
flareImage	src/renderergl1/tr_local.h	/^	image_t					*flareImage;$/;"	m	struct:__anon163
flareImage	src/renderergl2/tr_local.h	/^	image_t					*flareImage;$/;"	m	struct:__anon63
flareShader	src/renderergl1/tr_local.h	/^	shader_t				*flareShader;$/;"	m	struct:__anon163
flareShader	src/renderergl2/tr_local.h	/^	shader_t				*flareShader;$/;"	m	struct:__anon63
flare_s	src/renderergl1/tr_flares.c	/^typedef struct flare_s {$/;"	s	file:
flare_s	src/renderergl2/tr_flares.c	/^typedef struct flare_s {$/;"	s	file:
flare_t	src/renderergl1/tr_flares.c	/^} flare_t;$/;"	t	typeref:struct:flare_s	file:
flare_t	src/renderergl2/tr_flares.c	/^} flare_t;$/;"	t	typeref:struct:flare_s	file:
flashDlight	src/cgame/cg_local.h	/^  float       flashDlight;$/;"	m	struct:weaponInfoMode_s
flashDlightColor	src/cgame/cg_local.h	/^  vec3_t      flashDlightColor;$/;"	m	struct:weaponInfoMode_s
flashModel	src/cgame/cg_local.h	/^  qhandle_t         flashModel;$/;"	m	struct:weaponInfo_s
flashModel3rdPerson	src/cgame/cg_local.h	/^  qhandle_t         flashModel3rdPerson;$/;"	m	struct:weaponInfo_s
flashSound	src/cgame/cg_local.h	/^  sfxHandle_t flashSound[ 4 ];  \/\/ fast firing weapons randomly choose$/;"	m	struct:weaponInfoMode_s
flattenSubquery	src/server/sqlite3.c	/^static int flattenSubquery($/;"	f	file:
flipflop	src/game/bg_public.h	/^  int   flipflop;     \/\/ true if animation should flipflop back to base$/;"	m	struct:animation_s
flist	src/tools/lcc/src/c.h	/^			Field flist;$/;"	m	struct:symbol::__anon296::__anon298
float	src/server/sqlite3.c	9802;"	d	file:
floatBase	src/qcommon/vm_powerpc.c	/^	unsigned int floatBase; \/\/ 0x59800004$/;"	m	struct:VM_Data	file:
floatLightmap	src/renderergl2/tr_local.h	/^	qboolean floatLightmap;$/;"	m	struct:__anon60
floatSwap	src/server/sqlite3.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
floatTime	src/renderergl1/tr_local.h	/^	float		floatTime;			\/\/ tr.refdef.time \/ 1000.0$/;"	m	struct:__anon147
floatTime	src/renderergl2/tr_local.h	/^	float		floatTime;			\/\/ tr.refdef.time \/ 1000.0$/;"	m	struct:__anon39
floatint_t	src/qcommon/q_shared.h	/^} floatint_t;$/;"	t	typeref:union:__anon457
floatint_t	src/tools/lcc/src/c.h	/^} floatint_t;$/;"	t	typeref:union:__anon283
floatmetric	src/tools/lcc/src/c.h	/^	Metrics floatmetric;$/;"	m	struct:interface
floattype	src/tools/lcc/src/types.c	/^Type floattype;			\/* float *\/$/;"	v
floatvalue	src/qcommon/parse.c	/^  double floatvalue;            \/\/floating point value$/;"	m	struct:token_s	file:
floatvalue	src/qcommon/parse.c	/^  double floatvalue;$/;"	m	struct:value_s	file:
floatvalue	src/qcommon/q_shared.h	/^	float floatvalue;$/;"	m	struct:pc_token_s
flockCheckReservedLock	src/server/sqlite3.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockClose	src/server/sqlite3.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockLock	src/server/sqlite3.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	src/server/sqlite3.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
floodDemerits	src/game/g_local.h	/^  int                 floodDemerits;$/;"	m	struct:__anon311
floodTime	src/game/g_local.h	/^  int                 floodTime;$/;"	m	struct:__anon311
floodnum	src/qcommon/cm_local.h	/^	int			floodnum;$/;"	m	struct:__anon439
floodvalid	src/qcommon/cm_local.h	/^	int			floodvalid;$/;"	m	struct:__anon439
floodvalid	src/qcommon/cm_local.h	/^	int			floodvalid;$/;"	m	struct:__anon440
flushout	src/tools/lcc/cpp/tokens.c	/^flushout(void)$/;"	f
flySpeed	src/game/g_local.h	/^  float               flySpeed;           \/\/ for spectator\/noclip moves$/;"	m	struct:__anon311
fmt	src/tools/lcc/src/trace.c	/^static char *fmt, *fp, *fmtend;	\/* format string, current & limit pointer *\/$/;"	v	file:
fmtend	src/tools/lcc/src/trace.c	/^static char *fmt, *fp, *fmtend;	\/* format string, current & limit pointer *\/$/;"	v	file:
fmtfp	src/game/bg_lib.c	/^static int fmtfp (char *buffer, size_t *currlen, size_t maxlen,$/;"	f	file:
fmtinfo	src/server/sqlite3.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmtint	src/game/bg_lib.c	/^static int fmtint (char *buffer, size_t *currlen, size_t maxlen,$/;"	f	file:
fmtstr	src/game/bg_lib.c	/^static int fmtstr (char *buffer, size_t *currlen, size_t maxlen,$/;"	f	file:
fmttype	src/server/sqlite3.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
focusColor	src/ui/ui_shared.h	/^  vec4_t focusColor;                \/\/ focus color for items$/;"	m	struct:__anon503
focusSound	src/ui/ui_shared.h	/^  sfxHandle_t focusSound;$/;"	m	struct:itemDef_s
fogImage	src/renderergl1/tr_local.h	/^	image_t					*fogImage;$/;"	m	struct:__anon163
fogImage	src/renderergl2/tr_local.h	/^	image_t					*fogImage;$/;"	m	struct:__anon63
fogIndex	src/renderergl1/tr_local.h	/^	int					fogIndex;$/;"	m	struct:msurface_s
fogIndex	src/renderergl1/tr_local.h	/^	int				fogIndex;$/;"	m	struct:srfPoly_s
fogIndex	src/renderergl2/tr_local.h	/^	int					fogIndex;$/;"	m	struct:msurface_s
fogIndex	src/renderergl2/tr_local.h	/^	int				fogIndex;$/;"	m	struct:srfPoly_s
fogNum	src/qcommon/qfiles.h	/^	int			fogNum;$/;"	m	struct:__anon417
fogNum	src/renderergl1/tr_flares.c	/^	int			fogNum;$/;"	m	struct:flare_s	file:
fogNum	src/renderergl1/tr_local.h	/^	int			fogNum;$/;"	m	struct:shaderCommands_s
fogNum	src/renderergl2/tr_flares.c	/^	int			fogNum;$/;"	m	struct:flare_s	file:
fogNum	src/renderergl2/tr_local.h	/^	int			fogNum;$/;"	m	struct:shaderCommands_s
fogParms	src/renderergl1/tr_local.h	/^	fogParms_t	fogParms;$/;"	m	struct:shader_s
fogParms	src/renderergl2/tr_local.h	/^	fogParms_t	fogParms;$/;"	m	struct:shader_s
fogParms_t	src/renderergl1/tr_local.h	/^} fogParms_t;$/;"	t	typeref:struct:__anon146
fogParms_t	src/renderergl2/tr_local.h	/^} fogParms_t;$/;"	t	typeref:struct:__anon30
fogPass	src/renderergl1/tr_local.h	/^	fogPass_t	fogPass;				\/\/ draw a blended pass, possibly with depth test equals$/;"	m	struct:shader_s
fogPass	src/renderergl2/tr_local.h	/^	fogPass_t	fogPass;				\/\/ draw a blended pass, possibly with depth test equals$/;"	m	struct:shader_s
fogPass_t	src/renderergl1/tr_local.h	/^} fogPass_t;$/;"	t	typeref:enum:__anon144
fogPass_t	src/renderergl2/tr_local.h	/^} fogPass_t;$/;"	t	typeref:enum:__anon28
fogShader	src/renderergl2/tr_local.h	/^	shaderProgram_t fogShader[FOGDEF_COUNT];$/;"	m	struct:__anon63
fogTable	src/renderergl1/tr_local.h	/^	float					fogTable[FOG_TABLE_SIZE];$/;"	m	struct:__anon163
fogTable	src/renderergl2/tr_local.h	/^	float					fogTable[FOG_TABLE_SIZE];$/;"	m	struct:__anon63
fog_t	src/renderergl1/tr_local.h	/^} fog_t;$/;"	t	typeref:struct:__anon149
fog_t	src/renderergl2/tr_local.h	/^} fog_t;$/;"	t	typeref:struct:__anon41
fogs	src/renderergl1/tr_local.h	/^	fog_t		*fogs;$/;"	m	struct:__anon157
fogs	src/renderergl2/tr_local.h	/^	fog_t		*fogs;$/;"	m	struct:__anon49
foldaddp	src/tools/lcc/src/simp.c	36;"	d	file:
foldcnst	src/tools/lcc/src/simp.c	5;"	d	file:
foldcond	src/tools/lcc/src/stmt.c	/^static int foldcond(Tree e1, Tree e2) {$/;"	f	file:
foldline	src/tools/lcc/cpp/lex.c	/^foldline(Source *s)$/;"	f
font	src/ui/ui_shared.h	/^  const char  *font;                \/\/ font$/;"	m	struct:__anon503
fontIndex	src/ui/ui_shared.h	/^  int fontIndex;                    \/\/$/;"	m	struct:__anon503
fontInfo_t	src/qcommon/q_shared.h	/^} fontInfo_t;$/;"	t	typeref:struct:__anon479
fontRegistered	src/ui/ui_shared.h	/^  qboolean fontRegistered;$/;"	m	struct:__anon504
fontStr	src/ui/ui_shared.h	/^  const char *fontStr;$/;"	m	struct:__anon504
footstep_t	src/cgame/cg_local.h	/^} footstep_t;$/;"	t	typeref:enum:__anon232
footsteps	src/cgame/cg_local.h	/^  footstep_t  footsteps;$/;"	m	struct:__anon243
footsteps	src/cgame/cg_local.h	/^  sfxHandle_t footsteps[ FOOTSTEP_TOTAL ][ 4 ];$/;"	m	struct:__anon251
force_emit	src/qcommon/vm_sparc.c	/^	int			force_emit;$/;"	m	struct:func_info	file:
forced_unload	src/qcommon/vm.c	/^static int forced_unload;$/;"	v	file:
foreColor	src/cgame/cg_local.h	/^  vec4_t        foreColor;$/;"	m	struct:__anon252
foreColor	src/ui/ui_shared.h	/^  vec4_t foreColor;               \/\/ text color$/;"	m	struct:__anon499
foreach	src/tools/lcc/src/sym.c	/^void foreach(Table tp, int lev, void (*apply)(Symbol, void *), void *cl) {$/;"	f
forest	src/tools/lcc/src/c.h	/^		Node forest;$/;"	m	union:code::__anon291
forest	src/tools/lcc/src/dag.c	/^static Node forest;$/;"	v	file:
format	src/client/cl_avi.c	/^  int format;$/;"	m	struct:audioFormat_s	file:
format	src/client/snd_local.h	/^	int			format;$/;"	m	struct:__anon95
format	src/renderercommon/iqm.h	/^    unsigned int format;$/;"	m	struct:iqmvertexarray
formatToStringTable	src/sdl/sdl_snd.c	/^} formatToStringTable[ ] =$/;"	v	typeref:struct:__anon381	file:
formatToStringTableSize	src/sdl/sdl_snd.c	/^static int formatToStringTableSize = ARRAY_LEN( formatToStringTable );$/;"	v	file:
forstmt	src/tools/lcc/src/stmt.c	/^static void forstmt(int lab, Swtch swp, int lev) {$/;"	f	file:
forward	src/game/bg_local.h	/^  vec3_t    forward, right, up;$/;"	m	struct:__anon324
forward	src/game/g_weapon.c	/^static  vec3_t  forward, right, up;$/;"	v	file:
forwardMoveTime	src/cgame/cg_local.h	/^  int           forwardMoveTime;                    \/\/ for struggling$/;"	m	struct:__anon249
forwardmove	src/qcommon/q_shared.h	/^	signed char	forwardmove, rightmove, upmove;$/;"	m	struct:usercmd_s
foundPlayerServerAddresses	src/ui/ui_local.h	/^  char foundPlayerServerAddresses[MAX_FOUNDPLAYER_SERVERS][MAX_ADDRESSLENGTH];$/;"	m	struct:__anon518
foundPlayerServerNames	src/ui/ui_local.h	/^  char foundPlayerServerNames[MAX_FOUNDPLAYER_SERVERS][MAX_ADDRESSLENGTH];$/;"	m	struct:__anon518
fov	src/game/bg_public.h	/^  int       fov;$/;"	m	struct:__anon349
fovX	src/renderergl1/tr_local.h	/^	float		fovX, fovY;$/;"	m	struct:__anon150
fovX	src/renderergl2/tr_local.h	/^	float		fovX, fovY;$/;"	m	struct:__anon43
fovY	src/renderergl1/tr_local.h	/^	float		fovX, fovY;$/;"	m	struct:__anon150
fovY	src/renderergl2/tr_local.h	/^	float		fovX, fovY;$/;"	m	struct:__anon43
fov_x	src/renderercommon/tr_types.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon115
fov_x	src/renderergl1/tr_local.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon147
fov_x	src/renderergl2/tr_local.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon39
fov_x	src/ui/ui_shared.h	/^  float fov_x;$/;"	m	struct:modelDef_s
fov_y	src/renderercommon/tr_types.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon115
fov_y	src/renderergl1/tr_local.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon147
fov_y	src/renderergl2/tr_local.h	/^	float		fov_x, fov_y;$/;"	m	struct:__anon39
fov_y	src/ui/ui_shared.h	/^  float fov_y;$/;"	m	struct:modelDef_s
fp	src/tools/lcc/src/profio.c	/^FILE *fp;$/;"	v
fp	src/tools/lcc/src/trace.c	/^static char *fmt, *fp, *fmtend;	\/* format string, current & limit pointer *\/$/;"	v	file:
fpr_list	src/qcommon/vm_powerpc.c	/^static const long int fpr_list[] = {$/;"	v	file:
fpr_pos	src/qcommon/vm_sparc.c	/^	int			fpr_pos;$/;"	m	struct:func_info	file:
fpr_total	src/qcommon/vm_powerpc.c	/^static const long int fpr_total = ARRAY_LEN( fpr_list );$/;"	v	file:
fpr_vstart	src/qcommon/vm_powerpc.c	/^static const long int fpr_vstart = 8;$/;"	v	file:
fprint	src/tools/lcc/src/output.c	/^void fprint(FILE *f, const char *fmt, ...) {$/;"	f
fpucw	src/asm/ftola.c	/^static const unsigned short fpucw = 0x0C7F;$/;"	v	file:
fraction	src/qcommon/q_shared.h	/^	float		fraction;	\/\/ time completed, 1.0 = didn't hit anything$/;"	m	struct:__anon470
fraction	src/renderergl2/tr_extramath.c	/^		unsigned int fraction:10;$/;"	m	struct:f16_u::__anon5	file:
fraction	src/renderergl2/tr_extramath.c	/^		unsigned int fraction:23;$/;"	m	struct:f32_u::__anon4	file:
fraglimitWarnings	src/cgame/cg_local.h	/^  int           fraglimitWarnings;$/;"	m	struct:__anon249
fragmentBuffer	src/qcommon/qcommon.h	/^	byte		fragmentBuffer[MAX_MSGLEN];$/;"	m	struct:__anon422
fragmentLength	src/qcommon/qcommon.h	/^	int			fragmentLength;	$/;"	m	struct:__anon422
fragmentSequence	src/qcommon/qcommon.h	/^	int			fragmentSequence;$/;"	m	struct:__anon422
fragmentShader	src/renderergl2/tr_local.h	/^	GLhandleARB     fragmentShader;$/;"	m	struct:shaderProgram_s
frame	src/cgame/cg_local.h	/^	int		frame;$/;"	m	struct:__anon257
frame	src/cgame/cg_local.h	/^  int         frame;$/;"	m	struct:__anon235
frame	src/client/client.h	/^	int		frame;$/;"	m	struct:alternateEntityState_s
frame	src/qcommon/q_shared.h	/^	int		frame;$/;"	m	struct:entityState_s
frame	src/renderercommon/tr_types.h	/^	int			frame;				\/\/ also used as MODEL_BEAM's diameter$/;"	m	struct:__anon114
frameBuffer	src/renderergl2/tr_fbo.h	/^	uint32_t        frameBuffer;$/;"	m	struct:FBO_s
frameCount	src/cgame/cg_draw.c	/^  int frameCount;$/;"	m	struct:__anon226	file:
frameCount	src/renderergl1/tr_local.h	/^	int						frameCount;		\/\/ incremented every frame$/;"	m	struct:__anon163
frameCount	src/renderergl1/tr_local.h	/^	int			frameCount;			\/\/ copied from tr.frameCount$/;"	m	struct:__anon150
frameCount	src/renderergl2/tr_local.h	/^	int						frameCount;		\/\/ incremented every frame$/;"	m	struct:__anon63
frameCount	src/renderergl2/tr_local.h	/^	int			frameCount;			\/\/ copied from tr.frameCount$/;"	m	struct:__anon43
frameCount	src/ui/ui_main.c	/^int frameCount = 0;$/;"	v
frameHeight	src/cgame/cg_local.h	/^  int           frameHeight;$/;"	m	struct:__anon252
frameInterpolation	src/cgame/cg_local.h	/^  float         frameInterpolation;                 \/\/ (float)( cg.time - cg.frame->serverTime ) \/$/;"	m	struct:__anon249
frameLerp	src/game/bg_public.h	/^  int   frameLerp;      \/\/ msec between frames$/;"	m	struct:animation_s
frameMsec	src/game/g_local.h	/^  int               frameMsec;                    \/\/ trap_Milliseconds() at end frame$/;"	m	struct:__anon316
framePeriod	src/client/cl_avi.c	/^  int           framePeriod;$/;"	m	struct:aviFileData_s	file:
framePostProcessed	src/renderergl2/tr_local.h	/^	qboolean    framePostProcessed;$/;"	m	struct:__anon62
frameRate	src/client/cl_avi.c	/^  int           frameRate;$/;"	m	struct:aviFileData_s	file:
frameSamples	src/cgame/cg_draw.c	/^  int frameSamples[ LAG_SAMPLES ];$/;"	m	struct:__anon226	file:
frameSceneNum	src/renderergl1/tr_flares.c	/^	int			frameSceneNum;$/;"	m	struct:flare_s	file:
frameSceneNum	src/renderergl1/tr_local.h	/^	int						frameSceneNum;	\/\/ zeroed at RE_BeginFrame$/;"	m	struct:__anon163
frameSceneNum	src/renderergl1/tr_local.h	/^	int			frameSceneNum;		\/\/ copied from tr.frameSceneNum$/;"	m	struct:__anon150
frameSceneNum	src/renderergl2/tr_flares.c	/^	int			frameSceneNum;$/;"	m	struct:flare_s	file:
frameSceneNum	src/renderergl2/tr_local.h	/^	int						frameSceneNum;	\/\/ zeroed at RE_BeginFrame$/;"	m	struct:__anon63
frameSceneNum	src/renderergl2/tr_local.h	/^	int			frameSceneNum;		\/\/ copied from tr.frameSceneNum$/;"	m	struct:__anon43
frameShader	src/cgame/cg_local.h	/^  qhandle_t     frameShader;$/;"	m	struct:__anon252
frameSize	src/renderergl2/tr_local.h	/^	uint32_t        frameSize;      \/\/ bytes to skip per frame when doing vertex animation$/;"	m	struct:vao_s
frameTime	src/cgame/cg_local.h	/^  int         frameTime;        \/\/ time when ->frame will be exactly on$/;"	m	struct:__anon235
frameTime	src/ui/ui_shared.h	/^  int        frameTime;$/;"	m	struct:__anon506
frameUsed	src/renderercommon/tr_common.h	/^	int			frameUsed;			\/\/ for texture usage in frame statistics$/;"	m	struct:image_s
frameWhenInvalidated	src/cgame/cg_local.h	/^  int               frameWhenInvalidated;$/;"	m	struct:particle_s
frameWidth	src/cgame/cg_local.h	/^  int           frameWidth;$/;"	m	struct:__anon252
frame_msec	src/client/cl_input.c	/^unsigned	frame_msec;$/;"	v
framebufferBlit	src/renderergl2/tr_local.h	/^	qboolean framebufferBlit;$/;"	m	struct:__anon60
framebufferMultisample	src/renderergl2/tr_local.h	/^	qboolean framebufferMultisample;$/;"	m	struct:__anon60
framebufferObject	src/renderergl2/tr_local.h	/^	qboolean framebufferObject;$/;"	m	struct:__anon60
framecount	src/client/client.h	/^	int			framecount;$/;"	m	struct:__anon90
framecount	src/game/bg_public.h	/^  int           framecount;$/;"	m	struct:pmove_s
frameno	src/tools/lcc/src/trace.c	/^static Symbol frameno;		\/* local holding frame number *\/$/;"	v	file:
framenum	src/client/snd_local.h	/^	int			framenum;$/;"	m	struct:loopSound_s
framenum	src/game/g_local.h	/^  int               framenum;$/;"	m	struct:__anon316
framerate	src/cgame/cg_local.h	/^  float           framerate;$/;"	m	struct:baseParticle_s
framerate	src/renderercommon/iqm.h	/^    float framerate;$/;"	m	struct:iqmanim
frames	src/renderergl2/tr_local.h	/^	mdvFrame_t     *frames;$/;"	m	struct:mdvModel_s
frames	src/server/server.h	/^	clientSnapshot_t	frames[PACKET_BACKUP];	\/\/ updates can be delta'd from here$/;"	m	struct:client_s
frames	src/server/server.h	/^	int frames;$/;"	m	struct:voipServerPacket_s
framesize	src/tools/lcc/src/gen.c	/^int framesize;$/;"	v
frametime	src/cgame/cg_local.h	/^  int           frametime;                          \/\/ cg.time - cg.oldTime$/;"	m	struct:__anon249
frametime	src/client/client.h	/^	int			frametime;			\/\/ msec since last frame$/;"	m	struct:__anon90
frametime	src/game/bg_local.h	/^  float     frametime;$/;"	m	struct:__anon324
fred	src/renderercommon/tr_font.c	/^	byte	fred[4];$/;"	m	union:__anon105	file:
free	src/server/sqlite3.c	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	file:
freeAfterEvent	src/game/g_local.h	/^  qboolean          freeAfterEvent;$/;"	m	struct:gentity_s
freeCursorConstraints	src/server/sqlite3.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeEphemeralFunction	src/server/sqlite3.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeHead	src/game/bg_alloc.c	/^static freeMemNode_t  *freeHead;$/;"	v	file:
freeIndex	src/server/sqlite3.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeMem	src/game/bg_alloc.c	/^static int            freeMem;$/;"	v	file:
freeMemNode_s	src/game/bg_alloc.c	/^typedef struct freeMemNode_s$/;"	s	file:
freeMemNode_t	src/game/bg_alloc.c	/^} freeMemNode_t;$/;"	t	typeref:struct:freeMemNode_s	file:
freeP4	src/server/sqlite3.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freePage	src/server/sqlite3.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage2	src/server/sqlite3.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freeSpace	src/server/sqlite3.c	/^static int freeSpace(MemPage *pPage, u16 iStart, u16 iSize){$/;"	f	file:
freeTempSpace	src/server/sqlite3.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
free_ppnode	src/qcommon/huffman.c	/^static void free_ppnode(huff_t* huff, node_t **ppnode) {$/;"	f	file:
free_source_insns	src/qcommon/vm_sparc.c	/^static void free_source_insns(struct func_info * const fp)$/;"	f	file:
free_table	src/server/sqlite3.c	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	file:
freeblocks	src/tools/lcc/src/alloc.c	/^static struct block *freeblocks;$/;"	v	typeref:struct:block	file:
freelist	src/client/snd_dma.c	/^static	channel_t		*freelist = NULL;$/;"	v	file:
freelist	src/client/snd_mem.c	/^static	sndBuffer	*freelist = NULL;$/;"	v	file:
freelist	src/qcommon/qcommon.h	/^	node_t**	freelist;$/;"	m	struct:__anon432
freemask	src/tools/lcc/src/config.h	/^	unsigned freemask[2];$/;"	m	struct:__anon279
freemask	src/tools/lcc/src/gen.c	/^unsigned freemask[2];$/;"	v
freenodes	src/tools/lcc/src/list.c	/^static List freenodes;		\/* free list nodes *\/$/;"	v	file:
freetime	src/game/g_local.h	/^  int               freetime;       \/\/ level.time when the object was freed$/;"	m	struct:gentity_s
frequency	src/renderergl1/tr_local.h	/^	float frequency;$/;"	m	struct:__anon137
frequency	src/renderergl2/tr_local.h	/^	float frequency;$/;"	m	struct:__anon19
freturn	src/tools/lcc/src/types.c	/^Type freturn(Type ty) {$/;"	f
friction	src/game/bg_public.h	/^  float     friction;$/;"	m	struct:__anon349
from	src/master/servers.h	/^	struct sockaddr_in from;$/;"	m	struct:addrmap_s	typeref:struct:addrmap_s::sockaddr_in
from_string	src/master/servers.h	/^	char* from_string;$/;"	m	struct:addrmap_s
front	src/game/g_local.h	/^  int front, back;$/;"	m	struct:spawnQueue_s
frontAlpha	src/cgame/cg_local.h	/^  float                   frontAlpha;$/;"	m	struct:baseTrailBeam_s
frontAttachment	src/cgame/cg_local.h	/^  attachment_t        frontAttachment;$/;"	m	struct:trailSystem_s
frontColor	src/cgame/cg_local.h	/^  byte                    frontColor[ 3 ];$/;"	m	struct:baseTrailBeam_s
frontEndCounters_t	src/renderergl1/tr_local.h	/^} frontEndCounters_t;$/;"	t	typeref:struct:__anon159
frontEndCounters_t	src/renderergl2/tr_local.h	/^} frontEndCounters_t;$/;"	t	typeref:struct:__anon56
frontEndMsec	src/renderergl1/tr_local.h	/^	int						frontEndMsec;		\/\/ not in pc due to clearing issue$/;"	m	struct:__anon163
frontEndMsec	src/renderergl2/tr_local.h	/^	int						frontEndMsec;		\/\/ not in pc due to clearing issue$/;"	m	struct:__anon63
frontTextureCoord	src/cgame/cg_local.h	/^  float                   frontTextureCoord;$/;"	m	struct:baseTrailBeam_s
frontWidth	src/cgame/cg_local.h	/^  float                   frontWidth;$/;"	m	struct:baseTrailBeam_s
frustum	src/renderergl1/tr_local.h	/^	cplane_t	frustum[4];$/;"	m	struct:__anon150
frustum	src/renderergl2/tr_local.h	/^	cplane_t	frustum[5];$/;"	m	struct:__anon43
fsFlags	src/server/sqlite3.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
fsMode_t	src/qcommon/q_shared.h	/^} fsMode_t;$/;"	t	typeref:enum:__anon464
fsOrigin_t	src/qcommon/q_shared.h	/^} fsOrigin_t;$/;"	t	typeref:enum:__anon465
fs_apppath	src/qcommon/files.c	/^static  cvar_t          *fs_apppath;$/;"	v	file:
fs_basegame	src/qcommon/files.c	/^static	cvar_t		*fs_basegame;$/;"	v	file:
fs_basepath	src/qcommon/files.c	/^static	cvar_t		*fs_basepath;$/;"	v	file:
fs_checksumFeed	src/qcommon/files.c	/^static int fs_checksumFeed;$/;"	v	file:
fs_debug	src/qcommon/files.c	/^static	cvar_t		*fs_debug;$/;"	v	file:
fs_directory_overpath_basegame	src/qcommon/files.c	/^static directory_t fs_directory_overpath_basegame;$/;"	v	file:
fs_directory_overpath_game	src/qcommon/files.c	/^static directory_t fs_directory_overpath_game;$/;"	v	file:
fs_gamedir	src/qcommon/files.c	/^static	char		fs_gamedir[MAX_OSPATH];	\/\/ this will be a single file name with no separators$/;"	v	file:
fs_gamedirvar	src/qcommon/files.c	/^static	cvar_t		*fs_gamedirvar;$/;"	v	file:
fs_homepath	src/qcommon/files.c	/^static	cvar_t		*fs_homepath;$/;"	v	file:
fs_loadCount	src/qcommon/files.c	/^static	int			fs_loadCount;			\/\/ total files read$/;"	v	file:
fs_loadStack	src/qcommon/files.c	/^static	int			fs_loadStack;			\/\/ total files in memory$/;"	v	file:
fs_numServerPaks	src/qcommon/files.c	/^static int		fs_numServerPaks = 0;$/;"	v	file:
fs_numServerReferencedPaks	src/qcommon/files.c	/^static int		fs_numServerReferencedPaks;$/;"	v	file:
fs_packFiles	src/qcommon/files.c	/^static	int			fs_packFiles = 0;		\/\/ total number of files in packs$/;"	v	file:
fs_pak_default	src/qcommon/files.c	/^static  cvar_t          *fs_pak_default;$/;"	v	file:
fs_readCount	src/qcommon/files.c	/^static	int			fs_readCount;			\/\/ total bytes read$/;"	v	file:
fs_reordered	src/qcommon/files.c	/^static qboolean fs_reordered;$/;"	v	file:
fs_searchpath_overpath_basegame	src/qcommon/files.c	/^static searchpath_t fs_searchpath_overpath_basegame;$/;"	v	file:
fs_searchpath_overpath_game	src/qcommon/files.c	/^static searchpath_t fs_searchpath_overpath_game;$/;"	v	file:
fs_searchpaths	src/qcommon/files.c	/^static	searchpath_t	*fs_searchpaths;$/;"	v	file:
fs_serverPakNames	src/qcommon/files.c	/^static char		*fs_serverPakNames[MAX_SEARCH_PATHS];			\/\/ pk3 names$/;"	v	file:
fs_serverPaks	src/qcommon/files.c	/^static int		fs_serverPaks[MAX_SEARCH_PATHS];				\/\/ checksums$/;"	v	file:
fs_serverReferencedPakNames	src/qcommon/files.c	/^static char		*fs_serverReferencedPakNames[MAX_SEARCH_PATHS];		\/\/ pk3 names$/;"	v	file:
fs_serverReferencedPaks	src/qcommon/files.c	/^static int		fs_serverReferencedPaks[MAX_SEARCH_PATHS];			\/\/ checksums$/;"	v	file:
fsh	src/qcommon/files.c	/^static fileHandleData_t	fsh[MAX_FILE_HANDLES];$/;"	v	file:
fsm	src/tools/lcc/cpp/lex.c	/^\/*const*\/ struct fsm fsm[] = {$/;"	v	typeref:struct:fsm
fsm	src/tools/lcc/cpp/lex.c	/^struct	fsm {$/;"	s	file:
ftLibrary	src/renderercommon/tr_font.c	/^FT_Library ftLibrary = NULL;  $/;"	v
ftab	src/tools/lcc/src/c.h	/^			Table ftab;		\/* omit *\/$/;"	m	struct:symbol::__anon296::__anon298
ftol	src/renderercommon/tr_public.h	/^	long    (*ftol)(float f);$/;"	m	struct:__anon109
fts3AllocateSegdirIdx	src/server/sqlite3.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3AppendToNode	src/server/sqlite3.c	/^static int fts3AppendToNode($/;"	f	file:
fts3Appendf	src/server/sqlite3.c	/^static void fts3Appendf($/;"	f	file:
fts3BeginMethod	src/server/sqlite3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BestIndexMethod	src/server/sqlite3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestSnippet	src/server/sqlite3.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BinCompare	src/server/sqlite3.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinHash	src/server/sqlite3.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3ChecksumEntry	src/server/sqlite3.c	/^static u64 fts3ChecksumEntry($/;"	f	file:
fts3ChecksumIndex	src/server/sqlite3.c	/^static u64 fts3ChecksumIndex($/;"	f	file:
fts3CloseMethod	src/server/sqlite3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3ColumnFilter	src/server/sqlite3.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnMethod	src/server/sqlite3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnlistCopy	src/server/sqlite3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCount	src/server/sqlite3.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3CommitMethod	src/server/sqlite3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CompareElemByTerm	src/server/sqlite3.c	/^static int SQLITE_CDECL fts3CompareElemByTerm($/;"	f	file:
fts3ConnectMethod	src/server/sqlite3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3ContentColumns	src/server/sqlite3.c	/^static int fts3ContentColumns($/;"	f	file:
fts3CreateMethod	src/server/sqlite3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateTables	src/server/sqlite3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CursorSeek	src/server/sqlite3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeekStmt	src/server/sqlite3.c	/^static int fts3CursorSeekStmt(Fts3Cursor *pCsr, sqlite3_stmt **ppStmt){$/;"	f	file:
fts3DatabasePageSize	src/server/sqlite3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DbExec	src/server/sqlite3.c	/^static void fts3DbExec($/;"	f	file:
fts3DeclareVtab	src/server/sqlite3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DecodeIntArray	src/server/sqlite3.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DeleteAll	src/server/sqlite3.c	/^static int fts3DeleteAll(Fts3Table *p, int bContent){$/;"	f	file:
fts3DeleteByRowid	src/server/sqlite3.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteSegdir	src/server/sqlite3.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteSegment	src/server/sqlite3.c	/^static int fts3DeleteSegment($/;"	f	file:
fts3DeleteTerms	src/server/sqlite3.c	/^static void fts3DeleteTerms( $/;"	f	file:
fts3DestroyMethod	src/server/sqlite3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	src/server/sqlite3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DoAutoincrmerge	src/server/sqlite3.c	/^static int fts3DoAutoincrmerge($/;"	f	file:
fts3DoIncrmerge	src/server/sqlite3.c	/^static int fts3DoIncrmerge($/;"	f	file:
fts3DoIntegrityCheck	src/server/sqlite3.c	/^static int fts3DoIntegrityCheck($/;"	f	file:
fts3DoOptimize	src/server/sqlite3.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoRebuild	src/server/sqlite3.c	/^static int fts3DoRebuild(Fts3Table *p){$/;"	f	file:
fts3DocidRange	src/server/sqlite3.c	/^static sqlite3_int64 fts3DocidRange(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts3DoclistCountDocids	src/server/sqlite3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistOrMerge	src/server/sqlite3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistPhraseMerge	src/server/sqlite3.c	/^static int fts3DoclistPhraseMerge($/;"	f	file:
fts3EncodeIntArray	src/server/sqlite3.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EofMethod	src/server/sqlite3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EvalAllocateReaders	src/server/sqlite3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAverageDocsize	src/server/sqlite3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalDeferredPhrase	src/server/sqlite3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalDlPhraseNext	src/server/sqlite3.c	/^static void fts3EvalDlPhraseNext($/;"	f	file:
fts3EvalGatherStats	src/server/sqlite3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalIncrPhraseNext	src/server/sqlite3.c	/^static int fts3EvalIncrPhraseNext($/;"	f	file:
fts3EvalInvalidatePoslist	src/server/sqlite3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalNearTest	src/server/sqlite3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTrim	src/server/sqlite3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNext	src/server/sqlite3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNextRow	src/server/sqlite3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalPhraseLoad	src/server/sqlite3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseMergeToken	src/server/sqlite3.c	/^static int fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseNext	src/server/sqlite3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseStart	src/server/sqlite3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalRestart	src/server/sqlite3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalSelectDeferred	src/server/sqlite3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalStart	src/server/sqlite3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStartReaders	src/server/sqlite3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalTestExpr	src/server/sqlite3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTokenCosts	src/server/sqlite3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalUpdateCounts	src/server/sqlite3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprBalance	src/server/sqlite3.c	/^static int fts3ExprBalance(Fts3Expr **pp, int nMaxDepth){$/;"	f	file:
fts3ExprCheckDepth	src/server/sqlite3.c	/^static int fts3ExprCheckDepth(Fts3Expr *p, int nMaxDepth){$/;"	f	file:
fts3ExprGlobalHitsCb	src/server/sqlite3.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprIterate	src/server/sqlite3.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate2	src/server/sqlite3.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprLHitGather	src/server/sqlite3.c	/^static void fts3ExprLHitGather($/;"	f	file:
fts3ExprLHits	src/server/sqlite3.c	/^static void fts3ExprLHits($/;"	f	file:
fts3ExprLoadDoclists	src/server/sqlite3.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclistsCb	src/server/sqlite3.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLocalHitsCb	src/server/sqlite3.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprParse	src/server/sqlite3.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprParseUnbalanced	src/server/sqlite3.c	/^static int fts3ExprParseUnbalanced($/;"	f	file:
fts3ExprPhraseCount	src/server/sqlite3.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCountCb	src/server/sqlite3.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	src/server/sqlite3.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTest	src/server/sqlite3.c	/^static void fts3ExprTest($/;"	f	file:
fts3FilterMethod	src/server/sqlite3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FindElementByHash	src/server/sqlite3.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindFunctionMethod	src/server/sqlite3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FreeExprNode	src/server/sqlite3.c	/^static void fts3FreeExprNode(Fts3Expr *p){$/;"	f	file:
fts3FunctionArg	src/server/sqlite3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3GetDeltaPosition	src/server/sqlite3.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaVarint	src/server/sqlite3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint3	src/server/sqlite3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetMatchinfo	src/server/sqlite3.c	/^static void fts3GetMatchinfo($/;"	f	file:
fts3GetReverseVarint	src/server/sqlite3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GetVarint32	src/server/sqlite3.c	138651;"	d	file:
fts3Getint	src/server/sqlite3.c	/^static int fts3Getint(const char **pz){$/;"	f	file:
fts3GobbleInt	src/server/sqlite3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3HashClear	src/server/sqlite3.c	138122;"	d	file:
fts3HashCount	src/server/sqlite3.c	138146;"	d	file:
fts3HashData	src/server/sqlite3.c	138139;"	d	file:
fts3HashFind	src/server/sqlite3.c	138121;"	d	file:
fts3HashFindElem	src/server/sqlite3.c	138123;"	d	file:
fts3HashFirst	src/server/sqlite3.c	138137;"	d	file:
fts3HashFree	src/server/sqlite3.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashInit	src/server/sqlite3.c	138119;"	d	file:
fts3HashInsert	src/server/sqlite3.c	138120;"	d	file:
fts3HashInsertElement	src/server/sqlite3.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashKey	src/server/sqlite3.c	138140;"	d	file:
fts3HashKeysize	src/server/sqlite3.c	138141;"	d	file:
fts3HashMalloc	src/server/sqlite3.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashNext	src/server/sqlite3.c	138138;"	d	file:
fts3IncrmergeAppend	src/server/sqlite3.c	/^static int fts3IncrmergeAppend($/;"	f	file:
fts3IncrmergeChomp	src/server/sqlite3.c	/^static int fts3IncrmergeChomp($/;"	f	file:
fts3IncrmergeCsr	src/server/sqlite3.c	/^static int fts3IncrmergeCsr($/;"	f	file:
fts3IncrmergeHintLoad	src/server/sqlite3.c	/^static int fts3IncrmergeHintLoad(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintPop	src/server/sqlite3.c	/^static int fts3IncrmergeHintPop(Blob *pHint, i64 *piAbsLevel, int *pnInput){$/;"	f	file:
fts3IncrmergeHintPush	src/server/sqlite3.c	/^static void fts3IncrmergeHintPush($/;"	f	file:
fts3IncrmergeHintStore	src/server/sqlite3.c	/^static int fts3IncrmergeHintStore(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeLoad	src/server/sqlite3.c	/^static int fts3IncrmergeLoad($/;"	f	file:
fts3IncrmergeOutputIdx	src/server/sqlite3.c	/^static int fts3IncrmergeOutputIdx( $/;"	f	file:
fts3IncrmergePush	src/server/sqlite3.c	/^static int fts3IncrmergePush($/;"	f	file:
fts3IncrmergeRelease	src/server/sqlite3.c	/^static void fts3IncrmergeRelease($/;"	f	file:
fts3IncrmergeWriter	src/server/sqlite3.c	/^static int fts3IncrmergeWriter( $/;"	f	file:
fts3InitVtab	src/server/sqlite3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InsertData	src/server/sqlite3.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertDocsize	src/server/sqlite3.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertTerms	src/server/sqlite3.c	/^static int fts3InsertTerms($/;"	f	file:
fts3IntegrityCheck	src/server/sqlite3.c	/^static int fts3IntegrityCheck(Fts3Table *p, int *pbOk){$/;"	f	file:
fts3IsAppendable	src/server/sqlite3.c	/^static int fts3IsAppendable(Fts3Table *p, sqlite3_int64 iEnd, int *pbRes){$/;"	f	file:
fts3IsEmpty	src/server/sqlite3.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsSpecialColumn	src/server/sqlite3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3LcsIteratorAdvance	src/server/sqlite3.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3LogMerge	src/server/sqlite3.c	/^static void fts3LogMerge(int nMerge, sqlite3_int64 iAbsLevel){$/;"	f	file:
fts3LogMerge	src/server/sqlite3.c	148574;"	d	file:
fts3MIBufferAlloc	src/server/sqlite3.c	/^static void (*fts3MIBufferAlloc(MatchinfoBuffer *p, u32 **paOut))(void*){$/;"	f	file:
fts3MIBufferFree	src/server/sqlite3.c	/^static void fts3MIBufferFree(void *p){$/;"	f	file:
fts3MIBufferNew	src/server/sqlite3.c	/^static MatchinfoBuffer *fts3MIBufferNew(int nElem, const char *zMatchinfo){$/;"	f	file:
fts3MIBufferSetGlobal	src/server/sqlite3.c	/^static void fts3MIBufferSetGlobal(MatchinfoBuffer *p){$/;"	f	file:
fts3MallocZero	src/server/sqlite3.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MatchinfoCheck	src/server/sqlite3.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoFunc	src/server/sqlite3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoLcs	src/server/sqlite3.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcsCb	src/server/sqlite3.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoSelectDoctotal	src/server/sqlite3.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSize	src/server/sqlite3.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoValues	src/server/sqlite3.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3Module	src/server/sqlite3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3MsrBufferData	src/server/sqlite3.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3NextMethod	src/server/sqlite3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NodeAddTerm	src/server/sqlite3.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeFree	src/server/sqlite3.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeWrite	src/server/sqlite3.c	/^static int fts3NodeWrite($/;"	f	file:
fts3OffsetsFunc	src/server/sqlite3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OpenMethod	src/server/sqlite3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OptimizeFunc	src/server/sqlite3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3PendingListAppend	src/server/sqlite3.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppendVarint	src/server/sqlite3.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListDelete	src/server/sqlite3.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingTermsAdd	src/server/sqlite3.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAddOne	src/server/sqlite3.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsDocid	src/server/sqlite3.c	/^static int fts3PendingTermsDocid($/;"	f	file:
fts3PoslistCopy	src/server/sqlite3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistMerge	src/server/sqlite3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistNearMerge	src/server/sqlite3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistPhraseMerge	src/server/sqlite3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PrefixCompress	src/server/sqlite3.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixParameter	src/server/sqlite3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PromoteSegments	src/server/sqlite3.c	/^static int fts3PromoteSegments($/;"	f	file:
fts3PutColNumber	src/server/sqlite3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutDeltaVarint	src/server/sqlite3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint3	src/server/sqlite3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3QuoteId	src/server/sqlite3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3ReadEndBlockField	src/server/sqlite3.c	/^static void fts3ReadEndBlockField($/;"	f	file:
fts3ReadExprList	src/server/sqlite3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadNextPos	src/server/sqlite3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReallocOrFree	src/server/sqlite3.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3Rehash	src/server/sqlite3.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3ReleaseMethod	src/server/sqlite3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RemoveElementByHash	src/server/sqlite3.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RemoveSegdirEntry	src/server/sqlite3.c	/^static int fts3RemoveSegdirEntry($/;"	f	file:
fts3RenameMethod	src/server/sqlite3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3RepackSegdirLevel	src/server/sqlite3.c	/^static int fts3RepackSegdirLevel($/;"	f	file:
fts3ReversePoslist	src/server/sqlite3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3RollbackMethod	src/server/sqlite3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackToMethod	src/server/sqlite3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RowidMethod	src/server/sqlite3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3SavepointMethod	src/server/sqlite3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ScanInteriorNode	src/server/sqlite3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3SegReaderCmp	src/server/sqlite3.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCursor	src/server/sqlite3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursorAddZero	src/server/sqlite3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAppend	src/server/sqlite3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorFree	src/server/sqlite3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderDoclistCmp	src/server/sqlite3.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	src/server/sqlite3.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderFirstDocid	src/server/sqlite3.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	src/server/sqlite3.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIsPending	src/server/sqlite3.c	148659;"	d	file:
fts3SegReaderIsRootOnly	src/server/sqlite3.c	148660;"	d	file:
fts3SegReaderNext	src/server/sqlite3.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNextDocid	src/server/sqlite3.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderRequire	src/server/sqlite3.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderSetEof	src/server/sqlite3.c	/^static void fts3SegReaderSetEof(Fts3SegReader *pSeg){$/;"	f	file:
fts3SegReaderSort	src/server/sqlite3.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderStart	src/server/sqlite3.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderTermCmp	src/server/sqlite3.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegWriterAdd	src/server/sqlite3.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterFlush	src/server/sqlite3.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFree	src/server/sqlite3.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegmentIsMaxLevel	src/server/sqlite3.c	/^static int fts3SegmentIsMaxLevel(Fts3Table *p, i64 iAbsLevel, int *pbMax){$/;"	f	file:
fts3SegmentMaxLevel	src/server/sqlite3.c	/^static int fts3SegmentMaxLevel($/;"	f	file:
fts3SegmentMerge	src/server/sqlite3.c	/^static int fts3SegmentMerge($/;"	f	file:
fts3SelectDocsize	src/server/sqlite3.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectLeaf	src/server/sqlite3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SetEstimatedRows	src/server/sqlite3.c	/^static void fts3SetEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
fts3SetHasStat	src/server/sqlite3.c	/^static int fts3SetHasStat(Fts3Table *p){$/;"	f	file:
fts3SetUniqueFlag	src/server/sqlite3.c	/^static void fts3SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts3SnippetAdvance	src/server/sqlite3.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetDetails	src/server/sqlite3.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetFindPositions	src/server/sqlite3.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFunc	src/server/sqlite3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetNextCandidate	src/server/sqlite3.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetShift	src/server/sqlite3.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetText	src/server/sqlite3.c	/^static int fts3SnippetText($/;"	f	file:
fts3SpecialInsert	src/server/sqlite3.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SqlExec	src/server/sqlite3.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlStmt	src/server/sqlite3.c	/^static int fts3SqlStmt($/;"	f	file:
fts3StartNode	src/server/sqlite3.c	/^static void fts3StartNode(Blob *pNode, int iHeight, sqlite3_int64 iChild){$/;"	f	file:
fts3StrCompare	src/server/sqlite3.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrHash	src/server/sqlite3.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StringAppend	src/server/sqlite3.c	/^static int fts3StringAppend($/;"	f	file:
fts3SyncMethod	src/server/sqlite3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3TermCmp	src/server/sqlite3.c	/^static int fts3TermCmp($/;"	f	file:
fts3TermSegReaderCursor	src/server/sqlite3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSelect	src/server/sqlite3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelectFinishMerge	src/server/sqlite3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectMerge	src/server/sqlite3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TokenizerEnabled	src/server/sqlite3.c	/^static int fts3TokenizerEnabled(sqlite3_context *context){$/;"	f	file:
fts3TokenizerFunc	src/server/sqlite3.c	/^static void fts3TokenizerFunc($/;"	f	file:
fts3TreeFinishNode	src/server/sqlite3.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3TruncateNode	src/server/sqlite3.c	/^static int fts3TruncateNode($/;"	f	file:
fts3TruncateSegment	src/server/sqlite3.c	/^static int fts3TruncateSegment($/;"	f	file:
fts3UpdateDocTotals	src/server/sqlite3.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateMethod	src/server/sqlite3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3WriteExprList	src/server/sqlite3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteSegdir	src/server/sqlite3.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegment	src/server/sqlite3.c	/^static int fts3WriteSegment($/;"	f	file:
fts3Writelock	src/server/sqlite3.c	/^static int fts3Writelock(Fts3Table *p){$/;"	f	file:
fts3_isalnum	src/server/sqlite3.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3auxBestIndexMethod	src/server/sqlite3.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxCloseMethod	src/server/sqlite3.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxColumnMethod	src/server/sqlite3.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxConnectMethod	src/server/sqlite3.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxDisconnectMethod	src/server/sqlite3.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxEofMethod	src/server/sqlite3.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxFilterMethod	src/server/sqlite3.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxGrowStatArray	src/server/sqlite3.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxNextMethod	src/server/sqlite3.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxOpenMethod	src/server/sqlite3.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxRowidMethod	src/server/sqlite3.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3isspace	src/server/sqlite3.c	/^static int fts3isspace(char c){$/;"	f	file:
fts3tokBestIndexMethod	src/server/sqlite3.c	/^static int fts3tokBestIndexMethod($/;"	f	file:
fts3tokCloseMethod	src/server/sqlite3.c	/^static int fts3tokCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokColumnMethod	src/server/sqlite3.c	/^static int fts3tokColumnMethod($/;"	f	file:
fts3tokConnectMethod	src/server/sqlite3.c	/^static int fts3tokConnectMethod($/;"	f	file:
fts3tokDequoteArray	src/server/sqlite3.c	/^static int fts3tokDequoteArray($/;"	f	file:
fts3tokDisconnectMethod	src/server/sqlite3.c	/^static int fts3tokDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3tokEofMethod	src/server/sqlite3.c	/^static int fts3tokEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokFilterMethod	src/server/sqlite3.c	/^static int fts3tokFilterMethod($/;"	f	file:
fts3tokNextMethod	src/server/sqlite3.c	/^static int fts3tokNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokOpenMethod	src/server/sqlite3.c	/^static int fts3tokOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3tokQueryTokenizer	src/server/sqlite3.c	/^static int fts3tokQueryTokenizer($/;"	f	file:
fts3tokResetCursor	src/server/sqlite3.c	/^static void fts3tokResetCursor(Fts3tokCursor *pCsr){$/;"	f	file:
fts3tokRowidMethod	src/server/sqlite3.c	/^static int fts3tokRowidMethod($/;"	f	file:
fts5AllocateSegid	src/server/sqlite3.c	/^static int fts5AllocateSegid(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5ApiCallback	src/server/sqlite3.c	/^static void fts5ApiCallback($/;"	f	file:
fts5ApiColumnCount	src/server/sqlite3.c	/^static int fts5ApiColumnCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiColumnSize	src/server/sqlite3.c	/^static int fts5ApiColumnSize(Fts5Context *pCtx, int iCol, int *pnToken){$/;"	f	file:
fts5ApiColumnText	src/server/sqlite3.c	/^static int fts5ApiColumnText($/;"	f	file:
fts5ApiColumnTotalSize	src/server/sqlite3.c	/^static int fts5ApiColumnTotalSize($/;"	f	file:
fts5ApiGetAuxdata	src/server/sqlite3.c	/^static void *fts5ApiGetAuxdata(Fts5Context *pCtx, int bClear){$/;"	f	file:
fts5ApiInst	src/server/sqlite3.c	/^static int fts5ApiInst($/;"	f	file:
fts5ApiInstCount	src/server/sqlite3.c	/^static int fts5ApiInstCount(Fts5Context *pCtx, int *pnInst){$/;"	f	file:
fts5ApiInvoke	src/server/sqlite3.c	/^static void fts5ApiInvoke($/;"	f	file:
fts5ApiPhraseCount	src/server/sqlite3.c	/^static int fts5ApiPhraseCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiPhraseFirst	src/server/sqlite3.c	/^static int fts5ApiPhraseFirst($/;"	f	file:
fts5ApiPhraseFirstColumn	src/server/sqlite3.c	/^static int fts5ApiPhraseFirstColumn($/;"	f	file:
fts5ApiPhraseNext	src/server/sqlite3.c	/^static void fts5ApiPhraseNext($/;"	f	file:
fts5ApiPhraseNextColumn	src/server/sqlite3.c	/^static void fts5ApiPhraseNextColumn($/;"	f	file:
fts5ApiPhraseSize	src/server/sqlite3.c	/^static int fts5ApiPhraseSize(Fts5Context *pCtx, int iPhrase){$/;"	f	file:
fts5ApiQueryPhrase	src/server/sqlite3.c	/^static int fts5ApiQueryPhrase($/;"	f	file:
fts5ApiRowCount	src/server/sqlite3.c	/^static int fts5ApiRowCount(Fts5Context *pCtx, i64 *pnRow){$/;"	f	file:
fts5ApiRowid	src/server/sqlite3.c	/^static sqlite3_int64 fts5ApiRowid(Fts5Context *pCtx){$/;"	f	file:
fts5ApiSetAuxdata	src/server/sqlite3.c	/^static int fts5ApiSetAuxdata($/;"	f	file:
fts5ApiTokenize	src/server/sqlite3.c	/^static int fts5ApiTokenize($/;"	f	file:
fts5ApiUserData	src/server/sqlite3.c	/^static void *fts5ApiUserData(Fts5Context *pCtx){$/;"	f	file:
fts5AppendPoslist	src/server/sqlite3.c	/^static void fts5AppendPoslist($/;"	f	file:
fts5AppendRowid	src/server/sqlite3.c	/^static void fts5AppendRowid($/;"	f	file:
fts5AsciiAddExceptions	src/server/sqlite3.c	/^static void fts5AsciiAddExceptions($/;"	f	file:
fts5AsciiCreate	src/server/sqlite3.c	/^static int fts5AsciiCreate($/;"	f	file:
fts5AsciiDelete	src/server/sqlite3.c	/^static void fts5AsciiDelete(Fts5Tokenizer *p){$/;"	f	file:
fts5AsciiTokenize	src/server/sqlite3.c	/^static int fts5AsciiTokenize($/;"	f	file:
fts5AssertComparisonResult	src/server/sqlite3.c	/^static void fts5AssertComparisonResult($/;"	f	file:
fts5AssertMultiIterSetup	src/server/sqlite3.c	/^static void fts5AssertMultiIterSetup(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5AssertMultiIterSetup	src/server/sqlite3.c	178949;"	d	file:
fts5BeginMethod	src/server/sqlite3.c	/^static int fts5BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5BestIndexMethod	src/server/sqlite3.c	/^static int fts5BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts5Bm25Function	src/server/sqlite3.c	/^static void fts5Bm25Function($/;"	f	file:
fts5Bm25GetData	src/server/sqlite3.c	/^static int fts5Bm25GetData($/;"	f	file:
fts5BufferAppendBlob	src/server/sqlite3.c	169509;"	d	file:
fts5BufferAppendVarint	src/server/sqlite3.c	169507;"	d	file:
fts5BufferCompare	src/server/sqlite3.c	/^static int fts5BufferCompare(Fts5Buffer *pLeft, Fts5Buffer *pRight){$/;"	f	file:
fts5BufferCompareBlob	src/server/sqlite3.c	/^static int fts5BufferCompareBlob($/;"	f	file:
fts5BufferFree	src/server/sqlite3.c	169508;"	d	file:
fts5BufferGrow	src/server/sqlite3.c	169512;"	d	file:
fts5BufferSafeAppendBlob	src/server/sqlite3.c	177466;"	d	file:
fts5BufferSafeAppendVarint	src/server/sqlite3.c	177472;"	d	file:
fts5BufferSet	src/server/sqlite3.c	169510;"	d	file:
fts5BufferSwap	src/server/sqlite3.c	/^static void fts5BufferSwap(Fts5Buffer *p1, Fts5Buffer *p2){$/;"	f	file:
fts5BufferZero	src/server/sqlite3.c	169506;"	d	file:
fts5CInstIterInit	src/server/sqlite3.c	/^static int fts5CInstIterInit($/;"	f	file:
fts5CInstIterNext	src/server/sqlite3.c	/^static int fts5CInstIterNext(CInstIter *pIter){$/;"	f	file:
fts5CacheInstArray	src/server/sqlite3.c	/^static int fts5CacheInstArray(Fts5Cursor *pCsr){$/;"	f	file:
fts5CheckTransactionState	src/server/sqlite3.c	/^static void fts5CheckTransactionState(Fts5Table *p, int op, int iSavepoint){$/;"	f	file:
fts5CheckTransactionState	src/server/sqlite3.c	183146;"	d	file:
fts5ChunkIterate	src/server/sqlite3.c	/^static void fts5ChunkIterate($/;"	f	file:
fts5CloseMethod	src/server/sqlite3.c	/^static int fts5CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5CloseReader	src/server/sqlite3.c	/^static void fts5CloseReader(Fts5Index *p){$/;"	f	file:
fts5ColumnMethod	src/server/sqlite3.c	/^static int fts5ColumnMethod($/;"	f	file:
fts5ColumnSizeCb	src/server/sqlite3.c	/^static int fts5ColumnSizeCb($/;"	f	file:
fts5CommitMethod	src/server/sqlite3.c	/^static int fts5CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5ConfigDefaultTokenizer	src/server/sqlite3.c	/^static int fts5ConfigDefaultTokenizer(Fts5Global *pGlobal, Fts5Config *pConfig){$/;"	f	file:
fts5ConfigGobbleWord	src/server/sqlite3.c	/^static const char *fts5ConfigGobbleWord($/;"	f	file:
fts5ConfigMakeExprlist	src/server/sqlite3.c	/^static int fts5ConfigMakeExprlist(Fts5Config *p){$/;"	f	file:
fts5ConfigParseColumn	src/server/sqlite3.c	/^static int fts5ConfigParseColumn($/;"	f	file:
fts5ConfigParseSpecial	src/server/sqlite3.c	/^static int fts5ConfigParseSpecial($/;"	f	file:
fts5ConfigSetEnum	src/server/sqlite3.c	/^static int fts5ConfigSetEnum($/;"	f	file:
fts5ConfigSkipArgs	src/server/sqlite3.c	/^static const char *fts5ConfigSkipArgs(const char *pIn){$/;"	f	file:
fts5ConfigSkipBareword	src/server/sqlite3.c	/^static const char *fts5ConfigSkipBareword(const char *pIn){$/;"	f	file:
fts5ConfigSkipLiteral	src/server/sqlite3.c	/^static const char *fts5ConfigSkipLiteral(const char *pIn){$/;"	f	file:
fts5ConfigSkipWhitespace	src/server/sqlite3.c	/^static const char *fts5ConfigSkipWhitespace(const char *pIn){$/;"	f	file:
fts5ConnectMethod	src/server/sqlite3.c	/^static int fts5ConnectMethod($/;"	f	file:
fts5CountCb	src/server/sqlite3.c	/^static int fts5CountCb($/;"	f	file:
fts5CreateAux	src/server/sqlite3.c	/^static int fts5CreateAux($/;"	f	file:
fts5CreateMethod	src/server/sqlite3.c	/^static int fts5CreateMethod($/;"	f	file:
fts5CreateTokenizer	src/server/sqlite3.c	/^static int fts5CreateTokenizer($/;"	f	file:
fts5CsrNewrow	src/server/sqlite3.c	/^static void fts5CsrNewrow(Fts5Cursor *pCsr){$/;"	f	file:
fts5CsrPoslist	src/server/sqlite3.c	/^static int fts5CsrPoslist($/;"	f	file:
fts5CursorFirst	src/server/sqlite3.c	/^static int fts5CursorFirst(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirstSorted	src/server/sqlite3.c	/^static int fts5CursorFirstSorted(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFromCsrid	src/server/sqlite3.c	/^static Fts5Cursor *fts5CursorFromCsrid(Fts5Global *pGlobal, i64 iCsrId){$/;"	f	file:
fts5CursorParseRank	src/server/sqlite3.c	/^static int fts5CursorParseRank($/;"	f	file:
fts5CursorReseek	src/server/sqlite3.c	/^static int fts5CursorReseek(Fts5Cursor *pCsr, int *pbSkip){$/;"	f	file:
fts5CursorRowid	src/server/sqlite3.c	/^static i64 fts5CursorRowid(Fts5Cursor *pCsr){$/;"	f	file:
fts5DataDelete	src/server/sqlite3.c	/^static void fts5DataDelete(Fts5Index *p, i64 iFirst, i64 iLast){$/;"	f	file:
fts5DataRead	src/server/sqlite3.c	/^static Fts5Data *fts5DataRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5DataRelease	src/server/sqlite3.c	/^static void fts5DataRelease(Fts5Data *pData){$/;"	f	file:
fts5DataRemoveSegment	src/server/sqlite3.c	/^static void fts5DataRemoveSegment(Fts5Index *p, int iSegid){$/;"	f	file:
fts5DataWrite	src/server/sqlite3.c	/^static void fts5DataWrite(Fts5Index *p, i64 iRowid, const u8 *pData, int nData){$/;"	f	file:
fts5DebugRowid	src/server/sqlite3.c	/^static void fts5DebugRowid(int *pRc, Fts5Buffer *pBuf, i64 iKey){$/;"	f	file:
fts5DebugStructure	src/server/sqlite3.c	/^static void fts5DebugStructure($/;"	f	file:
fts5DecodeAverages	src/server/sqlite3.c	/^static void fts5DecodeAverages($/;"	f	file:
fts5DecodeDoclist	src/server/sqlite3.c	/^static int fts5DecodeDoclist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeFunction	src/server/sqlite3.c	/^static void fts5DecodeFunction($/;"	f	file:
fts5DecodePoslist	src/server/sqlite3.c	/^static int fts5DecodePoslist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeRowid	src/server/sqlite3.c	/^static void fts5DecodeRowid($/;"	f	file:
fts5DecodeRowidList	src/server/sqlite3.c	/^static void fts5DecodeRowidList($/;"	f	file:
fts5DecodeStructure	src/server/sqlite3.c	/^static void fts5DecodeStructure($/;"	f	file:
fts5Dequote	src/server/sqlite3.c	/^static int fts5Dequote(char *z){$/;"	f	file:
fts5DestroyMethod	src/server/sqlite3.c	/^static int fts5DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DisconnectMethod	src/server/sqlite3.c	/^static int fts5DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DlidxExtractFirstRowid	src/server/sqlite3.c	/^static i64 fts5DlidxExtractFirstRowid(Fts5Buffer *pBuf){$/;"	f	file:
fts5DlidxIterEof	src/server/sqlite3.c	/^static int fts5DlidxIterEof(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFirst	src/server/sqlite3.c	/^static int fts5DlidxIterFirst(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFree	src/server/sqlite3.c	/^static void fts5DlidxIterFree(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterInit	src/server/sqlite3.c	/^static Fts5DlidxIter *fts5DlidxIterInit($/;"	f	file:
fts5DlidxIterLast	src/server/sqlite3.c	/^static void fts5DlidxIterLast(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNext	src/server/sqlite3.c	/^static int fts5DlidxIterNext(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNextR	src/server/sqlite3.c	/^static int fts5DlidxIterNextR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterPgno	src/server/sqlite3.c	/^static int fts5DlidxIterPgno(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrev	src/server/sqlite3.c	/^static int fts5DlidxIterPrev(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrevR	src/server/sqlite3.c	/^static int fts5DlidxIterPrevR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterRowid	src/server/sqlite3.c	/^static i64 fts5DlidxIterRowid(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxLvlNext	src/server/sqlite3.c	/^static int fts5DlidxLvlNext(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlPrev	src/server/sqlite3.c	/^static int fts5DlidxLvlPrev(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DoclistIterInit	src/server/sqlite3.c	/^static void fts5DoclistIterInit($/;"	f	file:
fts5DoclistIterNext	src/server/sqlite3.c	/^static void fts5DoclistIterNext(Fts5DoclistIter *pIter){$/;"	f	file:
fts5EofMethod	src/server/sqlite3.c	/^static int fts5EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5ExecPrintf	src/server/sqlite3.c	/^static int fts5ExecPrintf($/;"	f	file:
fts5ExprAddChildren	src/server/sqlite3.c	/^static void fts5ExprAddChildren(Fts5ExprNode *p, Fts5ExprNode *pSub){$/;"	f	file:
fts5ExprAdvanceto	src/server/sqlite3.c	/^static int fts5ExprAdvanceto($/;"	f	file:
fts5ExprAssignXNext	src/server/sqlite3.c	/^static void fts5ExprAssignXNext(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprCheckPoslists	src/server/sqlite3.c	/^static int fts5ExprCheckPoslists(Fts5ExprNode *pNode, i64 iRowid){$/;"	f	file:
fts5ExprClearEof	src/server/sqlite3.c	/^static void fts5ExprClearEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprClearPoslists	src/server/sqlite3.c	/^static void fts5ExprClearPoslists(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprColsetTest	src/server/sqlite3.c	/^static int fts5ExprColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5ExprFold	src/server/sqlite3.c	/^static void fts5ExprFold($/;"	f	file:
fts5ExprFunction	src/server/sqlite3.c	/^static void fts5ExprFunction($/;"	f	file:
fts5ExprFunctionHr	src/server/sqlite3.c	/^static void fts5ExprFunctionHr($/;"	f	file:
fts5ExprFunctionTcl	src/server/sqlite3.c	/^static void fts5ExprFunctionTcl($/;"	f	file:
fts5ExprGetToken	src/server/sqlite3.c	/^static int fts5ExprGetToken($/;"	f	file:
fts5ExprIsAlnum	src/server/sqlite3.c	/^static void fts5ExprIsAlnum($/;"	f	file:
fts5ExprIsspace	src/server/sqlite3.c	/^static int fts5ExprIsspace(char t){$/;"	f	file:
fts5ExprNearInitAll	src/server/sqlite3.c	/^static int fts5ExprNearInitAll($/;"	f	file:
fts5ExprNearIsMatch	src/server/sqlite3.c	/^static int fts5ExprNearIsMatch(int *pRc, Fts5ExprNearset *pNear){$/;"	f	file:
fts5ExprNearTest	src/server/sqlite3.c	/^static int fts5ExprNearTest($/;"	f	file:
fts5ExprNodeFirst	src/server/sqlite3.c	/^static int fts5ExprNodeFirst(Fts5Expr *pExpr, Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeNext	src/server/sqlite3.c	173278;"	d	file:
fts5ExprNodeNext_AND	src/server/sqlite3.c	/^static int fts5ExprNodeNext_AND($/;"	f	file:
fts5ExprNodeNext_NOT	src/server/sqlite3.c	/^static int fts5ExprNodeNext_NOT($/;"	f	file:
fts5ExprNodeNext_OR	src/server/sqlite3.c	/^static int fts5ExprNodeNext_OR($/;"	f	file:
fts5ExprNodeNext_STRING	src/server/sqlite3.c	/^static int fts5ExprNodeNext_STRING($/;"	f	file:
fts5ExprNodeNext_TERM	src/server/sqlite3.c	/^static int fts5ExprNodeNext_TERM($/;"	f	file:
fts5ExprNodeTest	src/server/sqlite3.c	/^static int fts5ExprNodeTest($/;"	f	file:
fts5ExprNodeTest_AND	src/server/sqlite3.c	/^static int fts5ExprNodeTest_AND($/;"	f	file:
fts5ExprNodeTest_NOT	src/server/sqlite3.c	/^static int fts5ExprNodeTest_NOT($/;"	f	file:
fts5ExprNodeTest_OR	src/server/sqlite3.c	/^static void fts5ExprNodeTest_OR($/;"	f	file:
fts5ExprNodeTest_STRING	src/server/sqlite3.c	/^static int fts5ExprNodeTest_STRING($/;"	f	file:
fts5ExprNodeTest_TERM	src/server/sqlite3.c	/^static int fts5ExprNodeTest_TERM($/;"	f	file:
fts5ExprNodeZeroPoslist	src/server/sqlite3.c	/^static void fts5ExprNodeZeroPoslist(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprPhraseFree	src/server/sqlite3.c	/^static void fts5ExprPhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
fts5ExprPhraseIsMatch	src/server/sqlite3.c	/^static int fts5ExprPhraseIsMatch($/;"	f	file:
fts5ExprPopulatePoslistsCb	src/server/sqlite3.c	/^static int fts5ExprPopulatePoslistsCb($/;"	f	file:
fts5ExprPrint	src/server/sqlite3.c	/^static char *fts5ExprPrint(Fts5Config *pConfig, Fts5ExprNode *pExpr){$/;"	f	file:
fts5ExprPrintTcl	src/server/sqlite3.c	/^static char *fts5ExprPrintTcl($/;"	f	file:
fts5ExprSetEof	src/server/sqlite3.c	/^static void fts5ExprSetEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprSynonymAdvanceto	src/server/sqlite3.c	/^static int fts5ExprSynonymAdvanceto($/;"	f	file:
fts5ExprSynonymList	src/server/sqlite3.c	/^static int fts5ExprSynonymList($/;"	f	file:
fts5ExprSynonymRowid	src/server/sqlite3.c	/^static i64 fts5ExprSynonymRowid(Fts5ExprTerm *pTerm, int bDesc, int *pbEof){$/;"	f	file:
fts5ExprTermPrint	src/server/sqlite3.c	/^static char *fts5ExprTermPrint(Fts5ExprTerm *pTerm){$/;"	f	file:
fts5FastGetVarint32	src/server/sqlite3.c	169753;"	d	file:
fts5FilterMethod	src/server/sqlite3.c	/^static int fts5FilterMethod($/;"	f	file:
fts5FindAuxiliary	src/server/sqlite3.c	/^static Fts5Auxiliary *fts5FindAuxiliary(Fts5Table *pTab, const char *zName){$/;"	f	file:
fts5FindFunctionMethod	src/server/sqlite3.c	/^static int fts5FindFunctionMethod($/;"	f	file:
fts5FindRankFunction	src/server/sqlite3.c	/^static int fts5FindRankFunction(Fts5Cursor *pCsr){$/;"	f	file:
fts5FindTokenizer	src/server/sqlite3.c	/^static int fts5FindTokenizer($/;"	f	file:
fts5FlushOneHash	src/server/sqlite3.c	/^static void fts5FlushOneHash(Fts5Index *p){$/;"	f	file:
fts5FreeCursorComponents	src/server/sqlite3.c	/^static void fts5FreeCursorComponents(Fts5Cursor *pCsr){$/;"	f	file:
fts5FreeVtab	src/server/sqlite3.c	/^static void fts5FreeVtab(Fts5Table *pTab){$/;"	f	file:
fts5Fts5Func	src/server/sqlite3.c	/^static void fts5Fts5Func($/;"	f	file:
fts5GetPoslistSize	src/server/sqlite3.c	/^static int fts5GetPoslistSize(const u8 *p, int *pnSz, int *pbDel){$/;"	f	file:
fts5GetRowidLimit	src/server/sqlite3.c	/^static i64 fts5GetRowidLimit(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts5GetU16	src/server/sqlite3.c	/^static u16 fts5GetU16(const u8 *aIn){$/;"	f	file:
fts5GetVarint	src/server/sqlite3.c	169751;"	d	file:
fts5GetVarint32	src/server/sqlite3.c	169750;"	d	file:
fts5HashAddPoslistSize	src/server/sqlite3.c	/^static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){$/;"	f	file:
fts5HashEntryMerge	src/server/sqlite3.c	/^static Fts5HashEntry *fts5HashEntryMerge($/;"	f	file:
fts5HashEntrySort	src/server/sqlite3.c	/^static int fts5HashEntrySort($/;"	f	file:
fts5HashKey	src/server/sqlite3.c	/^static unsigned int fts5HashKey(int nSlot, const u8 *p, int n){$/;"	f	file:
fts5HashKey2	src/server/sqlite3.c	/^static unsigned int fts5HashKey2(int nSlot, u8 b, const u8 *p, int n){$/;"	f	file:
fts5HashResize	src/server/sqlite3.c	/^static int fts5HashResize(Fts5Hash *pHash){$/;"	f	file:
fts5HighlightAppend	src/server/sqlite3.c	/^static void fts5HighlightAppend($/;"	f	file:
fts5HighlightCb	src/server/sqlite3.c	/^static int fts5HighlightCb($/;"	f	file:
fts5HighlightFunction	src/server/sqlite3.c	/^static void fts5HighlightFunction($/;"	f	file:
fts5IdxMalloc	src/server/sqlite3.c	/^static void *fts5IdxMalloc(Fts5Index *p, int nByte){$/;"	f	file:
fts5IdxSelectStmt	src/server/sqlite3.c	/^static sqlite3_stmt *fts5IdxSelectStmt(Fts5Index *p){$/;"	f	file:
fts5IndexAutomerge	src/server/sqlite3.c	/^static void fts5IndexAutomerge($/;"	f	file:
fts5IndexCharlen	src/server/sqlite3.c	/^static int fts5IndexCharlen(const char *pIn, int nIn){$/;"	f	file:
fts5IndexColsetTest	src/server/sqlite3.c	/^static int fts5IndexColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5IndexCrisismerge	src/server/sqlite3.c	/^static void fts5IndexCrisismerge($/;"	f	file:
fts5IndexDataVersion	src/server/sqlite3.c	/^static i64 fts5IndexDataVersion(Fts5Index *p){$/;"	f	file:
fts5IndexDiscardData	src/server/sqlite3.c	/^static void fts5IndexDiscardData(Fts5Index *p){$/;"	f	file:
fts5IndexExtractCol	src/server/sqlite3.c	/^static int fts5IndexExtractCol($/;"	f	file:
fts5IndexExtractColset	src/server/sqlite3.c	/^static int fts5IndexExtractColset ($/;"	f	file:
fts5IndexFlush	src/server/sqlite3.c	/^static void fts5IndexFlush(Fts5Index *p){$/;"	f	file:
fts5IndexIntegrityCheckEmpty	src/server/sqlite3.c	/^static void fts5IndexIntegrityCheckEmpty($/;"	f	file:
fts5IndexIntegrityCheckSegment	src/server/sqlite3.c	/^static void fts5IndexIntegrityCheckSegment($/;"	f	file:
fts5IndexMerge	src/server/sqlite3.c	/^static int fts5IndexMerge($/;"	f	file:
fts5IndexMergeLevel	src/server/sqlite3.c	/^static void fts5IndexMergeLevel($/;"	f	file:
fts5IndexOptimizeStruct	src/server/sqlite3.c	/^static Fts5Structure *fts5IndexOptimizeStruct($/;"	f	file:
fts5IndexPrepareStmt	src/server/sqlite3.c	/^static int fts5IndexPrepareStmt($/;"	f	file:
fts5IndexReturn	src/server/sqlite3.c	/^static int fts5IndexReturn(Fts5Index *p){$/;"	f	file:
fts5IndexSkipVarint	src/server/sqlite3.c	178457;"	d	file:
fts5Init	src/server/sqlite3.c	/^static int fts5Init(sqlite3 *db){$/;"	f	file:
fts5InitVtab	src/server/sqlite3.c	/^static int fts5InitVtab($/;"	f	file:
fts5IntegrityCheckPgidx	src/server/sqlite3.c	/^static void fts5IntegrityCheckPgidx(Fts5Index *p, Fts5Data *pLeaf){$/;"	f	file:
fts5IsContentless	src/server/sqlite3.c	/^static int fts5IsContentless(Fts5Table *pTab){$/;"	f	file:
fts5IterSetOutputCb	src/server/sqlite3.c	/^static void fts5IterSetOutputCb(int *pRc, Fts5Iter *pIter){$/;"	f	file:
fts5IterSetOutputs_Col	src/server/sqlite3.c	/^static void fts5IterSetOutputs_Col(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col100	src/server/sqlite3.c	/^static void fts5IterSetOutputs_Col100(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Full	src/server/sqlite3.c	/^static void fts5IterSetOutputs_Full(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Nocolset	src/server/sqlite3.c	/^static void fts5IterSetOutputs_Nocolset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_None	src/server/sqlite3.c	/^static void fts5IterSetOutputs_None(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Noop	src/server/sqlite3.c	/^static void fts5IterSetOutputs_Noop(Fts5Iter *pUnused1, Fts5SegIter *pUnused2){$/;"	f	file:
fts5LeafFirstRowidOff	src/server/sqlite3.c	176867;"	d	file:
fts5LeafFirstTermOff	src/server/sqlite3.c	/^static int fts5LeafFirstTermOff(Fts5Data *pLeaf){$/;"	f	file:
fts5LeafIsTermless	src/server/sqlite3.c	176863;"	d	file:
fts5LeafSeek	src/server/sqlite3.c	/^static void fts5LeafSeek($/;"	f	file:
fts5LeafTermOff	src/server/sqlite3.c	176865;"	d	file:
fts5LocateTokenizer	src/server/sqlite3.c	/^static Fts5TokenizerModule *fts5LocateTokenizer($/;"	f	file:
fts5LookaheadReaderInit	src/server/sqlite3.c	/^static int fts5LookaheadReaderInit($/;"	f	file:
fts5LookaheadReaderNext	src/server/sqlite3.c	/^static int fts5LookaheadReaderNext(Fts5LookaheadReader *p){$/;"	f	file:
fts5MergeAppendDocid	src/server/sqlite3.c	181171;"	d	file:
fts5MergeChunkCallback	src/server/sqlite3.c	/^static void fts5MergeChunkCallback($/;"	f	file:
fts5MergePrefixLists	src/server/sqlite3.c	/^static void fts5MergePrefixLists($/;"	f	file:
fts5MergeRowidLists	src/server/sqlite3.c	/^static void fts5MergeRowidLists($/;"	f	file:
fts5ModuleDestroy	src/server/sqlite3.c	/^static void fts5ModuleDestroy(void *pCtx){$/;"	f	file:
fts5MultiIterAdvanceRowid	src/server/sqlite3.c	/^static int fts5MultiIterAdvanceRowid($/;"	f	file:
fts5MultiIterAdvanced	src/server/sqlite3.c	/^static void fts5MultiIterAdvanced($/;"	f	file:
fts5MultiIterAlloc	src/server/sqlite3.c	/^static Fts5Iter *fts5MultiIterAlloc($/;"	f	file:
fts5MultiIterDoCompare	src/server/sqlite3.c	/^static int fts5MultiIterDoCompare(Fts5Iter *pIter, int iOut){$/;"	f	file:
fts5MultiIterEof	src/server/sqlite3.c	/^static int fts5MultiIterEof(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterFree	src/server/sqlite3.c	/^static void fts5MultiIterFree(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterIsEmpty	src/server/sqlite3.c	/^static int fts5MultiIterIsEmpty(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterNew	src/server/sqlite3.c	/^static void fts5MultiIterNew($/;"	f	file:
fts5MultiIterNew2	src/server/sqlite3.c	/^static void fts5MultiIterNew2($/;"	f	file:
fts5MultiIterNext	src/server/sqlite3.c	/^static void fts5MultiIterNext($/;"	f	file:
fts5MultiIterNext2	src/server/sqlite3.c	/^static void fts5MultiIterNext2($/;"	f	file:
fts5MultiIterNextFrom	src/server/sqlite3.c	/^static void fts5MultiIterNextFrom($/;"	f	file:
fts5MultiIterRowid	src/server/sqlite3.c	/^static i64 fts5MultiIterRowid(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterSetEof	src/server/sqlite3.c	/^static void fts5MultiIterSetEof(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterTerm	src/server/sqlite3.c	/^static const u8 *fts5MultiIterTerm(Fts5Iter *pIter, int *pn){$/;"	f	file:
fts5NewTransaction	src/server/sqlite3.c	/^static int fts5NewTransaction(Fts5Table *pTab){$/;"	f	file:
fts5NextMethod	src/server/sqlite3.c	/^static int fts5NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5NextRowid	src/server/sqlite3.c	/^static void fts5NextRowid(Fts5Buffer *pBuf, int *piOff, i64 *piRowid){$/;"	f	file:
fts5NodeCompare	src/server/sqlite3.c	/^static int fts5NodeCompare($/;"	f	file:
fts5OpenMethod	src/server/sqlite3.c	/^static int fts5OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5ParseAlloc	src/server/sqlite3.c	/^static void *fts5ParseAlloc(u64 t){ return sqlite3_malloc((int)t); }$/;"	f	file:
fts5ParseColset	src/server/sqlite3.c	/^static Fts5Colset *fts5ParseColset($/;"	f	file:
fts5ParseFree	src/server/sqlite3.c	/^static void fts5ParseFree(void *p){ sqlite3_free(p); }$/;"	f	file:
fts5ParseStringFromToken	src/server/sqlite3.c	/^static int fts5ParseStringFromToken(Fts5Token *pToken, char **pz){$/;"	f	file:
fts5ParseTokenize	src/server/sqlite3.c	/^static int fts5ParseTokenize($/;"	f	file:
fts5PorterCb	src/server/sqlite3.c	/^static int fts5PorterCb($/;"	f	file:
fts5PorterCreate	src/server/sqlite3.c	/^static int fts5PorterCreate($/;"	f	file:
fts5PorterDelete	src/server/sqlite3.c	/^static void fts5PorterDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5PorterGobbleVC	src/server/sqlite3.c	/^static int fts5PorterGobbleVC(char *zStem, int nStem, int bPrevCons){$/;"	f	file:
fts5PorterIsVowel	src/server/sqlite3.c	/^static int fts5PorterIsVowel(char c, int bYIsVowel){$/;"	f	file:
fts5PorterStep1A	src/server/sqlite3.c	/^static void fts5PorterStep1A(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B	src/server/sqlite3.c	/^static int fts5PorterStep1B(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B2	src/server/sqlite3.c	/^static int fts5PorterStep1B2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep2	src/server/sqlite3.c	/^static int fts5PorterStep2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep3	src/server/sqlite3.c	/^static int fts5PorterStep3(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep4	src/server/sqlite3.c	/^static int fts5PorterStep4(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterTokenize	src/server/sqlite3.c	/^static int fts5PorterTokenize($/;"	f	file:
fts5Porter_MEq1	src/server/sqlite3.c	/^static int fts5Porter_MEq1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt0	src/server/sqlite3.c	/^static int fts5Porter_MGt0(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1	src/server/sqlite3.c	/^static int fts5Porter_MGt1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1_and_S_or_T	src/server/sqlite3.c	/^static int fts5Porter_MGt1_and_S_or_T(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Ostar	src/server/sqlite3.c	/^static int fts5Porter_Ostar(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Vowel	src/server/sqlite3.c	/^static int fts5Porter_Vowel(char *zStem, int nStem){$/;"	f	file:
fts5PoslistBlob	src/server/sqlite3.c	/^static int fts5PoslistBlob(sqlite3_context *pCtx, Fts5Cursor *pCsr){$/;"	f	file:
fts5PoslistCallback	src/server/sqlite3.c	/^static void fts5PoslistCallback($/;"	f	file:
fts5PoslistFilterCallback	src/server/sqlite3.c	/^static void fts5PoslistFilterCallback($/;"	f	file:
fts5PoslistOffsetsCallback	src/server/sqlite3.c	/^static void fts5PoslistOffsetsCallback($/;"	f	file:
fts5PoslistPrefix	src/server/sqlite3.c	/^static int fts5PoslistPrefix(const u8 *aBuf, int nMax){$/;"	f	file:
fts5PrefixCompress	src/server/sqlite3.c	/^static int fts5PrefixCompress(int nOld, const u8 *pOld, const u8 *pNew){$/;"	f	file:
fts5PrepareStatement	src/server/sqlite3.c	/^static int fts5PrepareStatement($/;"	f	file:
fts5PrintStructure	src/server/sqlite3.c	177536;"	d	file:
fts5PrintfAppend	src/server/sqlite3.c	/^static char *fts5PrintfAppend(char *zApp, const char *zFmt, ...){$/;"	f	file:
fts5PutU16	src/server/sqlite3.c	/^static void fts5PutU16(u8 *aOut, u16 iVal){$/;"	f	file:
fts5PutVarint64	src/server/sqlite3.c	/^static int FTS5_NOINLINE fts5PutVarint64(unsigned char *p, u64 v){$/;"	f	file:
fts5QueryCksum	src/server/sqlite3.c	/^static int fts5QueryCksum($/;"	f	file:
fts5ReleaseMethod	src/server/sqlite3.c	/^static int fts5ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RenameMethod	src/server/sqlite3.c	/^static int fts5RenameMethod($/;"	f	file:
fts5RollbackMethod	src/server/sqlite3.c	/^static int fts5RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5RollbackToMethod	src/server/sqlite3.c	/^static int fts5RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RowidCmp	src/server/sqlite3.c	/^static int fts5RowidCmp($/;"	f	file:
fts5RowidFunction	src/server/sqlite3.c	/^static void fts5RowidFunction($/;"	f	file:
fts5RowidMethod	src/server/sqlite3.c	/^static int fts5RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts5SavepointMethod	src/server/sqlite3.c	/^static int fts5SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5SeekCursor	src/server/sqlite3.c	/^static int fts5SeekCursor(Fts5Cursor *pCsr, int bErrormsg){$/;"	f	file:
fts5SegIterClear	src/server/sqlite3.c	/^static void fts5SegIterClear(Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterGotoPage	src/server/sqlite3.c	/^static void fts5SegIterGotoPage($/;"	f	file:
fts5SegIterHashInit	src/server/sqlite3.c	/^static void fts5SegIterHashInit($/;"	f	file:
fts5SegIterInit	src/server/sqlite3.c	/^static void fts5SegIterInit($/;"	f	file:
fts5SegIterLoadDlidx	src/server/sqlite3.c	/^static void fts5SegIterLoadDlidx(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadNPos	src/server/sqlite3.c	/^static void fts5SegIterLoadNPos(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadRowid	src/server/sqlite3.c	/^static void fts5SegIterLoadRowid(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadTerm	src/server/sqlite3.c	/^static void fts5SegIterLoadTerm(Fts5Index *p, Fts5SegIter *pIter, int nKeep){$/;"	f	file:
fts5SegIterNext	src/server/sqlite3.c	/^static void fts5SegIterNext($/;"	f	file:
fts5SegIterNextFrom	src/server/sqlite3.c	/^static void fts5SegIterNextFrom($/;"	f	file:
fts5SegIterNextPage	src/server/sqlite3.c	/^static void fts5SegIterNextPage($/;"	f	file:
fts5SegIterNext_None	src/server/sqlite3.c	/^static void fts5SegIterNext_None($/;"	f	file:
fts5SegIterNext_Reverse	src/server/sqlite3.c	/^static void fts5SegIterNext_Reverse($/;"	f	file:
fts5SegIterReverse	src/server/sqlite3.c	/^static void fts5SegIterReverse(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseInitPage	src/server/sqlite3.c	/^static void fts5SegIterReverseInitPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseNewPage	src/server/sqlite3.c	/^static void fts5SegIterReverseNewPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterSeekInit	src/server/sqlite3.c	/^static void fts5SegIterSeekInit($/;"	f	file:
fts5SegIterSetNext	src/server/sqlite3.c	/^static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegiterPoslist	src/server/sqlite3.c	/^static void fts5SegiterPoslist($/;"	f	file:
fts5SegmentSize	src/server/sqlite3.c	/^static int fts5SegmentSize(Fts5StructureSegment *pSeg){$/;"	f	file:
fts5SetUniqueFlag	src/server/sqlite3.c	/^static void fts5SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts5SetVtabError	src/server/sqlite3.c	/^static void fts5SetVtabError(Fts5Table *p, const char *zFormat, ...){$/;"	f	file:
fts5SetupPrefixIter	src/server/sqlite3.c	/^static void fts5SetupPrefixIter($/;"	f	file:
fts5SnippetFunction	src/server/sqlite3.c	/^static void fts5SnippetFunction($/;"	f	file:
fts5SorterNext	src/server/sqlite3.c	/^static int fts5SorterNext(Fts5Cursor *pCsr){$/;"	f	file:
fts5SourceIdFunc	src/server/sqlite3.c	/^static void fts5SourceIdFunc($/;"	f	file:
fts5SpecialDelete	src/server/sqlite3.c	/^static int fts5SpecialDelete($/;"	f	file:
fts5SpecialInsert	src/server/sqlite3.c	/^static int fts5SpecialInsert($/;"	f	file:
fts5SpecialMatch	src/server/sqlite3.c	/^static int fts5SpecialMatch($/;"	f	file:
fts5StmtType	src/server/sqlite3.c	/^static int fts5StmtType(Fts5Cursor *pCsr){$/;"	f	file:
fts5StorageCount	src/server/sqlite3.c	/^static int fts5StorageCount(Fts5Storage *p, const char *zSuffix, i64 *pnRow){$/;"	f	file:
fts5StorageDecodeSizeArray	src/server/sqlite3.c	/^static int fts5StorageDecodeSizeArray($/;"	f	file:
fts5StorageDeleteFromIndex	src/server/sqlite3.c	/^static int fts5StorageDeleteFromIndex($/;"	f	file:
fts5StorageGetStmt	src/server/sqlite3.c	/^static int fts5StorageGetStmt($/;"	f	file:
fts5StorageInsert	src/server/sqlite3.c	/^static void fts5StorageInsert($/;"	f	file:
fts5StorageInsertCallback	src/server/sqlite3.c	/^static int fts5StorageInsertCallback($/;"	f	file:
fts5StorageInsertDocsize	src/server/sqlite3.c	/^static int fts5StorageInsertDocsize($/;"	f	file:
fts5StorageIntegrityCallback	src/server/sqlite3.c	/^static int fts5StorageIntegrityCallback($/;"	f	file:
fts5StorageLoadTotals	src/server/sqlite3.c	/^static int fts5StorageLoadTotals(Fts5Storage *p, int bCache){$/;"	f	file:
fts5StorageNewRowid	src/server/sqlite3.c	/^static int fts5StorageNewRowid(Fts5Storage *p, i64 *piRowid){$/;"	f	file:
fts5StorageRenameOne	src/server/sqlite3.c	/^static void fts5StorageRenameOne($/;"	f	file:
fts5StorageSaveTotals	src/server/sqlite3.c	/^static int fts5StorageSaveTotals(Fts5Storage *p){$/;"	f	file:
fts5StructureAddLevel	src/server/sqlite3.c	/^static void fts5StructureAddLevel(int *pRc, Fts5Structure **ppStruct){$/;"	f	file:
fts5StructureCountSegments	src/server/sqlite3.c	/^static int fts5StructureCountSegments(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureDecode	src/server/sqlite3.c	/^static int fts5StructureDecode($/;"	f	file:
fts5StructureExtendLevel	src/server/sqlite3.c	/^static void fts5StructureExtendLevel($/;"	f	file:
fts5StructureInvalidate	src/server/sqlite3.c	/^static void fts5StructureInvalidate(Fts5Index *p){$/;"	f	file:
fts5StructurePromote	src/server/sqlite3.c	/^static void fts5StructurePromote($/;"	f	file:
fts5StructurePromoteTo	src/server/sqlite3.c	/^static void fts5StructurePromoteTo($/;"	f	file:
fts5StructureRead	src/server/sqlite3.c	/^static Fts5Structure *fts5StructureRead(Fts5Index *p){$/;"	f	file:
fts5StructureReadUncached	src/server/sqlite3.c	/^static Fts5Structure *fts5StructureReadUncached(Fts5Index *p){$/;"	f	file:
fts5StructureRef	src/server/sqlite3.c	/^static void fts5StructureRef(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRelease	src/server/sqlite3.c	/^static void fts5StructureRelease(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureWrite	src/server/sqlite3.c	/^static void fts5StructureWrite(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5SyncMethod	src/server/sqlite3.c	/^static int fts5SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5TestDlidxReverse	src/server/sqlite3.c	/^static void fts5TestDlidxReverse($/;"	f	file:
fts5TestDlidxReverse	src/server/sqlite3.c	182070;"	d	file:
fts5TestTerm	src/server/sqlite3.c	/^static void fts5TestTerm($/;"	f	file:
fts5TestTerm	src/server/sqlite3.c	182071;"	d	file:
fts5TrimSegments	src/server/sqlite3.c	/^static void fts5TrimSegments(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5TripCursors	src/server/sqlite3.c	/^static void fts5TripCursors(Fts5Table *pTab){$/;"	f	file:
fts5UnicodeAddExceptions	src/server/sqlite3.c	/^static int fts5UnicodeAddExceptions($/;"	f	file:
fts5UnicodeCreate	src/server/sqlite3.c	/^static int fts5UnicodeCreate($/;"	f	file:
fts5UnicodeDelete	src/server/sqlite3.c	/^static void fts5UnicodeDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5UnicodeIsAlnum	src/server/sqlite3.c	/^static int fts5UnicodeIsAlnum(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsException	src/server/sqlite3.c	/^static int fts5UnicodeIsException(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeTokenize	src/server/sqlite3.c	/^static int fts5UnicodeTokenize($/;"	f	file:
fts5UpdateMethod	src/server/sqlite3.c	/^static int fts5UpdateMethod($/;"	f	file:
fts5VocabBestIndexMethod	src/server/sqlite3.c	/^static int fts5VocabBestIndexMethod($/;"	f	file:
fts5VocabCloseMethod	src/server/sqlite3.c	/^static int fts5VocabCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabColumnMethod	src/server/sqlite3.c	/^static int fts5VocabColumnMethod($/;"	f	file:
fts5VocabConnectMethod	src/server/sqlite3.c	/^static int fts5VocabConnectMethod($/;"	f	file:
fts5VocabCreateMethod	src/server/sqlite3.c	/^static int fts5VocabCreateMethod($/;"	f	file:
fts5VocabDestroyMethod	src/server/sqlite3.c	/^static int fts5VocabDestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDisconnectMethod	src/server/sqlite3.c	/^static int fts5VocabDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabEofMethod	src/server/sqlite3.c	/^static int fts5VocabEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabFilterMethod	src/server/sqlite3.c	/^static int fts5VocabFilterMethod($/;"	f	file:
fts5VocabInitVtab	src/server/sqlite3.c	/^static int fts5VocabInitVtab($/;"	f	file:
fts5VocabNextMethod	src/server/sqlite3.c	/^static int fts5VocabNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabOpenMethod	src/server/sqlite3.c	/^static int fts5VocabOpenMethod($/;"	f	file:
fts5VocabResetCursor	src/server/sqlite3.c	/^static void fts5VocabResetCursor(Fts5VocabCursor *pCsr){$/;"	f	file:
fts5VocabRowidMethod	src/server/sqlite3.c	/^static int fts5VocabRowidMethod($/;"	f	file:
fts5VocabTableType	src/server/sqlite3.c	/^static int fts5VocabTableType(const char *zType, char **pzErr, int *peType){$/;"	f	file:
fts5WriteAppendPoslistData	src/server/sqlite3.c	/^static void fts5WriteAppendPoslistData($/;"	f	file:
fts5WriteAppendRowid	src/server/sqlite3.c	/^static void fts5WriteAppendRowid($/;"	f	file:
fts5WriteAppendTerm	src/server/sqlite3.c	/^static void fts5WriteAppendTerm($/;"	f	file:
fts5WriteBtreeNoTerm	src/server/sqlite3.c	/^static void fts5WriteBtreeNoTerm($/;"	f	file:
fts5WriteBtreeTerm	src/server/sqlite3.c	/^static void fts5WriteBtreeTerm($/;"	f	file:
fts5WriteDlidxAppend	src/server/sqlite3.c	/^static void fts5WriteDlidxAppend($/;"	f	file:
fts5WriteDlidxClear	src/server/sqlite3.c	/^static void fts5WriteDlidxClear($/;"	f	file:
fts5WriteDlidxGrow	src/server/sqlite3.c	/^static int fts5WriteDlidxGrow($/;"	f	file:
fts5WriteFinish	src/server/sqlite3.c	/^static void fts5WriteFinish($/;"	f	file:
fts5WriteFlushBtree	src/server/sqlite3.c	/^static void fts5WriteFlushBtree(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushDlidx	src/server/sqlite3.c	/^static int fts5WriteFlushDlidx(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushLeaf	src/server/sqlite3.c	/^static void fts5WriteFlushLeaf(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteInit	src/server/sqlite3.c	/^static void fts5WriteInit($/;"	f	file:
fts5YYACTIONTYPE	src/server/sqlite3.c	170165;"	d	file:
fts5YYCODETYPE	src/server/sqlite3.c	170163;"	d	file:
fts5YYMALLOCARGTYPE	src/server/sqlite3.c	170103;"	d	file:
fts5YYMALLOCARGTYPE	src/server/sqlite3.c	170476;"	d	file:
fts5YYMINORTYPE	src/server/sqlite3.c	/^} fts5YYMINORTYPE;$/;"	t	typeref:union:__anon221	file:
fts5YYNOCODE	src/server/sqlite3.c	170164;"	d	file:
fts5YYNOERRORRECOVERY	src/server/sqlite3.c	170086;"	d	file:
fts5YYNRULE	src/server/sqlite3.c	170184;"	d	file:
fts5YYNSTATE	src/server/sqlite3.c	170183;"	d	file:
fts5YYPARSEFREENOTNULL	src/server/sqlite3.c	170097;"	d	file:
fts5YYSTACKDEPTH	src/server/sqlite3.c	170177;"	d	file:
fts5YY_ACCEPT_ACTION	src/server/sqlite3.c	170191;"	d	file:
fts5YY_ACTTAB_COUNT	src/server/sqlite3.c	170260;"	d	file:
fts5YY_ERROR_ACTION	src/server/sqlite3.c	170190;"	d	file:
fts5YY_MAX_REDUCE	src/server/sqlite3.c	170189;"	d	file:
fts5YY_MAX_SHIFT	src/server/sqlite3.c	170185;"	d	file:
fts5YY_MAX_SHIFTREDUCE	src/server/sqlite3.c	170187;"	d	file:
fts5YY_MIN_REDUCE	src/server/sqlite3.c	170188;"	d	file:
fts5YY_MIN_SHIFTREDUCE	src/server/sqlite3.c	170186;"	d	file:
fts5YY_NO_ACTION	src/server/sqlite3.c	170192;"	d	file:
fts5YY_REDUCE_COUNT	src/server/sqlite3.c	170291;"	d	file:
fts5YY_REDUCE_MAX	src/server/sqlite3.c	170293;"	d	file:
fts5YY_REDUCE_MIN	src/server/sqlite3.c	170292;"	d	file:
fts5YY_REDUCE_USE_DFLT	src/server/sqlite3.c	170290;"	d	file:
fts5YY_SHIFT_COUNT	src/server/sqlite3.c	170282;"	d	file:
fts5YY_SHIFT_MAX	src/server/sqlite3.c	170284;"	d	file:
fts5YY_SHIFT_MIN	src/server/sqlite3.c	170283;"	d	file:
fts5YY_SHIFT_USE_DFLT	src/server/sqlite3.c	170281;"	d	file:
fts5_api	src/server/sqlite3.c	/^struct fts5_api {$/;"	s	file:
fts5_api	src/server/sqlite3.c	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api	file:
fts5_api	src/server/sqlite3.h	/^struct fts5_api {$/;"	s
fts5_api	src/server/sqlite3.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_dri	src/server/sqlite3.c	176613;"	d	file:
fts5_extension_function	src/server/sqlite3.c	/^typedef void (*fts5_extension_function)($/;"	t	file:
fts5_extension_function	src/server/sqlite3.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_isdigit	src/server/sqlite3.c	/^static int fts5_isdigit(char a){$/;"	f	file:
fts5_isopenquote	src/server/sqlite3.c	/^static int fts5_isopenquote(char x){$/;"	f	file:
fts5_iswhitespace	src/server/sqlite3.c	/^static int fts5_iswhitespace(char x){$/;"	f	file:
fts5_remove_diacritic	src/server/sqlite3.c	/^static int fts5_remove_diacritic(int c){$/;"	f	file:
fts5_tokenizer	src/server/sqlite3.c	/^struct fts5_tokenizer {$/;"	s	file:
fts5_tokenizer	src/server/sqlite3.c	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer	file:
fts5_tokenizer	src/server/sqlite3.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	src/server/sqlite3.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5yy0	src/server/sqlite3.c	/^  sqlite3Fts5ParserFTS5TOKENTYPE fts5yy0;$/;"	m	union:__anon221	file:
fts5yy11	src/server/sqlite3.c	/^  Fts5ExprPhrase* fts5yy11;$/;"	m	union:__anon221	file:
fts5yy18	src/server/sqlite3.c	/^  Fts5ExprNode* fts5yy18;$/;"	m	union:__anon221	file:
fts5yy20	src/server/sqlite3.c	/^  int fts5yy20;$/;"	m	union:__anon221	file:
fts5yy26	src/server/sqlite3.c	/^  Fts5ExprNearset* fts5yy26;$/;"	m	union:__anon221	file:
fts5yy3	src/server/sqlite3.c	/^  Fts5Colset* fts5yy3;$/;"	m	union:__anon221	file:
fts5yyFallback	src/server/sqlite3.c	/^static const fts5YYCODETYPE fts5yyFallback[] = {$/;"	v	file:
fts5yyGrowStack	src/server/sqlite3.c	/^static void fts5yyGrowStack(fts5yyParser *p){$/;"	f	file:
fts5yyParser	src/server/sqlite3.c	/^struct fts5yyParser {$/;"	s	file:
fts5yyParser	src/server/sqlite3.c	/^typedef struct fts5yyParser fts5yyParser;$/;"	t	typeref:struct:fts5yyParser	file:
fts5yyRuleInfo	src/server/sqlite3.c	/^} fts5yyRuleInfo[] = {$/;"	v	typeref:struct:__anon222	file:
fts5yyRuleName	src/server/sqlite3.c	/^static const char *const fts5yyRuleName[] = {$/;"	v	file:
fts5yyStackEntry	src/server/sqlite3.c	/^struct fts5yyStackEntry {$/;"	s	file:
fts5yyStackEntry	src/server/sqlite3.c	/^typedef struct fts5yyStackEntry fts5yyStackEntry;$/;"	t	typeref:struct:fts5yyStackEntry	file:
fts5yyStackOverflow	src/server/sqlite3.c	/^static void fts5yyStackOverflow(fts5yyParser *fts5yypParser){$/;"	f	file:
fts5yyTokenName	src/server/sqlite3.c	/^static const char *const fts5yyTokenName[] = { $/;"	v	file:
fts5yyTraceFILE	src/server/sqlite3.c	/^static FILE *fts5yyTraceFILE = 0;$/;"	v	file:
fts5yyTracePrompt	src/server/sqlite3.c	/^static char *fts5yyTracePrompt = 0;$/;"	v	file:
fts5yyTraceShift	src/server/sqlite3.c	/^static void fts5yyTraceShift(fts5yyParser *fts5yypParser, int fts5yyNewState){$/;"	f	file:
fts5yyTraceShift	src/server/sqlite3.c	170755;"	d	file:
fts5yy_accept	src/server/sqlite3.c	/^static void fts5yy_accept($/;"	f	file:
fts5yy_action	src/server/sqlite3.c	/^static const fts5YYACTIONTYPE fts5yy_action[] = {$/;"	v	file:
fts5yy_default	src/server/sqlite3.c	/^static const fts5YYACTIONTYPE fts5yy_default[] = {$/;"	v	file:
fts5yy_destructor	src/server/sqlite3.c	/^static void fts5yy_destructor($/;"	f	file:
fts5yy_find_reduce_action	src/server/sqlite3.c	/^static int fts5yy_find_reduce_action($/;"	f	file:
fts5yy_find_shift_action	src/server/sqlite3.c	/^static unsigned int fts5yy_find_shift_action($/;"	f	file:
fts5yy_lookahead	src/server/sqlite3.c	/^static const fts5YYCODETYPE fts5yy_lookahead[] = {$/;"	v	file:
fts5yy_parse_failed	src/server/sqlite3.c	/^static void fts5yy_parse_failed($/;"	f	file:
fts5yy_pop_parser_stack	src/server/sqlite3.c	/^static void fts5yy_pop_parser_stack(fts5yyParser *pParser){$/;"	f	file:
fts5yy_reduce	src/server/sqlite3.c	/^static void fts5yy_reduce($/;"	f	file:
fts5yy_reduce_ofst	src/server/sqlite3.c	/^static const signed char fts5yy_reduce_ofst[] = {$/;"	v	file:
fts5yy_shift	src/server/sqlite3.c	/^static void fts5yy_shift($/;"	f	file:
fts5yy_shift_ofst	src/server/sqlite3.c	/^static const signed char fts5yy_shift_ofst[] = {$/;"	v	file:
fts5yy_syntax_error	src/server/sqlite3.c	/^static void fts5yy_syntax_error($/;"	f	file:
fts5yyerrcnt	src/server/sqlite3.c	/^  int fts5yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:fts5yyParser	file:
fts5yyidx	src/server/sqlite3.c	/^  int fts5yyidx;                    \/* Index of top element in stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yyidxMax	src/server/sqlite3.c	/^  int fts5yyidxMax;                 \/* Maximum value of fts5yyidx *\/$/;"	m	struct:fts5yyParser	file:
fts5yyinit	src/server/sqlite3.c	/^  int fts5yyinit;$/;"	m	union:__anon221	file:
fts5yystack	src/server/sqlite3.c	/^  fts5yyStackEntry *fts5yystack;        \/* The parser's stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystksz	src/server/sqlite3.c	/^  int fts5yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yytestcase	src/server/sqlite3.c	170091;"	d	file:
fts5yytestcase	src/server/sqlite3.c	170204;"	d	file:
ftsCompareFunction	src/server/sqlite3.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsHashFunction	src/server/sqlite3.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
ftype	src/tools/lcc/src/types.c	/^Type ftype(Type rty, Type ty) {$/;"	f
fullScreen	src/ui/ui_shared.h	/^  qboolean fullScreen;              \/\/ covers entire screen$/;"	m	struct:__anon503
fullSync	src/server/sqlite3.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
fullVolume	src/client/snd_local.h	/^	qboolean	fullVolume;$/;"	m	struct:__anon94
full_fsync	src/server/sqlite3.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
fullpath	src/qcommon/files.c	/^	char		fullpath[MAX_OSPATH];		\/\/ \/tremulous\/base$/;"	m	struct:__anon454	file:
func	src/qcommon/parse.c	/^  int (*func)(source_t *source);$/;"	m	struct:directive_s	file:
func	src/renderergl1/tr_local.h	/^	genFunc_t	func;$/;"	m	struct:__anon137
func	src/renderergl2/tr_local.h	/^	genFunc_t	func;$/;"	m	struct:__anon19
func	src/server/sv_client.c	/^	void	(*func)( client_t *cl );$/;"	m	struct:__anon190	file:
func	src/tools/lcc/src/event.c	/^	Apply func;$/;"	m	struct:entry	file:
func	src/tools/lcc/src/prof.c	/^struct func {$/;"	s	file:
func	src/tools/lcc/src/profio.c	/^	struct func {			\/* function data: *\/$/;"	s	struct:file	file:
func	src/tools/lcc/src/types.c	/^Type func(Type ty, Type *proto, int style) {$/;"	f
func	src/ui/ui_shared.c	/^  qboolean ( *func )( itemDef_t *item, int handle );$/;"	m	struct:keywordHash_s	file:
funcFlags	src/server/sqlite3.c	/^  u16 funcFlags;       \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef	file:
func_info	src/qcommon/vm_sparc.c	/^struct func_info {$/;"	s	file:
func_timer_think	src/game/g_trigger.c	/^void func_timer_think( gentity_t *self )$/;"	f
func_timer_use	src/game/g_trigger.c	/^void func_timer_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
funcdefn	src/tools/lcc/src/decl.c	/^static void funcdefn(int sclass, char *id, Type ty, Symbol params[], Coordinate pt) {$/;"	f	file:
funclist	src/tools/lcc/src/prof.c	/^static Symbol funclist;	\/* list of struct func *'s *\/$/;"	v	file:
funcname	src/tools/lcc/src/expr.c	/^char *funcname(Tree f) {$/;"	f
funcptype	src/tools/lcc/src/types.c	/^Type funcptype;			\/* void (*)() *\/$/;"	v
funcs	src/tools/lcc/src/profio.c	/^	} *funcs;			\/* list of functions *\/$/;"	m	struct:file	typeref:struct:file::func	file:
function	src/cgame/cg_local.h	/^  void ( *function )( void );$/;"	m	struct:__anon254
function	src/game/g_admin.h	/^  char *function;  \/\/ used in \/adminhelp$/;"	m	struct:__anon375
function	src/game/g_svcmds.c	/^  void     ( *function )( void );$/;"	m	struct:svcmd	file:
function	src/qcommon/cmd.c	/^	xcommand_t				function;$/;"	m	struct:cmd_function_s	file:
function	src/qcommon/vm_powerpc.c	/^	void *function;$/;"	m	struct:__anon452	file:
function	src/tools/lcc/src/bytecode.c	/^static void I(function)(Symbol f, Symbol caller[], Symbol callee[], int ncalls) {$/;"	f	file:
function	src/tools/lcc/src/c.h	/^void (*function)(Symbol, Symbol[], Symbol[], int);$/;"	m	struct:interface
function	src/tools/lcc/src/null.c	/^static void I(function)(Symbol f, Symbol caller[], Symbol callee[], int ncalls) {}$/;"	f	file:
function	src/tools/lcc/src/symbolic.c	/^static void I(function)(Symbol f, Symbol caller[], Symbol callee[], int ncalls) {$/;"	f	file:
function	src/ui/ui_atoms.c	/^  void ( *function )( void );$/;"	m	struct:uicmd	file:
functionDestroy	src/server/sqlite3.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionSearch	src/server/sqlite3.c	/^static FuncDef *functionSearch($/;"	f	file:
g	src/tools/lcc/src/c.h	/^	void (*g)(void);$/;"	m	union:value
g_admin	src/game/g_main.c	/^vmCvar_t  g_admin;$/;"	v
g_adminMaxBan	src/game/g_main.c	/^vmCvar_t  g_adminMaxBan;$/;"	v
g_adminTempBan	src/game/g_main.c	/^vmCvar_t  g_adminTempBan;$/;"	v
g_admin_admin	src/game/g_admin.h	/^typedef struct g_admin_admin$/;"	s
g_admin_admin_t	src/game/g_admin.h	/^g_admin_admin_t;$/;"	t	typeref:struct:g_admin_admin
g_admin_admins	src/game/g_admin.c	/^g_admin_admin_t *g_admin_admins = NULL;$/;"	v
g_admin_ban	src/game/g_admin.h	/^typedef struct g_admin_ban$/;"	s
g_admin_ban_t	src/game/g_admin.h	/^g_admin_ban_t;$/;"	t	typeref:struct:g_admin_ban
g_admin_bans	src/game/g_admin.c	/^g_admin_ban_t *g_admin_bans = NULL;$/;"	v
g_admin_cmd_t	src/game/g_admin.h	/^g_admin_cmd_t;$/;"	t	typeref:struct:__anon375
g_admin_cmds	src/game/g_admin.c	/^g_admin_cmd_t g_admin_cmds[ ] =$/;"	v
g_admin_command	src/game/g_admin.h	/^typedef struct g_admin_command$/;"	s
g_admin_command_t	src/game/g_admin.h	/^g_admin_command_t;$/;"	t	typeref:struct:g_admin_command
g_admin_commands	src/game/g_admin.c	/^g_admin_command_t *g_admin_commands = NULL;$/;"	v
g_admin_level	src/game/g_admin.h	/^typedef struct g_admin_level$/;"	s
g_admin_level_t	src/game/g_admin.h	/^g_admin_level_t;$/;"	t	typeref:struct:g_admin_level
g_admin_levels	src/game/g_admin.c	/^g_admin_level_t *g_admin_levels = NULL;$/;"	v
g_alienBuildPoints	src/game/g_main.c	/^vmCvar_t  g_alienBuildPoints;$/;"	v
g_alienBuildQueueTime	src/game/g_main.c	/^vmCvar_t  g_alienBuildQueueTime;$/;"	v
g_alienCredits	src/game/g_main.c	/^vmCvar_t  g_alienCredits;$/;"	v
g_alienMaxStage	src/game/g_main.c	/^vmCvar_t  g_alienMaxStage;$/;"	v
g_alienStage	src/game/g_main.c	/^vmCvar_t  g_alienStage;$/;"	v
g_alienStage2Threshold	src/game/g_main.c	/^vmCvar_t  g_alienStage2Threshold;$/;"	v
g_alienStage3Threshold	src/game/g_main.c	/^vmCvar_t  g_alienStage3Threshold;$/;"	v
g_allowBuildableStacking	src/game/g_main.c	/^vmCvar_t  g_allowBuildableStacking;$/;"	v
g_allowShare	src/game/g_main.c	/^vmCvar_t  g_allowShare;$/;"	v
g_allowTeamOverlay	src/game/g_main.c	/^vmCvar_t  g_allowTeamOverlay;$/;"	v
g_allowVote	src/game/g_main.c	/^vmCvar_t  g_allowVote;$/;"	v
g_antiSpawnBlock	src/game/g_main.c	/^vmCvar_t  g_antiSpawnBlock;$/;"	v
g_armourRegions	src/game/g_combat.c	/^damageRegion_t  g_armourRegions[ UP_NUM_UPGRADES ][ MAX_DAMAGE_REGIONS ];$/;"	v
g_basetimelimit	src/game/g_main.c	/^vmCvar_t  g_basetimelimit;$/;"	v
g_bfb	src/game/g_admin.c	/^static char g_bfb[ 32000 ];$/;"	v	file:
g_bindCount	src/ui/ui_shared.c	/^static const size_t g_bindCount = ARRAY_LEN( g_bindings );$/;"	v	file:
g_bindItem	src/ui/ui_shared.c	/^static itemDef_t *g_bindItem = NULL;$/;"	v	file:
g_bindings	src/ui/ui_shared.c	/^static bind_t g_bindings[] =$/;"	v	file:
g_censorship	src/game/g_main.c	/^vmCvar_t  g_censorship;$/;"	v
g_cheats	src/game/g_main.c	/^vmCvar_t  g_cheats;$/;"	v
g_clients	src/game/g_main.c	/^gclient_t   g_clients[ MAX_CLIENTS ];$/;"	v
g_color_table	src/qcommon/q_math.c	/^vec4_t	g_color_table[16] =$/;"	v
g_comboBoxItem	src/ui/ui_shared.c	/^static itemDef_t *g_comboBoxItem = NULL;$/;"	v	file:
g_consoleField	src/client/cl_keys.c	/^field_t		g_consoleField;$/;"	v
g_console_field_width	src/client/cl_console.c	/^int g_console_field_width = 78;$/;"	v
g_countdown	src/game/g_main.c	/^vmCvar_t  g_countdown;$/;"	v
g_currentMapRotation	src/game/g_main.c	/^vmCvar_t  g_currentMapRotation;$/;"	v
g_damageRegions	src/game/g_combat.c	/^damageRegion_t  g_damageRegions[ PCL_NUM_CLASSES ][ MAX_DAMAGE_REGIONS ];$/;"	v
g_debugDamage	src/game/g_main.c	/^vmCvar_t  g_debugDamage;$/;"	v
g_debugMapRotation	src/game/g_main.c	/^vmCvar_t  g_debugMapRotation;$/;"	v
g_debugMove	src/game/g_main.c	/^vmCvar_t  g_debugMove;$/;"	v
g_debugPlayMap	src/game/g_main.c	/^vmCvar_t  g_debugPlayMap;$/;"	v
g_debugVoices	src/game/g_main.c	/^vmCvar_t  g_debugVoices;$/;"	v
g_dedicated	src/game/g_main.c	/^vmCvar_t  g_dedicated;$/;"	v
g_disabledBuildables	src/game/g_main.c	/^vmCvar_t  g_disabledBuildables;$/;"	v
g_disabledClasses	src/game/g_main.c	/^vmCvar_t  g_disabledClasses;$/;"	v
g_disabledEquipment	src/game/g_main.c	/^vmCvar_t  g_disabledEquipment;$/;"	v
g_doCountdown	src/game/g_main.c	/^vmCvar_t  g_doCountdown;$/;"	v
g_doWarmup	src/game/g_main.c	/^vmCvar_t  g_doWarmup;$/;"	v
g_dretchPunt	src/game/g_main.c	/^vmCvar_t  g_dretchPunt;$/;"	v
g_editItem	src/ui/ui_shared.c	/^static itemDef_t *g_editItem = NULL;$/;"	v	file:
g_editingField	src/ui/ui_shared.c	/^static qboolean g_editingField = qfalse;$/;"	v	file:
g_elapsed	src/server/sqlite3.c	/^static sqlite_uint64 g_elapsed;$/;"	v	file:
g_emoticonsAllowedInNames	src/game/g_main.c	/^vmCvar_t  g_emoticonsAllowedInNames;$/;"	v
g_entities	src/game/g_main.c	/^gentity_t   g_entities[ MAX_GENTITIES ];$/;"	v
g_extendVotesCount	src/game/g_main.c	/^vmCvar_t  g_extendVotesCount;$/;"	v
g_extendVotesPercent	src/game/g_main.c	/^vmCvar_t  g_extendVotesPercent;$/;"	v
g_extendVotesTime	src/game/g_main.c	/^vmCvar_t  g_extendVotesTime;$/;"	v
g_floodMaxDemerits	src/game/g_main.c	/^vmCvar_t  g_floodMaxDemerits;$/;"	v
g_floodMinTime	src/game/g_main.c	/^vmCvar_t  g_floodMinTime;$/;"	v
g_freeFundPeriod	src/game/g_main.c	/^vmCvar_t  g_freeFundPeriod;$/;"	v
g_friendlyBuildableFire	src/game/g_main.c	/^vmCvar_t  g_friendlyBuildableFire;$/;"	v
g_friendlyFire	src/game/g_main.c	/^vmCvar_t  g_friendlyFire;$/;"	v
g_gravity	src/game/g_main.c	/^vmCvar_t  g_gravity;$/;"	v
g_humanBuildPoints	src/game/g_main.c	/^vmCvar_t  g_humanBuildPoints;$/;"	v
g_humanBuildQueueTime	src/game/g_main.c	/^vmCvar_t  g_humanBuildQueueTime;$/;"	v
g_humanCredits	src/game/g_main.c	/^vmCvar_t  g_humanCredits;$/;"	v
g_humanMaxStage	src/game/g_main.c	/^vmCvar_t  g_humanMaxStage;$/;"	v
g_humanRepeaterBuildPoints	src/game/g_main.c	/^vmCvar_t  g_humanRepeaterBuildPoints;$/;"	v
g_humanRepeaterBuildQueueTime	src/game/g_main.c	/^vmCvar_t  g_humanRepeaterBuildQueueTime;$/;"	v
g_humanRepeaterMaxZones	src/game/g_main.c	/^vmCvar_t  g_humanRepeaterMaxZones;$/;"	v
g_humanStage	src/game/g_main.c	/^vmCvar_t  g_humanStage;$/;"	v
g_humanStage2Threshold	src/game/g_main.c	/^vmCvar_t  g_humanStage2Threshold;$/;"	v
g_humanStage3Threshold	src/game/g_main.c	/^vmCvar_t  g_humanStage3Threshold;$/;"	v
g_impliedVoting	src/game/g_main.c	/^vmCvar_t  g_impliedVoting;$/;"	v
g_inactivity	src/game/g_main.c	/^vmCvar_t  g_inactivity;$/;"	v
g_initialMapRotation	src/game/g_main.c	/^vmCvar_t  g_initialMapRotation;$/;"	v
g_knockback	src/game/g_main.c	/^vmCvar_t  g_knockback;$/;"	v
g_layoutAuto	src/game/g_main.c	/^vmCvar_t  g_layoutAuto;$/;"	v
g_layouts	src/game/g_main.c	/^vmCvar_t  g_layouts[ 9 ];$/;"	v
g_lockTeamsAtStart	src/game/g_main.c	/^vmCvar_t  g_lockTeamsAtStart;$/;"	v
g_logFile	src/game/g_main.c	/^vmCvar_t  g_logFile;$/;"	v
g_logFileSync	src/game/g_main.c	/^vmCvar_t  g_logFileSync;$/;"	v
g_mapConfigs	src/game/g_main.c	/^vmCvar_t  g_mapConfigs;$/;"	v
g_mapRotationNodes	src/game/g_main.c	/^vmCvar_t  g_mapRotationNodes;$/;"	v
g_mapRotationStack	src/game/g_main.c	/^vmCvar_t  g_mapRotationStack;$/;"	v
g_markDeconstruct	src/game/g_main.c	/^vmCvar_t  g_markDeconstruct;$/;"	v
g_maxGameClients	src/game/g_main.c	/^vmCvar_t  g_maxGameClients;$/;"	v
g_maxNameChanges	src/game/g_main.c	/^vmCvar_t  g_maxNameChanges;$/;"	v
g_maxclients	src/game/g_main.c	/^vmCvar_t  g_maxclients;$/;"	v
g_minNameChangePeriod	src/game/g_main.c	/^vmCvar_t  g_minNameChangePeriod;$/;"	v
g_motd	src/game/g_main.c	/^vmCvar_t  g_motd;$/;"	v
g_nadeSpamProtection	src/game/g_main.c	/^vmCvar_t  g_nadeSpamProtection;$/;"	v
g_nameBind1	src/ui/ui_shared.c	/^char g_nameBind1[32];$/;"	v
g_nameBind2	src/ui/ui_shared.c	/^char g_nameBind2[32];$/;"	v
g_needpass	src/game/g_main.c	/^vmCvar_t  g_needpass;$/;"	v
g_nextLayout	src/game/g_main.c	/^vmCvar_t  g_nextLayout;$/;"	v
g_nextMap	src/game/g_main.c	/^vmCvar_t  g_nextMap;$/;"	v
g_numArmourRegions	src/game/g_combat.c	/^int             g_numArmourRegions[ UP_NUM_UPGRADES ];$/;"	v
g_numDamageRegions	src/game/g_combat.c	/^int             g_numDamageRegions[ PCL_NUM_CLASSES ];$/;"	v
g_password	src/game/g_main.c	/^vmCvar_t  g_password;$/;"	v
g_pimpHuman	src/game/g_main.c	/^vmCvar_t  g_pimpHuman;$/;"	v
g_playMapEnable	src/game/g_main.c	/^vmCvar_t  g_playMapEnable;$/;"	v
g_playMapPoolConfig	src/game/g_main.c	/^vmCvar_t  g_playMapPoolConfig;$/;"	v
g_playMapQueueConfig	src/game/g_main.c	/^vmCvar_t  g_playMapQueueConfig;$/;"	v
g_privateMessages	src/game/g_main.c	/^vmCvar_t  g_privateMessages;$/;"	v
g_publicAdminMessages	src/game/g_main.c	/^vmCvar_t  g_publicAdminMessages;$/;"	v
g_restarted	src/game/g_main.c	/^vmCvar_t  g_restarted;$/;"	v
g_sayAreaRange	src/game/g_main.c	/^vmCvar_t  g_sayAreaRange;$/;"	v
g_shove	src/game/g_main.c	/^vmCvar_t  g_shove;$/;"	v
g_smoothClients	src/game/g_main.c	/^vmCvar_t  g_smoothClients;$/;"	v
g_specChat	src/game/g_main.c	/^vmCvar_t  g_specChat;$/;"	v
g_speed	src/game/g_main.c	/^vmCvar_t  g_speed;$/;"	v
g_start	src/server/sqlite3.c	/^static sqlite_uint64 g_start;$/;"	v	file:
g_suddenDeathTime	src/game/g_main.c	/^vmCvar_t  g_suddenDeathTime;$/;"	v
g_suddenDeathVoteDelay	src/game/g_main.c	/^vmCvar_t  g_suddenDeathVoteDelay;$/;"	v
g_suddenDeathVotePercent	src/game/g_main.c	/^vmCvar_t  g_suddenDeathVotePercent;$/;"	v
g_synchronousClients	src/game/g_main.c	/^vmCvar_t  g_synchronousClients;$/;"	v
g_tag	src/game/g_main.c	/^vmCvar_t  g_tag;$/;"	v
g_teamForceBalance	src/game/g_main.c	/^vmCvar_t  g_teamForceBalance;$/;"	v
g_teamImbalanceWarnings	src/game/g_main.c	/^vmCvar_t  g_teamImbalanceWarnings;$/;"	v
g_timelimit	src/game/g_main.c	/^vmCvar_t  g_timelimit;$/;"	v
g_unlagged	src/game/g_main.c	/^vmCvar_t  g_unlagged;$/;"	v
g_voiceChats	src/game/g_main.c	/^vmCvar_t  g_voiceChats;$/;"	v
g_voteLimit	src/game/g_main.c	/^vmCvar_t  g_voteLimit;$/;"	v
g_waitingForKey	src/ui/ui_shared.c	/^static qboolean g_waitingForKey = qfalse;$/;"	v	file:
g_warmup	src/game/g_main.c	/^vmCvar_t  g_warmup;$/;"	v
g_warmupBuildableRespawnTime	src/game/g_main.c	/^vmCvar_t  g_warmupBuildableRespawnTime;$/;"	v
g_warmupDefensiveBuildableRespawnTime	src/game/g_main.c	/^vmCvar_t  g_warmupDefensiveBuildableRespawnTime;$/;"	v
g_warmupReadyThreshold	src/game/g_main.c	/^vmCvar_t  g_warmupReadyThreshold;$/;"	v
g_warmupTimeout1	src/game/g_main.c	/^vmCvar_t  g_warmupTimeout1;$/;"	v
g_warmupTimeout1Trigger	src/game/g_main.c	/^vmCvar_t  g_warmupTimeout1Trigger;$/;"	v
g_warmupTimeout2	src/game/g_main.c	/^vmCvar_t  g_warmupTimeout2;$/;"	v
g_warmupTimeout2Trigger	src/game/g_main.c	/^vmCvar_t  g_warmupTimeout2Trigger;$/;"	v
game	src/client/client.h	/^	char	  	game[MAX_NAME_LENGTH];$/;"	m	struct:__anon89
gameClientSize	src/server/server.h	/^	int				gameClientSize;		\/\/ will be > sizeof(playerState_t) due to game private data$/;"	m	struct:__anon184
gameClients	src/server/server.h	/^	playerState_t	*gameClients;$/;"	m	struct:__anon184
gameCvarTable	src/game/g_main.c	/^static cvarTable_t   gameCvarTable[ ] =$/;"	v	file:
gameCvarTableSize	src/game/g_main.c	/^static size_t gameCvarTableSize = ARRAY_LEN( gameCvarTable );$/;"	v	file:
gameElements_s	src/game/bg_misc.c	/^typedef struct gameElements_s$/;"	s	file:
gameElements_t	src/game/bg_misc.c	/^} gameElements_t;$/;"	t	typeref:struct:gameElements_s	file:
gameExport_t	src/game/g_public.h	/^} gameExport_t;$/;"	t	typeref:enum:__anon364
gameImport_t	src/game/g_public.h	/^} gameImport_t;$/;"	t	typeref:enum:__anon363
gameModels	src/cgame/cg_local.h	/^  qhandle_t     gameModels[ MAX_MODELS ];$/;"	m	struct:__anon253
gameParticleSystems	src/cgame/cg_local.h	/^  qhandle_t     gameParticleSystems[ MAX_GAME_PARTICLE_SYSTEMS ];$/;"	m	struct:__anon253
gameShaders	src/cgame/cg_local.h	/^  qhandle_t     gameShaders[ MAX_GAME_SHADERS ];$/;"	m	struct:__anon253
gameSounds	src/cgame/cg_local.h	/^  sfxHandle_t   gameSounds[ MAX_SOUNDS ];$/;"	m	struct:__anon253
gameState	src/cgame/cg_local.h	/^  gameState_t   gameState;              \/\/ gamestate from server$/;"	m	struct:__anon253
gameState	src/client/client.h	/^	gameState_t	gameState;			\/\/ configstrings$/;"	m	struct:__anon86
gameState_t	src/qcommon/q_shared.h	/^} gameState_t;$/;"	t	typeref:struct:__anon474
gameType	src/client/client.h	/^	int			gameType;$/;"	m	struct:__anon89
gamedir	src/qcommon/files.c	/^	char		gamedir[MAX_OSPATH];	\/\/ base$/;"	m	struct:__anon454	file:
gamedir	src/tools/asm/cmdlib.c	/^char		gamedir[1024];$/;"	v
gamestateMessageNum	src/server/server.h	/^	int				gamestateMessageNum;	\/\/ netchan->outgoingSequence of gamestate$/;"	m	struct:client_s
gather	src/tools/lcc/src/profio.c	/^static int gather(void) {$/;"	f	file:
gatherargs	src/tools/lcc/cpp/macro.c	/^gatherargs(Tokenrow *trp, Tokenrow **atr, int *narg)$/;"	f
gclient_s	src/game/g_local.h	/^struct gclient_s$/;"	s
gclient_t	src/game/g_local.h	/^typedef struct gclient_s gclient_t;$/;"	t	typeref:struct:gclient_s
gcmdsOffset	src/cgame/cg_servercmds.c	/^static size_t gcmdsOffset;$/;"	v	file:
gen	src/tools/lcc/src/bytecode.c	/^static Node I(gen)(Node p) {$/;"	f	file:
gen	src/tools/lcc/src/c.h	/^Node (*gen)     (Node);$/;"	m	struct:interface
gen	src/tools/lcc/src/gen.c	/^Node gen(Node forest) {$/;"	f
gen	src/tools/lcc/src/null.c	/^static Node I(gen)(Node p) { return p; }$/;"	f	file:
gen	src/tools/lcc/src/symbolic.c	/^static Node I(gen)(Node p) {$/;"	f	file:
gen01	src/tools/lcc/src/bytecode.c	/^static void gen01(Node p) {$/;"	f	file:
gen02	src/tools/lcc/src/bytecode.c	/^static void gen02(Node p) {$/;"	f	file:
genFunc_t	src/renderergl1/tr_local.h	/^} genFunc_t;$/;"	t	typeref:enum:__anon131
genFunc_t	src/renderergl2/tr_local.h	/^} genFunc_t;$/;"	t	typeref:enum:__anon12
gencode	src/tools/lcc/src/dag.c	/^void gencode(Symbol caller[], Symbol callee[]) {$/;"	f
genconst	src/tools/lcc/src/init.c	/^static int genconst(Tree e, int def) {$/;"	f	file:
gender	src/cgame/cg_local.h	/^  gender_t    gender;                     \/\/ from model$/;"	m	struct:__anon243
gender_t	src/game/bg_public.h	/^} gender_t;$/;"	t	typeref:enum:__anon327
generateColumnNames	src/server/sqlite3.c	/^static void generateColumnNames($/;"	f	file:
generateColumnTypes	src/server/sqlite3.c	/^static void generateColumnTypes($/;"	f	file:
generateHashValue	src/qcommon/cvar.c	/^static long generateHashValue( const char *fname ) {$/;"	f	file:
generateHashValue	src/renderergl1/tr_image.c	/^static long generateHashValue( const char *fname ) {$/;"	f	file:
generateHashValue	src/renderergl1/tr_shader.c	/^static long generateHashValue( const char *fname, const int size ) {$/;"	f	file:
generateHashValue	src/renderergl2/tr_image.c	/^static long generateHashValue( const char *fname ) {$/;"	f	file:
generateHashValue	src/renderergl2/tr_shader.c	/^static long generateHashValue( const char *fname, const int size ) {$/;"	f	file:
generateOutputSubroutine	src/server/sqlite3.c	/^static int generateOutputSubroutine($/;"	f	file:
generateSortTail	src/server/sqlite3.c	/^static void generateSortTail($/;"	f	file:
generateWithRecursiveQuery	src/server/sqlite3.c	/^static void generateWithRecursiveQuery($/;"	f	file:
generated	src/tools/lcc/src/c.h	/^	unsigned generated:1;$/;"	m	struct:symbol
generation	src/server/server.h	/^	int generation;$/;"	m	struct:voipServerPacket_s
generic	src/tools/lcc/src/c.h	19;"	d
generic1	src/cgame/cg_local.h	/^	int			generic1;$/;"	m	struct:__anon256
generic1	src/cgame/cg_local.h	/^	int		generic1;$/;"	m	struct:__anon257
generic1	src/client/client.h	/^	int			generic1;$/;"	m	struct:alternatePlayerState_s
generic1	src/client/client.h	/^	int		generic1;$/;"	m	struct:alternateEntityState_s
generic1	src/qcommon/msg.c	/^	int			generic1;$/;"	m	struct:alternatePlayerState_s	file:
generic1	src/qcommon/q_shared.h	/^	int			generic1;$/;"	m	struct:playerState_s
generic1	src/qcommon/q_shared.h	/^	int		generic1;$/;"	m	struct:entityState_s
genericShader	src/renderergl2/tr_local.h	/^	shaderProgram_t genericShader[GENERICDEF_COUNT];$/;"	m	struct:__anon63
genident	src/tools/lcc/src/sym.c	/^Symbol genident(int scls, Type ty, int lev) {$/;"	f
genlabel	src/tools/lcc/src/sym.c	/^int genlabel(int n) {$/;"	f
genline	src/tools/lcc/cpp/include.c	/^genline(void)$/;"	f
genreload	src/tools/lcc/src/gen.c	/^static void genreload(Node p, Symbol tmp, int i) {$/;"	f	file:
genspill	src/tools/lcc/src/gen.c	/^static void genspill(Symbol r, Node last, Symbol tmp) {$/;"	f	file:
gentities	src/game/g_local.h	/^  struct gentity_s  *gentities;$/;"	m	struct:__anon316	typeref:struct:__anon316::gentity_s
gentities	src/server/server.h	/^	sharedEntity_t	*gentities;$/;"	m	struct:__anon184
gentity	src/server/server.h	/^	sharedEntity_t	*gentity;			\/\/ SV_GentityNum(clientnum)$/;"	m	struct:client_s
gentitySize	src/game/g_local.h	/^  int               gentitySize;$/;"	m	struct:__anon316
gentitySize	src/server/server.h	/^	int				gentitySize;$/;"	m	struct:__anon184
gentity_s	src/game/g_local.h	/^struct gentity_s$/;"	s
gentity_t	src/game/g_local.h	/^typedef struct gentity_s gentity_t;$/;"	t	typeref:struct:gentity_s
geomCallback	src/server/sqlite3.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
get	src/qcommon/net_chan.c	/^	int			get, send;$/;"	m	struct:__anon448	file:
get	src/tools/lcc/lburg/gram.c	/^static int get(void) {$/;"	f	file:
get2byte	src/server/sqlite3.c	165891;"	d	file:
get2byte	src/server/sqlite3.c	55496;"	d	file:
get2byteAligned	src/server/sqlite3.c	55507;"	d	file:
get2byteAligned	src/server/sqlite3.c	55510;"	d	file:
get2byteAligned	src/server/sqlite3.c	55513;"	d	file:
get2byteAligned	src/server/sqlite3.c	55515;"	d	file:
get2byteNotZero	src/server/sqlite3.c	55845;"	d	file:
get4byte	src/server/sqlite3.c	55498;"	d	file:
getAbsoluteLevel	src/server/sqlite3.c	/^static sqlite3_int64 getAbsoluteLevel($/;"	f	file:
getAndInitPage	src/server/sqlite3.c	/^static int getAndInitPage($/;"	f	file:
getAutoVacuum	src/server/sqlite3.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getBindingBuf	src/ui/ui_shared.h	/^  void ( *getBindingBuf )( int keynum, char *buf, int buflen );$/;"	m	struct:__anon506
getCVarString	src/ui/ui_shared.h	/^  void ( *getCVarString )( const char *cvar, char *buffer, int bufsize );$/;"	m	struct:__anon506
getCVarValue	src/ui/ui_shared.h	/^  float ( *getCVarValue )( const char *cvar );$/;"	m	struct:__anon506
getCellInfo	src/server/sqlite3.c	/^static SQLITE_NOINLINE void getCellInfo(BtCursor *pCur){$/;"	f	file:
getDigits	src/server/sqlite3.c	/^static int getDigits(const char *zDate, const char *zFormat, ...){$/;"	f	file:
getDoubleArg	src/server/sqlite3.c	/^static double getDoubleArg(PrintfArguments *p){$/;"	f	file:
getIntArg	src/server/sqlite3.c	/^static sqlite3_int64 getIntArg(PrintfArguments *p){$/;"	f	file:
getIntFromStmt	src/server/sqlite3.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getLocalPayload	src/server/sqlite3.c	/^static void getLocalPayload($/;"	f	file:
getLockingMode	src/server/sqlite3.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getNextNode	src/server/sqlite3.c	/^static int getNextNode($/;"	f	file:
getNextString	src/server/sqlite3.c	/^static int getNextString($/;"	f	file:
getNextToken	src/server/sqlite3.c	/^static int getNextToken($/;"	f	file:
getNodeSize	src/server/sqlite3.c	/^static int getNodeSize($/;"	f	file:
getOverflowPage	src/server/sqlite3.c	/^static int getOverflowPage($/;"	f	file:
getOverstrikeMode	src/ui/ui_shared.h	/^  qboolean ( *getOverstrikeMode )( void );$/;"	m	struct:__anon506
getPageReferenced	src/server/sqlite3.c	/^static int getPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
getRowTrigger	src/server/sqlite3.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getSafetyLevel	src/server/sqlite3.c	/^static u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){$/;"	f	file:
getTempStore	src/server/sqlite3.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTextArg	src/server/sqlite3.c	/^static char *getTextArg(PrintfArguments *p){$/;"	f	file:
getValue	src/ui/ui_shared.h	/^  float ( *getValue ) ( int ownerDraw );$/;"	m	struct:__anon506
getVarint	src/server/sqlite3.c	14705;"	d	file:
getVarint32	src/server/sqlite3.c	14700;"	d	file:
get_autocommit	src/server/sqlite3.c	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
get_auxdata	src/server/sqlite3.c	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
get_bit	src/qcommon/huffman.c	/^static int get_bit (byte *fin) {$/;"	f	file:
get_last_maps_stmt	src/server/sv_database.c	/^				*get_last_maps_stmt = NULL,$/;"	v
get_map_key_stmt	src/server/sv_database.c	/^				*get_map_key_stmt = NULL,$/;"	v
get_ppnode	src/qcommon/huffman.c	/^static node_t **get_ppnode(huff_t* huff) {$/;"	f	file:
get_seen_stmt	src/server/sv_database.c	/^				*get_seen_stmt = NULL;$/;"	v
get_table	src/server/sqlite3.c	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	file:
get_time_stmt	src/server/sv_database.c	/^				*get_time_stmt = NULL,$/;"	v
getchr	src/tools/lcc/src/lex.c	/^int getchr(void) {$/;"	f
getd	src/tools/lcc/src/profio.c	/^static int getd(void) {$/;"	f	file:
getreg	src/tools/lcc/src/gen.c	/^static Symbol getreg(Symbol s, unsigned mask[], Node p) {$/;"	f	file:
getregnum	src/tools/lcc/src/gen.c	/^int getregnum(Node p) {$/;"	f
getrule	src/tools/lcc/src/gen.c	/^static int getrule(Node p, int nt) {$/;"	f	file:
getstr	src/tools/lcc/src/profio.c	/^static char *getstr(void) {$/;"	f	file:
gettok	src/tools/lcc/src/lex.c	/^int gettok(void) {$/;"	f
gettokens	src/tools/lcc/cpp/lex.c	/^gettokens(Tokenrow *trp, int reset)$/;"	f
geu	src/tools/lcc/src/simp.c	46;"	d	file:
glConfig	src/renderergl1/tr_init.c	/^glconfig_t  glConfig;$/;"	v
glConfig	src/renderergl2/tr_init.c	/^glconfig_t  glConfig;$/;"	v
glDriverType_t	src/renderercommon/tr_types.h	/^} glDriverType_t;$/;"	t	typeref:enum:__anon118
glHardwareType_t	src/renderercommon/tr_types.h	/^} glHardwareType_t;$/;"	t	typeref:enum:__anon119
glIndex_t	src/renderergl1/tr_local.h	/^typedef unsigned int glIndex_t;$/;"	t
glIndex_t	src/renderergl2/tr_local.h	/^typedef unsigned int glIndex_t;$/;"	t
glRefConfig	src/renderergl2/tr_init.c	/^glRefConfig_t glRefConfig;$/;"	v
glRefConfig_t	src/renderergl2/tr_local.h	/^} glRefConfig_t;$/;"	t	typeref:struct:__anon60
glState	src/renderergl1/tr_init.c	/^glstate_t	glState;$/;"	v
glState	src/renderergl2/tr_init.c	/^glstate_t	glState;$/;"	v
glStateBits	src/renderergl1/tr_local.h	/^	unsigned long	glStateBits;$/;"	m	struct:__anon160
glStateBits	src/renderergl2/tr_local.h	/^	uint32_t    glStateBits;$/;"	m	struct:__anon57
gl_filter_max	src/renderergl1/tr_image.c	/^int		gl_filter_max = GL_LINEAR;$/;"	v
gl_filter_max	src/renderergl2/tr_image.c	/^int		gl_filter_max = GL_LINEAR;$/;"	v
gl_filter_min	src/renderergl1/tr_image.c	/^int		gl_filter_min = GL_LINEAR_MIPMAP_NEAREST;$/;"	v
gl_filter_min	src/renderergl2/tr_image.c	/^int		gl_filter_min = GL_LINEAR_MIPMAP_NEAREST;$/;"	v
glconfig	src/cgame/cg_local.h	/^  glconfig_t    glconfig;               \/\/ rendering configuration$/;"	m	struct:__anon253
glconfig	src/client/client.h	/^	glconfig_t	glconfig;$/;"	m	struct:__anon90
glconfig	src/ui/ui_shared.h	/^  glconfig_t glconfig;$/;"	m	struct:__anon506
glconfig_t	src/renderercommon/tr_types.h	/^} glconfig_t;$/;"	t	typeref:struct:__anon120
glevel	src/tools/lcc/src/main.c	/^int glevel;		\/* == [0-9] if -g[0-9] specified *\/$/;"	v
globInfo	src/server/sqlite3.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
global	src/tools/lcc/src/bytecode.c	/^static void I(global)(Symbol p) {$/;"	f	file:
global	src/tools/lcc/src/c.h	/^void (*global)(Symbol);$/;"	m	struct:interface
global	src/tools/lcc/src/null.c	/^static void I(global)(Symbol p) {}$/;"	f	file:
global	src/tools/lcc/src/symbolic.c	/^static void I(global)(Symbol p) {$/;"	f	file:
globalServerAddresses	src/client/client.h	/^	netadr_t		globalServerAddresses[MAX_GLOBAL_SERVERS];$/;"	m	struct:__anon90
globalServers	src/client/client.h	/^	serverInfo_t  globalServers[MAX_GLOBAL_SERVERS];$/;"	m	struct:__anon90
global_recover	src/server/sqlite3.c	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	file:
globaldefines	src/qcommon/parse.c	/^define_t *globaldefines;$/;"	v
globals	src/tools/lcc/src/sym.c	/^Table globals     = &ids;$/;"	v
glslMajorVersion	src/renderergl2/tr_local.h	/^	int glslMajorVersion;$/;"	m	struct:__anon60
glslMinorVersion	src/renderergl2/tr_local.h	/^	int glslMinorVersion;$/;"	m	struct:__anon60
glslShaderGroup	src/renderergl2/tr_local.h	/^	struct shaderProgram_s *glslShaderGroup;$/;"	m	struct:__anon26	typeref:struct:__anon26::shaderProgram_s
glslShaderIndex	src/renderergl2/tr_local.h	/^	int glslShaderIndex;$/;"	m	struct:__anon26
glstate_t	src/renderergl1/tr_local.h	/^} glstate_t;$/;"	t	typeref:struct:__anon160
glstate_t	src/renderergl2/tr_local.h	/^} glstate_t;$/;"	t	typeref:struct:__anon57
glyph	src/qcommon/q_shared.h	/^  qhandle_t glyph;  \/\/ handle to the shader with the glyph$/;"	m	struct:__anon478
glyphInfo_t	src/qcommon/q_shared.h	/^} glyphInfo_t;$/;"	t	typeref:struct:__anon478
glyphScale	src/qcommon/q_shared.h	/^  float glyphScale;$/;"	m	struct:__anon479
glyphs	src/qcommon/q_shared.h	/^  glyphInfo_t glyphs [GLYPHS_PER_FONT];$/;"	m	struct:__anon479
gop	src/tools/lcc/src/c.h	/^       gop(ADD,19)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(ADDRF,17)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(ADDRG,16)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(ADDRL,18)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(ARG,2)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(ASGN,3)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(BAND,24)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(BCOM,25)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(BOR,26)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(BXOR,27)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(CALL,13)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(CVF,7)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(CVI,8)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(CVP,9)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(CVU,11)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(DIV,28)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(EQ,30)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(GE,31)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(GT,32)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(INDIR,4)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(JUMP,36)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(LABEL,37)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(LE,33)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(LOAD,14)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(LSH,21)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(LT,34)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(MOD,22)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(MUL,29)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(NE,35)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(NEG,12)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(RET,15)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(RSH,23)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^       gop(SUB,20)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	/^enum { gop(CNST,1)$/;"	e	enum:__anon287
gop	src/tools/lcc/src/c.h	196;"	d
gop	src/tools/lcc/src/c.h	331;"	d
gotCP	src/server/server.h	/^	qboolean  gotCP; \/\/ TTimo - additional flag to distinguish between a bad pure checksum, and no cp command at all$/;"	m	struct:client_s
gpr_list	src/qcommon/vm_powerpc.c	/^static const long int gpr_list[] = {$/;"	v	file:
gpr_pos	src/qcommon/vm_sparc.c	/^	int			gpr_pos;$/;"	m	struct:func_info	file:
gpr_total	src/qcommon/vm_powerpc.c	/^static const long int gpr_total = ARRAY_LEN( gpr_list );$/;"	v	file:
gpr_vstart	src/qcommon/vm_powerpc.c	/^static const long int gpr_vstart = 8; \/* position of first volatile register *\/$/;"	v	file:
grabExpiryTime	src/game/g_local.h	/^  int                 grabExpiryTime;$/;"	m	struct:gclient_s
gradientBar	src/ui/ui_shared.h	/^  qhandle_t gradientBar;$/;"	m	struct:__anon504
gradientImage	src/ui/ui_shared.h	/^  qhandle_t gradientImage;$/;"	m	struct:__anon506
gradientStr	src/ui/ui_shared.h	/^  const char *gradientStr;$/;"	m	struct:__anon504
grapplePoint	src/cgame/cg_local.h	/^	vec3_t		grapplePoint;	\/\/ location of grapple to pull towards if PMF_GRAPPLE_PULL$/;"	m	struct:__anon256
grapplePoint	src/client/client.h	/^	vec3_t		grapplePoint;	\/\/ location of grapple to pull towards if PMF_GRAPPLE_PULL$/;"	m	struct:alternatePlayerState_s
grapplePoint	src/qcommon/msg.c	/^	vec3_t		grapplePoint;	\/\/ location of grapple to pull towards if PMF_GRAPPLE_PULL$/;"	m	struct:alternatePlayerState_s	file:
grapplePoint	src/qcommon/q_shared.h	/^	vec3_t		grapplePoint;	\/\/ location of grapple to pull towards if PMF_GRAPPLE_PULL$/;"	m	struct:playerState_s
gravity	src/cgame/cg_local.h	/^	int			gravity;$/;"	m	struct:__anon256
gravity	src/client/client.h	/^	int			gravity;$/;"	m	struct:alternatePlayerState_s
gravity	src/qcommon/msg.c	/^	int			gravity;$/;"	m	struct:alternatePlayerState_s	file:
gravity	src/qcommon/q_shared.h	/^	int			gravity;$/;"	m	struct:playerState_s
gray	src/client/cl_cin.c	/^	byte*				gray;$/;"	m	struct:__anon100	file:
greenBuildShader	src/cgame/cg_local.h	/^  qhandle_t   greenBuildShader;$/;"	m	struct:__anon251
groundEntityNum	src/cgame/cg_local.h	/^	int			groundEntityNum;\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:__anon256
groundEntityNum	src/cgame/cg_local.h	/^	int		groundEntityNum;	\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:__anon257
groundEntityNum	src/client/client.h	/^	int			groundEntityNum;\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:alternatePlayerState_s
groundEntityNum	src/client/client.h	/^	int		groundEntityNum;	\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:alternateEntityState_s
groundEntityNum	src/qcommon/msg.c	/^	int			groundEntityNum;\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:alternatePlayerState_s	file:
groundEntityNum	src/qcommon/q_shared.h	/^	int			groundEntityNum;\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:playerState_s
groundEntityNum	src/qcommon/q_shared.h	/^	int		groundEntityNum;	\/\/ ENTITYNUM_NONE = in air$/;"	m	struct:entityState_s
groundPlane	src/game/bg_local.h	/^  qboolean  groundPlane;$/;"	m	struct:__anon324
groundTrace	src/game/bg_local.h	/^  trace_t   groundTrace;$/;"	m	struct:__anon324
group	src/ui/ui_shared.h	/^  const char *group;              \/\/ if it belongs to a group$/;"	m	struct:__anon499
groupConcatFinalize	src/server/sqlite3.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatStep	src/server/sqlite3.c	/^static void groupConcatStep($/;"	f	file:
growOp3	src/server/sqlite3.c	/^static SQLITE_NOINLINE int growOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f	file:
growOpArray	src/server/sqlite3.c	/^static int growOpArray(Vdbe *v, int nOp){$/;"	f	file:
growVTrans	src/server/sqlite3.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
growtokenrow	src/tools/lcc/cpp/tokens.c	/^growtokenrow(Tokenrow *trp)$/;"	f
grp	src/server/sqlite3.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
gt	src/qcommon/vm_powerpc_asm.h	108;"	d
guid	src/game/g_admin.h	/^  char guid[ 33 ];$/;"	m	struct:g_admin_admin
guid	src/game/g_admin.h	/^  char guid[ 33 ];$/;"	m	struct:g_admin_ban
guid	src/game/g_local.h	/^  char                guid[ 33 ];$/;"	m	struct:__anon311
guid	src/game/g_local.h	/^  char              guid[ 33 ];$/;"	m	struct:namelog_s
guidless	src/game/g_local.h	/^  qboolean            guidless;$/;"	m	struct:__anon311
guidless	src/game/g_local.h	/^  qboolean          guidless;$/;"	m	struct:namelog_s
gvm	src/server/sv_main.c	/^vm_t			*gvm = NULL;				\/\/ game virtual machine$/;"	v
h	src/renderergl1/tr_local.h	/^	float	w, h;$/;"	m	struct:__anon170
h	src/renderergl2/tr_local.h	/^	float	w, h;$/;"	m	struct:__anon70
h	src/server/sqlite3.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
h	src/server/sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	src/server/sqlite3.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	src/server/sqlite3.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
h	src/ui/ui_local.h	/^  int h;$/;"	m	struct:__anon517
h	src/ui/ui_shared.h	/^  float h;    \/\/ height;$/;"	m	struct:__anon498
hFile	src/server/sqlite3.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hHeap	src/server/sqlite3.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hMap	src/server/sqlite3.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMap	src/server/sqlite3.c	/^  HANDLE hMap;                  \/* Handle for accessing memory mapping *\/$/;"	m	struct:winFile	file:
hMapObject	src/client/libmumblelink.c	/^static HANDLE hMapObject = NULL;$/;"	v	file:
hModel	src/renderercommon/tr_types.h	/^	qhandle_t	hModel;				\/\/ opaque type outside refresh$/;"	m	struct:__anon114
hMutex	src/server/sqlite3.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/$/;"	m	struct:winFile	file:
hPending	src/server/sqlite3.c	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
hRes	src/renderercommon/tr_image_bmp.c	/^	unsigned hRes;$/;"	m	struct:__anon110	file:
hShader	src/renderercommon/tr_types.h	/^	qhandle_t			hShader;$/;"	m	struct:poly_s
hShader	src/renderergl1/tr_local.h	/^	qhandle_t		hShader;$/;"	m	struct:srfPoly_s
hShader	src/renderergl2/tr_local.h	/^	qhandle_t		hShader;$/;"	m	struct:srfPoly_s
hShared	src/server/sqlite3.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
h_dontcare	src/qcommon/q_shared.h	/^	h_dontcare$/;"	e	enum:__anon461
h_high	src/qcommon/q_shared.h	/^	h_high,$/;"	e	enum:__anon461
h_low	src/qcommon/q_shared.h	/^	h_low,$/;"	e	enum:__anon461
ha_pref	src/qcommon/q_shared.h	/^} ha_pref;$/;"	t	typeref:enum:__anon461
hack	src/game/g_public.h	/^  entityState_t hack;     \/\/ exists (as padding) to retain ABI compatibility$/;"	m	struct:__anon361
half	src/client/cl_cin.c	/^	qboolean			half, smootheddouble, inMemory;$/;"	m	struct:__anon100	file:
halfFloatPixel	src/renderergl2/tr_local.h	/^	qboolean halfFloatPixel;$/;"	m	struct:__anon60
halfWidth	src/cgame/cg_local.h	/^  float                   halfWidth;$/;"	m	struct:trailBeamNode_s
halfheight	src/qcommon/cm_local.h	/^	float		halfheight;$/;"	m	struct:__anon442
handle	src/qcommon/files.c	/^	unzFile			handle;						\/\/ handle to zip file$/;"	m	struct:pack_s	file:
handle	src/qcommon/q_shared.h	/^	cvarHandle_t	handle;$/;"	m	struct:__anon468
handleDeferredMoveto	src/server/sqlite3.c	/^static int SQLITE_NOINLINE handleDeferredMoveto(VdbeCursor *p){$/;"	f	file:
handleFiles	src/qcommon/files.c	/^	qfile_ut	handleFiles;$/;"	m	struct:__anon455	file:
handleMovedCursor	src/server/sqlite3.c	/^static int SQLITE_NOINLINE handleMovedCursor(VdbeCursor *p){$/;"	f	file:
handleSync	src/qcommon/files.c	/^	qboolean	handleSync;$/;"	m	struct:__anon455	file:
handler	src/game/g_admin.h	/^  qboolean ( * handler ) ( gentity_t *ent );$/;"	m	struct:__anon375
handler	src/ui/ui_shared.h	/^  void ( *handler ) ( itemDef_t *item, char** args );$/;"	m	struct:__anon505
handsModel	src/cgame/cg_local.h	/^  qhandle_t         handsModel;       \/\/ the hands don't actually draw, they just position the weapon$/;"	m	struct:weaponInfo_s
hardBounceSound1	src/cgame/cg_local.h	/^  sfxHandle_t hardBounceSound1;$/;"	m	struct:__anon251
hardBounceSound2	src/cgame/cg_local.h	/^  sfxHandle_t hardBounceSound2;$/;"	m	struct:__anon251
hardwareType	src/renderercommon/tr_types.h	/^	glHardwareType_t		hardwareType;$/;"	m	struct:__anon120
hasAltMode	src/game/bg_public.h	/^  qboolean  hasAltMode;$/;"	m	struct:__anon355
hasColumn	src/server/sqlite3.c	/^static int hasColumn(const i16 *aiCol, int nCol, int x){$/;"	f	file:
hasCompound	src/server/sqlite3.c	/^  u8 hasCompound;      \/* Need to invoke convertCompoundSelectToSubquery() *\/$/;"	m	struct:Parse	file:
hasHealed	src/game/g_local.h	/^  qboolean            hasHealed;          \/\/ has healed a player (basi regen aura) in the last 10sec (for score use)$/;"	m	struct:__anon311
hasHeldSharedLock	src/server/sqlite3.c	/^  u8 hasHeldSharedLock;       \/* True if a shared lock has ever been held *\/$/;"	m	struct:Pager	file:
hasHotJournal	src/server/sqlite3.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasIncrblobCur	src/server/sqlite3.c	/^  u8 hasIncrblobCur; \/* True if there are one or more Incrblob cursors *\/$/;"	m	struct:Btree	file:
hasMutex	src/server/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	src/server/sqlite3.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasOffset	src/cgame/cg_local.h	/^  qboolean          hasOffset;$/;"	m	struct:attachment_s
hasReadConflicts	src/server/sqlite3.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	src/server/sqlite3.c	55913;"	d	file:
hasSharedCacheTableLock	src/server/sqlite3.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	src/server/sqlite3.c	55912;"	d	file:
hasSurface	src/renderergl1/tr_local.h	/^	qboolean	hasSurface;$/;"	m	struct:__anon149
hasSurface	src/renderergl2/tr_local.h	/^	qboolean	hasSurface;$/;"	m	struct:__anon41
hasThirdMode	src/game/bg_public.h	/^  qboolean  hasThirdMode;$/;"	m	struct:__anon355
hasVoip	src/server/server.h	/^	qboolean hasVoip;$/;"	m	struct:client_s
hasVowel	src/server/sqlite3.c	/^static int hasVowel(const char *z){$/;"	f	file:
has_call	src/qcommon/vm_sparc.c	/^	int			has_call;$/;"	m	struct:func_info	file:
hascall	src/tools/lcc/src/expr.c	/^int hascall(Tree p) {$/;"	f
hash	src/server/server.h	/^	long					hash;$/;"	m	struct:leakyBucket_s
hash	src/tools/asm/q3asm.c	/^	int		hash;$/;"	m	struct:symbol_s	file:
hash	src/tools/lcc/lburg/lburg.c	/^static unsigned hash(char *str) {$/;"	f	file:
hashDestroy	src/server/sqlite3.c	/^static void hashDestroy(void *p){$/;"	f	file:
hashForString	src/ui/ui_shared.c	/^static long hashForString( const char *str )$/;"	f	file:
hashIndex	src/qcommon/q_shared.h	/^	int			hashIndex;$/;"	m	struct:cvar_s
hashNext	src/qcommon/q_shared.h	/^	cvar_t *hashNext;$/;"	m	struct:cvar_s
hashPrev	src/qcommon/q_shared.h	/^	cvar_t *hashPrev;$/;"	m	struct:cvar_s
hashSize	src/qcommon/files.c	/^	int				hashSize;					\/\/ hash table size (power of 2)$/;"	m	struct:pack_s	file:
hashTable	src/qcommon/cvar.c	/^static	cvar_t	*hashTable[FILE_HASH_SIZE];$/;"	v	file:
hashTable	src/qcommon/files.c	/^	fileInPack_t*	*hashTable;					\/\/ hash table$/;"	m	struct:pack_s	file:
hashTable	src/renderergl1/tr_image.c	/^static	image_t*		hashTable[FILE_HASH_SIZE];$/;"	v	file:
hashTable	src/renderergl1/tr_shader.c	/^static	shader_t*		hashTable[FILE_HASH_SIZE];$/;"	v	file:
hashTable	src/renderergl2/tr_image.c	/^static	image_t*		hashTable[FILE_HASH_SIZE];$/;"	v	file:
hashTable	src/renderergl2/tr_shader.c	/^static	shader_t*		hashTable[FILE_HASH_SIZE];$/;"	v	file:
hash_table	src/master/servers.c	/^static server_t** hash_table = NULL;$/;"	v	file:
hash_table_size	src/master/servers.c	/^static size_t hash_table_size = (1 << DEFAULT_HASH_SIZE);$/;"	v	file:
hashchain_s	src/tools/asm/q3asm.c	/^typedef struct hashchain_s {$/;"	s	file:
hashchain_t	src/tools/asm/q3asm.c	/^} hashchain_t;$/;"	t	typeref:struct:hashchain_s	file:
hashnext	src/qcommon/parse.c	/^  struct define_s *hashnext;  \/\/next define in the hash chain$/;"	m	struct:define_s	typeref:struct:define_s::define_s	file:
hashtable_add	src/tools/asm/q3asm.c	/^static void hashtable_add (hashtable_t *H, int hashvalue, void *datum)$/;"	f	file:
hashtable_get	src/tools/asm/q3asm.c	/^static hashchain_t *hashtable_get (hashtable_t *H, int hashvalue)$/;"	f	file:
hashtable_init	src/tools/asm/q3asm.c	/^static void hashtable_init (hashtable_t *H, int buckets)$/;"	f	file:
hashtable_new	src/tools/asm/q3asm.c	/^static hashtable_t *hashtable_new (int buckets)$/;"	f	file:
hashtable_s	src/tools/asm/q3asm.c	/^typedef struct hashtable_s {$/;"	s	file:
hashtable_stats	src/tools/asm/q3asm.c	/^static void hashtable_stats (hashtable_t *H)$/;"	f	file:
hashtable_symbol_exists	src/tools/asm/q3asm.c	/^static int hashtable_symbol_exists (hashtable_t *H, int hash, char *sym)$/;"	f	file:
hashtable_t	src/tools/asm/q3asm.c	/^} hashtable_t;$/;"	t	typeref:struct:hashtable_s	file:
hasproto	src/tools/lcc/src/types.c	/^int hasproto(Type ty) {$/;"	f
hat_keys	src/sdl/sdl_input.c	/^static int hat_keys[16] = {$/;"	v	file:
hdr	src/server/sqlite3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon204	typeref:struct:Mem3Block::__anon204::__anon205	file:
hdr	src/server/sqlite3.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdrDepthFbo	src/renderergl2/tr_local.h	/^	FBO_t					*hdrDepthFbo;$/;"	m	struct:__anon63
hdrDepthImage	src/renderergl2/tr_local.h	/^	image_t					*hdrDepthImage;$/;"	m	struct:__anon63
hdrLightGrid	src/renderergl2/tr_local.h	/^	float		*hdrLightGrid;$/;"	m	struct:__anon49
hdrOffset	src/server/sqlite3.c	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage	file:
head	src/game/g_playmap.h	/^  int head, tail, numEntries;$/;"	m	struct:playMapQueue_s
head	src/qcommon/qcommon.h	/^	struct	nodetype **head; \/* highest ranked node in block *\/$/;"	m	struct:nodetype	typeref:struct:nodetype::nodetype
head	src/tools/lcc/src/gen.c	/^Node head;$/;"	v
headEndPitch	src/cgame/cg_local.h	/^  float         headEndPitch;$/;"	m	struct:__anon249
headEndTime	src/cgame/cg_local.h	/^  int           headEndTime;$/;"	m	struct:__anon249
headEndYaw	src/cgame/cg_local.h	/^  float         headEndYaw;$/;"	m	struct:__anon249
headModel	src/cgame/cg_local.h	/^  qhandle_t   headModel;$/;"	m	struct:__anon243
headOffset	src/cgame/cg_local.h	/^  vec3_t      headOffset;                 \/\/ move head in icon views$/;"	m	struct:__anon243
headSkin	src/cgame/cg_local.h	/^  qhandle_t   headSkin;$/;"	m	struct:__anon243
headStartPitch	src/cgame/cg_local.h	/^  float         headStartPitch;$/;"	m	struct:__anon249
headStartTime	src/cgame/cg_local.h	/^  int           headStartTime;$/;"	m	struct:__anon249
headStartYaw	src/cgame/cg_local.h	/^  float         headStartYaw;$/;"	m	struct:__anon249
headYaw	src/cgame/cg_local.h	/^  float         headYaw;$/;"	m	struct:__anon249
header	src/tools/lcc/src/alloc.c	/^union header {$/;"	u	file:
healBlendValue	src/cgame/cg_local.h	/^  float         healBlendValue;$/;"	m	struct:__anon249
health	src/cgame/cg_local.h	/^  int         health;                     \/\/ you only get this info about your teammates$/;"	m	struct:__anon243
health	src/game/bg_public.h	/^  int           health;$/;"	m	struct:__anon353
health	src/game/bg_public.h	/^  int       health;$/;"	m	struct:__anon349
health	src/game/g_local.h	/^  int               health;$/;"	m	struct:gentity_s
healthCross	src/cgame/cg_local.h	/^  qhandle_t   healthCross;$/;"	m	struct:__anon251
healthCross2X	src/cgame/cg_local.h	/^  qhandle_t   healthCross2X;$/;"	m	struct:__anon251
healthCross3X	src/cgame/cg_local.h	/^  qhandle_t   healthCross3X;$/;"	m	struct:__anon251
healthCrossFade	src/cgame/cg_local.h	/^  float         healthCrossFade;$/;"	m	struct:__anon249
healthCrossMedkit	src/cgame/cg_local.h	/^  qhandle_t   healthCrossMedkit;$/;"	m	struct:__anon251
healthCrossPoisoned	src/cgame/cg_local.h	/^  qhandle_t   healthCrossPoisoned;$/;"	m	struct:__anon251
healthElevatedColor	src/cgame/cg_local.h	/^  vec4_t        healthElevatedColor;$/;"	m	struct:__anon252
healthGuardedColor	src/cgame/cg_local.h	/^  vec4_t        healthGuardedColor;$/;"	m	struct:__anon252
healthHighColor	src/cgame/cg_local.h	/^  vec4_t        healthHighColor;$/;"	m	struct:__anon252
healthLowColor	src/cgame/cg_local.h	/^  vec4_t        healthLowColor;$/;"	m	struct:__anon252
healthPadding	src/cgame/cg_local.h	/^  int           healthPadding;$/;"	m	struct:__anon252
healthSevereColor	src/cgame/cg_local.h	/^  vec4_t        healthSevereColor;$/;"	m	struct:__anon252
heap	src/server/sqlite3.c	/^  u32 *heap;        \/* Min-heap used for analyzing cell coverage *\/$/;"	m	struct:IntegrityCk	file:
height	src/client/cl_avi.c	/^  int           width, height;$/;"	m	struct:aviFileData_s	file:
height	src/client/cl_cin.c	/^	int					xpos, ypos, width, height;$/;"	m	struct:__anon100	file:
height	src/qcommon/cm_patch.h	/^	int			height;$/;"	m	struct:__anon488
height	src/qcommon/q_shared.h	/^  int height;       \/\/ number of scan lines$/;"	m	struct:__anon478
height	src/renderercommon/tr_common.h	/^	int			width, height;				\/\/ source image$/;"	m	struct:image_s
height	src/renderercommon/tr_image_bmp.c	/^	unsigned height;$/;"	m	struct:__anon110	file:
height	src/renderercommon/tr_image_tga.c	/^	unsigned short	x_origin, y_origin, width, height;$/;"	m	struct:_TargaHeader	file:
height	src/renderercommon/tr_types.h	/^	int			x, y, width, height;$/;"	m	struct:__anon115
height	src/renderergl1/tr_local.h	/^	int						height;$/;"	m	struct:__anon173
height	src/renderergl1/tr_local.h	/^	int				width, height;$/;"	m	struct:srfGridMesh_s
height	src/renderergl1/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon147
height	src/renderergl1/tr_local.h	/^	int		height;$/;"	m	struct:__anon167
height	src/renderergl1/tr_local.h	/^	int height;$/;"	m	struct:__anon172
height	src/renderergl2/tr_fbo.h	/^	int             height;$/;"	m	struct:FBO_s
height	src/renderergl2/tr_local.h	/^	int						height;$/;"	m	struct:__anon73
height	src/renderergl2/tr_local.h	/^	int				width, height;$/;"	m	struct:srfBspSurface_s
height	src/renderergl2/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon39
height	src/renderergl2/tr_local.h	/^	int		height;$/;"	m	struct:__anon67
height	src/renderergl2/tr_local.h	/^	int height;$/;"	m	struct:__anon72
height	src/sdl/sdl_icon.h	/^  unsigned int 	 height;$/;"	m	struct:__anon378
height	src/tools/asm/cmdlib.h	/^	int		count, width, height;$/;"	m	struct:__anon262
heightLodError	src/renderergl1/tr_local.h	/^	float			*heightLodError;$/;"	m	struct:srfGridMesh_s
heightLodError	src/renderergl2/tr_local.h	/^	float			*heightLodError;$/;"	m	struct:srfBspSurface_s
heightOfExpr	src/server/sqlite3.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExprList	src/server/sqlite3.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfSelect	src/server/sqlite3.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
help	src/tools/lcc/etc/lcc.c	/^static void help(void) {$/;"	f	file:
helpCount	src/ui/ui_local.h	/^  int         helpCount;$/;"	m	struct:__anon518
helpIndex	src/ui/ui_local.h	/^  int         helpIndex;$/;"	m	struct:__anon518
helpList	src/ui/ui_local.h	/^  menuItem_t  helpList[ MAX_HELP_INFOPANES ];$/;"	m	struct:__anon518
hexFunc	src/server/sqlite3.c	/^static void hexFunc($/;"	f	file:
hexdigits	src/server/sqlite3.c	/^static const char hexdigits[] = {$/;"	v	file:
hi	src/qcommon/q_shared.h	/^  unsigned int hi;$/;"	m	struct:__anon463
hideset	src/tools/lcc/cpp/cpp.h	/^	unsigned short	hideset;$/;"	m	struct:token
hidesets	src/tools/lcc/cpp/hideset.c	/^Hideset	*hidesets;$/;"	v
high	src/ui/ui_shared.h	/^  float    high;$/;"	m	struct:__anon500
hints	src/server/sqlite3.c	/^  u8 hints;                 \/* As configured by CursorSetHints() *\/$/;"	m	struct:BtCursor	file:
hist_count	src/sys/con_tty.c	/^static int hist_current = -1, hist_count = 0;$/;"	v	file:
hist_current	src/sys/con_tty.c	/^static int hist_current = -1, hist_count = 0;$/;"	v	file:
historyEditLines	src/client/cl_keys.c	/^field_t	historyEditLines[COMMAND_HISTORY];$/;"	v
historyLine	src/client/cl_keys.c	/^int			historyLine;	\/\/ the line being displayed from history buffer$/;"	v
hiveFire	src/game/g_weapon.c	/^void hiveFire( gentity_t *ent )$/;"	f
hlink	src/tools/lcc/src/dag.c	/^	struct dag *hlink;$/;"	m	struct:dag	typeref:struct:dag::dag	file:
hlmask	src/server/sqlite3.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
holdAtEnd	src/client/cl_cin.c	/^	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;$/;"	m	struct:__anon100	file:
holdable_t	src/game/bg_public.h	/^} holdable_t;$/;"	t	typeref:enum:__anon333
homePath	src/sys/sys_unix.c	/^static char homePath[ MAX_OSPATH ] = { 0 };$/;"	v	file:
homePath	src/sys/sys_win32.c	/^static char homePath[ MAX_OSPATH ] = { 0 };$/;"	v	file:
hook	src/game/g_local.h	/^  gentity_t           *hook;            \/\/ grapple hook if out$/;"	m	struct:gclient_s
horizontalMargin	src/cgame/cg_local.h	/^  float         horizontalMargin;$/;"	m	struct:__anon252
hostName	src/client/client.h	/^	char	  	hostName[MAX_HOSTNAME_LENGTH];$/;"	m	struct:__anon89
hour_min	src/server/sv_database.c	/^void hour_min( int64_t elapsed, int *hours,int *mins ) {$/;"	f
hovel	src/game/g_local.h	/^  gentity_t           *hovel;           \/\/ body that is being infested. must be persistant$/;"	m	struct:gclient_s
hovelOrigin	src/game/g_local.h	/^  vec3_t              hovelOrigin;          \/\/ player origin before entering hovel$/;"	m	struct:gclient_s
hres	src/renderercommon/tr_image_pcx.c	/^	unsigned short	hres,vres;$/;"	m	struct:__anon124	file:
hscreensize	src/renderercommon/tr_image_pcx.c	/^	unsigned short	hscreensize, vscreensize;$/;"	m	struct:__anon124	file:
ht	src/server/sqlite3.c	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht	file:
ht	src/server/sqlite3.c	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht	file:
ht_slot	src/server/sqlite3.c	/^typedef u16 ht_slot;$/;"	t	file:
html	src/tools/lcc/src/symbolic.c	/^static int off, maxoff, uid = 0, verbose = 0, html = 0;$/;"	v	file:
htsize	src/server/sqlite3.c	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash	file:
htsize	src/server/sqlite3.c	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash	file:
hudName	src/game/bg_public.h	/^  char      hudName[ MAX_QPATH ];$/;"	m	struct:__anon350
huff_t	src/qcommon/qcommon.h	/^} huff_t;$/;"	t	typeref:struct:__anon432
huffman	src/qcommon/puff.c	/^struct huffman {$/;"	s	file:
huffman_t	src/qcommon/qcommon.h	/^} huffman_t;$/;"	t	typeref:struct:__anon433
huge	src/game/bg_lib.c	/^huge    =  1.0e+30,$/;"	v	file:
humanArmouryBuyCount	src/ui/ui_local.h	/^  int         humanArmouryBuyCount;$/;"	m	struct:__anon518
humanArmouryBuyIndex	src/ui/ui_local.h	/^  int         humanArmouryBuyIndex;$/;"	m	struct:__anon518
humanArmouryBuyList	src/ui/ui_local.h	/^  menuItem_t  humanArmouryBuyList[ 32 ];$/;"	m	struct:__anon518
humanArmourySellCount	src/ui/ui_local.h	/^  int         humanArmourySellCount;$/;"	m	struct:__anon518
humanArmourySellIndex	src/ui/ui_local.h	/^  int         humanArmourySellIndex;$/;"	m	struct:__anon518
humanArmourySellList	src/ui/ui_local.h	/^  menuItem_t  humanArmourySellList[ 32 ];$/;"	m	struct:__anon518
humanBaseAttackTimer	src/game/g_local.h	/^  int               humanBaseAttackTimer;$/;"	m	struct:__anon316
humanBleedPS	src/cgame/cg_local.h	/^  qhandle_t   humanBleedPS;$/;"	m	struct:__anon251
humanBuildCount	src/ui/ui_local.h	/^  int         humanBuildCount;$/;"	m	struct:__anon518
humanBuildIndex	src/ui/ui_local.h	/^  int         humanBuildIndex;$/;"	m	struct:__anon518
humanBuildList	src/ui/ui_local.h	/^  menuItem_t  humanBuildList[ 32 ];$/;"	m	struct:__anon518
humanBuildPointQueue	src/game/g_local.h	/^  int               humanBuildPointQueue;$/;"	m	struct:__anon316
humanBuildPoints	src/game/g_local.h	/^  int               humanBuildPoints;$/;"	m	struct:__anon316
humanBuildStat	src/cgame/cg_local.h	/^  buildStat_t   humanBuildStat;$/;"	m	struct:__anon253
humanBuildableBleedPS	src/cgame/cg_local.h	/^  qhandle_t   humanBuildableBleedPS;$/;"	m	struct:__anon251
humanBuildableDamage	src/cgame/cg_local.h	/^  sfxHandle_t humanBuildableDamage[ 4 ];$/;"	m	struct:__anon251
humanBuildableDamagedPS	src/cgame/cg_local.h	/^  qhandle_t   humanBuildableDamagedPS;$/;"	m	struct:__anon251
humanBuildableDestroyedPS	src/cgame/cg_local.h	/^  qhandle_t   humanBuildableDestroyedPS;$/;"	m	struct:__anon251
humanBuildableExplosion	src/cgame/cg_local.h	/^  sfxHandle_t humanBuildableExplosion;$/;"	m	struct:__anon251
humanBuildablePos	src/cgame/cg_local.h	/^  vec3_t    humanBuildablePos[ MAX_GENTITIES ];$/;"	m	struct:__anon246
humanBuildablePrebuild	src/cgame/cg_local.h	/^  sfxHandle_t humanBuildablePrebuild;$/;"	m	struct:__anon251
humanClientPos	src/cgame/cg_local.h	/^  vec3_t    humanClientPos[ MAX_CLIENTS ];$/;"	m	struct:__anon246
humanCredits	src/cgame/cg_local.h	/^  int           humanCredits;$/;"	m	struct:__anon253
humanGibPS	src/cgame/cg_local.h	/^  qhandle_t   humanGibPS;$/;"	m	struct:__anon251
humanItemCount	src/ui/ui_local.h	/^  int         humanItemCount;$/;"	m	struct:__anon518
humanItemIndex	src/ui/ui_local.h	/^  int         humanItemIndex;$/;"	m	struct:__anon518
humanItemList	src/ui/ui_local.h	/^  menuItem_t  humanItemList[ 3 ];$/;"	m	struct:__anon518
humanItemSelection	src/game/g_local.h	/^  weapon_t            humanItemSelection; \/\/ humans have a starting item$/;"	m	struct:__anon311
humanKills	src/game/g_local.h	/^  int               humanKills;$/;"	m	struct:__anon316
humanName	src/cgame/cg_local.h	/^  char              *humanName;$/;"	m	struct:weaponInfo_s
humanName	src/cgame/cg_local.h	/^  char        *humanName;$/;"	m	struct:upgradeInfo_s
humanName	src/cgame/cg_tutorial.c	/^  char      *humanName;$/;"	m	struct:__anon227	file:
humanName	src/game/bg_public.h	/^  char          *humanName;$/;"	m	struct:__anon352
humanName	src/game/bg_public.h	/^  char          *humanName;$/;"	m	struct:__anon353
humanName	src/game/bg_public.h	/^  char      *humanName;$/;"	m	struct:__anon355
humanName	src/game/bg_public.h	/^  char      *humanName;$/;"	m	struct:__anon356
humanName	src/game/bg_public.h	/^  char      humanName[ MAX_STRING_CHARS ];$/;"	m	struct:__anon350
humanNextQueueTime	src/game/g_local.h	/^  int               humanNextQueueTime;$/;"	m	struct:__anon316
humanNextStageThreshold	src/cgame/cg_local.h	/^  int           humanNextStageThreshold;$/;"	m	struct:__anon253
humanNextStageThreshold	src/game/g_local.h	/^  int               humanNextStageThreshold;$/;"	m	struct:__anon316
humanSpawnQueue	src/game/g_local.h	/^  spawnQueue_t      humanSpawnQueue;$/;"	m	struct:__anon316
humanSpawningShader	src/cgame/cg_local.h	/^  qhandle_t   humanSpawningShader;$/;"	m	struct:__anon251
humanStage	src/cgame/cg_local.h	/^  int           humanStage;$/;"	m	struct:__anon253
humanStage2Time	src/game/g_local.h	/^  int               humanStage2Time;$/;"	m	struct:__anon316
humanStage3Time	src/game/g_local.h	/^  int               humanStage3Time;$/;"	m	struct:__anon316
humanStageTransition	src/cgame/cg_local.h	/^  sfxHandle_t humanStageTransition;$/;"	m	struct:__anon251
humanTalkSound	src/cgame/cg_local.h	/^  sfxHandle_t humanTalkSound;$/;"	m	struct:__anon251
humanTeamLocked	src/game/g_local.h	/^  qboolean          humanTeamLocked;$/;"	m	struct:__anon316
hunkHeader_t	src/qcommon/common.c	/^} hunkHeader_t;$/;"	t	typeref:struct:__anon450	file:
hunkUsed_t	src/qcommon/common.c	/^} hunkUsed_t;$/;"	t	typeref:struct:__anon451	file:
hunk_high	src/qcommon/common.c	/^static	hunkUsed_t	hunk_low, hunk_high;$/;"	v	file:
hunk_low	src/qcommon/common.c	/^static	hunkUsed_t	hunk_low, hunk_high;$/;"	v	file:
hunk_permanent	src/qcommon/common.c	/^static	hunkUsed_t	*hunk_permanent, *hunk_temp;$/;"	v	file:
hunk_temp	src/qcommon/common.c	/^static	hunkUsed_t	*hunk_permanent, *hunk_temp;$/;"	v	file:
hunkblock_s	src/qcommon/common.c	/^typedef struct hunkblock_s {$/;"	s	file:
hunkblock_t	src/qcommon/common.c	/^} hunkblock_t;$/;"	t	typeref:struct:hunkblock_s	file:
hunkblocks	src/qcommon/common.c	/^static	hunkblock_t *hunkblocks;$/;"	v	file:
hurt_touch	src/game/g_trigger.c	/^void hurt_touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
hurt_use	src/game/g_trigger.c	/^void hurt_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
hwndOut	src/tools/asm/cmdlib.c	/^HWND hwndOut = NULL;$/;"	v
hyperspace	src/cgame/cg_local.h	/^  qboolean      hyperspace;                         \/\/ true if prediction has hit a trigger_teleport$/;"	m	struct:__anon249
i	src/qcommon/q_shared.h	/^	int i;$/;"	m	union:__anon457
i	src/qcommon/vm_powerpc.c	/^		unsigned int i;$/;"	m	union:source_instruction_s::__anon453	file:
i	src/qcommon/vm_sparc.c	/^		unsigned int	i;$/;"	m	union:src_insn::__anon484	file:
i	src/renderergl2/tr_extramath.c	/^	uint16_t i;$/;"	m	union:f16_u	file:
i	src/renderergl2/tr_extramath.c	/^	uint32_t i;$/;"	m	union:f32_u	file:
i	src/renderergl2/tr_vbo.c	/^	uint32_t i;$/;"	m	union:pack10_u	file:
i	src/renderergl2/tr_vbo.c	/^	uint32_t i;$/;"	m	union:pack8_u	file:
i	src/server/sqlite3.c	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:Mem::MemValue	file:
i	src/server/sqlite3.c	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::p4union	file:
i	src/server/sqlite3.c	/^  int i;                          \/* Current offset in a[] *\/$/;"	m	struct:Fts5PoslistReader	file:
i	src/server/sqlite3.c	/^  int i;                          \/* Current offset in position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
i	src/server/sqlite3.c	/^  int i;              \/* XOR next input into a[i] *\/$/;"	m	struct:EntropyGatherer	file:
i	src/server/sqlite3.c	/^  int i;             \/* Integer value *\/$/;"	m	union:RtreeCoord	file:
i	src/server/sqlite3.c	/^  u32 i;                     \/* Index in sParse.aNode[] of current row *\/$/;"	m	struct:JsonEachCursor	file:
i	src/server/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i	src/tools/asm/cmdlib.c	/^    unsigned int i;$/;"	m	union:__anon263	file:
i	src/tools/lcc/src/c.h	/^	int i;$/;"	m	union:__anon283
i	src/tools/lcc/src/c.h	/^	long i;$/;"	m	union:value
i16	src/server/sqlite3.c	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t	file:
i16	src/server/sqlite3.c	/^typedef short i16;$/;"	t	file:
i16	src/server/sqlite3.c	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t	file:
i2	src/renderergl1/tr_shadows.c	/^	int		i2;$/;"	m	struct:__anon125	file:
i2	src/renderergl2/tr_shadows.c	/^	int		i2;$/;"	m	struct:__anon3	file:
i64	src/server/sqlite3.c	/^typedef sqlite3_int64 i64;        \/* 8-byte signed integer *\/$/;"	t	file:
i64	src/server/sqlite3.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	src/server/sqlite3.c	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t	file:
i8	src/server/sqlite3.c	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t	file:
iADD	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iADDI	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iADDIS	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iAND	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iAbsLevel	src/server/sqlite3.c	/^  sqlite3_int64 iAbsLevel;        \/* Absolute level of input segments *\/$/;"	m	struct:IncrmergeWriter	file:
iAddr	src/server/sqlite3.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAgg	src/server/sqlite3.c	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr	file:
iAlias	src/server/sqlite3.c	/^        u16 iAlias;           \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item::__anon196::__anon197	file:
iAppend	src/server/sqlite3.c	/^    u32 iAppend;           \/* More terms for ARRAY and OBJECT *\/$/;"	m	union:JsonNode::__anon220	file:
iArg	src/server/sqlite3.c	/^  int iArg;                       \/* Index of function argument. *\/$/;"	m	struct:AuxData	file:
iArg	src/server/sqlite3.c	/^  u32 iArg;                 \/* Extra argument *\/$/;"	m	struct:sPragmaNames	file:
iB	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBC	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBCL	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBCTR	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBCTRL	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBL	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBLR	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBLTm	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iBatch	src/server/sqlite3.c	/^  int iBatch;                    \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBegin	src/server/sqlite3.c	/^  u32 iBegin;                \/* The first node of the scan *\/$/;"	m	struct:JsonEachCursor	file:
iBlock	src/server/sqlite3.c	/^  sqlite3_int64 iBlock;           \/* Current block id *\/$/;"	m	struct:NodeWriter	file:
iBreak	src/server/sqlite3.c	/^  int iBreak;               \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo	file:
iBtPage	src/server/sqlite3.c	/^  int iBtPage;                    \/* Page number corresponding to btterm *\/$/;"	m	struct:Fts5SegWriter	file:
iBufEnd	src/server/sqlite3.c	/^  int iBufEnd;                    \/* Last byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufStart	src/server/sqlite3.c	/^  int iBufStart;                  \/* First byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iCMPLW	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iCMPLWI	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iCMPW	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iCMPWI	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iCacheCnt	src/server/sqlite3.c	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse	file:
iCacheLevel	src/server/sqlite3.c	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse	file:
iCallback	src/server/sqlite3.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCell	src/server/sqlite3.c	/^  int iCell;$/;"	m	struct:StatPage	file:
iCell	src/server/sqlite3.c	/^  u8 iCell;              \/* Cell index within the node *\/$/;"	m	struct:RtreeSearchPoint	file:
iChange	src/server/sqlite3.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iChild	src/server/sqlite3.c	/^  sqlite3_int64 iChild;           \/* Pointer to child node *\/$/;"	m	struct:NodeReader	file:
iChildPg	src/server/sqlite3.c	/^  u32 iChildPg;                   \/* Child node (or 0 if this is a leaf) *\/$/;"	m	struct:StatCell	file:
iCol	src/server/sqlite3.c	/^  i16 iCol;                       \/* Column of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* Column to search *\/$/;"	m	struct:CInstIter	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* If !isPSample, the reason for inclusion *\/$/;"	m	struct:Stat4Sample	file:
iCol	src/server/sqlite3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	src/server/sqlite3.c	/^  int iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iCol	src/server/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts3SegFilter	file:
iCol	src/server/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5InsertCtx	file:
iCol	src/server/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5IntegrityCtx	file:
iCol	src/server/sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5VocabCursor	file:
iColFilter	src/server/sqlite3.c	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader	file:
iColumn	src/server/sqlite3.c	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iColumn	src/server/sqlite3.c	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
iColumn	src/server/sqlite3.c	/^    i16 iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache	file:
iColumn	src/server/sqlite3.c	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iColumn	src/server/sqlite3.c	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase	file:
iColumn	src/server/sqlite3.c	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr	file:
iColumn	src/server/sqlite3.h	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iColumn	src/server/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iConstExprReg	src/server/sqlite3.c	/^      int iConstExprReg;      \/* Register in which Expr value is cached *\/$/;"	m	union:ExprList::ExprList_item::__anon196	file:
iContinue	src/server/sqlite3.c	/^  int iContinue;            \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo	file:
iCookie	src/server/sqlite3.c	/^  int iCookie;                    \/* Incremented when %_config is modified *\/$/;"	m	struct:Fts5Config	file:
iCookie	src/server/sqlite3.c	/^  u32 iCookie;                    \/* Cookie value for main db files *\/$/;"	m	struct:rbu_file	file:
iCookie	src/server/sqlite3.c	/^  u32 iCookie;$/;"	m	struct:RbuState	file:
iCoord	src/server/sqlite3.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCsrId	src/server/sqlite3.c	/^  i64 iCsrId;                     \/* Cursor id *\/$/;"	m	struct:Fts5Cursor	file:
iCur	src/server/sqlite3.c	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon210::__anon211::InLoop	file:
iCur	src/server/sqlite3.c	/^    int iCur;                                  \/* A cursor number *\/$/;"	m	union:Walker::__anon201	file:
iCurrent	src/server/sqlite3.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrentBlock	src/server/sqlite3.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCurrentTime	src/server/sqlite3.c	/^  i64 iCurrentTime;       \/* Value of julianday('now') for this statement *\/$/;"	m	struct:Vdbe	file:
iCursor	src/server/sqlite3.c	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
iDIVW	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iDIVWU	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iDataVersion	src/server/sqlite3.c	/^  u32 iDataVersion;           \/* Changes whenever database content changes *\/$/;"	m	struct:Pager	file:
iDataVersion	src/server/sqlite3.c	/^  u32 iDataVersion;  \/* Combines with pBt->pPager->iDataVersion *\/$/;"	m	struct:Btree	file:
iDb	src/server/sqlite3.c	/^    u8 iDb;                     \/* Which db file is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
iDb	src/server/sqlite3.c	/^  i8 iDb;               \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor	file:
iDb	src/server/sqlite3.c	/^  int iDb;                        \/* Index of database to analyze *\/$/;"	m	struct:StatTable	file:
iDb	src/server/sqlite3.c	/^  int iDb;                        \/* Schema used for this query *\/$/;"	m	struct:StatCursor	file:
iDb	src/server/sqlite3.c	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo	file:
iDb	src/server/sqlite3.c	/^  int iDb;             \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	src/server/sqlite3.c	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon200	file:
iDbPage	src/server/sqlite3.c	/^  u32 iDbPage;$/;"	m	struct:RbuFrame	file:
iDefaultCol	src/server/sqlite3.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDepth	src/server/sqlite3.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDestSchema	src/server/sqlite3.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDistinct	src/server/sqlite3.c	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iDivisor	src/server/sqlite3.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDocid	src/server/sqlite3.c	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist	file:
iDocid	src/server/sqlite3.c	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr	file:
iDocid	src/server/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDocid	src/server/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDocid	src/server/sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TokenDoclist	file:
iDoclistToken	src/server/sqlite3.c	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase	file:
iECursor	src/server/sqlite3.c	/^  int iECursor;         \/* Cursor number for the sorter *\/$/;"	m	struct:SortCtx	file:
iEXTSB	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iEXTSH	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iEnd	src/server/sqlite3.c	/^  int iEnd;                       \/* Current 'end' value *\/$/;"	m	struct:Fts3tokCursor	file:
iEnd	src/server/sqlite3.c	/^  int iEnd;                       \/* Last token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iEnd	src/server/sqlite3.c	/^  sqlite3_int64 iEnd;             \/* Block number of last allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iEnd	src/server/sqlite3.c	/^  u32 iEnd;                  \/* EOF when i equals or exceeds this value *\/$/;"	m	struct:JsonEachCursor	file:
iEndBlock	src/server/sqlite3.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEndofDoclist	src/server/sqlite3.c	/^  int iEndofDoclist;$/;"	m	struct:Fts5SegIter	file:
iEof	src/server/sqlite3.c	/^  i64 iEof;                       \/* Bytes of data stored in pFd *\/$/;"	m	struct:SorterFile	file:
iEof	src/server/sqlite3.c	/^  i64 iEof;                   \/* 1 byte past EOF for this PmaReader *\/$/;"	m	struct:PmaReader	file:
iEquiv	src/server/sqlite3.c	/^  unsigned char iEquiv;      \/* Next unused slot in aEquiv[] *\/$/;"	m	struct:WhereScan	file:
iFADDS	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFCMPU	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iFCTIWZ	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFDIVS	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iFMULS	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFNEG	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFRSP	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFSUB	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFSUBS	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iFile	src/client/cl_cin.c	/^	fileHandle_t		iFile;$/;"	m	struct:__anon100	file:
iFirst	src/server/sqlite3.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iFirst	src/server/sqlite3.c	/^  u16 iFirst;                     \/* aSeg[] index of firstest iterator *\/$/;"	m	struct:Fts5CResult	file:
iFirstOff	src/server/sqlite3.c	/^  int iFirstOff;                \/* Used by reverse iterators *\/$/;"	m	struct:Fts5DlidxLvl	file:
iFirstRowid	src/server/sqlite3.c	/^  i64 iFirstRowid;                \/* Return no rowids earlier than this *\/$/;"	m	struct:Fts5Cursor	file:
iFixedOp	src/server/sqlite3.c	/^  int iFixedOp;        \/* Never back out opcodes iFixedOp-1 or earlier *\/$/;"	m	struct:Parse	file:
iForeGuard	src/server/sqlite3.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iFree	src/server/sqlite3.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFrom	src/server/sqlite3.c	/^    int iFrom;            \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap	file:
iFrom	src/server/sqlite3.c	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel	file:
iGeneration	src/server/sqlite3.c	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema	file:
iGet	src/server/sqlite3.c	/^  int iGet;                 \/* Index of current sample accessed by stat_get() *\/$/;"	m	struct:Stat4Accum	file:
iHash	src/server/sqlite3.c	/^  u32 iHash;                      \/* Tiebreaker hash *\/$/;"	m	struct:Stat4Sample	file:
iHdrOffset	src/server/sqlite3.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHdrOffset	src/server/sqlite3.c	/^  u32 iHdrOffset;       \/* Offset to next unparsed byte of the header *\/$/;"	m	struct:VdbeCursor	file:
iHead	src/server/sqlite3.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iIdx	src/server/sqlite3.c	/^  int iIdx;                       \/* Index (main or aPrefix[] entry) *\/$/;"	m	struct:Fts5TermsetEntry	file:
iIdx	src/server/sqlite3.c	/^  int iIdx;                       \/* Index of *output* segment in iAbsLevel+1 *\/$/;"	m	struct:IncrmergeWriter	file:
iIdx	src/server/sqlite3.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdxCur	src/server/sqlite3.c	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel	file:
iIdxCur	src/server/sqlite3.c	/^  int iIdxCur;    \/* Cursor for the index, if pIdx!=0.  Unused otherwise *\/$/;"	m	struct:CCurHint	file:
iInst	src/server/sqlite3.c	/^  int iInst;                      \/* Next phrase instance index *\/$/;"	m	struct:CInstIter	file:
iJD	src/server/sqlite3.c	/^  sqlite3_int64 iJD; \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iKey	src/server/sqlite3.c	/^    u32 iKey;              \/* Key for ARRAY objects in json_tree() *\/$/;"	m	union:JsonNode::__anon220	file:
iKey	src/server/sqlite3.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iLBZ	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iLBZX	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iLD	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iLDX	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iLFD	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iLFS	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iLFSX	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iLHZ	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iLHZX	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iLI	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iLIS	src/qcommon/vm_powerpc_asm.h	/^	iCMPLWI, iCMPWI, iCMPW, iCMPLW, iFCMPU, iLI, iLIS, iADDI, iADDIS,$/;"	e	enum:powerpc_iname
iLL	src/qcommon/vm_powerpc.c	140;"	d	file:
iLLX	src/qcommon/vm_powerpc.c	141;"	d	file:
iLWZ	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iLWZX	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iLangid	src/server/sqlite3.c	/^  int iLangid;                        \/* Language id used with tokenizer *\/$/;"	m	struct:ParseContext	file:
iLangid	src/server/sqlite3.c	/^  int iLangid;                    \/* Language being queried for *\/$/;"	m	struct:Fts3Cursor	file:
iLangid	src/server/sqlite3.c	/^  int iLangid;                    \/* Language id to query *\/$/;"	m	struct:Fts3auxCursor	file:
iLastCol	src/server/sqlite3.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastDocid	src/server/sqlite3.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastPos	src/server/sqlite3.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLastRowid	src/server/sqlite3.c	/^  i64 iLastRowid;                 \/* Return no rowids later than this *\/$/;"	m	struct:Fts5Cursor	file:
iLeafEndBlock	src/server/sqlite3.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeafOffset	src/server/sqlite3.c	/^  int iLeafOffset;                \/* Byte offset within current leaf *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	src/server/sqlite3.c	/^  int iLeafPgno;                  \/* Current leaf page number *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	src/server/sqlite3.c	/^  int iLeafPgno;                \/* Page number of current leaf page *\/$/;"	m	struct:Fts5DlidxLvl	file:
iLeftJoin	src/server/sqlite3.c	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel	file:
iLevel	src/server/sqlite3.c	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache	file:
iLevel	src/server/sqlite3.c	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
iLevel	src/server/sqlite3.c	/^  int iLevel;             \/* Which level of the tree we are on *\/$/;"	m	struct:TreeView	file:
iLevel	src/server/sqlite3.c	/^  u8 iLevel;             \/* 0=entries.  1=leaf node.  2+ for higher *\/$/;"	m	struct:RtreeSearchPoint	file:
iLevel	src/server/sqlite3.h	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iLikeRepCntr	src/server/sqlite3.c	/^  int iLikeRepCntr;     \/* LIKE range processing counter register *\/$/;"	m	struct:WhereLevel	file:
iLimit	src/server/sqlite3.c	/^  LogEst iLimit;            \/* LIMIT if wctrlFlags has WHERE_USE_LIMIT *\/$/;"	m	struct:WhereInfo	file:
iLimit	src/server/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iLookahead	src/server/sqlite3.c	/^  i64 iLookahead;                 \/* Next position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iMFLR	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iMR	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iMTCTR	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iMTLR	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iMULLW	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iMaster	src/server/sqlite3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMaxDocid	src/server/sqlite3.c	/^  i64 iMaxDocid;                  \/* Maximum docid to return *\/$/;"	m	struct:Fts3Cursor	file:
iMaxFrame	src/server/sqlite3.c	/^  u32 iMaxFrame;                  \/* Largest iWalFrame value in aFrame[] *\/$/;"	m	struct:sqlite3rbu	file:
iMaxKey	src/server/sqlite3.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMem	src/server/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iMem	src/server/sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iMemory	src/server/sqlite3.c	/^  int iMemory;                    \/* Offset of free space in list.aMemory *\/$/;"	m	struct:VdbeSorter	file:
iMin	src/server/sqlite3.c	/^  int iMin;                 \/* Index in a[] of entry with minimum score *\/$/;"	m	struct:Stat4Accum	file:
iMinDocid	src/server/sqlite3.c	/^  i64 iMinDocid;                  \/* Minimum docid to return *\/$/;"	m	struct:Fts3Cursor	file:
iNEG	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iNOP	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iNOT	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iNext	src/server/sqlite3.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNext	src/server/sqlite3.c	/^    int iNext;                    \/* Offset within aMemory of next record *\/$/;"	m	union:SorterRecord::__anon208	file:
iNext	src/server/sqlite3.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNextId	src/server/sqlite3.c	/^  i64 iNextId;                    \/* Used to allocate unique cursor ids *\/$/;"	m	struct:Fts5Global	file:
iNextSelectId	src/server/sqlite3.c	/^  int iNextSelectId;        \/* Next available select ID for EXPLAIN output *\/$/;"	m	struct:Parse	file:
iNode	src/server/sqlite3.c	/^  i64 iNode;                  \/* The node number *\/$/;"	m	struct:RtreeNode	file:
iNodeSize	src/server/sqlite3.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iOR	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iORI	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iOalSz	src/server/sqlite3.c	/^  i64 iOalSz;$/;"	m	struct:RbuState	file:
iOalSz	src/server/sqlite3.c	/^  i64 iOalSz;$/;"	m	struct:sqlite3rbu	file:
iOff	src/server/sqlite3.c	/^  i64 iOff;$/;"	m	struct:Fts5ExprCtx	file:
iOff	src/server/sqlite3.c	/^  int iOff;                       \/* Current offset within aInput[] *\/$/;"	m	struct:unicode_cursor	file:
iOff	src/server/sqlite3.c	/^  int iOff;                       \/* Current offset within aNode[] *\/$/;"	m	struct:NodeReader	file:
iOff	src/server/sqlite3.c	/^  int iOff;                       \/* Current offset within zIn[] *\/$/;"	m	struct:HighlightContext	file:
iOff	src/server/sqlite3.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOff	src/server/sqlite3.c	/^  int iOff;                     \/* Current offset into pData *\/$/;"	m	struct:Fts5DlidxLvl	file:
iOffset	src/server/sqlite3.c	/^  i64 iOffset;                    \/* Value of 'pgOffset' column *\/$/;"	m	struct:StatCursor	file:
iOffset	src/server/sqlite3.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	src/server/sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iOffset	src/server/sqlite3.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	src/server/sqlite3.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	src/server/sqlite3.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOffset	src/server/sqlite3.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOp	src/server/sqlite3.c	/^  int iOp;                        \/* Instruction number of OP_Function opcode *\/$/;"	m	struct:AuxData	file:
iOp	src/server/sqlite3.c	/^  int iOp;                \/* Instruction number of OP_Function *\/$/;"	m	struct:sqlite3_context	file:
iOrDocid	src/server/sqlite3.c	/^  i64 iOrDocid;$/;"	m	struct:Fts3Phrase	file:
iOrderByCol	src/server/sqlite3.c	/^        u16 iOrderByCol;      \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item::__anon196::__anon197	file:
iOvfl	src/server/sqlite3.c	/^  int iOvfl;                      \/* Iterates through aOvfl[] *\/$/;"	m	struct:StatCell	file:
iPKey	src/server/sqlite3.c	/^  i16 iPKey;           \/* If not negative, use aCol[iPKey] as the rowid *\/$/;"	m	struct:Table	file:
iPage	src/server/sqlite3.c	/^  i8 iPage;                 \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor	file:
iPage	src/server/sqlite3.c	/^  int iPage;                      \/* Current entry in aPage[] *\/$/;"	m	struct:StatCursor	file:
iPageno	src/server/sqlite3.c	/^  u32 iPageno;                    \/* Value of 'pageno' column *\/$/;"	m	struct:StatCursor	file:
iParent	src/server/sqlite3.c	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm	file:
iPgidxOff	src/server/sqlite3.c	/^  int iPgidxOff;                  \/* Next offset in pgidx *\/$/;"	m	struct:Fts5SegIter	file:
iPgno	src/server/sqlite3.c	/^  u32 iPgno;$/;"	m	struct:StatPage	file:
iPhrase	src/server/sqlite3.c	/^  int iPhrase;               \/* Index of this phrase in matchinfo() results *\/$/;"	m	struct:Fts3Expr	file:
iPkSortOrder	src/server/sqlite3.c	/^  u8 iPkSortOrder;          \/* ASC or DESC for INTEGER PRIMARY KEY *\/$/;"	m	struct:Parse	file:
iPkTnum	src/server/sqlite3.c	/^  int iPkTnum;                    \/* If eType==EXTERNAL, root of PK index *\/$/;"	m	struct:RbuObjIter	file:
iPointers	src/qcommon/vm_powerpc.c	/^	ppc_instruction_t *iPointers;$/;"	m	struct:VM_Data	file:
iPointers	src/qcommon/vm_sparc.c	/^	unsigned int *iPointers;$/;"	m	struct:VM_Data	file:
iPos	src/server/sqlite3.c	/^  i64 iPos;                       \/* (iCol<<32) + iPos *\/$/;"	m	struct:Fts5PoslistReader	file:
iPos	src/server/sqlite3.c	/^  i64 iPos;                       \/* Current position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iPos	src/server/sqlite3.c	/^  int iPos;                       \/* Current 'pos' value *\/$/;"	m	struct:Fts3tokCursor	file:
iPos	src/server/sqlite3.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	src/server/sqlite3.c	/^  int iPos;                       \/* Current token offset in zIn[] *\/$/;"	m	struct:HighlightContext	file:
iPos	src/server/sqlite3.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	src/server/sqlite3.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPos	src/server/sqlite3.c	/^  int iPos;                       \/* Position of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iPosOffset	src/server/sqlite3.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPrev	src/server/sqlite3.c	/^  i64 iPrev;                      \/* Previous rowid value written to page *\/$/;"	m	struct:Fts5DlidxWriter	file:
iPrev	src/server/sqlite3.c	/^  i64 iPrev;$/;"	m	struct:Fts5PoslistWriter	file:
iPrev	src/server/sqlite3.c	/^  u8 iPrev;                       \/* Previous thread used to flush PMA *\/$/;"	m	struct:VdbeSorter	file:
iPrevDocid	src/server/sqlite3.c	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevId	src/server/sqlite3.c	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
iPrevLangid	src/server/sqlite3.c	/^  int iPrevLangid;                \/* Langid of recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevPgidx	src/server/sqlite3.c	/^  int iPrevPgidx;                 \/* Previous value written into pgidx *\/$/;"	m	struct:Fts5PageWriter	file:
iPrevRowid	src/server/sqlite3.c	/^  i64 iPrevRowid;                 \/* Previous rowid written to current leaf *\/$/;"	m	struct:Fts5SegWriter	file:
iPrior	src/server/sqlite3.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iPrn	src/server/sqlite3.c	/^  u32 iPrn;                 \/* Pseudo-random number used for sampling *\/$/;"	m	struct:Stat4Accum	file:
iRLWINM	src/qcommon/vm_powerpc_asm.h	/^	iBLTm, iBC, iBCL, iB, iBL, iBLR, iBCTR, iBCTRL, iRLWINM, iNOP, iORI,$/;"	e	enum:powerpc_iname
iRangeEnd	src/server/sqlite3.c	/^  int iRangeEnd;                  \/* If non-zero, last token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeReg	src/server/sqlite3.c	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse	file:
iRangeStart	src/server/sqlite3.c	/^  int iRangeStart;                \/* First token to include *\/$/;"	m	struct:HighlightContext	file:
iReCksum	src/server/sqlite3.c	/^  u32 iReCksum;              \/* On commit, recalculate checksums from here *\/$/;"	m	struct:Wal	file:
iRead	src/server/sqlite3.c	/^  int iRead;$/;"	m	struct:PoslistOffsetsCtx	file:
iReadOff	src/server/sqlite3.c	/^  i64 iReadOff;               \/* Current read offset *\/$/;"	m	struct:PmaReader	file:
iReg	src/server/sqlite3.c	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache	file:
iReinsertHeight	src/server/sqlite3.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iRightChildPg	src/server/sqlite3.c	/^  u32 iRightChildPg;              \/* Right-child page number (or 0) *\/$/;"	m	struct:StatPage	file:
iRightJoinTable	src/server/sqlite3.c	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr	file:
iRowid	src/server/sqlite3.c	/^    i64 iRowid;                     \/* Rowid in main table of the key *\/$/;"	m	union:Stat4Sample::__anon209	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;                                 \/* Node or entry ID *\/$/;"	m	struct:RtreeCell	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5ExprNode	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5SegIter	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5Sorter	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;                     \/* Rowid of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;                   \/* First rowid on leaf iLeafPgno *\/$/;"	m	struct:Fts5DlidxLvl	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5DoclistIter	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5IndexIter	file:
iRowid	src/server/sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5IntegrityCtx	file:
iRowid	src/server/sqlite3.c	/^  int iRowid;                     \/* Current 'rowid' value *\/$/;"	m	struct:Fts3tokCursor	file:
iRowid	src/server/sqlite3.c	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
iRowid	src/server/sqlite3.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iRowid	src/server/sqlite3.c	/^  u32 iRowid;                \/* The rowid *\/$/;"	m	struct:JsonEachCursor	file:
iRowid	src/server/sqlite3.h	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowidOffset	src/server/sqlite3.c	/^  int iRowidOffset;               \/* Current entry in aRowidOffset[] *\/$/;"	m	struct:Fts5SegIter	file:
iSDParm	src/server/sqlite3.c	/^  int iSDParm;         \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest	file:
iSLW	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iSRAW	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iSRW	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iSTB	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iSTBX	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iSTD	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iSTDU	src/qcommon/vm_powerpc_asm.h	/^	iFSUBS, iFADDS, iFMULS, iSTD, iSTDU, iFRSP, iFCTIWZ, iFSUB, iFNEG,$/;"	e	enum:powerpc_iname
iSTFD	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iSTFS	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iSTFSX	src/qcommon/vm_powerpc_asm.h	/^	iMTCTR, iDIVW, iLFSX, iSRW, iSTFSX, iSRAW, iEXTSH, iEXTSB, iLWZ, iLBZ,$/;"	e	enum:powerpc_iname
iSTH	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iSTHX	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iSTL	src/qcommon/vm_powerpc.c	139;"	d	file:
iSTLU	src/qcommon/vm_powerpc.c	138;"	d	file:
iSTW	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iSTWU	src/qcommon/vm_powerpc_asm.h	/^	iSTW, iSTWU, iSTB, iLHZ, iSTH, iLFS, iLFD, iSTFS, iSTFD, iLD, iFDIVS,$/;"	e	enum:powerpc_iname
iSTWX	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iSUB	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iSavepoint	src/server/sqlite3.c	/^  int iSavepoint;                 \/* Number of open savepoints (0 -> none) *\/$/;"	m	struct:Fts5TransactionState	file:
iSavepoint	src/server/sqlite3.c	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable	file:
iSdst	src/server/sqlite3.c	/^  int iSdst;           \/* Base register where results are written *\/$/;"	m	struct:SelectDest	file:
iSegid	src/server/sqlite3.c	/^  int iSegid;                     \/* Segid to write to *\/$/;"	m	struct:Fts5SegWriter	file:
iSegid	src/server/sqlite3.c	/^  int iSegid;                     \/* Segment id *\/$/;"	m	struct:Fts5StructureSegment	file:
iSegid	src/server/sqlite3.c	/^  int iSegid;$/;"	m	struct:Fts5DlidxIter	file:
iSelectID	src/server/sqlite3.c	/^  int iSelectID;                  \/* The "Select-ID" for this loop *\/$/;"	m	struct:ScanStatus	file:
iSelectId	src/server/sqlite3.c	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item	file:
iSelectId	src/server/sqlite3.c	/^  int iSelectId;            \/* ID of current select for EXPLAIN output *\/$/;"	m	struct:Parse	file:
iSelfTab	src/server/sqlite3.c	/^  int iSelfTab;        \/* Table of an index whose exprs are being coded *\/$/;"	m	struct:Parse	file:
iSize	src/server/sqlite3.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSize	src/server/sqlite3.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSortIdx	src/server/sqlite3.c	/^  u8 iSortIdx;          \/* Sorting index number.  0==None *\/$/;"	m	struct:WhereLoop	file:
iSorterColumn	src/server/sqlite3.c	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iSpecial	src/server/sqlite3.c	/^  i64 iSpecial;                   \/* Result of special query *\/$/;"	m	struct:Fts5Cursor	file:
iSrcLine	src/server/sqlite3.c	/^  int iSrcLine;            \/* Source-code line that generated this opcode *\/$/;"	m	struct:VdbeOp	file:
iStart	src/server/sqlite3.c	/^  int iStart;                     \/* Current 'start' value *\/$/;"	m	struct:Fts3tokCursor	file:
iStart	src/server/sqlite3.c	/^  int iStart;                     \/* First token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iStart	src/server/sqlite3.c	/^  sqlite3_int64 iStart;           \/* Block number of first allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iStartBlock	src/server/sqlite3.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStartOff	src/server/sqlite3.c	/^  i64 iStartOff;                  \/* Offset to start writing file at *\/$/;"	m	struct:IncrMerger	file:
iStatement	src/server/sqlite3.c	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe	file:
iStrategy	src/server/sqlite3.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iStructVersion	src/server/sqlite3.c	/^  i64 iStructVersion;             \/* data_version when pStruct read *\/$/;"	m	struct:Fts5Index	file:
iSub	src/server/sqlite3.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSubRec	src/server/sqlite3.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSum	src/server/sqlite3.c	/^  i64 iSum;         \/* Integer sum *\/   $/;"	m	struct:SumCtx	file:
iSwitchRowid	src/server/sqlite3.c	/^  i64 iSwitchRowid;               \/* Firstest rowid of other than aFirst[1] *\/$/;"	m	struct:Fts5Iter	file:
iSyncPoint	src/server/sqlite3.c	/^  sqlite3_int64 iSyncPoint;    \/* Fsync at this offset *\/$/;"	m	struct:WalWriter	file:
iSysErrno	src/server/sqlite3.c	/^  int iSysErrno;                \/* Errno value from last system error *\/$/;"	m	struct:sqlite3	file:
iSzPoslist	src/server/sqlite3.c	/^  int iSzPoslist;                 \/* Offset of space for 4-byte poslist size *\/$/;"	m	struct:Fts5HashEntry	file:
iTab	src/server/sqlite3.c	/^  int iTab;            \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTab	src/server/sqlite3.c	/^  u8 iTab;              \/* Position in FROM clause of table for this loop *\/$/;"	m	struct:WhereLoop	file:
iTabCur	src/server/sqlite3.c	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel	file:
iTabCur	src/server/sqlite3.c	/^  int iTabCur;    \/* Cursor for the main table *\/$/;"	m	struct:CCurHint	file:
iTable	src/server/sqlite3.c	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iTable	src/server/sqlite3.c	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache	file:
iTable	src/server/sqlite3.c	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock	file:
iTable	src/server/sqlite3.c	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr	file:
iTail	src/server/sqlite3.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTerm	src/server/sqlite3.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTermLeafOffset	src/server/sqlite3.c	/^  int iTermLeafOffset;$/;"	m	struct:Fts5SegIter	file:
iTermLeafPgno	src/server/sqlite3.c	/^  int iTermLeafPgno;$/;"	m	struct:Fts5SegIter	file:
iTermOffset	src/server/sqlite3.c	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iTermOffset	src/server/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iTnum	src/server/sqlite3.c	/^  int iTnum;                      \/* Root page of current object *\/$/;"	m	struct:RbuObjIter	file:
iToken	src/server/sqlite3.c	/^  int iToken;                     \/* Index of next token to be returned *\/$/;"	m	struct:unicode_cursor	file:
iToken	src/server/sqlite3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	src/server/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	src/server/sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	src/server/sqlite3.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iTop	src/server/sqlite3.c	/^  int iTop;                 \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
iVal	src/server/sqlite3.c	/^  int iVal;$/;"	m	struct:ValueNewStat4Ctx	file:
iVal	src/server/sqlite3.c	/^  u8 iVal;               \/* Replacement value when JNODE_REPLACE *\/$/;"	m	struct:JsonNode	file:
iValue	src/server/sqlite3.c	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon194	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_module	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2	file:
iVersion	src/server/sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module	file:
iVersion	src/server/sqlite3.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iVersion	src/server/sqlite3.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	src/server/sqlite3.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	src/server/sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	src/server/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	src/server/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iVersion	src/server/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2
iWalCksum	src/server/sqlite3.c	/^  i64 iWalCksum;$/;"	m	struct:RbuState	file:
iWalCksum	src/server/sqlite3.c	/^  i64 iWalCksum;$/;"	m	struct:sqlite3rbu	file:
iWalFrame	src/server/sqlite3.c	/^  u32 iWalFrame;$/;"	m	struct:RbuFrame	file:
iWrite	src/server/sqlite3.c	/^  int iWrite;$/;"	m	struct:PoslistOffsetsCtx	file:
iWriteOff	src/server/sqlite3.c	/^  i64 iWriteOff;                  \/* Offset of start of buffer in file *\/$/;"	m	struct:PmaWriter	file:
iWriteRowid	src/server/sqlite3.c	/^  i64 iWriteRowid;                \/* Rowid for current doc being written *\/$/;"	m	struct:Fts5Index	file:
iWriteVer	src/server/sqlite3.c	/^  u8 iWriteVer;                   \/* "write-version" value for main db files *\/$/;"	m	struct:rbu_file	file:
iXOR	src/qcommon/vm_powerpc_asm.h	/^	iMULLW, iADD, iLHZX, iXOR, iMFLR, iSTHX, iMR, iOR, iDIVWU, iMTLR,$/;"	e	enum:powerpc_iname
iXORIS	src/qcommon/vm_powerpc_asm.h	/^	iXORIS, iLDX, iLWZX, iSLW, iAND, iSUB, iLBZX, iNEG, iNOT, iSTWX, iSTBX,$/;"	e	enum:powerpc_iname
iZero	src/server/sqlite3.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
i_count	src/qcommon/vm_powerpc.c	/^	unsigned long int i_count;$/;"	m	struct:dest_instruction	file:
i_count	src/qcommon/vm_powerpc.c	/^	unsigned long int i_count;$/;"	m	struct:source_instruction_s	file:
i_count	src/qcommon/vm_sparc.c	/^	unsigned int		i_count;$/;"	m	struct:dst_insn	file:
i_count	src/qcommon/vm_sparc.c	/^	unsigned int		i_count;$/;"	m	struct:src_insn	file:
icon	src/game/bg_public.h	/^  char      *icon;$/;"	m	struct:__anon356
icon	src/tools/lcc/src/lex.c	/^static Symbol icon(unsigned long n, int overflow, int base) {$/;"	f	file:
icuCaseFunc16	src/server/sqlite3.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuClose	src/server/sqlite3.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuCollationColl	src/server/sqlite3.c	/^static int icuCollationColl($/;"	f	file:
icuCollationDel	src/server/sqlite3.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCreate	src/server/sqlite3.c	/^static int icuCreate($/;"	f	file:
icuDestroy	src/server/sqlite3.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuFunctionError	src/server/sqlite3.c	/^static void icuFunctionError($/;"	f	file:
icuLikeCompare	src/server/sqlite3.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeFunc	src/server/sqlite3.c	/^static void icuLikeFunc($/;"	f	file:
icuLoadCollation	src/server/sqlite3.c	/^static void icuLoadCollation($/;"	f	file:
icuNext	src/server/sqlite3.c	/^static int icuNext($/;"	f	file:
icuOpen	src/server/sqlite3.c	/^static int icuOpen($/;"	f	file:
icuRegexpDelete	src/server/sqlite3.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpFunc	src/server/sqlite3.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuTokenizerModule	src/server/sqlite3.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuUtf8Trans1	src/server/sqlite3.c	/^static const unsigned char icuUtf8Trans1[] = {$/;"	v	file:
id	src/game/g_local.h	/^  int               id;$/;"	m	struct:namelog_s
id	src/qcommon/common.c	/^	int     id;        		\/\/ should be ZONEID$/;"	m	struct:memblock_s	file:
id	src/renderercommon/tr_image_bmp.c	/^	char id[2];$/;"	m	struct:__anon110	file:
id	src/renderergl2/tr_local.h	/^	unsigned int    id;$/;"	m	struct:__anon45
id	src/server/sqlite3.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	src/server/sqlite3.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	src/server/sqlite3.c	/^  sqlite3_int64 id;      \/* Node ID *\/$/;"	m	struct:RtreeSearchPoint	file:
id	src/server/sqlite3.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	src/server/sqlite3.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
id	src/server/sqlite3.c	/^  unsigned id;             \/* The thread identifier *\/$/;"	m	struct:SQLiteThread	file:
id	src/ui/ui_shared.c	/^  int   id;$/;"	m	struct:__anon522	file:
id386	src/qcommon/q_platform.h	32;"	d
id386	src/qcommon/q_platform.h	40;"	d
id386	src/qcommon/q_platform.h	42;"	d
id_length	src/renderercommon/tr_image_tga.c	/^	unsigned char 	id_length, colormap_type, image_type;$/;"	m	struct:_TargaHeader	file:
idempotent	src/tools/lcc/src/simp.c	50;"	d	file:
ident	src/qcommon/qfiles.h	/^	int			ident;$/;"	m	struct:__anon393
ident	src/qcommon/qfiles.h	/^	int			ident;$/;"	m	struct:__anon397
ident	src/qcommon/qfiles.h	/^	int			ident;$/;"	m	struct:__anon404
ident	src/qcommon/qfiles.h	/^	int			ident;$/;"	m	struct:__anon406
ident	src/qcommon/qfiles.h	/^	int		ident;				\/\/ $/;"	m	struct:__anon388
identLength	src/server/sqlite3.c	/^static int identLength(const char *z){$/;"	f	file:
identPut	src/server/sqlite3.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
identifiers	src/tools/lcc/src/c.h	/^			Table identifiers, types;$/;"	m	struct:code::__anon291::__anon292
identifiers	src/tools/lcc/src/sym.c	/^Table identifiers = &ids;$/;"	v
identity	src/client/libmumblelink.c	/^	wchar_t identity[256];$/;"	m	struct:__anon104	file:
identity	src/tools/lcc/src/simp.c	25;"	d	file:
identityLight	src/renderergl1/tr_local.h	/^	float					identityLight;		\/\/ 1.0 \/ ( 1 << overbrightBits )$/;"	m	struct:__anon163
identityLight	src/renderergl2/tr_local.h	/^	float					identityLight;		\/\/ 1.0 \/ ( 1 << overbrightBits )$/;"	m	struct:__anon63
identityLightByte	src/renderergl1/tr_local.h	/^	int						identityLightByte;	\/\/ identityLight * 255$/;"	m	struct:__anon163
identityLightByte	src/renderergl2/tr_local.h	/^	int						identityLightByte;	\/\/ identityLight * 255$/;"	m	struct:__anon63
identityLightImage	src/renderergl1/tr_local.h	/^	image_t					*identityLightImage;	\/\/ full of tr.identityLightByte$/;"	m	struct:__anon163
identityLightImage	src/renderergl2/tr_local.h	/^	image_t					*identityLightImage;	\/\/ full of tr.identityLightByte$/;"	m	struct:__anon63
identityMatrix	src/renderergl1/tr_model_iqm.c	/^static float identityMatrix[12] = {$/;"	v	file:
identityMatrix	src/renderergl2/tr_model_iqm.c	/^static float identityMatrix[12] = {$/;"	v	file:
idleAnim	src/game/bg_public.h	/^  int           idleAnim;$/;"	m	struct:__anon353
idlist	src/tools/lcc/src/c.h	/^		Symbol *idlist;$/;"	m	union:symbol::__anon296
idppc	src/qcommon/q_platform.h	33;"	d
idppc	src/qcommon/q_platform.h	47;"	d
idppc	src/qcommon/q_platform.h	61;"	d
idppc_altivec	src/qcommon/q_platform.h	34;"	d
idppc_altivec	src/qcommon/q_platform.h	49;"	d
idppc_altivec	src/qcommon/q_platform.h	58;"	d
idppc_altivec	src/qcommon/q_platform.h	62;"	d
ids	src/tools/lcc/src/sym.c	/^	ids = { GLOBAL },$/;"	v	typeref:struct:	file:
ids	src/tools/lcc/src/tree.c	/^} ids[500];			\/* if ids[i].node == p, then p's id is i *\/$/;"	v	typeref:struct:nodeid	file:
idsparc	src/qcommon/q_platform.h	35;"	d
idsparc	src/qcommon/q_platform.h	66;"	d
idsparc	src/qcommon/q_platform.h	68;"	d
idtree	src/tools/lcc/src/expr.c	/^Tree idtree(Symbol p) {$/;"	f
idx	src/server/sqlite3.c	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item	file:
idx64	src/qcommon/q_platform.h	161;"	d
idx64	src/qcommon/q_platform.h	162;"	d
idx64	src/qcommon/q_platform.h	190;"	d
idx64	src/qcommon/q_platform.h	191;"	d
idx64	src/qcommon/q_platform.h	254;"	d
idx64	src/qcommon/q_platform.h	255;"	d
idx64	src/qcommon/q_platform.h	28;"	d
idx64	src/qcommon/q_platform.h	83;"	d
idx64	src/qcommon/q_platform.h	84;"	d
idxF	src/client/cl_avi.c	/^  fileHandle_t  idxF;$/;"	m	struct:aviFileData_s	file:
idxFlags	src/server/sqlite3.c	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info	file:
idxFlags	src/server/sqlite3.h	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info
idxHash	src/server/sqlite3.c	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema	file:
idxNum	src/server/sqlite3.c	/^      int idxNum;            \/* Index number *\/$/;"	m	struct:WhereLoop::__anon212::__anon214	file:
idxNum	src/server/sqlite3.c	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	file:
idxNum	src/server/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxStr	src/server/sqlite3.c	/^      char *idxStr;          \/* Index identifier string *\/$/;"	m	struct:WhereLoop::__anon212::__anon214	file:
idxStr	src/server/sqlite3.c	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	file:
idxStr	src/server/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
idxType	src/server/sqlite3.c	/^  unsigned idxType:2;      \/* 1==UNIQUE, 2==PRIMARY KEY, 0==CREATE INDEX *\/$/;"	m	struct:Index	file:
idxaff	src/server/sqlite3.c	/^  char idxaff;               \/* Must match this affinity, if zCollName!=NULL *\/$/;"	m	struct:WhereScan	file:
ieee_float_shape_type	src/game/bg_lib.c	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anon372	file:
ifdepth	src/tools/lcc/cpp/cpp.c	/^int	ifdepth;$/;"	v
ifdepth	src/tools/lcc/cpp/cpp.h	/^	int	ifdepth;	\/* conditional nesting in include *\/$/;"	m	struct:source
ifname	src/qcommon/net_ip.c	/^	char ifname[IF_NAMESIZE];$/;"	m	struct:__anon489	file:
ifndef	src/asm/ftola.asm	/^ifndef idx64$/;"	l
ifsatisfied	src/tools/lcc/cpp/cpp.c	/^int	ifsatisfied[NIF];$/;"	v
ifstmt	src/tools/lcc/src/stmt.c	/^static void ifstmt(int lab, int loop, Swtch swp, int lev) {$/;"	f	file:
ignoreAddress	src/master/master.c	/^static qboolean ignoreAddress( const char *address )$/;"	f	file:
ignoreAddress_t	src/master/master.c	/^} ignoreAddress_t;$/;"	t	typeref:struct:__anon384	file:
ignoreAddresses	src/master/master.c	/^static ignoreAddress_t		*ignoreAddresses		= NULL;$/;"	v	file:
ignoreFile	src/master/master.c	/^static const char *ignoreFile = "ignore.txt";$/;"	v	file:
ignoreIndex	src/ui/ui_local.h	/^  int ignoreIndex;$/;"	m	struct:__anon518
ignoreList	src/game/g_local.h	/^  clientList_t      ignoreList;$/;"	m	struct:__anon310
ignoreList	src/ui/ui_local.h	/^  clientList_t ignoreList[MAX_CLIENTS];$/;"	m	struct:__anon518
ignoreVoipFromClient	src/server/server.h	/^	qboolean ignoreVoipFromClient[MAX_CLIENTS];$/;"	m	struct:client_s
ilist	src/tools/lcc/etc/lcc.c	/^static List ilist;		\/* list of additional includes from LCCINPUTS *\/$/;"	v	file:
image	src/renderergl1/tr_local.h	/^	image_t			*image[MAX_IMAGE_ANIMATIONS];$/;"	m	struct:__anon141
image	src/renderergl1/tr_local.h	/^	image_t	*image;$/;"	m	struct:__anon167
image	src/renderergl2/tr_local.h	/^	image_t			*image[MAX_IMAGE_ANIMATIONS];$/;"	m	struct:__anon23
image	src/renderergl2/tr_local.h	/^	image_t	*image;$/;"	m	struct:__anon67
image	src/tools/asm/q3asm.c	/^	byte	image[MAX_IMAGE];$/;"	m	struct:__anon267	file:
imageAnimationSpeed	src/renderergl1/tr_local.h	/^	float			imageAnimationSpeed;$/;"	m	struct:__anon141
imageAnimationSpeed	src/renderergl2/tr_local.h	/^	float			imageAnimationSpeed;$/;"	m	struct:__anon23
imageBytes	src/tools/asm/q3asm.c	/^	int		imageBytes;		\/\/ after decompression$/;"	m	struct:__anon265	file:
imageExtToLoaderMap_t	src/renderergl1/tr_image.c	/^} imageExtToLoaderMap_t;$/;"	t	typeref:struct:__anon179	file:
imageExtToLoaderMap_t	src/renderergl2/tr_image.c	/^} imageExtToLoaderMap_t;$/;"	t	typeref:struct:__anon81	file:
imageHeight	src/qcommon/q_shared.h	/^  int imageHeight;  \/\/ height of actual image$/;"	m	struct:__anon478
imageLoaders	src/renderergl1/tr_image.c	/^static imageExtToLoaderMap_t imageLoaders[ ] =$/;"	v	file:
imageLoaders	src/renderergl2/tr_image.c	/^static imageExtToLoaderMap_t imageLoaders[ ] =$/;"	v	file:
imageName	src/ui/ui_local.h	/^  const char *imageName;$/;"	m	struct:__anon507
imageUsed	src/tools/asm/q3asm.c	/^	int		imageUsed;$/;"	m	struct:__anon267	file:
imageWidth	src/qcommon/q_shared.h	/^  int imageWidth;   \/\/ width of actual image$/;"	m	struct:__anon478
image_s	src/renderercommon/tr_common.h	/^typedef struct image_s {$/;"	s
image_t	src/renderercommon/tr_common.h	/^} image_t;$/;"	t	typeref:struct:image_s
image_type	src/renderercommon/tr_image_tga.c	/^	unsigned char 	id_length, colormap_type, image_type;$/;"	m	struct:_TargaHeader	file:
images	src/renderergl1/tr_local.h	/^	image_t					*images[MAX_DRAWIMAGES];$/;"	m	struct:__anon163
images	src/renderergl2/tr_local.h	/^	image_t					*images[MAX_DRAWIMAGES];$/;"	m	struct:__anon63
imgFlags_t	src/renderercommon/tr_common.h	/^} imgFlags_t;$/;"	t	typeref:enum:__anon107
imgName	src/renderercommon/tr_common.h	/^	char		imgName[MAX_QPATH];		\/\/ game path, including extension$/;"	m	struct:image_s
imgType_t	src/renderercommon/tr_common.h	/^} imgType_t;$/;"	t	typeref:enum:__anon106
impactFleshSound	src/cgame/cg_local.h	/^  sfxHandle_t impactFleshSound[ 4 ]; \/\/random impact sound$/;"	m	struct:weaponInfoMode_s
impactMark	src/cgame/cg_local.h	/^  qhandle_t   impactMark;$/;"	m	struct:weaponInfoMode_s
impactMarkSize	src/cgame/cg_local.h	/^  qhandle_t   impactMarkSize;$/;"	m	struct:weaponInfoMode_s
impactParticleSystem	src/cgame/cg_local.h	/^  qhandle_t   impactParticleSystem;$/;"	m	struct:weaponInfoMode_s
impactSound	src/cgame/cg_local.h	/^  sfxHandle_t impactSound[ 4 ]; \/\/random impact sound$/;"	m	struct:weaponInfoMode_s
impactSound_t	src/cgame/cg_local.h	/^} impactSound_t;$/;"	t	typeref:enum:__anon233
impactSpeed	src/game/bg_local.h	/^  float     impactSpeed;$/;"	m	struct:__anon324
import	src/tools/lcc/src/bytecode.c	/^static void I(import)(Symbol p) {$/;"	f	file:
import	src/tools/lcc/src/c.h	/^void (*import)(Symbol);$/;"	m	struct:interface
import	src/tools/lcc/src/null.c	/^static void I(import)(Symbol p) {}$/;"	f	file:
import	src/tools/lcc/src/symbolic.c	/^static void I(import)(Symbol p) {$/;"	f	file:
importantColors	src/renderercommon/tr_image_bmp.c	/^	unsigned importantColors;$/;"	m	struct:__anon110	file:
imposterTable	src/server/sqlite3.c	/^    u8 imposterTable;           \/* Building an imposter table *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
in	src/qcommon/md5.c	/^	unsigned char in[64];$/;"	m	struct:MD5Context	file:
in	src/qcommon/puff.c	/^    uint8_t *in;          \/* input buffer *\/$/;"	m	struct:state	file:
in	src/qcommon/vm_powerpc.c	535;"	d	file:
in	src/qcommon/vm_sparc.c	740;"	d	file:
in	src/server/sqlite3.c	/^    } in;                 \/* Used when pWLoop->wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon210	typeref:struct:WhereLevel::__anon210::__anon211	file:
inGameLoad	src/ui/ui_local.h	/^  qboolean inGameLoad;$/;"	m	struct:__anon518
inMemory	src/client/cl_cin.c	/^	qboolean			half, smootheddouble, inMemory;$/;"	m	struct:__anon100	file:
inMemory	src/client/snd_local.h	/^	qboolean		inMemory;				\/\/ not in Memory$/;"	m	struct:sfx_s
inMemory	src/client/snd_openal.c	/^	qboolean	inMemory;				\/\/ Sound is stored in memory$/;"	m	struct:alSfx_s	file:
inNormalWrite	src/server/sqlite3.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inPVS	src/renderercommon/tr_public.h	/^	qboolean (*inPVS)( const vec3_t p1, const vec3_t p2 );$/;"	m	struct:__anon108
inPortal	src/renderergl1/tr_flares.c	/^	qboolean	inPortal;				\/\/ true if in a portal view of the scene$/;"	m	struct:flare_s	file:
inPortal	src/renderergl2/tr_flares.c	/^	qboolean	inPortal;				\/\/ true if in a portal view of the scene$/;"	m	struct:flare_s	file:
inProgress	src/server/sqlite3.c	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config	file:
inSock	src/master/master.c	/^int inSock = -1;$/;"	v
inTrans	src/server/sqlite3.c	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree	file:
inTransaction	src/server/sqlite3.c	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table	file:
inTransaction	src/server/sqlite3.c	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared	file:
inUse	src/client/snd_mem.c	/^static	int inUse = 0;$/;"	v	file:
in_back	src/client/cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_buttons	src/client/cl_input.c	/^kbutton_t	in_buttons[16];$/;"	v
in_down	src/client/cl_input.c	/^kbutton_t	in_up, in_down;$/;"	v
in_forward	src/client/cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_joystick	src/sdl/sdl_input.c	/^static cvar_t *in_joystick          = NULL;$/;"	v	file:
in_joystickNo	src/sdl/sdl_input.c	/^static cvar_t *in_joystickNo        = NULL;$/;"	v	file:
in_joystickThreshold	src/sdl/sdl_input.c	/^static cvar_t *in_joystickThreshold = NULL;$/;"	v	file:
in_joystickUseAnalog	src/sdl/sdl_input.c	/^static cvar_t *in_joystickUseAnalog = NULL;$/;"	v	file:
in_keyboardDebug	src/sdl/sdl_input.c	/^static cvar_t *in_keyboardDebug     = NULL;$/;"	v	file:
in_left	src/client/cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_lookdown	src/client/cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_lookup	src/client/cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_mlooking	src/client/cl_input.c	/^qboolean	in_mlooking;$/;"	v
in_mouse	src/sdl/sdl_input.c	/^static cvar_t *in_mouse             = NULL;$/;"	v	file:
in_moveleft	src/client/cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_moveright	src/client/cl_input.c	/^kbutton_t	in_lookup, in_lookdown, in_moveleft, in_moveright;$/;"	v
in_nograb	src/sdl/sdl_input.c	/^static cvar_t *in_nograb;$/;"	v	file:
in_right	src/client/cl_input.c	/^kbutton_t	in_left, in_right, in_forward, in_back;$/;"	v
in_speed	src/client/cl_input.c	/^kbutton_t	in_strafe, in_speed;$/;"	v
in_strafe	src/client/cl_input.c	/^kbutton_t	in_strafe, in_speed;$/;"	v
in_up	src/client/cl_input.c	/^kbutton_t	in_up, in_down;$/;"	v
in_voiprecord	src/client/cl_input.c	/^kbutton_t	in_voiprecord;$/;"	v
inactivityTime	src/game/g_local.h	/^  int                 inactivityTime;   \/\/ kick players when time > this$/;"	m	struct:gclient_s
inactivityWarning	src/game/g_local.h	/^  qboolean            inactivityWarning;\/\/ qtrue if the five seoond warning has been given$/;"	m	struct:gclient_s
inb	src/tools/lcc/cpp/cpp.h	/^	uchar	*inb;		\/* input buffer *\/$/;"	m	struct:source
incdepth	src/tools/lcc/cpp/cpp.c	/^int	incdepth;$/;"	v
include	src/tools/lcc/etc/bytecode.c	/^char *include[] = { 0 };$/;"	v
includelist	src/tools/lcc/cpp/cpp.h	/^typedef	struct	includelist {$/;"	s
includelist	src/tools/lcc/cpp/include.c	/^Includelist	includelist[NINCLUDE];$/;"	v
includepath	src/qcommon/parse.c	/^  char includepath[MAX_QPATH];  \/\/path to include files$/;"	m	struct:source_s	file:
incnt	src/qcommon/puff.c	/^    uint32_t incnt;        \/* bytes read so far *\/$/;"	m	struct:state	file:
incomingSequence	src/qcommon/qcommon.h	/^	int			incomingSequence;$/;"	m	struct:__anon422
incr	src/tools/lcc/src/expr.c	/^Tree incr(int op, Tree v, Tree e) {$/;"	f
incrAggDepth	src/server/sqlite3.c	/^static int incrAggDepth(Walker *pWalker, Expr *pExpr){$/;"	f	file:
incrAggFunctionDepth	src/server/sqlite3.c	/^static void incrAggFunctionDepth(Expr *pExpr, int N){$/;"	f	file:
incrPhraseTokenNext	src/server/sqlite3.c	/^static int incrPhraseTokenNext($/;"	f	file:
incrVacuum	src/server/sqlite3.c	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
incrVacuumStep	src/server/sqlite3.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg, int bCommit){$/;"	f	file:
increment	src/qcommon/huffman.c	/^static void increment(huff_t* huff, node_t *node) {$/;"	f	file:
indent_s	src/qcommon/parse.c	/^typedef struct indent_s$/;"	s	file:
indent_t	src/qcommon/parse.c	/^} indent_t;$/;"	t	typeref:struct:indent_s	file:
indentstack	src/qcommon/parse.c	/^  indent_t *indentstack;        \/\/stack with indents$/;"	m	struct:source_s	file:
index	src/client/snd_local.h	/^    char	index;		\/* Index into stepsize table *\/$/;"	m	struct:adpcm_state
index	src/renderergl1/tr_local.h	/^	int			index;					\/\/ this shader == tr.shaders[index]$/;"	m	struct:shader_s
index	src/renderergl1/tr_local.h	/^	int			index;		\/\/ model = tr.models[model->index]$/;"	m	struct:model_s
index	src/renderergl2/tr_fbo.h	/^	int             index;$/;"	m	struct:FBO_s
index	src/renderergl2/tr_local.h	/^	int			index;					\/\/ this shader == tr.shaders[index]$/;"	m	struct:shader_s
index	src/renderergl2/tr_local.h	/^	int			index;		\/\/ model = tr.models[model->index]$/;"	m	struct:model_s
index	src/tools/lcc/src/prof.c	/^		struct { unsigned int index:6,x:10,y:16; } be;$/;"	m	struct:callsite::coordinate::__anon272	file:
index	src/tools/lcc/src/prof.c	/^		struct { unsigned int y:16,x:10,index:6; } le;$/;"	m	struct:callsite::coordinate::__anon271	file:
indexColumnNotNull	src/server/sqlite3.c	/^static int indexColumnNotNull(Index *pIdx, int iCol){$/;"	f	file:
indexMightHelpWithOrderBy	src/server/sqlite3.c	/^static int indexMightHelpWithOrderBy($/;"	f	file:
indexTable	src/client/snd_adpcm.c	/^static int indexTable[16] = {$/;"	v	file:
indexable	src/server/sqlite3.c	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo	file:
indexes	src/qcommon/qfiles.h	/^	int			indexes[3];$/;"	m	struct:__anon390
indexes	src/qcommon/qfiles.h	/^	int			indexes[3];$/;"	m	struct:__anon396
indexes	src/renderergl1/tr_local.h	/^	int				*indexes;$/;"	m	struct:__anon153
indexes	src/renderergl2/tr_local.h	/^	glIndex_t      *indexes;$/;"	m	struct:mdvSurface_s
indexes	src/renderergl2/tr_local.h	/^	glIndex_t      *indexes;$/;"	m	struct:srfBspSurface_s
indexesIBO	src/renderergl2/tr_local.h	/^	uint32_t        indexesIBO;$/;"	m	struct:vao_s
indexesSize	src/renderergl2/tr_local.h	/^	int             indexesSize;	\/\/ amount of memory data allocated for all triangles in bytes$/;"	m	struct:vao_s
infiniteAmmo	src/game/bg_public.h	/^  qboolean  infiniteAmmo;$/;"	m	struct:__anon355
info	src/client/client.h	/^	char		info[MAX_INFO_STRING];$/;"	m	struct:__anon88
info	src/client/snd_codec.h	/^	snd_info_t info;$/;"	m	struct:snd_stream_s
info	src/client/snd_openal.c	/^	snd_info_t	info;					\/\/ information for this sound like rate, sample count..$/;"	m	struct:alSfx_s	file:
info	src/game/bg_public.h	/^  char          *info;$/;"	m	struct:__anon352
info	src/game/bg_public.h	/^  char          *info;$/;"	m	struct:__anon353
info	src/game/bg_public.h	/^  char      *info;$/;"	m	struct:__anon349
info	src/game/bg_public.h	/^  char      *info;$/;"	m	struct:__anon355
info	src/game/bg_public.h	/^  char      *info;$/;"	m	struct:__anon356
info	src/server/sqlite3.c	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor	file:
infoChangeTime	src/game/g_local.h	/^  int                 infoChangeTime;$/;"	m	struct:__anon311
infoParm_t	src/renderergl1/tr_shader.c	/^} infoParm_t;$/;"	t	typeref:struct:__anon126	file:
infoParm_t	src/renderergl2/tr_shader.c	/^} infoParm_t;$/;"	t	typeref:struct:__anon7	file:
infoParms	src/renderergl1/tr_shader.c	/^infoParm_t	infoParms[] = {$/;"	v
infoParms	src/renderergl2/tr_shader.c	/^infoParm_t	infoParms[] = {$/;"	v
infoScreenText	src/cgame/cg_local.h	/^  char          infoScreenText[ MAX_STRING_CHARS ];$/;"	m	struct:__anon249
infoType_t	src/ui/ui_local.h	/^} infoType_t;$/;"	t	typeref:enum:__anon514
infoValid	src/cgame/cg_local.h	/^  qboolean    infoValid;$/;"	m	struct:__anon243
infp	src/tools/lcc/lburg/gram.c	/^FILE *infp = NULL;$/;"	v
init	src/server/sqlite3.c	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo	file:
init	src/tools/lcc/src/inits.c	/^void init(int argc, char *argv[]) {$/;"	f
initAvgEq	src/server/sqlite3.c	/^static void initAvgEq(Index *pIdx){$/;"	f	file:
initMaskSet	src/server/sqlite3.c	120280;"	d	file:
initRoQ	src/client/cl_cin.c	/^static void initRoQ( void ) $/;"	f	file:
init_destination	src/renderercommon/tr_image_jpg.c	/^init_destination (j_compress_ptr cinfo)$/;"	f	file:
initarray	src/tools/lcc/src/init.c	/^static int initarray(int len, Type ty, int lev) {$/;"	f	file:
initchar	src/tools/lcc/src/init.c	/^static int initchar(int len, Type ty) {$/;"	f	file:
initend	src/tools/lcc/src/init.c	/^static void initend(int lev, char follow[]) {$/;"	f	file:
initfields	src/tools/lcc/src/init.c	/^static int initfields(Field p, Field q) {$/;"	f	file:
initglobal	src/tools/lcc/src/decl.c	/^static void initglobal(Symbol p, int flag) {$/;"	f	file:
iniths	src/tools/lcc/cpp/hideset.c	/^iniths(void)$/;"	f
initial	src/cgame/cg_local.h	/^  float initial;$/;"	m	struct:pLerpValues_s
initialColor	src/cgame/cg_local.h	/^  byte            initialColor[ 3 ];$/;"	m	struct:baseParticle_s
initialLerp	src/game/bg_public.h	/^  int   initialLerp;    \/\/ msec to get to first frame$/;"	m	struct:animation_s
initialRandFrac	src/cgame/cg_local.h	/^  float initialRandFrac;$/;"	m	struct:pLerpValues_s
initialized	src/client/cl_console.c	/^	qboolean	initialized;$/;"	m	struct:__anon102	file:
initialized	src/server/server.h	/^	qboolean	initialized;				\/\/ sv_init has completed$/;"	m	struct:__anon188
initializer	src/tools/lcc/src/init.c	/^Type initializer(Type ty, int lev) {$/;"	f
initinputs	src/tools/lcc/etc/lcc.c	/^static void initinputs(void) {$/;"	f	file:
initstruct	src/tools/lcc/src/init.c	/^static int initstruct(int len, Type ty, int lev) {$/;"	f	file:
initvalue	src/tools/lcc/src/init.c	/^static Tree initvalue(Type ty) {$/;"	f	file:
inl	src/tools/lcc/cpp/cpp.h	/^	uchar	*inl;		\/* end of input *\/$/;"	m	struct:source
inlen	src/qcommon/puff.c	/^    uint32_t inlen;        \/* available input at in *\/$/;"	m	struct:state	file:
inlineDrawModel	src/cgame/cg_local.h	/^  qhandle_t     inlineDrawModel[ MAX_MODELS ];$/;"	m	struct:__anon253
inlineModelMidpoints	src/cgame/cg_local.h	/^  vec3_t        inlineModelMidpoints[ MAX_MODELS ];$/;"	m	struct:__anon253
innerbox	src/renderergl1/tr_local.h	/^	image_t		*outerbox[6], *innerbox[6];$/;"	m	struct:__anon145
innerbox	src/renderergl2/tr_local.h	/^	image_t		*outerbox[6], *innerbox[6];$/;"	m	struct:__anon29
ino	src/server/sqlite3.c	/^  ino_t ino;                  \/* Inode number *\/$/;"	m	struct:unixFileId	file:
inodeList	src/server/sqlite3.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
inp	src/tools/lcc/cpp/cpp.h	/^	uchar	*inp;		\/* input pointer *\/$/;"	m	struct:source
input_init	src/tools/lcc/src/input.c	/^void input_init(int argc, char *argv[]) {$/;"	f
inputs	src/tools/lcc/etc/bytecode.c	/^char inputs[256] = "";$/;"	v
insert	src/qcommon/vm_powerpc_asm.c	/^	unsigned long (*insert)$/;"	m	struct:powerpc_operand	file:
insertBinaryOperator	src/server/sqlite3.c	/^static void insertBinaryOperator($/;"	f	file:
insertCell	src/server/sqlite3.c	/^static void insertCell($/;"	f	file:
insertElement	src/server/sqlite3.c	/^static void insertElement($/;"	f	file:
insert_bdm	src/qcommon/vm_powerpc_asm.c	/^insert_bdm (unsigned long insn,$/;"	f	file:
insert_bo	src/qcommon/vm_powerpc_asm.c	/^insert_bo (unsigned long insn,$/;"	f	file:
insert_ras	src/qcommon/vm_powerpc_asm.c	/^insert_ras (unsigned long insn,$/;"	f	file:
insert_rbs	src/qcommon/vm_powerpc_asm.c	/^insert_rbs (unsigned long insn,$/;"	f	file:
inserths	src/tools/lcc/cpp/hideset.c	/^inserths(Hideset dhs, Hideset shs, Nlist *np)$/;"	f
insertrow	src/tools/lcc/cpp/tokens.c	/^insertrow(Tokenrow *dtr, int ntok, Tokenrow *str)$/;"	f
insn_buf	src/qcommon/vm_sparc.c	/^	unsigned int		insn_buf[INSN_BUF_SIZE];$/;"	m	struct:func_info	file:
insn_index	src/qcommon/vm_sparc.c	/^	int			insn_index;$/;"	m	struct:func_info	file:
inst	src/tools/lcc/src/config.h	/^	short inst;$/;"	m	struct:__anon274
install	src/tools/lcc/lburg/lburg.c	/^static void *install(char *name) {$/;"	f	file:
install	src/tools/lcc/src/sym.c	/^Symbol install(const char *name, Table *tpp, int level, int arena) {$/;"	f
installPath	src/sys/sys_main.c	/^static char installPath[ MAX_OSPATH ] = { 0 };$/;"	v	file:
instrFunc	src/server/sqlite3.c	/^static void instrFunc($/;"	f	file:
instruction	src/qcommon/vm_x86.c	/^static	int	instruction, pass;$/;"	v	file:
instructionCount	src/qcommon/qfiles.h	/^	int		instructionCount;$/;"	m	struct:__anon387
instructionCount	src/qcommon/vm_local.h	/^	int			instructionCount;$/;"	m	struct:vm_s
instructionCount	src/tools/asm/q3asm.c	/^int		instructionCount;$/;"	v
instructionPointers	src/qcommon/vm_local.h	/^	intptr_t	*instructionPointers;$/;"	m	struct:vm_s
int16_t	src/game/bg_lib.h	/^typedef   signed short int16_t;$/;"	t
int16_t	src/qcommon/q_shared.h	/^  typedef __int16 int16_t;$/;"	t
int32_t	src/game/bg_lib.h	/^typedef   signed  long int32_t;$/;"	t
int32_t	src/qcommon/q_shared.h	/^  typedef __int32 int32_t;$/;"	t
int64_t	src/qcommon/q_shared.h	/^  typedef __int64 int64_t;$/;"	t
int8_t	src/game/bg_lib.h	/^typedef   signed  char int8_t;$/;"	t
int8_t	src/qcommon/q_shared.h	/^  typedef __int8 int8_t;$/;"	t
intKey	src/server/sqlite3.c	/^  u8 intKey;           \/* True if table b-trees.  False for index b-trees *\/$/;"	m	struct:MemPage	file:
intKeyLeaf	src/server/sqlite3.c	/^  u8 intKeyLeaf;       \/* True if the leaf of an intKey table *\/$/;"	m	struct:MemPage	file:
intTestFunc	src/server/sqlite3.c	/^static void intTestFunc($/;"	f	file:
intconst	src/tools/lcc/src/sym.c	/^Symbol intconst(int n) {$/;"	f
integer	src/qcommon/q_shared.h	/^	int				integer;			\/\/ atoi( string )$/;"	m	struct:cvar_s
integer	src/qcommon/q_shared.h	/^	int			integer;$/;"	m	struct:__anon468
integral	src/qcommon/q_shared.h	/^	qboolean	integral;$/;"	m	struct:cvar_s
interface	src/tools/lcc/src/c.h	/^typedef struct interface {$/;"	s
intermissionQueued	src/game/g_local.h	/^  int               intermissionQueued;           \/\/ intermission was qualified, but$/;"	m	struct:__anon316
intermissionStarted	src/cgame/cg_local.h	/^  qboolean      intermissionStarted;                \/\/ don't play voice rewards, because game will end shortly$/;"	m	struct:__anon249
intermission_angle	src/game/g_local.h	/^  vec3_t            intermission_angle;$/;"	m	struct:__anon316
intermission_origin	src/game/g_local.h	/^  vec3_t            intermission_origin;          \/\/ also used for spectator spawns$/;"	m	struct:__anon316
intermissiontime	src/game/g_local.h	/^  int               intermissiontime;             \/\/ time the intermission was started$/;"	m	struct:__anon316
internalFormat	src/renderercommon/tr_common.h	/^	int			internalFormat;$/;"	m	struct:image_s
interpolate	src/cgame/cg_local.h	/^  qboolean              interpolate;      \/\/ true if next is valid to interpolate to$/;"	m	struct:centity_s
interrupt	src/tools/lcc/etc/lcc.c	/^static void interrupt(int n) {$/;"	f	file:
interruptx	src/server/sqlite3.c	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
intexpr	src/tools/lcc/src/simp.c	/^int intexpr(int tok, int n) {$/;"	f
intmetric	src/tools/lcc/src/c.h	/^	Metrics intmetric;$/;"	m	struct:interface
intptr_t	src/cgame/cg_syscalls.c	/^Q_EXPORT void dllEntry( intptr_t (QDECL  *syscallptr)( intptr_t arg,... ) )$/;"	f
intptr_t	src/game/g_syscalls.c	/^Q_EXPORT void dllEntry( intptr_t (QDECL *syscallptr)( intptr_t arg,... ) )$/;"	f
intptr_t	src/qcommon/q_shared.h	/^typedef int intptr_t;$/;"	t
intptr_t	src/ui/ui_syscalls.c	/^Q_EXPORT void dllEntry( intptr_t ( QDECL *syscallptr )( intptr_t arg, ... ) )$/;"	f
intro	src/tools/lcc/doc/4.html	/^<h2><a NAME="intro">Introduction<\/a><\/h2>$/;"	a
intro	src/tools/lcc/doc/install.html	/^<h2><a NAME="intro">Introduction<\/a><\/h2>$/;"	a
intro_stream	src/client/snd_openal.c	/^static snd_stream_t *intro_stream;$/;"	v	file:
inttype	src/tools/lcc/src/types.c	/^Type inttype;			\/* signed int *\/$/;"	v
intvalue	src/qcommon/parse.c	/^  signed long int intvalue;$/;"	m	struct:value_s	file:
intvalue	src/qcommon/parse.c	/^  unsigned long int intvalue;   \/\/integer value$/;"	m	struct:token_s	file:
intvalue	src/qcommon/q_shared.h	/^	int intvalue;$/;"	m	struct:pc_token_s
inuse	src/game/g_local.h	/^  qboolean          inuse;$/;"	m	struct:gentity_s
invalidateAllOverflowCache	src/server/sqlite3.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateIncrblobCursors	src/server/sqlite3.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	src/server/sqlite3.c	56313;"	d	file:
invalidateOverflowCache	src/server/sqlite3.c	56264;"	d	file:
invalidateTempStorage	src/server/sqlite3.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
inverseSawToothTable	src/renderergl1/tr_local.h	/^	float					inverseSawToothTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon163
inverseSawToothTable	src/renderergl2/tr_local.h	/^	float					inverseSawToothTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon63
invertNormal	src/game/bg_public.h	/^  qboolean      invertNormal;$/;"	m	struct:__anon353
invokeProfileCallback	src/server/sqlite3.c	/^static SQLITE_NOINLINE void invokeProfileCallback(sqlite3 *db, Vdbe *p){$/;"	f	file:
invokeValueDestructor	src/server/sqlite3.c	/^static int invokeValueDestructor($/;"	f	file:
ioctlarg_t	src/qcommon/net_ip.c	/^typedef int	ioctlarg_t;$/;"	t	file:
ioctlarg_t	src/qcommon/net_ip.c	/^typedef u_long	ioctlarg_t;$/;"	t	file:
ioctlsocket	src/qcommon/net_ip.c	89;"	d	file:
ip	src/game/g_admin.h	/^  addr_t ip;$/;"	m	struct:g_admin_ban
ip	src/game/g_local.h	/^  addr_t              ip;$/;"	m	struct:__anon311
ip	src/game/g_local.h	/^  addr_t            ip[ MAX_NAMELOG_ADDRS ];$/;"	m	struct:namelog_s
ip	src/qcommon/qcommon.h	/^	byte	ip[4];$/;"	m	struct:__anon421
ip6	src/qcommon/qcommon.h	/^	byte	ip6[16];$/;"	m	struct:__anon421
ip6_sockets	src/qcommon/net_ip.c	/^static SOCKET	ip6_sockets[3] = { INVALID_SOCKET, INVALID_SOCKET, INVALID_SOCKET };$/;"	v	file:
ip_sockets	src/qcommon/net_ip.c	/^static SOCKET	ip_sockets[3] = { INVALID_SOCKET, INVALID_SOCKET, INVALID_SOCKET };$/;"	v	file:
ipv	src/server/server.h	/^	} ipv;$/;"	m	struct:leakyBucket_s	typeref:union:leakyBucket_s::__anon189
iqmAnim_t	src/renderercommon/iqm.h	/^} iqmAnim_t;$/;"	t	typeref:struct:iqmanim
iqmBounds_t	src/renderercommon/iqm.h	/^} iqmBounds_t;$/;"	t	typeref:struct:iqmbounds
iqmData_t	src/renderergl1/tr_local.h	/^} iqmData_t;$/;"	t	typeref:struct:__anon154
iqmData_t	src/renderergl2/tr_local.h	/^} iqmData_t;$/;"	t	typeref:struct:__anon46
iqmHeader_t	src/renderercommon/iqm.h	/^} iqmHeader_t;$/;"	t	typeref:struct:iqmheader
iqmJoint_t	src/renderercommon/iqm.h	/^} iqmJoint_t;$/;"	t	typeref:struct:iqmjoint
iqmMesh_t	src/renderercommon/iqm.h	/^} iqmMesh_t;$/;"	t	typeref:struct:iqmmesh
iqmPose_t	src/renderercommon/iqm.h	/^} iqmPose_t;$/;"	t	typeref:struct:iqmpose
iqmTriangle_t	src/renderercommon/iqm.h	/^} iqmTriangle_t;$/;"	t	typeref:struct:iqmtriangle
iqmVertexArray_t	src/renderercommon/iqm.h	/^} iqmVertexArray_t;$/;"	t	typeref:struct:iqmvertexarray
iqmanim	src/renderercommon/iqm.h	/^typedef struct iqmanim$/;"	s
iqmbounds	src/renderercommon/iqm.h	/^typedef struct iqmbounds$/;"	s
iqmheader	src/renderercommon/iqm.h	/^typedef struct iqmheader$/;"	s
iqmjoint	src/renderercommon/iqm.h	/^typedef struct iqmjoint$/;"	s
iqmmesh	src/renderercommon/iqm.h	/^typedef struct iqmmesh$/;"	s
iqmpose	src/renderercommon/iqm.h	/^typedef struct iqmpose$/;"	s
iqmtriangle	src/renderercommon/iqm.h	/^typedef struct iqmtriangle$/;"	s
iqmvertexarray	src/renderercommon/iqm.h	/^typedef struct iqmvertexarray$/;"	s
ir	src/tools/lcc/src/c.h	/^	Interface *ir;$/;"	m	struct:binding
isActive	src/client/snd_openal.c	/^	qboolean	isActive;		\/\/ Is this source currently in use?$/;"	m	struct:src_s	file:
isAnchor	src/server/sqlite3.c	/^  u8 isAnchor;                   \/* This is the PGroup.lru element *\/$/;"	m	struct:PgHdr1	file:
isAttached	src/server/sqlite3.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isBulkLocal	src/server/sqlite3.c	/^  u8 isBulkLocal;                \/* This page from bulk local storage *\/$/;"	m	struct:PgHdr1	file:
isCandidateForInOpt	src/server/sqlite3.c	/^static Select *isCandidateForInOpt(Expr *pX){$/;"	f	file:
isConsonant	src/server/sqlite3.c	/^static int isConsonant(const char *z){$/;"	f	file:
isCorrelated	src/server/sqlite3.c	/^      unsigned isCorrelated :1;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
isCovering	src/server/sqlite3.c	/^  unsigned isCovering:1;   \/* True if this is a covering index *\/$/;"	m	struct:Index	file:
isDate	src/server/sqlite3.c	/^static int isDate($/;"	f	file:
isDefault	src/client/snd_openal.c	/^	qboolean	isDefault;				\/\/ Couldn't be loaded - use default FX$/;"	m	struct:alSfx_s	file:
isDefaultChecked	src/client/snd_openal.c	/^	qboolean	isDefaultChecked;		\/\/ Sound has been check if it isDefault$/;"	m	struct:alSfx_s	file:
isDeferred	src/server/sqlite3.c	/^  u8 isDeferred;       \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey	file:
isDelim	src/server/sqlite3.c	147200;"	d	file:
isDetail	src/renderergl1/tr_local.h	/^	qboolean		isDetail;$/;"	m	struct:__anon142
isDetail	src/renderergl2/tr_local.h	/^	qboolean		isDetail;$/;"	m	struct:__anon26
isDirty	src/server/sqlite3.c	/^  int isDirty;                \/* True if the node needs to be written to disk *\/$/;"	m	struct:RtreeNode	file:
isDistinctRedundant	src/server/sqlite3.c	/^static int isDistinctRedundant($/;"	f	file:
isEof	src/server/sqlite3.c	/^  int isEof;                      \/* After pStmt has returned SQLITE_DONE *\/$/;"	m	struct:StatCursor	file:
isEof	src/server/sqlite3.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEof	src/server/sqlite3.c	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor	file:
isEphemeral	src/server/sqlite3.c	/^  Bool isEphemeral:1;   \/* True for an ephemeral table *\/$/;"	m	struct:VdbeCursor	file:
isError	src/server/sqlite3.c	/^  int isError;            \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context	file:
isFatalError	src/server/sqlite3.c	/^static int isFatalError(int rc){$/;"	f	file:
isFullscreen	src/renderercommon/tr_types.h	/^	qboolean				isFullscreen;$/;"	m	struct:__anon120
isHyperspace	src/renderergl1/tr_local.h	/^	qboolean	isHyperspace;$/;"	m	struct:__anon162
isHyperspace	src/renderergl2/tr_local.h	/^	qboolean	isHyperspace;$/;"	m	struct:__anon62
isIndexedBy	src/server/sqlite3.c	/^      unsigned isIndexedBy :1;   \/* True if there is an INDEXED BY clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
isInit	src/server/sqlite3.c	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config	file:
isInit	src/server/sqlite3.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	src/server/sqlite3.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInit	src/server/sqlite3.c	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage	file:
isInit	src/server/sqlite3.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInterrupted	src/server/sqlite3.c	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon192	file:
isLightmap	src/renderergl1/tr_local.h	/^	qboolean		isLightmap;$/;"	m	struct:__anon141
isLightmap	src/renderergl2/tr_local.h	/^	qboolean		isLightmap;$/;"	m	struct:__anon23
isLikeOrGlob	src/server/sqlite3.c	/^static int isLikeOrGlob($/;"	f	file:
isLocked	src/client/snd_openal.c	/^	qboolean	isLocked;				\/\/ Sound is locked (can not be unloaded)$/;"	m	struct:alSfx_s	file:
isLocked	src/client/snd_openal.c	/^	qboolean	isLocked;		\/\/ This is locked (un-allocatable)$/;"	m	struct:src_s	file:
isLookaside	src/server/sqlite3.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	src/server/sqlite3.c	22426;"	d	file:
isLooping	src/client/snd_openal.c	/^	qboolean	isLooping;		\/\/ Is this a looping effect (attached to an entity)$/;"	m	struct:src_s	file:
isMallocInit	src/server/sqlite3.c	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isMalloced	src/server/sqlite3.c	14001;"	d	file:
isMatchOfColumn	src/server/sqlite3.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchinfoNeeded	src/server/sqlite3.c	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor	file:
isMirror	src/renderergl1/tr_local.h	/^	qboolean	isMirror;			\/\/ the portal is a mirror, invert the face culling$/;"	m	struct:__anon150
isMirror	src/renderergl2/tr_local.h	/^	qboolean	isMirror;			\/\/ the portal is a mirror, invert the face culling$/;"	m	struct:__anon43
isMultiWrite	src/server/sqlite3.c	/^  u8 isMultiWrite;     \/* True if statement may modify\/insert multiple rows *\/$/;"	m	struct:Parse	file:
isMutexInit	src/server/sqlite3.c	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config	file:
isNot	src/server/sqlite3.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isOpen	src/server/sqlite3.c	44809;"	d	file:
isOrdered	src/server/sqlite3.c	/^      i8 isOrdered;          \/* True if satisfies ORDER BY *\/$/;"	m	struct:WhereLoop::__anon212::__anon214	file:
isOrdered	src/server/sqlite3.c	/^  Bool isOrdered:1;     \/* True if the table is not BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor	file:
isOrdered	src/server/sqlite3.c	/^  i8 isOrdered;         \/* No. of ORDER BY terms satisfied. -1 for unknown *\/$/;"	m	struct:WherePath	file:
isPCacheInit	src/server/sqlite3.c	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isPSample	src/server/sqlite3.c	/^  u8 isPSample;                   \/* True if a periodic sample *\/$/;"	m	struct:Stat4Sample	file:
isPinned	src/server/sqlite3.c	/^  u8 isPinned;                   \/* Page in use, not on the LRU list *\/$/;"	m	struct:PgHdr1	file:
isPlaying	src/client/snd_openal.c	/^	qboolean	isPlaying;		\/\/ Is this source currently playing, or stopped?$/;"	m	struct:src_s	file:
isPoint	src/qcommon/cm_local.h	/^	qboolean		isPoint;	\/\/ optimized case$/;"	m	struct:__anon443
isPortal	src/renderergl1/tr_local.h	/^	qboolean	isPortal;			\/\/ true if this view is through a portal$/;"	m	struct:__anon150
isPortal	src/renderergl2/tr_local.h	/^	qboolean	isPortal;			\/\/ true if this view is through a portal$/;"	m	struct:__anon43
isPortal	src/renderergl2/tr_local.h	/^	qboolean	isPortal;$/;"	m	struct:shader_s
isPrefix	src/server/sqlite3.c	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken	file:
isPrepareV2	src/server/sqlite3.c	/^  bft isPrepareV2:1;      \/* True if prepared with prepare_v2() *\/$/;"	m	struct:Vdbe	file:
isReadonly	src/server/sqlite3.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isRecursive	src/server/sqlite3.c	/^      unsigned isRecursive :1;   \/* True for recursive reference in WITH *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
isRequireSeek	src/server/sqlite3.c	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor	file:
isResized	src/server/sqlite3.c	/^  unsigned isResized:1;    \/* True if resizeIndexObject() has been called *\/$/;"	m	struct:Index	file:
isSetNullAction	src/server/sqlite3.c	/^static int isSetNullAction(Parse *pParse, FKey *pFKey){$/;"	f	file:
isSimpleCount	src/server/sqlite3.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSky	src/renderergl1/tr_local.h	/^	qboolean	isSky;$/;"	m	struct:shader_s
isSky	src/renderergl2/tr_local.h	/^	qboolean	isSky;$/;"	m	struct:shader_s
isSorter	src/server/sqlite3.c	74553;"	d	file:
isStream	src/client/snd_openal.c	/^	qboolean	isStream;		\/\/ Is this source a stream$/;"	m	struct:src_s	file:
isSystemTable	src/server/sqlite3.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isTabFunc	src/server/sqlite3.c	/^      unsigned isTabFunc :1;     \/* True if table-valued-function syntax *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
isTable	src/server/sqlite3.c	/^  u8 isTable;           \/* True for rowid tables.  False for indexes *\/$/;"	m	struct:VdbeCursor	file:
isTnct	src/server/sqlite3.c	/^  u8 isTnct;      \/* True if the DISTINCT keyword is present *\/$/;"	m	struct:DistinctCtx	file:
isTracking	src/client/snd_openal.c	/^	qboolean	isTracking;		\/\/ Is this object tracking its owner$/;"	m	struct:src_s	file:
isTransactionSavepoint	src/server/sqlite3.c	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3	file:
isVideoMap	src/renderergl1/tr_local.h	/^	qboolean		isVideoMap;$/;"	m	struct:__anon141
isVideoMap	src/renderergl2/tr_local.h	/^	qboolean		isVideoMap;$/;"	m	struct:__anon23
isView	src/server/sqlite3.c	104084;"	d	file:
isView	src/server/sqlite3.c	104085;"	d	file:
isView	src/server/sqlite3.c	104587;"	d	file:
isView	src/server/sqlite3.c	117651;"	d	file:
isView	src/server/sqlite3.c	117652;"	d	file:
isView	src/server/sqlite3.c	118161;"	d	file:
isView	src/server/sqlite3.c	99672;"	d	file:
isView	src/server/sqlite3.c	99673;"	d	file:
isView	src/server/sqlite3.c	99972;"	d	file:
isVowel	src/server/sqlite3.c	/^static int isVowel(const char *z){$/;"	f	file:
isWriteLock	src/server/sqlite3.c	/^  u8 isWriteLock;      \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
isaddrop	src/tools/lcc/src/c.h	10;"	d
isalnum	src/game/bg_lib.h	65;"	d
isalpha	src/game/bg_lib.h	66;"	d
isarith	src/tools/lcc/src/c.h	55;"	d
isarray	src/tools/lcc/src/c.h	45;"	d
isascii	src/game/bg_lib.h	67;"	d
iscall	src/tools/lcc/src/dag.c	4;"	d	file:
iscallb	src/tools/lcc/src/enode.c	/^int iscallb(Tree e) {$/;"	f
ischar	src/tools/lcc/src/c.h	51;"	d
iscntrl	src/game/bg_lib.h	68;"	d
isconst	src/tools/lcc/src/c.h	43;"	d
isdigit	src/game/bg_lib.h	69;"	d
isenum	src/tools/lcc/src/c.h	59;"	d
isfield	src/tools/lcc/src/types.c	/^static Field isfield(const char *name, Field flist) {$/;"	f	file:
isfloat	src/tools/lcc/src/c.h	54;"	d
isfunc	src/tools/lcc/src/c.h	49;"	d
isgraph	src/game/bg_lib.h	70;"	d
isint	src/tools/lcc/src/c.h	52;"	d
islower	src/game/bg_lib.h	71;"	d
isnullptr	src/tools/lcc/src/enode.c	/^int isnullptr(Tree e) {$/;"	f
ispow2	src/tools/lcc/src/simp.c	/^int ispow2(unsigned long u) {$/;"	f
isprint	src/game/bg_lib.h	72;"	d
isptr	src/tools/lcc/src/c.h	50;"	d
ispunct	src/game/bg_lib.h	73;"	d
isqual	src/tools/lcc/src/c.h	38;"	d
iss8	src/qcommon/vm_x86.c	/^static int iss8(int32_t v)$/;"	f	file:
isscalar	src/tools/lcc/src/c.h	57;"	d
isspace	src/game/bg_lib.h	74;"	d
isstruct	src/tools/lcc/src/c.h	46;"	d
istypename	src/tools/lcc/src/c.h	16;"	d
isunion	src/tools/lcc/src/c.h	48;"	d
isunsigned	src/tools/lcc/src/c.h	56;"	d
isupper	src/game/bg_lib.h	76;"	d
isvoidptr	src/tools/lcc/src/enode.c	10;"	d	file:
isvolatile	src/tools/lcc/src/c.h	41;"	d
isxdigit	src/game/bg_lib.h	77;"	d
isxlower	src/game/bg_lib.h	78;"	d
isxupper	src/game/bg_lib.h	79;"	d
item	src/ui/ui_shared.c	/^  itemDef_t *item;$/;"	m	struct:scrollInfo_s	file:
itemBuildError_t	src/game/g_local.h	/^} itemBuildError_t;$/;"	t	typeref:enum:__anon318
itemCapture	src/ui/ui_shared.c	/^static itemDef_t *itemCapture = NULL;   \/\/ item that has the mouse captured ( if any )$/;"	v	file:
itemCount	src/ui/ui_shared.h	/^  int itemCount;                    \/\/ number of items;$/;"	m	struct:__anon503
itemDataType_t	src/ui/ui_shared.h	/^} itemDataType_t;$/;"	t	typeref:enum:__anon501
itemDef_s	src/ui/ui_shared.h	/^typedef struct itemDef_s$/;"	s
itemDef_t	src/ui/ui_shared.h	/^itemDef_t;$/;"	t	typeref:struct:itemDef_s
itemFocusSound	src/ui/ui_shared.h	/^  sfxHandle_t itemFocusSound;$/;"	m	struct:__anon504
itemParseKeywordHash	src/ui/ui_shared.c	/^keywordHash_t *itemParseKeywordHash[KEYWORDHASH_SIZE];$/;"	v
itemParseKeywords	src/ui/ui_shared.c	/^keywordHash_t itemParseKeywords[] = {$/;"	v
itemPickup	src/cgame/cg_local.h	/^  int           itemPickup;$/;"	m	struct:__anon249
itemPickupBlendTime	src/cgame/cg_local.h	/^  int           itemPickupBlendTime;                \/\/ the pulse around the crosshair is timed seperately$/;"	m	struct:__anon249
itemPickupTime	src/cgame/cg_local.h	/^  int           itemPickupTime;$/;"	m	struct:__anon249
items	src/ui/ui_shared.h	/^  itemDef_t *items[MAX_MENUITEMS];  \/\/ items this menu contains$/;"	m	struct:__anon503
iter	src/server/sqlite3.c	/^  CInstIter iter;                 \/* Coalesced Instance Iterator *\/$/;"	m	struct:HighlightContext	file:
ivec2_t	src/renderergl2/tr_extramath.h	/^typedef int ivec2_t[2];$/;"	t
ivec3_t	src/renderergl2/tr_extramath.h	/^typedef int ivec3_t[3];$/;"	t
ivec4_t	src/renderergl2/tr_extramath.h	/^typedef int ivec4_t[4];$/;"	t
ivln2	src/game/bg_lib.c	/^ivln2   =  1.4426950216e+00, \/* 0x3fb8aa3b =1\/ln2 *\/$/;"	v	file:
ivln2_h	src/game/bg_lib.c	/^ivln2_h =  1.4426879883e+00, \/* 0x3fb8aa00 =16b 1\/ln2*\/$/;"	v	file:
ivln2_l	src/game/bg_lib.c	/^ivln2_l =  7.0526075433e-06; \/* 0x36eca570 =1\/ln2 tail*\/$/;"	v	file:
ix	src/server/sqlite3.c	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet	file:
j	src/server/sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
j_forward	src/client/cl_main.c	/^cvar_t	*j_forward;$/;"	v
j_forward_axis	src/client/cl_main.c	/^cvar_t	*j_forward_axis;$/;"	v
j_pitch	src/client/cl_main.c	/^cvar_t	*j_pitch;$/;"	v
j_pitch_axis	src/client/cl_main.c	/^cvar_t	*j_pitch_axis;$/;"	v
j_side	src/client/cl_main.c	/^cvar_t	*j_side;$/;"	v
j_side_axis	src/client/cl_main.c	/^cvar_t	*j_side_axis;$/;"	v
j_up	src/client/cl_main.c	/^cvar_t	*j_up;$/;"	v
j_up_axis	src/client/cl_main.c	/^cvar_t	*j_up_axis;$/;"	v
j_yaw	src/client/cl_main.c	/^cvar_t	*j_yaw;$/;"	v
j_yaw_axis	src/client/cl_main.c	/^cvar_t	*j_yaw_axis;$/;"	v
jail_path	src/master/master.c	/^static const char* jail_path = DEFAULT_JAIL_PATH;$/;"	v	file:
jerk	src/game/g_local.h	/^  vec3_t            jerk;$/;"	m	struct:gentity_s
jetPackAscendPS	src/cgame/cg_local.h	/^  qhandle_t   jetPackAscendPS;$/;"	m	struct:__anon251
jetPackDescendPS	src/cgame/cg_local.h	/^  qhandle_t   jetPackDescendPS;$/;"	m	struct:__anon251
jetPackHoverPS	src/cgame/cg_local.h	/^  qhandle_t   jetPackHoverPS;$/;"	m	struct:__anon251
jetPackJumpTime	src/cgame/cg_local.h	/^  int                   jetPackJumpTime;$/;"	m	struct:centity_s
jetPackPS	src/cgame/cg_local.h	/^  particleSystem_t      *jetPackPS;$/;"	m	struct:centity_s
jetPackRefuelTime	src/cgame/cg_local.h	/^  int                   jetPackRefuelTime; \/\/to avoid spamming sounds$/;"	m	struct:centity_s
jetPackState	src/cgame/cg_local.h	/^  jetPackState_t        jetPackState;$/;"	m	struct:centity_s
jetPackState_t	src/cgame/cg_local.h	/^} jetPackState_t;$/;"	t	typeref:enum:__anon234
jetpackAscendDeactivateSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackAscendDeactivateSound;$/;"	m	struct:__anon251
jetpackAscendSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackAscendSound;$/;"	m	struct:__anon251
jetpackDescendDeactivateSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackDescendDeactivateSound;$/;"	m	struct:__anon251
jetpackDescendSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackDescendSound;$/;"	m	struct:__anon251
jetpackFlashModel	src/cgame/cg_local.h	/^  qhandle_t jetpackFlashModel;$/;"	m	struct:__anon251
jetpackIdleDeactivateSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackIdleDeactivateSound;$/;"	m	struct:__anon251
jetpackIdleSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackIdleSound;$/;"	m	struct:__anon251
jetpackLowFuelSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackLowFuelSound;$/;"	m	struct:__anon251
jetpackModel	src/cgame/cg_local.h	/^  qhandle_t jetpackModel;$/;"	m	struct:__anon251
jetpackRefuelSound	src/cgame/cg_local.h	/^  sfxHandle_t jetpackRefuelSound;$/;"	m	struct:__anon251
jfd	src/server/sqlite3.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jitterAttachments	src/cgame/cg_local.h	/^  qboolean                jitterAttachments;$/;"	m	struct:baseTrailBeam_s
jitters	src/cgame/cg_local.h	/^  baseTrailJitter_t       jitters[ MAX_TRAIL_BEAM_JITTERS ];$/;"	m	struct:baseTrailBeam_s
jitters	src/cgame/cg_local.h	/^  vec2_t                  jitters[ MAX_TRAIL_BEAM_JITTERS ];$/;"	m	struct:trailBeamNode_s
jlabel	src/qcommon/vm_x86.c	/^static	int jlabel;$/;"	v	file:
jnFlags	src/server/sqlite3.c	/^  u8 jnFlags;            \/* JNODE flags *\/$/;"	m	struct:JsonNode	file:
jointMats	src/renderergl1/tr_local.h	/^	float		*jointMats;$/;"	m	struct:__anon154
jointMats	src/renderergl2/tr_local.h	/^	float		*jointMats;$/;"	m	struct:__anon46
jointParents	src/renderergl1/tr_local.h	/^	int		*jointParents;$/;"	m	struct:__anon154
jointParents	src/renderergl2/tr_local.h	/^	int		*jointParents;$/;"	m	struct:__anon46
jointype	src/server/sqlite3.c	/^      u8 jointype;      \/* Type of join between this able and the previous *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
journalHdr	src/server/sqlite3.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdrOffset	src/server/sqlite3.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalMode	src/server/sqlite3.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalOff	src/server/sqlite3.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalSizeLimit	src/server/sqlite3.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
joy_keys	src/sdl/sdl_input.c	/^static int joy_keys[16] = {$/;"	v	file:
joystickAxis	src/client/client.h	/^	int			joystickAxis[MAX_JOYSTICK_AXIS];	\/\/ set by joystick events$/;"	m	struct:__anon86
jpeg	src/renderergl1/tr_local.h	/^	qboolean jpeg;$/;"	m	struct:__anon172
jpeg	src/renderergl2/tr_local.h	/^	qboolean jpeg;$/;"	m	struct:__anon72
jpegDest	src/renderercommon/tr_image_jpg.c	/^jpegDest (j_compress_ptr cinfo, byte* outfile, int size)$/;"	f	file:
jrnlBufferSize	src/server/sqlite3.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jsonAppendChar	src/server/sqlite3.c	/^static void jsonAppendChar(JsonString *p, char c){$/;"	f	file:
jsonAppendRaw	src/server/sqlite3.c	/^static void jsonAppendRaw(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendSeparator	src/server/sqlite3.c	/^static void jsonAppendSeparator(JsonString *p){$/;"	f	file:
jsonAppendString	src/server/sqlite3.c	/^static void jsonAppendString(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendValue	src/server/sqlite3.c	/^static void jsonAppendValue($/;"	f	file:
jsonArrayFinal	src/server/sqlite3.c	/^static void jsonArrayFinal(sqlite3_context *ctx){$/;"	f	file:
jsonArrayFunc	src/server/sqlite3.c	/^static void jsonArrayFunc($/;"	f	file:
jsonArrayLengthFunc	src/server/sqlite3.c	/^static void jsonArrayLengthFunc($/;"	f	file:
jsonArrayStep	src/server/sqlite3.c	/^static void jsonArrayStep($/;"	f	file:
jsonEachBestIndex	src/server/sqlite3.c	/^static int jsonEachBestIndex($/;"	f	file:
jsonEachClose	src/server/sqlite3.c	/^static int jsonEachClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachColumn	src/server/sqlite3.c	/^static int jsonEachColumn($/;"	f	file:
jsonEachComputePath	src/server/sqlite3.c	/^static void jsonEachComputePath($/;"	f	file:
jsonEachConnect	src/server/sqlite3.c	/^static int jsonEachConnect($/;"	f	file:
jsonEachCursorReset	src/server/sqlite3.c	/^static void jsonEachCursorReset(JsonEachCursor *p){$/;"	f	file:
jsonEachDisconnect	src/server/sqlite3.c	/^static int jsonEachDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
jsonEachEof	src/server/sqlite3.c	/^static int jsonEachEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachFilter	src/server/sqlite3.c	/^static int jsonEachFilter($/;"	f	file:
jsonEachModule	src/server/sqlite3.c	/^static sqlite3_module jsonEachModule = {$/;"	v	file:
jsonEachNext	src/server/sqlite3.c	/^static int jsonEachNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachOpenEach	src/server/sqlite3.c	/^static int jsonEachOpenEach(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenTree	src/server/sqlite3.c	/^static int jsonEachOpenTree(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachRowid	src/server/sqlite3.c	/^static int jsonEachRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
jsonExtractFunc	src/server/sqlite3.c	/^static void jsonExtractFunc($/;"	f	file:
jsonGrow	src/server/sqlite3.c	/^static int jsonGrow(JsonString *p, u32 N){$/;"	f	file:
jsonInit	src/server/sqlite3.c	/^static void jsonInit(JsonString *p, sqlite3_context *pCtx){$/;"	f	file:
jsonIsSpace	src/server/sqlite3.c	/^static const char jsonIsSpace[] = {$/;"	v	file:
jsonLabelCompare	src/server/sqlite3.c	/^static int jsonLabelCompare(JsonNode *pNode, const char *zKey, u32 nKey){$/;"	f	file:
jsonLookup	src/server/sqlite3.c	/^static JsonNode *jsonLookup($/;"	f	file:
jsonLookupAppend	src/server/sqlite3.c	/^static JsonNode *jsonLookupAppend($/;"	f	file:
jsonLookupStep	src/server/sqlite3.c	/^static JsonNode *jsonLookupStep($/;"	f	file:
jsonNodeSize	src/server/sqlite3.c	/^static u32 jsonNodeSize(JsonNode *pNode){$/;"	f	file:
jsonObjectFinal	src/server/sqlite3.c	/^static void jsonObjectFinal(sqlite3_context *ctx){$/;"	f	file:
jsonObjectFunc	src/server/sqlite3.c	/^static void jsonObjectFunc($/;"	f	file:
jsonObjectStep	src/server/sqlite3.c	/^static void jsonObjectStep($/;"	f	file:
jsonOom	src/server/sqlite3.c	/^static void jsonOom(JsonString *p){$/;"	f	file:
jsonParse	src/server/sqlite3.c	/^static int jsonParse($/;"	f	file:
jsonParseAddNode	src/server/sqlite3.c	/^static int jsonParseAddNode($/;"	f	file:
jsonParseAddNodeExpand	src/server/sqlite3.c	/^static JSON_NOINLINE int jsonParseAddNodeExpand($/;"	f	file:
jsonParseFillInParentage	src/server/sqlite3.c	/^static void jsonParseFillInParentage(JsonParse *pParse, u32 i, u32 iParent){$/;"	f	file:
jsonParseFindParents	src/server/sqlite3.c	/^static int jsonParseFindParents(JsonParse *pParse){$/;"	f	file:
jsonParseFunc	src/server/sqlite3.c	/^static void jsonParseFunc($/;"	f	file:
jsonParseReset	src/server/sqlite3.c	/^static void jsonParseReset(JsonParse *pParse){$/;"	f	file:
jsonParseValue	src/server/sqlite3.c	/^static int jsonParseValue(JsonParse *pParse, u32 i){$/;"	f	file:
jsonPathSyntaxError	src/server/sqlite3.c	/^static char *jsonPathSyntaxError(const char *zErr){$/;"	f	file:
jsonPrintf	src/server/sqlite3.c	/^static void jsonPrintf(int N, JsonString *p, const char *zFormat, ...){$/;"	f	file:
jsonRemoveFunc	src/server/sqlite3.c	/^static void jsonRemoveFunc($/;"	f	file:
jsonRenderNode	src/server/sqlite3.c	/^static void jsonRenderNode($/;"	f	file:
jsonReplaceFunc	src/server/sqlite3.c	/^static void jsonReplaceFunc($/;"	f	file:
jsonReset	src/server/sqlite3.c	/^static void jsonReset(JsonString *p){$/;"	f	file:
jsonResult	src/server/sqlite3.c	/^static void jsonResult(JsonString *p){$/;"	f	file:
jsonReturn	src/server/sqlite3.c	/^static void jsonReturn($/;"	f	file:
jsonReturnJson	src/server/sqlite3.c	/^static void jsonReturnJson($/;"	f	file:
jsonSetFunc	src/server/sqlite3.c	/^static void jsonSetFunc($/;"	f	file:
jsonTest1Func	src/server/sqlite3.c	/^static void jsonTest1Func($/;"	f	file:
jsonTreeModule	src/server/sqlite3.c	/^static sqlite3_module jsonTreeModule = {$/;"	v	file:
jsonType	src/server/sqlite3.c	/^static const char * const jsonType[] = {$/;"	v	file:
jsonTypeFunc	src/server/sqlite3.c	/^static void jsonTypeFunc($/;"	f	file:
jsonValidFunc	src/server/sqlite3.c	/^static void jsonValidFunc($/;"	f	file:
jsonWrongNumArgs	src/server/sqlite3.c	/^static void jsonWrongNumArgs($/;"	f	file:
jsonZero	src/server/sqlite3.c	/^static void jsonZero(JsonString *p){$/;"	f	file:
jtrgLength	src/qcommon/qfiles.h	/^	int		jtrgLength;			\/\/ number of jump table targets$/;"	m	struct:__anon387
juliandayFunc	src/server/sqlite3.c	/^static void juliandayFunc($/;"	f	file:
jump	src/qcommon/vm_powerpc.c	/^	symbolic_jump_t *jump;$/;"	m	struct:dest_instruction	file:
jump	src/qcommon/vm_sparc.c	/^	struct jump_insn	*jump;$/;"	m	struct:dst_insn	typeref:struct:dst_insn::jump_insn	file:
jump	src/tools/lcc/src/stmt.c	/^Node jump(int lab) {$/;"	f
jumpMagnitude	src/game/bg_public.h	/^  float     jumpMagnitude;$/;"	m	struct:__anon349
jumpTableTargets	src/qcommon/vm_local.h	/^	byte		*jumpTableTargets;$/;"	m	struct:vm_s
jump_dest_insn	src/qcommon/vm_sparc.c	/^	int			jump_dest_insn;$/;"	m	struct:jump_insn	file:
jump_first	src/qcommon/vm_sparc.c	/^	struct jump_insn	*jump_first;$/;"	m	struct:func_info	typeref:struct:func_info::jump_insn	file:
jump_iname	src/qcommon/vm_sparc.c	/^	enum sparc_iname	jump_iname;$/;"	m	struct:jump_insn	typeref:enum:jump_insn::sparc_iname	file:
jump_insn	src/qcommon/vm_sparc.c	/^struct jump_insn {$/;"	s	file:
jump_insn_append	src/qcommon/vm_sparc.c	/^static void jump_insn_append(vm_t *vm, struct func_info * const fp, enum sparc_iname iname, int dest)$/;"	f	file:
jump_insn_insert_tail	src/qcommon/vm_sparc.c	/^static void jump_insn_insert_tail(struct func_info * const fp,$/;"	f	file:
jump_last	src/qcommon/vm_sparc.c	/^	struct jump_insn	*jump_last;$/;"	m	struct:func_info	typeref:struct:func_info::jump_insn	file:
jump_to	src/qcommon/vm_powerpc.c	/^	unsigned long int jump_to;$/;"	m	struct:symbolic_jump	file:
jumppad_frame	src/cgame/cg_local.h	/^	int			jumppad_frame;$/;"	m	struct:__anon256
jumppad_frame	src/client/client.h	/^	int			jumppad_frame;$/;"	m	struct:alternatePlayerState_s
jumppad_frame	src/qcommon/msg.c	/^	int			jumppad_frame;$/;"	m	struct:alternatePlayerState_s	file:
jumppad_frame	src/qcommon/q_shared.h	/^	int			jumppad_frame;$/;"	m	struct:playerState_s
jused	src/qcommon/vm_x86.c	/^static	byte	*jused = NULL;$/;"	v	file:
jusedSize	src/qcommon/vm_x86.c	/^static	int		jusedSize = 0;$/;"	v	file:
k	src/server/sqlite3.c	/^  int k;                     \/* Resume scanning at this->pWC->a[this->k] *\/$/;"	m	struct:WhereScan	file:
kbitmask	src/qcommon/msg.c	/^int kbitmask[32] = {$/;"	v
kbutton_t	src/client/client.h	/^} kbutton_t;$/;"	t	typeref:struct:__anon91
key	src/server/sqlite3.c	/^  Blob key;                       \/* Last key written to the current block *\/$/;"	m	struct:NodeWriter	file:
key	src/server/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
keyCatchers	src/client/cl_keys.c	/^static int keyCatchers = 0;$/;"	v	file:
keyClass	src/server/sqlite3.c	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash	file:
keyConf	src/server/sqlite3.c	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table	file:
keyInfoFromExprList	src/server/sqlite3.c	/^static KeyInfo *keyInfoFromExprList($/;"	f	file:
keyNum_t	src/client/keycodes.h	/^} keyNum_t;$/;"	t	typeref:enum:__anon101
keyOverstrikeMode	src/cgame/cg_main.c	/^static qboolean keyOverstrikeMode = qfalse;$/;"	v	file:
key_overstrikeMode	src/client/cl_keys.c	/^qboolean	key_overstrikeMode;$/;"	v
keyname_t	src/client/cl_keys.c	/^} keyname_t;$/;"	t	typeref:struct:__anon103	file:
keynames	src/client/cl_keys.c	/^keyname_t keynames[] =$/;"	v
keynum	src/client/cl_keys.c	/^	int		keynum;$/;"	m	struct:__anon103	file:
keynumToStringBuf	src/ui/ui_shared.h	/^  void ( *keynumToStringBuf )( int keynum, char *buf, int buflen );$/;"	m	struct:__anon506
keys	src/cgame/cg_tutorial.c	/^  keyNum_t  keys[ 2 ];$/;"	m	struct:__anon227	file:
keys	src/client/cl_keys.c	/^qkey_t		keys[MAX_KEYS];$/;"	v
keyword	src/game/g_admin.h	/^  char *keyword;$/;"	m	struct:__anon375
keyword	src/ui/ui_shared.c	/^  char *keyword;$/;"	m	struct:keywordHash_s	file:
keywordCode	src/server/sqlite3.c	/^static int keywordCode(const char *z, int n, int *pType){$/;"	f	file:
keywordHash_s	src/ui/ui_shared.c	/^typedef struct keywordHash_s$/;"	s	file:
keywordHash_t	src/ui/ui_shared.c	/^keywordHash_t;$/;"	t	typeref:struct:keywordHash_s	file:
kids	src/tools/lcc/lburg/lburg.h	/^	Rule kids;		\/* next rule with same _kids pattern *\/$/;"	m	struct:rule
kids	src/tools/lcc/src/c.h	/^	Node kids[2];$/;"	m	struct:node
kids	src/tools/lcc/src/c.h	/^	Tree kids[2];$/;"	m	struct:tree
kids	src/tools/lcc/src/config.h	/^	Node kids[3];$/;"	m	struct:__anon274
kill	src/client/snd_local.h	/^	qboolean	kill;$/;"	m	struct:loopSound_s
kill	src/tools/lcc/src/dag.c	/^static void kill(Symbol p) {$/;"	f	file:
killedBy	src/game/g_local.h	/^  int               killedBy;                   \/\/ clientNum of killer$/;"	m	struct:gentity_s
killerName	src/cgame/cg_local.h	/^  char          killerName[ MAX_NAME_LENGTH ];$/;"	m	struct:__anon249
kind	src/tools/lcc/lburg/lburg.h	/^	Kind kind;		\/* NONTERM *\/$/;"	m	struct:nonterm
kind	src/tools/lcc/lburg/lburg.h	/^	Kind kind;		\/* TERM *\/$/;"	m	struct:term
kind	src/tools/lcc/src/c.h	/^	} kind;$/;"	m	struct:code	typeref:enum:code::__anon290
kind	src/tools/lcc/src/error.c	/^char kind[] = {$/;"	v
knockbackScale	src/game/bg_public.h	/^  float     knockbackScale;$/;"	m	struct:__anon349
knockbackScale	src/game/bg_public.h	/^  float     knockbackScale;$/;"	m	struct:__anon355
knownSfx	src/client/snd_openal.c	/^static alSfx_t knownSfx[MAX_SFX];$/;"	v	file:
kw	src/tools/lcc/cpp/nlist.c	/^	char	*kw;$/;"	m	struct:kwtab	file:
kwdefined	src/tools/lcc/cpp/nlist.c	/^Nlist	*kwdefined;$/;"	v
kwtab	src/tools/lcc/cpp/nlist.c	/^struct	kwtab {$/;"	s	file:
kwtab	src/tools/lcc/cpp/nlist.c	/^} kwtab[] = {$/;"	v	typeref:struct:kwtab
kwtype	src/tools/lcc/cpp/cpp.h	/^enum kwtype { KIF, KIFDEF, KIFNDEF, KELIF, KELSE, KENDIF, KINCLUDE, KDEFINE,$/;"	g
l	src/tools/lcc/src/alloc.c	/^	long l;$/;"	m	union:align	file:
l	src/tools/lcc/src/c.h	/^		} l;$/;"	m	union:symbol::__anon296	typeref:struct:symbol::__anon296::__anon297
l	src/ui/ui_shared.c	/^  exprToken_t l[ MAX_EXPR_ELEMENTS ];$/;"	m	struct:exprList_s	file:
lCannonWarningSound	src/cgame/cg_local.h	/^  sfxHandle_t lCannonWarningSound;$/;"	m	struct:__anon251
lCannonWarningSound2	src/cgame/cg_local.h	/^  sfxHandle_t lCannonWarningSound2;$/;"	m	struct:__anon251
lab	src/tools/lcc/src/c.h	/^	int lab;$/;"	m	struct:swtch
label	src/client/client.h	/^	char		label[MAX_FEATLABEL_CHARS]; \/\/ for featured servers, NULL otherwise$/;"	m	struct:__anon89
label	src/game/g_maprotation.c	/^    label_t     label;$/;"	m	union:node_s::__anon323	file:
label	src/qcommon/common.c	/^	char *label;$/;"	m	struct:hunkblock_s	file:
label	src/qcommon/common.c	/^	char *label;$/;"	m	struct:zonedebug_s	file:
label	src/tools/lcc/src/c.h	/^			int label;$/;"	m	struct:symbol::__anon296::__anon297
label	src/tools/lcc/src/c.h	/^			int label;$/;"	m	struct:symbol::__anon296::__anon301
labelBkOut	src/server/sqlite3.c	/^  int labelBkOut;       \/* Start label for the block-output subroutine *\/$/;"	m	struct:SortCtx	file:
labelDone	src/server/sqlite3.c	/^  int labelDone;        \/* Jump here when done, ex: LIMIT reached *\/$/;"	m	struct:SortCtx	file:
label_s	src/game/g_maprotation.c	/^typedef struct label_s$/;"	s	file:
label_t	src/game/g_maprotation.c	/^} label_t;$/;"	t	typeref:struct:label_s	file:
labelnode	src/tools/lcc/src/dag.c	/^static void labelnode(int lab) {$/;"	f	file:
labels	src/tools/lcc/src/c.h	/^			Symbol *labels;$/;"	m	struct:code::__anon291::__anon295
labels	src/tools/lcc/src/c.h	/^	Symbol *labels;$/;"	m	struct:swtch
labels	src/tools/lcc/src/sym.c	/^Table labels;$/;"	v
ladder	src/game/bg_local.h	/^  qboolean  ladder;$/;"	m	struct:__anon324
lagometer	src/cgame/cg_draw.c	/^lagometer_t   lagometer;$/;"	v
lagometer_t	src/cgame/cg_draw.c	/^} lagometer_t;$/;"	t	typeref:struct:__anon226	file:
landBob	src/game/bg_public.h	/^  float     landBob;$/;"	m	struct:__anon349
landChange	src/cgame/cg_local.h	/^  float         landChange;                         \/\/ for landing hard$/;"	m	struct:__anon249
landSound	src/cgame/cg_local.h	/^  sfxHandle_t landSound;$/;"	m	struct:__anon251
landTime	src/cgame/cg_local.h	/^  int           landTime;$/;"	m	struct:__anon249
langidFromSelect	src/server/sqlite3.c	/^static int langidFromSelect(Fts3Table *p, sqlite3_stmt *pSelect){$/;"	f	file:
larmourHeadSkin	src/cgame/cg_local.h	/^  qhandle_t larmourHeadSkin;$/;"	m	struct:__anon251
larmourLegsSkin	src/cgame/cg_local.h	/^  qhandle_t larmourLegsSkin;$/;"	m	struct:__anon251
larmourTorsoSkin	src/cgame/cg_local.h	/^  qhandle_t larmourTorsoSkin;$/;"	m	struct:__anon251
lasGunFire	src/game/g_weapon.c	/^void lasGunFire( gentity_t *ent )$/;"	f
last	src/qcommon/vm_sparc.c	/^	struct src_insn		*last;$/;"	m	struct:func_info	typeref:struct:func_info::src_insn	file:
last2DFBO	src/renderergl2/tr_local.h	/^	FBO_t *last2DFBO;$/;"	m	struct:__anon62
lastAxis	src/cgame/cg_local.h	/^  vec3_t            lastAxis[ 3 ];$/;"	m	struct:particle_s
lastAxis	src/cgame/cg_local.h	/^  vec3_t      lastAxis[ 3 ];$/;"	m	struct:__anon241
lastBuildAttempt	src/cgame/cg_local.h	/^  int           lastBuildAttempt;$/;"	m	struct:__anon249
lastBuildableDamageSoundTime	src/cgame/cg_local.h	/^  int                   lastBuildableDamageSoundTime;$/;"	m	struct:centity_s
lastBuildableHealth	src/cgame/cg_local.h	/^  float                 lastBuildableHealth;$/;"	m	struct:centity_s
lastCascadeSunDirection	src/renderergl2/tr_local.h	/^	vec3_t                  lastCascadeSunDirection;$/;"	m	struct:__anon63
lastCascadeSunMvp	src/renderergl2/tr_local.h	/^	float                   lastCascadeSunMvp[16];$/;"	m	struct:__anon63
lastClientCommand	src/server/server.h	/^	int				lastClientCommand;	\/\/ reliable client message sequence$/;"	m	struct:client_s
lastClientCommandString	src/server/server.h	/^	char			lastClientCommandString[MAX_STRING_CHARS];$/;"	m	struct:client_s
lastCluster	src/server/server.h	/^	int			lastCluster;		\/\/ if all the clusters don't fit in clusternums$/;"	m	struct:svEntity_s
lastCmdTime	src/game/g_local.h	/^  int                 lastCmdTime;    \/\/ level.time of last usercmd_t, for EF_CONNECTION$/;"	m	struct:gclient_s
lastConnState	src/ui/ui_main.c	/^static connstate_t  lastConnState;$/;"	v	file:
lastConnectTime	src/server/server.h	/^	int				lastConnectTime;	\/\/ svs.time when connection started$/;"	m	struct:client_s
lastConst	src/qcommon/vm_x86.c	/^static	int	lastConst = 0;$/;"	v	file:
lastCount	src/ui/ui_local.h	/^  int    lastCount;$/;"	m	struct:serverStatus_s
lastCreepSlowTime	src/game/g_local.h	/^  int                 lastCreepSlowTime;    \/\/ time until creep can be removed$/;"	m	struct:gclient_s
lastCrushTime	src/game/g_local.h	/^  int                 lastCrushTime;        \/\/ Tyrant crush$/;"	m	struct:gclient_s
lastDamageTime	src/game/g_local.h	/^  int               lastDamageTime;$/;"	m	struct:gentity_s
lastDeathLocation	src/game/g_local.h	/^  vec3_t              lastDeathLocation;$/;"	m	struct:__anon311
lastErrno	src/server/sqlite3.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	src/server/sqlite3.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastErrno	src/server/sqlite3.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastEvalTime	src/cgame/cg_local.h	/^  int               lastEvalTime;$/;"	m	struct:particle_s
lastEvalTime	src/cgame/cg_local.h	/^  int               lastEvalTime;$/;"	m	struct:trailBeam_s
lastEvolveAttempt	src/cgame/cg_local.h	/^  int           lastEvolveAttempt;$/;"	m	struct:__anon249
lastExecutedServerCommand	src/client/client.h	/^	int			lastExecutedServerCommand;		\/\/ last server command grabbed or executed with CL_GetServerCommand$/;"	m	struct:__anon87
lastFeederCount	src/ui/ui_shared.h	/^  int lastFeederCount;$/;"	m	struct:listBoxDef_s
lastFlameBall	src/game/g_local.h	/^  int                 lastFlameBall;        \/\/ s.number of the last flame ball fired$/;"	m	struct:gclient_s
lastGameStat	src/master/servers.h	/^	time_t lastGameStat;$/;"	m	struct:server_s
lastHealth	src/cgame/cg_local.h	/^  int           lastHealth;$/;"	m	struct:__anon249
lastHealth	src/game/g_local.h	/^  int               lastHealth; \/\/ currently only used for overmind$/;"	m	struct:gentity_s
lastHealthCross	src/cgame/cg_local.h	/^  qhandle_t     lastHealthCross;$/;"	m	struct:__anon249
lastKillTime	src/cgame/cg_local.h	/^  int           lastKillTime;$/;"	m	struct:__anon249
lastLayoutReset	src/game/g_local.h	/^  int               lastLayoutReset;$/;"	m	struct:__anon316
lastLeaf	src/qcommon/cm_local.h	/^	int		lastLeaf;		\/\/ for overflows where each leaf can't be stored individually$/;"	m	struct:leafList_s
lastListBoxClickTime	src/ui/ui_shared.c	/^static int lastListBoxClickTime = 0;$/;"	v	file:
lastListenerNumber	src/client/snd_openal.c	/^static int lastListenerNumber = -1;$/;"	v	file:
lastListenerOrigin	src/client/snd_openal.c	/^static vec3_t lastListenerOrigin = { 0.0f, 0.0f, 0.0f };$/;"	v	file:
lastLoadingText	src/ui/ui_main.c	/^static char     lastLoadingText[MAX_INFO_VALUE];$/;"	v	file:
lastLockTime	src/game/g_local.h	/^  int                 lastLockTime;$/;"	m	struct:gclient_s
lastMedKitTime	src/game/g_local.h	/^  int                 lastMedKitTime;$/;"	m	struct:gclient_s
lastMessageNum	src/server/server.h	/^	int				lastMessageNum;		\/\/ for delta compression$/;"	m	struct:client_s
lastNormal	src/cgame/cg_local.h	/^  vec3_t                lastNormal;$/;"	m	struct:particleSystem_s
lastNormal	src/cgame/cg_local.h	/^  vec3_t        lastNormal;                         \/\/ view smoothage$/;"	m	struct:__anon249
lastNormal	src/cgame/cg_local.h	/^  vec3_t      lastNormal;$/;"	m	struct:__anon241
lastNormalIsCurrent	src/cgame/cg_local.h	/^  qboolean              lastNormalIsCurrent;$/;"	m	struct:particleSystem_s
lastPacketSentTime	src/client/client.h	/^	int			lastPacketSentTime;			\/\/ for retransmits during connection$/;"	m	struct:__anon87
lastPacketTime	src/client/client.h	/^	int			lastPacketTime;				\/\/ for timeouts$/;"	m	struct:__anon87
lastPacketTime	src/server/server.h	/^	int				lastPacketTime;		\/\/ svs.time when packet was last received$/;"	m	struct:client_s
lastParseTime	src/master/master.c	/^static time_t							lastParseTime				= 0;$/;"	v	file:
lastPoisonClient	src/game/g_local.h	/^  gentity_t           *lastPoisonClient;$/;"	m	struct:gclient_s
lastPoisonCloudedTime	src/game/g_local.h	/^  int                 lastPoisonCloudedTime;$/;"	m	struct:gclient_s
lastPoisonTime	src/game/g_local.h	/^  int                 lastPoisonTime;$/;"	m	struct:gclient_s
lastPredictedCommand	src/cgame/cg_local.h	/^  int           lastPredictedCommand;$/;"	m	struct:__anon249
lastRadius	src/cgame/cg_local.h	/^  float     lastRadius;    \/\/caching of likely flare radius$/;"	m	struct:lightFlareStatus_s
lastRatio	src/cgame/cg_local.h	/^  float     lastRatio;     \/\/caching of likely flare ratio$/;"	m	struct:lightFlareStatus_s
lastRowid	src/server/sqlite3.c	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3	file:
lastRowid	src/server/sqlite3.c	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame	file:
lastSampleTime	src/client/snd_openal.c	/^	int		lastSampleTime;		\/\/ Time when this was stopped$/;"	m	struct:src_s	file:
lastSentSize	src/qcommon/qcommon.h	/^	int		lastSentSize;$/;"	m	struct:__anon422
lastSentTime	src/qcommon/qcommon.h	/^	int		lastSentTime;$/;"	m	struct:__anon422
lastServerTime	src/cgame/cg_local.h	/^  int           lastServerTime;$/;"	m	struct:__anon249
lastSlowTime	src/game/g_local.h	/^  int                 lastSlowTime;$/;"	m	struct:gclient_s
lastSnapshotTime	src/server/server.h	/^	int				lastSnapshotTime;	\/\/ svs.time of last sent snapshot$/;"	m	struct:client_s
lastSpeed	src/game/g_local.h	/^  float             lastSpeed;      \/\/ used by trains that have been restarted$/;"	m	struct:gentity_s
lastSuffocationTime	src/game/g_local.h	/^  int                 lastSuffocationTime;$/;"	m	struct:gclient_s
lastSymbol	src/tools/asm/q3asm.c	/^symbol_t	*lastSymbol = 0;  \/* Most recent symbol defined. *\/$/;"	v
lastTeamImbalancedTime	src/game/g_local.h	/^  int               lastTeamImbalancedTime;$/;"	m	struct:__anon316
lastTeamLocationTime	src/game/g_local.h	/^  int               lastTeamLocationTime;         \/\/ last time of client team location update$/;"	m	struct:__anon316
lastTime	src/cgame/cg_local.h	/^  int       lastTime;      \/\/ Last time status was visible$/;"	m	struct:buildableStatus_s
lastTime	src/cgame/cg_local.h	/^  int       lastTime;      \/\/last time flare was visible\/occluded$/;"	m	struct:lightFlareStatus_s
lastTime	src/client/cl_cin.c	/^	unsigned int		lastTime;$/;"	m	struct:__anon100	file:
lastTime	src/server/server.h	/^	int						lastTime;$/;"	m	struct:leakyBucket_s
lastTimePos	src/client/snd_openal.c	/^	float		lastTimePos;		\/\/ On stopped loops, the last position in the buffer$/;"	m	struct:src_s	file:
lastTimeUsed	src/client/snd_local.h	/^	int				lastTimeUsed;$/;"	m	struct:sfx_s
lastUpdateTime	src/cgame/cg_local.h	/^  int       lastUpdateTime;$/;"	m	struct:__anon246
lastUsedTime	src/client/snd_openal.c	/^	int				lastUsedTime;		\/\/ Time last used$/;"	m	struct:alSfx_s	file:
lastUsedTime	src/client/snd_openal.c	/^	int		lastUsedTime;		\/\/ Last time used$/;"	m	struct:src_s	file:
lastUsercmd	src/server/server.h	/^	usercmd_t		lastUsercmd;$/;"	m	struct:client_s
lastVM	src/qcommon/vm.c	/^vm_t	*lastVM    = NULL;$/;"	v
lastValidAttachmentPoint	src/cgame/cg_local.h	/^  vec3_t            lastValidAttachmentPoint;$/;"	m	struct:attachment_s
lastValidBase	src/qcommon/files.c	/^char lastValidBase[MAX_OSPATH];$/;"	v
lastValidGame	src/qcommon/files.c	/^char lastValidGame[MAX_OSPATH];$/;"	v
lastVangles	src/cgame/cg_local.h	/^  vec3_t        lastVangles;                        \/\/ view smoothage$/;"	m	struct:__anon249
lastVoiceCmd	src/game/g_local.h	/^  char                lastVoiceCmd[ MAX_VOICE_CMD_LEN ];$/;"	m	struct:gclient_s
lastWin	src/game/g_local.h	/^  team_t            lastWin;$/;"	m	struct:__anon316
lastWin	src/game/g_maprotation.c	/^  team_t              lastWin;$/;"	m	struct:condition_s	file:
last_alloc	src/master/servers.c	/^static unsigned int last_alloc;$/;"	v	file:
last_insert_rowid	src/server/sqlite3.c	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
last_insert_rowid	src/server/sqlite3.c	/^static void last_insert_rowid($/;"	f	file:
last_move_time	src/game/g_local.h	/^  int               last_move_time;$/;"	m	struct:gentity_s
lasthurt_client	src/game/g_local.h	/^  int                 lasthurt_client;  \/\/ last client that damaged this client$/;"	m	struct:gclient_s
lasthurt_mod	src/game/g_local.h	/^  int                 lasthurt_mod;     \/\/ type of damage the client did$/;"	m	struct:gclient_s
lastkilled_client	src/game/g_local.h	/^  int                 lastkilled_client;\/\/ last client that this client killed$/;"	m	struct:gclient_s
lastline	src/qcommon/parse.c	/^  int lastline;                   \/\/line before reading token$/;"	m	struct:script_s	file:
lastscript_p	src/qcommon/parse.c	/^  char *lastscript_p;             \/\/script pointer before reading token$/;"	m	struct:script_s	file:
lastuse	src/tools/lcc/src/config.h	/^	Node lastuse;$/;"	m	struct:__anon277
latchedString	src/qcommon/q_shared.h	/^	char			*latchedString;		\/\/ for CVAR_LATCH vars$/;"	m	struct:cvar_s
latched_buttons	src/game/g_local.h	/^  int                 latched_buttons;$/;"	m	struct:gclient_s
lateralFraction	src/qcommon/q_shared.h	/^	float		lateralFraction; \/\/ fraction of collision tangetially to the trace direction$/;"	m	struct:__anon470
latestSnapshotNum	src/cgame/cg_local.h	/^  int           latestSnapshotNum;                  \/\/ the number of snapshots the client system has received$/;"	m	struct:__anon249
latestSnapshotTime	src/cgame/cg_local.h	/^  int           latestSnapshotTime;                 \/\/ the time from latestSnapshotNum, so we don't need to read the snapshot yet$/;"	m	struct:__anon249
launch_grenade	src/game/g_missile.c	/^gentity_t *launch_grenade( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
launch_grenade2	src/game/g_missile.c	/^gentity_t *launch_grenade2( gentity_t *self, vec3_t start, vec3_t dir )$/;"	f
layout	src/game/g_local.h	/^  char              layout[ MAX_QPATH ];$/;"	m	struct:__anon316
layout	src/game/g_playmap.h	/^  char *layout;$/;"	m	struct:playMap_s
layouts	src/game/g_maprotation.c	/^  char  layouts[ MAX_CVAR_VALUE_STRING ];$/;"	m	struct:map_s	file:
lazyRemove	src/cgame/cg_local.h	/^  qboolean              lazyRemove; \/\/mark this system for later removal$/;"	m	struct:particleSystem_s
lcannonStartTime	src/game/g_local.h	/^  int                 lcannonStartTime;$/;"	m	struct:gclient_s
lcc_getopt	src/tools/lcc/cpp/getopt.c	/^lcc_getopt (int argc, char *const argv[], const char *opts)$/;"	f
lccinputs	src/tools/lcc/etc/lcc.c	/^static List lccinputs;		\/* list of input directories *\/$/;"	v	file:
ld	src/tools/lcc/etc/bytecode.c	/^char *ld[] = { 0 };$/;"	v
le	src/tools/lcc/src/prof.c	/^		struct { unsigned int y:16,x:10,index:6; } le;$/;"	m	union:callsite::coordinate	typeref:struct:callsite::coordinate::__anon271	file:
leaf	src/qcommon/cm_local.h	/^	cLeaf_t		leaf;			\/\/ submodels don't reference the main tree$/;"	m	struct:cmodel_s
leaf	src/server/sqlite3.c	/^  u8 leaf;             \/* True if a leaf page *\/$/;"	m	struct:MemPage	file:
leafList_s	src/qcommon/cm_local.h	/^typedef struct leafList_s {$/;"	s
leafList_t	src/qcommon/cm_local.h	/^} leafList_t;$/;"	t	typeref:struct:leafList_s
leafbrushes	src/qcommon/cm_local.h	/^	int			*leafbrushes;$/;"	m	struct:__anon440
leafs	src/qcommon/cm_local.h	/^	cLeaf_t		*leafs;$/;"	m	struct:__anon440
leafsurfaces	src/qcommon/cm_local.h	/^	int			*leafsurfaces;$/;"	m	struct:__anon440
leakyBucket_s	src/server/server.h	/^struct leakyBucket_s {$/;"	s
leakyBucket_t	src/server/server.h	/^typedef struct leakyBucket_s leakyBucket_t;$/;"	t	typeref:struct:leakyBucket_s
leaveFocus	src/ui/ui_shared.h	/^  const char *leaveFocus;        \/\/ select script$/;"	m	struct:itemDef_s
leaveMutex	src/server/sqlite3.c	/^static void leaveMutex(void){$/;"	f	file:
left	src/client/snd_local.h	/^	int			left;	\/\/ the final values will be clamped to +\/- 0x00ffff00 and shifted down$/;"	m	struct:__anon92
left	src/qcommon/qcommon.h	/^	struct	nodetype *left, *right, *parent; \/* tree structure *\/ $/;"	m	struct:nodetype	typeref:struct:nodetype::nodetype
left	src/tools/lcc/lburg/lburg.h	/^	Tree left, right;	\/* operands *\/$/;"	m	struct:tree
leftColumn	src/server/sqlite3.c	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon215	file:
leftCursor	src/server/sqlite3.c	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm	file:
left_to_right	src/tools/lcc/src/c.h	/^	unsigned left_to_right:1;$/;"	m	struct:interface
leftvol	src/client/snd_local.h	/^	int			leftvol;		\/\/ 0-255 volume after spatialization$/;"	m	struct:__anon94
legs	src/cgame/cg_local.h	/^  lerpFrame_t legs, torso, nonseg, weapon;$/;"	m	struct:__anon241
legsAnim	src/cgame/cg_local.h	/^	int			legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:__anon256
legsAnim	src/cgame/cg_local.h	/^	int		legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:__anon257
legsAnim	src/client/client.h	/^	int			legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:alternatePlayerState_s
legsAnim	src/client/client.h	/^	int		legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:alternateEntityState_s
legsAnim	src/qcommon/msg.c	/^	int			legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:alternatePlayerState_s	file:
legsAnim	src/qcommon/q_shared.h	/^	int			legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:playerState_s
legsAnim	src/qcommon/q_shared.h	/^	int		legsAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:entityState_s
legsModel	src/cgame/cg_local.h	/^  qhandle_t   legsModel;$/;"	m	struct:__anon243
legsSkin	src/cgame/cg_local.h	/^  qhandle_t   legsSkin;$/;"	m	struct:__anon243
legsTimer	src/cgame/cg_local.h	/^	int			legsTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:__anon256
legsTimer	src/client/client.h	/^	int			legsTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:alternatePlayerState_s
legsTimer	src/qcommon/msg.c	/^	int			legsTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:alternatePlayerState_s	file:
legsTimer	src/qcommon/q_shared.h	/^	int			legsTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:playerState_s
len	src/qcommon/files.c	/^	unsigned long			len;		\/\/ uncompress file size$/;"	m	struct:fileInPack_s	file:
len	src/server/server.h	/^	int len;$/;"	m	struct:voipServerPacket_s
len	src/tools/lcc/cpp/cpp.h	/^	int	len;$/;"	m	struct:nlist
len	src/tools/lcc/cpp/cpp.h	/^	unsigned int	len;$/;"	m	struct:token
len	src/tools/lcc/src/string.c	/^	int len;$/;"	m	struct:string	file:
length	src/cgame/cg_local.h	/^  int length;$/;"	m	struct:__anon247
length	src/client/snd_codec.h	/^	int length;$/;"	m	struct:snd_stream_s
length	src/qcommon/net_chan.c	/^        int length;$/;"	m	struct:packetQueue_s	file:
length	src/qcommon/parse.c	/^  int length;                     \/\/length of the script in bytes$/;"	m	struct:script_s	file:
length	src/qcommon/vm_powerpc.c	/^	unsigned short length;$/;"	m	struct:dest_instruction	file:
length	src/qcommon/vm_sparc.c	/^	unsigned int		length;$/;"	m	struct:dst_insn	file:
length	src/server/sqlite3.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
length	src/tools/lcc/src/list.c	/^int length(List list) {$/;"	f
lengthFunc	src/server/sqlite3.c	/^static void lengthFunc($/;"	f	file:
lerpAngles	src/cgame/cg_local.h	/^  vec3_t                lerpAngles;$/;"	m	struct:centity_s
lerpFrame	src/cgame/cg_local.h	/^  lerpFrame_t           lerpFrame;$/;"	m	struct:centity_s
lerpFrame_t	src/cgame/cg_local.h	/^} lerpFrame_t;$/;"	t	typeref:struct:__anon235
lerpOrigin	src/cgame/cg_local.h	/^  vec3_t                lerpOrigin;$/;"	m	struct:centity_s
lev1GrabTime	src/game/g_local.h	/^  int               lev1GrabTime;       \/\/TA: for turrets interacting with lev1s$/;"	m	struct:gentity_s
lev1Grabbed	src/game/g_local.h	/^  qboolean          lev1Grabbed;        \/\/TA: for turrets interacting with lev1s$/;"	m	struct:gentity_s
level	src/game/g_admin.h	/^  int level;$/;"	m	struct:g_admin_admin
level	src/game/g_admin.h	/^  int level;$/;"	m	struct:g_admin_level
level	src/game/g_main.c	/^level_locals_t  level;$/;"	v
level	src/tools/lcc/src/c.h	/^			int level;$/;"	m	struct:code::__anon291::__anon292
level	src/tools/lcc/src/sym.c	/^	int level;$/;"	m	struct:table	file:
level	src/tools/lcc/src/sym.c	/^int level = GLOBAL;$/;"	v
level2ZapTS	src/cgame/cg_local.h	/^  qhandle_t   level2ZapTS;$/;"	m	struct:__anon251
level2ZapTS	src/cgame/cg_local.h	/^  trailSystem_t         *level2ZapTS[ LEVEL2_AREAZAP_MAX_TARGETS ];$/;"	m	struct:centity_s
level2ZapTime	src/cgame/cg_local.h	/^  int                   level2ZapTime;$/;"	m	struct:centity_s
levelShot	src/ui/ui_local.h	/^  qhandle_t levelShot;$/;"	m	struct:__anon507
levelStartTime	src/cgame/cg_local.h	/^  int           levelStartTime;$/;"	m	struct:__anon253
level_locals_t	src/game/g_local.h	/^} level_locals_t;$/;"	t	typeref:struct:__anon316
lf	src/cgame/cg_local.h	/^  lerpFrame_t       lf;$/;"	m	struct:particle_s
lfs	src/cgame/cg_local.h	/^  lightFlareStatus_t    lfs;$/;"	m	struct:centity_s
lg2	src/game/bg_lib.c	/^lg2     =  6.9314718246e-01, \/* 0x3f317218 *\/$/;"	v	file:
lg2_h	src/game/bg_lib.c	/^lg2_h   =  6.93145752e-01, \/* 0x3f317200 *\/$/;"	v	file:
lg2_l	src/game/bg_lib.c	/^lg2_l   =  1.42860654e-06, \/* 0x35bfbe8c *\/$/;"	v	file:
lhead	src/qcommon/qcommon.h	/^	node_t*		lhead;$/;"	m	struct:__anon432
lhs	src/game/g_maprotation.c	/^  conditionVariable_t lhs;$/;"	m	struct:condition_s	file:
lhs	src/server/sqlite3.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon218	file:
lhs	src/server/sqlite3.c	/^  fts5YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon222	file:
lhs	src/tools/lcc/lburg/lburg.h	/^	Nonterm lhs;		\/* lefthand side nonterminal *\/$/;"	m	struct:rule
lhscount	src/tools/lcc/lburg/lburg.h	/^	int lhscount;		\/* # times nt appears in a rule lhs *\/$/;"	m	struct:nonterm
libversion	src/server/sqlite3.c	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion_number	src/server/sqlite3.c	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	file:
lifeTime	src/cgame/cg_local.h	/^  int               lifeTime;$/;"	m	struct:particle_s
lifeTime	src/cgame/cg_local.h	/^  int             lifeTime;$/;"	m	struct:baseParticle_s
lifeTime	src/cgame/cg_local.h	/^  int             lifeTime;$/;"	m	struct:baseTrailSystem_s
lifeTimeRandFrac	src/cgame/cg_local.h	/^  float           lifeTimeRandFrac;$/;"	m	struct:baseParticle_s
lightDir	src/renderergl1/tr_local.h	/^	vec3_t		lightDir;		\/\/ normalized direction towards light$/;"	m	struct:__anon128
lightDir	src/renderergl2/tr_local.h	/^	vec3_t		lightDir;		\/\/ normalized direction towards light, in world space$/;"	m	struct:__anon8
lightFlareStatus_s	src/cgame/cg_local.h	/^typedef struct lightFlareStatus_s$/;"	s
lightFlareStatus_t	src/cgame/cg_local.h	/^} lightFlareStatus_t;$/;"	t	typeref:struct:lightFlareStatus_s
lightGridBounds	src/renderergl1/tr_local.h	/^	int			lightGridBounds[3];$/;"	m	struct:__anon157
lightGridBounds	src/renderergl2/tr_local.h	/^	int			lightGridBounds[3];$/;"	m	struct:__anon49
lightGridData	src/renderergl1/tr_local.h	/^	byte		*lightGridData;$/;"	m	struct:__anon157
lightGridData	src/renderergl2/tr_local.h	/^	byte		*lightGridData;$/;"	m	struct:__anon49
lightGridInverseSize	src/renderergl1/tr_local.h	/^	vec3_t		lightGridInverseSize;$/;"	m	struct:__anon157
lightGridInverseSize	src/renderergl2/tr_local.h	/^	vec3_t		lightGridInverseSize;$/;"	m	struct:__anon49
lightGridOrigin	src/renderergl1/tr_local.h	/^	vec3_t		lightGridOrigin;$/;"	m	struct:__anon157
lightGridOrigin	src/renderergl2/tr_local.h	/^	vec3_t		lightGridOrigin;$/;"	m	struct:__anon49
lightGridSize	src/renderergl1/tr_local.h	/^	vec3_t		lightGridSize;$/;"	m	struct:__anon157
lightGridSize	src/renderergl2/tr_local.h	/^	vec3_t		lightGridSize;$/;"	m	struct:__anon49
lightOrigin	src/renderergl1/tr_shade_calc.c	/^vec3_t lightOrigin = { -960, 1980, 96 };		\/\/ FIXME: track dynamically$/;"	v
lightOrigin	src/renderergl2/tr_local.h	/^	vec3_t lightOrigin;$/;"	m	struct:pshadow_s
lightRadius	src/renderergl2/tr_local.h	/^	float  lightRadius;$/;"	m	struct:pshadow_s
lightViewAxis	src/renderergl2/tr_local.h	/^	vec3_t lightViewAxis[3];$/;"	m	struct:pshadow_s
lightallShader	src/renderergl2/tr_local.h	/^	shaderProgram_t lightallShader[LIGHTDEF_COUNT];$/;"	m	struct:__anon63
lightdir	src/renderergl2/tr_local.h	/^	vec3_t          lightdir;$/;"	m	struct:__anon45
lightingCalculated	src/renderergl1/tr_local.h	/^	qboolean	lightingCalculated;$/;"	m	struct:__anon128
lightingCalculated	src/renderergl2/tr_local.h	/^	qboolean	lightingCalculated;$/;"	m	struct:__anon8
lightingOrigin	src/renderercommon/tr_types.h	/^	vec3_t		lightingOrigin;		\/\/ so multi-part models can be lit identically (RF_LIGHTING_ORIGIN)$/;"	m	struct:__anon114
lightmap	src/qcommon/qfiles.h	/^	float		lightmap[2];$/;"	m	struct:__anon415
lightmap	src/renderergl2/tr_local.h	/^	vec2_t          lightmap;$/;"	m	struct:__anon45
lightmapHeight	src/qcommon/qfiles.h	/^	int			lightmapWidth, lightmapHeight;$/;"	m	struct:__anon417
lightmapIndex	src/renderergl1/tr_local.h	/^	int			lightmapIndex;			\/\/ for a shader to match, both name and lightmapIndex must match$/;"	m	struct:shader_s
lightmapIndex	src/renderergl2/tr_local.h	/^	int			lightmapIndex;			\/\/ for a shader to match, both name and lightmapIndex must match$/;"	m	struct:shader_s
lightmapNum	src/qcommon/qfiles.h	/^	int			lightmapNum;$/;"	m	struct:__anon417
lightmapOrigin	src/qcommon/qfiles.h	/^	vec3_t		lightmapOrigin;$/;"	m	struct:__anon417
lightmapSize	src/renderergl2/tr_local.h	/^	int						lightmapSize;$/;"	m	struct:__anon63
lightmapVecs	src/qcommon/qfiles.h	/^	vec3_t		lightmapVecs[3];	\/\/ for patches, [0] and [1] are lodbounds$/;"	m	struct:__anon417
lightmapWidth	src/qcommon/qfiles.h	/^	int			lightmapWidth, lightmapHeight;$/;"	m	struct:__anon417
lightmapX	src/qcommon/qfiles.h	/^	int			lightmapX, lightmapY;$/;"	m	struct:__anon417
lightmapY	src/qcommon/qfiles.h	/^	int			lightmapX, lightmapY;$/;"	m	struct:__anon417
lightmaps	src/renderergl1/tr_local.h	/^	image_t					**lightmaps;$/;"	m	struct:__anon163
lightmaps	src/renderergl2/tr_local.h	/^	image_t					**lightmaps;$/;"	m	struct:__anon63
likeFunc	src/server/sqlite3.c	/^static void likeFunc($/;"	f	file:
likeInfoAlt	src/server/sqlite3.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	src/server/sqlite3.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likely	src/server/sqlite3.c	9513;"	d	file:
limit	src/server/sqlite3.c	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
limit	src/tools/lcc/src/alloc.c	/^	char *limit;$/;"	m	struct:block	file:
limit	src/tools/lcc/src/input.c	/^unsigned char *limit;	\/* points to last character + 1 *\/$/;"	v
limits	src/tools/lcc/src/c.h	/^		} limits;$/;"	m	union:symbol::__anon296	typeref:struct:symbol::__anon296::__anon299
linbuf	src/client/cl_cin.c	/^	byte				linbuf[DEFAULT_CIN_WIDTH*DEFAULT_CIN_HEIGHT*4*2];$/;"	m	struct:__anon99	file:
line	src/qcommon/common.c	/^	int line;$/;"	m	struct:hunkblock_s	file:
line	src/qcommon/common.c	/^	int line;$/;"	m	struct:zonedebug_s	file:
line	src/qcommon/parse.c	/^  int line;                       \/\/current line in script$/;"	m	struct:script_s	file:
line	src/qcommon/parse.c	/^  int line;                     \/\/line the token was on$/;"	m	struct:token_s	file:
line	src/tools/lcc/cpp/cpp.h	/^	int	line;		\/* current line number *\/$/;"	m	struct:source
line	src/tools/lcc/src/input.c	/^char *line;		\/* current line *\/$/;"	v
lineBuffer	src/tools/asm/q3asm.c	/^char	lineBuffer[MAX_LINE_LENGTH];$/;"	v
lineCoords	src/ui/ui_shared.c	/^  float     lineCoords[ MAX_WRAP_LINES ][ 2 ];$/;"	m	struct:__anon521	file:
lineParseOffset	src/tools/asm/q3asm.c	/^int		lineParseOffset;$/;"	v
linearize	src/tools/lcc/src/gen.c	/^static void linearize(Node p, Node next) {$/;"	f	file:
lineinc	src/tools/lcc/cpp/cpp.h	/^	int	lineinc;	\/* adjustment for \\\\n lines *\/$/;"	m	struct:source
lineno	src/tools/lcc/src/input.c	/^int lineno;		\/* line number of current line *\/$/;"	v
lines	src/ui/ui_local.h	/^  char *lines[MAX_SERVERSTATUS_LINES][4];$/;"	m	struct:__anon511
lines	src/ui/ui_shared.c	/^  char      lines[ MAX_WRAP_LINES ][ MAX_WRAP_TEXT ];$/;"	m	struct:__anon521	file:
linescrossed	src/qcommon/parse.c	/^  int linescrossed;             \/\/lines crossed in white space$/;"	m	struct:token_s	file:
linewidth	src/client/cl_console.c	/^	int 	linewidth;		\/\/ characters across screen$/;"	m	struct:__anon102	file:
link	src/tools/lcc/etc/lcc.c	/^	List link;		\/* next list element *\/$/;"	m	struct:list	file:
link	src/tools/lcc/lburg/lburg.c	/^	struct block *link;$/;"	m	struct:block	typeref:struct:block::block	file:
link	src/tools/lcc/lburg/lburg.c	/^	struct entry *link;$/;"	m	struct:entry	typeref:struct:entry::entry	file:
link	src/tools/lcc/lburg/lburg.h	/^	Nonterm link;		\/* next terminal in number order *\/$/;"	m	struct:nonterm
link	src/tools/lcc/lburg/lburg.h	/^	Rule link;		\/* next rule in ern order *\/$/;"	m	struct:rule
link	src/tools/lcc/lburg/lburg.h	/^	Term link;		\/* next terminal in esn order *\/$/;"	m	struct:term
link	src/tools/lcc/src/c.h	/^	Field link;$/;"	m	struct:field
link	src/tools/lcc/src/c.h	/^	List link;$/;"	m	struct:list
link	src/tools/lcc/src/c.h	/^	Node link;$/;"	m	struct:node
link	src/tools/lcc/src/prof.c	/^	struct func *link;$/;"	m	struct:func	typeref:struct:func::func	file:
link	src/tools/lcc/src/profio.c	/^			struct caller *link;	\/* link to next caller *\/$/;"	m	struct:file::func::caller	typeref:struct:file::func::caller::caller	file:
link	src/tools/lcc/src/profio.c	/^		struct func *link;		\/* link to next function *\/$/;"	m	struct:file::func	typeref:struct:file::func::func	file:
link	src/tools/lcc/src/profio.c	/^	struct file *link;		\/* link to next file *\/$/;"	m	struct:file	typeref:struct:file::file	file:
link	src/tools/lcc/src/string.c	/^	struct string *link;$/;"	m	struct:string	typeref:struct:string::string	file:
link	src/tools/lcc/src/sym.c	/^		struct entry *link;$/;"	m	struct:table::entry	typeref:struct:table::entry::entry	file:
link	src/tools/lcc/src/types.c	/^	struct entry *link;$/;"	m	struct:entry	typeref:struct:entry::entry	file:
linkcount	src/game/g_public.h	/^  int     linkcount;$/;"	m	struct:__anon361
linked	src/game/g_public.h	/^  qboolean  linked;       \/\/ qfalse if not in any good cluster$/;"	m	struct:__anon361
list	src/qcommon/cm_local.h	/^	int		*list;$/;"	m	struct:leafList_s
list	src/server/sqlite3.c	/^    } list;$/;"	m	union:Mem3Block::__anon204	typeref:struct:Mem3Block::__anon204::__anon206	file:
list	src/server/sqlite3.c	/^  SorterList list;                \/* List for thread to write to a PMA *\/$/;"	m	struct:SortSubtask	file:
list	src/server/sqlite3.c	/^  SorterList list;                \/* List of in-memory records *\/$/;"	m	struct:VdbeSorter	file:
list	src/server/sv_world.c	/^	int			*list;$/;"	m	struct:__anon181	file:
list	src/tools/lcc/etc/lcc.c	/^struct list {		\/* circular list nodes: *\/$/;"	s	file:
list	src/tools/lcc/src/c.h	/^struct list {$/;"	s
list	src/tools/lcc/src/dag.c	/^static void list(Node p) {$/;"	f	file:
list	src/ui/ui_shared.h	/^    listBoxDef_t   *list;$/;"	m	union:itemDef_s::__anon502
listBoxDef_s	src/ui/ui_shared.h	/^typedef struct listBoxDef_s$/;"	s
listBoxDef_t	src/ui/ui_shared.h	/^listBoxDef_t;$/;"	t	typeref:struct:listBoxDef_s
listed	src/tools/lcc/src/config.h	/^	unsigned listed:1;$/;"	m	struct:__anon274
listen_addr	src/master/master.c	/^static struct in_addr listen_addr;$/;"	v	typeref:struct:in_addr	file:
listen_name	src/master/master.c	/^static const char* listen_name = NULL;$/;"	v	file:
listener_axis	src/client/snd_dma.c	/^static vec3_t		listener_axis[3];$/;"	v	file:
listener_number	src/client/snd_dma.c	/^static int			listener_number;$/;"	v	file:
listener_origin	src/client/snd_dma.c	/^static vec3_t		listener_origin;$/;"	v	file:
listnodes	src/tools/lcc/src/dag.c	/^Node listnodes(Tree tp, int tlab, int flab) {$/;"	f
litLength	src/qcommon/qfiles.h	/^	int		litLength;			\/\/ ( dataLength - litLength ) should be byteswapped on load$/;"	m	struct:__anon387
little_endian	src/tools/lcc/src/c.h	/^	unsigned little_endian:1;$/;"	m	struct:interface
llist	src/game/g_admin.c	/^struct llist$/;"	s	file:
llist	src/tools/lcc/etc/lcc.c	/^static List llist[2];		\/* loader files, flags *\/$/;"	v	file:
llsort	src/game/g_admin.c	/^static void llsort( struct llist **head, int compar( const void *, const void * ) )$/;"	f	file:
lm	src/client/libmumblelink.c	/^static LinkedMem *lm = NULL;$/;"	v	file:
lo	src/qcommon/q_shared.h	/^  unsigned int lo;$/;"	m	struct:__anon463
load	src/client/snd_codec.h	/^	CODEC_LOAD load;$/;"	m	struct:snd_codec_s
loadAnalysis	src/server/sqlite3.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadExt	src/server/sqlite3.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
loadStat4	src/server/sqlite3.c	/^static int loadStat4(sqlite3 *db, const char *zDb){$/;"	f	file:
loadStatTbl	src/server/sqlite3.c	/^static int loadStatTbl($/;"	f	file:
loadWord	src/qcommon/vm_interpreted.c	/^    static ID_INLINE int loadWord(void *addr) {$/;"	f	file:
loadWord	src/qcommon/vm_interpreted.c	/^static ID_INLINE unsigned int loadWord(void *addr) {$/;"	f	file:
loadWord	src/qcommon/vm_interpreted.c	134;"	d	file:
load_extension	src/server/sqlite3.c	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines	file:
loaded	src/cgame/cg_local.h	/^  qboolean      loaded;$/;"	m	struct:__anon252
loading	src/cgame/cg_local.h	/^  qboolean      loading;                            \/\/ don't defer players at initial startup$/;"	m	struct:__anon249
loc	src/qcommon/qcommon.h	/^	node_t*		loc[HMAX+1];$/;"	m	struct:__anon432
loc	src/tools/lcc/src/c.h	/^			Symbol loc;$/;"	m	struct:symbol::__anon296::__anon300
local	src/client/snd_openal.c	/^	qboolean	local;			\/\/ Is this local (relative to the cam)$/;"	m	struct:src_s	file:
local	src/qcommon/puff.c	75;"	d	file:
local	src/server/sqlite3.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
local	src/tools/lcc/src/bytecode.c	/^static void I(local)(Symbol p) {$/;"	f	file:
local	src/tools/lcc/src/c.h	/^void (*local)(Symbol);$/;"	m	struct:interface
local	src/tools/lcc/src/null.c	/^static void I(local)(Symbol p) {}$/;"	f	file:
local	src/tools/lcc/src/symbolic.c	/^static void I(local)(Symbol p) {$/;"	f	file:
localClient	src/game/g_local.h	/^  qboolean            localClient;        \/\/ true if "ip" info key is "localhost"$/;"	m	struct:__anon311
localIP	src/qcommon/net_ip.c	/^static nip_localaddr_t localIP[MAX_IPS];$/;"	v	file:
localOrigin	src/qcommon/qfiles.h	/^	vec3_t		localOrigin;		\/\/ midpoint of bounds, used for sphere cull$/;"	m	struct:__anon399
localOrigin	src/qcommon/qfiles.h	/^	vec3_t		localOrigin;$/;"	m	struct:md3Frame_s
localOrigin	src/qcommon/qfiles.h	/^        vec3_t          localOrigin;		\/\/ midpoint of bounds, used for sphere cull$/;"	m	struct:__anon401
localOrigin	src/renderergl1/tr_local.h	/^	vec3_t			localOrigin;$/;"	m	struct:__anon153
localOrigin	src/renderergl1/tr_local.h	/^	vec3_t			localOrigin;$/;"	m	struct:srfGridMesh_s
localOrigin	src/renderergl2/tr_local.h	/^	float           localOrigin[3];$/;"	m	struct:__anon50
localOrigin	src/renderergl2/tr_local.h	/^	vec3_t			localOrigin;$/;"	m	struct:cullinfo_s
localServer	src/cgame/cg_local.h	/^  qboolean      localServer;            \/\/ detected on startup by checking sv_running$/;"	m	struct:__anon253
localServers	src/client/client.h	/^	serverInfo_t	localServers[MAX_OTHER_SERVERS];$/;"	m	struct:__anon90
local_data_s	src/qcommon/vm_powerpc.c	/^struct local_data_s {$/;"	s	file:
local_data_t	src/qcommon/vm_powerpc.c	/^typedef struct local_data_s local_data_t;$/;"	t	typeref:struct:local_data_s	file:
local_ioerr	src/server/sqlite3.c	/^static void local_ioerr(){$/;"	f	file:
localaddr	src/tools/lcc/src/stmt.c	/^static Symbol localaddr(Tree p) {$/;"	f	file:
locals	src/tools/lcc/src/c.h	/^			Symbol *locals;$/;"	m	struct:code::__anon291::__anon292
localtime	src/server/sqlite3.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtimeOffset	src/server/sqlite3.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
locateCamera	src/game/g_misc.c	/^void locateCamera( gentity_t *ent )$/;"	f
location	src/cgame/cg_local.h	/^  int         location;                   \/\/ location index for team mode$/;"	m	struct:__anon243
location	src/game/g_local.h	/^  int                 location;           \/\/ player locations$/;"	m	struct:__anon311
locationHead	src/game/g_local.h	/^  gentity_t         *locationHead;                \/\/ head of the location list$/;"	m	struct:__anon316
loci	src/tools/lcc/src/sym.c	/^List loci, symbols;$/;"	v
lock	src/server/sqlite3.c	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree	file:
lockBlobLauncherFire	src/game/g_weapon.c	/^void lockBlobLauncherFire( gentity_t *ent )$/;"	f
lockBtree	src/server/sqlite3.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtreeMutex	src/server/sqlite3.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockError	src/server/sqlite3.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockMask	src/server/sqlite3.c	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe	file:
lockProxy	src/server/sqlite3.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	src/server/sqlite3.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockTrace	src/server/sqlite3.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
locked	src/server/sqlite3.c	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree	file:
lockingContext	src/server/sqlite3.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
locktype	src/server/sqlite3.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
locus	src/tools/lcc/src/sym.c	/^void locus(Table tp, Coordinate *cp) {$/;"	f
lodFixed	src/renderergl1/tr_local.h	/^	int				lodFixed;$/;"	m	struct:srfGridMesh_s
lodFixed	src/renderergl2/tr_local.h	/^	int				lodFixed;$/;"	m	struct:srfBspSurface_s
lodOrigin	src/renderergl1/tr_local.h	/^	vec3_t			lodOrigin;$/;"	m	struct:srfGridMesh_s
lodOrigin	src/renderergl2/tr_local.h	/^	vec3_t			lodOrigin;$/;"	m	struct:srfBspSurface_s
lodRadius	src/renderergl1/tr_local.h	/^	float			lodRadius;$/;"	m	struct:srfGridMesh_s
lodRadius	src/renderergl2/tr_local.h	/^	float			lodRadius;$/;"	m	struct:srfBspSurface_s
lodStitched	src/renderergl1/tr_local.h	/^	int				lodStitched;$/;"	m	struct:srfGridMesh_s
lodStitched	src/renderergl2/tr_local.h	/^	int				lodStitched;$/;"	m	struct:srfBspSurface_s
log	src/server/sqlite3.c	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
logBadConnection	src/server/sqlite3.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logFile	src/game/g_local.h	/^  fileHandle_t      logFile;$/;"	m	struct:__anon316
logfile	src/qcommon/common.c	/^static fileHandle_t logfile;$/;"	v	file:
longRanged	src/game/bg_public.h	/^  qboolean  longRanged;$/;"	m	struct:__anon355
longdouble	src/tools/lcc/src/types.c	/^Type longdouble;		\/* long double *\/$/;"	v
longdoublemetric	src/tools/lcc/src/c.h	/^	Metrics longdoublemetric;$/;"	m	struct:interface
longlong	src/tools/lcc/src/types.c	/^Type longlong;			\/* long long *\/$/;"	v
longlongmetric	src/tools/lcc/src/c.h	/^	Metrics longlongmetric;$/;"	m	struct:interface
longmetric	src/tools/lcc/src/c.h	/^	Metrics longmetric;$/;"	m	struct:interface
longtype	src/tools/lcc/src/types.c	/^Type longtype;			\/* long *\/$/;"	v
lookaside	src/server/sqlite3.c	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3	file:
lookedForServer	src/tools/asm/cmdlib.c	/^qboolean lookedForServer = qfalse;$/;"	v
lookup	src/tools/lcc/cpp/nlist.c	/^lookup(Token *tp, int install)$/;"	f
lookup	src/tools/lcc/lburg/lburg.c	/^static void *lookup(char *name) {$/;"	f	file:
lookup	src/tools/lcc/src/sym.c	/^Symbol lookup(const char *name, Table tp) {$/;"	f
lookupName	src/server/sqlite3.c	/^static int lookupName($/;"	f	file:
lookuparg	src/tools/lcc/cpp/macro.c	/^lookuparg(Nlist *mac, Token *tp)$/;"	f
loopActiveCnt	src/client/snd_openal.c	/^	int				loopActiveCnt;		\/\/ number of playing loops using this sfx$/;"	m	struct:alSfx_s	file:
loopAddedThisFrame	src/client/snd_openal.c	/^	qboolean				loopAddedThisFrame;$/;"	m	struct:sentity_s	file:
loopCnt	src/client/snd_openal.c	/^	int				loopCnt;		\/\/ number of loops using this sfx$/;"	m	struct:alSfx_s	file:
loopFrames	src/game/bg_public.h	/^  int   loopFrames;     \/\/ 0 to numFrames$/;"	m	struct:animation_s
loopPriority	src/client/snd_openal.c	/^	alSrcPriority_t	loopPriority;$/;"	m	struct:sentity_s	file:
loopSfx	src/client/snd_openal.c	/^	sfxHandle_t			loopSfx;$/;"	m	struct:sentity_s	file:
loopSound	src/cgame/cg_local.h	/^	int			loopSound;$/;"	m	struct:__anon256
loopSound	src/cgame/cg_local.h	/^	int		loopSound;		\/\/ constantly loop this sound$/;"	m	struct:__anon257
loopSound	src/client/client.h	/^	int			loopSound;$/;"	m	struct:alternatePlayerState_s
loopSound	src/client/client.h	/^	int		loopSound;		\/\/ constantly loop this sound$/;"	m	struct:alternateEntityState_s
loopSound	src/qcommon/msg.c	/^	int			loopSound;$/;"	m	struct:alternatePlayerState_s	file:
loopSound	src/qcommon/q_shared.h	/^	int			loopSound;$/;"	m	struct:playerState_s
loopSound	src/qcommon/q_shared.h	/^	int		loopSound;		\/\/ constantly loop this sound$/;"	m	struct:entityState_s
loopSound_s	src/client/snd_local.h	/^typedef struct loopSound_s {$/;"	s
loopSound_t	src/client/snd_local.h	/^} loopSound_t;$/;"	t	typeref:struct:loopSound_s
loopSounds	src/client/snd_dma.c	/^static loopSound_t		loopSounds[MAX_GENTITIES];$/;"	v	file:
loopSpeakerPos	src/client/snd_openal.c	/^	vec3_t		loopSpeakerPos;		\/\/ Origin of the loop speaker$/;"	m	struct:src_s	file:
loop_channels	src/client/snd_dma.c	/^channel_t   loop_channels[MAX_CHANNELS];$/;"	v
loopback_t	src/qcommon/net_chan.c	/^} loopback_t;$/;"	t	typeref:struct:__anon448	file:
loopbacks	src/qcommon/net_chan.c	/^loopback_t	loopbacks[2];$/;"	v
looped	src/cgame/cg_local.h	/^  qboolean    looped;$/;"	m	struct:__anon244
looping	src/client/cl_cin.c	/^	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;$/;"	m	struct:__anon100	file:
loopmsg_t	src/qcommon/net_chan.c	/^} loopmsg_t;$/;"	t	typeref:struct:__anon447	file:
low	src/ui/ui_shared.h	/^  float    low;$/;"	m	struct:__anon500
lowAmmoWarning	src/cgame/cg_local.h	/^  int           lowAmmoWarning;   \/\/ 1 = low, 2 = empty$/;"	m	struct:__anon249
low_priv_user	src/master/master.c	/^static const char* low_priv_user = DEFAULT_LOW_PRIV_USER;$/;"	v	file:
lowerFunc	src/server/sqlite3.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lp	src/tools/lcc/cpp/cpp.h	/^	Token	*lp;		\/* last+1 token used *\/$/;"	m	struct:tokenrow
lru	src/server/sqlite3.c	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache	file:
lru	src/server/sqlite3.c	/^  PgHdr1 lru;                    \/* The beginning and end of the LRU list *\/$/;"	m	struct:PGroup	file:
lsb	src/tools/lcc/src/c.h	/^	short lsb;$/;"	m	struct:field
lseek	src/server/sqlite3.c	27837;"	d	file:
lshift	src/qcommon/md4.c	49;"	d	file:
lt	src/qcommon/vm_powerpc_asm.h	107;"	d
ltail	src/qcommon/qcommon.h	/^	node_t*		ltail;$/;"	m	struct:__anon432
ltov	src/tools/lcc/src/list.c	/^void *ltov(List *list, unsigned arena) {$/;"	f
luciAmmoReduction	src/game/bg_public.h	/^  float  luciAmmoReduction;$/;"	m	struct:__anon330
lump_t	src/qcommon/qfiles.h	/^} lump_t;$/;"	t	typeref:struct:__anon405
lumps	src/qcommon/qfiles.h	/^	lump_t		lumps[HEADER_LUMPS];$/;"	m	struct:__anon406
lvalue	src/tools/lcc/src/expr.c	/^Tree lvalue(Tree p) {$/;"	f
m	src/qcommon/md4.c	/^static struct mdfour *m;$/;"	v	typeref:struct:mdfour	file:
m	src/server/sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	src/server/sqlite3.c	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config	file:
mLock	src/server/sqlite3.c	/^  u32 mLock;$/;"	m	struct:sqlite3rbu	file:
mPragFlag	src/server/sqlite3.c	/^  u8 mPragFlag;             \/* Zero or more PragFlag_XXX values *\/$/;"	m	struct:sPragmaNames	file:
m_entersound	src/ui/ui_atoms.c	/^qboolean    m_entersound;    \/\/ after a frame, so caching won't disrupt the sound$/;"	v
m_eq_1	src/server/sqlite3.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_filter	src/client/cl_main.c	/^cvar_t	*m_filter;$/;"	v
m_forward	src/client/cl_main.c	/^cvar_t	*m_forward;$/;"	v
m_gt_0	src/server/sqlite3.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_1	src/server/sqlite3.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_pitch	src/client/cl_main.c	/^cvar_t	*m_pitch;$/;"	v
m_side	src/client/cl_main.c	/^cvar_t	*m_side;$/;"	v
m_yaw	src/client/cl_main.c	/^cvar_t	*m_yaw;$/;"	v
made	src/game/g_admin.h	/^  char made[ 20 ]; \/\/ "YYYY-MM-DD hh:mm:ss"$/;"	m	struct:g_admin_ban
madeTable	src/client/snd_wavelet.c	/^static qboolean madeTable = qfalse;$/;"	v	file:
mag	src/cgame/cg_local.h	/^  float       mag;$/;"	m	struct:pMoveValues_u
magRandFrac	src/cgame/cg_local.h	/^  float       magRandFrac;$/;"	m	struct:pMoveValues_u
magic	src/qcommon/common.c	/^	int		magic;$/;"	m	struct:__anon450	file:
magic	src/renderercommon/iqm.h	/^    char magic[16];$/;"	m	struct:iqmheader
magic	src/server/sqlite3.c	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3	file:
magic	src/server/sqlite3.c	/^  u32 magic;                  \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	src/server/sqlite3.c	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe	file:
magic1	src/server/sqlite3.c	/^  u32 magic1;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic2	src/server/sqlite3.c	/^  u32 magic2;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magnitude	src/cgame/cg_local.h	/^  float   magnitude;$/;"	m	struct:baseTrailJitter_s
mailinglist	src/tools/lcc/doc/install.html	/^<h2><a NAME="mailinglist">Keeping in Touch<\/a><\/h2>$/;"	a
main	src/master/master.c	/^int main (int argc, const char* argv [])$/;"	f
main	src/null/null_main.c	/^void main (int argc, char **argv) {$/;"	f
main	src/sys/sys_main.c	/^int main( int argc, char **argv )$/;"	f
main	src/tools/asm/q3asm.c	/^int main( int argc, char **argv ) {$/;"	f
main	src/tools/lcc/cpp/cpp.c	/^main(int argc, char **argv)$/;"	f
main	src/tools/lcc/etc/lcc.c	/^int main(int argc, char *argv[]) {$/;"	f
main	src/tools/lcc/lburg/lburg.c	/^int main(int argc, char *argv[]) {$/;"	f
main	src/tools/lcc/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f
main_init	src/tools/lcc/src/main.c	/^void main_init(int argc, char *argv[]) {$/;"	f
mainzone	src/qcommon/common.c	/^memzone_t	*mainzone;$/;"	v
major	src/server/sqlite3.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	src/server/sqlite3.c	/^  fts5YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:fts5yyStackEntry	file:
makespace	src/tools/lcc/cpp/tokens.c	/^makespace(Tokenrow *trp)$/;"	f
maketokenrow	src/tools/lcc/cpp/tokens.c	/^maketokenrow(int size, Tokenrow *trp)$/;"	f
malloc	src/server/sqlite3.c	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
malloc64	src/server/sqlite3.c	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
mallocFailed	src/server/sqlite3.c	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk	file:
mallocFailed	src/server/sqlite3.c	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3	file:
mallocWithAlarm	src/server/sqlite3.c	/^static int mallocWithAlarm(int n, void **pp){$/;"	f	file:
manufacturer	src/renderercommon/tr_image_pcx.c	/^	char	manufacturer;$/;"	m	struct:__anon124	file:
map	src/game/g_maprotation.c	/^    map_t       map;$/;"	m	union:node_s::__anon323	file:
map	src/renderergl2/tr_local.h	/^	int map;$/;"	m	struct:__anon76
map	src/tools/lcc/src/lex.c	/^static unsigned char map[256] = { \/* 000 nul *\/	0,$/;"	v	file:
map	src/tools/lcc/src/prof.c	/^struct map {		\/* source code map; 200 coordinates\/map *\/$/;"	s	file:
mapCount	src/ui/ui_local.h	/^  int mapCount;$/;"	m	struct:__anon518
mapEntries	src/game/g_playmap.h	/^  playMapPoolEntry_t mapEntries[ MAX_PLAYMAP_POOL_ENTRIES ];$/;"	m	struct:playMapPool_s
mapInfo	src/ui/ui_local.h	/^mapInfo;$/;"	t	typeref:struct:__anon507
mapLightScale	src/renderergl2/tr_local.h	/^	float                   mapLightScale;$/;"	m	struct:__anon63
mapList	src/ui/ui_local.h	/^  mapInfo mapList[MAX_MAPS];$/;"	m	struct:__anon518
mapLoadName	src/ui/ui_local.h	/^  const char *mapLoadName;$/;"	m	struct:__anon507
mapName	src/client/client.h	/^	char	  	mapName[MAX_NAME_LENGTH];$/;"	m	struct:__anon89
mapName	src/game/g_playmap.h	/^  char *mapName;		\/* Name of map *\/$/;"	m	struct:playMapPoolEntry_s
mapName	src/game/g_playmap.h	/^  char *mapName;$/;"	m	struct:playMap_s
mapName	src/ui/ui_local.h	/^  const char *mapName;$/;"	m	struct:__anon507
mapRestart	src/cgame/cg_local.h	/^  qboolean      mapRestart;                         \/\/ set on a map restart to set back the weapon$/;"	m	struct:__anon249
mapRotation_s	src/game/g_maprotation.c	/^typedef struct mapRotation_s$/;"	s	file:
mapRotation_t	src/game/g_maprotation.c	/^} mapRotation_t;$/;"	t	typeref:struct:mapRotation_s	file:
mapRotations	src/game/g_maprotation.c	/^static mapRotations_t mapRotations;$/;"	v	file:
mapRotations_s	src/game/g_maprotation.c	/^typedef struct mapRotations_s$/;"	s	file:
mapRotations_t	src/game/g_maprotation.c	/^} mapRotations_t;$/;"	t	typeref:struct:mapRotations_s	file:
mapSurfaceType_t	src/qcommon/qfiles.h	/^} mapSurfaceType_t;$/;"	t	typeref:enum:__anon416
mapType	src/game/g_playmap.h	/^  char *mapType;		\/* Type of map like ATCS, NIVEUS, etc *\/$/;"	m	struct:playMapPoolEntry_s
map_s	src/game/g_maprotation.c	/^typedef struct map_s$/;"	s	file:
map_t	src/game/g_maprotation.c	/^} map_t;$/;"	t	typeref:struct:map_s	file:
maplist	src/tools/lcc/src/prof.c	/^static List maplist;	\/* list of struct map *'s *\/$/;"	v	file:
mapname	src/cgame/cg_local.h	/^  char          mapname[ MAX_QPATH ];$/;"	m	struct:__anon253
mapname	src/client/client.h	/^	char		mapname[MAX_QPATH];	\/\/ extracted from CS_SERVERINFO$/;"	m	struct:__anon86
mark	src/qcommon/common.c	/^	int		mark;$/;"	m	struct:__anon451	file:
markDeconstruct	src/cgame/cg_local.h	/^  qboolean      markDeconstruct;        \/\/ Whether or not buildables are marked$/;"	m	struct:__anon253
markDeconstructor	src/game/g_local.h	/^  int               markDeconstructor;  \/\/ number of the builder that marked the deconstructed buildable$/;"	m	struct:gentity_s
markFragment_t	src/qcommon/q_shared.h	/^} markFragment_t;$/;"	t	typeref:struct:__anon471
markPoly_s	src/cgame/cg_local.h	/^typedef struct markPoly_s$/;"	s
markPoly_t	src/cgame/cg_local.h	/^} markPoly_t;$/;"	t	typeref:struct:markPoly_s
markShader	src/cgame/cg_local.h	/^  qhandle_t         markShader;$/;"	m	struct:markPoly_s
markTermAsChild	src/server/sqlite3.c	/^static void markTermAsChild(WhereClause *pWC, int iChild, int iParent){$/;"	f	file:
markTotal	src/cgame/cg_marks.c	/^static int  markTotal;$/;"	v	file:
marked	src/tools/lcc/src/c.h	/^	unsigned marked;$/;"	m	struct:__anon282
markedBuildables	src/game/g_local.h	/^  gentity_t         *markedBuildables[ MAX_GENTITIES ];$/;"	m	struct:__anon316
markedShader	src/cgame/cg_local.h	/^  qhandle_t     markedShader;$/;"	m	struct:__anon252
marksurfaces	src/renderergl1/tr_local.h	/^	msurface_t	**marksurfaces;$/;"	m	struct:__anon157
marksurfaces	src/renderergl2/tr_local.h	/^	int         *marksurfaces;$/;"	m	struct:__anon49
mask	src/game/g_admin.h	/^  int mask;$/;"	m	struct:__anon376
mask	src/qcommon/vm_powerpc_asm.c	/^	unsigned long mask;$/;"	m	struct:powerpc_opcode	file:
mask	src/qcommon/vm_sparc.c	/^	unsigned int	mask;$/;"	m	struct:sparc_opcode	file:
mask	src/renderercommon/iqm.h	/^    unsigned int mask;$/;"	m	struct:iqmpose
mask	src/server/sqlite3.c	/^  struct {int value; int mask;} yy207;$/;"	m	struct:__anon216::__anon217	file:
mask	src/tools/lcc/src/config.h	/^	unsigned mask;$/;"	m	struct:__anon275
maskLoop	src/server/sqlite3.c	/^  Bitmask maskLoop;     \/* Bitmask of all WhereLoop objects in this path *\/$/;"	m	struct:WherePath	file:
maskPage	src/server/sqlite3.c	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage	file:
maskSelf	src/server/sqlite3.c	/^  Bitmask maskSelf;     \/* Bitmask identifying table iTab *\/$/;"	m	struct:WhereLoop	file:
maskUsed	src/server/sqlite3.c	/^  u64 maskUsed;         \/* Mask of columns used by this cursor *\/$/;"	m	struct:VdbeCursor	file:
massDriverFire	src/game/g_weapon.c	/^void massDriverFire( gentity_t *ent )$/;"	f
masterLoopSrc	src/client/snd_openal.c	/^	int				masterLoopSrc;		\/\/ All other sources looping this buffer are synced to this master src$/;"	m	struct:alSfx_s	file:
master_port	src/master/master.c	/^static unsigned short master_port = DEFAULT_MASTER_PORT;$/;"	v	file:
master_vol	src/client/snd_local.h	/^	int			master_vol;		\/\/ 0-255 volume before spatialization$/;"	m	struct:__anon94
mat4_t	src/renderergl2/tr_extramath.h	/^typedef vec_t mat4_t[16];$/;"	t
matchAll	src/server/sqlite3.c	/^  u8 matchAll;          \/* "*" or "%" *\/$/;"	m	struct:compareInfo	file:
matchBaseTimeLimit	src/game/g_local.h	/^  int               matchBaseTimeLimit;$/;"	m	struct:__anon316
matchCount	src/qcommon/common.c	/^static int	matchCount;$/;"	v	file:
matchOne	src/server/sqlite3.c	/^  u8 matchOne;          \/* "?" or "_" *\/$/;"	m	struct:compareInfo	file:
matchQuality	src/server/sqlite3.c	/^static int matchQuality($/;"	f	file:
matchSet	src/server/sqlite3.c	/^  u8 matchSet;          \/* "[" or 0 *\/$/;"	m	struct:compareInfo	file:
material	src/renderercommon/iqm.h	/^    unsigned int material;$/;"	m	struct:iqmmesh
matrix	src/qcommon/qfiles.h	/^	float		matrix[3][4];$/;"	m	struct:__anon398
matrix	src/renderergl1/tr_local.h	/^	float			matrix[2][2];		\/\/ s' = s * m[0][0] + t * m[1][0] + trans[0]$/;"	m	struct:__anon140
matrix	src/renderergl2/tr_local.h	/^	float			matrix[2][2];		\/\/ s' = s * m[0][0] + t * m[1][0] + trans[0]$/;"	m	struct:__anon22
max	src/master/master.c	/^static inline int max( int a, int b )$/;"	f	file:
max	src/qcommon/q_shared.h	/^	float			max;$/;"	m	struct:cvar_s
max	src/qcommon/q_shared.h	213;"	d
max	src/tools/lcc/cpp/cpp.h	/^	int	max;		\/* number allocated *\/$/;"	m	struct:tokenrow
max	src/tools/lcc/src/c.h	/^			Value min, max;$/;"	m	struct:symbol::__anon296::__anon299
max1bytePayload	src/server/sqlite3.c	/^  u8 max1bytePayload;   \/* Maximum first byte of cell for a 1-byte payload *\/$/;"	m	struct:BtShared	file:
max1bytePayload	src/server/sqlite3.c	/^  u8 max1bytePayload;  \/* min(maxLocal,127) *\/$/;"	m	struct:MemPage	file:
maxAmmo	src/game/bg_public.h	/^  int       maxAmmo;$/;"	m	struct:__anon355
maxAngle	src/game/g_local.h	/^  int       minAngle, maxAngle;$/;"	m	struct:damageRegion_s
maxAnisotropy	src/renderercommon/tr_types.h	/^	int							maxAnisotropy;$/;"	m	struct:__anon120
maxAnisotropy	src/renderergl2/tr_init.c	/^int         maxAnisotropy = 0;$/;"	v
maxChars	src/ui/ui_shared.h	/^  int maxChars;                  \/\/ for edit fields$/;"	m	struct:editFieldDef_s
maxClients	src/client/client.h	/^	int		  	maxClients;$/;"	m	struct:__anon89
maxClients	src/game/g_playmap.h	/^  int  minClients, maxClients; \/* Min, max number of clients for map *\/$/;"	m	struct:playMapPoolEntry_s
maxClips	src/game/bg_public.h	/^  int       maxClips;$/;"	m	struct:__anon355
maxColorAttachments	src/renderergl2/tr_local.h	/^	int maxColorAttachments;$/;"	m	struct:__anon60
maxCount	src/server/sqlite3.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxFieldWidth	src/ui/ui_shared.h	/^  int maxFieldWidth;             \/\/ for edit fields$/;"	m	struct:editFieldDef_s
maxHeight	src/game/g_local.h	/^  float     area, modifier, minHeight, maxHeight;$/;"	m	struct:damageRegion_s
maxIndex	src/renderergl2/tr_local.h	/^	glIndex_t       maxIndex;$/;"	m	struct:srfBspSurface_s
maxIndex	src/renderergl2/tr_local.h	/^	glIndex_t       maxIndex;$/;"	m	struct:srfVaoMdvMesh_s
maxIndex	src/renderergl2/tr_local.h	/^	glIndex_t   maxIndex;$/;"	m	struct:shaderCommands_s
maxLeaf	src/server/sqlite3.c	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
maxLocal	src/server/sqlite3.c	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
maxLocal	src/server/sqlite3.c	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage	file:
maxOffset	src/qcommon/cm_local.h	/^	float				maxOffset;	\/\/ longest corner length from origin$/;"	m	struct:__anon443
maxOut	src/server/sqlite3.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxPaintChars	src/ui/ui_shared.h	/^  int maxPaintChars;             \/\/ for edit fields$/;"	m	struct:editFieldDef_s
maxPing	src/client/client.h	/^	int			maxPing;$/;"	m	struct:__anon89
maxRecordSize	src/client/cl_avi.c	/^  int           maxRecordSize;$/;"	m	struct:aviFileData_s	file:
maxRenderbufferSize	src/renderergl2/tr_local.h	/^	int maxRenderbufferSize;$/;"	m	struct:__anon60
maxRequest	src/server/sqlite3.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
maxSpeedSample	src/cgame/cg_draw.c	/^int maxSpeedSample = 0;$/;"	v
maxSpeedSampleInWindow	src/cgame/cg_draw.c	/^int maxSpeedSampleInWindow = 0;$/;"	v
maxTextureSize	src/renderercommon/tr_types.h	/^	int						maxTextureSize;			\/\/ queried from GL$/;"	m	struct:__anon120
maxVal	src/ui/ui_shared.h	/^  float maxVal;                  \/\/$/;"	m	struct:editFieldDef_s
max_msg_level	src/master/master.c	/^msg_level_t max_msg_level = MSG_NORMAL;$/;"	v
max_nb_servers	src/master/servers.c	/^static size_t max_nb_servers = DEFAULT_MAX_NB_SERVERS;$/;"	v	file:
max_polys	src/renderergl1/tr_init.c	/^int		max_polys;$/;"	v
max_polys	src/renderergl2/tr_init.c	/^int		max_polys;$/;"	v
max_polyverts	src/renderergl1/tr_init.c	/^int		max_polyverts;$/;"	v
max_polyverts	src/renderergl2/tr_init.c	/^int		max_polyverts;$/;"	v
max_unaligned_load	src/tools/lcc/src/config.h	/^	unsigned char max_unaligned_load;$/;"	m	struct:__anon273
maxargoffset	src/tools/lcc/src/gen.c	/^int maxargoffset;$/;"	v
maxclients	src/cgame/cg_local.h	/^  int           maxclients;$/;"	m	struct:__anon253
maxclients	src/game/g_local.h	/^  int               maxclients;$/;"	m	struct:__anon316
maxclients	src/master/servers.h	/^	unsigned short maxclients;$/;"	m	struct:server_s
maxcount	src/qcommon/cm_local.h	/^	int		maxcount;$/;"	m	struct:leafList_s
maxcount	src/server/sv_world.c	/^	int			count, maxcount;$/;"	m	struct:__anon181	file:
maxhidesets	src/tools/lcc/cpp/hideset.c	/^int	maxhidesets = 3;$/;"	v
maximize	src/renderergl1/tr_image.c	/^	int	minimize, maximize;$/;"	m	struct:__anon178	file:
maximize	src/renderergl2/tr_image.c	/^	int	minimize, maximize;$/;"	m	struct:__anon80	file:
maxlevel	src/tools/lcc/src/types.c	/^static int maxlevel;$/;"	v	file:
maxoff	src/tools/lcc/src/symbolic.c	/^static int off, maxoff, uid = 0, verbose = 0, html = 0;$/;"	v	file:
maxoffset	src/tools/lcc/src/gen.c	/^int maxoffset;$/;"	v
maxs	src/game/bg_public.h	/^  vec3_t        mins, maxs;     \/\/ bounding box size$/;"	m	struct:pmove_s
maxs	src/game/bg_public.h	/^  vec3_t    maxs;$/;"	m	struct:__anon350
maxs	src/game/bg_public.h	/^  vec3_t    maxs;$/;"	m	struct:__anon354
maxs	src/game/g_local.h	/^  vec3_t      maxs;$/;"	m	struct:unlagged_s
maxs	src/game/g_public.h	/^  vec3_t    mins, maxs;$/;"	m	struct:__anon361
maxs	src/qcommon/cm_local.h	/^	vec3_t		mins, maxs;$/;"	m	struct:cmodel_s
maxs	src/qcommon/qfiles.h	/^	float		mins[3], maxs[3];$/;"	m	struct:__anon407
maxs	src/qcommon/qfiles.h	/^	int			maxs[3];$/;"	m	struct:__anon410
maxs	src/qcommon/qfiles.h	/^	int			maxs[3];$/;"	m	struct:__anon411
maxs	src/renderergl1/tr_local.h	/^	vec3_t		mins, maxs;		\/\/ for bounding box culling$/;"	m	struct:mnode_s
maxs	src/renderergl2/tr_local.h	/^	vec3_t		mins, maxs;		\/\/ for bounding box culling$/;"	m	struct:mnode_s
maxs	src/server/sv_world.c	/^	const float	*maxs;$/;"	m	struct:__anon181	file:
maxs	src/server/sv_world.c	/^	const float *maxs;	\/\/ size of the moving object$/;"	m	struct:__anon182	file:
maxservers	src/ui/ui_local.h	/^  int    maxservers;$/;"	m	struct:serverStatus_s
maxsize	src/client/cl_cin.c	/^	unsigned int		xsize, ysize, maxsize, minsize;$/;"	m	struct:__anon100	file:
maxsize	src/qcommon/cmd.c	/^	int		maxsize;$/;"	m	struct:__anon446	file:
maxsize	src/qcommon/qcommon.h	/^	int		maxsize;$/;"	m	struct:__anon418
mayAbort	src/server/sqlite3.c	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse	file:
mayrecalc	src/tools/lcc/src/config.h	/^	unsigned mayrecalc:1;$/;"	m	struct:__anon274
mayrecalc	src/tools/lcc/src/gen.c	/^int mayrecalc(Node p) {$/;"	f
mcomp	src/client/cl_cin.c	/^	int		mcomp[256];$/;"	m	struct:__anon99	file:
md3	src/renderergl1/tr_local.h	/^	md3Header_t	*md3[MD3_MAX_LODS];	\/\/ only if type == MOD_MESH$/;"	m	struct:model_s
md3Frame_s	src/qcommon/qfiles.h	/^typedef struct md3Frame_s {$/;"	s
md3Frame_t	src/qcommon/qfiles.h	/^} md3Frame_t;$/;"	t	typeref:struct:md3Frame_s
md3Header_t	src/qcommon/qfiles.h	/^} md3Header_t;$/;"	t	typeref:struct:__anon393
md3Shader_t	src/qcommon/qfiles.h	/^} md3Shader_t;$/;"	t	typeref:struct:__anon389
md3St_t	src/qcommon/qfiles.h	/^} md3St_t;$/;"	t	typeref:struct:__anon391
md3Surface_t	src/qcommon/qfiles.h	/^} md3Surface_t;$/;"	t	typeref:struct:__anon388
md3Tag_s	src/qcommon/qfiles.h	/^typedef struct md3Tag_s {$/;"	s
md3Tag_t	src/qcommon/qfiles.h	/^} md3Tag_t;$/;"	t	typeref:struct:md3Tag_s
md3Triangle_t	src/qcommon/qfiles.h	/^} md3Triangle_t;$/;"	t	typeref:struct:__anon390
md3XyzNormal_t	src/qcommon/qfiles.h	/^} md3XyzNormal_t;$/;"	t	typeref:struct:__anon392
mdfour	src/qcommon/md4.c	/^static void mdfour(byte *out, byte *in, int n)$/;"	f	file:
mdfour	src/qcommon/md4.c	/^struct mdfour {$/;"	s	file:
mdfour64	src/qcommon/md4.c	/^static void mdfour64(uint32_t *M)$/;"	f	file:
mdfour_begin	src/qcommon/md4.c	/^void mdfour_begin(struct mdfour *md)$/;"	f
mdfour_result	src/qcommon/md4.c	/^static void mdfour_result(struct mdfour *md, byte *out)$/;"	f	file:
mdfour_tail	src/qcommon/md4.c	/^static void mdfour_tail(byte *in, int n)$/;"	f	file:
mdfour_update	src/qcommon/md4.c	/^static void mdfour_update(struct mdfour *md, byte *in, int n)$/;"	f	file:
mdrBone_t	src/qcommon/qfiles.h	/^} mdrBone_t;$/;"	t	typeref:struct:__anon398
mdrCompBone_t	src/qcommon/qfiles.h	/^} mdrCompBone_t;$/;"	t	typeref:struct:__anon400
mdrCompFrame_t	src/qcommon/qfiles.h	/^} mdrCompFrame_t;$/;"	t	typeref:struct:__anon401
mdrFrame_t	src/qcommon/qfiles.h	/^} mdrFrame_t;$/;"	t	typeref:struct:__anon399
mdrHeader_t	src/qcommon/qfiles.h	/^} mdrHeader_t;$/;"	t	typeref:struct:__anon404
mdrLOD_t	src/qcommon/qfiles.h	/^} mdrLOD_t;$/;"	t	typeref:struct:__anon402
mdrSurface_t	src/qcommon/qfiles.h	/^} mdrSurface_t;$/;"	t	typeref:struct:__anon397
mdrTag_t	src/qcommon/qfiles.h	/^} mdrTag_t;$/;"	t	typeref:struct:__anon403
mdrTriangle_t	src/qcommon/qfiles.h	/^} mdrTriangle_t;$/;"	t	typeref:struct:__anon396
mdrVertex_t	src/qcommon/qfiles.h	/^} mdrVertex_t;$/;"	t	typeref:struct:__anon395
mdrWeight_t	src/qcommon/qfiles.h	/^} mdrWeight_t;$/;"	t	typeref:struct:__anon394
mdv	src/renderergl2/tr_local.h	/^	mdvModel_t	*mdv[MD3_MAX_LODS];	\/\/ only if type == MOD_MESH$/;"	m	struct:model_s
mdvFrame_t	src/renderergl2/tr_local.h	/^} mdvFrame_t;$/;"	t	typeref:struct:__anon50
mdvModel	src/renderergl2/tr_local.h	/^	struct mdvModel_s *mdvModel;$/;"	m	struct:srfVaoMdvMesh_s	typeref:struct:srfVaoMdvMesh_s::mdvModel_s
mdvModel_s	src/renderergl2/tr_local.h	/^typedef struct mdvModel_s$/;"	s
mdvModel_t	src/renderergl2/tr_local.h	/^} mdvModel_t;$/;"	t	typeref:struct:mdvModel_s
mdvSt_t	src/renderergl2/tr_local.h	/^} mdvSt_t;$/;"	t	typeref:struct:__anon54
mdvSurface	src/renderergl2/tr_local.h	/^	struct mdvSurface_s *mdvSurface;$/;"	m	struct:srfVaoMdvMesh_s	typeref:struct:srfVaoMdvMesh_s::mdvSurface_s
mdvSurface_s	src/renderergl2/tr_local.h	/^typedef struct mdvSurface_s$/;"	s
mdvSurface_t	src/renderergl2/tr_local.h	/^} mdvSurface_t;$/;"	t	typeref:struct:mdvSurface_s
mdvTagName_t	src/renderergl2/tr_local.h	/^} mdvTagName_t;$/;"	t	typeref:struct:__anon52
mdvTag_t	src/renderergl2/tr_local.h	/^} mdvTag_t;$/;"	t	typeref:struct:__anon51
mdvVertex_t	src/renderergl2/tr_local.h	/^} mdvVertex_t;$/;"	t	typeref:struct:__anon53
meansOfDeath	src/game/bg_public.h	/^  int           meansOfDeath;$/;"	m	struct:__anon353
meansOfDeath_t	src/game/bg_public.h	/^} meansOfDeath_t;$/;"	t	typeref:enum:__anon348
measureAllocationSize	src/server/sqlite3.c	/^static SQLITE_NOINLINE void measureAllocationSize(sqlite3 *db, void *p){$/;"	f	file:
med3	src/game/bg_lib.c	/^med3(a, b, c, cmp)$/;"	f	file:
medKitHealthToRestore	src/game/g_local.h	/^  int                 medKitHealthToRestore;$/;"	m	struct:gclient_s
medKitIncrementTime	src/game/g_local.h	/^  int                 medKitIncrementTime;$/;"	m	struct:gclient_s
media	src/cgame/cg_local.h	/^  cgMedia_t           media;$/;"	m	struct:__anon253
mediaFraction	src/cgame/cg_local.h	/^  float         mediaFraction;$/;"	m	struct:__anon249
medkitUseSound	src/cgame/cg_local.h	/^  sfxHandle_t medkitUseSound;$/;"	m	struct:__anon251
meleeAttack	src/game/g_weapon.c	/^void meleeAttack( gentity_t *ent, float range, float width, float height,$/;"	f
mem	src/qcommon/common.c	/^	byte mem[2];$/;"	m	struct:memstatic_s	file:
mem	src/server/sqlite3.c	/^} mem;$/;"	v	typeref:struct:__anon203	file:
mem0	src/server/sqlite3.c	/^} mem0 = { 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	src/server/sqlite3.c	22093;"	d	file:
mem3	src/server/sqlite3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	src/server/sqlite3.c	19425;"	d	file:
mem5	src/server/sqlite3.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	src/server/sqlite3.c	20111;"	d	file:
memAboutToChange	src/server/sqlite3.c	74419;"	d	file:
memAboutToChange	src/server/sqlite3.c	74421;"	d	file:
memDb	src/server/sqlite3.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memInfo	src/renderergl2/tr_local.h	/^	memInfo_t   memInfo;$/;"	m	struct:__anon60
memInfo_t	src/renderergl2/tr_local.h	/^} memInfo_t;$/;"	t	typeref:enum:__anon58
memIsValid	src/server/sqlite3.c	16124;"	d	file:
memTracePrint	src/server/sqlite3.c	/^static void memTracePrint(Mem *p){$/;"	f	file:
memblock_s	src/qcommon/common.c	/^typedef struct memblock_s {$/;"	s	file:
memblock_t	src/qcommon/common.c	/^} memblock_t;$/;"	t	typeref:struct:memblock_s	file:
memjrnlClose	src/server/sqlite3.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlCreateFile	src/server/sqlite3.c	/^static int memjrnlCreateFile(MemJournal *p){$/;"	f	file:
memjrnlFileSize	src/server/sqlite3.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlFreeChunks	src/server/sqlite3.c	/^static void memjrnlFreeChunks(MemJournal *p){$/;"	f	file:
memjrnlRead	src/server/sqlite3.c	/^static int memjrnlRead($/;"	f	file:
memjrnlSync	src/server/sqlite3.c	/^static int memjrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
memjrnlTruncate	src/server/sqlite3.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlWrite	src/server/sqlite3.c	/^static int memjrnlWrite($/;"	f	file:
memlist	src/tools/lcc/lburg/lburg.c	/^} *memlist;			\/* list of allocated blocks *\/$/;"	v	typeref:struct:block	file:
memmove	src/game/bg_lib.c	/^void *memmove( void *dest, const void *src, size_t count )$/;"	f
memmove	src/tools/lcc/cpp/unix.c	/^memmove(void *dp, const void *sp, size_t n)$/;"	f
memmove	src/tools/lcc/cpp/unix.c	110;"	d	file:
memoryPool	src/game/bg_alloc.c	/^static char           memoryPool[POOLSIZE];$/;"	v	file:
memory_highwater	src/server/sqlite3.c	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	file:
memory_used	src/server/sqlite3.c	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	file:
memstatic_s	src/qcommon/common.c	/^typedef struct memstatic_s {$/;"	s	file:
memstatic_t	src/qcommon/common.c	/^} memstatic_t;$/;"	t	typeref:struct:memstatic_s	file:
memsys3Checkout	src/server/sqlite3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Enter	src/server/sqlite3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Free	src/server/sqlite3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3FreeUnsafe	src/server/sqlite3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FromMaster	src/server/sqlite3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3Init	src/server/sqlite3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Leave	src/server/sqlite3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Link	src/server/sqlite3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3LinkIntoList	src/server/sqlite3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3Malloc	src/server/sqlite3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3MallocUnsafe	src/server/sqlite3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3Merge	src/server/sqlite3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3OutOfMemory	src/server/sqlite3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3Realloc	src/server/sqlite3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Roundup	src/server/sqlite3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Shutdown	src/server/sqlite3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Size	src/server/sqlite3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Unlink	src/server/sqlite3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3UnlinkFromList	src/server/sqlite3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys5Enter	src/server/sqlite3.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Free	src/server/sqlite3.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5FreeUnsafe	src/server/sqlite3.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5Init	src/server/sqlite3.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Leave	src/server/sqlite3.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Link	src/server/sqlite3.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Log	src/server/sqlite3.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Malloc	src/server/sqlite3.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5MallocUnsafe	src/server/sqlite3.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5Realloc	src/server/sqlite3.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Roundup	src/server/sqlite3.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Shutdown	src/server/sqlite3.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Size	src/server/sqlite3.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Unlink	src/server/sqlite3.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
memtag_t	src/qcommon/qcommon.h	/^} memtag_t;$/;"	t	typeref:enum:__anon429
memzone_t	src/qcommon/common.c	/^} memzone_t;$/;"	t	typeref:struct:__anon449	file:
menuBuzzSound	src/ui/ui_shared.h	/^  sfxHandle_t menuBuzzSound;$/;"	m	struct:__anon504
menuCount	src/ui/ui_shared.c	/^int menuCount = 0;               \/\/ how many$/;"	v
menuDef_t	src/ui/ui_shared.h	/^menuDef_t;$/;"	t	typeref:struct:__anon503
menuEnterSound	src/ui/ui_shared.h	/^  sfxHandle_t menuEnterSound;$/;"	m	struct:__anon504
menuExitSound	src/ui/ui_shared.h	/^  sfxHandle_t menuExitSound;$/;"	m	struct:__anon504
menuItem_t	src/ui/ui_local.h	/^menuItem_t;$/;"	t	typeref:struct:__anon515
menuParseKeywordHash	src/ui/ui_shared.c	/^keywordHash_t *menuParseKeywordHash[KEYWORDHASH_SIZE];$/;"	v
menuParseKeywords	src/ui/ui_shared.c	/^keywordHash_t menuParseKeywords[] = {$/;"	v
menuScoreboard	src/cgame/cg_draw.c	/^menuDef_t *menuScoreboard = NULL;$/;"	v
menuStack	src/ui/ui_shared.c	/^menuDef_t *menuStack[MAX_OPEN_MENUS];$/;"	v
mergeFrame	src/client/snd_local.h	/^	int			mergeFrame;$/;"	m	struct:loopSound_s
mergedSurfaces	src/renderergl2/tr_local.h	/^	msurface_t	*mergedSurfaces;$/;"	m	struct:__anon49
mergedSurfacesDlightBits	src/renderergl2/tr_local.h	/^	int         *mergedSurfacesDlightBits;$/;"	m	struct:__anon49
mergedSurfacesPshadowBits	src/renderergl2/tr_local.h	/^	int			*mergedSurfacesPshadowBits;$/;"	m	struct:__anon49
mergedSurfacesViewCount	src/renderergl2/tr_local.h	/^	int         *mergedSurfacesViewCount;$/;"	m	struct:__anon49
meshBounds	src/renderergl1/tr_local.h	/^	vec3_t			meshBounds[2];$/;"	m	struct:srfGridMesh_s
meshRadius	src/renderergl1/tr_local.h	/^	float			meshRadius;$/;"	m	struct:srfGridMesh_s
message	src/game/g_local.h	/^  char              *message;$/;"	m	struct:gentity_s
messageAcked	src/server/server.h	/^	int				messageAcked;		\/\/ time the message was acked$/;"	m	struct:__anon185
messageAcknowledge	src/server/server.h	/^	int				messageAcknowledge;$/;"	m	struct:client_s
messageNum	src/client/client.h	/^	int				messageNum;		\/\/ copied from netchan->incoming_sequence$/;"	m	struct:__anon84
messageSent	src/server/server.h	/^	int				messageSent;		\/\/ time the message was transmitted$/;"	m	struct:__anon185
messageSize	src/server/server.h	/^	int				messageSize;		\/\/ used to rate drop packets$/;"	m	struct:__anon185
messageString	src/ui/ui_public.h	/^  char      messageString[MAX_STRING_CHARS];$/;"	m	struct:__anon492
methodOfDeath	src/game/g_local.h	/^  int               methodOfDeath;$/;"	m	struct:gentity_s
metrics	src/tools/lcc/doc/4.html	/^<h2><a NAME="metrics">5.1 Type Metrics<\/a><\/h2>$/;"	a
metrics	src/tools/lcc/src/c.h	/^typedef struct metrics {$/;"	s
min	src/qcommon/q_shared.h	/^	float			min;$/;"	m	struct:cvar_s
min	src/qcommon/q_shared.h	214;"	d
min	src/tools/lcc/src/c.h	/^			Value min, max;$/;"	m	struct:symbol::__anon296::__anon299
minAngle	src/game/g_local.h	/^  int       minAngle, maxAngle;$/;"	m	struct:damageRegion_s
minClients	src/game/g_playmap.h	/^  int  minClients, maxClients; \/* Min, max number of clients for map *\/$/;"	m	struct:playMapPoolEntry_s
minFrame	src/server/sqlite3.c	/^  u32 minFrame;              \/* Ignore wal frames before this one *\/$/;"	m	struct:Wal	file:
minHeight	src/game/g_local.h	/^  float     area, modifier, minHeight, maxHeight;$/;"	m	struct:damageRegion_s
minIndex	src/renderergl2/tr_local.h	/^	glIndex_t       minIndex;$/;"	m	struct:srfBspSurface_s
minIndex	src/renderergl2/tr_local.h	/^	glIndex_t       minIndex;$/;"	m	struct:srfVaoMdvMesh_s
minIndex	src/renderergl2/tr_local.h	/^	glIndex_t   minIndex;$/;"	m	struct:shaderCommands_s
minLeaf	src/server/sqlite3.c	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
minLocal	src/server/sqlite3.c	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
minLocal	src/server/sqlite3.c	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage	file:
minMaxFinalize	src/server/sqlite3.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxQuery	src/server/sqlite3.c	/^static u8 minMaxQuery(AggInfo *pAggInfo, ExprList **ppMinMax){$/;"	f	file:
minNormal	src/game/bg_public.h	/^  float         minNormal;$/;"	m	struct:__anon353
minPing	src/client/client.h	/^	int			minPing;$/;"	m	struct:__anon89
minVal	src/ui/ui_shared.h	/^  float minVal;                  \/\/  edit field limits$/;"	m	struct:editFieldDef_s
minWriteFileFormat	src/server/sqlite3.c	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe	file:
minimize	src/renderergl1/tr_image.c	/^	int	minimize, maximize;$/;"	m	struct:__anon178	file:
minimize	src/renderergl2/tr_image.c	/^	int	minimize, maximize;$/;"	m	struct:__anon80	file:
minmaxFunc	src/server/sqlite3.c	/^static void minmaxFunc($/;"	f	file:
minmaxStep	src/server/sqlite3.c	/^static void minmaxStep($/;"	f	file:
minor	src/server/sqlite3.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	src/server/sqlite3.c	/^  fts5YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:fts5yyStackEntry	file:
mins	src/game/bg_public.h	/^  vec3_t        mins, maxs;     \/\/ bounding box size$/;"	m	struct:pmove_s
mins	src/game/bg_public.h	/^  vec3_t    mins;$/;"	m	struct:__anon350
mins	src/game/bg_public.h	/^  vec3_t    mins;$/;"	m	struct:__anon354
mins	src/game/g_local.h	/^  vec3_t      mins;$/;"	m	struct:unlagged_s
mins	src/game/g_public.h	/^  vec3_t    mins, maxs;$/;"	m	struct:__anon361
mins	src/qcommon/cm_local.h	/^	vec3_t		mins, maxs;$/;"	m	struct:cmodel_s
mins	src/qcommon/qfiles.h	/^	float		mins[3], maxs[3];$/;"	m	struct:__anon407
mins	src/qcommon/qfiles.h	/^	int			mins[3];			\/\/ for frustum culling$/;"	m	struct:__anon411
mins	src/qcommon/qfiles.h	/^	int			mins[3];		\/\/ for frustom culling$/;"	m	struct:__anon410
mins	src/renderergl1/tr_local.h	/^	vec3_t		mins, maxs;		\/\/ for bounding box culling$/;"	m	struct:mnode_s
mins	src/renderergl2/tr_local.h	/^	vec3_t		mins, maxs;		\/\/ for bounding box culling$/;"	m	struct:mnode_s
mins	src/server/sv_world.c	/^	const float	*mins;$/;"	m	struct:__anon181	file:
mins	src/server/sv_world.c	/^	const float	*mins;$/;"	m	struct:__anon182	file:
minsize	src/client/cl_cin.c	/^	unsigned int		xsize, ysize, maxsize, minsize;$/;"	m	struct:__anon100	file:
mipBlendColors	src/renderergl1/tr_image.c	/^byte	mipBlendColors[16][4] = {$/;"	v
mipBlendColors	src/renderergl2/tr_image.c	/^byte	mipBlendColors[16][4] = {$/;"	v
mirrored	src/renderergl2/tr_local.h	/^	qboolean	mirrored;		\/\/ mirrored matrix, needs reversed culling$/;"	m	struct:__anon8
misc	src/cgame/cg_local.h	/^	int			misc[MAX_MISC];	\/\/ misc data$/;"	m	struct:__anon256
misc	src/cgame/cg_local.h	/^	int		misc;			\/\/ bit flags$/;"	m	struct:__anon257
misc	src/client/client.h	/^	int			misc[MAX_MISC];	\/\/ misc data$/;"	m	struct:alternatePlayerState_s
misc	src/client/client.h	/^	int		misc;			\/\/ bit flags$/;"	m	struct:alternateEntityState_s
misc	src/qcommon/msg.c	/^	int			misc[MAX_MISC];	\/\/ misc data$/;"	m	struct:alternatePlayerState_s	file:
misc	src/qcommon/q_shared.h	/^	int			misc[MAX_MISC];	\/\/ misc data$/;"	m	struct:playerState_s
misc	src/qcommon/q_shared.h	/^	int		misc;			\/\/ bit flags$/;"	m	struct:entityState_s
miscTime	src/cgame/cg_local.h	/^  int                   miscTime;$/;"	m	struct:centity_s
missileAnimFrameRate	src/cgame/cg_local.h	/^  int         missileAnimFrameRate;$/;"	m	struct:weaponInfoMode_s
missileAnimLooping	src/cgame/cg_local.h	/^  int         missileAnimLooping;$/;"	m	struct:weaponInfoMode_s
missileAnimNumFrames	src/cgame/cg_local.h	/^  int         missileAnimNumFrames;$/;"	m	struct:weaponInfoMode_s
missileAnimStartFrame	src/cgame/cg_local.h	/^  int         missileAnimStartFrame;$/;"	m	struct:weaponInfoMode_s
missileAnimates	src/cgame/cg_local.h	/^  qboolean    missileAnimates;$/;"	m	struct:weaponInfoMode_s
missileDlight	src/cgame/cg_local.h	/^  float       missileDlight;$/;"	m	struct:weaponInfoMode_s
missileDlightColor	src/cgame/cg_local.h	/^  vec3_t      missileDlightColor;$/;"	m	struct:weaponInfoMode_s
missileModel	src/cgame/cg_local.h	/^  qhandle_t   missileModel;$/;"	m	struct:weaponInfoMode_s
missileParticleSystem	src/cgame/cg_local.h	/^  qhandle_t   missileParticleSystem;$/;"	m	struct:weaponInfoMode_s
missileRenderfx	src/cgame/cg_local.h	/^  int         missileRenderfx;$/;"	m	struct:weaponInfoMode_s
missileRotates	src/cgame/cg_local.h	/^  qboolean    missileRotates;$/;"	m	struct:weaponInfoMode_s
missileSound	src/cgame/cg_local.h	/^  sfxHandle_t missileSound;$/;"	m	struct:weaponInfoMode_s
missileSprite	src/cgame/cg_local.h	/^  qhandle_t   missileSprite;$/;"	m	struct:weaponInfoMode_s
missileSpriteCharge	src/cgame/cg_local.h	/^  float       missileSpriteCharge;$/;"	m	struct:weaponInfoMode_s
missileSpriteSize	src/cgame/cg_local.h	/^  int         missileSpriteSize;$/;"	m	struct:weaponInfoMode_s
missileTrailSystem	src/cgame/cg_local.h	/^  qhandle_t   missileTrailSystem;$/;"	m	struct:weaponInfoMode_s
missingFiles	src/qcommon/files.c	/^FILE*		missingFiles = NULL;$/;"	v
mkFullPathname	src/server/sqlite3.c	/^static int mkFullPathname($/;"	f	file:
mkactual	src/tools/lcc/src/gen.c	/^int mkactual(int align, int size) {$/;"	f
mkauto	src/tools/lcc/src/gen.c	/^void mkauto(Symbol p) {$/;"	f
mkop	src/tools/lcc/src/c.h	33;"	d
mkreg	src/tools/lcc/src/gen.c	/^Symbol mkreg(char *fmt, int n, int mask, int set) {$/;"	f
mkstr	src/tools/lcc/src/sym.c	/^Symbol mkstr(char *str) {$/;"	f
mksymbol	src/tools/lcc/src/sym.c	/^Symbol mksymbol(int sclass, const char *name, Type ty) {$/;"	f
mkwildcard	src/tools/lcc/src/gen.c	/^Symbol mkwildcard(Symbol *syms) {$/;"	f
mmapSize	src/server/sqlite3.c	/^  sqlite3_int64 mmapSize;             \/* Usable size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSize	src/server/sqlite3.c	/^  sqlite3_int64 mmapSize;       \/* Usable size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeActual	src/server/sqlite3.c	/^  sqlite3_int64 mmapSizeActual;       \/* Actual size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSizeActual	src/server/sqlite3.c	/^  sqlite3_int64 mmapSizeActual; \/* Actual size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeMax	src/server/sqlite3.c	/^  sqlite3_int64 mmapSizeMax;          \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:unixFile	file:
mmapSizeMax	src/server/sqlite3.c	/^  sqlite3_int64 mmapSizeMax;    \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:winFile	file:
mnMaster	src/server/sqlite3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnPmaSize	src/server/sqlite3.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnReg	src/server/sqlite3.c	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo	file:
mnReq	src/server/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mnode_s	src/renderergl1/tr_local.h	/^typedef struct mnode_s {$/;"	s
mnode_s	src/renderergl2/tr_local.h	/^typedef struct mnode_s {$/;"	s
mnode_t	src/renderergl1/tr_local.h	/^} mnode_t;$/;"	t	typeref:struct:mnode_s
mnode_t	src/renderergl2/tr_local.h	/^} mnode_t;$/;"	t	typeref:struct:mnode_s
modCount	src/ui/ui_local.h	/^  int modCount;$/;"	m	struct:__anon518
modDescr	src/ui/ui_local.h	/^  const char *modDescr;$/;"	m	struct:__anon513
modIndex	src/ui/ui_local.h	/^  int modIndex;$/;"	m	struct:__anon518
modInfo_t	src/ui/ui_local.h	/^modInfo_t;$/;"	t	typeref:struct:__anon513
modList	src/ui/ui_local.h	/^  modInfo_t modList[MAX_MODS];$/;"	m	struct:__anon518
modName	src/ui/ui_local.h	/^  const char *modName;$/;"	m	struct:__anon513
modNames	src/game/g_combat.c	/^char *modNames[ ] =$/;"	v
model	src/cgame/cg_local.h	/^  qhandle_t         model;$/;"	m	struct:attachment_s
model	src/cgame/cg_local.h	/^  qhandle_t         model;$/;"	m	struct:particle_s
model	src/game/g_local.h	/^  char              *model;$/;"	m	struct:gentity_s
model	src/renderergl2/tr_local.h	/^	struct mdvModel_s *model;$/;"	m	struct:mdvSurface_s	typeref:struct:mdvSurface_s::mdvModel_s
model	src/ui/ui_shared.h	/^    modelDef_t     *model;$/;"	m	union:itemDef_s::__anon502
model2	src/game/g_local.h	/^  char              *model2;$/;"	m	struct:gentity_s
modelAnimation	src/cgame/cg_local.h	/^  animation_t     modelAnimation;$/;"	m	struct:baseParticle_s
modelBounds	src/ui/ui_shared.h	/^  void ( *modelBounds ) ( qhandle_t model, vec3_t min, vec3_t max );$/;"	m	struct:__anon506
modelData	src/renderergl1/tr_local.h	/^	void	*modelData;			\/\/ only if type == (MOD_MDR | MOD_IQM)$/;"	m	struct:model_s
modelData	src/renderergl2/tr_local.h	/^	void	*modelData;			\/\/ only if type == (MOD_MDR | MOD_IQM)$/;"	m	struct:model_s
modelDef_s	src/ui/ui_shared.h	/^typedef struct modelDef_s$/;"	s
modelDef_t	src/ui/ui_shared.h	/^modelDef_t;$/;"	t	typeref:struct:modelDef_s
modelExtToLoaderMap_t	src/renderergl1/tr_model.c	/^} modelExtToLoaderMap_t;$/;"	t	typeref:struct:__anon180	file:
modelExtToLoaderMap_t	src/renderergl2/tr_model.c	/^} modelExtToLoaderMap_t;$/;"	t	typeref:struct:__anon82	file:
modelIcon	src/cgame/cg_local.h	/^  qhandle_t   modelIcon;$/;"	m	struct:__anon243
modelLightDir	src/renderergl2/tr_local.h	/^	vec3_t      modelLightDir;  \/\/ normalized direction towards light, in model space$/;"	m	struct:__anon8
modelLoaders	src/renderergl1/tr_model.c	/^static modelExtToLoaderMap_t modelLoaders[ ] =$/;"	v	file:
modelLoaders	src/renderergl2/tr_model.c	/^static modelExtToLoaderMap_t modelLoaders[ ] =$/;"	v	file:
modelMatrix	src/renderergl1/tr_local.h	/^	float		modelMatrix[16];$/;"	m	struct:__anon129
modelMatrix	src/renderergl2/tr_local.h	/^	float		modelMatrix[16];$/;"	m	struct:__anon9
modelName	src/cgame/cg_local.h	/^  char        modelName[ MAX_QPATH ];$/;"	m	struct:__anon243
modelName	src/game/bg_public.h	/^  char      modelName[ MAX_QPATH ];$/;"	m	struct:__anon350
modelNames	src/cgame/cg_local.h	/^  char            modelNames[ MAX_PS_MODELS ][ MAX_QPATH ];$/;"	m	struct:baseParticle_s
modelOrigin	src/qcommon/cm_local.h	/^	vec3_t			modelOrigin;\/\/ origin of the model tracing through$/;"	m	struct:__anon443
modelScale	src/game/bg_public.h	/^  float     modelScale;$/;"	m	struct:__anon350
modelScale	src/game/bg_public.h	/^  float     modelScale;$/;"	m	struct:__anon354
model_s	src/renderergl1/tr_local.h	/^typedef struct model_s {$/;"	s
model_s	src/renderergl2/tr_local.h	/^typedef struct model_s {$/;"	s
model_t	src/renderergl1/tr_local.h	/^} model_t;$/;"	t	typeref:struct:model_s
model_t	src/renderergl2/tr_local.h	/^} model_t;$/;"	t	typeref:struct:model_s
modelindex	src/cgame/cg_local.h	/^	int		modelindex;$/;"	m	struct:__anon257
modelindex	src/client/client.h	/^	int		modelindex;$/;"	m	struct:alternateEntityState_s
modelindex	src/game/g_local.h	/^  buildable_t  modelindex;$/;"	m	struct:__anon315
modelindex	src/qcommon/q_shared.h	/^	int		modelindex;$/;"	m	struct:entityState_s
modelindex2	src/cgame/cg_local.h	/^	int		modelindex2;$/;"	m	struct:__anon257
modelindex2	src/client/client.h	/^	int		modelindex2;$/;"	m	struct:alternateEntityState_s
modelindex2	src/qcommon/q_shared.h	/^	int		modelindex2;$/;"	m	struct:entityState_s
models	src/cgame/cg_local.h	/^  qhandle_t       models[ MAX_PS_MODELS ];$/;"	m	struct:baseParticle_s
models	src/cgame/cg_local.h	/^  qhandle_t   models[ MAX_BUILDABLE_MODELS ];$/;"	m	struct:__anon245
models	src/game/bg_public.h	/^  char      models[ MAX_BUILDABLE_MODELS ][ MAX_QPATH ];$/;"	m	struct:__anon354
models	src/renderergl1/tr_local.h	/^	model_t					*models[MAX_MOD_KNOWN];$/;"	m	struct:__anon163
models	src/renderergl2/tr_local.h	/^	model_t					*models[MAX_MOD_KNOWN];$/;"	m	struct:__anon63
modelview	src/renderergl2/tr_local.h	/^	mat4_t        modelview;$/;"	m	struct:__anon57
modelviewProjection	src/renderergl2/tr_local.h	/^	mat4_t		modelviewProjection;$/;"	m	struct:__anon57
modes	src/renderergl1/tr_image.c	/^textureMode_t modes[] = {$/;"	v
modes	src/renderergl2/tr_image.c	/^textureMode_t modes[] = {$/;"	v
modificationCount	src/game/g_main.c	/^  int       modificationCount; \/\/ for tracking changes$/;"	m	struct:__anon371	file:
modificationCount	src/qcommon/q_shared.h	/^	int				modificationCount;	\/\/ incremented each time the cvar is changed$/;"	m	struct:cvar_s
modificationCount	src/qcommon/q_shared.h	/^	int			modificationCount;$/;"	m	struct:__anon468
modified	src/qcommon/q_shared.h	/^	qboolean	modified;			\/\/ set each time the cvar is changed$/;"	m	struct:cvar_s
modifier	src/game/g_local.h	/^  float     area, modifier, minHeight, maxHeight;$/;"	m	struct:damageRegion_s
modifyPagePointer	src/server/sqlite3.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
modtype_t	src/renderergl1/tr_local.h	/^} modtype_t;$/;"	t	typeref:enum:__anon158
modtype_t	src/renderergl2/tr_local.h	/^} modtype_t;$/;"	t	typeref:enum:__anon55
modulate	src/renderercommon/tr_types.h	/^	byte		modulate[4];$/;"	m	struct:__anon112
moduleAlternateEntityState_t	src/cgame/cg_local.h	/^} moduleAlternateEntityState_t;$/;"	t	typeref:struct:__anon257
moduleAlternatePlayerState_t	src/cgame/cg_local.h	/^} moduleAlternatePlayerState_t;$/;"	t	typeref:struct:__anon256
moduleAlternateSnapshot	src/cgame/cg_snapshot.c	/^static moduleAlternateSnapshot_t moduleAlternateSnapshot;$/;"	v	file:
moduleAlternateSnapshot_t	src/cgame/cg_local.h	/^} moduleAlternateSnapshot_t;$/;"	t	typeref:struct:__anon258
motd	src/ui/ui_local.h	/^  char  motd[MAX_STRING_CHARS];$/;"	m	struct:serverStatus_s
motdLen	src/ui/ui_local.h	/^  int    motdLen;$/;"	m	struct:serverStatus_s
motdOffset	src/ui/ui_local.h	/^  int    motdOffset;$/;"	m	struct:serverStatus_s
motdPaintX	src/ui/ui_local.h	/^  int    motdPaintX;$/;"	m	struct:serverStatus_s
motdPaintX2	src/ui/ui_local.h	/^  int    motdPaintX2;$/;"	m	struct:serverStatus_s
motdTime	src/ui/ui_local.h	/^  int    motdTime;$/;"	m	struct:serverStatus_s
motdWidth	src/ui/ui_local.h	/^  int    motdWidth;$/;"	m	struct:serverStatus_s
motionJpeg	src/client/cl_avi.c	/^  qboolean      motionJpeg;$/;"	m	struct:aviFileData_s	file:
motionJpeg	src/renderergl1/tr_local.h	/^	qboolean			motionJpeg;$/;"	m	struct:__anon173
motionJpeg	src/renderergl2/tr_local.h	/^	qboolean			motionJpeg;$/;"	m	struct:__anon73
mouseActive	src/sdl/sdl_input.c	/^static qboolean mouseActive = qfalse;$/;"	v	file:
mouseAvailable	src/sdl/sdl_input.c	/^static qboolean mouseAvailable = qfalse;$/;"	v	file:
mouseCaptured	src/cgame/cg_local.h	/^  qboolean      mouseCaptured;$/;"	m	struct:__anon253
mouseDx	src/client/client.h	/^	int			mouseDx[2], mouseDy[2];	\/\/ added to by mouse events$/;"	m	struct:__anon86
mouseDy	src/client/client.h	/^	int			mouseDx[2], mouseDy[2];	\/\/ added to by mouse events$/;"	m	struct:__anon86
mouseEnter	src/ui/ui_shared.h	/^  const char *mouseEnter;        \/\/ mouse enter script$/;"	m	struct:itemDef_s
mouseEnterText	src/ui/ui_shared.h	/^  const char *mouseEnterText;    \/\/ mouse enter script$/;"	m	struct:itemDef_s
mouseExit	src/ui/ui_shared.h	/^  const char *mouseExit;         \/\/ mouse exit script$/;"	m	struct:itemDef_s
mouseExitText	src/ui/ui_shared.h	/^  const char *mouseExitText;     \/\/ mouse exit script$/;"	m	struct:itemDef_s
mouseIndex	src/client/client.h	/^	int			mouseIndex;$/;"	m	struct:__anon86
move	src/tools/lcc/src/gen.c	/^int move(Node p) {$/;"	f
move4_32	src/client/cl_cin.c	/^static void move4_32( byte *src, byte *dst, int spl  )$/;"	f	file:
move8_32	src/client/cl_cin.c	/^static void move8_32( byte *src, byte *dst, int spl )$/;"	f	file:
moveToChild	src/server/sqlite3.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToLeftmost	src/server/sqlite3.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToParent	src/server/sqlite3.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToRightmost	src/server/sqlite3.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRoot	src/server/sqlite3.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
moveVector	src/renderergl1/tr_local.h	/^	vec3_t		moveVector;$/;"	m	struct:__anon139
moveVector	src/renderergl2/tr_local.h	/^	vec3_t		moveVector;$/;"	m	struct:__anon21
moveclip_t	src/server/sv_world.c	/^} moveclip_t;$/;"	t	typeref:struct:__anon182	file:
movedir	src/game/g_local.h	/^  vec3_t            movedir;$/;"	m	struct:gentity_s
movementDir	src/cgame/cg_local.h	/^	int			movementDir;	\/\/ a number 0 to 7 that represents the reletive angle$/;"	m	struct:__anon256
movementDir	src/client/client.h	/^	int			movementDir;	\/\/ a number 0 to 7 that represents the relative angle$/;"	m	struct:alternatePlayerState_s
movementDir	src/qcommon/msg.c	/^	int			movementDir;	\/\/ a number 0 to 7 that represents the relative angle$/;"	m	struct:alternatePlayerState_s	file:
movementDir	src/qcommon/q_shared.h	/^	int			movementDir;	\/\/ a number 0 to 7 that represents the relative angle$/;"	m	struct:playerState_s
moverState	src/game/g_local.h	/^  moverState_t      moverState;$/;"	m	struct:gentity_s
moverState_t	src/game/g_local.h	/^} moverState_t;$/;"	t	typeref:enum:__anon308
moveself	src/tools/lcc/src/gen.c	/^static int moveself(Node p) {$/;"	f	file:
movetoTarget	src/server/sqlite3.c	/^  i64 movetoTarget;     \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
movetokenrow	src/tools/lcc/cpp/tokens.c	/^movetokenrow(Tokenrow *dtr, Tokenrow *str)$/;"	f
moviOffset	src/client/cl_avi.c	/^  int           moviOffset;$/;"	m	struct:aviFileData_s	file:
moviSize	src/client/cl_avi.c	/^  int           moviSize;$/;"	m	struct:aviFileData_s	file:
movieCount	src/ui/ui_local.h	/^  int movieCount;$/;"	m	struct:__anon518
movieIndex	src/ui/ui_local.h	/^  int movieIndex;$/;"	m	struct:__anon518
movieList	src/ui/ui_local.h	/^  const char *movieList[MAX_MOVIES];$/;"	m	struct:__anon518
mprintf	src/server/sqlite3.c	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
msaaResolveFbo	src/renderergl2/tr_local.h	/^	FBO_t					*msaaResolveFbo;$/;"	m	struct:__anon63
msec	src/client/client.h	/^	unsigned	msec;			\/\/ msec down this frame if both a down and up happened$/;"	m	struct:__anon91
msec	src/game/bg_local.h	/^  int       msec;$/;"	m	struct:__anon324
msec	src/renderergl1/tr_local.h	/^	int		msec;			\/\/ total msec for backend run$/;"	m	struct:__anon161
msec	src/renderergl2/tr_local.h	/^	int		msec;			\/\/ total msec for backend run$/;"	m	struct:__anon61
msg	src/server/server.h	/^	msg_t           msg;$/;"	m	struct:netchan_buffer_s
msgBuffer	src/server/server.h	/^	byte            msgBuffer[MAX_MSGLEN];$/;"	m	struct:netchan_buffer_s
msgHuff	src/qcommon/msg.c	/^static huffman_t		msgHuff;$/;"	v	file:
msgInit	src/qcommon/msg.c	/^static qboolean			msgInit = qfalse;$/;"	v	file:
msg_hData	src/qcommon/msg.c	/^int msg_hData[256] = {$/;"	v
msg_level_t	src/master/common.h	/^} msg_level_t;$/;"	t	typeref:enum:__anon383
msg_t	src/qcommon/qcommon.h	/^} msg_t;$/;"	t	typeref:struct:__anon418
msgs	src/qcommon/net_chan.c	/^	loopmsg_t	msgs[MAX_LOOPBACK];$/;"	m	struct:__anon448	file:
msize	src/server/sqlite3.c	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines	file:
msurface_s	src/renderergl1/tr_local.h	/^typedef struct msurface_s {$/;"	s
msurface_s	src/renderergl2/tr_local.h	/^typedef struct msurface_s {$/;"	s
msurface_t	src/renderergl1/tr_local.h	/^} msurface_t;$/;"	t	typeref:struct:msurface_s
msurface_t	src/renderergl2/tr_local.h	/^} msurface_t;$/;"	t	typeref:struct:msurface_s
mulawToShort	src/client/snd_wavelet.c	/^short mulawToShort[256];$/;"	v
muld	src/tools/lcc/src/simp.c	/^static int muld(double x, double y, double min, double max, int needconst) {$/;"	f	file:
muli	src/tools/lcc/src/simp.c	/^static int muli(long x, long y, long min, long max, int needconst) {$/;"	f	file:
mulops_calls	src/tools/lcc/src/c.h	/^	unsigned mulops_calls:1;$/;"	m	struct:interface
multi	src/ui/ui_shared.h	/^    multiDef_t     *multi;$/;"	m	union:itemDef_s::__anon502
multiDef_s	src/ui/ui_shared.h	/^typedef struct multiDef_s$/;"	s
multiDef_t	src/ui/ui_shared.h	/^multiDef_t;$/;"	t	typeref:struct:multiDef_s
multiDrawArrays	src/renderergl2/tr_local.h	/^	qboolean    multiDrawArrays;$/;"	m	struct:__anon60
multiDrawFirstIndex	src/renderergl2/tr_local.h	/^	glIndex_t  *multiDrawFirstIndex[MAX_MULTIDRAW_PRIMITIVES];$/;"	m	struct:shaderCommands_s
multiDrawMaxIndex	src/renderergl2/tr_local.h	/^	glIndex_t   multiDrawMaxIndex[MAX_MULTIDRAW_PRIMITIVES];$/;"	m	struct:shaderCommands_s
multiDrawMinIndex	src/renderergl2/tr_local.h	/^	glIndex_t   multiDrawMinIndex[MAX_MULTIDRAW_PRIMITIVES];$/;"	m	struct:shaderCommands_s
multiDrawNumIndexes	src/renderergl2/tr_local.h	/^	GLsizei     multiDrawNumIndexes[MAX_MULTIDRAW_PRIMITIVES];$/;"	m	struct:shaderCommands_s
multiDrawPrimitives	src/renderergl2/tr_local.h	/^	int         multiDrawPrimitives;$/;"	m	struct:shaderCommands_s
multiSelect	src/server/sqlite3.c	/^static int multiSelect($/;"	f	file:
multiSelectCollSeq	src/server/sqlite3.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectOrderBy	src/server/sqlite3.c	/^static int multiSelectOrderBy($/;"	f	file:
multiSelectOrderByKeyInfo	src/server/sqlite3.c	/^static KeyInfo *multiSelectOrderByKeyInfo(Parse *pParse, Select *p, int nExtra){$/;"	f	file:
multiSelectValues	src/server/sqlite3.c	/^static int multiSelectValues($/;"	f	file:
multi_trigger	src/game/g_trigger.c	/^void multi_trigger( gentity_t *ent, gentity_t *activator )$/;"	f
multi_wait	src/game/g_trigger.c	/^void multi_wait( gentity_t *ent )$/;"	f
multitextureBlend	src/renderergl1/tr_shader.c	/^	int		multitextureBlend;$/;"	m	struct:__anon127	file:
multitextureEnv	src/renderergl1/tr_local.h	/^	int			multitextureEnv;		\/\/ 0, GL_MODULATE, GL_ADD (FIXME: put in stage)$/;"	m	struct:shader_s
multitextureEnv	src/renderergl1/tr_shader.c	/^	int		multitextureEnv;$/;"	m	struct:__anon127	file:
multree	src/tools/lcc/src/enode.c	/^static Tree multree(int op, Tree l, Tree r) {$/;"	f	file:
mumble_islinked	src/client/libmumblelink.c	/^int mumble_islinked(void)$/;"	f
mumble_link	src/client/libmumblelink.c	/^int mumble_link(const char* name)$/;"	f
mumble_set_context	src/client/libmumblelink.c	/^void mumble_set_context(const unsigned char* context, size_t len)$/;"	f
mumble_set_description	src/client/libmumblelink.c	/^void mumble_set_description(const char* description)$/;"	f
mumble_set_identity	src/client/libmumblelink.c	/^void mumble_set_identity(const char* identity)$/;"	f
mumble_unlink	src/client/libmumblelink.c	/^void mumble_unlink()$/;"	f
mumble_update_coordinates	src/client/libmumblelink.c	/^void mumble_update_coordinates(float fPosition[3], float fFront[3], float fTop[3])$/;"	f
mumble_update_coordinates2	src/client/libmumblelink.c	/^void mumble_update_coordinates2(float fAvatarPosition[3], float fAvatarFront[3], float fAvatarTop[3],$/;"	f
mus_stream	src/client/snd_openal.c	/^static snd_stream_t *mus_stream;$/;"	v	file:
musicBuffers	src/client/snd_openal.c	/^static ALuint musicBuffers[NUM_MUSIC_BUFFERS];$/;"	v	file:
musicPlaying	src/client/snd_openal.c	/^static qboolean musicPlaying = qfalse;$/;"	v	file:
musicSource	src/client/snd_openal.c	/^static ALuint musicSource;$/;"	v	file:
musicSourceHandle	src/client/snd_openal.c	/^static srcHandle_t musicSourceHandle = -1;$/;"	v	file:
muteAllVoip	src/server/server.h	/^	qboolean muteAllVoip;$/;"	m	struct:client_s
muted	src/game/g_local.h	/^  qboolean          muted;$/;"	m	struct:namelog_s
mutex	src/server/sqlite3.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	src/server/sqlite3.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;           \/* Mutex to protect pMain *\/$/;"	m	struct:rbu_vfs	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon203	file:
mutex	src/server/sqlite3.c	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config	file:
mutexIsInit	src/server/sqlite3.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutex_alloc	src/server/sqlite3.c	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
mutex_enter	src/server/sqlite3.c	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_free	src/server/sqlite3.c	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_leave	src/server/sqlite3.c	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_try	src/server/sqlite3.c	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
muzzle	src/game/g_weapon.c	/^static  vec3_t  muzzle;$/;"	v	file:
muzzleFlashTime	src/cgame/cg_local.h	/^  int                   muzzleFlashTime;  \/\/ move to playerEntity?$/;"	m	struct:centity_s
muzzleFlashTime2	src/cgame/cg_local.h	/^  int                   muzzleFlashTime2; \/\/ move to playerEntity?$/;"	m	struct:centity_s
muzzleFlashTime3	src/cgame/cg_local.h	/^  int                   muzzleFlashTime3; \/\/ move to playerEntity?$/;"	m	struct:centity_s
muzzlePS	src/cgame/cg_local.h	/^  particleSystem_t      *muzzlePS;$/;"	m	struct:centity_s
muzzleParticleSystem	src/cgame/cg_local.h	/^  qhandle_t   muzzleParticleSystem;$/;"	m	struct:weaponInfoMode_s
muzzlePsTrigger	src/cgame/cg_local.h	/^  qboolean              muzzlePsTrigger;$/;"	m	struct:centity_s
muzzleTS	src/cgame/cg_local.h	/^  trailSystem_t         *muzzleTS; \/\/used for the tesla and reactor$/;"	m	struct:centity_s
muzzleTSDeathTime	src/cgame/cg_local.h	/^  int                   muzzleTSDeathTime;$/;"	m	struct:centity_s
mxAlloc	src/server/sqlite3.c	/^  u32  mxAlloc;        \/* Maximum allowed allocation.  0 for no malloc usage *\/$/;"	m	struct:StrAccum	file:
mxCurrent	src/server/sqlite3.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon203	file:
mxErr	src/server/sqlite3.c	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk	file:
mxFrame	src/server/sqlite3.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxKeysize	src/server/sqlite3.c	/^  int mxKeysize;                  \/* Largest serialized key seen so far *\/$/;"	m	struct:VdbeSorter	file:
mxLevel	src/server/sqlite3.c	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
mxLevel	src/server/sqlite3.c	/^  int mxLevel;                      \/* iLevel value for root of the tree *\/$/;"	m	struct:RtreeCursor	file:
mxLevel	src/server/sqlite3.h	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxMmap	src/server/sqlite3.c	/^  sqlite3_int64 mxMmap;             \/* Maximum value for szMmap *\/$/;"	m	struct:Sqlite3Config	file:
mxOut	src/server/sqlite3.c	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside	file:
mxParserStack	src/server/sqlite3.c	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config	file:
mxPathname	src/server/sqlite3.c	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	file:
mxPathname	src/server/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
mxPgno	src/server/sqlite3.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPinned	src/server/sqlite3.c	/^  unsigned int mxPinned;         \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPmaSize	src/server/sqlite3.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxReg	src/server/sqlite3.c	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo	file:
mxReq	src/server/sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mxSample	src/server/sqlite3.c	/^  int mxSample;             \/* Maximum number of samples to accumulate *\/$/;"	m	struct:Stat4Accum	file:
mxSavepoint	src/server/sqlite3.c	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table	file:
mxStrlen	src/server/sqlite3.c	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config	file:
mxSz	src/server/sqlite3.c	/^  int mxSz;                       \/* Maximum bytes of data to store *\/$/;"	m	struct:IncrMerger	file:
mxValue	src/server/sqlite3.c	/^  sqlite3StatValueType mxValue[10];   \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxWalSize	src/server/sqlite3.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
myGlMultMatrix	src/renderergl1/tr_main.c	/^void myGlMultMatrix( const float *a, const float *b, float *out ) {$/;"	f
myGlMultMatrix	src/renderergl2/tr_main.c	/^void myGlMultMatrix( const float *a, const float *b, float *out ) {$/;"	f
myPlayerIndex	src/ui/ui_local.h	/^  int myPlayerIndex;$/;"	m	struct:__anon518
myTeamCount	src/ui/ui_local.h	/^  int myTeamCount;$/;"	m	struct:__anon518
my_dest_ptr	src/renderercommon/tr_image_jpg.c	/^typedef my_destination_mgr * my_dest_ptr;$/;"	t	file:
my_destination_mgr	src/renderercommon/tr_image_jpg.c	/^} my_destination_mgr;$/;"	t	typeref:struct:__anon111	file:
myargc	src/tools/asm/cmdlib.c	/^int myargc;$/;"	v
myargv	src/tools/asm/cmdlib.c	/^char **myargv;$/;"	v
myfopen	src/tools/asm/cmdlib.c	/^static FILE* myfopen(const char* filename, const char* mode)$/;"	f	file:
myoffsetof	src/tools/asm/cmdlib.h	64;"	d
n	src/qcommon/parse.c	/^  int n;                      \/\/punctuation indication$/;"	m	struct:punctuation_s	file:
n	src/server/sqlite3.c	/^    int n;                                     \/* A counter *\/$/;"	m	union:Walker::__anon201	file:
n	src/server/sqlite3.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	src/server/sqlite3.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	src/server/sqlite3.c	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken	file:
n	src/server/sqlite3.c	/^  int n;                          \/* Number of valid bytes of data in a[] *\/$/;"	m	struct:Blob	file:
n	src/server/sqlite3.c	/^  int n;                          \/* Size of buffer a[] in bytes *\/$/;"	m	struct:Fts5LookaheadReader	file:
n	src/server/sqlite3.c	/^  int n;                          \/* Size of buffer at a[] in bytes *\/$/;"	m	struct:Fts5PoslistReader	file:
n	src/server/sqlite3.c	/^  int n;                          \/* Size of buffer p in bytes *\/$/;"	m	struct:Fts5Token	file:
n	src/server/sqlite3.c	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet	file:
n	src/server/sqlite3.c	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:Mem	file:
n	src/server/sqlite3.c	/^  int n;            \/* Size of record in bytes *\/$/;"	m	struct:IndexSample	file:
n	src/server/sqlite3.c	/^  int n;$/;"	m	struct:Fts5Buffer	file:
n	src/server/sqlite3.c	/^  u16 n;                      \/* Number of valid a[] entries *\/$/;"	m	struct:WhereOrSet	file:
n	src/server/sqlite3.c	/^  u32 n;                 \/* Bytes of content, or number of sub-nodes *\/$/;"	m	struct:JsonNode	file:
n	src/server/sqlite3.c	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token	file:
n	src/tools/lcc/lburg/gram.c	/^	int n;$/;"	m	union:YYSTYPE	file:
n90pct	src/server/sqlite3.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
nAccumulator	src/server/sqlite3.c	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo	file:
nAdvance	src/server/sqlite3.c	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader	file:
nAlias	src/server/sqlite3.c	/^  int nAlias;               \/* Number of aliased result set columns *\/$/;"	m	struct:Parse	file:
nAll	src/server/sqlite3.c	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist	file:
nAlloc	src/server/sqlite3.c	/^  int nAlloc;                     \/* Allocated size of a[] (nAlloc>=n) *\/$/;"	m	struct:Blob	file:
nAlloc	src/server/sqlite3.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	src/server/sqlite3.c	/^  int nAlloc;                     \/* Total size of allocation *\/$/;"	m	struct:Fts5HashEntry	file:
nAlloc	src/server/sqlite3.c	/^  int nAlloc;                     \/* space allocated at zToken *\/$/;"	m	struct:unicode_cursor	file:
nAlloc	src/server/sqlite3.c	/^  int nAlloc;                 \/* Bytes of space at aAlloc *\/$/;"	m	struct:PmaReader	file:
nAlloc	src/server/sqlite3.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon203	file:
nAlloc	src/server/sqlite3.c	/^  u32  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum	file:
nAlloc	src/server/sqlite3.c	/^  u32 nAlloc;        \/* Number of slots of aNode[] allocated *\/$/;"	m	struct:JsonParse	file:
nAlloc	src/server/sqlite3.c	/^  u32 nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	src/server/sqlite3.c	/^  u32 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList	file:
nAlloc	src/server/sqlite3.c	/^  u64 nAlloc;              \/* Bytes of storage available in zBuf[] *\/$/;"	m	struct:JsonString	file:
nAlloc	src/server/sqlite3.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAllocated	src/server/sqlite3.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nArg	src/server/sqlite3.c	/^  i8 nArg;             \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef	file:
nArg	src/server/sqlite3.c	/^  int nArg;                \/* Total number of arguments *\/$/;"	m	struct:PrintfArguments	file:
nAuthPW	src/server/sqlite3.c	/^  int nAuthPW;                  \/* Size of the zAuthPW in bytes *\/$/;"	m	struct:sqlite3_userauth	file:
nAutoincrmerge	src/server/sqlite3.c	/^  int nAutoincrmerge;             \/* Value configured by 'automerge' *\/$/;"	m	struct:Fts3Table	file:
nAutomerge	src/server/sqlite3.c	/^  int nAutomerge;                 \/* 'automerge' setting *\/$/;"	m	struct:Fts5Config	file:
nBackfill	src/server/sqlite3.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBackfillAttempted	src/server/sqlite3.c	/^  u32 nBackfillAttempted;         \/* WAL frames perhaps written, or maybe not *\/$/;"	m	struct:WalCkptInfo	file:
nBacktrace	src/server/sqlite3.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	src/server/sqlite3.c	/^  int nBacktrace;$/;"	m	struct:__anon203	file:
nBacktraceSlots	src/server/sqlite3.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBackup	src/server/sqlite3.c	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree	file:
nBlock	src/server/sqlite3.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBuffer	src/server/sqlite3.c	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nBuffer	src/server/sqlite3.c	/^  int nBuffer;                    \/* Size of write buffer in bytes *\/$/;"	m	struct:PmaWriter	file:
nBuffer	src/server/sqlite3.c	/^  int nBuffer;                \/* Size of read buffer in bytes *\/$/;"	m	struct:PmaReader	file:
nBuffer	src/server/sqlite3.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBusy	src/server/sqlite3.c	/^  int nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nBusy	src/server/sqlite3.c	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler	file:
nByte	src/server/sqlite3.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nBytes	src/server/sqlite3.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytesPerCell	src/server/sqlite3.c	/^  u8 nBytesPerCell;           \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nCell	src/server/sqlite3.c	/^  int nCell;                      \/* Number of cells on page *\/$/;"	m	struct:StatPage	file:
nCell	src/server/sqlite3.c	/^  int nCell;                      \/* Value of 'ncell' column *\/$/;"	m	struct:StatCursor	file:
nCell	src/server/sqlite3.c	/^  int nCell;              \/* Number of cells in apCell[] *\/$/;"	m	struct:CellArray	file:
nCell	src/server/sqlite3.c	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage	file:
nChange	src/server/sqlite3.c	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3	file:
nChange	src/server/sqlite3.c	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe	file:
nChange	src/server/sqlite3.c	/^  int nChange;            \/* Statement changes (Vdbe.nChange)     *\/$/;"	m	struct:VdbeFrame	file:
nChar	src/server/sqlite3.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	src/server/sqlite3.c	/^  u32  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum	file:
nChild	src/server/sqlite3.c	/^  int nChild;                     \/* Number of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
nChild	src/server/sqlite3.c	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm	file:
nChildCsr	src/server/sqlite3.c	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChildMem	src/server/sqlite3.c	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChunkSize	src/server/sqlite3.c	/^  int nChunkSize;                 \/* In-memory chunk-size *\/$/;"	m	struct:MemJournal	file:
nCkpt	src/server/sqlite3.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCol	src/server/sqlite3.c	/^  i16 nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table	file:
nCol	src/server/sqlite3.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	src/server/sqlite3.c	/^  int nCol;                       \/* Number of columns *\/$/;"	m	struct:Fts5Config	file:
nCol	src/server/sqlite3.c	/^  int nCol;                       \/* Number of columns in current object *\/$/;"	m	struct:RbuObjIter	file:
nCol	src/server/sqlite3.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	src/server/sqlite3.c	/^  int nCol;                 \/* Number of columns in index + pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nCol	src/server/sqlite3.c	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey	file:
nCol	src/server/sqlite3.c	/^  int nCol;$/;"	m	struct:Fts5Colset	file:
nColumn	src/server/sqlite3.c	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table	file:
nColumn	src/server/sqlite3.c	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo	file:
nColumn	src/server/sqlite3.c	/^  u16 nColumn;             \/* Number of columns stored in the index *\/$/;"	m	struct:Index	file:
nColumn	src/server/sqlite3.c	/^  u32 nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nConstraint	src/server/sqlite3.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	src/server/sqlite3.c	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	file:
nConstraint	src/server/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nCoord	src/server/sqlite3.c	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
nCoord	src/server/sqlite3.h	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nCost	src/server/sqlite3.c	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader	file:
nCrisisMerge	src/server/sqlite3.c	/^  int nCrisisMerge;               \/* Maximum allowed segments per level *\/$/;"	m	struct:Fts5Config	file:
nCsr	src/server/sqlite3.c	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram	file:
nCte	src/server/sqlite3.c	/^  int nCte;                       \/* Number of CTEs in the WITH clause *\/$/;"	m	struct:With	file:
nCurrent	src/server/sqlite3.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon203	file:
nCurrentPage	src/server/sqlite3.c	/^  unsigned int nCurrentPage;     \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCursor	src/server/sqlite3.c	/^  int nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame	file:
nCursor	src/server/sqlite3.c	/^  int nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe	file:
nData	src/server/sqlite3.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	src/server/sqlite3.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	src/server/sqlite3.c	/^  int nData;                      \/* Total bytes of data (incl. structure) *\/$/;"	m	struct:Fts5HashEntry	file:
nData	src/server/sqlite3.c	/^  int nData;$/;"	m	struct:Fts5IndexIter	file:
nData	src/server/sqlite3.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	src/server/sqlite3.c	/^  u32 nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nDb	src/server/sqlite3.c	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3	file:
nDbChange	src/server/sqlite3.c	/^  int nDbChange;          \/* Value of db->nChange *\/$/;"	m	struct:VdbeFrame	file:
nDeferredCons	src/server/sqlite3.c	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint	file:
nDeferredCons	src/server/sqlite3.c	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3	file:
nDeferredImmCons	src/server/sqlite3.c	/^  i64 nDeferredImmCons;               \/* Number of deferred imm fk. *\/$/;"	m	struct:Savepoint	file:
nDeferredImmCons	src/server/sqlite3.c	/^  i64 nDeferredImmCons;         \/* Net deferred immediate constraints *\/$/;"	m	struct:sqlite3	file:
nDim	src/server/sqlite3.c	/^  u8 nDim;                    \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDlidx	src/server/sqlite3.c	/^  int nDlidx;                     \/* Allocated size of aDlidx[] array *\/$/;"	m	struct:Fts5SegWriter	file:
nDoc	src/server/sqlite3.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	src/server/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor	file:
nDoc	src/server/sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoclist	src/server/sqlite3.c	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nDoclist	src/server/sqlite3.c	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
nDoclist	src/server/sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in bytes *\/$/;"	m	struct:NodeReader	file:
nDoclist	src/server/sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nElem	src/server/sqlite3.c	/^  int nElem;$/;"	m	struct:MatchinfoBuffer	file:
nEmpty	src/server/sqlite3.c	/^  int nEmpty;                     \/* Number of contiguous term-less nodes *\/$/;"	m	struct:Fts5SegWriter	file:
nEntry	src/server/sqlite3.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEntry	src/server/sqlite3.c	/^  int nEntry;                     \/* Number of entries currently in hash *\/$/;"	m	struct:Fts5Hash	file:
nEntry	src/server/sqlite3.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEq	src/server/sqlite3.c	/^      u16 nEq;               \/* Number of equality constraints *\/$/;"	m	struct:WhereLoop::__anon212::__anon213	file:
nEquiv	src/server/sqlite3.c	/^  unsigned char nEquiv;      \/* Number of entries in aEquiv[] *\/$/;"	m	struct:WhereScan	file:
nErr	src/server/sqlite3.c	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext	file:
nErr	src/server/sqlite3.c	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse	file:
nErr	src/server/sqlite3.c	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk	file:
nErr	src/server/sqlite3.c	/^  u8 nErr;           \/* Number of errors seen *\/$/;"	m	struct:JsonParse	file:
nEst	src/server/sqlite3.c	/^  LogEst nEst;                    \/* Estimated output rows per loop *\/$/;"	m	struct:ScanStatus	file:
nException	src/server/sqlite3.c	/^  int nException;$/;"	m	struct:Unicode61Tokenizer	file:
nException	src/server/sqlite3.c	/^  int nException;$/;"	m	struct:unicode_tokenizer	file:
nExpr	src/server/sqlite3.c	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList	file:
nExt	src/server/sqlite3.c	/^  u32 nExt;              \/* Number of entries in aExt[] *\/          $/;"	m	struct:sqlite3AutoExtList	file:
nExtension	src/server/sqlite3.c	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3	file:
nExtra	src/server/sqlite3.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nFails	src/server/sqlite3.c	/^  int nFails;                  \/* Number of conch taking failures *\/$/;"	m	struct:proxyLockingContext	file:
nFetchOut	src/server/sqlite3.c	/^  int nFetchOut;                      \/* Number of outstanding xFetch refs *\/$/;"	m	struct:unixFile	file:
nFetchOut	src/server/sqlite3.c	/^  int nFetchOut;                \/* Number of outstanding xFetch references *\/$/;"	m	struct:winFile	file:
nField	src/server/sqlite3.c	/^  i16 nField;           \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor	file:
nField	src/server/sqlite3.c	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord	file:
nField	src/server/sqlite3.c	/^  u16 nField;         \/* Number of key columns in the index *\/$/;"	m	struct:KeyInfo	file:
nFkConstraint	src/server/sqlite3.c	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe	file:
nFold	src/server/sqlite3.c	/^  int nFold;                      \/* Size of aFold[] in bytes *\/$/;"	m	struct:Unicode61Tokenizer	file:
nFrame	src/server/sqlite3.c	/^  int nFrame;                     \/* Entries in aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrame	src/server/sqlite3.c	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe	file:
nFrameAlloc	src/server/sqlite3.c	/^  int nFrameAlloc;                \/* Allocated size of aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFree	src/server/sqlite3.c	/^  int nFree;           \/* Bytes of available memory *\/$/;"	m	struct:ReusableSpace	file:
nFree	src/server/sqlite3.c	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage	file:
nFreeSlot	src/server/sqlite3.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFresh	src/server/sqlite3.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFunc	src/server/sqlite3.c	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo	file:
nHash	src/server/sqlite3.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHashSize	src/server/sqlite3.c	/^  int nHashSize;                  \/* Bytes of memory for in-memory hash *\/$/;"	m	struct:Fts5Config	file:
nHdrParsed	src/server/sqlite3.c	/^  u16 nHdrParsed;       \/* Number of header fields parsed so far *\/$/;"	m	struct:VdbeCursor	file:
nHeap	src/server/sqlite3.c	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config	file:
nHeight	src/server/sqlite3.c	/^  int nHeight;              \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse	file:
nHeight	src/server/sqlite3.c	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr	file:
nId	src/server/sqlite3.c	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList	file:
nIdx	src/server/sqlite3.c	/^  int nIdx;                       \/* Number of entries in aIdx[] *\/$/;"	m	struct:Fts5Sorter	file:
nIn	src/server/sqlite3.c	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon210::__anon211	file:
nIn	src/server/sqlite3.c	/^  int nIn;                        \/* Size of input text in bytes *\/$/;"	m	struct:HighlightContext	file:
nIndent	src/server/sqlite3.c	/^  int nIndent;       \/* Number of elements in aIndent *\/$/;"	m	struct:Explain	file:
nIndex	src/server/sqlite3.c	/^  int nIndex;                     \/* Number of aux. indexes on table zTbl *\/$/;"	m	struct:RbuObjIter	file:
nIndex	src/server/sqlite3.c	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table	file:
nInitPage	src/server/sqlite3.c	/^  int nInitPage;                 \/* Initial bulk allocation size *\/   $/;"	m	struct:PCacheGlobal	file:
nInput	src/server/sqlite3.c	/^  int nInput;                     \/* Size of aInput[] in bytes *\/$/;"	m	struct:unicode_cursor	file:
nInput	src/server/sqlite3.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInst	src/server/sqlite3.c	/^  int nInst;                      \/* Total number of phrase instances *\/$/;"	m	struct:CInstIter	file:
nInstAlloc	src/server/sqlite3.c	/^  int nInstAlloc;                 \/* Size of aInst[] array (entries \/ 3) *\/$/;"	m	struct:Fts5Cursor	file:
nInstCount	src/server/sqlite3.c	/^  int nInstCount;                 \/* Number of phrase instances *\/$/;"	m	struct:Fts5Cursor	file:
nKey	src/server/sqlite3.c	/^  i64 nKey;                 \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor	file:
nKey	src/server/sqlite3.c	/^  i64 nKey;      \/* The key for INTKEY tables, or nPayload otherwise *\/$/;"	m	struct:CellInfo	file:
nKey	src/server/sqlite3.c	/^  int nKey;                       \/* Length of zKey[] in bytes *\/$/;"	m	struct:Fts5HashEntry	file:
nKey	src/server/sqlite3.c	/^  int nKey;                   \/* Number of bytes in key *\/$/;"	m	struct:PmaReader	file:
nKey	src/server/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
nKeyCol	src/server/sqlite3.c	/^  int nKeyCol;              \/* Number of index columns w\/o the pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nKeyCol	src/server/sqlite3.c	/^  u16 nKeyCol;             \/* Number of columns forming the key *\/$/;"	m	struct:Index	file:
nLSlot	src/server/sqlite3.c	/^  u16 nLSlot;           \/* Number of slots allocated for aLTerm[] *\/$/;"	m	struct:WhereLoop	file:
nLTerm	src/server/sqlite3.c	/^  u16 nLTerm;           \/* Number of entries in aLTerm[] *\/$/;"	m	struct:WhereLoop	file:
nLabel	src/server/sqlite3.c	/^  int nLabel;          \/* Number of labels used *\/$/;"	m	struct:Parse	file:
nLastOvfl	src/server/sqlite3.c	/^  int nLastOvfl;                  \/* Bytes of payload on final overflow page *\/$/;"	m	struct:StatCell	file:
nLeTerm	src/server/sqlite3.c	/^  int nLeTerm;                    \/* Size of zLeTerm in bytes *\/$/;"	m	struct:Fts5VocabCursor	file:
nLeafAdd	src/server/sqlite3.c	/^  u32 nLeafAdd;                   \/* Number of leaf blocks added this trans *\/$/;"	m	struct:Fts3Table	file:
nLeafData	src/server/sqlite3.c	/^  i64 nLeafData;                  \/* Number of bytes of leaf data written *\/$/;"	m	struct:SegmentWriter	file:
nLeafData	src/server/sqlite3.c	/^  sqlite3_int64 nLeafData;        \/* Bytes of leaf page data so far *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafEst	src/server/sqlite3.c	/^  int nLeafEst;                   \/* Space allocated for leaf blocks *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafWritten	src/server/sqlite3.c	/^  int nLeafWritten;               \/* Number of leaf pages written *\/$/;"	m	struct:Fts5SegWriter	file:
nLevel	src/server/sqlite3.c	/^  int nLevel;                     \/* Number of levels in this index *\/$/;"	m	struct:Fts5Structure	file:
nLevel	src/server/sqlite3.c	/^  u8 nLevel;                \/* Number of nested loop *\/$/;"	m	struct:WhereInfo	file:
nList	src/server/sqlite3.c	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist	file:
nList	src/server/sqlite3.c	/^  int nList;$/;"	m	struct:TokenDoclist	file:
nLocal	src/server/sqlite3.c	/^  int nLocal;                     \/* Bytes of local payload *\/$/;"	m	struct:StatCell	file:
nLocal	src/server/sqlite3.c	/^  u16 nLocal;    \/* Amount of payload held locally, not on overflow *\/$/;"	m	struct:CellInfo	file:
nLock	src/server/sqlite3.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLookaside	src/server/sqlite3.c	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config	file:
nLvl	src/server/sqlite3.c	/^  int nLvl;$/;"	m	struct:Fts5DlidxIter	file:
nMalloc	src/server/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	src/server/sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMax	src/server/sqlite3.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMaxArg	src/server/sqlite3.c	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse	file:
nMaxPage	src/server/sqlite3.c	/^  unsigned int nMaxPage;         \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPendingData	src/server/sqlite3.c	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table	file:
nMaxSorterMmap	src/server/sqlite3.c	/^  int nMaxSorterMmap;           \/* Maximum size of regions mapped by sorter *\/$/;"	m	struct:sqlite3	file:
nMem	src/server/sqlite3.c	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram	file:
nMem	src/server/sqlite3.c	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame	file:
nMem	src/server/sqlite3.c	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe	file:
nMem	src/server/sqlite3.c	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse	file:
nMemory	src/server/sqlite3.c	/^  int nMemory;                    \/* Size of list.aMemory allocation in bytes *\/$/;"	m	struct:VdbeSorter	file:
nMerge	src/server/sqlite3.c	/^  int nMerge;                     \/* Number of segments in incr-merge *\/$/;"	m	struct:Fts5StructureLevel	file:
nMin	src/server/sqlite3.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMinPage	src/server/sqlite3.c	/^  unsigned int nMinPage;         \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMmapOut	src/server/sqlite3.c	/^  int nMmapOut;               \/* Number of mmap pages currently outstanding *\/$/;"	m	struct:Pager	file:
nModuleArg	src/server/sqlite3.c	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table	file:
nMxPayload	src/server/sqlite3.c	/^  int nMxPayload;                 \/* Largest payload of any cell on this page *\/$/;"	m	struct:StatPage	file:
nMxPayload	src/server/sqlite3.c	/^  int nMxPayload;                 \/* Value of 'mx_payload' column *\/$/;"	m	struct:StatCursor	file:
nName	src/server/sqlite3.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nNear	src/server/sqlite3.c	/^  int nNear;                      \/* NEAR parameter *\/$/;"	m	struct:Fts5ExprNearset	file:
nNear	src/server/sqlite3.c	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr	file:
nNeeded	src/server/sqlite3.c	/^  int nNeeded;         \/* Total bytes that could not be allocated *\/$/;"	m	struct:ReusableSpace	file:
nNest	src/server/sqlite3.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNode	src/server/sqlite3.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNode	src/server/sqlite3.c	/^  int nNode;$/;"	m	struct:NodeReader	file:
nNode	src/server/sqlite3.c	/^  u32 nNode;         \/* Number of slots of aNode[] used *\/$/;"	m	struct:JsonParse	file:
nNodeSize	src/server/sqlite3.c	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table	file:
nOBSat	src/server/sqlite3.c	/^  i8 nOBSat;                \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:WhereInfo	file:
nOBSat	src/server/sqlite3.c	/^  int nOBSat;           \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:SortCtx	file:
nOcc	src/server/sqlite3.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOffsetList	src/server/sqlite3.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOnce	src/server/sqlite3.c	/^  int nOnce;                    \/* Number of OP_Once instructions *\/$/;"	m	struct:SubProgram	file:
nOnce	src/server/sqlite3.c	/^  int nOnce;           \/* Number of OP_Once instructions so far *\/$/;"	m	struct:Parse	file:
nOnceFlag	src/server/sqlite3.c	/^  int nOnceFlag;          \/* Number of entries in aOnceFlag *\/$/;"	m	struct:VdbeFrame	file:
nOnceFlag	src/server/sqlite3.c	/^  int nOnceFlag;          \/* Size of array aOnceFlag[] *\/$/;"	m	struct:Vdbe	file:
nOp	src/server/sqlite3.c	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram	file:
nOp	src/server/sqlite3.c	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe	file:
nOp	src/server/sqlite3.c	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame	file:
nOpAlloc	src/server/sqlite3.c	/^  int nOpAlloc;        \/* Number of slots allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse	file:
nOrderBy	src/server/sqlite3.c	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	file:
nOrderBy	src/server/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nOrig	src/server/sqlite3.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOther	src/server/sqlite3.c	/^  int nOther;      \/* Number of references to columns in other FROM clauses *\/$/;"	m	struct:SrcCount	file:
nOut	src/server/sqlite3.c	/^  LogEst nOut;          \/* Estimated number of output rows *\/$/;"	m	struct:WhereLoop	file:
nOut	src/server/sqlite3.c	/^  LogEst nOut;        \/* Number of outputs for this subquery *\/$/;"	m	struct:WhereOrCost	file:
nOut	src/server/sqlite3.c	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside	file:
nOutput	src/server/sqlite3.c	/^  int nOutput;$/;"	m	struct:PorterRule	file:
nOverflow	src/server/sqlite3.c	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage	file:
nOvfl	src/server/sqlite3.c	/^  int nOvfl;                      \/* Entries in aOvfl[] *\/$/;"	m	struct:StatCell	file:
nOvfl	src/server/sqlite3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nOvflAlloc	src/server/sqlite3.c	/^  int nOvflAlloc;           \/* Allocated size of aOverflow[] array *\/$/;"	m	struct:BtCursor	file:
nPMA	src/server/sqlite3.c	/^  int nPMA;                       \/* Number of PMAs currently in file *\/$/;"	m	struct:SortSubtask	file:
nPSample	src/server/sqlite3.c	/^  tRowcnt nPSample;         \/* How often to do a periodic sample *\/$/;"	m	struct:Stat4Accum	file:
nPage	src/server/sqlite3.c	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk	file:
nPage	src/server/sqlite3.c	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
nPage	src/server/sqlite3.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPage	src/server/sqlite3.c	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared	file:
nPage	src/server/sqlite3.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPagecount	src/server/sqlite3.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nParam	src/server/sqlite3.c	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
nParam	src/server/sqlite3.c	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
nParam	src/server/sqlite3.c	/^  int nParam;                 \/* Number of parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
nParam	src/server/sqlite3.h	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	src/server/sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nPayload	src/server/sqlite3.c	/^  int nPayload;                   \/* Value of 'payload' column *\/$/;"	m	struct:StatCursor	file:
nPayload	src/server/sqlite3.c	/^  u32 nPayload;  \/* Bytes of payload *\/$/;"	m	struct:CellInfo	file:
nPendingData	src/server/sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table	file:
nPendingData	src/server/sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts5Index	file:
nPgsz	src/server/sqlite3.c	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table	file:
nPhaseOneStep	src/server/sqlite3.c	/^  i64 nPhaseOneStep;$/;"	m	struct:RbuState	file:
nPhaseOneStep	src/server/sqlite3.c	/^  i64 nPhaseOneStep;$/;"	m	struct:sqlite3rbu	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of entries in aPhrase[] array *\/$/;"	m	struct:Fts5ExprNearset	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in expression *\/$/;"	m	struct:Fts5Expr	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:Fts5Bm25Data	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPhrase	src/server/sqlite3.c	/^  int nPhrase;                    \/* Size of apPhrase array *\/$/;"	m	struct:Fts5Parse	file:
nPoint	src/server/sqlite3.c	/^  int nPoint;                       \/* Number of slots used in aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPointAlloc	src/server/sqlite3.c	/^  int nPointAlloc;                  \/* Number of slots allocated for aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPool	src/server/sqlite3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPopulate	src/server/sqlite3.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPos	src/server/sqlite3.c	/^  int nPos;                       \/* Number of bytes in current position list *\/$/;"	m	struct:Fts5SegIter	file:
nPoslist	src/server/sqlite3.c	/^  int nPoslist;$/;"	m	struct:Fts5DoclistIter	file:
nPrefix	src/server/sqlite3.c	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
nPrefix	src/server/sqlite3.c	/^  int nPrefix;                    \/* Number of prefix indexes *\/$/;"	m	struct:Fts5Config	file:
nProgress	src/server/sqlite3.c	/^  i64 nProgress;$/;"	m	struct:RbuState	file:
nProgress	src/server/sqlite3.c	/^  int nProgress;                  \/* Rows processed for all objects *\/$/;"	m	struct:sqlite3rbu	file:
nProgressOps	src/server/sqlite3.c	/^  unsigned nProgressOps;        \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3	file:
nQueryLoop	src/server/sqlite3.c	/^  u32 nQueryLoop;      \/* Est number of iterations of a query (10*log2(N)) *\/$/;"	m	struct:Parse	file:
nRangeReg	src/server/sqlite3.c	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse	file:
nRankArg	src/server/sqlite3.c	/^  int nRankArg;                   \/* Number of trailing arguments for rank() *\/$/;"	m	struct:Fts5Cursor	file:
nRead	src/server/sqlite3.c	/^  int nRead;                      \/* Total number of blocks read *\/$/;"	m	struct:Fts5Index	file:
nRead	src/server/sqlite3.c	/^  int nRead;                  \/* Database pages read *\/$/;"	m	struct:Pager	file:
nReaders	src/server/sqlite3.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nRec	src/server/sqlite3.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRecValid	src/server/sqlite3.c	/^  int nRecValid;            \/* Number of valid fields currently in pRec *\/$/;"	m	struct:WhereLoopBuilder	file:
nRecyclable	src/server/sqlite3.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRef	src/server/sqlite3.c	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr	file:
nRef	src/server/sqlite3.c	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab	file:
nRef	src/server/sqlite3.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	src/server/sqlite3.c	/^  int nRef;                       \/* Object reference count *\/$/;"	m	struct:Fts5Structure	file:
nRef	src/server/sqlite3.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	src/server/sqlite3.c	/^  int nRef;                   \/* Number of references to this node *\/$/;"	m	struct:RtreeNode	file:
nRef	src/server/sqlite3.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	src/server/sqlite3.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	src/server/sqlite3.c	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable	file:
nRef	src/server/sqlite3.c	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared	file:
nRef	src/server/sqlite3.c	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext	file:
nRef	src/server/sqlite3.c	/^  int nRef;$/;"	m	struct:FuncDestructor	file:
nRef	src/server/sqlite3.c	/^  u16 nRef;            \/* Number of pointers to this Table *\/$/;"	m	struct:Table	file:
nRef	src/server/sqlite3.c	/^  u32 nRef;           \/* Number of references to this KeyInfo object *\/$/;"	m	struct:KeyInfo	file:
nRef	src/server/sqlite3.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	src/server/sqlite3.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	src/server/sqlite3.h	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab
nRefInitMutex	src/server/sqlite3.c	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config	file:
nRefSum	src/server/sqlite3.c	/^  int nRefSum;                        \/* Sum of ref counts over all pages *\/$/;"	m	struct:PCache	file:
nRegion	src/server/sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRegion	src/server/sqlite3.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRemaining	src/server/sqlite3.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nResColumn	src/server/sqlite3.c	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe	file:
nReserve	src/server/sqlite3.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	src/server/sqlite3.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nRow	src/server/sqlite3.c	/^  LogEst nRow;          \/* Estimated number of rows generated by this path *\/$/;"	m	struct:WherePath	file:
nRow	src/server/sqlite3.c	/^  int nRow;$/;"	m	struct:RbuState	file:
nRow	src/server/sqlite3.c	/^  tRowcnt nRow;             \/* Number of rows in the entire table *\/$/;"	m	struct:Stat4Accum	file:
nRow	src/server/sqlite3.c	/^  u32 nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRowAvg	src/server/sqlite3.c	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor	file:
nRowEst	src/server/sqlite3.c	/^  i64 nRowEst;                \/* Estimated number of rows in this table *\/$/;"	m	struct:Rtree	file:
nRowEst0	src/server/sqlite3.c	/^  tRowcnt nRowEst0;        \/* Non-logarithmic number of rows in the index *\/$/;"	m	struct:Index	file:
nRowLogEst	src/server/sqlite3.c	/^  LogEst nRowLogEst;   \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table	file:
nRowOut	src/server/sqlite3.c	/^  LogEst nRowOut;           \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo	file:
nRowid	src/server/sqlite3.c	/^  u32 nRowid;                     \/* Sizeof aRowid[] *\/$/;"	m	struct:Stat4Sample	file:
nRowidOffset	src/server/sqlite3.c	/^  int nRowidOffset;               \/* Allocated size of aRowidOffset[] array *\/$/;"	m	struct:Fts5SegIter	file:
nSample	src/server/sqlite3.c	/^  int nSample;              \/* Current number of samples *\/$/;"	m	struct:Stat4Accum	file:
nSample	src/server/sqlite3.c	/^  int nSample;             \/* Number of elements in aSample[] *\/$/;"	m	struct:Index	file:
nSampleCol	src/server/sqlite3.c	/^  int nSampleCol;          \/* Size of IndexSample.anEq[] and so on *\/$/;"	m	struct:Index	file:
nSavepoint	src/server/sqlite3.c	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3	file:
nSavepoint	src/server/sqlite3.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nScan	src/server/sqlite3.c	/^  int nScan;              \/* Entries in aScan[] *\/$/;"	m	struct:Vdbe	file:
nScratch	src/server/sqlite3.c	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config	file:
nScratchFree	src/server/sqlite3.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nSdst	src/server/sqlite3.c	/^  int nSdst;           \/* Number of registers allocated *\/$/;"	m	struct:SelectDest	file:
nSeg	src/server/sqlite3.c	/^  int nSeg;                       \/* Size of aSeg[] array *\/$/;"	m	struct:Fts5Iter	file:
nSeg	src/server/sqlite3.c	/^  int nSeg;                       \/* Total number of segments on level *\/$/;"	m	struct:Fts5StructureLevel	file:
nSegment	src/server/sqlite3.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSegment	src/server/sqlite3.c	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader	file:
nSegment	src/server/sqlite3.c	/^  int nSegment;                   \/* Total segments in this structure *\/$/;"	m	struct:Fts5Structure	file:
nSelect	src/server/sqlite3.c	/^  int nSelect;         \/* Number of SELECT statements seen *\/$/;"	m	struct:Parse	file:
nSelectIndent	src/server/sqlite3.c	/^  int nSelectIndent;   \/* How far to indent SELECTTRACE() output *\/$/;"	m	struct:Parse	file:
nSelectRow	src/server/sqlite3.c	/^  LogEst nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select	file:
nSet	src/server/sqlite3.c	/^  int nSet;            \/* Number of sets used so far *\/$/;"	m	struct:Parse	file:
nSet	src/server/sqlite3.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nShared	src/server/sqlite3.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nShm	src/server/sqlite3.c	/^  int nShm;                       \/* Number of entries in apShm[] array *\/$/;"	m	struct:rbu_file	file:
nSize	src/server/sqlite3.c	/^  int nSize;                      \/* Bytes of data currently in memory *\/$/;"	m	struct:MemJournal	file:
nSize	src/server/sqlite3.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	src/server/sqlite3.c	/^  int nSize;$/;"	m	struct:Fts5DoclistIter	file:
nSize	src/server/sqlite3.c	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo	file:
nSkip	src/server/sqlite3.c	/^  u16 nSkip;            \/* Number of NULL aLTerm[] entries *\/$/;"	m	struct:WhereLoop	file:
nSlot	src/server/sqlite3.c	/^  int nSlot;                      \/* Size of aSlot[] array *\/$/;"	m	struct:Fts5Hash	file:
nSlot	src/server/sqlite3.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	src/server/sqlite3.c	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause	file:
nSnippet	src/server/sqlite3.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSortingColumn	src/server/sqlite3.c	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo	file:
nSpace	src/server/sqlite3.c	/^  int nSpace;$/;"	m	struct:Fts5Buffer	file:
nSpace	src/server/sqlite3.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSpill	src/server/sqlite3.c	/^  int nSpill;                     \/* Bytes of data before flushing *\/$/;"	m	struct:MemJournal	file:
nSrc	src/server/sqlite3.c	/^  int nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList	file:
nStat	src/server/sqlite3.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nStatement	src/server/sqlite3.c	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3	file:
nStep	src/server/sqlite3.c	/^  int nStep;                      \/* Rows processed for current object *\/$/;"	m	struct:sqlite3rbu	file:
nStmtDefCons	src/server/sqlite3.c	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStmtDefImmCons	src/server/sqlite3.c	/^  i64 nStmtDefImmCons;    \/* Number of def. imm constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStmtSpill	src/server/sqlite3.c	/^  int nStmtSpill;                   \/* Stmt-journal spill-to-disk threshold *\/$/;"	m	struct:Sqlite3Config	file:
nStop	src/server/sqlite3.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nSub	src/server/sqlite3.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSubRec	src/server/sqlite3.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nSuffix	src/server/sqlite3.c	/^  int nSuffix;$/;"	m	struct:PorterRule	file:
nTab	src/server/sqlite3.c	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse	file:
nTableLock	src/server/sqlite3.c	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse	file:
nTask	src/server/sqlite3.c	/^  u8 nTask;                       \/* Size of aTask[] array *\/$/;"	m	struct:VdbeSorter	file:
nTblCol	src/server/sqlite3.c	/^  int nTblCol;                    \/* Size of azTblCol[] array *\/$/;"	m	struct:RbuObjIter	file:
nTempReg	src/server/sqlite3.c	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;                      \/* Number of entries in aTerm[] *\/$/;"	m	struct:Fts5ExprPhrase	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;                      \/* Size of phrase in terms *\/$/;"	m	struct:Fts5MatchPhrase	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts3SegFilter	file:
nTerm	src/server/sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts5TermsetEntry	file:
nTermAlloc	src/server/sqlite3.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nThis	src/server/sqlite3.c	/^  int nThis;       \/* Number of references to columns in pSrcList *\/$/;"	m	struct:SrcCount	file:
nTitle	src/server/sqlite3.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon203	file:
nTitle	src/server/sqlite3.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nToken	src/server/sqlite3.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	src/server/sqlite3.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	src/server/sqlite3.c	/^  int nToken;                     \/* Size of zToken in bytes *\/$/;"	m	struct:Fts3tokCursor	file:
nToken	src/server/sqlite3.c	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
nTokenAllocated	src/server/sqlite3.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTotalChange	src/server/sqlite3.c	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3	file:
nTotalRow	src/server/sqlite3.c	/^  i64 nTotalRow;                  \/* Total number of rows in FTS table *\/$/;"	m	struct:Fts5Storage	file:
nTransaction	src/server/sqlite3.c	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared	file:
nTree	src/server/sqlite3.c	/^  int nTree;                 \/* Used size of aTree\/aReadr (power of 2) *\/$/;"	m	struct:MergeEngine	file:
nUnused	src/server/sqlite3.c	/^  int nUnused;                    \/* Number of unused bytes on page *\/$/;"	m	struct:StatPage	file:
nUnused	src/server/sqlite3.c	/^  int nUnused;                    \/* Value of 'unused' column *\/$/;"	m	struct:StatCursor	file:
nUsed	src/server/sqlite3.c	/^  int nUsed;               \/* Number of arguments used so far *\/$/;"	m	struct:PrintfArguments	file:
nUsed	src/server/sqlite3.c	/^  u64 nUsed;               \/* Bytes of zBuf[] currently used *\/$/;"	m	struct:JsonString	file:
nUsermerge	src/server/sqlite3.c	/^  int nUsermerge;                 \/* 'usermerge' setting *\/$/;"	m	struct:Fts5Config	file:
nVDestroy	src/server/sqlite3.c	/^  int nVDestroy;                \/* Number of active OP_VDestroy operations *\/$/;"	m	struct:sqlite3	file:
nVTrans	src/server/sqlite3.c	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3	file:
nVal	src/server/sqlite3.c	/^  int nVal;                       \/* Size of the record in bytes *\/$/;"	m	struct:SorterRecord	file:
nVar	src/server/sqlite3.c	/^  ynVar nVar;               \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse	file:
nVar	src/server/sqlite3.c	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe	file:
nVdbeActive	src/server/sqlite3.c	/^  int nVdbeActive;              \/* Number of VDBEs currently running *\/$/;"	m	struct:sqlite3	file:
nVdbeExec	src/server/sqlite3.c	/^  int nVdbeExec;                \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3	file:
nVdbeRead	src/server/sqlite3.c	/^  int nVdbeRead;                \/* Number of active VDBEs that read or write *\/$/;"	m	struct:sqlite3	file:
nVdbeWrite	src/server/sqlite3.c	/^  int nVdbeWrite;               \/* Number of active VDBEs that read and write *\/$/;"	m	struct:sqlite3	file:
nVtabLock	src/server/sqlite3.c	/^  int nVtabLock;            \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse	file:
nWiData	src/server/sqlite3.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWork	src/server/sqlite3.c	/^  int nWork;                      \/* Number of leaf pages flushed *\/$/;"	m	struct:IncrmergeWriter	file:
nWorkUnit	src/server/sqlite3.c	/^  int nWorkUnit;                  \/* Leaf pages in a "unit" of work *\/$/;"	m	struct:Fts5Index	file:
nWorker	src/server/sqlite3.c	82779;"	d	file:
nWorker	src/server/sqlite3.c	82856;"	d	file:
nWriteCounter	src/server/sqlite3.c	/^  u64 nWriteCounter;              \/* Total leaves written to level 0 *\/$/;"	m	struct:Fts5Structure	file:
nXField	src/server/sqlite3.c	/^  u16 nXField;        \/* Number of columns beyond the key columns *\/$/;"	m	struct:KeyInfo	file:
nXor	src/server/sqlite3.c	/^  int nXor;           \/* Number of XOR operations done *\/$/;"	m	struct:EntropyGatherer	file:
nZero	src/server/sqlite3.c	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:Mem::MemValue	file:
na	src/server/sqlite3.c	/^  int na;             \/* Size of a[] in bytes *\/$/;"	m	struct:EntropyGatherer	file:
name	src/cgame/cg_local.h	/^  char                  name[ MAX_QPATH ];$/;"	m	struct:baseParticleSystem_s
name	src/cgame/cg_local.h	/^  char            name[ MAX_QPATH ];$/;"	m	struct:baseTrailSystem_s
name	src/cgame/cg_local.h	/^  char        name[ MAX_NAME_LENGTH ];$/;"	m	struct:__anon243
name	src/client/cl_keys.c	/^	char	*name;$/;"	m	struct:__anon103	file:
name	src/client/libmumblelink.c	/^	wchar_t name[256];$/;"	m	struct:__anon104	file:
name	src/game/bg_public.h	/^  char             name[ MAX_VOICE_NAME_LEN ];$/;"	m	struct:voice_s
name	src/game/bg_public.h	/^  char          *name;$/;"	m	struct:__anon352
name	src/game/bg_public.h	/^  char          *name;$/;"	m	struct:__anon353
name	src/game/bg_public.h	/^  char      *name;$/;"	m	struct:__anon349
name	src/game/bg_public.h	/^  char      *name;$/;"	m	struct:__anon355
name	src/game/bg_public.h	/^  char      *name;$/;"	m	struct:__anon356
name	src/game/bg_public.h	/^  const char *name;$/;"	m	struct:__anon359
name	src/game/g_admin.h	/^  char name[ MAX_NAME_LENGTH ];$/;"	m	struct:g_admin_admin
name	src/game/g_admin.h	/^  char name[ MAX_NAME_LENGTH ];$/;"	m	struct:g_admin_ban
name	src/game/g_admin.h	/^  char name[ MAX_NAME_LENGTH ];$/;"	m	struct:g_admin_level
name	src/game/g_local.h	/^  char              name[ MAX_NAMELOG_NAMES ][ MAX_NAME_LENGTH ];$/;"	m	struct:namelog_s
name	src/game/g_local.h	/^  char      name[ 32 ];$/;"	m	struct:damageRegion_s
name	src/game/g_maprotation.c	/^  char    name[ MAX_QPATH ];$/;"	m	struct:mapRotation_s	file:
name	src/game/g_maprotation.c	/^  char  name[ MAX_QPATH ];$/;"	m	struct:map_s	file:
name	src/game/g_maprotation.c	/^  char name[ MAX_QPATH ];$/;"	m	struct:label_s	file:
name	src/game/g_spawn.c	/^  char  *name;$/;"	m	struct:__anon367	file:
name	src/game/g_spawn.c	/^  char  *name;$/;"	m	struct:__anon368	file:
name	src/qcommon/cm_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:__anon440
name	src/qcommon/cmd.c	/^	char					*name;$/;"	m	struct:cmd_function_s	file:
name	src/qcommon/files.c	/^	char					*name;		\/\/ name of the file$/;"	m	struct:fileInPack_s	file:
name	src/qcommon/files.c	/^	char		name[MAX_ZPATH];$/;"	m	struct:__anon455	file:
name	src/qcommon/msg.c	/^	char	*name;$/;"	m	struct:__anon485	file:
name	src/qcommon/parse.c	/^  char *name;                 \/\/define name$/;"	m	struct:define_s	file:
name	src/qcommon/parse.c	/^  char *name;$/;"	m	struct:directive_s	file:
name	src/qcommon/q_shared.h	/^	char			*name;$/;"	m	struct:cvar_s
name	src/qcommon/q_shared.h	/^  char      name[ MAX_EMOTICON_NAME_LEN ];$/;"	m	struct:__anon482
name	src/qcommon/q_shared.h	/^  char name[MAX_QPATH];$/;"	m	struct:__anon479
name	src/qcommon/qfiles.h	/^	char			name[MAX_QPATH];$/;"	m	struct:__anon389
name	src/qcommon/qfiles.h	/^	char		name[16];$/;"	m	struct:__anon399
name	src/qcommon/qfiles.h	/^	char		name[16];$/;"	m	struct:md3Frame_s
name	src/qcommon/qfiles.h	/^	char		name[MAX_QPATH];	\/\/ model name$/;"	m	struct:__anon393
name	src/qcommon/qfiles.h	/^	char		name[MAX_QPATH];	\/\/ model name$/;"	m	struct:__anon404
name	src/qcommon/qfiles.h	/^	char		name[MAX_QPATH];	\/\/ polyset name$/;"	m	struct:__anon397
name	src/qcommon/qfiles.h	/^	char		name[MAX_QPATH];	\/\/ tag name$/;"	m	struct:md3Tag_s
name	src/qcommon/qfiles.h	/^	char	name[MAX_QPATH];	\/\/ polyset name$/;"	m	struct:__anon388
name	src/qcommon/qfiles.h	/^        char            name[32];$/;"	m	struct:__anon403
name	src/qcommon/vm_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:vm_s
name	src/qcommon/vm_powerpc_asm.c	/^	const char *name;$/;"	m	struct:powerpc_opcode	file:
name	src/qcommon/vm_sparc.c	/^	const char	*name;$/;"	m	struct:sparc_opcode	file:
name	src/renderercommon/iqm.h	/^    unsigned int name;$/;"	m	struct:iqmanim
name	src/renderercommon/iqm.h	/^    unsigned int name;$/;"	m	struct:iqmjoint
name	src/renderercommon/iqm.h	/^    unsigned int name;$/;"	m	struct:iqmmesh
name	src/renderergl1/tr_image.c	/^	char *name;$/;"	m	struct:__anon178	file:
name	src/renderergl1/tr_local.h	/^	char		name[MAX_QPATH];		\/\/ game path, including extension$/;"	m	struct:shader_s
name	src/renderergl1/tr_local.h	/^	char		name[MAX_QPATH];		\/\/ game path, including extension$/;"	m	struct:skin_s
name	src/renderergl1/tr_local.h	/^	char		name[MAX_QPATH];		\/\/ ie: maps\/tim_dm2.bsp$/;"	m	struct:__anon157
name	src/renderergl1/tr_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:__anon148
name	src/renderergl1/tr_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:model_s
name	src/renderergl1/tr_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:srfIQModel_s
name	src/renderergl1/tr_shader.c	/^	char	*name;$/;"	m	struct:__anon126	file:
name	src/renderergl2/tr_fbo.h	/^	char            name[MAX_QPATH];$/;"	m	struct:FBO_s
name	src/renderergl2/tr_glsl.c	/^	char *name;$/;"	m	struct:uniformInfo_s	file:
name	src/renderergl2/tr_image.c	/^	char *name;$/;"	m	struct:__anon80	file:
name	src/renderergl2/tr_local.h	/^	char		name[MAX_QPATH];		\/\/ game path, including extension$/;"	m	struct:shader_s
name	src/renderergl2/tr_local.h	/^	char		name[MAX_QPATH];		\/\/ game path, including extension$/;"	m	struct:skin_s
name	src/renderergl2/tr_local.h	/^	char		name[MAX_QPATH];		\/\/ ie: maps\/tim_dm2.bsp$/;"	m	struct:__anon49
name	src/renderergl2/tr_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:__anon40
name	src/renderergl2/tr_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:model_s
name	src/renderergl2/tr_local.h	/^	char		name[MAX_QPATH];$/;"	m	struct:srfIQModel_s
name	src/renderergl2/tr_local.h	/^	char            name[MAX_QPATH];	\/\/ polyset name$/;"	m	struct:mdvSurface_s
name	src/renderergl2/tr_local.h	/^	char            name[MAX_QPATH];	\/\/ tag name$/;"	m	struct:__anon52
name	src/renderergl2/tr_local.h	/^	char            name[MAX_QPATH];$/;"	m	struct:shaderProgram_s
name	src/renderergl2/tr_local.h	/^	char            name[MAX_QPATH];$/;"	m	struct:vao_s
name	src/renderergl2/tr_shader.c	/^	char	*name;$/;"	m	struct:__anon7	file:
name	src/server/server.h	/^	char			name[MAX_NAME_LENGTH];			\/\/ extracted from userinfo, high bits masked$/;"	m	struct:client_s
name	src/server/sv_client.c	/^	char	*name;$/;"	m	struct:__anon190	file:
name	src/tools/asm/q3asm.c	/^	char	*name;$/;"	m	struct:__anon268	file:
name	src/tools/asm/q3asm.c	/^	char	*name;$/;"	m	struct:symbol_s	file:
name	src/tools/lcc/cpp/cpp.h	/^	uchar	*name;$/;"	m	struct:nlist
name	src/tools/lcc/lburg/lburg.c	/^		char *name;$/;"	m	union:entry::__anon270	file:
name	src/tools/lcc/lburg/lburg.h	/^	char *name;		\/* nonterminal name *\/$/;"	m	struct:nonterm
name	src/tools/lcc/lburg/lburg.h	/^	char *name;		\/* terminal name *\/$/;"	m	struct:term
name	src/tools/lcc/src/c.h	/^	char *name;$/;"	m	struct:binding
name	src/tools/lcc/src/c.h	/^	char *name;$/;"	m	struct:field
name	src/tools/lcc/src/c.h	/^	char *name;$/;"	m	struct:symbol
name	src/tools/lcc/src/config.h	/^	char *name;$/;"	m	struct:__anon277
name	src/tools/lcc/src/prof.c	/^	char *file, *name;$/;"	m	struct:callsite	file:
name	src/tools/lcc/src/prof.c	/^	char *name;$/;"	m	struct:func	file:
name	src/tools/lcc/src/profio.c	/^			char *name;		\/* caller's name *\/$/;"	m	struct:file::func::caller	file:
name	src/tools/lcc/src/profio.c	/^		char *name;			\/* function name *\/$/;"	m	struct:file::func	file:
name	src/tools/lcc/src/profio.c	/^	char *name;			\/* file name *\/$/;"	m	struct:file	file:
name	src/ui/ui_local.h	/^  char    name[MAX_ADDRESSLENGTH];$/;"	m	struct:__anon509
name	src/ui/ui_main.c	/^  char *name, *altName;$/;"	m	struct:__anon491	file:
name	src/ui/ui_shared.c	/^  char *name;$/;"	m	struct:__anon523	file:
name	src/ui/ui_shared.h	/^  const char *name;               \/\/$/;"	m	struct:__anon499
name	src/ui/ui_shared.h	/^  const char *name;$/;"	m	struct:__anon505
nameChangeTime	src/game/g_local.h	/^  int               nameChangeTime;$/;"	m	struct:namelog_s
nameChanges	src/game/g_local.h	/^  int               nameChanges;$/;"	m	struct:namelog_s
nameInUsingClause	src/server/sqlite3.c	/^static int nameInUsingClause(IdList *pUsing, const char *zCol){$/;"	f	file:
nameOffset	src/game/g_local.h	/^  int               nameOffset;$/;"	m	struct:namelog_s
namebit	src/tools/lcc/cpp/nlist.c	/^unsigned long	namebit[077+1];$/;"	v
namelog	src/game/g_local.h	/^  namelog_t           *namelog;$/;"	m	struct:__anon311
namelog_matchip	src/game/g_admin.c	/^static qboolean namelog_matchip( void *namelog, const void *ip )$/;"	f	file:
namelog_matchname	src/game/g_admin.c	/^static qboolean namelog_matchname( void *namelog, const void *name )$/;"	f	file:
namelog_out	src/game/g_admin.c	/^static void namelog_out( void *namelog, char *str )$/;"	f	file:
namelog_s	src/game/g_local.h	/^typedef struct namelog_s$/;"	s
namelog_t	src/game/g_local.h	/^} namelog_t;$/;"	t	typeref:struct:namelog_s
namelogs	src/game/g_local.h	/^  namelog_t         *namelogs;$/;"	m	struct:__anon316
names	src/renderergl1/tr_local.h	/^	char		*names;$/;"	m	struct:__anon154
names	src/renderergl2/tr_local.h	/^	char		*names;$/;"	m	struct:__anon46
nanmask	src/qcommon/q_shared.h	463;"	d
nb_servers	src/master/servers.c	/^static size_t nb_servers = 0;$/;"	v	file:
nbclients	src/master/servers.h	/^	unsigned short nbclients;$/;"	m	struct:server_s
ncFlags	src/server/sqlite3.c	/^  u16 ncFlags;         \/* Zero or more NC_* flags defined below *\/$/;"	m	struct:NameContext	file:
ncalled	src/tools/lcc/src/prof.c	/^int ncalled = -1;	\/* #times prof.out says current function was called *\/$/;"	v
ncalls	src/tools/lcc/src/c.h	/^			int ncalls;$/;"	m	struct:symbol::__anon296::__anon301
ncases	src/tools/lcc/src/c.h	/^	int ncases;$/;"	m	struct:swtch
nearUsableBuildable	src/cgame/cg_local.h	/^  int           nearUsableBuildable;$/;"	m	struct:__anon249
nearlyFull	src/server/sqlite3.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
needDlights	src/renderergl1/tr_local.h	/^	qboolean	needDlights;	\/\/ true for bmodels that touch a dlight$/;"	m	struct:__anon128
needDlights	src/renderergl2/tr_local.h	/^	qboolean	needDlights;	\/\/ true for bmodels that touch a dlight$/;"	m	struct:__anon8
needFree	src/server/sqlite3.c	/^      u8 needFree;           \/* True if sqlite3_free(idxStr) is needed *\/$/;"	m	struct:WhereLoop::__anon212::__anon214	file:
needToFreeIdxStr	src/server/sqlite3.c	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	file:
needToFreeIdxStr	src/server/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
need_float_tmp	src/qcommon/vm_sparc.c	/^	int			need_float_tmp;$/;"	m	struct:func_info	file:
needconst	src/tools/lcc/src/simp.c	/^int needconst;$/;"	v
needsColor	src/renderergl1/tr_local.h	/^	qboolean	needsColor;$/;"	m	struct:shader_s
needsNormal	src/renderergl1/tr_local.h	/^	qboolean	needsNormal;			\/\/ not all shaders will need all data to be gathered$/;"	m	struct:shader_s
needsST1	src/renderergl1/tr_local.h	/^	qboolean	needsST1;$/;"	m	struct:shader_s
needsST2	src/renderergl1/tr_local.h	/^	qboolean	needsST2;$/;"	m	struct:shader_s
nerrs	src/tools/lcc/cpp/cpp.c	/^int	nerrs;$/;"	v
nested	src/server/sqlite3.c	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse	file:
netField_t	src/qcommon/msg.c	/^} netField_t;$/;"	t	typeref:struct:__anon485	file:
netSources	src/ui/ui_main.c	/^static const char *netSources[ ] =$/;"	v	file:
netType	src/client/client.h	/^	int			netType;$/;"	m	struct:__anon89
net_alternateProtocols	src/qcommon/net_ip.c	/^static cvar_t	*net_alternateProtocols;$/;"	v	file:
net_dropsim	src/qcommon/net_ip.c	/^static cvar_t	*net_dropsim;$/;"	v	file:
net_enabled	src/qcommon/net_ip.c	/^static cvar_t	*net_enabled;$/;"	v	file:
net_ip	src/qcommon/net_ip.c	/^static cvar_t	*net_ip;$/;"	v	file:
net_ip6	src/qcommon/net_ip.c	/^static cvar_t	*net_ip6;$/;"	v	file:
net_mcast6addr	src/qcommon/net_ip.c	/^static cvar_t	*net_mcast6addr;$/;"	v	file:
net_mcast6iface	src/qcommon/net_ip.c	/^static cvar_t	*net_mcast6iface;$/;"	v	file:
net_port6s	src/qcommon/net_ip.c	/^static cvar_t	*net_port6s[3];$/;"	v	file:
net_ports	src/qcommon/net_ip.c	/^static cvar_t	*net_ports[3];$/;"	v	file:
net_socksEnabled	src/qcommon/net_ip.c	/^static cvar_t	*net_socksEnabled;$/;"	v	file:
net_socksPassword	src/qcommon/net_ip.c	/^static cvar_t	*net_socksPassword;$/;"	v	file:
net_socksPort	src/qcommon/net_ip.c	/^static cvar_t	*net_socksPort;$/;"	v	file:
net_socksServer	src/qcommon/net_ip.c	/^static cvar_t	*net_socksServer;$/;"	v	file:
net_socksUsername	src/qcommon/net_ip.c	/^static cvar_t	*net_socksUsername;$/;"	v	file:
netadr_t	src/qcommon/qcommon.h	/^} netadr_t;$/;"	t	typeref:struct:__anon421
netadrtype_t	src/qcommon/qcommon.h	/^} netadrtype_t;$/;"	t	typeref:enum:__anon419
netchan	src/client/client.h	/^	netchan_t	netchan;$/;"	m	struct:__anon87
netchan	src/server/server.h	/^	netchan_t		netchan;$/;"	m	struct:client_s
netchan_buffer_s	src/server/server.h	/^typedef struct netchan_buffer_s {$/;"	s
netchan_buffer_t	src/server/server.h	/^} netchan_buffer_t;$/;"	t	typeref:struct:netchan_buffer_s
netchan_end_queue	src/server/server.h	/^	netchan_buffer_t **netchan_end_queue;$/;"	m	struct:client_s
netchan_start_queue	src/server/server.h	/^	netchan_buffer_t *netchan_start_queue;$/;"	m	struct:client_s
netchan_t	src/qcommon/qcommon.h	/^} netchan_t;$/;"	t	typeref:struct:__anon422
netmask	src/qcommon/net_ip.c	/^	struct sockaddr_storage netmask;$/;"	m	struct:__anon489	typeref:struct:__anon489::sockaddr_storage	file:
netname	src/game/g_local.h	/^  char                netname[ MAX_NAME_LENGTH ];$/;"	m	struct:__anon311
netnames	src/ui/ui_main.c	/^static const char *netnames[ ] =$/;"	v	file:
netsrcString	src/qcommon/net_chan.c	/^static char *netsrcString[2] = {$/;"	v	file:
netsrc_t	src/qcommon/qcommon.h	/^} netsrc_t;$/;"	t	typeref:enum:__anon420
networkingEnabled	src/qcommon/net_ip.c	/^static int networkingEnabled = 0;$/;"	v	file:
neverCorrupt	src/server/sqlite3.c	/^  int neverCorrupt;                 \/* Database is always well-formed *\/$/;"	m	struct:Sqlite3Config	file:
neverFree	src/game/g_local.h	/^  qboolean          neverFree;      \/\/ if true, FreeEntity will only unlink$/;"	m	struct:gentity_s
new	src/tools/lcc/cpp/cpp.h	83;"	d
newAnims	src/cgame/cg_local.h	/^  qboolean    newAnims;                   \/\/ true if using the new mission pack animations$/;"	m	struct:__anon243
newDatabase	src/server/sqlite3.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newHud	src/cgame/cg_local.h	/^  qboolean      newHud;$/;"	m	struct:__anon253
newRowid	src/server/sqlite3.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newSession	src/game/g_local.h	/^  qboolean          newSession;                   \/\/ don't use any old session data, because$/;"	m	struct:__anon316
newShader	src/game/g_utils.c	/^  char newShader[ MAX_QPATH ];$/;"	m	struct:__anon373	file:
newSnapshots	src/client/client.h	/^	qboolean	newSnapshots;		\/\/ set on parse of any valid packet$/;"	m	struct:__anon86
newTnum	src/server/sqlite3.c	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
newarray	src/tools/lcc/src/alloc.c	/^void *newarray(unsigned long m, unsigned long n, unsigned a) {$/;"	f
newfield	src/tools/lcc/src/types.c	/^Field newfield(char *name, Type ty, Type fty) {$/;"	f
newhideset	src/tools/lcc/cpp/hideset.c	/^newhideset(int hs, Nlist *np)$/;"	f
newmask	src/server/sqlite3.c	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse	file:
newnode	src/tools/lcc/src/dag.c	/^Node newnode(int op, Node l, Node r, Symbol sym) {$/;"	f
newsInfo	src/ui/ui_local.h	/^  newsInfo_t newsInfo;$/;"	m	struct:__anon518
newsInfo_t	src/ui/ui_local.h	/^newsInfo_t;$/;"	t	typeref:struct:__anon512
newsString	src/client/client.h	/^	char		newsString[ MAX_NEWS_STRING ];$/;"	m	struct:__anon87
newstring	src/tools/lcc/cpp/tokens.c	/^newstring(uchar *s, int l, int o)$/;"	f
newstruct	src/tools/lcc/src/types.c	/^Type newstruct(int op, char *tag) {$/;"	f
newtemp	src/tools/lcc/src/sym.c	/^Symbol newtemp(int sclass, int tc, int size) {$/;"	f
next	src/cgame/cg_local.h	/^  struct trailBeamNode_s  *next;$/;"	m	struct:trailBeamNode_s	typeref:struct:trailBeamNode_s::trailBeamNode_s
next	src/client/snd_codec.h	/^	snd_codec_t *next;$/;"	m	struct:snd_codec_s
next	src/client/snd_local.h	/^	struct sfx_s	*next;$/;"	m	struct:sfx_s	typeref:struct:sfx_s::sfx_s
next	src/client/snd_local.h	/^	struct sndBuffer_s		*next;$/;"	m	struct:sndBuffer_s	typeref:struct:sndBuffer_s::sndBuffer_s
next	src/game/bg_alloc.c	/^  struct freeMemNode_s *prev, *next;$/;"	m	struct:freeMemNode_s	typeref:struct:freeMemNode_s::	file:
next	src/game/bg_public.h	/^  struct voiceCmd_s *next;$/;"	m	struct:voiceCmd_s	typeref:struct:voiceCmd_s::voiceCmd_s
next	src/game/bg_public.h	/^  struct voiceTrack_s    *next;$/;"	m	struct:voiceTrack_s	typeref:struct:voiceTrack_s::voiceTrack_s
next	src/game/bg_public.h	/^  struct voice_s   *next;$/;"	m	struct:voice_s	typeref:struct:voice_s::voice_s
next	src/game/g_admin.c	/^  struct llist *next;$/;"	m	struct:llist	typeref:struct:llist::llist	file:
next	src/game/g_admin.h	/^  struct g_admin_admin *next;$/;"	m	struct:g_admin_admin	typeref:struct:g_admin_admin::g_admin_admin
next	src/game/g_admin.h	/^  struct g_admin_ban *next;$/;"	m	struct:g_admin_ban	typeref:struct:g_admin_ban::g_admin_ban
next	src/game/g_admin.h	/^  struct g_admin_command *next;$/;"	m	struct:g_admin_command	typeref:struct:g_admin_command::g_admin_command
next	src/game/g_admin.h	/^  struct g_admin_level *next;$/;"	m	struct:g_admin_level	typeref:struct:g_admin_level::g_admin_level
next	src/game/g_local.h	/^  struct namelog_s  *next;$/;"	m	struct:namelog_s	typeref:struct:namelog_s::namelog_s
next	src/master/servers.h	/^	struct addrmap_s* next;$/;"	m	struct:addrmap_s	typeref:struct:addrmap_s::addrmap_s
next	src/master/servers.h	/^	struct server_s* next;$/;"	m	struct:server_s	typeref:struct:server_s::server_s
next	src/qcommon/cmd.c	/^	struct cmd_function_s	*next;$/;"	m	struct:cmd_function_s	typeref:struct:cmd_function_s::cmd_function_s	file:
next	src/qcommon/common.c	/^	struct hunkblock_s *next;$/;"	m	struct:hunkblock_s	typeref:struct:hunkblock_s::hunkblock_s	file:
next	src/qcommon/common.c	/^	struct memblock_s       *next, *prev;$/;"	m	struct:memblock_s	typeref:struct:memblock_s::memblock_s	file:
next	src/qcommon/files.c	/^	struct	fileInPack_s*	next;		\/\/ next file in the hash$/;"	m	struct:fileInPack_s	typeref:struct:fileInPack_s::fileInPack_s	file:
next	src/qcommon/files.c	/^	struct searchpath_s *next;$/;"	m	struct:searchpath_s	typeref:struct:searchpath_s::searchpath_s	file:
next	src/qcommon/net_chan.c	/^        struct packetQueue_s *next;$/;"	m	struct:packetQueue_s	typeref:struct:packetQueue_s::packetQueue_s	file:
next	src/qcommon/parse.c	/^  struct define_s *next;      \/\/next defined macro in a list$/;"	m	struct:define_s	typeref:struct:define_s::define_s	file:
next	src/qcommon/parse.c	/^  struct indent_s *next;  \/\/next indent on the indent stack$/;"	m	struct:indent_s	typeref:struct:indent_s::indent_s	file:
next	src/qcommon/parse.c	/^  struct operator_s *prev, *next;$/;"	m	struct:operator_s	typeref:struct:operator_s::	file:
next	src/qcommon/parse.c	/^  struct punctuation_s *next; \/\/next punctuation$/;"	m	struct:punctuation_s	typeref:struct:punctuation_s::punctuation_s	file:
next	src/qcommon/parse.c	/^  struct script_s *next;          \/\/next script in a chain$/;"	m	struct:script_s	typeref:struct:script_s::script_s	file:
next	src/qcommon/parse.c	/^  struct token_s *next;         \/\/next token in chain$/;"	m	struct:token_s	typeref:struct:token_s::token_s	file:
next	src/qcommon/parse.c	/^  struct value_s *prev, *next;$/;"	m	struct:value_s	typeref:struct:value_s::	file:
next	src/qcommon/q_shared.h	/^	cvar_t *next;$/;"	m	struct:cvar_s
next	src/qcommon/qcommon.h	/^	struct	nodetype *next, *prev; \/* doubly-linked list *\/$/;"	m	struct:nodetype	typeref:struct:nodetype::nodetype
next	src/qcommon/vm_local.h	/^	struct vmSymbol_s	*next;$/;"	m	struct:vmSymbol_s	typeref:struct:vmSymbol_s::vmSymbol_s
next	src/qcommon/vm_powerpc.c	/^	dest_instruction_t *next;$/;"	m	struct:dest_instruction	file:
next	src/qcommon/vm_powerpc.c	/^	local_data_t *next;$/;"	m	struct:local_data_s	file:
next	src/qcommon/vm_powerpc.c	/^	source_instruction_t *next;$/;"	m	struct:source_instruction_s	file:
next	src/qcommon/vm_sparc.c	/^	struct data_hunk *next;$/;"	m	struct:data_hunk	typeref:struct:data_hunk::data_hunk	file:
next	src/qcommon/vm_sparc.c	/^	struct dst_insn		*next;$/;"	m	struct:dst_insn	typeref:struct:dst_insn::dst_insn	file:
next	src/qcommon/vm_sparc.c	/^	struct jump_insn	*next;$/;"	m	struct:jump_insn	typeref:struct:jump_insn::jump_insn	file:
next	src/qcommon/vm_sparc.c	/^	struct src_insn		*next;$/;"	m	struct:src_insn	typeref:struct:src_insn::src_insn	file:
next	src/renderercommon/tr_common.h	/^	struct image_s*	next;$/;"	m	struct:image_s	typeref:struct:image_s::image_s
next	src/renderergl1/tr_flares.c	/^	struct		flare_s	*next;		\/\/ for active chain$/;"	m	struct:flare_s	typeref:struct:flare_s::flare_s	file:
next	src/renderergl1/tr_local.h	/^	struct	shader_s	*next;$/;"	m	struct:shader_s	typeref:struct:shader_s::shader_s
next	src/renderergl2/tr_flares.c	/^	struct		flare_s	*next;		\/\/ for active chain$/;"	m	struct:flare_s	typeref:struct:flare_s::flare_s	file:
next	src/renderergl2/tr_local.h	/^	struct	shader_s	*next;$/;"	m	struct:shader_s	typeref:struct:shader_s::shader_s
next	src/server/server.h	/^	leakyBucket_t *prev, *next;$/;"	m	struct:leakyBucket_s
next	src/server/server.h	/^	struct netchan_buffer_s *next;$/;"	m	struct:netchan_buffer_s	typeref:struct:netchan_buffer_s::netchan_buffer_s
next	src/server/sqlite3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon204::__anon206	file:
next	src/server/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
next	src/server/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
next	src/server/sqlite3.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
next	src/tools/asm/q3asm.c	/^	struct	symbol_s	*next;$/;"	m	struct:symbol_s	typeref:struct:symbol_s::symbol_s	file:
next	src/tools/asm/q3asm.c	/^  struct hashchain_s *next;$/;"	m	struct:hashchain_s	typeref:struct:hashchain_s::hashchain_s	file:
next	src/tools/lcc/cpp/cpp.h	/^	struct	source *next;	\/* stack for #include *\/$/;"	m	struct:source	typeref:struct:source::source
next	src/tools/lcc/cpp/cpp.h	/^	struct nlist *next;$/;"	m	struct:nlist	typeref:struct:nlist::nlist
next	src/tools/lcc/lburg/lburg.h	/^	Rule next;		\/* next rule with same pattern root *\/$/;"	m	struct:rule
next	src/tools/lcc/src/alloc.c	/^	struct block *next;$/;"	m	struct:block	typeref:struct:block::block	file:
next	src/tools/lcc/src/c.h	/^			Symbol next;$/;"	m	struct:symbol::__anon296::__anon302
next	src/tools/lcc/src/c.h	/^	Code prev, next;$/;"	m	struct:code
next	src/tools/lcc/src/config.h	/^	Node prev, next;$/;"	m	struct:__anon274
next	src/ui/ui_shared.c	/^  struct keywordHash_s *next;$/;"	m	struct:keywordHash_s	typeref:struct:keywordHash_s::keywordHash_s	file:
next	src/ui/ui_shared.c	/^  struct stringDef_s *next;$/;"	m	struct:stringDef_s	typeref:struct:stringDef_s::stringDef_s	file:
nextAdjustTime	src/ui/ui_shared.c	/^  int nextAdjustTime;$/;"	m	struct:scrollInfo_s	file:
nextAutovac	src/server/sqlite3.c	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3	file:
nextChildTime	src/cgame/cg_local.h	/^  int               nextChildTime;$/;"	m	struct:particle_s
nextDisplayRefresh	src/ui/ui_local.h	/^  int    nextDisplayRefresh;$/;"	m	struct:serverStatus_s
nextEjectionTime	src/cgame/cg_local.h	/^  int                   nextEjectionTime;$/;"	m	struct:particleEjector_s
nextEntityInWorldSector	src/server/server.h	/^	struct svEntity_s *nextEntityInWorldSector;$/;"	m	struct:svEntity_s	typeref:struct:svEntity_s::svEntity_s
nextFindPlayerRefresh	src/ui/ui_local.h	/^  int nextFindPlayerRefresh;$/;"	m	struct:__anon518
nextFrameTeleport	src/cgame/cg_local.h	/^  qboolean      nextFrameTeleport;$/;"	m	struct:__anon249
nextFrameTime	src/server/server.h	/^	int				nextFrameTime;		\/\/ when time > nextFrameTime, process world$/;"	m	struct:__anon184
nextHeartbeatTime	src/server/server.h	/^	int			nextHeartbeatTime;$/;"	m	struct:__anon188
nextHistoryLine	src/client/cl_keys.c	/^int			nextHistoryLine;		\/\/ the last line in the history buffer, not masked$/;"	v
nextJitterTimes	src/cgame/cg_local.h	/^  int               nextJitterTimes[ MAX_TRAIL_BEAM_JITTERS ];$/;"	m	struct:trailBeam_s
nextJump	src/qcommon/vm_powerpc.c	/^	symbolic_jump_t *nextJump;$/;"	m	struct:symbolic_jump	file:
nextLocation	src/cgame/cg_local.h	/^  struct centity_s      *nextLocation;$/;"	m	struct:centity_s	typeref:struct:centity_s::centity_s
nextMark	src/cgame/cg_local.h	/^  struct markPoly_s *prevMark, *nextMark;$/;"	m	struct:markPoly_s	typeref:struct:markPoly_s::
nextOrbitTime	src/cgame/cg_local.h	/^  int           nextOrbitTime;$/;"	m	struct:__anon249
nextPagesize	src/server/sqlite3.c	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3	file:
nextPhysicsTime	src/game/g_local.h	/^  int               nextPhysicsTime;    \/\/ buildables don't need to check what they're sitting on$/;"	m	struct:gentity_s
nextRegenTime	src/game/g_local.h	/^  int               nextRegenTime;$/;"	m	struct:gentity_s
nextReliableTime	src/server/server.h	/^	int				nextReliableTime;	\/\/ svs.time when another reliable command will be allowed$/;"	m	struct:client_s
nextScrollTime	src/ui/ui_shared.c	/^  int nextScrollTime;$/;"	m	struct:scrollInfo_s	file:
nextServerStatusRefresh	src/ui/ui_local.h	/^  int nextServerStatusRefresh;$/;"	m	struct:__anon518
nextShmId	src/server/sqlite3.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	src/server/sqlite3.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
nextSnap	src/cgame/cg_local.h	/^  snapshot_t    *nextSnap;                          \/\/ cg.nextSnap->serverTime > cg.time, or NULL$/;"	m	struct:__anon249
nextSnapshotEntities	src/server/server.h	/^	int			nextSnapshotEntities;		\/\/ next snapshotEntities to use$/;"	m	struct:__anon188
nextSortTime	src/ui/ui_local.h	/^  int    nextSortTime;$/;"	m	struct:serverStatus_s
nextState	src/cgame/cg_local.h	/^  entityState_t         nextState;        \/\/ from cg.nextFrame, if available$/;"	m	struct:centity_s
nextTime	src/ui/ui_shared.h	/^  int nextTime;                   \/\/ time next effect should cycle$/;"	m	struct:__anon499
nextTrain	src/game/g_local.h	/^  gentity_t         *nextTrain;$/;"	m	struct:gentity_s
nextWeaponClickTime	src/cgame/cg_local.h	/^  int           nextWeaponClickTime;$/;"	m	struct:__anon249
next_stmt	src/server/sqlite3.c	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
nextline	src/tools/lcc/src/input.c	/^void nextline(void) {$/;"	f
nextpingtime	src/ui/ui_local.h	/^  int    nextpingtime;$/;"	m	struct:serverStatus_s
nextstate	src/tools/lcc/cpp/lex.c	/^	int	nextstate;	\/* enter this state if +ve *\/$/;"	m	struct:fsm	file:
nextthink	src/game/bg_public.h	/^  int           nextthink;$/;"	m	struct:__anon353
nextthink	src/game/g_local.h	/^  int               nextthink;$/;"	m	struct:gentity_s
nfsUnlock	src/server/sqlite3.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
nhidesets	src/tools/lcc/cpp/hideset.c	/^int	nhidesets = 0;$/;"	v
nid	src/tools/lcc/src/tree.c	/^static int nid = 1;		\/* identifies trees & nodes in debugging output *\/$/;"	v	file:
nip_localaddr_t	src/qcommon/net_ip.c	/^} nip_localaddr_t;$/;"	t	typeref:struct:__anon489	file:
nlist	src/tools/lcc/cpp/cpp.h	/^typedef struct nlist {$/;"	s
nlist	src/tools/lcc/cpp/nlist.c	/^static Nlist	*nlist[NLSIZE];$/;"	v	file:
nltoken	src/tools/lcc/cpp/cpp.c	/^struct	token nltoken = { NL, 0, 0, 0, 1, (uchar*)"\\n" };$/;"	v	typeref:struct:token
nn	src/server/sqlite3.c	/^  int nn;                         \/* Size of record in bytes *\/$/;"	m	struct:Fts5Data	file:
noCase	src/server/sqlite3.c	/^  u8 noCase;            \/* true to ignore case differences *\/$/;"	m	struct:compareInfo	file:
noDrift	src/cgame/cg_local.h	/^  qboolean          noDrift;$/;"	m	struct:weaponInfo_s
noFootsteps	src/game/bg_public.h	/^  qboolean      noFootsteps;    \/\/ if the game is setup for no footsteps by the server$/;"	m	struct:pmove_s
noGameRestart	src/client/cl_main.c	/^static int noGameRestart = qfalse;$/;"	v	file:
noLock	src/server/sqlite3.c	/^  u8 noLock;                  \/* Do not lock (except in WAL mode) *\/$/;"	m	struct:Pager	file:
noMipMaps	src/renderergl1/tr_local.h	/^	qboolean	noMipMaps;				\/\/ for console fonts, 2D elements, etc.$/;"	m	struct:shader_s
noMipMaps	src/renderergl2/tr_local.h	/^	qboolean	noMipMaps;				\/\/ for console fonts, 2D elements, etc.$/;"	m	struct:shader_s
noPicMip	src/renderergl1/tr_local.h	/^	qboolean	noPicMip;				\/\/ for images that must always be full resolution$/;"	m	struct:shader_s
noPicMip	src/renderergl2/tr_local.h	/^	qboolean	noPicMip;				\/\/ for images that must always be full resolution$/;"	m	struct:shader_s
noPowerShader	src/cgame/cg_local.h	/^  qhandle_t     noPowerShader;$/;"	m	struct:__anon252
noSkipScan	src/server/sqlite3.c	/^  unsigned noSkipScan:1;   \/* Do not try to use skip-scan if true *\/$/;"	m	struct:Index	file:
noSync	src/server/sqlite3.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
nocaseCollatingFunc	src/server/sqlite3.c	/^static int nocaseCollatingFunc($/;"	f	file:
noclip	src/game/g_local.h	/^  qboolean            noclip;$/;"	m	struct:gclient_s
node	src/tools/lcc/src/c.h	/^	Node node;$/;"	m	struct:tree
node	src/tools/lcc/src/c.h	/^struct node {$/;"	s
node	src/tools/lcc/src/dag.c	/^	struct node node;$/;"	m	struct:dag	typeref:struct:dag::node	file:
node	src/tools/lcc/src/dag.c	/^static Node node(int op, Node l, Node r, Symbol sym) {$/;"	f	file:
node	src/tools/lcc/src/tree.c	/^	Tree node;$/;"	m	struct:nodeid	file:
nodeAcquire	src/server/sqlite3.c	/^static int nodeAcquire($/;"	f	file:
nodeDeleteCell	src/server/sqlite3.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeGetCell	src/server/sqlite3.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCoord	src/server/sqlite3.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetRowid	src/server/sqlite3.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeHash	src/server/sqlite3.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHashDelete	src/server/sqlite3.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	src/server/sqlite3.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashLookup	src/server/sqlite3.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeInsertCell	src/server/sqlite3.c	/^static int nodeInsertCell($/;"	f	file:
nodeList	src/qcommon/qcommon.h	/^	node_t		nodeList[768];$/;"	m	struct:__anon432
nodeNew	src/server/sqlite3.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeOverwriteCell	src/server/sqlite3.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeParentIndex	src/server/sqlite3.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodePool	src/cgame/cg_local.h	/^  trailBeamNode_t   nodePool[ MAX_TRAIL_BEAM_NODES ];$/;"	m	struct:trailBeam_s
nodePtrs	src/qcommon/qcommon.h	/^	node_t*		nodePtrs[768];$/;"	m	struct:__anon432
nodeReaderInit	src/server/sqlite3.c	/^static int nodeReaderInit(NodeReader *p, const char *aNode, int nNode){$/;"	f	file:
nodeReaderNext	src/server/sqlite3.c	/^static int nodeReaderNext(NodeReader *p){$/;"	f	file:
nodeReaderRelease	src/server/sqlite3.c	/^static void nodeReaderRelease(NodeReader *p){$/;"	f	file:
nodeReference	src/server/sqlite3.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeRelease	src/server/sqlite3.c	/^static int nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRowidIndex	src/server/sqlite3.c	/^static int nodeRowidIndex($/;"	f	file:
nodeType_t	src/game/g_maprotation.c	/^} nodeType_t;$/;"	t	typeref:enum:__anon322	file:
nodeWrite	src/server/sqlite3.c	/^static int nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeZero	src/server/sqlite3.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
node_s	src/game/g_maprotation.c	/^typedef struct node_s$/;"	s	file:
node_t	src/game/g_maprotation.c	/^} node_t;$/;"	t	typeref:struct:node_s	file:
node_t	src/qcommon/qcommon.h	/^} node_t;$/;"	t	typeref:struct:nodetype
nodecount	src/tools/lcc/src/dag.c	/^int nodecount;$/;"	v
nodeid	src/tools/lcc/src/tree.c	/^int nodeid(Tree p) {$/;"	f
nodeid	src/tools/lcc/src/tree.c	/^static struct nodeid {$/;"	s	file:
nodes	src/cgame/cg_local.h	/^  trailBeamNode_t   *nodes;$/;"	m	struct:trailBeam_s
nodes	src/game/g_maprotation.c	/^  node_t  *nodes[ MAX_MAP_ROTATION_MAPS ];$/;"	m	struct:mapRotation_s	file:
nodes	src/qcommon/cm_local.h	/^	cNode_t		*nodes;$/;"	m	struct:__anon440
nodes	src/renderergl1/tr_local.h	/^	mnode_t		*nodes;$/;"	m	struct:__anon157
nodes	src/renderergl2/tr_local.h	/^	mnode_t		*nodes;$/;"	m	struct:__anon49
nodetype	src/qcommon/qcommon.h	/^typedef struct nodetype {$/;"	s
noise_index	src/game/g_local.h	/^  int               noise_index;$/;"	m	struct:gentity_s
nolockCheckReservedLock	src/server/sqlite3.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockClose	src/server/sqlite3.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockLock	src/server/sqlite3.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	src/server/sqlite3.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nonNormalizedAxes	src/renderercommon/tr_types.h	/^	qboolean	nonNormalizedAxes;	\/\/ axis are not normalized, i.e. they have scale$/;"	m	struct:__anon114
nonSegModel	src/cgame/cg_local.h	/^  qhandle_t   nonSegModel;                \/\/non-segmented model system$/;"	m	struct:__anon243
nonSegModel	src/game/g_local.h	/^  qboolean          nonSegModel;        \/\/ this entity uses a nonsegmented player model$/;"	m	struct:gentity_s
nonSegPlayerAnimNumber_t	src/game/bg_public.h	/^} nonSegPlayerAnimNumber_t;$/;"	t	typeref:enum:__anon342
nonSegSkin	src/cgame/cg_local.h	/^  qhandle_t   nonSegSkin;                 \/\/non-segmented model system$/;"	m	struct:__anon243
nonseg	src/cgame/cg_local.h	/^  lerpFrame_t legs, torso, nonseg, weapon;$/;"	m	struct:__anon241
nonsegmented	src/cgame/cg_local.h	/^  qboolean    nonsegmented;               \/\/ true if model is Q2 style nonsegmented$/;"	m	struct:__anon243
nonterm	src/tools/lcc/lburg/gram.y	/^nonterm	: ID				{ nonterm($$ = $1); }$/;"	l
nonterm	src/tools/lcc/lburg/lburg.c	/^Nonterm nonterm(char *id) {$/;"	f
nonterm	src/tools/lcc/lburg/lburg.h	/^struct nonterm {	\/* nonterminals: *\/$/;"	s
noopFunc	src/server/sqlite3.c	100752;"	d	file:
noopMutexAlloc	src/server/sqlite3.c	/^static sqlite3_mutex *noopMutexAlloc(int id){ $/;"	f	file:
noopMutexEnd	src/server/sqlite3.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnter	src/server/sqlite3.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	src/server/sqlite3.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexInit	src/server/sqlite3.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexLeave	src/server/sqlite3.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexTry	src/server/sqlite3.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
normal	src/cgame/cg_local.h	/^  vec3_t                normal;$/;"	m	struct:particleSystem_s
normal	src/qcommon/q_shared.h	/^	vec3_t	normal;$/;"	m	struct:cplane_s
normal	src/qcommon/qfiles.h	/^	float		normal[3];$/;"	m	struct:__anon409
normal	src/qcommon/qfiles.h	/^	short		normal;$/;"	m	struct:__anon392
normal	src/qcommon/qfiles.h	/^	vec3_t		normal;$/;"	m	struct:__anon395
normal	src/qcommon/qfiles.h	/^	vec3_t		normal;$/;"	m	struct:__anon415
normal	src/renderergl1/tr_local.h	/^	vec3_t			normal;$/;"	m	struct:srfFlare_s
normal	src/renderergl2/tr_local.h	/^	vec3_t			normal;$/;"	m	struct:srfFlare_s
normal	src/renderergl2/tr_local.h	/^	vec3_t          normal;$/;"	m	struct:__anon45
normal	src/renderergl2/tr_local.h	/^	vec3_t          normal;$/;"	m	struct:__anon53
normalBuffer0	src/client/cl_cin.c	/^	long				normalBuffer0;$/;"	m	struct:__anon100	file:
normalDisplacement	src/cgame/cg_local.h	/^  float           normalDisplacement;$/;"	m	struct:baseParticle_s
normalScale	src/renderergl2/tr_local.h	/^	vec4_t normalScale;$/;"	m	struct:__anon26
normalValid	src/cgame/cg_local.h	/^  qboolean              normalValid;$/;"	m	struct:particleSystem_s
normalized	src/renderergl2/tr_local.h	/^	uint32_t normalized;$/;"	m	struct:vaoAttrib_s
normals	src/renderergl1/tr_local.h	/^	float		*normals;$/;"	m	struct:__anon154
normals	src/renderergl2/tr_local.h	/^	float		*normals;$/;"	m	struct:__anon46
normtokenrow	src/tools/lcc/cpp/tokens.c	/^normtokenrow(Tokenrow *trp)$/;"	f
noscrollbar	src/ui/ui_shared.h	/^  qboolean noscrollbar;$/;"	m	struct:listBoxDef_s
notIndexed	src/server/sqlite3.c	/^      unsigned notIndexed :1;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
notNull	src/server/sqlite3.c	/^  u8 notNull;      \/* An OE_ code for handling a NOT NULL constraint *\/$/;"	m	struct:Column	file:
notReady	src/server/sqlite3.c	/^  Bitmask notReady;          \/* FROM entries not usable at this level *\/$/;"	m	struct:WhereLevel	file:
notUsed0	src/server/sqlite3.c	/^  u32 notUsed0;                   \/* Available for future enhancements *\/$/;"	m	struct:WalCkptInfo	file:
notUsed1	src/server/sqlite3.c	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon192	file:
notValid	src/server/sqlite3.c	/^static void notValid($/;"	f	file:
notarget	src/tools/lcc/src/gen.c	/^int notarget(Node p) {$/;"	f
notselectable	src/ui/ui_shared.h	/^  qboolean notselectable;$/;"	m	struct:listBoxDef_s
novis	src/renderergl1/tr_local.h	/^	byte		*novis;			\/\/ clusterBytes of 0xff$/;"	m	struct:__anon157
nowValue	src/server/sqlite3.c	/^  sqlite3StatValueType nowValue[10];  \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
np	src/tools/lcc/cpp/nlist.c	/^Nlist 	*np;$/;"	v
npoints	src/tools/lcc/src/prof.c	/^int npoints;		\/* # of execution points if -b specified *\/$/;"	v
nrhs	src/server/sqlite3.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon218	file:
nrhs	src/server/sqlite3.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon222	file:
nrules	src/tools/lcc/lburg/lburg.c	/^static int nrules;$/;"	v	file:
nt	src/tools/lcc/lburg/lburg.c	/^		struct nonterm nt;$/;"	m	union:entry::__anon270	typeref:struct:entry::__anon270::nonterm	file:
nterms	src/tools/lcc/lburg/lburg.h	/^	int nterms;		\/* number of terminal nodes in this tree *\/$/;"	m	struct:tree
ntnumber	src/tools/lcc/lburg/lburg.c	/^static int ntnumber = 0;$/;"	v	file:
nts	src/tools/lcc/lburg/lburg.c	/^static Nonterm nts;$/;"	v	file:
nullBuildable	src/game/bg_misc.c	/^static const buildableAttributes_t nullBuildable = { 0 };$/;"	v	file:
nullClass	src/game/bg_misc.c	/^static const classAttributes_t nullClass = { 0 };$/;"	v	file:
nullDieFunction	src/game/g_buildable.c	/^static void nullDieFunction( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int mod )$/;"	f	file:
nullIR	src/tools/lcc/src/null.c	/^Interface nullIR = {$/;"	v
nullRow	src/server/sqlite3.c	/^  u8 nullRow;           \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor	file:
nullTeam	src/game/bg_misc.c	/^static const teamAttributes_t nullTeam = { 0 };$/;"	v	file:
nullUpgrade	src/game/bg_misc.c	/^static const upgradeAttributes_t nullUpgrade = { 0 };$/;"	v	file:
nullWeapon	src/game/bg_misc.c	/^static const weaponAttributes_t nullWeapon = { 0 };$/;"	v	file:
nullcall	src/tools/lcc/src/expr.c	/^Tree nullcall(Type pty, Symbol f, Tree p, Tree e) {$/;"	f
nullcheck	src/tools/lcc/src/expr.c	/^static Tree nullcheck(Tree p) {$/;"	f	file:
nullifFunc	src/server/sqlite3.c	/^static void nullifFunc($/;"	f	file:
num	src/ui/ui_local.h	/^  int num;$/;"	m	struct:__anon510
numAlienBuildables	src/cgame/cg_local.h	/^  int       numAlienBuildables;$/;"	m	struct:__anon246
numAlienClients	src/cgame/cg_local.h	/^  int       numAlienClients;$/;"	m	struct:__anon246
numAlienClients	src/game/g_local.h	/^  int               numAlienClients;$/;"	m	struct:__anon316
numAlienClientsAlive	src/game/g_local.h	/^  int               numAlienClientsAlive;$/;"	m	struct:__anon316
numAlienSamples	src/game/g_local.h	/^  int               numAlienSamples;$/;"	m	struct:__anon316
numAlienSpawns	src/game/g_local.h	/^  int               numAlienSpawns;$/;"	m	struct:__anon316
numAliens	src/cgame/cg_local.h	/^  int           numAliens;              \/\/ Total number of players in aliens team$/;"	m	struct:__anon253
numAliensReady	src/cgame/cg_local.h	/^  int           numAliensReady;         \/\/ Number of alien players ready$/;"	m	struct:__anon253
numAlternateMasterPackets	src/client/client.h	/^	int			numAlternateMasterPackets[3];$/;"	m	struct:__anon90
numAreas	src/qcommon/cm_local.h	/^	int			numAreas;$/;"	m	struct:__anon440
numAsmFiles	src/tools/asm/q3asm.c	/^int		numAsmFiles;$/;"	v
numAudioFrames	src/client/cl_avi.c	/^  int           numAudioFrames;$/;"	m	struct:aviFileData_s	file:
numBModels	src/renderergl2/tr_local.h	/^	int			numBModels;$/;"	m	struct:__anon49
numBaseParticleEjectors	src/cgame/cg_particles.c	/^static int                    numBaseParticleEjectors = 0;$/;"	v	file:
numBaseParticleSystems	src/cgame/cg_particles.c	/^static int                    numBaseParticleSystems = 0;$/;"	v	file:
numBaseParticles	src/cgame/cg_particles.c	/^static int                    numBaseParticles = 0;$/;"	v	file:
numBaseTrailBeams	src/cgame/cg_trails.c	/^static int                numBaseTrailBeams = 0;$/;"	v	file:
numBaseTrailSystems	src/cgame/cg_trails.c	/^static int                numBaseTrailSystems = 0;$/;"	v	file:
numBeams	src/cgame/cg_local.h	/^  int             numBeams;$/;"	m	struct:baseTrailSystem_s
numBinaryShadersUsed	src/cgame/cg_local.h	/^  int           numBinaryShadersUsed;$/;"	m	struct:__anon249
numBindings	src/cgame/cg_tutorial.c	/^static const size_t numBindings = ARRAY_LEN( bindings );$/;"	v	file:
numBits	src/client/snd_wavelet.c	/^static unsigned char numBits[] = {$/;"	v	file:
numBoneReferences	src/qcommon/qfiles.h	/^	int			numBoneReferences;$/;"	m	struct:__anon397
numBones	src/qcommon/qfiles.h	/^	int			numBones;$/;"	m	struct:__anon404
numBorders	src/qcommon/cm_patch.h	/^	int			numBorders;		\/\/ 3 or four + 6 axial bevels + 4 or 3 * 4 edge bevels$/;"	m	struct:__anon487
numBrushSides	src/qcommon/cm_local.h	/^	int			numBrushSides;$/;"	m	struct:__anon440
numBrushes	src/qcommon/cm_local.h	/^	int			numBrushes;$/;"	m	struct:__anon440
numBrushes	src/qcommon/qfiles.h	/^	int			firstBrush, numBrushes;$/;"	m	struct:__anon407
numBuildLogs	src/game/g_local.h	/^  int               numBuildLogs;$/;"	m	struct:__anon316
numBuildablesForRemoval	src/game/g_local.h	/^  int               numBuildablesForRemoval;$/;"	m	struct:__anon316
numClients	src/game/g_maprotation.c	/^  int                 numClients;$/;"	m	struct:condition_s	file:
numClusters	src/qcommon/cm_local.h	/^	int			numClusters;$/;"	m	struct:__anon440
numClusters	src/renderergl1/tr_local.h	/^	int			numClusters;$/;"	m	struct:__anon157
numClusters	src/renderergl2/tr_local.h	/^	int			numClusters;$/;"	m	struct:__anon49
numClusters	src/server/server.h	/^	int			numClusters;		\/\/ if -1, use headnode instead$/;"	m	struct:svEntity_s
numCmds	src/game/g_cmds.c	/^static size_t numCmds = ARRAY_LEN( cmds );$/;"	v	file:
numColors	src/ui/ui_shared.h	/^  int numColors;                 \/\/ number of color ranges$/;"	m	struct:itemDef_s
numColumns	src/ui/ui_shared.h	/^  int numColumns;$/;"	m	struct:listBoxDef_s
numConnectedClients	src/game/g_local.h	/^  int               numConnectedClients;$/;"	m	struct:__anon316
numConsoleLines	src/cgame/cg_local.h	/^  int           numConsoleLines;$/;"	m	struct:__anon249
numCountedVotingClients	src/game/g_local.h	/^  int               numCountedVotingClients[ NUM_TEAMS ];\/\/ The total number of clients considered in vote calculations$/;"	m	struct:__anon316
numCubemaps	src/renderergl2/tr_local.h	/^	int                     numCubemaps;$/;"	m	struct:__anon63
numDecisionNodes	src/renderergl1/tr_local.h	/^	int			numDecisionNodes;$/;"	m	struct:__anon157
numDecisionNodes	src/renderergl2/tr_local.h	/^	int			numDecisionNodes;$/;"	m	struct:__anon49
numDeforms	src/renderergl1/tr_local.h	/^	int			numDeforms;$/;"	m	struct:shader_s
numDeforms	src/renderergl2/tr_local.h	/^	int			numDeforms;$/;"	m	struct:shader_s
numDisplayServers	src/ui/ui_local.h	/^  int    numDisplayServers;$/;"	m	struct:serverStatus_s
numDrawSurfs	src/renderergl1/tr_local.h	/^	int			numDrawSurfs;$/;"	m	struct:__anon147
numDrawSurfs	src/renderergl1/tr_local.h	/^	int		numDrawSurfs;$/;"	m	struct:__anon171
numDrawSurfs	src/renderergl2/tr_local.h	/^	int			numDrawSurfs;$/;"	m	struct:__anon39
numDrawSurfs	src/renderergl2/tr_local.h	/^	int		numDrawSurfs;$/;"	m	struct:__anon71
numEdgeDefs	src/renderergl1/tr_shadows.c	/^static	int			numEdgeDefs[SHADER_MAX_VERTEXES];$/;"	v	file:
numEdgeDefs	src/renderergl2/tr_shadows.c	/^static	int			numEdgeDefs[SHADER_MAX_VERTEXES];$/;"	v	file:
numEdges	src/qcommon/cm_local.h	/^	int						numEdges;$/;"	m	struct:__anon437
numEjectors	src/cgame/cg_local.h	/^  int                   numEjectors;$/;"	m	struct:baseParticleSystem_s
numEntities	src/cgame/cg_local.h	/^  int           numEntities;                          \/\/ all of the entities that need to be presented$/;"	m	struct:__anon258
numEntities	src/cgame/cg_public.h	/^  int           numEntities;                          \/\/ all of the entities that need to be presented$/;"	m	struct:__anon228
numEntities	src/client/client.h	/^	int				numEntities;			\/\/ all of the entities that need to be presented$/;"	m	struct:__anon84
numEntities	src/client/client.h	/^  int           numEntities;                          \/\/ all of the entities that need to be presented$/;"	m	struct:__anon83
numEntities	src/renderergl2/tr_local.h	/^	int    numEntities;$/;"	m	struct:pshadow_s
numEntityChars	src/qcommon/cm_local.h	/^	int			numEntityChars;$/;"	m	struct:__anon440
numEntries	src/game/g_playmap.h	/^  int head, tail, numEntries;$/;"	m	struct:playMapQueue_s
numFBOs	src/renderergl2/tr_local.h	/^	int						numFBOs;$/;"	m	struct:__anon63
numFacets	src/qcommon/cm_patch.c	/^static	int				numFacets;$/;"	v	file:
numFacets	src/qcommon/cm_patch.h	/^	int		numFacets;$/;"	m	struct:patchCollide_s
numFoundPlayerServers	src/ui/ui_local.h	/^  int numFoundPlayerServers;$/;"	m	struct:__anon518
numFrames	src/cgame/cg_local.h	/^  int             numFrames;$/;"	m	struct:baseParticle_s
numFrames	src/game/bg_public.h	/^  int   numFrames;$/;"	m	struct:animation_s
numFrames	src/qcommon/qfiles.h	/^	int			numFrames;$/;"	m	struct:__anon393
numFrames	src/qcommon/qfiles.h	/^	int			numFrames;$/;"	m	struct:__anon404
numFrames	src/qcommon/qfiles.h	/^	int		numFrames;			\/\/ all surfaces in a model should have the same$/;"	m	struct:__anon388
numFrames	src/renderergl2/tr_local.h	/^	int             numFrames;$/;"	m	struct:mdvModel_s
numGlobalServerAddresses	src/client/client.h	/^	int			numGlobalServerAddresses;$/;"	m	struct:__anon90
numHumanBuildables	src/cgame/cg_local.h	/^  int       numHumanBuildables;$/;"	m	struct:__anon246
numHumanClients	src/cgame/cg_local.h	/^  int       numHumanClients;$/;"	m	struct:__anon246
numHumanClients	src/game/g_local.h	/^  int               numHumanClients;$/;"	m	struct:__anon316
numHumanClientsAlive	src/game/g_local.h	/^  int               numHumanClientsAlive;$/;"	m	struct:__anon316
numHumanSamples	src/game/g_local.h	/^  int               numHumanSamples;$/;"	m	struct:__anon316
numHumanSpawns	src/game/g_local.h	/^  int               numHumanSpawns;$/;"	m	struct:__anon316
numHumans	src/cgame/cg_local.h	/^  int           numHumans;              \/\/ Total number of players in humans team$/;"	m	struct:__anon253
numHumansReady	src/cgame/cg_local.h	/^  int           numHumansReady;         \/\/ Number of human players ready$/;"	m	struct:__anon253
numIP	src/qcommon/net_ip.c	/^static int numIP;$/;"	v	file:
numIgnoreAddresses	src/master/master.c	/^static int								numIgnoreAddresses	= 0;$/;"	v	file:
numImageAnimations	src/renderergl1/tr_local.h	/^	int				numImageAnimations;$/;"	m	struct:__anon141
numImageAnimations	src/renderergl2/tr_local.h	/^	int				numImageAnimations;$/;"	m	struct:__anon23
numImageLoaders	src/renderergl1/tr_image.c	/^static int numImageLoaders = ARRAY_LEN( imageLoaders );$/;"	v	file:
numImageLoaders	src/renderergl2/tr_image.c	/^static int numImageLoaders = ARRAY_LEN( imageLoaders );$/;"	v	file:
numImages	src/renderergl1/tr_local.h	/^	int						numImages;$/;"	m	struct:__anon163
numImages	src/renderergl2/tr_local.h	/^	int						numImages;$/;"	m	struct:__anon63
numIndexes	src/qcommon/qfiles.h	/^	int			numIndexes;$/;"	m	struct:__anon417
numIndexes	src/renderergl1/tr_local.h	/^	int				numIndexes;$/;"	m	struct:__anon153
numIndexes	src/renderergl1/tr_local.h	/^	int			numIndexes;$/;"	m	struct:shaderCommands_s
numIndexes	src/renderergl2/tr_local.h	/^	int			numIndexes;$/;"	m	struct:shaderCommands_s
numIndexes	src/renderergl2/tr_local.h	/^	int             numIndexes;$/;"	m	struct:mdvSurface_s
numIndexes	src/renderergl2/tr_local.h	/^	int             numIndexes;$/;"	m	struct:srfBspSurface_s
numIndexes	src/renderergl2/tr_local.h	/^	int             numIndexes;$/;"	m	struct:srfVaoMdvMesh_s
numIndices	src/client/cl_avi.c	/^  int           numIndices;$/;"	m	struct:aviFileData_s	file:
numIndices	src/renderergl1/tr_local.h	/^	int			numIndices;$/;"	m	struct:__anon152
numInlineModels	src/cgame/cg_local.h	/^  int           numInlineModels;$/;"	m	struct:__anon253
numJitters	src/cgame/cg_local.h	/^  int                     numJitters;$/;"	m	struct:baseTrailBeam_s
numJumpTableTargets	src/qcommon/vm_local.h	/^	int			numJumpTableTargets;$/;"	m	struct:vm_s
numLODs	src/qcommon/qfiles.h	/^	int			numLODs;$/;"	m	struct:__anon404
numLeafBrushes	src/qcommon/cm_local.h	/^	int			numLeafBrushes;$/;"	m	struct:__anon435
numLeafBrushes	src/qcommon/cm_local.h	/^	int			numLeafBrushes;$/;"	m	struct:__anon440
numLeafBrushes	src/qcommon/qfiles.h	/^	int			numLeafBrushes;$/;"	m	struct:__anon411
numLeafSurfaces	src/qcommon/cm_local.h	/^	int			numLeafSurfaces;$/;"	m	struct:__anon435
numLeafSurfaces	src/qcommon/cm_local.h	/^	int			numLeafSurfaces;$/;"	m	struct:__anon440
numLeafSurfaces	src/qcommon/qfiles.h	/^	int			numLeafSurfaces;$/;"	m	struct:__anon411
numLeafs	src/qcommon/cm_local.h	/^	int			numLeafs;$/;"	m	struct:__anon440
numLightmaps	src/renderergl1/tr_local.h	/^	int						numLightmaps;$/;"	m	struct:__anon163
numLightmaps	src/renderergl2/tr_local.h	/^	int						numLightmaps;$/;"	m	struct:__anon63
numLines	src/ui/ui_local.h	/^  int numLines;$/;"	m	struct:__anon511
numLines	src/ui/ui_local.h	/^  int numLines;$/;"	m	struct:__anon512
numLines	src/ui/ui_shared.c	/^  int       numLines;$/;"	m	struct:__anon521	file:
numLods	src/renderergl1/tr_local.h	/^	int			 numLods;$/;"	m	struct:model_s
numLods	src/renderergl2/tr_local.h	/^	int			 numLods;$/;"	m	struct:model_s
numLoopChannels	src/client/snd_dma.c	/^int			numLoopChannels;$/;"	v
numMaps	src/game/g_playmap.h	/^  int  numMaps;$/;"	m	struct:playMapPool_s
numMergedSurfaces	src/renderergl2/tr_local.h	/^	int			numMergedSurfaces;$/;"	m	struct:__anon49
numModelLoaders	src/renderergl1/tr_model.c	/^static int numModelLoaders = ARRAY_LEN(modelLoaders);$/;"	v	file:
numModelLoaders	src/renderergl2/tr_model.c	/^static int numModelLoaders = ARRAY_LEN(modelLoaders);$/;"	v	file:
numModels	src/cgame/cg_local.h	/^  int             numModels;$/;"	m	struct:baseParticle_s
numModels	src/renderergl1/tr_local.h	/^	int						numModels;$/;"	m	struct:__anon163
numModels	src/renderergl2/tr_local.h	/^	int						numModels;$/;"	m	struct:__anon63
numNetSources	src/ui/ui_main.c	/^static const size_t numNetSources = ARRAY_LEN( netSources );$/;"	v	file:
numNodes	src/game/g_maprotation.c	/^  int     numNodes;$/;"	m	struct:mapRotation_s	file:
numNodes	src/qcommon/cm_local.h	/^	int			numNodes;$/;"	m	struct:__anon440
numNonSpectatorClients	src/game/g_local.h	/^  int               numNonSpectatorClients;       \/\/ includes connecting clients$/;"	m	struct:__anon316
numOfStackedBuildables	src/game/g_local.h	/^  int               numOfStackedBuildables;$/;"	m	struct:gentity_s
numParticles	src/cgame/cg_local.h	/^  int             numParticles;$/;"	m	struct:baseParticleEjector_s
numPasses	src/renderergl1/tr_local.h	/^	int			numPasses;$/;"	m	struct:shaderCommands_s
numPasses	src/renderergl2/tr_local.h	/^	int			numPasses;$/;"	m	struct:shaderCommands_s
numPlanes	src/qcommon/cm_local.h	/^	int			numPlanes;$/;"	m	struct:__anon440
numPlanes	src/qcommon/cm_patch.c	/^static	int				numPlanes;$/;"	v	file:
numPlanes	src/qcommon/cm_patch.h	/^	int		numPlanes;			\/\/ surface planes plus edge planes$/;"	m	struct:patchCollide_s
numPlayersOnServers	src/ui/ui_local.h	/^  int    numPlayersOnServers;$/;"	m	struct:serverStatus_s
numPlayingClients	src/game/g_local.h	/^  int               numPlayingClients;            \/\/ connected, non-spectators$/;"	m	struct:__anon316
numPoints	src/qcommon/q_shared.h	/^	int		numPoints;$/;"	m	struct:__anon471
numPoints	src/renderergl1/tr_local.h	/^	int			numPoints;$/;"	m	struct:__anon152
numPolys	src/renderergl1/tr_local.h	/^	int			numPolys;$/;"	m	struct:__anon147
numPolys	src/renderergl2/tr_local.h	/^	int			numPolys;$/;"	m	struct:__anon39
numQuads	src/client/cl_cin.c	/^	long				numQuads;$/;"	m	struct:__anon100	file:
numResolutions	src/ui/ui_local.h	/^  int           numResolutions;$/;"	m	struct:__anon518
numRotations	src/game/g_maprotation.c	/^  int             numRotations;$/;"	m	struct:mapRotations_s	file:
numScores	src/cgame/cg_local.h	/^  int           numScores;$/;"	m	struct:__anon249
numSegments	src/cgame/cg_local.h	/^  int                     numSegments;$/;"	m	struct:baseTrailBeam_s
numServerCommands	src/cgame/cg_local.h	/^  int           numServerCommands;                    \/\/ text based server commands to execute when this$/;"	m	struct:__anon258
numServerCommands	src/cgame/cg_public.h	/^  int           numServerCommands;                    \/\/ text based server commands to execute when this$/;"	m	struct:__anon228
numServerCommands	src/client/client.h	/^  int           numServerCommands;                    \/\/ text based server commands to execute when this$/;"	m	struct:__anon83
numServers	src/ui/ui_local.h	/^  int    numServers;$/;"	m	struct:serverStatus_s
numSfx	src/client/snd_openal.c	/^static sfxHandle_t numSfx = 0;$/;"	v	file:
numShaderIndexes	src/renderergl2/tr_local.h	/^	int             numShaderIndexes;$/;"	m	struct:mdvSurface_s
numShaders	src/qcommon/cm_local.h	/^	int			numShaders;$/;"	m	struct:__anon440
numShaders	src/qcommon/qfiles.h	/^	int		numShaders;			\/\/ all surfaces in a model should have the same$/;"	m	struct:__anon388
numShaders	src/renderergl1/tr_local.h	/^	int						numShaders;$/;"	m	struct:__anon163
numShaders	src/renderergl1/tr_local.h	/^	int			numShaders;$/;"	m	struct:__anon157
numShaders	src/renderergl2/tr_local.h	/^	int						numShaders;$/;"	m	struct:__anon63
numShaders	src/renderergl2/tr_local.h	/^	int			numShaders;$/;"	m	struct:__anon49
numSides	src/qcommon/qfiles.h	/^	int			numSides;$/;"	m	struct:__anon413
numSkins	src/qcommon/qfiles.h	/^	int			numSkins;$/;"	m	struct:__anon393
numSkins	src/renderergl1/tr_local.h	/^	int						numSkins;$/;"	m	struct:__anon163
numSkins	src/renderergl2/tr_local.h	/^	int						numSkins;$/;"	m	struct:__anon63
numSkins	src/renderergl2/tr_local.h	/^	int             numSkins;$/;"	m	struct:mdvModel_s
numSnapshotEntities	src/server/server.h	/^	int			numSnapshotEntities;		\/\/ sv_maxclients->integer*PACKET_BACKUP*MAX_SNAPSHOT_ENTITIES$/;"	m	struct:__anon188
numSnapshotEntities	src/server/sv_snapshot.c	/^	int		numSnapshotEntities;$/;"	m	struct:__anon223	file:
numSpawnVarChars	src/game/g_local.h	/^  int               numSpawnVarChars;$/;"	m	struct:__anon316
numSpawnVars	src/game/g_local.h	/^  int               numSpawnVars;$/;"	m	struct:__anon316
numSubModels	src/qcommon/cm_local.h	/^	int			numSubModels;$/;"	m	struct:__anon440
numSurfaces	src/qcommon/cm_local.h	/^	int			numSurfaces;$/;"	m	struct:__anon440
numSurfaces	src/qcommon/qfiles.h	/^	int			firstSurface, numSurfaces;$/;"	m	struct:__anon407
numSurfaces	src/qcommon/qfiles.h	/^	int			numSurfaces;$/;"	m	struct:__anon393
numSurfaces	src/qcommon/qfiles.h	/^	int			numSurfaces;$/;"	m	struct:__anon402
numSurfaces	src/renderergl1/tr_local.h	/^	int			numSurfaces;$/;"	m	struct:__anon156
numSurfaces	src/renderergl1/tr_local.h	/^	int			numSurfaces;$/;"	m	struct:skin_s
numSurfaces	src/renderergl2/tr_local.h	/^	int			numSurfaces;$/;"	m	struct:__anon48
numSurfaces	src/renderergl2/tr_local.h	/^	int			numSurfaces;$/;"	m	struct:skin_s
numSurfaces	src/renderergl2/tr_local.h	/^	int             numSurfaces;$/;"	m	struct:mdvModel_s
numSymbols	src/qcommon/vm_local.h	/^	int			numSymbols;$/;"	m	struct:vm_s
numSymbols	src/tools/asm/q3asm.c	/^int		numSymbols;$/;"	v
numTags	src/qcommon/qfiles.h	/^	int			numTags;			$/;"	m	struct:__anon393
numTags	src/qcommon/qfiles.h	/^        int                     numTags;$/;"	m	struct:__anon404
numTags	src/renderergl2/tr_local.h	/^	int             numTags;$/;"	m	struct:mdvModel_s
numTargets	src/game/g_local.h	/^  int           numTargets;$/;"	m	struct:zap_s
numTeamImbalanceWarnings	src/game/g_local.h	/^  int               numTeamImbalanceWarnings;$/;"	m	struct:__anon316
numTexMods	src/renderergl1/tr_local.h	/^	int				numTexMods;$/;"	m	struct:__anon141
numTexMods	src/renderergl2/tr_local.h	/^	int				numTexMods;$/;"	m	struct:__anon23
numTextureUnits	src/renderercommon/tr_types.h	/^	int						numTextureUnits;		\/\/ multitexture ability$/;"	m	struct:__anon120
numTriangles	src/qcommon/qfiles.h	/^	int			numTriangles;$/;"	m	struct:__anon397
numTriangles	src/qcommon/qfiles.h	/^	int		numTriangles;$/;"	m	struct:__anon388
numUnfoggedPasses	src/renderergl1/tr_local.h	/^	int			numUnfoggedPasses;$/;"	m	struct:shader_s
numUnfoggedPasses	src/renderergl2/tr_local.h	/^	int			numUnfoggedPasses;$/;"	m	struct:shader_s
numVaoSurfaces	src/renderergl2/tr_local.h	/^	int             numVaoSurfaces;$/;"	m	struct:mdvModel_s
numVaos	src/renderergl2/tr_local.h	/^	int						numVaos;$/;"	m	struct:__anon63
numVertexes	src/renderergl1/tr_local.h	/^	int			numVertexes;$/;"	m	struct:shaderCommands_s
numVertexes	src/renderergl2/tr_local.h	/^	int			numVertexes;$/;"	m	struct:shaderCommands_s
numVerts	src/qcommon/qfiles.h	/^	int			numVerts;$/;"	m	struct:__anon397
numVerts	src/qcommon/qfiles.h	/^	int			numVerts;$/;"	m	struct:__anon417
numVerts	src/qcommon/qfiles.h	/^	int		numVerts;$/;"	m	struct:__anon388
numVerts	src/renderercommon/tr_types.h	/^	int					numVerts;$/;"	m	struct:poly_s
numVerts	src/renderergl1/tr_local.h	/^	int				numVerts;$/;"	m	struct:__anon153
numVerts	src/renderergl1/tr_local.h	/^	int				numVerts;$/;"	m	struct:srfPoly_s
numVerts	src/renderergl2/tr_local.h	/^	int				numVerts;$/;"	m	struct:srfPoly_s
numVerts	src/renderergl2/tr_local.h	/^	int             numVerts;$/;"	m	struct:mdvSurface_s
numVerts	src/renderergl2/tr_local.h	/^	int             numVerts;$/;"	m	struct:srfBspSurface_s
numVerts	src/renderergl2/tr_local.h	/^	int             numVerts;$/;"	m	struct:srfVaoMdvMesh_s
numVideoFrames	src/client/cl_avi.c	/^  int           numVideoFrames;$/;"	m	struct:aviFileData_s	file:
numVotingClients	src/game/g_local.h	/^  int               numVotingClients[ NUM_TEAMS ];\/\/ set by CalculateRanks$/;"	m	struct:__anon316
numWeights	src/qcommon/qfiles.h	/^	int			numWeights;$/;"	m	struct:__anon395
numWorldSurfaces	src/renderergl2/tr_local.h	/^	int         numWorldSurfaces;$/;"	m	struct:__anon49
num_anims	src/renderercommon/iqm.h	/^    unsigned int num_anims, ofs_anims;$/;"	m	struct:iqmheader
num_comment	src/renderercommon/iqm.h	/^    unsigned int num_comment, ofs_comment;$/;"	m	struct:iqmheader
num_dlights	src/renderergl1/tr_local.h	/^	int			num_dlights;$/;"	m	struct:__anon147
num_dlights	src/renderergl2/tr_local.h	/^	int			num_dlights;$/;"	m	struct:__anon39
num_entities	src/game/g_local.h	/^  int               num_entities;   \/\/ MAX_CLIENTS <= num_entities <= ENTITYNUM_MAX_NORMAL$/;"	m	struct:__anon316
num_entities	src/renderergl1/tr_local.h	/^	int			num_entities;$/;"	m	struct:__anon147
num_entities	src/renderergl2/tr_local.h	/^	int			num_entities;$/;"	m	struct:__anon39
num_entities	src/server/server.h	/^	int				num_entities;		\/\/ current number, <= MAX_GENTITIES$/;"	m	struct:__anon184
num_entities	src/server/server.h	/^	int				num_entities;$/;"	m	struct:__anon185
num_extensions	src/renderercommon/iqm.h	/^    unsigned int num_extensions, ofs_extensions;$/;"	m	struct:iqmheader
num_framechannels	src/renderercommon/iqm.h	/^    unsigned int num_frames, num_framechannels, ofs_frames, ofs_bounds;$/;"	m	struct:iqmheader
num_frames	src/renderercommon/iqm.h	/^    unsigned int first_frame, num_frames;$/;"	m	struct:iqmanim
num_frames	src/renderercommon/iqm.h	/^    unsigned int num_frames, num_framechannels, ofs_frames, ofs_bounds;$/;"	m	struct:iqmheader
num_frames	src/renderergl1/tr_local.h	/^	int		num_frames;$/;"	m	struct:__anon154
num_frames	src/renderergl2/tr_local.h	/^	int		num_frames;$/;"	m	struct:__anon46
num_joints	src/renderercommon/iqm.h	/^    unsigned int num_joints, ofs_joints;$/;"	m	struct:iqmheader
num_joints	src/renderergl1/tr_local.h	/^	int		num_joints;$/;"	m	struct:__anon154
num_joints	src/renderergl2/tr_local.h	/^	int		num_joints;$/;"	m	struct:__anon46
num_meshes	src/renderercommon/iqm.h	/^    unsigned int num_meshes, ofs_meshes;$/;"	m	struct:iqmheader
num_poses	src/renderercommon/iqm.h	/^    unsigned int num_poses, ofs_poses;$/;"	m	struct:iqmheader
num_poses	src/renderergl1/tr_local.h	/^	int		num_poses;$/;"	m	struct:__anon154
num_poses	src/renderergl2/tr_local.h	/^	int		num_poses;$/;"	m	struct:__anon46
num_pshadows	src/renderergl2/tr_local.h	/^	int         num_pshadows;$/;"	m	struct:__anon39
num_surfaces	src/renderergl1/tr_local.h	/^	int		num_surfaces;$/;"	m	struct:__anon154
num_surfaces	src/renderergl2/tr_local.h	/^	int		num_surfaces;$/;"	m	struct:__anon46
num_text	src/renderercommon/iqm.h	/^    unsigned int num_text, ofs_text;$/;"	m	struct:iqmheader
num_triangles	src/renderercommon/iqm.h	/^    unsigned int first_triangle, num_triangles;$/;"	m	struct:iqmmesh
num_triangles	src/renderercommon/iqm.h	/^    unsigned int num_triangles, ofs_triangles, ofs_adjacency;$/;"	m	struct:iqmheader
num_triangles	src/renderergl1/tr_local.h	/^	int		first_triangle, num_triangles;$/;"	m	struct:srfIQModel_s
num_triangles	src/renderergl1/tr_local.h	/^	int		num_triangles;$/;"	m	struct:__anon154
num_triangles	src/renderergl2/tr_local.h	/^	int		first_triangle, num_triangles;$/;"	m	struct:srfIQModel_s
num_triangles	src/renderergl2/tr_local.h	/^	int		num_triangles;$/;"	m	struct:__anon46
num_vertexarrays	src/renderercommon/iqm.h	/^    unsigned int num_vertexarrays, num_vertexes, ofs_vertexarrays;$/;"	m	struct:iqmheader
num_vertexes	src/renderercommon/iqm.h	/^    unsigned int first_vertex, num_vertexes;$/;"	m	struct:iqmmesh
num_vertexes	src/renderercommon/iqm.h	/^    unsigned int num_vertexarrays, num_vertexes, ofs_vertexarrays;$/;"	m	struct:iqmheader
num_vertexes	src/renderergl1/tr_local.h	/^	int		first_vertex, num_vertexes;$/;"	m	struct:srfIQModel_s
num_vertexes	src/renderergl1/tr_local.h	/^	int		num_vertexes;$/;"	m	struct:__anon154
num_vertexes	src/renderergl2/tr_local.h	/^	int		first_vertex, num_vertexes;$/;"	m	struct:srfIQModel_s
num_vertexes	src/renderergl2/tr_local.h	/^	int		num_vertexes;$/;"	m	struct:__anon46
number	src/cgame/cg_local.h	/^	int		number;			\/\/ entity index$/;"	m	struct:__anon257
number	src/client/client.h	/^	int		number;			\/\/ entity index$/;"	m	struct:alternateEntityState_s
number	src/game/bg_public.h	/^  buildable_t   number;$/;"	m	struct:__anon353
number	src/game/bg_public.h	/^  class_t   number;$/;"	m	struct:__anon349
number	src/game/bg_public.h	/^  team_t         number;$/;"	m	struct:__anon352
number	src/game/bg_public.h	/^  upgrade_t number;$/;"	m	struct:__anon356
number	src/game/bg_public.h	/^  weapon_t  number;$/;"	m	struct:__anon355
number	src/qcommon/q_shared.h	/^	int		number;			\/\/ entity index$/;"	m	struct:entityState_s
number	src/tools/lcc/lburg/lburg.h	/^	int number;		\/* identifying number *\/$/;"	m	struct:nonterm
number	src/tools/lcc/src/config.h	/^	short number;$/;"	m	struct:__anon275
numberOfCachePages	src/server/sqlite3.c	/^static int numberOfCachePages(PCache *p){$/;"	f	file:
numberShaders	src/cgame/cg_local.h	/^  qhandle_t   numberShaders[ 11 ];$/;"	m	struct:__anon251
numberstring	src/qcommon/common.c	/^memstatic_t numberstring[] = {$/;"	v
numcensors	src/game/g_cmds.c	/^static int numcensors;$/;"	v	file:
numericType	src/server/sqlite3.c	/^static u16 numericType(Mem *pMem){$/;"	f	file:
numfavoriteservers	src/client/client.h	/^	int			numfavoriteservers;$/;"	m	struct:__anon90
numfiles	src/qcommon/files.c	/^	int				numfiles;					\/\/ number of files in pk3$/;"	m	struct:pack_s	file:
numfogs	src/renderergl1/tr_local.h	/^	int			numfogs;$/;"	m	struct:__anon157
numfogs	src/renderergl2/tr_local.h	/^	int			numfogs;$/;"	m	struct:__anon49
numglobalservers	src/client/client.h	/^	int			numglobalservers;$/;"	m	struct:__anon90
numlocalservers	src/client/client.h	/^	int			numlocalservers;$/;"	m	struct:__anon90
nummarksurfaces	src/renderergl1/tr_local.h	/^	int			nummarksurfaces;$/;"	m	struct:__anon157
nummarksurfaces	src/renderergl1/tr_local.h	/^	int			nummarksurfaces;$/;"	m	struct:mnode_s
nummarksurfaces	src/renderergl2/tr_local.h	/^	int			nummarksurfaces;$/;"	m	struct:__anon49
nummarksurfaces	src/renderergl2/tr_local.h	/^	int			nummarksurfaces;$/;"	m	struct:mnode_s
numnodes	src/renderergl1/tr_local.h	/^	int			numnodes;		\/\/ includes leafs$/;"	m	struct:__anon157
numnodes	src/renderergl2/tr_local.h	/^	int			numnodes;		\/\/ includes leafs$/;"	m	struct:__anon49
numparms	src/qcommon/parse.c	/^  int numparms;               \/\/number of define parameters$/;"	m	struct:define_s	file:
numplanes	src/renderergl1/tr_local.h	/^	int			numplanes;$/;"	m	struct:__anon157
numplanes	src/renderergl2/tr_local.h	/^	int			numplanes;$/;"	m	struct:__anon49
numpoints	src/qcommon/cm_polylib.h	/^	int		numpoints;$/;"	m	struct:__anon386
numqueriedservers	src/ui/ui_local.h	/^  int    numqueriedservers;$/;"	m	struct:serverStatus_s
numsides	src/qcommon/cm_local.h	/^	int			numsides;$/;"	m	struct:__anon437
numsurfaces	src/renderergl1/tr_local.h	/^	int			numsurfaces;$/;"	m	struct:__anon157
numsurfaces	src/renderergl2/tr_local.h	/^	int			numsurfaces;$/;"	m	struct:__anon49
numtokens	src/qcommon/parse.c	/^int numtokens;$/;"	v
numtouch	src/game/bg_public.h	/^  int           numtouch;$/;"	m	struct:pmove_s
nzVar	src/server/sqlite3.c	/^  int nzVar;                \/* Number of available slots in azVar[] *\/$/;"	m	struct:Parse	file:
nzVar	src/server/sqlite3.c	/^  ynVar nzVar;            \/* Number of entries in azVar[] *\/$/;"	m	struct:Vdbe	file:
o	src/qcommon/files.c	/^	FILE*		o;$/;"	m	union:qfile_gus	file:
objiter	src/server/sqlite3.c	/^  RbuObjIter objiter;             \/* Iterator for skipping through tbl\/idx *\/$/;"	m	struct:sqlite3rbu	file:
objname	src/tools/lcc/cpp/unix.c	/^char	*objname; \/* "src.$O: " *\/$/;"	v
oc0	src/qcommon/vm_x86.c	/^static	int	oc0, oc1, pop0, pop1;$/;"	v	file:
oc1	src/qcommon/vm_x86.c	/^static	int	oc0, oc1, pop0, pop1;$/;"	v	file:
occlusionQuery	src/renderergl2/tr_local.h	/^	qboolean	occlusionQuery;$/;"	m	struct:__anon60
off	src/tools/lcc/src/symbolic.c	/^static int off, maxoff, uid = 0, verbose = 0, html = 0;$/;"	v	file:
offset	src/cgame/cg_local.h	/^  vec3_t            offset;$/;"	m	struct:attachment_s
offset	src/qcommon/cm_local.h	/^	vec3_t		offset;$/;"	m	struct:__anon442
offset	src/qcommon/msg.c	/^	int		offset;$/;"	m	struct:__anon485	file:
offset	src/qcommon/qfiles.h	/^	vec3_t		offset;$/;"	m	struct:__anon394
offset	src/renderercommon/iqm.h	/^    unsigned int offset;$/;"	m	struct:iqmvertexarray
offset	src/renderergl2/tr_local.h	/^	uint32_t offset;$/;"	m	struct:vaoAttrib_s
offset	src/server/sqlite3.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offset	src/tools/lcc/src/c.h	/^			long offset;$/;"	m	struct:code::__anon291::__anon293
offset	src/tools/lcc/src/c.h	/^	int offset;$/;"	m	struct:field
offset	src/tools/lcc/src/config.h	/^	int offset;$/;"	m	struct:__anon277
offset	src/tools/lcc/src/config.h	/^	int offset;$/;"	m	struct:__anon279
offset	src/tools/lcc/src/gen.c	/^int offset;$/;"	v
offsetTime	src/ui/ui_shared.h	/^  int offsetTime;                 \/\/ time based value for various effects$/;"	m	struct:__anon499
offsetof	src/server/sqlite3.c	9890;"	d	file:
offsets	src/qcommon/cm_local.h	/^	vec3_t			offsets[8];	\/\/ [signbits][x] = either size[0][x] or size[1][x]$/;"	m	struct:__anon443
ofs	src/game/g_spawn.c	/^  size_t ofs;$/;"	m	struct:__anon367	file:
ofsBoneReferences	src/qcommon/qfiles.h	/^	int			ofsBoneReferences;$/;"	m	struct:__anon397
ofsEnd	src/qcommon/qfiles.h	/^	int			ofsEnd;				\/\/ end of file$/;"	m	struct:__anon393
ofsEnd	src/qcommon/qfiles.h	/^	int			ofsEnd;				\/\/ end of file$/;"	m	struct:__anon404
ofsEnd	src/qcommon/qfiles.h	/^	int			ofsEnd;				\/\/ next lod follows$/;"	m	struct:__anon402
ofsEnd	src/qcommon/qfiles.h	/^	int			ofsEnd;		\/\/ next surface follows$/;"	m	struct:__anon397
ofsEnd	src/qcommon/qfiles.h	/^	int		ofsEnd;				\/\/ next surface follows$/;"	m	struct:__anon388
ofsFrames	src/qcommon/qfiles.h	/^	int			ofsFrames;			\/\/ mdrFrame_t[numFrames]$/;"	m	struct:__anon404
ofsFrames	src/qcommon/qfiles.h	/^	int			ofsFrames;			\/\/ offset for first frame$/;"	m	struct:__anon393
ofsHeader	src/qcommon/qfiles.h	/^	int			ofsHeader;	\/\/ this will be a negative number$/;"	m	struct:__anon397
ofsIndices	src/renderergl1/tr_local.h	/^	int			ofsIndices;$/;"	m	struct:__anon152
ofsLODs	src/qcommon/qfiles.h	/^	int			ofsLODs;$/;"	m	struct:__anon404
ofsShaders	src/qcommon/qfiles.h	/^	int		ofsShaders;			\/\/ offset from start of md3Surface_t$/;"	m	struct:__anon388
ofsSt	src/qcommon/qfiles.h	/^	int		ofsSt;				\/\/ texture coords are common for all frames$/;"	m	struct:__anon388
ofsSurfaces	src/qcommon/qfiles.h	/^	int			ofsSurfaces;		\/\/ first surface, others follow$/;"	m	struct:__anon393
ofsSurfaces	src/qcommon/qfiles.h	/^	int			ofsSurfaces;		\/\/ first surface, others follow$/;"	m	struct:__anon402
ofsTags	src/qcommon/qfiles.h	/^	int			ofsTags;			\/\/ numFrames * numTags$/;"	m	struct:__anon393
ofsTags	src/qcommon/qfiles.h	/^        int                     ofsTags;$/;"	m	struct:__anon404
ofsTriangles	src/qcommon/qfiles.h	/^	int			ofsTriangles;$/;"	m	struct:__anon397
ofsTriangles	src/qcommon/qfiles.h	/^	int		ofsTriangles;$/;"	m	struct:__anon388
ofsVerts	src/qcommon/qfiles.h	/^	int			ofsVerts;$/;"	m	struct:__anon397
ofsXyzNormals	src/qcommon/qfiles.h	/^	int		ofsXyzNormals;		\/\/ numVerts * numFrames$/;"	m	struct:__anon388
ofs_adjacency	src/renderercommon/iqm.h	/^    unsigned int num_triangles, ofs_triangles, ofs_adjacency;$/;"	m	struct:iqmheader
ofs_anims	src/renderercommon/iqm.h	/^    unsigned int num_anims, ofs_anims;$/;"	m	struct:iqmheader
ofs_bounds	src/renderercommon/iqm.h	/^    unsigned int num_frames, num_framechannels, ofs_frames, ofs_bounds;$/;"	m	struct:iqmheader
ofs_comment	src/renderercommon/iqm.h	/^    unsigned int num_comment, ofs_comment;$/;"	m	struct:iqmheader
ofs_extensions	src/renderercommon/iqm.h	/^    unsigned int num_extensions, ofs_extensions;$/;"	m	struct:iqmheader
ofs_frames	src/renderercommon/iqm.h	/^    unsigned int num_frames, num_framechannels, ofs_frames, ofs_bounds;$/;"	m	struct:iqmheader
ofs_joints	src/renderercommon/iqm.h	/^    unsigned int num_joints, ofs_joints;$/;"	m	struct:iqmheader
ofs_meshes	src/renderercommon/iqm.h	/^    unsigned int num_meshes, ofs_meshes;$/;"	m	struct:iqmheader
ofs_poses	src/renderercommon/iqm.h	/^    unsigned int num_poses, ofs_poses;$/;"	m	struct:iqmheader
ofs_text	src/renderercommon/iqm.h	/^    unsigned int num_text, ofs_text;$/;"	m	struct:iqmheader
ofs_triangles	src/renderercommon/iqm.h	/^    unsigned int num_triangles, ofs_triangles, ofs_adjacency;$/;"	m	struct:iqmheader
ofs_vertexarrays	src/renderercommon/iqm.h	/^    unsigned int num_vertexarrays, num_vertexes, ofs_vertexarrays;$/;"	m	struct:iqmheader
ogg_codec	src/client/snd_codec_ogg.c	/^snd_codec_t ogg_codec =$/;"	v
okConstFactor	src/server/sqlite3.c	/^  u8 okConstFactor;    \/* OK to factor out constants *\/$/;"	m	struct:Parse	file:
oldAccel	src/game/g_local.h	/^  vec3_t            oldAccel;$/;"	m	struct:gentity_s
oldBuildableAnim	src/cgame/cg_local.h	/^  buildableAnimNumber_t oldBuildableAnim; \/\/to detect when new anims are set$/;"	m	struct:centity_s
oldComboBoxH	src/ui/ui_shared.c	/^static float oldComboBoxH;$/;"	v	file:
oldComboBoxY	src/ui/ui_shared.c	/^static float oldComboBoxY;$/;"	v	file:
oldDopplerScale	src/client/snd_local.h	/^	float		oldDopplerScale;$/;"	m	struct:__anon94
oldDopplerScale	src/client/snd_local.h	/^	float		oldDopplerScale;$/;"	m	struct:loopSound_s
oldFrame	src/cgame/cg_local.h	/^  int         oldFrame;$/;"	m	struct:__anon235
oldFrameServerTime	src/client/client.h	/^	int			oldFrameServerTime;	\/\/ to check tournament restarts$/;"	m	struct:__anon86
oldFrameTime	src/cgame/cg_local.h	/^  int         oldFrameTime;     \/\/ time when ->oldFrame was exactly on$/;"	m	struct:__anon235
oldLockingContext	src/server/sqlite3.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
oldOrigin	src/game/g_local.h	/^  vec3_t              oldOrigin;$/;"	m	struct:gclient_s
oldServerTime	src/client/client.h	/^	int			oldServerTime;		\/\/ to prevent time from flowing bakcwards$/;"	m	struct:__anon86
oldServerTime	src/server/server.h	/^	int				oldServerTime;$/;"	m	struct:client_s
oldShader	src/game/g_utils.c	/^  char oldShader[ MAX_QPATH ];$/;"	m	struct:__anon373	file:
oldTime	src/cgame/cg_local.h	/^  int           oldTime;                            \/\/ time at last frame, used for missile trails and prediction checking$/;"	m	struct:__anon249
oldValid	src/cgame/cg_local.h	/^  qboolean              oldValid;  $/;"	m	struct:centity_s
oldVelocity	src/game/g_local.h	/^  vec3_t            oldVelocity;$/;"	m	struct:gentity_s
oldXOff	src/client/cl_cin.c	/^	long				oldXOff, oldYOff, oldysize, oldxsize;$/;"	m	struct:__anon99	file:
oldYOff	src/client/cl_cin.c	/^	long				oldXOff, oldYOff, oldysize, oldxsize;$/;"	m	struct:__anon99	file:
old_com_frameTime	src/client/cl_input.c	/^int			old_com_frameTime;$/;"	v
oldaaxes	src/sdl/sdl_input.c	/^	int oldaaxes[MAX_JOYSTICK_AXIS];$/;"	m	struct:__anon379	file:
oldaxes	src/sdl/sdl_input.c	/^	unsigned int oldaxes;$/;"	m	struct:__anon379	file:
oldbuttons	src/game/g_local.h	/^  int                 oldbuttons;$/;"	m	struct:gclient_s
oldestSpeedSample	src/cgame/cg_draw.c	/^int oldestSpeedSample = 0;$/;"	v
oldframe	src/renderercommon/tr_types.h	/^	int			oldframe;$/;"	m	struct:__anon114
oldhats	src/sdl/sdl_input.c	/^	unsigned int oldhats;$/;"	m	struct:__anon379	file:
oldmask	src/server/sqlite3.c	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse	file:
oldorigin	src/renderercommon/tr_types.h	/^	float		oldorigin[3];		\/\/ also used as MODEL_BEAM's "to"$/;"	m	struct:__anon114
oldparam	src/tools/lcc/src/decl.c	/^static void oldparam(Symbol p, void *cl) {$/;"	f	file:
oldsize	src/qcommon/msg.c	/^int oldsize = 0;$/;"	v
oldstyle	src/tools/lcc/src/c.h	/^			unsigned oldstyle:1;$/;"	m	struct:type::__anon306::__anon307
oldxsize	src/client/cl_cin.c	/^	long				oldXOff, oldYOff, oldysize, oldxsize;$/;"	m	struct:__anon99	file:
oldysize	src/client/cl_cin.c	/^	long				oldXOff, oldYOff, oldysize, oldxsize;$/;"	m	struct:__anon99	file:
omit	src/server/sqlite3.c	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
omit	src/server/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
omitMask	src/server/sqlite3.c	/^      u16 omitMask;          \/* Terms that may be omitted *\/$/;"	m	struct:WhereLoop::__anon212::__anon214	file:
onCharEntry	src/ui/ui_shared.h	/^  const char *onCharEntry;       \/\/ called when text entered$/;"	m	struct:itemDef_s
onClose	src/ui/ui_shared.h	/^  const char *onClose;              \/\/ run when the menu is closed$/;"	m	struct:__anon503
onDeathSystemHandle	src/cgame/cg_local.h	/^  qhandle_t       onDeathSystemHandle;$/;"	m	struct:baseParticle_s
onDeathSystemName	src/cgame/cg_local.h	/^  char            onDeathSystemName[ MAX_QPATH ];$/;"	m	struct:baseParticle_s
onESC	src/ui/ui_shared.h	/^  const char *onESC;                \/\/ run when the menu is closed$/;"	m	struct:__anon503
onError	src/server/sqlite3.c	/^  u8 onError;              \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index	file:
onErrorText	src/server/sqlite3.c	/^static const char *onErrorText(int onError){$/;"	f	file:
onFocus	src/ui/ui_shared.h	/^  const char *onFocus;           \/\/ select script$/;"	m	struct:itemDef_s
onOpen	src/ui/ui_shared.h	/^  const char *onOpen;                \/\/ run when the menu is first opened$/;"	m	struct:__anon503
onQuad	src/client/cl_cin.c	/^	long				onQuad;$/;"	m	struct:__anon100	file:
onSelect	src/ui/ui_shared.h	/^  const char *onSelect;          \/\/ select script$/;"	m	struct:itemDef_s
onTextEntry	src/ui/ui_shared.h	/^  const char *onTextEntry;       \/\/ called when text entered$/;"	m	struct:itemDef_s
one	src/game/bg_lib.c	/^one     =  1.0,$/;"	v	file:
ones	src/tools/lcc/src/c.h	36;"	d
onlyAlternate	src/qcommon/files.c	/^	qboolean		onlyAlternate;$/;"	m	struct:pack_s	file:
onlyPrimary	src/qcommon/files.c	/^	qboolean		onlyPrimary;$/;"	m	struct:pack_s	file:
oob	src/qcommon/qcommon.h	/^	qboolean	oob;			\/\/ set to true if the buffer size failed (with allowoverflow set)$/;"	m	struct:__anon418
oom	src/server/sqlite3.c	/^  u8 oom;            \/* Set to true if out of memory *\/$/;"	m	struct:JsonParse	file:
op	src/game/g_maprotation.c	/^  conditionOp_t       op;$/;"	m	struct:condition_s	file:
op	src/qcommon/vm_powerpc.c	/^	unsigned long int op;$/;"	m	struct:source_instruction_s	file:
op	src/qcommon/vm_sparc.c	/^	unsigned char		op;$/;"	m	struct:src_insn	file:
op	src/server/sqlite3.c	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
op	src/server/sqlite3.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	src/server/sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
op	src/server/sqlite3.c	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause	file:
op	src/server/sqlite3.c	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger	file:
op	src/server/sqlite3.c	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select	file:
op	src/server/sqlite3.c	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr	file:
op	src/server/sqlite3.c	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep	file:
op	src/server/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
op	src/tools/lcc/cpp/eval.c	/^enum toktype ops[NSTAK], *op;$/;"	v	typeref:enum:
op	src/tools/lcc/lburg/lburg.h	/^	void *op;		\/* a terminal or nonterminal *\/$/;"	m	struct:tree
op	src/tools/lcc/src/c.h	/^	int op;$/;"	m	struct:tree
op	src/tools/lcc/src/c.h	/^	int op;$/;"	m	struct:type
op	src/tools/lcc/src/c.h	/^	short op;$/;"	m	struct:node
op	src/tools/lcc/src/c.h	/^       	op(ADD,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ADD,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ADD,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ADD,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ADDRF,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ADDRG,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ADDRL,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ARG,B,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ARG,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ARG,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ARG,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ARG,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ASGN,B,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ASGN,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ASGN,I,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ASGN,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(ASGN,U,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BAND,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BAND,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BCOM,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BCOM,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BOR,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BOR,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BXOR,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(BXOR,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CALL,B,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CALL,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CALL,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CALL,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CALL,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CALL,V,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CNST,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CNST,I,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CNST,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CNST,U,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVF,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVF,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVI,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVI,I,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVI,U,csilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVP,U,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVU,I,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVU,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(CVU,U,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(DIV,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(DIV,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(DIV,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(EQ,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(EQ,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(EQ,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(GE,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(GE,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(GE,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(GT,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(GT,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(GT,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(INDIR,B,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(INDIR,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(INDIR,I,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(INDIR,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(INDIR,U,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(JUMP,V,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LABEL,V,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LE,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LE,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LE,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LOAD,B,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LOAD,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LOAD,I,csilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LOAD,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LOAD,U,csilhp) LASTOP };$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LSH,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LSH,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LT,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LT,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(LT,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(MOD,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(MOD,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(MUL,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(MUL,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(MUL,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(NE,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(NE,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(NE,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(NEG,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(NEG,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RET,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RET,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RET,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RET,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RET,V,-)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RSH,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(RSH,U,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(SUB,F,fdx)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(SUB,I,ilh)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(SUB,P,p)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	/^       	op(SUB,U,ilhp)$/;"	e	enum:__anon287
op	src/tools/lcc/src/c.h	197;"	d
op	src/tools/lcc/src/c.h	332;"	d
op	src/ui/ui_shared.c	/^    char  op;$/;"	m	union:exprToken_s::__anon520	file:
op2	src/server/sqlite3.c	/^  u8 op2;                \/* TK_REGISTER: original value of Expr.op$/;"	m	struct:Expr	file:
opArg0	src/qcommon/vm_powerpc.c	188;"	d	file:
opArg0	src/qcommon/vm_sparc.c	404;"	d	file:
opArg2F	src/qcommon/vm_powerpc.c	194;"	d	file:
opArg2F	src/qcommon/vm_sparc.c	410;"	d	file:
opArg2I	src/qcommon/vm_powerpc.c	193;"	d	file:
opArg2I	src/qcommon/vm_sparc.c	409;"	d	file:
opArg2IF	src/qcommon/vm_powerpc.c	195;"	d	file:
opArg2IF	src/qcommon/vm_sparc.c	411;"	d	file:
opArgF	src/qcommon/vm_powerpc.c	190;"	d	file:
opArgF	src/qcommon/vm_sparc.c	406;"	d	file:
opArgI	src/qcommon/vm_powerpc.c	189;"	d	file:
opArgI	src/qcommon/vm_sparc.c	405;"	d	file:
opArgIF	src/qcommon/vm_powerpc.c	191;"	d	file:
opArgIF	src/qcommon/vm_sparc.c	407;"	d	file:
opImm0	src/qcommon/vm_powerpc.c	179;"	d	file:
opImm0	src/qcommon/vm_sparc.c	395;"	d	file:
opImm1	src/qcommon/vm_powerpc.c	180;"	d	file:
opImm1	src/qcommon/vm_sparc.c	396;"	d	file:
opImm4	src/qcommon/vm_powerpc.c	181;"	d	file:
opImm4	src/qcommon/vm_sparc.c	397;"	d	file:
opIterNext	src/server/sqlite3.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opMask	src/server/sqlite3.c	/^  u32 opMask;                \/* Acceptable operators *\/$/;"	m	struct:WhereScan	file:
opPrecedence	src/server/sqlite3.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opRet0	src/qcommon/vm_powerpc.c	183;"	d	file:
opRet0	src/qcommon/vm_sparc.c	399;"	d	file:
opRetF	src/qcommon/vm_powerpc.c	185;"	d	file:
opRetF	src/qcommon/vm_sparc.c	401;"	d	file:
opRetI	src/qcommon/vm_powerpc.c	184;"	d	file:
opRetI	src/qcommon/vm_sparc.c	400;"	d	file:
opRetIF	src/qcommon/vm_powerpc.c	186;"	d	file:
opRetIF	src/qcommon/vm_sparc.c	402;"	d	file:
opcode	src/qcommon/vm_powerpc_asm.c	/^	unsigned long opcode;$/;"	m	struct:powerpc_opcode	file:
opcode	src/qcommon/vm_sparc.c	/^	unsigned int	opcode;$/;"	m	struct:sparc_opcode	file:
opcode	src/server/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp	file:
opcode	src/server/sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList	file:
opcode	src/tools/asm/q3asm.c	/^	int		opcode;$/;"	m	struct:__anon268	file:
opcode_t	src/qcommon/vm_local.h	/^} opcode_t;$/;"	t	typeref:enum:__anon483
opcode_t	src/tools/asm/q3asm.c	/^} opcode_t;$/;"	t	typeref:enum:__anon264	file:
opcodesHash	src/tools/asm/q3asm.c	/^int		opcodesHash[ NUM_SOURCE_OPS ];$/;"	v
opd	src/qcommon/vm_powerpc.c	/^	opd_t opd;$/;"	m	struct:VM_Data	file:
opd_t	src/qcommon/vm_powerpc.c	/^} opd_t;$/;"	t	typeref:struct:__anon452	file:
open	src/client/snd_codec.h	/^	CODEC_OPEN open;$/;"	m	struct:snd_codec_s
open	src/server/sqlite3.c	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open16	src/server/sqlite3.c	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
openDatabase	src/server/sqlite3.c	/^static int openDatabase($/;"	f	file:
openDirectory	src/server/sqlite3.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openFlags	src/server/sqlite3.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	src/server/sqlite3.c	/^  int openFlags;                  \/* Flags this file was opened with *\/$/;"	m	struct:rbu_file	file:
openFlags	src/server/sqlite3.c	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared	file:
openFlags	src/server/sqlite3.c	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3	file:
openMenuCount	src/ui/ui_shared.c	/^int openMenuCount = 0;$/;"	v
openStatTable	src/server/sqlite3.c	/^static void openStatTable($/;"	f	file:
openSubJournal	src/server/sqlite3.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
open_v2	src/server/sqlite3.c	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	file:
oper	src/tools/lcc/src/expr.c	/^static int oper[] = {$/;"	v	file:
operands	src/qcommon/vm_powerpc_asm.c	/^	unsigned char operands[8];$/;"	m	struct:powerpc_opcode	file:
operator	src/qcommon/parse.c	/^  int operator;$/;"	m	struct:operator_s	file:
operatorMask	src/server/sqlite3.c	/^static u16 operatorMask(int op){$/;"	f	file:
operator_s	src/qcommon/parse.c	/^typedef struct operator_s$/;"	s	file:
operator_t	src/qcommon/parse.c	/^} operator_t;$/;"	t	typeref:struct:operator_s	file:
operators	src/tools/lcc/doc/4.html	/^<h2><a NAME="operators">5.5 Dag Operators<\/a><\/h2>$/;"	a
opflags	src/server/sqlite3.c	/^  u8 opflags;         \/* Mask of the OPFLG_* flags in opcodes.h *\/$/;"	m	struct:VdbeOp	file:
opindex	src/tools/lcc/src/c.h	21;"	d
opkind	src/tools/lcc/src/c.h	22;"	d
opname	src/tools/lcc/src/tree.c	/^char *opname(int op) {$/;"	f
opnames	src/qcommon/vm_interpreted.c	/^static char	*opnames[256] = {$/;"	v	file:
opnames	src/qcommon/vm_sparc.c	/^static const char *opnames[256] = {$/;"	v	file:
ops	src/tools/lcc/cpp/eval.c	/^enum toktype ops[NSTAK], *op;$/;"	v	typeref:enum:toktype
opsize	src/tools/lcc/src/c.h	23;"	d
opt	src/tools/lcc/etc/lcc.c	/^static void opt(char *arg) {$/;"	f	file:
optable	src/tools/asm/q3asm.c	/^hashtable_t *optable;$/;"	v
optarg	src/tools/lcc/cpp/getopt.c	/^char    *optarg;$/;"	v
opterr	src/tools/lcc/cpp/getopt.c	/^int     opterr = 1;$/;"	v
optimalReserve	src/server/sqlite3.c	/^  u8 optimalReserve;    \/* Desired amount of reserved space per page *\/$/;"	m	struct:BtShared	file:
optimalStageIteratorFunc	src/renderergl1/tr_local.h	/^	void		(*optimalStageIteratorFunc)( void );$/;"	m	struct:shader_s
optimalStageIteratorFunc	src/renderergl2/tr_local.h	/^	void		(*optimalStageIteratorFunc)( void );$/;"	m	struct:shader_s
optind	src/tools/lcc/cpp/getopt.c	/^int     optind = 1;$/;"	v
option	src/tools/lcc/etc/bytecode.c	/^int option(char *arg) {$/;"	f
options	src/tools/asm/q3asm.c	/^options_t options = { 0 };$/;"	v
options_s	src/tools/asm/q3asm.c	/^typedef struct options_s {$/;"	s	file:
options_t	src/tools/asm/q3asm.c	/^} options_t;$/;"	t	typeref:struct:options_s	file:
optopt	src/tools/lcc/cpp/getopt.c	/^int	optopt;$/;"	v
optree	src/tools/lcc/src/enode.c	/^Tree (*optree[])(int, Tree, Tree) = {$/;"	v
optype	src/tools/lcc/src/c.h	24;"	d
opus_codec	src/client/snd_codec_opus.c	/^snd_codec_t opus_codec =$/;"	v
or	src/renderergl1/tr_local.h	/^	orientationr_t			or;					\/\/ for current entity$/;"	m	struct:__anon163
or	src/renderergl1/tr_local.h	/^	orientationr_t	or;$/;"	m	struct:__anon150
or	src/renderergl1/tr_local.h	/^	orientationr_t	or;$/;"	m	struct:__anon162
or	src/renderergl2/tr_local.h	/^	orientationr_t			or;					\/\/ for current entity$/;"	m	struct:__anon63
or	src/renderergl2/tr_local.h	/^	orientationr_t	or;$/;"	m	struct:__anon43
or	src/renderergl2/tr_local.h	/^	orientationr_t	or;$/;"	m	struct:__anon62
orconf	src/server/sqlite3.c	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg	file:
orconf	src/server/sqlite3.c	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep	file:
orderByConsumed	src/server/sqlite3.c	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	file:
orderByConsumed	src/server/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
orientation_t	src/qcommon/q_shared.h	/^} orientation_t;$/;"	t	typeref:struct:__anon472
orientationr_t	src/renderergl1/tr_local.h	/^} orientationr_t;$/;"	t	typeref:struct:__anon129
orientationr_t	src/renderergl2/tr_local.h	/^} orientationr_t;$/;"	t	typeref:struct:__anon9
origin	src/cgame/cg_local.h	/^	vec3_t		origin;$/;"	m	struct:__anon256
origin	src/cgame/cg_local.h	/^	vec3_t	origin;$/;"	m	struct:__anon257
origin	src/cgame/cg_local.h	/^  vec3_t            origin;$/;"	m	struct:attachment_s
origin	src/cgame/cg_local.h	/^  vec3_t            origin;$/;"	m	struct:particle_s
origin	src/cgame/cg_local.h	/^  vec3_t    origin;$/;"	m	struct:__anon246
origin	src/cgame/cg_local.h	/^  vec3_t   origin;$/;"	m	struct:buildableCache_s
origin	src/client/client.h	/^	vec3_t		origin;$/;"	m	struct:alternatePlayerState_s
origin	src/client/client.h	/^	vec3_t	origin;$/;"	m	struct:alternateEntityState_s
origin	src/client/snd_local.h	/^	vec3_t		origin;			\/\/ only use if fixed_origin is set$/;"	m	struct:__anon94
origin	src/client/snd_local.h	/^	vec3_t		origin;$/;"	m	struct:loopSound_s
origin	src/client/snd_openal.c	/^	vec3_t					origin;$/;"	m	struct:sentity_s	file:
origin	src/game/g_local.h	/^  vec3_t       origin;$/;"	m	struct:__anon315
origin	src/game/g_local.h	/^  vec3_t      origin;$/;"	m	struct:unlagged_s
origin	src/game/g_mover.c	/^  vec3_t  origin;$/;"	m	struct:__anon319	file:
origin	src/qcommon/msg.c	/^	vec3_t		origin;$/;"	m	struct:alternatePlayerState_s	file:
origin	src/qcommon/q_shared.h	/^	vec3_t		origin;$/;"	m	struct:__anon472
origin	src/qcommon/q_shared.h	/^	vec3_t		origin;$/;"	m	struct:playerState_s
origin	src/qcommon/q_shared.h	/^	vec3_t	origin;$/;"	m	struct:entityState_s
origin	src/qcommon/qfiles.h	/^	vec3_t		origin;$/;"	m	struct:md3Tag_s
origin	src/renderercommon/tr_types.h	/^	float		origin[3];			\/\/ also used as MODEL_BEAM's "from"$/;"	m	struct:__anon114
origin	src/renderergl1/tr_flares.c	/^	vec3_t		origin;$/;"	m	struct:flare_s	file:
origin	src/renderergl1/tr_local.h	/^	vec3_t			origin;$/;"	m	struct:srfFlare_s
origin	src/renderergl1/tr_local.h	/^	vec3_t		origin;			\/\/ in world coordinates$/;"	m	struct:__anon129
origin	src/renderergl1/tr_local.h	/^	vec3_t	origin;$/;"	m	struct:dlight_s
origin	src/renderergl2/tr_flares.c	/^	vec3_t		origin;$/;"	m	struct:flare_s	file:
origin	src/renderergl2/tr_local.h	/^	float           origin[3];$/;"	m	struct:__anon51
origin	src/renderergl2/tr_local.h	/^	vec3_t			origin;$/;"	m	struct:srfFlare_s
origin	src/renderergl2/tr_local.h	/^	vec3_t		origin;			\/\/ in world coordinates$/;"	m	struct:__anon9
origin	src/renderergl2/tr_local.h	/^	vec3_t	origin;$/;"	m	struct:dlight_s
origin	src/ui/ui_shared.h	/^  vec3_t origin;$/;"	m	struct:modelDef_s
origin2	src/cgame/cg_local.h	/^	vec3_t	origin2;$/;"	m	struct:__anon257
origin2	src/client/client.h	/^	vec3_t	origin2;$/;"	m	struct:alternateEntityState_s
origin2	src/game/g_local.h	/^  vec3_t       origin2;$/;"	m	struct:__anon315
origin2	src/qcommon/q_shared.h	/^	vec3_t	origin2;$/;"	m	struct:entityState_s
originalBrushNumber	src/renderergl1/tr_local.h	/^	int			originalBrushNumber;$/;"	m	struct:__anon149
originalBrushNumber	src/renderergl2/tr_local.h	/^	int			originalBrushNumber;$/;"	m	struct:__anon41
orphanTrigger	src/server/sqlite3.c	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
osAccess	src/server/sqlite3.c	27874;"	d	file:
osAreFileApisANSI	src/server/sqlite3.c	35755;"	d	file:
osAreFileApisANSI	src/server/sqlite3.c	35776;"	d	file:
osCharLowerW	src/server/sqlite3.c	35785;"	d	file:
osCharUpperW	src/server/sqlite3.c	35793;"	d	file:
osClose	src/server/sqlite3.c	27871;"	d	file:
osCloseHandle	src/server/sqlite3.c	35797;"	d	file:
osCreateEventExW	src/server/sqlite3.c	36263;"	d	file:
osCreateFile2	src/server/sqlite3.c	36317;"	d	file:
osCreateFileA	src/server/sqlite3.c	35805;"	d	file:
osCreateFileMappingA	src/server/sqlite3.c	35825;"	d	file:
osCreateFileMappingFromApp	src/server/sqlite3.c	36372;"	d	file:
osCreateFileMappingW	src/server/sqlite3.c	35835;"	d	file:
osCreateFileW	src/server/sqlite3.c	35814;"	d	file:
osCreateMutexW	src/server/sqlite3.c	35844;"	d	file:
osDeleteFileA	src/server/sqlite3.c	35853;"	d	file:
osDeleteFileW	src/server/sqlite3.c	35861;"	d	file:
osFallocate	src/server/sqlite3.c	27946;"	d	file:
osFchmod	src/server/sqlite3.c	27939;"	d	file:
osFchown	src/server/sqlite3.c	27965;"	d	file:
osFcntl	src/server/sqlite3.c	27900;"	d	file:
osFcntl	src/server/sqlite3.c	28275;"	d	file:
osFcntl	src/server/sqlite3.c	28276;"	d	file:
osFileTimeToLocalFileTime	src/server/sqlite3.c	35869;"	d	file:
osFileTimeToSystemTime	src/server/sqlite3.c	35878;"	d	file:
osFlushFileBuffers	src/server/sqlite3.c	35883;"	d	file:
osFlushViewOfFile	src/server/sqlite3.c	36414;"	d	file:
osFormatMessageA	src/server/sqlite3.c	35891;"	d	file:
osFormatMessageW	src/server/sqlite3.c	35900;"	d	file:
osFreeLibrary	src/server/sqlite3.c	35909;"	d	file:
osFstat	src/server/sqlite3.c	27890;"	d	file:
osFtruncate	src/server/sqlite3.c	27897;"	d	file:
osGetCurrentProcessId	src/server/sqlite3.c	35913;"	d	file:
osGetDiskFreeSpaceA	src/server/sqlite3.c	35921;"	d	file:
osGetDiskFreeSpaceW	src/server/sqlite3.c	35930;"	d	file:
osGetFileAttributesA	src/server/sqlite3.c	35939;"	d	file:
osGetFileAttributesExW	src/server/sqlite3.c	35955;"	d	file:
osGetFileAttributesW	src/server/sqlite3.c	35947;"	d	file:
osGetFileInformationByHandleEx	src/server/sqlite3.c	36299;"	d	file:
osGetFileSize	src/server/sqlite3.c	35964;"	d	file:
osGetFullPathNameA	src/server/sqlite3.c	35972;"	d	file:
osGetFullPathNameW	src/server/sqlite3.c	35981;"	d	file:
osGetLastError	src/server/sqlite3.c	35986;"	d	file:
osGetNativeSystemInfo	src/server/sqlite3.c	36343;"	d	file:
osGetProcAddressA	src/server/sqlite3.c	36001;"	d	file:
osGetProcessHeap	src/server/sqlite3.c	36364;"	d	file:
osGetSystemInfo	src/server/sqlite3.c	36010;"	d	file:
osGetSystemTime	src/server/sqlite3.c	36014;"	d	file:
osGetSystemTimeAsFileTime	src/server/sqlite3.c	36022;"	d	file:
osGetTempPathA	src/server/sqlite3.c	36031;"	d	file:
osGetTempPathW	src/server/sqlite3.c	36039;"	d	file:
osGetTickCount	src/server/sqlite3.c	36047;"	d	file:
osGetTickCount64	src/server/sqlite3.c	36335;"	d	file:
osGetVersionExA	src/server/sqlite3.c	36055;"	d	file:
osGetVersionExW	src/server/sqlite3.c	36065;"	d	file:
osGetcwd	src/server/sqlite3.c	27877;"	d	file:
osGeteuid	src/server/sqlite3.c	27968;"	d	file:
osGetpagesize	src/server/sqlite3.c	27996;"	d	file:
osGetpid	src/server/sqlite3.c	27483;"	d	file:
osHeapAlloc	src/server/sqlite3.c	36070;"	d	file:
osHeapCompact	src/server/sqlite3.c	36119;"	d	file:
osHeapCreate	src/server/sqlite3.c	36079;"	d	file:
osHeapDestroy	src/server/sqlite3.c	36088;"	d	file:
osHeapFree	src/server/sqlite3.c	36092;"	d	file:
osHeapReAlloc	src/server/sqlite3.c	36096;"	d	file:
osHeapSize	src/server/sqlite3.c	36101;"	d	file:
osHeapValidate	src/server/sqlite3.c	36110;"	d	file:
osInterlockedCompareExchange	src/server/sqlite3.c	36383;"	d	file:
osIsNT	src/server/sqlite3.c	36671;"	d	file:
osIsNT	src/server/sqlite3.c	36673;"	d	file:
osIsNT	src/server/sqlite3.c	36675;"	d	file:
osIsNT	src/server/sqlite3.c	36677;"	d	file:
osLoadLibraryA	src/server/sqlite3.c	36127;"	d	file:
osLoadLibraryW	src/server/sqlite3.c	36136;"	d	file:
osLoadPackagedLibrary	src/server/sqlite3.c	36326;"	d	file:
osLocalFree	src/server/sqlite3.c	36144;"	d	file:
osLocaltime	src/server/sqlite3.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osLockFile	src/server/sqlite3.c	36153;"	d	file:
osLockFileEx	src/server/sqlite3.c	36164;"	d	file:
osLstat	src/server/sqlite3.c	28010;"	d	file:
osMapViewOfFile	src/server/sqlite3.c	36175;"	d	file:
osMapViewOfFileFromApp	src/server/sqlite3.c	36308;"	d	file:
osMkdir	src/server/sqlite3.c	27955;"	d	file:
osMmap	src/server/sqlite3.c	27975;"	d	file:
osMremap	src/server/sqlite3.c	27989;"	d	file:
osMultiByteToWideChar	src/server/sqlite3.c	36180;"	d	file:
osMunmap	src/server/sqlite3.c	27982;"	d	file:
osOpen	src/server/sqlite3.c	27868;"	d	file:
osOpenDirectory	src/server/sqlite3.c	27952;"	d	file:
osOutputDebugStringA	src/server/sqlite3.c	36352;"	d	file:
osOutputDebugStringW	src/server/sqlite3.c	36360;"	d	file:
osPread	src/server/sqlite3.c	27910;"	d	file:
osPread64	src/server/sqlite3.c	27917;"	d	file:
osPwrite	src/server/sqlite3.c	27927;"	d	file:
osPwrite64	src/server/sqlite3.c	27935;"	d	file:
osQueryPerformanceCounter	src/server/sqlite3.c	36185;"	d	file:
osRead	src/server/sqlite3.c	27903;"	d	file:
osReadFile	src/server/sqlite3.c	36190;"	d	file:
osReadlink	src/server/sqlite3.c	28003;"	d	file:
osRmdir	src/server/sqlite3.c	27958;"	d	file:
osSetEndOfFile	src/server/sqlite3.c	36195;"	d	file:
osSetFilePointer	src/server/sqlite3.c	36203;"	d	file:
osSetFilePointerEx	src/server/sqlite3.c	36290;"	d	file:
osSleep	src/server/sqlite3.c	36212;"	d	file:
osStat	src/server/sqlite3.c	27880;"	d	file:
osSystemTimeToFileTime	src/server/sqlite3.c	36216;"	d	file:
osUnlink	src/server/sqlite3.c	27949;"	d	file:
osUnlockFile	src/server/sqlite3.c	36226;"	d	file:
osUnlockFileEx	src/server/sqlite3.c	36236;"	d	file:
osUnmapViewOfFile	src/server/sqlite3.c	36245;"	d	file:
osUuidCreate	src/server/sqlite3.c	36397;"	d	file:
osUuidCreateSequential	src/server/sqlite3.c	36405;"	d	file:
osWaitForSingleObject	src/server/sqlite3.c	36272;"	d	file:
osWaitForSingleObjectEx	src/server/sqlite3.c	36281;"	d	file:
osWideCharToMultiByte	src/server/sqlite3.c	36249;"	d	file:
osWrite	src/server/sqlite3.c	27920;"	d	file:
osWriteFile	src/server/sqlite3.c	36254;"	d	file:
otherEntityNum	src/cgame/cg_local.h	/^	int			otherEntityNum;$/;"	m	struct:__anon256
otherEntityNum	src/cgame/cg_local.h	/^	int		otherEntityNum;	\/\/ shotgun sources, etc$/;"	m	struct:__anon257
otherEntityNum	src/client/client.h	/^	int			otherEntityNum;$/;"	m	struct:alternatePlayerState_s
otherEntityNum	src/client/client.h	/^	int		otherEntityNum;	\/\/ shotgun sources, etc$/;"	m	struct:alternateEntityState_s
otherEntityNum	src/qcommon/msg.c	/^	int			otherEntityNum;$/;"	m	struct:alternatePlayerState_s	file:
otherEntityNum	src/qcommon/q_shared.h	/^	int			otherEntityNum;$/;"	m	struct:playerState_s
otherEntityNum	src/qcommon/q_shared.h	/^	int		otherEntityNum;	\/\/ shotgun sources, etc$/;"	m	struct:entityState_s
otherEntityNum2	src/cgame/cg_local.h	/^	int		otherEntityNum2;$/;"	m	struct:__anon257
otherEntityNum2	src/client/client.h	/^	int		otherEntityNum2;$/;"	m	struct:alternateEntityState_s
otherEntityNum2	src/qcommon/q_shared.h	/^	int		otherEntityNum2;$/;"	m	struct:entityState_s
out	src/qcommon/puff.c	/^    uint8_t *out;         \/* output buffer *\/$/;"	m	struct:state	file:
out2Prerelease	src/server/sqlite3.c	/^static Mem *out2Prerelease(Vdbe *p, VdbeOp *pOp){$/;"	f	file:
out2PrereleaseWithClear	src/server/sqlite3.c	/^static SQLITE_NOINLINE Mem *out2PrereleaseWithClear(Mem *pOut){$/;"	f	file:
outOfMemory	src/ui/ui_shared.c	/^static int    allocPoint, outOfMemory;$/;"	v	file:
outPacket_t	src/client/client.h	/^} outPacket_t;$/;"	t	typeref:struct:__anon85
outPackets	src/client/client.h	/^	outPacket_t	outPackets[PACKET_BACKUP];	\/\/ information about each packet we have sent out$/;"	m	struct:__anon86
outSock	src/master/master.c	/^int outSock = -1;$/;"	v
outboundLeakyBucket	src/server/sv_main.c	/^leakyBucket_t outboundLeakyBucket;$/;"	v
outbuf	src/tools/lcc/cpp/cpp.c	/^char	outbuf[OUTS];$/;"	v
outbufp	src/tools/lcc/cpp/cpp.c	/^char	*outbufp = outbuf;$/;"	v
outcnt	src/qcommon/puff.c	/^    uint32_t outcnt;       \/* bytes written to out so far *\/$/;"	m	struct:state	file:
outd	src/tools/lcc/src/output.c	/^static char *outd(long n, FILE *f, char *bp) {$/;"	f	file:
outerbox	src/renderergl1/tr_local.h	/^	image_t		*outerbox[6], *innerbox[6];$/;"	m	struct:__anon145
outerbox	src/renderergl2/tr_local.h	/^	image_t		*outerbox[6], *innerbox[6];$/;"	m	struct:__anon29
outfile	src/renderercommon/tr_image_jpg.c	/^  byte* outfile;		\/* target stream *\/$/;"	m	struct:__anon111	file:
outfile	src/tools/lcc/etc/lcc.c	/^static char *outfile;		\/* ld output file or -[cS] object file *\/$/;"	v	file:
outfp	src/tools/lcc/lburg/gram.c	/^FILE *outfp = NULL;$/;"	v
outgoingSequence	src/qcommon/qcommon.h	/^	int			outgoingSequence;$/;"	m	struct:__anon422
outlen	src/qcommon/puff.c	/^    uint32_t outlen;       \/* available space at out *\/$/;"	m	struct:state	file:
outlineColor	src/ui/ui_shared.h	/^  vec4_t outlineColor;            \/\/ border color$/;"	m	struct:__anon499
outlineShader	src/cgame/cg_local.h	/^  qhandle_t   outlineShader;$/;"	m	struct:__anon251
outnum	src/tools/lcc/cpp/tokens.c	/^outnum(char *p, int n)$/;"	f
outofline	src/tools/lcc/src/c.h	/^	unsigned char size, align, outofline;$/;"	m	struct:metrics
outputFilename	src/tools/asm/q3asm.c	/^char	outputFilename[MAX_OS_PATH];$/;"	v
outs	src/tools/lcc/src/output.c	/^static char *outs(const char *str, FILE *f, char *bp) {$/;"	f	file:
outtype	src/tools/lcc/src/types.c	/^void outtype(Type ty, FILE *f) {$/;"	f
outu	src/tools/lcc/src/output.c	/^static char *outu(unsigned long n, int base, FILE *f, char *bp) {$/;"	f	file:
overbrightBits	src/renderergl1/tr_local.h	/^	int						overbrightBits;		\/\/ r_overbrightBits->integer, but set to 0 if no hw gamma$/;"	m	struct:__anon163
overbrightBits	src/renderergl2/tr_local.h	/^	int						overbrightBits;		\/\/ r_overbrightBits->integer, but set to 0 if no hw gamma$/;"	m	struct:__anon63
overdrawProtection	src/cgame/cg_local.h	/^  qboolean        overdrawProtection;$/;"	m	struct:baseParticle_s
overflow	src/server/sqlite3.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overflowed	src/qcommon/cm_local.h	/^	qboolean	overflowed;$/;"	m	struct:leafList_s
overflowed	src/qcommon/qcommon.h	/^	qboolean	overflowed;		\/\/ set to true if the buffer size failed (with allowoverflow set)$/;"	m	struct:__anon418
overflows	src/qcommon/msg.c	/^int	overflows;$/;"	v
overlayHeight	src/cgame/cg_local.h	/^  int           overlayHeight;$/;"	m	struct:__anon252
overlayShader	src/cgame/cg_local.h	/^  qhandle_t     overlayShader;$/;"	m	struct:__anon252
overlayWidth	src/cgame/cg_local.h	/^  int           overlayWidth;$/;"	m	struct:__anon252
overload_function	src/server/sqlite3.c	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	file:
overmindAttackTimer	src/game/g_local.h	/^  int               overmindAttackTimer;$/;"	m	struct:gentity_s
overmindDyingTimer	src/game/g_local.h	/^  int               overmindDyingTimer;$/;"	m	struct:gentity_s
overmindMuted	src/game/g_local.h	/^  qboolean          overmindMuted;$/;"	m	struct:__anon316
overmindSpawnsTimer	src/game/g_local.h	/^  int               overmindSpawnsTimer;$/;"	m	struct:gentity_s
ovt	src/game/bg_lib.c	/^ovt     =  4.2995665694e-08, \/* -(128-log2(ovfl+.5ulp)) *\/$/;"	v	file:
owner	src/server/sqlite3.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	src/server/sqlite3.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
ownerDraw	src/ui/ui_shared.h	/^  int ownerDraw;                  \/\/ ownerDraw style$/;"	m	struct:__anon499
ownerDrawFlags	src/ui/ui_shared.h	/^  int ownerDrawFlags;             \/\/ show flags for ownerdraw items$/;"	m	struct:__anon499
ownerDrawHandleKey	src/ui/ui_shared.h	/^  qboolean ( *ownerDrawHandleKey )( int ownerDraw, int key );$/;"	m	struct:__anon506
ownerDrawItem	src/ui/ui_shared.h	/^  void ( *ownerDrawItem ) ( float x, float y, float w, float h, float text_x,$/;"	m	struct:__anon506
ownerDrawText	src/ui/ui_shared.h	/^  const char *( *ownerDrawText )( int ownerDraw );$/;"	m	struct:__anon506
ownerDrawVisible	src/ui/ui_shared.h	/^  qboolean ( *ownerDrawVisible ) ( int flags );$/;"	m	struct:__anon506
ownerDrawWidth	src/ui/ui_shared.h	/^  int ( *ownerDrawWidth )( int ownerDraw, float scale );$/;"	m	struct:__anon506
ownerNum	src/game/g_public.h	/^  int     ownerNum;$/;"	m	struct:__anon361
p	src/qcommon/cm_polylib.h	/^	vec3_t	p[4];		\/\/ variable sized$/;"	m	struct:__anon386
p	src/qcommon/parse.c	/^  char *p;                    \/\/punctuation character(s)$/;"	m	struct:punctuation_s	file:
p	src/server/sqlite3.c	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::p4union	file:
p	src/server/sqlite3.c	/^  const char *p;                  \/* Token text (not NULL terminated) *\/$/;"	m	struct:Fts5Token	file:
p	src/server/sqlite3.c	/^  u8 *p;                          \/* Pointer to buffer containing record *\/$/;"	m	struct:Fts5Data	file:
p	src/server/sqlite3.c	/^  u8 *p;$/;"	m	struct:Fts5Buffer	file:
p	src/server/sqlite3.c	/^  void *p;          \/* Pointer to sampled record *\/$/;"	m	struct:IndexSample	file:
p	src/tools/lcc/src/alloc.c	/^	char *p;$/;"	m	union:align	file:
p	src/tools/lcc/src/c.h	/^	void *p;$/;"	m	union:value
p0	src/qcommon/cm_local.h	/^	vec3_t	p0;$/;"	m	struct:cbrushedge_s
p1	src/qcommon/cm_local.h	/^	vec3_t	p1;$/;"	m	struct:cbrushedge_s
p1	src/server/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p1	src/server/sqlite3.c	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp	file:
p1	src/server/sqlite3.c	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList	file:
p2	src/server/sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p2	src/server/sqlite3.c	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp	file:
p2	src/server/sqlite3.c	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList	file:
p3	src/server/sqlite3.c	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp	file:
p3	src/server/sqlite3.c	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList	file:
p3	src/server/sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p4	src/server/sqlite3.c	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::p4union	file:
p4type	src/server/sqlite3.c	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp	file:
p4union	src/server/sqlite3.c	/^  union p4union {     \/* fourth parameter *\/$/;"	u	struct:VdbeOp	file:
p5	src/server/sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p5	src/server/sqlite3.c	/^  u8 p5;              \/* Fifth parameter is an unsigned character *\/$/;"	m	struct:VdbeOp	file:
pAggInfo	src/server/sqlite3.c	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr	file:
pAggInfo	src/server/sqlite3.c	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext	file:
pAinc	src/server/sqlite3.c	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse	file:
pAltCursor	src/server/sqlite3.c	/^  VdbeCursor *pAltCursor; \/* Associated index cursor from which to read *\/$/;"	m	struct:VdbeCursor	file:
pAndInfo	src/server/sqlite3.c	/^    WhereAndInfo *pAndInfo; \/* Extra information if (eOperator& WO_AND)!=0 *\/$/;"	m	union:WhereTerm::__anon215	file:
pApi	src/server/sqlite3.c	/^  const Fts5ExtensionApi *pApi;   \/* API offered by current FTS version *\/$/;"	m	struct:CInstIter	file:
pAppData	src/server/sqlite3.c	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	file:
pAppData	src/server/sqlite3.c	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	file:
pAppData	src/server/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	src/server/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	src/server/sqlite3.c	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler	file:
pArg	src/server/sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	file:
pArg	src/server/sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2	file:
pArg	src/server/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pArg	src/server/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2
pAuthArg	src/server/sqlite3.c	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3	file:
pAux	src/server/sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* Currently executing extension function *\/$/;"	m	struct:Fts5Cursor	file:
pAux	src/server/sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* Extension to which this belongs *\/$/;"	m	struct:Fts5Auxdata	file:
pAux	src/server/sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* First in list of all aux. functions *\/$/;"	m	struct:Fts5Global	file:
pAux	src/server/sqlite3.c	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module	file:
pAux	src/server/sqlite3.c	/^  void *pAux;                     \/* Aux data pointer *\/$/;"	m	struct:AuxData	file:
pAuxData	src/server/sqlite3.c	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:Vdbe	file:
pAuxData	src/server/sqlite3.c	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:VdbeFrame	file:
pAuxdata	src/server/sqlite3.c	/^  Fts5Auxdata *pAuxdata;          \/* First in linked list of saved aux-data *\/$/;"	m	struct:Fts5Cursor	file:
pBackup	src/server/sqlite3.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBlob	src/server/sqlite3.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlockingConnection	src/server/sqlite3.c	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3	file:
pBt	src/server/sqlite3.c	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor	file:
pBt	src/server/sqlite3.c	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage	file:
pBt	src/server/sqlite3.c	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree	file:
pBt	src/server/sqlite3.c	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk	file:
pBt	src/server/sqlite3.c	/^  Btree *pBt;           \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor	file:
pBt	src/server/sqlite3.c	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db	file:
pBtree	src/server/sqlite3.c	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor	file:
pBtree	src/server/sqlite3.c	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock	file:
pBuf	src/server/sqlite3.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistCallbackCtx	file:
pBuf	src/server/sqlite3.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pBuf	src/server/sqlite3.c	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page	file:
pBuf	src/server/sqlite3.h	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page
pBulk	src/server/sqlite3.c	/^  void *pBulk;                        \/* Bulk memory used by pcache-local *\/$/;"	m	struct:PCache1	file:
pBusyHandlerArg	src/server/sqlite3.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pCCurHint	src/server/sqlite3.c	/^    struct CCurHint *pCCurHint;                \/* Used by codeCursorHint() *\/$/;"	m	union:Walker::__anon201	typeref:struct:Walker::__anon201::CCurHint	file:
pCache	src/server/sqlite3.c	/^  PCache *pCache;                \/* Cache that owns this page *\/$/;"	m	struct:PgHdr	file:
pCache	src/server/sqlite3.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCache	src/server/sqlite3.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCheck	src/server/sqlite3.c	/^  ExprList *pCheck;    \/* All CHECK constraints *\/$/;"	m	struct:Table	file:
pChunk	src/server/sqlite3.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	src/server/sqlite3.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pCodec	src/server/sqlite3.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pColl	src/server/sqlite3.c	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::p4union	file:
pCollNeededArg	src/server/sqlite3.c	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3	file:
pCols	src/server/sqlite3.c	/^    ExprList *pCols;                \/* List of explicit column names, or NULL *\/$/;"	m	struct:With::Cte	file:
pColset	src/server/sqlite3.c	/^  Fts5Colset *pColset;            \/* Columns to search (NULL -> all columns) *\/$/;"	m	struct:Fts5ExprNearset	file:
pColset	src/server/sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to these columns *\/$/;"	m	struct:Fts5Iter	file:
pColset	src/server/sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistCallbackCtx	file:
pColset	src/server/sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pColumns	src/server/sqlite3.c	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger	file:
pCommitArg	src/server/sqlite3.c	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/$/;"	m	struct:sqlite3	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;            \/* Fts5 table configuration *\/$/;"	m	struct:Fts5VocabCursor	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Index	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Table	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Expr	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5IntegrityCtx	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Parse	file:
pConfig	src/server/sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Storage	file:
pConstExpr	src/server/sqlite3.c	/^  ExprList *pConstExpr;\/* Constant expressions *\/$/;"	m	struct:Parse	file:
pContext	src/server/sqlite3.c	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
pContext	src/server/sqlite3.c	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pContext	src/server/sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pContext	src/server/sqlite3.h	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	src/server/sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pCovidx	src/server/sqlite3.c	/^    Index *pCovidx;       \/* Possible covering index for WHERE_MULTI_OR *\/$/;"	m	union:WhereLevel::__anon210	file:
pCsr	src/server/sqlite3.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCsr	src/server/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	src/server/sqlite3.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	src/server/sqlite3.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCsr	src/server/sqlite3.c	/^  Fts5Cursor *pCsr;               \/* First in list of all open cursors *\/$/;"	m	struct:Fts5Global	file:
pCsr	src/server/sqlite3.c	/^  sqlite3_tokenizer_cursor *pCsr; \/* Cursor to iterate through zInput *\/$/;"	m	struct:Fts3tokCursor	file:
pCtx	src/server/sqlite3.c	/^    sqlite3_context *pCtx; \/* Used when p4type is P4_FUNCCTX *\/$/;"	m	union:VdbeOp::p4union	file:
pCtx	src/server/sqlite3.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCtx	src/server/sqlite3.c	/^  sqlite3_context *pCtx;   \/* Function context - put error messages here *\/$/;"	m	struct:JsonString	file:
pCtx	src/server/sqlite3.c	/^  void *pCtx;$/;"	m	struct:PorterContext	file:
pCurrent	src/server/sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCurrent	src/server/sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:win_syscall	file:
pCursor	src/server/sqlite3.c	/^    BtCursor *pCursor;          \/* CURTYPE_BTREE.  Btree cursor *\/$/;"	m	union:VdbeCursor::__anon202	file:
pCursor	src/server/sqlite3.c	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared	file:
pCursor	src/server/sqlite3.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pData	src/server/sqlite3.c	/^  Fts5Data *pData;              \/* Data for current page of this level *\/$/;"	m	struct:Fts5DlidxLvl	file:
pData	src/server/sqlite3.c	/^  const u8 *pData;$/;"	m	struct:Fts5IndexIter	file:
pData	src/server/sqlite3.c	/^  void *pData;                   \/* Page data *\/$/;"	m	struct:PgHdr	file:
pDataVersion	src/server/sqlite3.c	/^  sqlite3_stmt *pDataVersion;$/;"	m	struct:Fts5Index	file:
pDbFd	src/server/sqlite3.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbPage	src/server/sqlite3.c	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage	file:
pDef	src/server/sqlite3.c	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:Mem::MemValue	file:
pDefault	src/server/sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDefault	src/server/sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:win_syscall	file:
pDeferred	src/server/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor	file:
pDeferred	src/server/sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pDelFrame	src/server/sqlite3.c	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe	file:
pDelete	src/server/sqlite3.c	/^  sqlite3_stmt *pDelete;          \/* Statement for DELETE ops *\/$/;"	m	struct:RbuObjIter	file:
pDeleteNode	src/server/sqlite3.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteParent	src/server/sqlite3.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteRowid	src/server/sqlite3.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleted	src/server/sqlite3.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDeleter	src/server/sqlite3.c	/^  sqlite3_stmt *pDeleter;         \/* "DELETE FROM %_data ... id>=? AND id<=?" *\/$/;"	m	struct:Fts5Index	file:
pDest	src/server/sqlite3.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	src/server/sqlite3.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestructor	src/server/sqlite3.c	/^    FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	union:FuncDef::__anon193	file:
pDflt	src/server/sqlite3.c	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column	file:
pDfltColl	src/server/sqlite3.c	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3	file:
pDfltTok	src/server/sqlite3.c	/^  Fts5TokenizerModule *pDfltTok;  \/* Default tokenizer module *\/$/;"	m	struct:Fts5Global	file:
pDirType_t	src/cgame/cg_local.h	/^} pDirType_t;$/;"	t	typeref:enum:__anon238
pDirty	src/server/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	src/server/sqlite3.c	/^  PgHdr *pDirty;                 \/* Transient list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyNext	src/server/sqlite3.c	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyPrev	src/server/sqlite3.c	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyTail	src/server/sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDisconnect	src/server/sqlite3.c	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3	file:
pDlidx	src/server/sqlite3.c	/^  Fts5DlidxIter *pDlidx;          \/* If there is a doclist-index *\/$/;"	m	struct:Fts5SegIter	file:
pEList	src/server/sqlite3.c	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select	file:
pEList	src/server/sqlite3.c	/^  ExprList *pEList;    \/* Optional list of result-set columns *\/$/;"	m	struct:NameContext	file:
pEnd	src/server/sqlite3.c	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside	file:
pEnd	src/server/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pEntry	src/server/sqlite3.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pEpoTab	src/server/sqlite3.c	/^  Table *pEpoTab;                      \/* Eponymous table for this module *\/$/;"	m	struct:Module	file:
pErr	src/server/sqlite3.c	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3	file:
pExpr	src/server/sqlite3.c	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pExpr	src/server/sqlite3.c	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pExpr	src/server/sqlite3.c	/^    Expr *pExpr;            \/* The list of expressions *\/$/;"	m	struct:ExprList::ExprList_item	file:
pExpr	src/server/sqlite3.c	/^    Expr *pExpr;           \/* Used when p4type is P4_EXPR *\/$/;"	m	union:VdbeOp::p4union	file:
pExpr	src/server/sqlite3.c	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm	file:
pExpr	src/server/sqlite3.c	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan	file:
pExpr	src/server/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor	file:
pExpr	src/server/sqlite3.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExpr	src/server/sqlite3.c	/^  Fts5Expr *pExpr;                \/* Expression for MATCH queries *\/$/;"	m	struct:Fts5Cursor	file:
pExpr	src/server/sqlite3.c	/^  Fts5Expr *pExpr;$/;"	m	struct:Fts5ExprCtx	file:
pExpr	src/server/sqlite3.c	/^  Fts5ExprNode *pExpr;            \/* Result of a successful parse *\/$/;"	m	struct:Fts5Parse	file:
pExprList	src/server/sqlite3.c	/^  ExprList *pExprList; \/* SET clause for UPDATE. *\/$/;"	m	struct:TriggerStep	file:
pExtra	src/server/sqlite3.c	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr	file:
pExtra	src/server/sqlite3.c	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page	file:
pExtra	src/server/sqlite3.h	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page
pFKey	src/server/sqlite3.c	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table	file:
pFd	src/server/sqlite3.c	/^  sqlite3_file *pFd;              \/* File handle *\/$/;"	m	struct:SorterFile	file:
pFd	src/server/sqlite3.c	/^  sqlite3_file *pFd;              \/* File handle to write to *\/$/;"	m	struct:PmaWriter	file:
pFd	src/server/sqlite3.c	/^  sqlite3_file *pFd;           \/* The WAL file to which we write *\/$/;"	m	struct:WalWriter	file:
pFd	src/server/sqlite3.c	/^  sqlite3_file *pFd;          \/* File handle we are reading from *\/$/;"	m	struct:PmaReader	file:
pFiller	src/server/sqlite3.c	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:Mem	file:
pFilter	src/server/sqlite3.c	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader	file:
pFirst	src/server/sqlite3.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	src/server/sqlite3.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon203	typeref:struct:__anon203::MemBlockHdr	file:
pFirst	src/server/sqlite3.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	src/server/sqlite3.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pForest	src/server/sqlite3.c	/^  struct RowSetEntry *pForest;   \/* List of binary trees of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrame	src/server/sqlite3.c	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:Mem::MemValue	file:
pFrame	src/server/sqlite3.c	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe	file:
pFree	src/server/sqlite3.c	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside	file:
pFree	src/server/sqlite3.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	src/server/sqlite3.c	/^  PgHdr1 *pFree;                      \/* List of unused pcache-local pages *\/$/;"	m	struct:PCache1	file:
pFree	src/server/sqlite3.c	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe	file:
pFresh	src/server/sqlite3.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrom	src/server/sqlite3.c	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey	file:
pFts	src/server/sqlite3.c	/^  Fts5Context *pFts;              \/* First arg to pass to pApi functions *\/$/;"	m	struct:CInstIter	file:
pFts3Tab	src/server/sqlite3.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFunc	src/server/sqlite3.c	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pFunc	src/server/sqlite3.c	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::p4union	file:
pFunc	src/server/sqlite3.c	/^  FuncDef *pFunc;         \/* Pointer to function information *\/$/;"	m	struct:sqlite3_context	file:
pFuncArg	src/server/sqlite3.c	/^      ExprList *pFuncArg;  \/* Arguments to table-valued-function *\/$/;"	m	union:SrcList::SrcList_item::__anon199	file:
pGlobal	src/server/sqlite3.c	/^  Fts5Global *pGlobal;            \/* FTS5 global object for this database *\/$/;"	m	struct:Fts5VocabTable	file:
pGlobal	src/server/sqlite3.c	/^  Fts5Global *pGlobal;            \/* Global (connection wide) data *\/$/;"	m	struct:Fts5Table	file:
pGlobal	src/server/sqlite3.c	/^  Fts5Global *pGlobal;            \/* Global context for this function *\/$/;"	m	struct:Fts5Auxiliary	file:
pGroup	src/server/sqlite3.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroupBy	src/server/sqlite3.c	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo	file:
pGroupBy	src/server/sqlite3.c	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select	file:
pHasContent	src/server/sqlite3.c	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared	file:
pHash	src/server/sqlite3.c	/^    FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	union:FuncDef::__anon193	file:
pHash	src/server/sqlite3.c	/^  Fts5Hash *pHash;                \/* Hash table for in-memory data *\/$/;"	m	struct:Fts5Index	file:
pHashNext	src/server/sqlite3.c	/^  Fts5HashEntry *pHashNext;       \/* Next hash entry with same hash-key *\/$/;"	m	struct:Fts5HashEntry	file:
pHaving	src/server/sqlite3.c	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select	file:
pHead	src/server/sqlite3.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHeap	src/server/sqlite3.c	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config	file:
pI64	src/server/sqlite3.c	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::p4union	file:
pIBIndex	src/server/sqlite3.c	/^    Index *pIBIndex;  \/* Index structure corresponding to u1.zIndexedBy *\/$/;"	m	struct:SrcList::SrcList_item	file:
pId	src/server/sqlite3.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	src/server/sqlite3.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pIdList	src/server/sqlite3.c	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep	file:
pIdx	src/server/sqlite3.c	/^  Fts5Index *pIdx;$/;"	m	struct:Fts5FlushCtx	file:
pIdx	src/server/sqlite3.c	/^  Index *pIdx;    \/* The index used to access the table *\/$/;"	m	struct:CCurHint	file:
pIdx	src/server/sqlite3.c	/^  Index *pIdx;$/;"	m	struct:ValueNewStat4Ctx	file:
pIdxDeleter	src/server/sqlite3.c	/^  sqlite3_stmt *pIdxDeleter;      \/* "DELETE FROM %_idx WHERE segid=? *\/$/;"	m	struct:Fts5Index	file:
pIdxExpr	src/server/sqlite3.c	/^  Expr *pIdxExpr;            \/* Search for this index expression *\/$/;"	m	struct:WhereScan	file:
pIdxIter	src/server/sqlite3.c	/^  sqlite3_stmt *pIdxIter;         \/* Index iterator *\/$/;"	m	struct:RbuObjIter	file:
pIdxSelect	src/server/sqlite3.c	/^  sqlite3_stmt *pIdxSelect;$/;"	m	struct:Fts5Index	file:
pIdxWriter	src/server/sqlite3.c	/^  sqlite3_stmt *pIdxWriter;       \/* "INSERT ... %_idx VALUES(?,?,?,?)" *\/$/;"	m	struct:Fts5Index	file:
pIn	src/server/sqlite3.c	/^  void *pIn;                     \/* Argument to the thread *\/$/;"	m	struct:SQLiteThread	file:
pIn	src/server/sqlite3.c	/^  void *pIn;               \/* Argument to xTask *\/$/;"	m	struct:SQLiteThread	file:
pInJournal	src/server/sqlite3.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInSavepoint	src/server/sqlite3.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pIncr	src/server/sqlite3.c	/^  IncrMerger *pIncr;          \/* Incremental merger *\/$/;"	m	struct:PmaReader	file:
pIndex	src/server/sqlite3.c	/^      Index *pIndex;         \/* Index used, or NULL *\/$/;"	m	struct:WhereLoop::__anon212::__anon213	file:
pIndex	src/server/sqlite3.c	/^  Fts5Index *pIndex;              \/* Associated FTS5 index *\/$/;"	m	struct:Fts5VocabCursor	file:
pIndex	src/server/sqlite3.c	/^  Fts5Index *pIndex;              \/* Full-text index *\/$/;"	m	struct:Fts5Table	file:
pIndex	src/server/sqlite3.c	/^  Fts5Index *pIndex;              \/* Index that owns this iterator *\/$/;"	m	struct:Fts5Iter	file:
pIndex	src/server/sqlite3.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Expr	file:
pIndex	src/server/sqlite3.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Storage	file:
pIndex	src/server/sqlite3.c	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table	file:
pInfo	src/server/sqlite3.c	/^  sqlite3_rtree_query_info *pInfo;  \/* xGeom and xQueryFunc argument *\/$/;"	m	struct:RtreeConstraint	file:
pInitMutex	src/server/sqlite3.c	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config	file:
pInode	src/server/sqlite3.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	src/server/sqlite3.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInput	src/server/sqlite3.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInsert	src/server/sqlite3.c	/^  sqlite3_stmt *pInsert;          \/* Statement for INSERT operations *\/$/;"	m	struct:RbuObjIter	file:
pIter	src/server/sqlite3.c	/^  Fts5IndexIter *pIter;           \/* Iterator for this term *\/$/;"	m	struct:Fts5ExprTerm	file:
pIter	src/server/sqlite3.c	/^  Fts5IndexIter *pIter;           \/* Term\/rowid iterator object *\/$/;"	m	struct:Fts5VocabCursor	file:
pIter	src/server/sqlite3.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pKey	src/server/sqlite3.c	/^  const char *pKey;            \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
pKey	src/server/sqlite3.c	/^  void *pKey;               \/* Saved key that was cursor last known position *\/$/;"	m	struct:BtCursor	file:
pKey	src/server/sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
pKeyInfo	src/server/sqlite3.c	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::p4union	file:
pKeyInfo	src/server/sqlite3.c	/^  KeyInfo *pKeyInfo;              \/* How to compare records *\/$/;"	m	struct:VdbeSorter	file:
pKeyInfo	src/server/sqlite3.c	/^  KeyInfo *pKeyInfo;    \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor	file:
pKeyInfo	src/server/sqlite3.c	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord	file:
pKeyInfo	src/server/sqlite3.c	/^  struct KeyInfo *pKeyInfo; \/* Argument passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo	file:
pLast	src/server/sqlite3.c	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep	file:
pLast	src/server/sqlite3.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon203	typeref:struct:__anon203::MemBlockHdr	file:
pLast	src/server/sqlite3.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLeaf	src/server/sqlite3.c	/^  Fts5Data *pLeaf;                \/* Current leaf data *\/$/;"	m	struct:Fts5SegIter	file:
pLeft	src/server/sqlite3.c	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr	file:
pLeft	src/server/sqlite3.c	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr	file:
pLeft	src/server/sqlite3.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeftmost	src/server/sqlite3.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLerpValues_s	src/cgame/cg_local.h	/^typedef struct pLerpValues_s$/;"	s
pLerpValues_t	src/cgame/cg_local.h	/^} pLerpValues_t;$/;"	t	typeref:struct:pLerpValues_s
pLimit	src/server/sqlite3.c	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pLimit	src/server/sqlite3.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pList	src/server/sqlite3.c	/^    ExprList *pList;     \/* op = IN, EXISTS, SELECT, CASE, FUNCTION, BETWEEN *\/$/;"	m	union:Expr::__anon195	file:
pList	src/server/sqlite3.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	src/server/sqlite3.c	/^  SorterRecord *pList;            \/* Linked list of records *\/$/;"	m	struct:SorterList	file:
pList	src/server/sqlite3.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	src/server/sqlite3.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	src/server/sqlite3.c	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist	file:
pList	src/server/sqlite3.c	/^  char *pList;$/;"	m	struct:TokenDoclist	file:
pLock	src/server/sqlite3.c	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared	file:
pLogArg	src/server/sqlite3.c	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config	file:
pLoops	src/server/sqlite3.c	/^  WhereLoop *pLoops;        \/* List of all WhereLoop objects *\/$/;"	m	struct:WhereInfo	file:
pLruNext	src/server/sqlite3.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	src/server/sqlite3.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pMIBuffer	src/server/sqlite3.c	/^  MatchinfoBuffer *pMIBuffer;     \/* Buffer for matchinfo data *\/$/;"	m	struct:Fts3Cursor	file:
pMain	src/server/sqlite3.c	/^  rbu_file *pMain;                \/* Linked list of main db files *\/$/;"	m	struct:rbu_vfs	file:
pMainNext	src/server/sqlite3.c	/^  rbu_file *pMainNext;            \/* Next MAIN_DB file *\/$/;"	m	struct:rbu_file	file:
pMap	src/server/sqlite3.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMapRegion	src/server/sqlite3.c	/^  void *pMapRegion;                   \/* Memory mapped region *\/$/;"	m	struct:unixFile	file:
pMapRegion	src/server/sqlite3.c	/^  void *pMapRegion;             \/* Area memory mapped *\/$/;"	m	struct:winFile	file:
pMem	src/server/sqlite3.c	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::p4union	file:
pMem	src/server/sqlite3.c	/^  Mem *pMem;              \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context	file:
pMerger	src/server/sqlite3.c	/^  MergeEngine *pMerger;           \/* Merge engine thread reads data from *\/$/;"	m	struct:IncrMerger	file:
pMerger	src/server/sqlite3.c	/^  MergeEngine *pMerger;           \/* Or here, if bUseThreads==0 *\/$/;"	m	struct:VdbeSorter	file:
pMethod	src/server/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	src/server/sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethod	src/server/sqlite3.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethods	src/server/sqlite3.c	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	file:
pMethods	src/server/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pMmapFreelist	src/server/sqlite3.c	/^  PgHdr *pMmapFreelist;       \/* List of free mmap page headers (pDirty) *\/$/;"	m	struct:Pager	file:
pMod	src/server/sqlite3.c	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable	file:
pMod	src/server/sqlite3.c	/^  const sqlite3_tokenizer_module *pMod;$/;"	m	struct:Fts3tokTable	file:
pModule	src/server/sqlite3.c	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module	file:
pModule	src/server/sqlite3.c	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	file:
pModule	src/server/sqlite3.c	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer	file:
pModule	src/server/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pMoveType_t	src/cgame/cg_local.h	/^} pMoveType_t;$/;"	t	typeref:enum:__anon237
pMoveValues_t	src/cgame/cg_local.h	/^} pMoveValues_t;$/;"	t	typeref:struct:pMoveValues_u
pMoveValues_u	src/cgame/cg_local.h	/^typedef struct pMoveValues_u$/;"	s
pNC	src/server/sqlite3.c	/^    NameContext *pNC;                          \/* Naming context *\/$/;"	m	union:Walker::__anon201	file:
pName	src/server/sqlite3.c	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
pNear	src/server/sqlite3.c	/^  Fts5ExprNearset *pNear;         \/* For FTS5_STRING - cluster of phrases *\/$/;"	m	struct:Fts5ExprNode	file:
pNew	src/server/sqlite3.c	/^  WhereLoop *pNew;          \/* Template WhereLoop *\/$/;"	m	struct:WhereLoopBuilder	file:
pNewTable	src/server/sqlite3.c	/^  Table *pNewTable;         \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse	file:
pNewTrigger	src/server/sqlite3.c	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse	file:
pNext	src/server/sqlite3.c	/^    SorterRecord *pNext;          \/* Pointer to next record in list *\/$/;"	m	union:SorterRecord::__anon208	file:
pNext	src/server/sqlite3.c	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo	file:
pNext	src/server/sqlite3.c	/^  AuxData *pNext;                 \/* Next element in list *\/$/;"	m	struct:AuxData	file:
pNext	src/server/sqlite3.c	/^  BtCursor *pNext;          \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pNext	src/server/sqlite3.c	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock	file:
pNext	src/server/sqlite3.c	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared	file:
pNext	src/server/sqlite3.c	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree	file:
pNext	src/server/sqlite3.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	src/server/sqlite3.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	src/server/sqlite3.c	/^  Fts5Auxdata *pNext;             \/* Next object in linked list *\/$/;"	m	struct:Fts5Auxdata	file:
pNext	src/server/sqlite3.c	/^  Fts5Auxiliary *pNext;           \/* Next registered auxiliary function *\/$/;"	m	struct:Fts5Auxiliary	file:
pNext	src/server/sqlite3.c	/^  Fts5Cursor *pNext;              \/* Next cursor in Fts5Cursor.pCsr list *\/$/;"	m	struct:Fts5Cursor	file:
pNext	src/server/sqlite3.c	/^  Fts5TermsetEntry *pNext;$/;"	m	struct:Fts5TermsetEntry	file:
pNext	src/server/sqlite3.c	/^  Fts5TokenizerModule *pNext;     \/* Next registered tokenizer module *\/$/;"	m	struct:Fts5TokenizerModule	file:
pNext	src/server/sqlite3.c	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef	file:
pNext	src/server/sqlite3.c	/^  Index *pNext;            \/* The next index associated with the same table *\/$/;"	m	struct:Index	file:
pNext	src/server/sqlite3.c	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot	file:
pNext	src/server/sqlite3.c	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext	file:
pNext	src/server/sqlite3.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	src/server/sqlite3.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	src/server/sqlite3.c	/^  RbuUpdateStmt *pNext;$/;"	m	struct:RbuUpdateStmt	file:
pNext	src/server/sqlite3.c	/^  RtreeNode *pNext;           \/* Next node in this hash collision chain *\/$/;"	m	struct:RtreeNode	file:
pNext	src/server/sqlite3.c	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint	file:
pNext	src/server/sqlite3.c	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select	file:
pNext	src/server/sqlite3.c	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram	file:
pNext	src/server/sqlite3.c	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger	file:
pNext	src/server/sqlite3.c	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg	file:
pNext	src/server/sqlite3.c	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep	file:
pNext	src/server/sqlite3.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	src/server/sqlite3.c	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable	file:
pNext	src/server/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pNext	src/server/sqlite3.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	src/server/sqlite3.c	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	file:
pNext	src/server/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	src/server/sqlite3.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	src/server/sqlite3.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	src/server/sqlite3.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	src/server/sqlite3.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	src/server/sqlite3.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	src/server/sqlite3.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNext	src/server/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNextBlocked	src/server/sqlite3.c	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3	file:
pNextChunk	src/server/sqlite3.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextDocid	src/server/sqlite3.c	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist	file:
pNextFrom	src/server/sqlite3.c	/^  FKey *pNextFrom;  \/* Next FKey with the same in pFrom. Next parent of pFrom *\/$/;"	m	struct:FKey	file:
pNextId	src/server/sqlite3.c	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
pNextLeaf	src/server/sqlite3.c	/^  Fts5Data *pNextLeaf;            \/* Leaf page (iLeafPgno+1) *\/$/;"	m	struct:Fts5SegIter	file:
pNextLoop	src/server/sqlite3.c	/^  WhereLoop *pNextLoop; \/* Next WhereLoop object in the WhereClause *\/$/;"	m	struct:WhereLoop	file:
pNextTo	src/server/sqlite3.c	/^  FKey *pNextTo;    \/* Next with the same zTo. Next child of zTo. *\/$/;"	m	struct:FKey	file:
pNextZombie	src/server/sqlite3.c	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table	file:
pNode	src/server/sqlite3.c	/^  Fts5ExprNode *pNode;            \/* FTS5_STRING node this phrase is part of *\/$/;"	m	struct:Fts5ExprPhrase	file:
pOffset	src/server/sqlite3.c	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pOffset	src/server/sqlite3.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffsetList	src/server/sqlite3.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOldMethod	src/server/sqlite3.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOn	src/server/sqlite3.c	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pOrInfo	src/server/sqlite3.c	/^    WhereOrInfo *pOrInfo;   \/* Extra information if (eOperator & WO_OR)!=0 *\/$/;"	m	union:WhereTerm::__anon215	file:
pOrPoslist	src/server/sqlite3.c	/^  char *pOrPoslist;$/;"	m	struct:Fts3Phrase	file:
pOrSet	src/server/sqlite3.c	/^  WhereOrSet *pOrSet;       \/* Record best loops here, if not NULL *\/$/;"	m	struct:WhereLoopBuilder	file:
pOrderBy	src/server/sqlite3.c	/^  ExprList *pOrderBy;       \/* ORDER BY clause *\/$/;"	m	struct:WhereLoopBuilder	file:
pOrderBy	src/server/sqlite3.c	/^  ExprList *pOrderBy;       \/* The ORDER BY clause or NULL *\/$/;"	m	struct:WhereInfo	file:
pOrderBy	src/server/sqlite3.c	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select	file:
pOrderBy	src/server/sqlite3.c	/^  ExprList *pOrderBy;   \/* The ORDER BY (or GROUP BY clause) *\/$/;"	m	struct:SortCtx	file:
pOrderBy	src/server/sqlite3.c	/^  ExprList *pOrderBy;  \/* Key columns for SRT_Queue and SRT_DistQueue *\/$/;"	m	struct:SelectDest	file:
pOrigWC	src/server/sqlite3.c	/^  WhereClause *pOrigWC;      \/* Original, innermost WhereClause *\/$/;"	m	struct:WhereScan	file:
pOut	src/server/sqlite3.c	/^  Fts5Buffer *pOut;               \/* Output poslist *\/$/;"	m	struct:Fts5NearTrimmer	file:
pOut	src/server/sqlite3.c	/^  Mem *pOut;              \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context	file:
pOut	src/server/sqlite3.c	/^  void *pOut;                    \/* Result returned by the thread *\/$/;"	m	struct:SQLiteThread	file:
pOuter	src/server/sqlite3.c	/^  WhereClause *pOuter;     \/* Outer conjunction *\/$/;"	m	struct:WhereClause	file:
pOuter	src/server/sqlite3.c	/^  With *pOuter;                   \/* Containing WITH clause, or NULL *\/$/;"	m	struct:With	file:
pPCache	src/server/sqlite3.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPage	src/server/sqlite3.c	/^  sqlite3_pcache_page *pPage;    \/* Pcache object page handle *\/$/;"	m	struct:PgHdr	file:
pPage	src/server/sqlite3.c	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config	file:
pPage1	src/server/sqlite3.c	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared	file:
pPager	src/server/sqlite3.c	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr	file:
pPager	src/server/sqlite3.c	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared	file:
pPager	src/server/sqlite3.c	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk	file:
pParent	src/server/sqlite3.c	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr	file:
pParent	src/server/sqlite3.c	/^  RtreeNode *pParent;         \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	src/server/sqlite3.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	src/server/sqlite3.c	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;            \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;          \/* Parsing context used to create this Vdbe *\/$/;"	m	struct:Vdbe	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer	file:
pParse	src/server/sqlite3.c	/^  Parse *pParse;$/;"	m	struct:ValueNewStat4Ctx	file:
pPartIdxWhere	src/server/sqlite3.c	/^  Expr *pPartIdxWhere;     \/* WHERE clause for partial indices *\/$/;"	m	struct:Index	file:
pPayload	src/server/sqlite3.c	/^  u8 *pPayload;  \/* Pointer to the start of payload *\/$/;"	m	struct:CellInfo	file:
pPg	src/server/sqlite3.c	/^  DbPage *pPg;$/;"	m	struct:StatPage	file:
pPhrase	src/server/sqlite3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	src/server/sqlite3.c	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr	file:
pPhrase	src/server/sqlite3.c	/^  Fts5ExprPhrase *pPhrase;$/;"	m	struct:TokenCtx	file:
pPoslist	src/server/sqlite3.c	/^  Fts5Buffer *pPoslist;           \/* Pointer to current poslist *\/$/;"	m	struct:Fts5MatchPhrase	file:
pPrev	src/server/sqlite3.c	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree	file:
pPrev	src/server/sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pPrev	src/server/sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	src/server/sqlite3.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrevTo	src/server/sqlite3.c	/^  FKey *pPrevTo;    \/* Previous with the same zTo *\/$/;"	m	struct:FKey	file:
pPrior	src/server/sqlite3.c	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select	file:
pPrior	src/server/sqlite3.c	/^  VtabCtx *pPrior;    \/* Parent context (if any) *\/$/;"	m	struct:VtabCtx	file:
pProfileArg	src/server/sqlite3.c	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3	file:
pProgram	src/server/sqlite3.c	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::p4union	file:
pProgram	src/server/sqlite3.c	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe	file:
pProgram	src/server/sqlite3.c	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg	file:
pProgressArg	src/server/sqlite3.c	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3	file:
pPtr	src/server/sqlite3.c	/^  void *pPtr;                     \/* Pointer value *\/$/;"	m	struct:Fts5Auxdata	file:
pRank	src/server/sqlite3.c	/^  Fts5Auxiliary *pRank;           \/* Rank callback (or NULL) *\/$/;"	m	struct:Fts5Cursor	file:
pRankArgStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pRankArgStmt;     \/* Origin of objects in apRankArg[] *\/$/;"	m	struct:Fts5Cursor	file:
pRbu	src/server/sqlite3.c	/^  sqlite3rbu *pRbu;               \/* Pointer to rbu object (rbu target only) *\/$/;"	m	struct:rbu_file	file:
pRbuUpdate	src/server/sqlite3.c	/^  RbuUpdateStmt *pRbuUpdate;$/;"	m	struct:RbuObjIter	file:
pRbuVfs	src/server/sqlite3.c	/^  rbu_vfs *pRbuVfs;               \/* Pointer to the rbu_vfs object *\/$/;"	m	struct:rbu_file	file:
pRead	src/server/sqlite3.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pReadNode	src/server/sqlite3.c	/^  sqlite3_stmt *pReadNode;$/;"	m	struct:Rtree	file:
pReadParent	src/server/sqlite3.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadRowid	src/server/sqlite3.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReader	src/server/sqlite3.c	/^  PmaReader *pReader;             \/* Readr data from here after Rewind() *\/$/;"	m	struct:VdbeSorter	file:
pReader	src/server/sqlite3.c	/^  sqlite3_blob *pReader;          \/* RO incr-blob open on %_data table *\/$/;"	m	struct:Fts5Index	file:
pReal	src/server/sqlite3.c	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::p4union	file:
pReal	src/server/sqlite3.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:rbu_file	file:
pRealVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pRealVfs;          \/* Underlying VFS *\/$/;"	m	struct:rbu_vfs	file:
pRec	src/server/sqlite3.c	/^  UnpackedRecord *pRec;     \/* Probe for stat4 (if required) *\/$/;"	m	struct:WhereLoopBuilder	file:
pRef	src/server/sqlite3.c	/^  MemPage *pRef;          \/* Reference page *\/$/;"	m	struct:CellArray	file:
pReprepare	src/server/sqlite3.c	/^  Vdbe *pReprepare;         \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse	file:
pResult	src/server/sqlite3.c	/^  void *pResult;           \/* Result of xTask *\/$/;"	m	struct:SQLiteThread	file:
pResultSet	src/server/sqlite3.c	/^  ExprList *pResultSet;     \/* Result set. DISTINCT operates on these *\/$/;"	m	struct:WhereInfo	file:
pResultSet	src/server/sqlite3.c	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe	file:
pRight	src/server/sqlite3.c	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr	file:
pRight	src/server/sqlite3.c	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr	file:
pRight	src/server/sqlite3.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	src/server/sqlite3.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRollbackArg	src/server/sqlite3.c	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/$/;"	m	struct:sqlite3	file:
pRoot	src/server/sqlite3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRoot	src/server/sqlite3.c	/^  Fts5ExprNode *pRoot;$/;"	m	struct:Fts5Expr	file:
pRowSet	src/server/sqlite3.c	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:Mem::MemValue	file:
pS0	src/game/bg_lib.c	/^pS0     =  1.6666667163e-01, \/* 0x3e2aaaab *\/$/;"	v	file:
pS1	src/game/bg_lib.c	/^pS1     = -3.2556581497e-01, \/* 0xbea6b090 *\/$/;"	v	file:
pS2	src/game/bg_lib.c	/^pS2     =  2.0121252537e-01, \/* 0x3e4e0aa8 *\/$/;"	v	file:
pS3	src/game/bg_lib.c	/^pS3     = -4.0055535734e-02, \/* 0xbd241146 *\/$/;"	v	file:
pS4	src/game/bg_lib.c	/^pS4     =  7.9153501429e-04, \/* 0x3a4f7f04 *\/$/;"	v	file:
pS5	src/game/bg_lib.c	/^pS5     =  3.4793309169e-05, \/* 0x3811ef08 *\/$/;"	v	file:
pSavepoint	src/server/sqlite3.c	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3	file:
pScan	src/server/sqlite3.c	/^  Fts5HashEntry *pScan;           \/* Current ordered scan item *\/$/;"	m	struct:Fts5Hash	file:
pScanNext	src/server/sqlite3.c	/^  Fts5HashEntry *pScanNext;       \/* Next entry in sorted order *\/$/;"	m	struct:Fts5HashEntry	file:
pSchema	src/server/sqlite3.c	/^    Schema *pSchema;  \/* Schema to which this item is fixed *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSchema	src/server/sqlite3.c	/^  Schema *pSchema;         \/* Schema containing this index *\/$/;"	m	struct:Index	file:
pSchema	src/server/sqlite3.c	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger	file:
pSchema	src/server/sqlite3.c	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db	file:
pSchema	src/server/sqlite3.c	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table	file:
pSchema	src/server/sqlite3.c	/^  Schema *pSchema;    \/* Fix items to this schema *\/$/;"	m	struct:DbFixer	file:
pSchema	src/server/sqlite3.c	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared	file:
pScopyFrom	src/server/sqlite3.c	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:Mem	file:
pScratch	src/server/sqlite3.c	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config	file:
pScratchEnd	src/server/sqlite3.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchFree	src/server/sqlite3.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pSeg	src/server/sqlite3.c	/^  Fts5StructureSegment *pSeg;     \/* Segment to iterate through *\/$/;"	m	struct:Fts5SegIter	file:
pSegcsr	src/server/sqlite3.c	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pSegments	src/server/sqlite3.c	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table	file:
pSelect	src/server/sqlite3.c	/^    Select *pSelect;                \/* The definition of this CTE *\/$/;"	m	struct:With::Cte	file:
pSelect	src/server/sqlite3.c	/^    Select *pSelect;     \/* EP_xIsSelect and op = IN, EXISTS, SELECT *\/$/;"	m	union:Expr::__anon195	file:
pSelect	src/server/sqlite3.c	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSelect	src/server/sqlite3.c	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table	file:
pSelect	src/server/sqlite3.c	/^  Select *pSelect;     \/* SELECT statement or RHS of INSERT INTO SELECT ... *\/$/;"	m	struct:TriggerStep	file:
pSelect	src/server/sqlite3.c	/^  sqlite3_stmt *pSelect;          \/* Source data *\/$/;"	m	struct:RbuObjIter	file:
pSem	src/server/sqlite3.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSeqTab	src/server/sqlite3.c	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema	file:
pShm	src/server/sqlite3.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	src/server/sqlite3.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShmNode	src/server/sqlite3.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	src/server/sqlite3.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	src/server/sqlite3.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pSnapshot	src/server/sqlite3.c	/^  WalIndexHdr *pSnapshot;    \/* Start transaction here if not NULL *\/$/;"	m	struct:Wal	file:
pSortCsr	src/server/sqlite3.c	/^  Fts5Cursor *pSortCsr;           \/* Sort data from this cursor *\/$/;"	m	struct:Fts5Table	file:
pSorter	src/server/sqlite3.c	/^    VdbeSorter *pSorter;        \/* CURTYPE_SORTER. Sorter object *\/$/;"	m	union:VdbeCursor::__anon202	file:
pSorter	src/server/sqlite3.c	/^  Fts5Sorter *pSorter;            \/* Sorter for "ORDER BY rank" queries *\/$/;"	m	struct:Fts5Cursor	file:
pSorter	src/server/sqlite3.c	/^  VdbeSorter *pSorter;            \/* Sorter that owns this sub-task *\/$/;"	m	struct:SortSubtask	file:
pSpace	src/server/sqlite3.c	/^  u8 *pSpace;          \/* Available memory *\/$/;"	m	struct:ReusableSpace	file:
pSqllogArg	src/server/sqlite3.c	/^  void *pSqllogArg;$/;"	m	struct:Sqlite3Config	file:
pSrc	src/server/sqlite3.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	src/server/sqlite3.c	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select	file:
pSrc	src/server/sqlite3.c	/^  SrcList *pSrc;   \/* One particular FROM clause in a nested query *\/$/;"	m	struct:SrcCount	file:
pSrcCount	src/server/sqlite3.c	/^    struct SrcCount *pSrcCount;                \/* Counting column references *\/$/;"	m	union:Walker::__anon201	typeref:struct:Walker::__anon201::SrcCount	file:
pSrcDb	src/server/sqlite3.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcList	src/server/sqlite3.c	/^    SrcList *pSrcList;                         \/* FROM clause *\/$/;"	m	union:Walker::__anon201	file:
pSrcList	src/server/sqlite3.c	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext	file:
pStart	src/server/sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pStart	src/server/sqlite3.c	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside	file:
pStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Iterates through set of root pages *\/$/;"	m	struct:StatCursor	file:
pStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor	file:
pStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Statement holding lock on pIndex *\/$/;"	m	struct:Fts5VocabCursor	file:
pStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Statement used to read %_content *\/$/;"	m	struct:Fts5Cursor	file:
pStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStmt	src/server/sqlite3.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:Fts5Sorter	file:
pStorage	src/server/sqlite3.c	/^  Fts5Storage *pStorage;          \/* Document store *\/$/;"	m	struct:Fts5Table	file:
pStorage	src/server/sqlite3.c	/^  Fts5Storage *pStorage;$/;"	m	struct:Fts5InsertCtx	file:
pStress	src/server/sqlite3.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pStruct	src/server/sqlite3.c	/^  Fts5Structure *pStruct;         \/* Current db structure (or NULL) *\/$/;"	m	struct:Fts5Index	file:
pStruct	src/server/sqlite3.c	/^  Fts5Structure *pStruct;         \/* Database structure for this iterator *\/$/;"	m	struct:Fts5Iter	file:
pSynced	src/server/sqlite3.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pSynonym	src/server/sqlite3.c	/^  Fts5ExprTerm *pSynonym;         \/* Pointer to first in list of synonyms *\/$/;"	m	struct:Fts5ExprTerm	file:
pTab	src/server/sqlite3.c	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pTab	src/server/sqlite3.c	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item	file:
pTab	src/server/sqlite3.c	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr	file:
pTab	src/server/sqlite3.c	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo	file:
pTab	src/server/sqlite3.c	/^  Table *pTab;        \/* The Table object to which the virtual table belongs *\/$/;"	m	struct:VtabCtx	file:
pTabList	src/server/sqlite3.c	/^  SrcList *pTabList;        \/* List of tables in the join *\/$/;"	m	struct:WhereInfo	file:
pTabSchema	src/server/sqlite3.c	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger	file:
pTable	src/server/sqlite3.c	/^  Table *pTable;           \/* The SQL table being indexed *\/$/;"	m	struct:Index	file:
pTail	src/server/sqlite3.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTargetFd	src/server/sqlite3.c	/^  rbu_file *pTargetFd;            \/* File handle open on target db *\/$/;"	m	struct:sqlite3rbu	file:
pTask	src/server/sqlite3.c	/^  SortSubtask *pTask;             \/* Task that owns this merger *\/$/;"	m	struct:IncrMerger	file:
pTask	src/server/sqlite3.c	/^  SortSubtask *pTask;        \/* Used by this thread only *\/$/;"	m	struct:MergeEngine	file:
pTblIter	src/server/sqlite3.c	/^  sqlite3_stmt *pTblIter;         \/* Iterate through tables *\/$/;"	m	struct:RbuObjIter	file:
pTerm	src/server/sqlite3.c	/^  char *pTerm;$/;"	m	struct:Fts5TermsetEntry	file:
pTermset	src/server/sqlite3.c	/^  Fts5Termset *pTermset;$/;"	m	struct:Fts5IntegrityCtx	file:
pThread	src/server/sqlite3.c	/^  SQLiteThread *pThread;          \/* Background thread, if any *\/$/;"	m	struct:SortSubtask	file:
pTmpInsert	src/server/sqlite3.c	/^  sqlite3_stmt *pTmpInsert;       \/* Insert into rbu_tmp_$zDataTbl *\/$/;"	m	struct:RbuObjIter	file:
pTmpSpace	src/server/sqlite3.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTmpSpace	src/server/sqlite3.c	/^  u8 *pTmpSpace;        \/* Temp space sufficient to hold a single cell *\/$/;"	m	struct:BtShared	file:
pTok	src/server/sqlite3.c	/^  Fts5Tokenizer *pTok;$/;"	m	struct:Fts5Config	file:
pTok	src/server/sqlite3.c	/^  Fts5TokenizerModule *pTok;      \/* First in list of all tokenizer modules *\/$/;"	m	struct:Fts5Global	file:
pTok	src/server/sqlite3.c	/^  sqlite3_tokenizer *pTok;$/;"	m	struct:Fts3tokTable	file:
pTokApi	src/server/sqlite3.c	/^  fts5_tokenizer *pTokApi;$/;"	m	struct:Fts5Config	file:
pToken	src/server/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pToken	src/server/sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	src/server/sqlite3.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pTokenizer	src/server/sqlite3.c	/^  Fts5Tokenizer *pTokenizer;      \/* Parent tokenizer instance *\/$/;"	m	struct:PorterTokenizer	file:
pTokenizer	src/server/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor	file:
pTokenizer	src/server/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	src/server/sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table	file:
pToplevel	src/server/sqlite3.c	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse	file:
pTraceArg	src/server/sqlite3.c	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3	file:
pTree	src/server/sqlite3.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTrig	src/server/sqlite3.c	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep	file:
pTrigger	src/server/sqlite3.c	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg	file:
pTrigger	src/server/sqlite3.c	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table	file:
pTrigger	src/server/sqlite3.c	104590;"	d	file:
pTrigger	src/server/sqlite3.c	118164;"	d	file:
pTrigger	src/server/sqlite3.c	99975;"	d	file:
pTriggerPrg	src/server/sqlite3.c	/^  TriggerPrg *pTriggerPrg;  \/* Linked list of coded triggers *\/$/;"	m	struct:Parse	file:
pTriggerTab	src/server/sqlite3.c	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse	file:
pUnlockArg	src/server/sqlite3.c	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3	file:
pUnlockConnection	src/server/sqlite3.c	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3	file:
pUnpacked	src/server/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Space to unpack a record *\/$/;"	m	struct:SortSubtask	file:
pUnpacked	src/server/sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Used by VdbeSorterCompare() *\/$/;"	m	struct:VdbeSorter	file:
pUnused	src/server/sqlite3.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	src/server/sqlite3.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUpdate	src/server/sqlite3.c	/^  sqlite3_stmt *pUpdate;          \/* Last update statement (or NULL) *\/$/;"	m	struct:RbuUpdateStmt	file:
pUpdateArg	src/server/sqlite3.c	/^  void *pUpdateArg;$/;"	m	struct:sqlite3	file:
pUser	src/server/sqlite3.c	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
pUser	src/server/sqlite3.c	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pUser	src/server/sqlite3.c	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq	file:
pUser	src/server/sqlite3.h	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	src/server/sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUserData	src/server/sqlite3.c	/^  void *pUserData;                \/* User pointer passed to xCreate() *\/$/;"	m	struct:Fts5TokenizerModule	file:
pUserData	src/server/sqlite3.c	/^  void *pUserData;                \/* User-data pointer *\/$/;"	m	struct:Fts5Auxiliary	file:
pUserData	src/server/sqlite3.c	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef	file:
pUserData	src/server/sqlite3.c	/^  void *pUserData;$/;"	m	struct:FuncDestructor	file:
pUsing	src/server/sqlite3.c	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pVCur	src/server/sqlite3.c	/^    sqlite3_vtab_cursor *pVCur; \/* CURTYPE_VTAB.   Vtab cursor *\/$/;"	m	union:VdbeCursor::__anon202	file:
pVTable	src/server/sqlite3.c	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table	file:
pVTable	src/server/sqlite3.c	/^  VTable *pVTable;    \/* The virtual table being constructed *\/$/;"	m	struct:VtabCtx	file:
pVdbe	src/server/sqlite3.c	/^  Vdbe *pVdbe;            \/* The VM that owns this context *\/$/;"	m	struct:sqlite3_context	file:
pVdbe	src/server/sqlite3.c	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse	file:
pVdbe	src/server/sqlite3.c	/^  Vdbe *pVdbe;       \/* Attach the explanation to this Vdbe *\/$/;"	m	struct:Explain	file:
pVdbe	src/server/sqlite3.c	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe	file:
pVdbeBranchArg	src/server/sqlite3.c	/^  void *pVdbeBranchArg;                                     \/* 1st argument *\/$/;"	m	struct:Sqlite3Config	file:
pVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pVfs;                  \/* The VFS that created this unixFile *\/$/;"	m	struct:unixFile	file:
pVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:MemJournal	file:
pVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3	file:
pVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfs	src/server/sqlite3.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVtab	src/server/sqlite3.c	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::p4union	file:
pVtab	src/server/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable	file:
pVtab	src/server/sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	file:
pVtab	src/server/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pVtabCtx	src/server/sqlite3.c	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3	file:
pWC	src/server/sqlite3.c	/^  WhereClause *pWC;          \/* WhereClause currently being scanned *\/$/;"	m	struct:WhereScan	file:
pWC	src/server/sqlite3.c	/^  WhereClause *pWC;         \/* WHERE clause terms *\/$/;"	m	struct:WhereLoopBuilder	file:
pWC	src/server/sqlite3.c	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm	file:
pWInfo	src/server/sqlite3.c	/^  WhereInfo *pWInfo;        \/* Information about this WHERE *\/$/;"	m	struct:WhereLoopBuilder	file:
pWInfo	src/server/sqlite3.c	/^  WhereInfo *pWInfo;       \/* WHERE clause processing context *\/$/;"	m	struct:WhereClause	file:
pWLoop	src/server/sqlite3.c	/^  struct WhereLoop *pWLoop;  \/* The selected WhereLoop object *\/$/;"	m	struct:WhereLevel	typeref:struct:WhereLevel::WhereLoop	file:
pWal	src/server/sqlite3.c	/^  Wal *pWal;                   \/* The complete WAL information *\/$/;"	m	struct:WalWriter	file:
pWal	src/server/sqlite3.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWalArg	src/server/sqlite3.c	/^  void *pWalArg;$/;"	m	struct:sqlite3	file:
pWalFd	src/server/sqlite3.c	/^  rbu_file *pWalFd;               \/* Wal file descriptor for this main db *\/$/;"	m	struct:rbu_file	file:
pWalFd	src/server/sqlite3.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWhen	src/server/sqlite3.c	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger	file:
pWhere	src/server/sqlite3.c	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select	file:
pWhere	src/server/sqlite3.c	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep	file:
pWith	src/server/sqlite3.c	/^  With *pWith;              \/* Current WITH clause, or NULL *\/$/;"	m	struct:Parse	file:
pWith	src/server/sqlite3.c	/^  With *pWith;           \/* WITH clause attached to this select. Or NULL. *\/$/;"	m	struct:Select	file:
pWithToFree	src/server/sqlite3.c	/^  With *pWithToFree;        \/* Free this WITH object at the end of the parse *\/$/;"	m	struct:Parse	file:
pWriteNode	src/server/sqlite3.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteParent	src/server/sqlite3.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteRowid	src/server/sqlite3.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriter	src/server/sqlite3.c	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared	file:
pWriter	src/server/sqlite3.c	/^  sqlite3_stmt *pWriter;          \/* "INSERT ... %_data VALUES(?,?)" *\/$/;"	m	struct:Fts5Index	file:
pZombieTab	src/server/sqlite3.c	/^  Table *pZombieTab;        \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse	file:
p_cmdNumber	src/client/client.h	/^	int		p_cmdNumber;		\/\/ cl.cmdNumber when packet was sent$/;"	m	struct:__anon85
p_realtime	src/client/client.h	/^	int		p_realtime;			\/\/ cls.realtime when packet was sent$/;"	m	struct:__anon85
p_serverTime	src/client/client.h	/^	int		p_serverTime;		\/\/ usercmd->serverTime when packet was sent$/;"	m	struct:__anon85
pack	src/qcommon/files.c	/^	pack_t		*pack;		\/\/ only one of pack \/ dir will be non NULL$/;"	m	struct:searchpath_s	file:
pack	src/renderergl2/tr_extramath.c	/^	} pack;$/;"	m	union:f16_u	typeref:struct:f16_u::__anon5	file:
pack	src/renderergl2/tr_extramath.c	/^	} pack;$/;"	m	union:f32_u	typeref:struct:f32_u::__anon4	file:
pack	src/renderergl2/tr_vbo.c	/^	} pack;$/;"	m	union:pack10_u	typeref:struct:pack10_u::__anon1	file:
pack	src/renderergl2/tr_vbo.c	/^	} pack;$/;"	m	union:pack8_u	typeref:struct:pack8_u::__anon2	file:
pack10_u	src/renderergl2/tr_vbo.c	/^union pack10_u {$/;"	u	file:
pack8_u	src/renderergl2/tr_vbo.c	/^union pack8_u {$/;"	u	file:
pack_data	src/qcommon/packing.c	/^char *pack_data;$/;"	v
pack_float	src/qcommon/packing.c	/^int pack_float( float in ) {$/;"	f
pack_int	src/qcommon/packing.c	/^int pack_int( int in ) {$/;"	f
pack_max	src/qcommon/packing.c	/^int pack_max;$/;"	v
pack_s	src/qcommon/files.c	/^typedef struct pack_s {$/;"	s	file:
pack_start	src/qcommon/packing.c	/^void pack_start( char *data, int max ) {$/;"	f
pack_t	src/qcommon/files.c	/^} pack_t;$/;"	t	typeref:struct:pack_s	file:
pack_text	src/qcommon/packing.c	/^int pack_text( char *in, int size ) {$/;"	f
pack_text2	src/qcommon/packing.c	/^int pack_text2( char *in ) {$/;"	f
packed	src/tools/lcc/lburg/lburg.h	/^	int packed;		\/* packed external rule number *\/$/;"	m	struct:rule
packedColorDataSize	src/renderergl2/tr_local.h	/^	int packedColorDataSize;$/;"	m	struct:__anon60
packedColorDataType	src/renderergl2/tr_local.h	/^	GLenum packedColorDataType;$/;"	m	struct:__anon60
packedDepthStencil	src/renderergl2/tr_local.h	/^	qboolean packedDepthStencil;$/;"	m	struct:__anon60
packedDepthStencilBuffer	src/renderergl2/tr_fbo.h	/^	uint32_t        packedDepthStencilBuffer;$/;"	m	struct:FBO_s
packedDepthStencilFormat	src/renderergl2/tr_fbo.h	/^	int             packedDepthStencilFormat;$/;"	m	struct:FBO_s
packedNormalDataType	src/renderergl2/tr_local.h	/^	GLenum packedNormalDataType;$/;"	m	struct:__anon60
packedTexcoordDataSize	src/renderergl2/tr_local.h	/^	int packedTexcoordDataSize;$/;"	m	struct:__anon60
packedTexcoordDataType	src/renderergl2/tr_local.h	/^	GLenum packedTexcoordDataType;$/;"	m	struct:__anon60
packetQueue	src/qcommon/net_chan.c	/^packetQueue_t *packetQueue = NULL;$/;"	v
packetQueue_s	src/qcommon/net_chan.c	/^typedef struct packetQueue_s {$/;"	s	file:
packetQueue_t	src/qcommon/net_chan.c	/^} packetQueue_t;$/;"	t	typeref:struct:packetQueue_s	file:
pad	src/qcommon/q_shared.h	/^	byte	pad[2];$/;"	m	struct:cplane_s
padToSectorBoundary	src/server/sqlite3.c	/^  u8 padToSectorBoundary;    \/* Pad transactions out to the next sector *\/$/;"	m	struct:Wal	file:
padding1	src/server/sqlite3.c	/^  void *padding1;           \/* Make object size a multiple of 16 *\/$/;"	m	struct:BtCursor	file:
page	src/server/sqlite3.c	/^  sqlite3_pcache_page page;      \/* Base class. Must be first. pBuf & pExtra *\/$/;"	m	struct:PgHdr1	file:
pageFindSlot	src/server/sqlite3.c	/^static u8 *pageFindSlot(MemPage *pPg, int nByte, int *pRc){$/;"	f	file:
pageFreeArray	src/server/sqlite3.c	/^static int pageFreeArray($/;"	f	file:
pageHash	src/server/sqlite3.c	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr	file:
pageInJournal	src/server/sqlite3.c	/^static int pageInJournal(Pager *pPager, PgHdr *pPg){$/;"	f	file:
pageInsertArray	src/server/sqlite3.c	/^static int pageInsertArray($/;"	f	file:
pageReinit	src/server/sqlite3.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageSize	src/server/sqlite3.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
pageSize	src/server/sqlite3.c	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared	file:
pagerAcquireMapPage	src/server/sqlite3.c	/^static int pagerAcquireMapPage($/;"	f	file:
pagerAddPageToRollbackJournal	src/server/sqlite3.c	/^static SQLITE_NOINLINE int pagerAddPageToRollbackJournal(PgHdr *pPg){$/;"	f	file:
pagerBeginReadTransaction	src/server/sqlite3.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	src/server/sqlite3.c	44824;"	d	file:
pagerExclusiveLock	src/server/sqlite3.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerFixMaplimit	src/server/sqlite3.c	/^static void pagerFixMaplimit(Pager *pPager){$/;"	f	file:
pagerFreeMapHdrs	src/server/sqlite3.c	/^static void pagerFreeMapHdrs(Pager *pPager){$/;"	f	file:
pagerLockDb	src/server/sqlite3.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerOpenSavepoint	src/server/sqlite3.c	/^static SQLITE_NOINLINE int pagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f	file:
pagerOpenWal	src/server/sqlite3.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	src/server/sqlite3.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	src/server/sqlite3.c	44823;"	d	file:
pagerOpentemp	src/server/sqlite3.c	/^static int pagerOpentemp($/;"	f	file:
pagerPagecount	src/server/sqlite3.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPlaybackSavepoint	src/server/sqlite3.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerReleaseMapPage	src/server/sqlite3.c	/^static void pagerReleaseMapPage(PgHdr *pPg){$/;"	f	file:
pagerReportSize	src/server/sqlite3.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	src/server/sqlite3.c	46116;"	d	file:
pagerRollbackWal	src/server/sqlite3.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	src/server/sqlite3.c	44821;"	d	file:
pagerStress	src/server/sqlite3.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerSyncHotJournal	src/server/sqlite3.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerUndoCallback	src/server/sqlite3.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUnlockAndRollback	src/server/sqlite3.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockDb	src/server/sqlite3.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockIfUnused	src/server/sqlite3.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUseWal	src/server/sqlite3.c	/^static int pagerUseWal(Pager *pPager){$/;"	f	file:
pagerUseWal	src/server/sqlite3.c	44820;"	d	file:
pagerWalFrames	src/server/sqlite3.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	src/server/sqlite3.c	44822;"	d	file:
pagerWriteLargeSector	src/server/sqlite3.c	/^static SQLITE_NOINLINE int pagerWriteLargeSector(PgHdr *pPg){$/;"	f	file:
pager_cksum	src/server/sqlite3.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_datahash	src/server/sqlite3.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	src/server/sqlite3.c	45208;"	d	file:
pager_delmaster	src/server/sqlite3.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_end_transaction	src/server/sqlite3.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster, int bCommit){$/;"	f	file:
pager_error	src/server/sqlite3.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_incr_changecounter	src/server/sqlite3.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_open_journal	src/server/sqlite3.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_pagehash	src/server/sqlite3.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	src/server/sqlite3.c	45209;"	d	file:
pager_playback	src/server/sqlite3.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback_one_page	src/server/sqlite3.c	/^static int pager_playback_one_page($/;"	f	file:
pager_reset	src/server/sqlite3.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_set_pagehash	src/server/sqlite3.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	src/server/sqlite3.c	45210;"	d	file:
pager_truncate	src/server/sqlite3.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_unlock	src/server/sqlite3.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_wait_on_lock	src/server/sqlite3.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_write	src/server/sqlite3.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	src/server/sqlite3.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_pagelist	src/server/sqlite3.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
pain	src/game/g_local.h	/^  void              (*pain)( gentity_t *self, gentity_t *attacker, int damage );$/;"	m	struct:gentity_s
painBlendTarget	src/cgame/cg_local.h	/^  float         painBlendTarget;$/;"	m	struct:__anon249
painBlendValue	src/cgame/cg_local.h	/^  float         painBlendValue;$/;"	m	struct:__anon249
painDirection	src/cgame/cg_local.h	/^  int         painDirection;  \/\/ flip from 0 to 1$/;"	m	struct:__anon241
painSawFire	src/game/g_weapon.c	/^void painSawFire( gentity_t *ent )$/;"	f
painTime	src/cgame/cg_local.h	/^  int         painTime;$/;"	m	struct:__anon241
pain_debounce_time	src/game/g_local.h	/^  int               pain_debounce_time;$/;"	m	struct:gentity_s
paintOffset	src/ui/ui_shared.h	/^  int paintOffset;               \/\/$/;"	m	struct:editFieldDef_s
paintbuffer	src/client/snd_mix.c	/^static portable_samplepair_t paintbuffer[PAINTBUFFER_SIZE];$/;"	v	file:
pakBasename	src/qcommon/files.c	/^	char			pakBasename[MAX_OSPATH];	\/\/ pak0$/;"	m	struct:pack_s	file:
pakFilename	src/qcommon/files.c	/^	char			pakFilename[MAX_OSPATH];	\/\/ \/tremulous\/base\/pak0.pk3$/;"	m	struct:pack_s	file:
pakGamename	src/qcommon/files.c	/^	char			pakGamename[MAX_OSPATH];	\/\/ base$/;"	m	struct:pack_s	file:
pakPathname	src/qcommon/files.c	/^	char			pakPathname[MAX_OSPATH];	\/\/ \/tremulous\/baseq3$/;"	m	struct:pack_s	file:
paksort	src/qcommon/files.c	/^static int QDECL paksort( const void *a, const void *b ) {$/;"	f	file:
palette	src/renderercommon/tr_image_bmp.c	/^	unsigned char palette[256][4];$/;"	m	struct:__anon110	file:
palette	src/renderercommon/tr_image_pcx.c	/^	unsigned char	palette[48];$/;"	m	struct:__anon124	file:
palette_type	src/renderercommon/tr_image_pcx.c	/^	unsigned short	palette_type;$/;"	m	struct:__anon124	file:
param	src/ui/ui_shared.c	/^  int param;$/;"	m	struct:keywordHash_s	file:
parameters	src/tools/lcc/src/decl.c	/^static Symbol *parameters(Type fty) {$/;"	f	file:
parent	src/cgame/cg_local.h	/^  particleEjector_t *parent;$/;"	m	struct:particle_s
parent	src/cgame/cg_local.h	/^  particleSystem_t      *parent;$/;"	m	struct:particleEjector_s
parent	src/cgame/cg_local.h	/^  refEntity_t       parent; \/\/$/;"	m	struct:attachment_s
parent	src/cgame/cg_local.h	/^  trailSystem_t     *parent;$/;"	m	struct:trailBeam_s
parent	src/game/g_local.h	/^  gentity_t         *parent;$/;"	m	struct:gentity_s
parent	src/qcommon/qcommon.h	/^	struct	nodetype *left, *right, *parent; \/* tree structure *\/ $/;"	m	struct:nodetype	typeref:struct:nodetype::
parent	src/qcommon/vm_powerpc.c	/^	dest_instruction_t *parent;$/;"	m	struct:symbolic_jump	file:
parent	src/qcommon/vm_sparc.c	/^	struct dst_insn		*parent;$/;"	m	struct:jump_insn	typeref:struct:jump_insn::dst_insn	file:
parent	src/renderercommon/iqm.h	/^    int parent;$/;"	m	struct:iqmjoint
parent	src/renderercommon/iqm.h	/^    int parent;$/;"	m	struct:iqmpose
parent	src/renderergl1/tr_local.h	/^	struct mnode_s	*parent;$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
parent	src/renderergl2/tr_local.h	/^	struct mnode_s	*parent;$/;"	m	struct:mnode_s	typeref:struct:mnode_s::mnode_s
parent	src/ui/ui_shared.h	/^  void *parent;                  \/\/ menu owner$/;"	m	struct:itemDef_s
parentNode	src/game/g_local.h	/^  gentity_t         *parentNode;        \/\/ for creep and defence\/spawn dependencies$/;"	m	struct:gentity_s
parentVelFrac	src/cgame/cg_local.h	/^  float       parentVelFrac;$/;"	m	struct:pMoveValues_u
parentVelFracRandFrac	src/cgame/cg_local.h	/^  float       parentVelFracRandFrac;$/;"	m	struct:pMoveValues_u
parentWrite	src/server/sqlite3.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parentheses	src/qcommon/parse.c	/^  int parentheses;$/;"	m	struct:operator_s	file:
parentheses	src/qcommon/parse.c	/^  int parentheses;$/;"	m	struct:value_s	file:
parms	src/qcommon/parse.c	/^  token_t *parms;             \/\/define parameters$/;"	m	struct:define_s	file:
parms	src/renderergl1/tr_local.h	/^	fogParms_t	parms;$/;"	m	struct:__anon149
parms	src/renderergl2/tr_local.h	/^	fogParms_t	parms;$/;"	m	struct:__anon41
parseDateOrTime	src/server/sqlite3.c	/^static int parseDateOrTime($/;"	f	file:
parseEntities	src/client/client.h	/^	entityState_t	parseEntities[MAX_PARSE_ENTITIES];$/;"	m	struct:__anon86
parseEntitiesNum	src/client/client.h	/^	int				parseEntitiesNum;		\/\/ at the time of this snapshot$/;"	m	struct:__anon84
parseEntitiesNum	src/client/client.h	/^	int			parseEntitiesNum;	\/\/ index (not anded off) into cl_parse_entities[]$/;"	m	struct:__anon86
parseHhMmSs	src/server/sqlite3.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseIgnoreAddress	src/master/master.c	/^static qboolean parseIgnoreAddress( void )$/;"	f	file:
parseModifier	src/server/sqlite3.c	/^static int parseModifier(sqlite3_context *pCtx, const char *zMod, DateTime *p){$/;"	f	file:
parseTimezone	src/server/sqlite3.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	src/server/sqlite3.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
parseflags	src/tools/lcc/src/gen.c	/^void parseflags(int argc, char *argv[]) {$/;"	f
parserAddExprIdListTerm	src/server/sqlite3.c	/^  static ExprList *parserAddExprIdListTerm($/;"	f	file:
parserDoubleLinkSelect	src/server/sqlite3.c	/^  static void parserDoubleLinkSelect(Parse *pParse, Select *p){$/;"	f	file:
particle	src/cgame/cg_local.h	/^  struct particle_s *particle;$/;"	m	struct:attachment_s	typeref:struct:attachment_s::particle_s
particleEjector_s	src/cgame/cg_local.h	/^typedef struct particleEjector_s$/;"	s
particleEjector_t	src/cgame/cg_local.h	/^} particleEjector_t;$/;"	t	typeref:struct:particleEjector_s
particleEjectors	src/cgame/cg_particles.c	/^static particleEjector_t    particleEjectors[ MAX_PARTICLE_EJECTORS ];$/;"	v	file:
particleSystem_s	src/cgame/cg_local.h	/^typedef struct particleSystem_s$/;"	s
particleSystem_t	src/cgame/cg_local.h	/^} particleSystem_t;$/;"	t	typeref:struct:particleSystem_s
particleSystems	src/cgame/cg_particles.c	/^static particleSystem_t     particleSystems[ MAX_PARTICLE_SYSTEMS ];$/;"	v	file:
particleValid	src/cgame/cg_local.h	/^  qboolean          particleValid;$/;"	m	struct:attachment_s
particle_s	src/cgame/cg_local.h	/^typedef struct particle_s$/;"	s
particle_t	src/cgame/cg_local.h	/^} particle_t;$/;"	t	typeref:struct:particle_s
particles	src/cgame/cg_local.h	/^  baseParticle_t  *particles[ MAX_PARTICLES_PER_EJECTOR ];$/;"	m	struct:baseParticleEjector_s
particles	src/cgame/cg_particles.c	/^static particle_t           particles[ MAX_PARTICLES ];$/;"	v	file:
pass	src/qcommon/vm_x86.c	/^static	int	instruction, pass;$/;"	v	file:
passEntityNum	src/server/sv_world.c	/^	int			passEntityNum;$/;"	m	struct:__anon182	file:
passNumber	src/tools/asm/q3asm.c	/^int		passNumber;$/;"	v
patchCollide_s	src/qcommon/cm_patch.h	/^typedef struct patchCollide_s {$/;"	s
patchCollide_t	src/qcommon/cm_patch.h	/^} patchCollide_t;$/;"	t	typeref:struct:patchCollide_s
patchHeight	src/qcommon/qfiles.h	/^	int			patchHeight;$/;"	m	struct:__anon417
patchPlane_t	src/qcommon/cm_patch.h	/^} patchPlane_t;$/;"	t	typeref:struct:__anon486
patchWidth	src/qcommon/qfiles.h	/^	int			patchWidth;$/;"	m	struct:__anon417
path	src/qcommon/files.c	/^	char		path[MAX_OSPATH];$/;"	m	struct:__anon454	file:
path2list	src/tools/lcc/etc/lcc.c	/^static List path2list(const char *path) {$/;"	f	file:
pattern	src/tools/lcc/lburg/lburg.h	/^	Tree pattern;		\/* rule pattern *\/$/;"	m	struct:rule
patternCompare	src/server/sqlite3.c	/^static int patternCompare($/;"	f	file:
pausedTime	src/game/g_local.h	/^  int               pausedTime;$/;"	m	struct:__anon316
payloadSize	src/server/sqlite3.c	/^  u32 payloadSize;      \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor	file:
pc	src/qcommon/cm_local.h	/^	struct patchCollide_s	*pc;$/;"	m	struct:__anon438	typeref:struct:__anon438::patchCollide_s
pc	src/qcommon/vm_x86.c	/^static	int		pc = 0;$/;"	v	file:
pc	src/renderergl1/tr_local.h	/^	backEndCounters_t	pc;$/;"	m	struct:__anon162
pc	src/renderergl1/tr_local.h	/^	frontEndCounters_t		pc;$/;"	m	struct:__anon163
pc	src/renderergl2/tr_local.h	/^	backEndCounters_t	pc;$/;"	m	struct:__anon62
pc	src/renderergl2/tr_local.h	/^	frontEndCounters_t		pc;$/;"	m	struct:__anon63
pc	src/server/sqlite3.c	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame	file:
pc	src/server/sqlite3.c	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe	file:
pc_token_s	src/qcommon/q_shared.h	/^typedef struct pc_token_s$/;"	s
pc_token_t	src/qcommon/q_shared.h	/^} pc_token_t;$/;"	t	typeref:struct:pc_token_s
pcache1	src/server/sqlite3.c	42311;"	d	file:
pcache1Alloc	src/server/sqlite3.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1AllocPage	src/server/sqlite3.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache, int benignMalloc){$/;"	f	file:
pcache1Cachesize	src/server/sqlite3.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Create	src/server/sqlite3.c	/^static sqlite3_pcache *pcache1Create(int szPage, int szExtra, int bPurgeable){$/;"	f	file:
pcache1Destroy	src/server/sqlite3.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1EnforceMaxPage	src/server/sqlite3.c	/^static void pcache1EnforceMaxPage(PCache1 *pCache){$/;"	f	file:
pcache1EnterMutex	src/server/sqlite3.c	42317;"	d	file:
pcache1EnterMutex	src/server/sqlite3.c	42321;"	d	file:
pcache1Fetch	src/server/sqlite3.c	/^static sqlite3_pcache_page *pcache1Fetch($/;"	f	file:
pcache1FetchNoMutex	src/server/sqlite3.c	/^static PgHdr1 *pcache1FetchNoMutex($/;"	f	file:
pcache1FetchStage2	src/server/sqlite3.c	/^static SQLITE_NOINLINE PgHdr1 *pcache1FetchStage2($/;"	f	file:
pcache1FetchWithMutex	src/server/sqlite3.c	/^static PgHdr1 *pcache1FetchWithMutex($/;"	f	file:
pcache1Free	src/server/sqlite3.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1FreePage	src/server/sqlite3.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1Init	src/server/sqlite3.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1InitBulk	src/server/sqlite3.c	/^static int pcache1InitBulk(PCache1 *pCache){$/;"	f	file:
pcache1LeaveMutex	src/server/sqlite3.c	42318;"	d	file:
pcache1LeaveMutex	src/server/sqlite3.c	42322;"	d	file:
pcache1MemSize	src/server/sqlite3.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1Pagecount	src/server/sqlite3.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1PinPage	src/server/sqlite3.c	/^static PgHdr1 *pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1Rekey	src/server/sqlite3.c	/^static void pcache1Rekey($/;"	f	file:
pcache1RemoveFromHash	src/server/sqlite3.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage, int freeFlag){$/;"	f	file:
pcache1ResizeHash	src/server/sqlite3.c	/^static void pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1Shrink	src/server/sqlite3.c	/^static void pcache1Shrink(sqlite3_pcache *p){$/;"	f	file:
pcache1Shutdown	src/server/sqlite3.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Truncate	src/server/sqlite3.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1TruncateUnsafe	src/server/sqlite3.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1UnderMemoryPressure	src/server/sqlite3.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1Unpin	src/server/sqlite3.c	/^static void pcache1Unpin($/;"	f	file:
pcache1_g	src/server/sqlite3.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcache2	src/server/sqlite3.c	/^  sqlite3_pcache_methods2 pcache2;  \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config	file:
pcacheFetchFinishWithInit	src/server/sqlite3.c	/^static SQLITE_NOINLINE PgHdr *pcacheFetchFinishWithInit($/;"	f	file:
pcacheManageDirtyList	src/server/sqlite3.c	/^static void pcacheManageDirtyList(PgHdr *pPage, u8 addRemove){$/;"	f	file:
pcacheMergeDirtyList	src/server/sqlite3.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheSortDirtyList	src/server/sqlite3.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheUnpin	src/server/sqlite3.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pclass	src/ui/ui_local.h	/^    class_t     pclass;$/;"	m	union:__anon515::__anon516
pcount	src/qcommon/msg.c	/^int pcount[256];$/;"	v
pcx_t	src/renderercommon/tr_image_pcx.c	/^} pcx_t;$/;"	t	typeref:struct:__anon124	file:
pe	src/cgame/cg_local.h	/^  playerEntity_t        pe;$/;"	m	struct:centity_s
peektokens	src/tools/lcc/cpp/tokens.c	/^peektokens(Tokenrow *trp, char *str)$/;"	f
peer_address	src/master/master.c	/^char peer_address [128];$/;"	v
pending	src/client/cl_main.c	/^	qboolean pending;$/;"	m	struct:serverStatus_s	file:
pendingServerStatus	src/ui/ui_local.h	/^  pendingServerStatus_t pendingServerStatus;$/;"	m	struct:__anon518
pendingServerStatus_t	src/ui/ui_local.h	/^pendingServerStatus_t;$/;"	t	typeref:struct:__anon510
pendingServer_t	src/ui/ui_local.h	/^pendingServer_t;$/;"	t	typeref:struct:__anon509
percentAliensReady	src/cgame/cg_local.h	/^  float         percentAliensReady;     \/\/ Percentage of alien players ready$/;"	m	struct:__anon253
percentHumansReady	src/cgame/cg_local.h	/^  float         percentHumansReady;     \/\/ Percentage of human players ready$/;"	m	struct:__anon253
period	src/cgame/cg_local.h	/^  int     period;$/;"	m	struct:baseTrailJitter_s
permanent	src/qcommon/common.c	/^	int		permanent;$/;"	m	struct:__anon451	file:
pers	src/game/g_local.h	/^  clientPersistant_t  pers;$/;"	m	struct:gclient_s
persEnum_t	src/game/bg_public.h	/^} persEnum_t;$/;"	t	typeref:enum:__anon332
persistant	src/cgame/cg_local.h	/^	int			persistant[MAX_PERSISTANT];	\/\/ stats that aren't cleared on death$/;"	m	struct:__anon256
persistant	src/client/client.h	/^	int			persistant[MAX_PERSISTANT];	\/\/ stats that aren't cleared on death$/;"	m	struct:alternatePlayerState_s
persistant	src/qcommon/msg.c	/^	int			persistant[MAX_PERSISTANT];	\/\/ stats that aren't cleared on death$/;"	m	struct:alternatePlayerState_s	file:
persistant	src/qcommon/q_shared.h	/^	int			persistant[MAX_PERSISTANT];	\/\/ stats that aren't cleared on death$/;"	m	struct:playerState_s
pgidx	src/server/sqlite3.c	/^  Fts5Buffer pgidx;               \/* Buffer containing page-index *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	src/server/sqlite3.c	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr	file:
pgno	src/server/sqlite3.c	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage	file:
pgno	src/server/sqlite3.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5DlidxWriter	file:
pgno	src/server/sqlite3.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5PageWriter	file:
pgnoFirst	src/server/sqlite3.c	/^  int pgnoFirst;                  \/* First leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoLast	src/server/sqlite3.c	/^  int pgnoLast;                   \/* Last leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoRoot	src/server/sqlite3.c	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor	file:
pgnoRoot	src/server/sqlite3.c	/^  Pgno pgnoRoot;        \/* Root page of the open btree cursor *\/$/;"	m	struct:VdbeCursor	file:
pgsz	src/server/sqlite3.c	/^  int pgsz;                       \/* Approximate page size used in %_data *\/$/;"	m	struct:Fts5Config	file:
pgsz	src/server/sqlite3.c	/^  int pgsz;                       \/* Main database page size *\/$/;"	m	struct:VdbeSorter	file:
pgsz	src/server/sqlite3.c	/^  int pgsz;$/;"	m	struct:sqlite3rbu	file:
phase	src/renderergl1/tr_local.h	/^	float phase;$/;"	m	struct:__anon137
phase	src/renderergl2/tr_local.h	/^	float phase;$/;"	m	struct:__anon19
physicsBounce	src/game/g_local.h	/^  float             physicsBounce;  \/\/ 1.0 = continuous bounce, 0.0 = no bounce$/;"	m	struct:gentity_s
physicsObject	src/game/g_local.h	/^  qboolean          physicsObject;  \/\/ if true, it can be pushed by movers and fall off edges$/;"	m	struct:gentity_s
physicsRadius	src/cgame/cg_local.h	/^  int             physicsRadius;$/;"	m	struct:baseParticle_s
physicsTime	src/cgame/cg_local.h	/^  int           physicsTime;                        \/\/ either cg.snap->time or cg.nextSnap->time$/;"	m	struct:__anon249
pi	src/game/bg_lib.c	/^pi      =  3.1415925026e+00, \/* 0x40490fda *\/$/;"	v	file:
ping	src/cgame/cg_local.h	/^	int			ping;			\/\/ server to game info for scoreboard$/;"	m	struct:__anon256
ping	src/cgame/cg_local.h	/^  int           ping;$/;"	m	struct:__anon249
ping	src/cgame/cg_local.h	/^  int           ping;$/;"	m	struct:__anon258
ping	src/cgame/cg_local.h	/^  int       ping;$/;"	m	struct:__anon242
ping	src/cgame/cg_public.h	/^  int           ping;$/;"	m	struct:__anon228
ping	src/client/client.h	/^	int				ping;			\/\/ time from when cmdNum-1 was sent to time packet was reeceived$/;"	m	struct:__anon84
ping	src/client/client.h	/^	int			ping;			\/\/ server to game info for scoreboard$/;"	m	struct:alternatePlayerState_s
ping	src/client/client.h	/^	int			ping;$/;"	m	struct:__anon89
ping	src/client/client.h	/^  int           ping;$/;"	m	struct:__anon83
ping	src/qcommon/msg.c	/^	int			ping;			\/\/ server to game info for scoreboard$/;"	m	struct:alternatePlayerState_s	file:
ping	src/qcommon/q_shared.h	/^	int			ping;			\/\/ server to game info for scoreboard$/;"	m	struct:playerState_s
ping	src/server/server.h	/^	int				ping;$/;"	m	struct:client_s
pingList	src/ui/ui_local.h	/^  pinglist_t pingList[MAX_PINGREQUESTS];$/;"	m	struct:serverStatus_s
pingTime	src/server/server.h	/^	int			pingTime;			\/\/ time the challenge response was sent to client$/;"	m	struct:__anon187
pingUpdateSource	src/client/client.h	/^	int pingUpdateSource;		\/\/ source currently pinging or updating$/;"	m	struct:__anon90
ping_t	src/client/client.h	/^} ping_t;$/;"	t	typeref:struct:__anon88
pinglist_t	src/ui/ui_local.h	/^pinglist_t;$/;"	t	typeref:struct:__anon508
pings	src/ui/ui_local.h	/^  char pings[MAX_CLIENTS * 3];$/;"	m	struct:__anon511
pio2_hi	src/game/bg_lib.c	/^pio2_hi =  1.5707962513e+00, \/* 0x3fc90fda *\/$/;"	v	file:
pio2_lo	src/game/bg_lib.c	/^pio2_lo =  7.5497894159e-08, \/* 0x33a22168 *\/$/;"	v	file:
pipefile	src/qcommon/common.c	/^static fileHandle_t pipefile;$/;"	v	file:
pitch	src/qcommon/q_shared.h	/^  int pitch;        \/\/ width for copying$/;"	m	struct:__anon478
pitchAngle	src/cgame/cg_local.h	/^  float       pitchAngle;$/;"	m	struct:__anon235
pitching	src/cgame/cg_local.h	/^  qboolean    pitching;$/;"	m	struct:__anon235
pixel_data	src/sdl/sdl_icon.h	/^  unsigned char	 pixel_data[32 * 32 * 4 + 1];$/;"	m	struct:__anon378
pixel_size	src/renderercommon/tr_image_tga.c	/^	unsigned char	pixel_size, attributes;$/;"	m	struct:_TargaHeader	file:
plainColorShader	src/cgame/cg_local.h	/^  qhandle_t   plainColorShader;$/;"	m	struct:__anon251
plane	src/qcommon/cm_local.h	/^	cplane_t			*plane;$/;"	m	struct:__anon436
plane	src/qcommon/cm_local.h	/^	cplane_t	*plane;$/;"	m	struct:__anon434
plane	src/qcommon/cm_patch.h	/^	float	plane[4];$/;"	m	struct:__anon486
plane	src/qcommon/q_shared.h	/^	cplane_t	plane;		\/\/ surface normal at impact, transformed to world space$/;"	m	struct:__anon470
plane	src/renderergl1/tr_local.h	/^	cplane_t	*plane;$/;"	m	struct:mnode_s
plane	src/renderergl1/tr_local.h	/^	cplane_t	plane;$/;"	m	struct:__anon152
plane	src/renderergl2/tr_local.h	/^	cplane_t	*plane;$/;"	m	struct:mnode_s
plane	src/renderergl2/tr_local.h	/^	cplane_t        plane;$/;"	m	struct:cullinfo_s
planeNum	src/qcommon/cm_local.h	/^	int						planeNum;$/;"	m	struct:__anon436
planeNum	src/qcommon/qfiles.h	/^	int			planeNum;			\/\/ positive plane side faces out of the leaf$/;"	m	struct:__anon412
planeNum	src/qcommon/qfiles.h	/^	int			planeNum;$/;"	m	struct:__anon410
planes	src/qcommon/cm_local.h	/^	cplane_t	*planes;$/;"	m	struct:__anon440
planes	src/qcommon/cm_patch.c	/^static	patchPlane_t	planes[MAX_PATCH_PLANES];$/;"	v	file:
planes	src/qcommon/cm_patch.h	/^	patchPlane_t	*planes;$/;"	m	struct:patchCollide_s
planes	src/renderercommon/tr_image_bmp.c	/^	unsigned short planes;$/;"	m	struct:__anon110	file:
planes	src/renderergl1/tr_local.h	/^	cplane_t	*planes;$/;"	m	struct:__anon157
planes	src/renderergl2/tr_local.h	/^	cplane_t	*planes;$/;"	m	struct:__anon49
playCinematic	src/ui/ui_shared.h	/^  int ( *playCinematic )( const char *name, float x, float y, float w, float h );$/;"	m	struct:__anon506
playMap	src/game/g_playmap.h	/^  playMap_t playMap[ MAX_PLAYMAP_QUEUE_ENTRIES ];$/;"	m	struct:playMapQueue_s
playMapError	src/game/g_playmap.c	/^static const playMapError_t playMapError[ ] =$/;"	v	file:
playMapErrorCode_s	src/game/g_playmap.h	/^typedef enum playMapErrorCode_s$/;"	g
playMapErrorCode_t	src/game/g_playmap.h	/^} playMapErrorCode_t;$/;"	t	typeref:enum:playMapErrorCode_s
playMapError_s	src/game/g_playmap.h	/^typedef struct playMapError_s$/;"	s
playMapError_t	src/game/g_playmap.h	/^} playMapError_t;$/;"	t	typeref:struct:playMapError_s
playMapFlagDesc_s	src/game/g_playmap.h	/^typedef struct playMapFlagDesc_s$/;"	s
playMapFlagDesc_t	src/game/g_playmap.h	/^} playMapFlagDesc_t;$/;"	t	typeref:struct:playMapFlagDesc_s
playMapFlagList	src/game/g_playmap.c	/^static const playMapFlagDesc_t playMapFlagList[ ] =$/;"	v	file:
playMapFlag_t	src/game/g_playmap.h	/^} playMapFlag_t;$/;"	t	typeref:enum:__anon369
playMapPoolCache	src/game/g_playmap.c	/^static playMapPool_t playMapPoolCache;$/;"	v	file:
playMapPoolEntry_s	src/game/g_playmap.h	/^typedef struct playMapPoolEntry_s$/;"	s
playMapPoolEntry_t	src/game/g_playmap.h	/^} playMapPoolEntry_t;$/;"	t	typeref:struct:playMapPoolEntry_s
playMapPool_s	src/game/g_playmap.h	/^typedef struct playMapPool_s$/;"	s
playMapPool_t	src/game/g_playmap.h	/^} playMapPool_t;$/;"	t	typeref:struct:playMapPool_s
playMapQueue	src/game/g_playmap.c	/^static playMapQueue_t playMapQueue;$/;"	v	file:
playMapQueue_s	src/game/g_playmap.h	/^typedef struct playMapQueue_s$/;"	s
playMapQueue_t	src/game/g_playmap.h	/^} playMapQueue_t;$/;"	t	typeref:struct:playMapQueue_s
playMap_s	src/game/g_playmap.h	/^typedef struct playMap_s$/;"	s
playMap_t	src/game/g_playmap.h	/^} playMap_t;$/;"	t	typeref:struct:playMap_s
playerAnimNumber_t	src/game/bg_public.h	/^} playerAnimNumber_t;$/;"	t	typeref:enum:__anon341
playerCount	src/ui/ui_local.h	/^  int playerCount;$/;"	m	struct:__anon518
playerEntity_t	src/cgame/cg_local.h	/^} playerEntity_t;$/;"	t	typeref:struct:__anon241
playerIndex	src/ui/ui_local.h	/^  int playerIndex;$/;"	m	struct:__anon518
playerMaxs	src/game/g_client.c	/^static vec3_t playerMaxs = {15, 15, 32};$/;"	v	file:
playerMins	src/game/g_client.c	/^static vec3_t playerMins = {-15, -15, -24};$/;"	v	file:
playerModel	src/game/g_local.h	/^  char              *playerModel[ MAX_PLAYER_MODEL ];$/;"	m	struct:__anon316
playerModelCount	src/game/g_local.h	/^  int               playerModelCount;$/;"	m	struct:__anon316
playerNames	src/ui/ui_local.h	/^  char playerNames[MAX_CLIENTS][MAX_NAME_LENGTH];$/;"	m	struct:__anon518
playerNumber	src/ui/ui_local.h	/^  int playerNumber;$/;"	m	struct:__anon518
playerRefresh	src/ui/ui_local.h	/^  int playerRefresh;$/;"	m	struct:__anon518
playerStateFields	src/qcommon/msg.c	/^netField_t	playerStateFields[] = $/;"	v
playerState_s	src/qcommon/q_shared.h	/^typedef struct playerState_s {$/;"	s
playerState_t	src/qcommon/q_shared.h	/^} playerState_t;$/;"	t	typeref:struct:playerState_s
player_die	src/game/g_combat.c	/^void player_die( gentity_t *self, gentity_t *inflictor, gentity_t *attacker, int damage, int meansOfDeath )$/;"	f
playmapFlags	src/game/g_local.h	/^  int               playmapFlags;$/;"	m	struct:__anon316
playonwalls	src/client/cl_cin.c	/^	int					playonwalls;$/;"	m	struct:__anon100	file:
plist	src/tools/lcc/etc/lcc.c	/^static List plist;		\/* preprocessor flags *\/$/;"	v	file:
pm	src/game/bg_pmove.c	/^pmove_t     *pm;$/;"	v
pm_accelerate	src/game/bg_pmove.c	/^float pm_accelerate = 10.0f;$/;"	v
pm_duckScale	src/game/bg_pmove.c	/^float pm_duckScale = 0.25f;$/;"	v
pm_flags	src/cgame/cg_local.h	/^	int			pm_flags;		\/\/ ducked, jump_held, etc$/;"	m	struct:__anon256
pm_flags	src/client/client.h	/^	int			pm_flags;		\/\/ ducked, jump_held, etc$/;"	m	struct:alternatePlayerState_s
pm_flags	src/qcommon/msg.c	/^	int			pm_flags;		\/\/ ducked, jump_held, etc$/;"	m	struct:alternatePlayerState_s	file:
pm_flags	src/qcommon/q_shared.h	/^	int			pm_flags;		\/\/ ducked, jump_held, etc$/;"	m	struct:playerState_s
pm_flightfriction	src/game/bg_pmove.c	/^float pm_flightfriction = 6.0f;$/;"	v
pm_flyaccelerate	src/game/bg_pmove.c	/^float pm_flyaccelerate = 4.0f;$/;"	v
pm_friction	src/game/bg_pmove.c	/^float pm_friction = 6.0f;$/;"	v
pm_spectatorfriction	src/game/bg_pmove.c	/^float pm_spectatorfriction = 5.0f;$/;"	v
pm_stopspeed	src/game/bg_pmove.c	/^float pm_stopspeed = 100.0f;$/;"	v
pm_swimScale	src/game/bg_pmove.c	/^float pm_swimScale = 0.50f;$/;"	v
pm_time	src/cgame/cg_local.h	/^	int			pm_time;$/;"	m	struct:__anon256
pm_time	src/client/client.h	/^	int			pm_time;$/;"	m	struct:alternatePlayerState_s
pm_time	src/qcommon/msg.c	/^	int			pm_time;$/;"	m	struct:alternatePlayerState_s	file:
pm_time	src/qcommon/q_shared.h	/^	int			pm_time;$/;"	m	struct:playerState_s
pm_type	src/cgame/cg_local.h	/^	int			pm_type;$/;"	m	struct:__anon256
pm_type	src/client/client.h	/^	int			pm_type;$/;"	m	struct:alternatePlayerState_s
pm_type	src/qcommon/msg.c	/^	int			pm_type;$/;"	m	struct:alternatePlayerState_s	file:
pm_type	src/qcommon/q_shared.h	/^	int			pm_type;$/;"	m	struct:playerState_s
pm_wateraccelerate	src/game/bg_pmove.c	/^float pm_wateraccelerate = 4.0f;$/;"	v
pm_waterfriction	src/game/bg_pmove.c	/^float pm_waterfriction = 1.0f;$/;"	v
pmext	src/cgame/cg_local.h	/^  pmoveExt_t    pmext;$/;"	m	struct:__anon249
pmext	src/game/bg_public.h	/^  pmoveExt_t *pmext;$/;"	m	struct:pmove_s
pmext	src/game/g_local.h	/^  pmoveExt_t          pmext;$/;"	m	struct:gclient_s
pml	src/game/bg_pmove.c	/^pml_t       pml;$/;"	v
pml_t	src/game/bg_local.h	/^} pml_t;$/;"	t	typeref:struct:__anon324
pmoveExt_t	src/game/bg_public.h	/^} pmoveExt_t;$/;"	t	typeref:struct:__anon330
pmoveFixed	src/game/g_local.h	/^  qboolean            pmoveFixed;         \/\/$/;"	m	struct:__anon311
pmove_fixed	src/cgame/cg_main.c	/^vmCvar_t  pmove_fixed;$/;"	v
pmove_fixed	src/game/bg_public.h	/^  int           pmove_fixed;$/;"	m	struct:pmove_s
pmove_fixed	src/game/g_main.c	/^vmCvar_t  pmove_fixed;$/;"	v
pmove_framecount	src/cgame/cg_local.h	/^	int			pmove_framecount;	\/\/ FIXME: don't transmit over the network$/;"	m	struct:__anon256
pmove_framecount	src/client/client.h	/^	int			pmove_framecount;$/;"	m	struct:alternatePlayerState_s
pmove_framecount	src/qcommon/msg.c	/^	int			pmove_framecount;$/;"	m	struct:alternatePlayerState_s	file:
pmove_framecount	src/qcommon/q_shared.h	/^	int			pmove_framecount;$/;"	m	struct:playerState_s
pmove_msec	src/cgame/cg_main.c	/^vmCvar_t  pmove_msec;$/;"	v
pmove_msec	src/game/bg_public.h	/^  int           pmove_msec;$/;"	m	struct:pmove_s
pmove_msec	src/game/g_main.c	/^vmCvar_t  pmove_msec;$/;"	v
pmove_s	src/game/bg_public.h	/^typedef struct pmove_s$/;"	s
pmove_t	src/game/bg_public.h	/^} pmove_t;$/;"	t	typeref:struct:pmove_s
pmtype_t	src/game/bg_public.h	/^} pmtype_t;$/;"	t	typeref:enum:__anon328
pnByte	src/server/sqlite3.c	/^  int *pnByte;                    \/* Pointer to bytes counter *\/$/;"	m	struct:Fts5Hash	file:
pnBytesFreed	src/server/sqlite3.c	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3	file:
point	src/cgame/cg_local.h	/^  vec3_t      point;$/;"	m	struct:pMoveValues_u
point	src/tools/lcc/src/c.h	/^			int point;$/;"	m	struct:code::__anon291::__anon294
point	src/tools/lcc/src/c.h	/^		} point; $/;"	m	union:code::__anon291	typeref:struct:code::__anon291::__anon294
pointAgainstWorld	src/game/g_local.h	/^  qboolean          pointAgainstWorld;              \/\/ don't use the bbox for map collisions$/;"	m	struct:gentity_s
pointRandAngle	src/cgame/cg_local.h	/^  float       pointRandAngle;$/;"	m	struct:pMoveValues_u
pointToLineDistance	src/qcommon/q_math.c	/^float pointToLineDistance( const vec3_t p0, const vec3_t p1, const vec3_t p2 )$/;"	f
pointcontents	src/game/bg_public.h	/^  int           (*pointcontents)( const vec3_t point, int passEntityNum );$/;"	m	struct:pmove_s
pointer	src/tools/lcc/src/expr.c	/^Tree pointer(Tree p) {$/;"	f
pointersym	src/tools/lcc/src/types.c	/^static Symbol pointersym;$/;"	v	file:
points	src/qcommon/cm_patch.h	/^	vec3_t	points[MAX_GRID_SIZE][MAX_GRID_SIZE];	\/\/ [width][height]$/;"	m	struct:__anon488
points	src/renderergl1/tr_local.h	/^	float		points[1][VERTEXSIZE];	\/\/ variable sized$/;"	m	struct:__anon152
points	src/tools/lcc/src/c.h	/^	List points;$/;"	m	struct:__anon284
poisonCloud	src/game/g_weapon.c	/^void poisonCloud( gentity_t *ent )$/;"	f
poisonCloudPS	src/cgame/cg_local.h	/^  particleSystem_t  *poisonCloudPS;$/;"	m	struct:__anon249
poisonCloudPS	src/cgame/cg_local.h	/^  qhandle_t   poisonCloudPS;$/;"	m	struct:__anon251
poisonCloudedPS	src/cgame/cg_local.h	/^  particleSystem_t      *poisonCloudedPS;$/;"	m	struct:centity_s
poisonCloudedPS	src/cgame/cg_local.h	/^  particleSystem_t  *poisonCloudedPS;$/;"	m	struct:__anon249
poisonCloudedPS	src/cgame/cg_local.h	/^  qhandle_t   poisonCloudedPS;$/;"	m	struct:__anon251
poisonImmunityTime	src/game/g_local.h	/^  int                 poisonImmunityTime;$/;"	m	struct:gclient_s
poisonedTime	src/cgame/cg_local.h	/^  int           poisonedTime;$/;"	m	struct:__anon249
poly	src/cgame/cg_local.h	/^  poly_t            poly;$/;"	m	struct:markPoly_s
polyVert_t	src/renderercommon/tr_types.h	/^} polyVert_t;$/;"	t	typeref:struct:__anon112
polyVerts	src/renderergl1/tr_local.h	/^	polyVert_t	*polyVerts;\/\/[MAX_POLYVERTS];$/;"	m	struct:__anon177
polyVerts	src/renderergl2/tr_local.h	/^	polyVert_t	*polyVerts;\/\/[MAX_POLYVERTS];$/;"	m	struct:__anon79
poly_s	src/renderercommon/tr_types.h	/^typedef struct poly_s {$/;"	s
poly_t	src/renderercommon/tr_types.h	/^} poly_t;$/;"	t	typeref:struct:poly_s
polygonOffset	src/renderergl1/tr_local.h	/^	qboolean	polygonOffset;			\/\/ set for decals and other items that must be offset $/;"	m	struct:shader_s
polygonOffset	src/renderergl2/tr_local.h	/^	qboolean	polygonOffset;			\/\/ set for decals and other items that must be offset $/;"	m	struct:shader_s
polys	src/renderergl1/tr_local.h	/^	srfPoly_t	*polys;\/\/[MAX_POLYS];$/;"	m	struct:__anon177
polys	src/renderergl1/tr_local.h	/^	struct srfPoly_s	*polys;$/;"	m	struct:__anon147	typeref:struct:__anon147::srfPoly_s
polys	src/renderergl2/tr_local.h	/^	srfPoly_t	*polys;\/\/[MAX_POLYS];$/;"	m	struct:__anon79
polys	src/renderergl2/tr_local.h	/^	struct srfPoly_s	*polys;$/;"	m	struct:__anon39	typeref:struct:__anon39::srfPoly_s
poor	src/renderercommon/tr_font.c	/^} poor;$/;"	t	typeref:union:__anon105	file:
pop0	src/qcommon/vm_x86.c	/^static	int	oc0, oc1, pop0, pop1;$/;"	v	file:
pop1	src/qcommon/vm_x86.c	/^static	int	oc0, oc1, pop0, pop1;$/;"	v	file:
populateCellCache	src/server/sqlite3.c	/^static void populateCellCache(CellArray *p, int idx, int N){$/;"	f	file:
port	src/qcommon/qcommon.h	/^	unsigned short	port;$/;"	m	struct:__anon421
portable_samplepair_t	src/client/snd_local.h	/^} portable_samplepair_t;$/;"	t	typeref:struct:__anon92
portalPlane	src/renderergl1/tr_local.h	/^	cplane_t	portalPlane;		\/\/ clip anything behind this if mirroring$/;"	m	struct:__anon150
portalPlane	src/renderergl2/tr_local.h	/^	cplane_t	portalPlane;		\/\/ clip anything behind this if mirroring$/;"	m	struct:__anon43
portalRange	src/renderergl1/tr_local.h	/^	float		portalRange;			\/\/ distance to fog out at$/;"	m	struct:shader_s
portalRange	src/renderergl2/tr_local.h	/^	float		portalRange;			\/\/ distance to fog out at$/;"	m	struct:shader_s
porterClose	src/server/sqlite3.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterCreate	src/server/sqlite3.c	/^static int porterCreate($/;"	f	file:
porterDestroy	src/server/sqlite3.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterIdChar	src/server/sqlite3.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterNext	src/server/sqlite3.c	/^static int porterNext($/;"	f	file:
porterOpen	src/server/sqlite3.c	/^static int porterOpen($/;"	f	file:
porterTokenizerModule	src/server/sqlite3.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porter_stemmer	src/server/sqlite3.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_tokenizer	src/server/sqlite3.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	src/server/sqlite3.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer_cursor	src/server/sqlite3.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	src/server/sqlite3.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
pos	src/cgame/cg_local.h	/^	trajectory_t	pos;	\/\/ for calculating position$/;"	m	struct:__anon257
pos	src/client/client.h	/^	trajectory_t	pos;	\/\/ for calculating position$/;"	m	struct:alternateEntityState_s
pos	src/client/snd_codec.h	/^	int pos;$/;"	m	struct:snd_stream_s
pos	src/qcommon/files.c	/^	unsigned long			pos;		\/\/ file info position in zip$/;"	m	struct:fileInPack_s	file:
pos	src/qcommon/q_shared.h	/^	trajectory_t	pos;	\/\/ for calculating position$/;"	m	struct:entityState_s
pos	src/ui/ui_shared.h	/^  int pos;$/;"	m	struct:columnInfo_s
pos1	src/game/g_local.h	/^  vec3_t            pos1, pos2;$/;"	m	struct:gentity_s
pos2	src/game/g_local.h	/^  vec3_t            pos1, pos2;$/;"	m	struct:gentity_s
poseMats	src/renderergl1/tr_local.h	/^	float		*poseMats;$/;"	m	struct:__anon154
poseMats	src/renderergl2/tr_local.h	/^	float		*poseMats;$/;"	m	struct:__anon46
position	src/cgame/cg_local.h	/^  vec3_t                  position;$/;"	m	struct:trailBeamNode_s
positions	src/renderergl1/tr_local.h	/^	float		*positions;$/;"	m	struct:__anon154
positions	src/renderergl2/tr_local.h	/^	float		*positions;$/;"	m	struct:__anon46
posixOpen	src/server/sqlite3.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixUnlock	src/server/sqlite3.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
poslist	src/server/sqlite3.c	/^  Fts5Buffer poslist;             \/* Buffer containing current poslist *\/$/;"	m	struct:Fts5Iter	file:
poslist	src/server/sqlite3.c	/^  Fts5Buffer poslist;             \/* Current position list *\/$/;"	m	struct:Fts5ExprPhrase	file:
postCommand	src/game/g_maprotation.c	/^  char  postCommand[ MAX_STRING_CHARS ];$/;"	m	struct:map_s	file:
postProcessCommand_t	src/renderergl2/tr_local.h	/^} postProcessCommand_t;$/;"	t	typeref:struct:__anon77
postfix	src/tools/lcc/src/expr.c	/^static Tree postfix(Tree p) {$/;"	f	file:
pouncePayload	src/game/bg_public.h	/^  int    pouncePayload;$/;"	m	struct:__anon330
pow	src/game/bg_lib.c	/^float pow( float x, float y )$/;"	f
powN	src/game/bg_lib.c	/^static double powN( double base, int exp )$/;"	f	file:
powerSource	src/game/g_local.h	/^  buildable_t  powerSource;$/;"	m	struct:__anon315
powerValue	src/game/g_local.h	/^  int          powerValue;$/;"	m	struct:__anon315
powered	src/game/g_local.h	/^  qboolean          powered;            \/\/ for human buildables$/;"	m	struct:gentity_s
powerpc_iname	src/qcommon/vm_powerpc_asm.h	/^typedef enum powerpc_iname {$/;"	g
powerpc_iname_t	src/qcommon/vm_powerpc_asm.h	/^} powerpc_iname_t;$/;"	t	typeref:enum:powerpc_iname
powerpc_opcode	src/qcommon/vm_powerpc_asm.c	/^struct powerpc_opcode$/;"	s	file:
powerpc_opcodes	src/qcommon/vm_powerpc_asm.c	/^static const struct powerpc_opcode powerpc_opcodes[] = {$/;"	v	typeref:struct:powerpc_opcode	file:
powerpc_opcodes	src/qcommon/vm_powerpc_asm.c	/^static const struct powerpc_opcode powerpc_opcodes[];$/;"	v	typeref:struct:powerpc_opcode	file:
powerpc_operand	src/qcommon/vm_powerpc_asm.c	/^struct powerpc_operand$/;"	s	file:
powerpc_operands	src/qcommon/vm_powerpc_asm.c	/^static const struct powerpc_operand powerpc_operands[] =$/;"	v	typeref:struct:powerpc_operand	file:
powerpc_operands	src/qcommon/vm_powerpc_asm.c	/^static const struct powerpc_operand powerpc_operands[];$/;"	v	typeref:struct:powerpc_operand	file:
powerupActive	src/cgame/cg_local.h	/^  int           powerupActive;$/;"	m	struct:__anon249
powerupTime	src/cgame/cg_local.h	/^  int           powerupTime;$/;"	m	struct:__anon249
ppNextElem	src/server/sqlite3.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
ppRec	src/server/sqlite3.c	/^  UnpackedRecord **ppRec;$/;"	m	struct:ValueNewStat4Ctx	file:
ppc_cpu_t	src/qcommon/vm_powerpc_asm.c	57;"	d	file:
ppc_instruction_t	src/qcommon/vm_powerpc_asm.h	/^typedef uint32_t ppc_instruction_t;$/;"	t
ppercent	src/tools/lcc/lburg/gram.c	/^static int ppercent = 0;$/;"	v	file:
ppnumber	src/tools/lcc/src/lex.c	/^static void ppnumber(char *which) {$/;"	f	file:
pragma	src/tools/lcc/src/input.c	/^static void pragma(void) {$/;"	f	file:
prec	src/tools/lcc/src/expr.c	/^static char prec[] = {$/;"	v	file:
predictableEvents	src/cgame/cg_local.h	/^  int           predictableEvents[MAX_PREDICTED_EVENTS];$/;"	m	struct:__anon249
predictedError	src/cgame/cg_local.h	/^  vec3_t        predictedError;$/;"	m	struct:__anon249
predictedErrorTime	src/cgame/cg_local.h	/^  int           predictedErrorTime;$/;"	m	struct:__anon249
predictedPlayerEntity	src/cgame/cg_local.h	/^  centity_t     predictedPlayerEntity;$/;"	m	struct:__anon249
predictedPlayerState	src/cgame/cg_local.h	/^  playerState_t predictedPlayerState;$/;"	m	struct:__anon249
prefix	src/server/sqlite3.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prefix	src/tools/lcc/lburg/lburg.c	/^static char *prefix = "";$/;"	v	file:
prelabel	src/tools/lcc/src/gen.c	/^static void prelabel(Node p) {$/;"	f	file:
prepare	src/server/sqlite3.c	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16	src/server/sqlite3.c	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16_v2	src/server/sqlite3.c	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepareAndCollectError	src/server/sqlite3.c	/^static int prepareAndCollectError($/;"	f	file:
prepareFreeAndCollectError	src/server/sqlite3.c	/^static int prepareFreeAndCollectError($/;"	f	file:
prepare_v2	src/server/sqlite3.c	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prereq	src/server/sqlite3.c	/^  Bitmask prereq;       \/* Bitmask of other loops that must run first *\/$/;"	m	struct:WhereLoop	file:
prereq	src/server/sqlite3.c	/^  Bitmask prereq;     \/* Prerequisites *\/$/;"	m	struct:WhereOrCost	file:
prereqAll	src/server/sqlite3.c	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm	file:
prereqRight	src/server/sqlite3.c	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm	file:
prev	src/cgame/cg_local.h	/^  struct trailBeamNode_s  *prev;$/;"	m	struct:trailBeamNode_s	typeref:struct:trailBeamNode_s::trailBeamNode_s
prev	src/game/bg_alloc.c	/^  struct freeMemNode_s *prev, *next;$/;"	m	struct:freeMemNode_s	typeref:struct:freeMemNode_s::freeMemNode_s	file:
prev	src/qcommon/common.c	/^	struct memblock_s       *next, *prev;$/;"	m	struct:memblock_s	typeref:struct:memblock_s::	file:
prev	src/qcommon/parse.c	/^  struct operator_s *prev, *next;$/;"	m	struct:operator_s	typeref:struct:operator_s::operator_s	file:
prev	src/qcommon/parse.c	/^  struct value_s *prev, *next;$/;"	m	struct:value_s	typeref:struct:value_s::value_s	file:
prev	src/qcommon/q_shared.h	/^	cvar_t *prev;$/;"	m	struct:cvar_s
prev	src/qcommon/qcommon.h	/^	struct	nodetype *next, *prev; \/* doubly-linked list *\/$/;"	m	struct:nodetype	typeref:struct:nodetype::
prev	src/server/server.h	/^	leakyBucket_t *prev, *next;$/;"	m	struct:leakyBucket_s
prev	src/server/sqlite3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon204::__anon206	file:
prev	src/server/sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
prev	src/server/sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
prev	src/server/sqlite3.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prev	src/tools/lcc/src/c.h	/^	Code prev, next;$/;"	m	struct:code
prev	src/tools/lcc/src/config.h	/^	Node prev, next;$/;"	m	struct:__anon274
prevMark	src/cgame/cg_local.h	/^  struct markPoly_s *prevMark, *nextMark;$/;"	m	struct:markPoly_s	typeref:struct:markPoly_s::markPoly_s
prevSize	src/server/sqlite3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon204::__anon205	file:
prev_pointer	src/master/servers.c	/^static server_t** prev_pointer = NULL;$/;"	v	file:
previewMovie	src/ui/ui_local.h	/^  int previewMovie;$/;"	m	struct:__anon518
previous	src/tools/lcc/src/sym.c	/^	Table previous;$/;"	m	struct:table	file:
previousCmdAngles	src/game/g_local.h	/^  int                 previousCmdAngles[3];$/;"	m	struct:__anon311
previousCmdAnglesTime	src/game/g_local.h	/^  int                 previousCmdAnglesTime;$/;"	m	struct:__anon311
previousEvent	src/cgame/cg_local.h	/^  int                   previousEvent;$/;"	m	struct:centity_s
previousFrameAngles	src/game/bg_public.h	/^  vec3_t previousFrameAngles;$/;"	m	struct:__anon330
previousTime	src/game/g_local.h	/^  int               previousTime;                 \/\/ so movers can back up when blocked$/;"	m	struct:__anon316
previousUpdateAngles	src/game/bg_public.h	/^  vec3_t previousUpdateAngles;$/;"	m	struct:__anon330
previous_origin	src/game/bg_local.h	/^  vec3_t    previous_origin;$/;"	m	struct:__anon324
previous_velocity	src/game/bg_local.h	/^  vec3_t    previous_velocity;$/;"	m	struct:__anon324
previous_waterlevel	src/game/bg_local.h	/^  int       previous_waterlevel;$/;"	m	struct:__anon324
prevuse	src/tools/lcc/src/config.h	/^	Node prevuse;$/;"	m	struct:__anon274
prhideset	src/tools/lcc/cpp/hideset.c	/^prhideset(int hs)$/;"	f
pri	src/tools/lcc/cpp/eval.c	/^	char	pri;$/;"	m	struct:pri	file:
pri	src/tools/lcc/cpp/eval.c	/^struct pri {$/;"	s	file:
price	src/game/bg_public.h	/^  int       price;$/;"	m	struct:__anon355
price	src/game/bg_public.h	/^  int       price;$/;"	m	struct:__anon356
primary	src/tools/lcc/src/expr.c	/^static Tree primary(void) {$/;"	f	file:
primaryVersion	src/qcommon/files.c	/^	struct pack_s	*primaryVersion;$/;"	m	struct:pack_s	typeref:struct:pack_s::pack_s	file:
print	src/client/cl_main.c	/^	qboolean print;$/;"	m	struct:serverStatus_s	file:
print	src/tools/lcc/lburg/lburg.c	/^static void print(char *fmt, ...) {$/;"	f	file:
print	src/tools/lcc/src/output.c	/^void print(const char *fmt, ...) {$/;"	f
printParm_t	src/qcommon/q_shared.h	/^} printParm_t;$/;"	t	typeref:enum:__anon459
print_list	GNUmakefile	/^print_list=@for i in $(1); \\$/;"	m
print_pager_state	src/server/sqlite3.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
print_wrapped	GNUmakefile	/^  print_wrapped=$(print_list)$/;"	m
print_wrapped	GNUmakefile	/^  print_wrapped=@echo $(1) | fmt -w $(TERM_COLUMNS) | sed -e "s\/^\\(.*\\)$$\/    \\1\/"$/;"	m
printdag	src/tools/lcc/src/dag.c	/^void printdag(Node p, int fd) {$/;"	f
printdag1	src/tools/lcc/src/dag.c	/^static void printdag1(Node p, int fd, int lev) {$/;"	f	file:
printdecl	src/tools/lcc/src/types.c	/^void printdecl(Symbol p, Type ty) {$/;"	f
printed	src/qcommon/common.c	/^	byte printed;$/;"	m	struct:hunkblock_s	file:
printed	src/tools/lcc/src/c.h	/^	unsigned printed:1;$/;"	m	struct:__anon282
printed	src/tools/lcc/src/tree.c	/^	int printed;$/;"	m	struct:nodeid	file:
printed	src/tools/lcc/src/tree.c	/^int *printed(int id) {$/;"	f
printfFlags	src/server/sqlite3.c	/^  u8   printfFlags;    \/* SQLITE_PRINTF flags below *\/$/;"	m	struct:StrAccum	file:
printfFunc	src/server/sqlite3.c	/^static void printfFunc($/;"	f	file:
printnode	src/tools/lcc/src/dag.c	/^static void printnode(Node p, int fd, int lev) {$/;"	f	file:
printproto	src/tools/lcc/src/types.c	/^void printproto(Symbol p, Symbol callee[]) {$/;"	f
printtoken	src/tools/lcc/src/error.c	/^static void printtoken(void) {$/;"	f	file:
printtree	src/tools/lcc/src/tree.c	/^void printtree(Tree p, int fd) {$/;"	f
printtree1	src/tools/lcc/src/tree.c	/^static void printtree1(Tree p, int fd, int lev) {$/;"	f	file:
printtype	src/tools/lcc/src/types.c	/^void printtype(Type ty, int fd) {$/;"	f
priority	src/client/snd_openal.c	/^	alSrcPriority_t	priority;		\/\/ Priority$/;"	m	struct:src_s	file:
priority	src/qcommon/parse.c	/^  int priority;$/;"	m	struct:operator_s	file:
priority	src/tools/lcc/cpp/eval.c	/^} priority[] = {$/;"	v	typeref:struct:pri
probingCG	src/client/cl_cgame.c	/^static qboolean probingCG = qfalse;$/;"	v	file:
probingUI	src/client/cl_ui.c	/^static qboolean probingUI = qfalse;$/;"	v	file:
process	src/tools/lcc/cpp/cpp.c	/^process(Tokenrow *trp)$/;"	f
process	src/tools/lcc/src/profio.c	/^int process(char *file) {$/;"	f
processedSnapshotNum	src/cgame/cg_local.h	/^  int           processedSnapshotNum;   \/\/ the number of snapshots cgame has requested$/;"	m	struct:__anon253
prof_init	src/tools/lcc/src/prof.c	/^void prof_init(int argc, char *argv[]) {$/;"	f
profile	src/server/sqlite3.c	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	file:
profileCount	src/qcommon/vm_local.h	/^	int		profileCount;$/;"	m	struct:vmSymbol_s
progbeg	src/tools/lcc/src/bytecode.c	/^static void I(progbeg)(int argc, char *argv[]) {}$/;"	f	file:
progbeg	src/tools/lcc/src/c.h	/^void (*progbeg)(int argc, char *argv[]);$/;"	m	struct:interface
progbeg	src/tools/lcc/src/null.c	/^static void I(progbeg)(int argc, char *argv[]) {}$/;"	f	file:
progbeg	src/tools/lcc/src/symbolic.c	/^static void I(progbeg)(int argc, char *argv[]) {$/;"	f	file:
progend	src/tools/lcc/src/bytecode.c	/^static void I(progend)(void) {}$/;"	f	file:
progend	src/tools/lcc/src/c.h	/^void (*progend)(void);$/;"	m	struct:interface
progend	src/tools/lcc/src/null.c	/^static void I(progend)(void) {}$/;"	f	file:
progend	src/tools/lcc/src/symbolic.c	/^static void I(progend)(void) {$/;"	f	file:
progname	src/tools/lcc/etc/lcc.c	/^static char *progname;$/;"	v	file:
program	src/renderergl2/tr_local.h	/^	GLhandleARB     program;$/;"	m	struct:shaderProgram_s
program	src/tools/lcc/src/decl.c	/^void program(void) {$/;"	f
programStack	src/qcommon/vm_local.h	/^    int			programStack;		\/\/ the vm may be recursively entered$/;"	m	struct:vm_s
progress_handler	src/server/sqlite3.c	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
projection	src/renderergl2/tr_local.h	/^	mat4_t        projection;$/;"	m	struct:__anon57
projection2D	src/renderergl1/tr_local.h	/^	qboolean	projection2D;	\/\/ if qtrue, drawstretchpic doesn't need to change modes$/;"	m	struct:__anon162
projection2D	src/renderergl2/tr_local.h	/^	qboolean	projection2D;	\/\/ if qtrue, drawstretchpic doesn't need to change modes$/;"	m	struct:__anon62
projectionMatrix	src/renderergl1/tr_local.h	/^	float		projectionMatrix[16];$/;"	m	struct:__anon150
projectionMatrix	src/renderergl2/tr_local.h	/^	float		projectionMatrix[16];$/;"	m	struct:__anon43
projectionShadowShader	src/renderergl1/tr_local.h	/^	shader_t				*projectionShadowShader;$/;"	m	struct:__anon163
projectionShadowShader	src/renderergl2/tr_local.h	/^	shader_t				*projectionShadowShader;$/;"	m	struct:__anon63
promote	src/tools/lcc/src/types.c	/^Type promote(Type ty) {$/;"	f
proto	src/tools/lcc/src/c.h	/^			Type *proto;$/;"	m	struct:type::__anon306::__anon307
protocol	src/master/servers.h	/^	unsigned int protocol;$/;"	m	struct:server_s
proxyBreakConchLock	src/server/sqlite3.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyCheckReservedLock	src/server/sqlite3.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyClose	src/server/sqlite3.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyConchLock	src/server/sqlite3.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyCreateConchPathname	src/server/sqlite3.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateLockPath	src/server/sqlite3.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateUnixFile	src/server/sqlite3.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyFileControl	src/server/sqlite3.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyGetDbPathForUnixFile	src/server/sqlite3.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetHostID	src/server/sqlite3.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetLockPath	src/server/sqlite3.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyLock	src/server/sqlite3.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLockingContext	src/server/sqlite3.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	src/server/sqlite3.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyReleaseConch	src/server/sqlite3.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	src/server/sqlite3.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTransformUnixFile	src/server/sqlite3.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyUnlock	src/server/sqlite3.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
prtype	src/tools/lcc/src/types.c	/^static void prtype(Type ty, FILE *f, int indent, unsigned mark) {$/;"	f	file:
prune	src/tools/lcc/src/dag.c	/^static Node prune(Node forest) {$/;"	f	file:
prune	src/tools/lcc/src/gen.c	/^static Node *prune(Node p, Node pp[]) {$/;"	f	file:
prunetemps	src/tools/lcc/src/dag.c	/^int prunetemps = -1;$/;"	v
ps	src/cgame/cg_local.h	/^  moduleAlternatePlayerState_t ps;                    \/\/ complete information about the current player at this time$/;"	m	struct:__anon258
ps	src/cgame/cg_public.h	/^  playerState_t ps;                                   \/\/ complete information about the current player at this time$/;"	m	struct:__anon228
ps	src/client/client.h	/^	playerState_t	ps;						\/\/ complete information about the current player at this time$/;"	m	struct:__anon84
ps	src/client/client.h	/^  alternatePlayerState_t ps;                          \/\/ complete information about the current player at this time$/;"	m	struct:__anon83
ps	src/game/bg_public.h	/^  playerState_t *ps;$/;"	m	struct:pmove_s
ps	src/game/g_local.h	/^  playerState_t       ps;       \/\/ communicated by server to clients$/;"	m	struct:gclient_s
ps	src/server/server.h	/^	playerState_t	ps;$/;"	m	struct:__anon185
pseudoTableReg	src/server/sqlite3.c	/^    int pseudoTableReg;         \/* CURTYPE_PSEUDO. Reg holding content. *\/$/;"	m	union:VdbeCursor::__anon202	file:
pshadowBits	src/renderergl2/tr_local.h	/^	int             pshadowBits;$/;"	m	struct:srfBspSurface_s
pshadowBits	src/renderergl2/tr_local.h	/^	int         pshadowBits;$/;"	m	struct:shaderCommands_s
pshadowFbos	src/renderergl2/tr_local.h	/^	FBO_t					*pshadowFbos[MAX_DRAWN_PSHADOWS];$/;"	m	struct:__anon63
pshadowMaps	src/renderergl2/tr_local.h	/^	image_t					*pshadowMaps[MAX_DRAWN_PSHADOWS];$/;"	m	struct:__anon63
pshadowShader	src/renderergl2/tr_local.h	/^	shaderProgram_t pshadowShader;$/;"	m	struct:__anon63
pshadow_s	src/renderergl2/tr_local.h	/^typedef struct pshadow_s$/;"	s
pshadow_t	src/renderergl2/tr_local.h	/^} pshadow_t;$/;"	t	typeref:struct:pshadow_s
pshadows	src/renderergl2/tr_local.h	/^	pshadow_t pshadows[MAX_CALC_PSHADOWS];$/;"	m	struct:__anon79
pshadows	src/renderergl2/tr_local.h	/^	struct pshadow_s *pshadows;$/;"	m	struct:__anon39	typeref:struct:__anon39::pshadow_s
pt	src/tools/lcc/src/c.h	/^			Coordinate pt;$/;"	m	struct:symbol::__anon296::__anon301
pthreadMutexAlloc	src/server/sqlite3.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexEnd	src/server/sqlite3.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnter	src/server/sqlite3.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	src/server/sqlite3.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	src/server/sqlite3.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexInit	src/server/sqlite3.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexLeave	src/server/sqlite3.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	src/server/sqlite3.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	src/server/sqlite3.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
ptr	src/client/snd_codec.h	/^	void *ptr;$/;"	m	struct:snd_stream_s
ptr	src/tools/lcc/src/types.c	/^Type ptr(Type ty) {$/;"	f
ptrmapGet	src/server/sqlite3.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	src/server/sqlite3.c	56805;"	d	file:
ptrmapPageno	src/server/sqlite3.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPut	src/server/sqlite3.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	src/server/sqlite3.c	56804;"	d	file:
ptrmapPutOvflPtr	src/server/sqlite3.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	src/server/sqlite3.c	56806;"	d	file:
ptrmetric	src/tools/lcc/src/c.h	/^	Metrics ptrmetric;$/;"	m	struct:interface
pub	src/renderercommon/tr_image_jpg.c	/^  struct jpeg_destination_mgr pub; \/* public fields *\/$/;"	m	struct:__anon111	typeref:struct:__anon111::jpeg_destination_mgr	file:
puff	src/qcommon/puff.c	/^int32_t puff(uint8_t  *dest,           \/* pointer to destination pointer *\/$/;"	f
pulseRifleFire	src/game/g_weapon.c	/^void pulseRifleFire( gentity_t *ent )$/;"	f
punctuation_s	src/qcommon/parse.c	/^typedef struct punctuation_s$/;"	s	file:
punctuation_t	src/qcommon/parse.c	/^} punctuation_t;$/;"	t	typeref:struct:punctuation_s	file:
punctuations	src/qcommon/parse.c	/^  punctuation_t *punctuations;    \/\/the punctuations used in the script$/;"	m	struct:script_s	file:
punctuations	src/qcommon/parse.c	/^  punctuation_t *punctuations;  \/\/punctuations to use$/;"	m	struct:source_s	file:
punctuationtable	src/qcommon/parse.c	/^  punctuation_t **punctuationtable;$/;"	m	struct:script_s	file:
purchasable	src/game/bg_public.h	/^  qboolean  purchasable;$/;"	m	struct:__anon355
purchasable	src/game/bg_public.h	/^  qboolean  purchasable;$/;"	m	struct:__anon356
pureAuthentic	src/server/server.h	/^	int				pureAuthentic;$/;"	m	struct:client_s
pure_checksum	src/qcommon/files.c	/^	int				pure_checksum;				\/\/ checksum for pure$/;"	m	struct:pack_s	file:
pushDownWhereTerms	src/server/sqlite3.c	/^static int pushDownWhereTerms($/;"	f	file:
pushIn	src/qcommon/vm_powerpc.c	533;"	d	file:
pushOntoSorter	src/server/sqlite3.c	/^static void pushOntoSorter($/;"	f	file:
pushed	src/game/g_mover.c	/^pushed_t  pushed[ MAX_GENTITIES ], *pushed_p;$/;"	v
pushed_p	src/game/g_mover.c	/^pushed_t  pushed[ MAX_GENTITIES ], *pushed_p;$/;"	v
pushed_t	src/game/g_mover.c	/^} pushed_t;$/;"	t	typeref:struct:__anon319	file:
put2byte	src/server/sqlite3.c	55497;"	d	file:
put32bits	src/server/sqlite3.c	45067;"	d	file:
put4byte	src/server/sqlite3.c	55499;"	d	file:
putVarint	src/server/sqlite3.c	14706;"	d	file:
putVarint32	src/server/sqlite3.c	14702;"	d	file:
putVarint64	src/server/sqlite3.c	/^static int SQLITE_NOINLINE putVarint64(unsigned char *p, u64 v){$/;"	f	file:
putreg	src/tools/lcc/src/gen.c	/^static void putreg(Symbol r) {$/;"	f	file:
puttokens	src/tools/lcc/cpp/tokens.c	/^puttokens(Tokenrow *trp)$/;"	f
pvsOrigin	src/renderergl1/tr_local.h	/^	vec3_t		pvsOrigin;			\/\/ may be different than or.origin for portals$/;"	m	struct:__anon150
pvsOrigin	src/renderergl2/tr_local.h	/^	vec3_t		pvsOrigin;			\/\/ may be different than or.origin for portals$/;"	m	struct:__anon43
pw	src/qcommon/cm_polylib.c	/^void pw(winding_t *w)$/;"	f
pzErrMsg	src/server/sqlite3.c	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon200	file:
pzErrmsg	src/server/sqlite3.c	/^  char **pzErrmsg;$/;"	m	struct:Fts5Config	file:
qS1	src/game/bg_lib.c	/^qS1     = -2.4033949375e+00, \/* 0xc019d139 *\/$/;"	v	file:
qS2	src/game/bg_lib.c	/^qS2     =  2.0209457874e+00, \/* 0x4001572d *\/$/;"	v	file:
qS3	src/game/bg_lib.c	/^qS3     = -6.8828397989e-01, \/* 0xbf303361 *\/$/;"	v	file:
qS4	src/game/bg_lib.c	/^qS4     =  7.7038154006e-02; \/* 0x3d9dc62e *\/$/;"	v	file:
qStatus	src/client/cl_cin.c	/^	byte				*qStatus[2][32768];$/;"	m	struct:__anon99	file:
qalBuffer3f	src/client/qal.h	200;"	d
qalBuffer3i	src/client/qal.h	203;"	d
qalBufferData	src/client/qal.c	/^LPALBUFFERDATA qalBufferData;$/;"	v
qalBufferData	src/client/qal.h	198;"	d
qalBufferf	src/client/qal.h	199;"	d
qalBufferfv	src/client/qal.h	201;"	d
qalBufferi	src/client/qal.h	202;"	d
qalBufferiv	src/client/qal.h	204;"	d
qalDeleteBuffers	src/client/qal.c	/^LPALDELETEBUFFERS qalDeleteBuffers;$/;"	v
qalDeleteBuffers	src/client/qal.h	196;"	d
qalDeleteSources	src/client/qal.c	/^LPALDELETESOURCES qalDeleteSources;$/;"	v
qalDeleteSources	src/client/qal.h	171;"	d
qalDisable	src/client/qal.c	/^LPALDISABLE qalDisable;$/;"	v
qalDisable	src/client/qal.h	143;"	d
qalDistanceModel	src/client/qal.c	/^LPALDISTANCEMODEL qalDistanceModel;$/;"	v
qalDistanceModel	src/client/qal.h	213;"	d
qalDopplerFactor	src/client/qal.c	/^LPALDOPPLERFACTOR qalDopplerFactor;$/;"	v
qalDopplerFactor	src/client/qal.h	211;"	d
qalEnable	src/client/qal.c	/^LPALENABLE qalEnable;$/;"	v
qalEnable	src/client/qal.h	142;"	d
qalGenBuffers	src/client/qal.c	/^LPALGENBUFFERS qalGenBuffers;$/;"	v
qalGenBuffers	src/client/qal.h	195;"	d
qalGenSources	src/client/qal.c	/^LPALGENSOURCES qalGenSources;$/;"	v
qalGenSources	src/client/qal.h	170;"	d
qalGetBoolean	src/client/qal.c	/^LPALGETBOOLEAN qalGetBoolean;$/;"	v
qalGetBoolean	src/client/qal.h	150;"	d
qalGetBooleanv	src/client/qal.c	/^LPALGETBOOLEANV qalGetBooleanv;$/;"	v
qalGetBooleanv	src/client/qal.h	146;"	d
qalGetBuffer3f	src/client/qal.h	206;"	d
qalGetBuffer3i	src/client/qal.h	209;"	d
qalGetBufferf	src/client/qal.c	/^LPALGETBUFFERF qalGetBufferf;$/;"	v
qalGetBufferf	src/client/qal.h	205;"	d
qalGetBufferfv	src/client/qal.h	207;"	d
qalGetBufferi	src/client/qal.c	/^LPALGETBUFFERI qalGetBufferi;$/;"	v
qalGetBufferi	src/client/qal.h	208;"	d
qalGetBufferiv	src/client/qal.h	210;"	d
qalGetDouble	src/client/qal.c	/^LPALGETDOUBLE qalGetDouble;$/;"	v
qalGetDouble	src/client/qal.h	153;"	d
qalGetDoublev	src/client/qal.c	/^LPALGETDOUBLEV qalGetDoublev;$/;"	v
qalGetDoublev	src/client/qal.h	149;"	d
qalGetEnumValue	src/client/qal.c	/^LPALGETENUMVALUE qalGetEnumValue;$/;"	v
qalGetEnumValue	src/client/qal.h	157;"	d
qalGetError	src/client/qal.c	/^LPALGETERROR qalGetError;$/;"	v
qalGetError	src/client/qal.h	154;"	d
qalGetFloat	src/client/qal.c	/^LPALGETFLOAT qalGetFloat;$/;"	v
qalGetFloat	src/client/qal.h	152;"	d
qalGetFloatv	src/client/qal.c	/^LPALGETFLOATV qalGetFloatv;$/;"	v
qalGetFloatv	src/client/qal.h	148;"	d
qalGetInteger	src/client/qal.c	/^LPALGETINTEGER qalGetInteger;$/;"	v
qalGetInteger	src/client/qal.h	151;"	d
qalGetIntegerv	src/client/qal.c	/^LPALGETINTEGERV qalGetIntegerv;$/;"	v
qalGetIntegerv	src/client/qal.h	147;"	d
qalGetListener3f	src/client/qal.c	/^LPALGETLISTENER3F qalGetListener3f;$/;"	v
qalGetListener3f	src/client/qal.h	165;"	d
qalGetListener3i	src/client/qal.h	168;"	d
qalGetListenerf	src/client/qal.c	/^LPALGETLISTENERF qalGetListenerf;$/;"	v
qalGetListenerf	src/client/qal.h	164;"	d
qalGetListenerfv	src/client/qal.c	/^LPALGETLISTENERFV qalGetListenerfv;$/;"	v
qalGetListenerfv	src/client/qal.h	166;"	d
qalGetListeneri	src/client/qal.c	/^LPALGETLISTENERI qalGetListeneri;$/;"	v
qalGetListeneri	src/client/qal.h	167;"	d
qalGetListeneriv	src/client/qal.h	169;"	d
qalGetProcAddress	src/client/qal.c	/^LPALGETPROCADDRESS qalGetProcAddress;$/;"	v
qalGetProcAddress	src/client/qal.h	156;"	d
qalGetSource3f	src/client/qal.c	/^LPALGETSOURCE3F qalGetSource3f;$/;"	v
qalGetSource3f	src/client/qal.h	180;"	d
qalGetSource3i	src/client/qal.h	183;"	d
qalGetSourcef	src/client/qal.c	/^LPALGETSOURCEF qalGetSourcef;$/;"	v
qalGetSourcef	src/client/qal.h	179;"	d
qalGetSourcefv	src/client/qal.c	/^LPALGETSOURCEFV qalGetSourcefv;$/;"	v
qalGetSourcefv	src/client/qal.h	181;"	d
qalGetSourcei	src/client/qal.c	/^LPALGETSOURCEI qalGetSourcei;$/;"	v
qalGetSourcei	src/client/qal.h	182;"	d
qalGetSourceiv	src/client/qal.h	184;"	d
qalGetString	src/client/qal.c	/^LPALGETSTRING qalGetString;$/;"	v
qalGetString	src/client/qal.h	145;"	d
qalIsBuffer	src/client/qal.c	/^LPALISBUFFER qalIsBuffer;$/;"	v
qalIsBuffer	src/client/qal.h	197;"	d
qalIsEnabled	src/client/qal.c	/^LPALISENABLED qalIsEnabled;$/;"	v
qalIsEnabled	src/client/qal.h	144;"	d
qalIsExtensionPresent	src/client/qal.c	/^LPALISEXTENSIONPRESENT qalIsExtensionPresent;$/;"	v
qalIsExtensionPresent	src/client/qal.h	155;"	d
qalIsSource	src/client/qal.c	/^LPALISSOURCE qalIsSource;$/;"	v
qalIsSource	src/client/qal.h	172;"	d
qalListener3f	src/client/qal.c	/^LPALLISTENER3F qalListener3f;$/;"	v
qalListener3f	src/client/qal.h	159;"	d
qalListener3i	src/client/qal.h	162;"	d
qalListenerf	src/client/qal.c	/^LPALLISTENERF qalListenerf;$/;"	v
qalListenerf	src/client/qal.h	158;"	d
qalListenerfv	src/client/qal.c	/^LPALLISTENERFV qalListenerfv;$/;"	v
qalListenerfv	src/client/qal.h	160;"	d
qalListeneri	src/client/qal.c	/^LPALLISTENERI qalListeneri;$/;"	v
qalListeneri	src/client/qal.h	161;"	d
qalListeneriv	src/client/qal.h	163;"	d
qalSource3f	src/client/qal.c	/^LPALSOURCE3F qalSource3f;$/;"	v
qalSource3f	src/client/qal.h	174;"	d
qalSource3i	src/client/qal.h	177;"	d
qalSourcePause	src/client/qal.c	/^LPALSOURCEPAUSE qalSourcePause;$/;"	v
qalSourcePause	src/client/qal.h	192;"	d
qalSourcePausev	src/client/qal.c	/^LPALSOURCEPAUSEV qalSourcePausev;$/;"	v
qalSourcePausev	src/client/qal.h	188;"	d
qalSourcePlay	src/client/qal.c	/^LPALSOURCEPLAY qalSourcePlay;$/;"	v
qalSourcePlay	src/client/qal.h	189;"	d
qalSourcePlayv	src/client/qal.c	/^LPALSOURCEPLAYV qalSourcePlayv;$/;"	v
qalSourcePlayv	src/client/qal.h	185;"	d
qalSourceQueueBuffers	src/client/qal.c	/^LPALSOURCEQUEUEBUFFERS qalSourceQueueBuffers;$/;"	v
qalSourceQueueBuffers	src/client/qal.h	193;"	d
qalSourceRewind	src/client/qal.c	/^LPALSOURCEREWIND qalSourceRewind;$/;"	v
qalSourceRewind	src/client/qal.h	191;"	d
qalSourceRewindv	src/client/qal.c	/^LPALSOURCEREWINDV qalSourceRewindv;$/;"	v
qalSourceRewindv	src/client/qal.h	187;"	d
qalSourceStop	src/client/qal.c	/^LPALSOURCESTOP qalSourceStop;$/;"	v
qalSourceStop	src/client/qal.h	190;"	d
qalSourceStopv	src/client/qal.c	/^LPALSOURCESTOPV qalSourceStopv;$/;"	v
qalSourceStopv	src/client/qal.h	186;"	d
qalSourceUnqueueBuffers	src/client/qal.c	/^LPALSOURCEUNQUEUEBUFFERS qalSourceUnqueueBuffers;$/;"	v
qalSourceUnqueueBuffers	src/client/qal.h	194;"	d
qalSourcef	src/client/qal.c	/^LPALSOURCEF qalSourcef;$/;"	v
qalSourcef	src/client/qal.h	173;"	d
qalSourcefv	src/client/qal.c	/^LPALSOURCEFV qalSourcefv;$/;"	v
qalSourcefv	src/client/qal.h	175;"	d
qalSourcei	src/client/qal.c	/^LPALSOURCEI qalSourcei;$/;"	v
qalSourcei	src/client/qal.h	176;"	d
qalSourceiv	src/client/qal.h	178;"	d
qalSpeedOfSound	src/client/qal.c	/^LPALSPEEDOFSOUND qalSpeedOfSound;$/;"	v
qalSpeedOfSound	src/client/qal.h	212;"	d
qalcCaptureCloseDevice	src/client/qal.c	/^LPALCCAPTURECLOSEDEVICE qalcCaptureCloseDevice;$/;"	v
qalcCaptureCloseDevice	src/client/qal.h	231;"	d
qalcCaptureOpenDevice	src/client/qal.c	/^LPALCCAPTUREOPENDEVICE qalcCaptureOpenDevice;$/;"	v
qalcCaptureOpenDevice	src/client/qal.h	230;"	d
qalcCaptureSamples	src/client/qal.c	/^LPALCCAPTURESAMPLES qalcCaptureSamples;$/;"	v
qalcCaptureSamples	src/client/qal.h	234;"	d
qalcCaptureStart	src/client/qal.c	/^LPALCCAPTURESTART qalcCaptureStart;$/;"	v
qalcCaptureStart	src/client/qal.h	232;"	d
qalcCaptureStop	src/client/qal.c	/^LPALCCAPTURESTOP qalcCaptureStop;$/;"	v
qalcCaptureStop	src/client/qal.h	233;"	d
qalcCloseDevice	src/client/qal.c	/^LPALCCLOSEDEVICE qalcCloseDevice;$/;"	v
qalcCloseDevice	src/client/qal.h	223;"	d
qalcCreateContext	src/client/qal.c	/^LPALCCREATECONTEXT qalcCreateContext;$/;"	v
qalcCreateContext	src/client/qal.h	215;"	d
qalcDestroyContext	src/client/qal.c	/^LPALCDESTROYCONTEXT qalcDestroyContext;$/;"	v
qalcDestroyContext	src/client/qal.h	219;"	d
qalcGetContextsDevice	src/client/qal.c	/^LPALCGETCONTEXTSDEVICE qalcGetContextsDevice;$/;"	v
qalcGetContextsDevice	src/client/qal.h	221;"	d
qalcGetCurrentContext	src/client/qal.c	/^LPALCGETCURRENTCONTEXT qalcGetCurrentContext;$/;"	v
qalcGetCurrentContext	src/client/qal.h	220;"	d
qalcGetEnumValue	src/client/qal.c	/^LPALCGETENUMVALUE qalcGetEnumValue;$/;"	v
qalcGetEnumValue	src/client/qal.h	227;"	d
qalcGetError	src/client/qal.c	/^LPALCGETERROR qalcGetError;$/;"	v
qalcGetError	src/client/qal.h	224;"	d
qalcGetIntegerv	src/client/qal.c	/^LPALCGETINTEGERV qalcGetIntegerv;$/;"	v
qalcGetIntegerv	src/client/qal.h	229;"	d
qalcGetProcAddress	src/client/qal.c	/^LPALCGETPROCADDRESS qalcGetProcAddress;$/;"	v
qalcGetProcAddress	src/client/qal.h	226;"	d
qalcGetString	src/client/qal.c	/^LPALCGETSTRING qalcGetString;$/;"	v
qalcGetString	src/client/qal.h	228;"	d
qalcIsExtensionPresent	src/client/qal.c	/^LPALCISEXTENSIONPRESENT qalcIsExtensionPresent;$/;"	v
qalcIsExtensionPresent	src/client/qal.h	225;"	d
qalcMakeContextCurrent	src/client/qal.c	/^LPALCMAKECONTEXTCURRENT qalcMakeContextCurrent;$/;"	v
qalcMakeContextCurrent	src/client/qal.h	216;"	d
qalcOpenDevice	src/client/qal.c	/^LPALCOPENDEVICE qalcOpenDevice;$/;"	v
qalcOpenDevice	src/client/qal.h	222;"	d
qalcProcessContext	src/client/qal.c	/^LPALCPROCESSCONTEXT qalcProcessContext;$/;"	v
qalcProcessContext	src/client/qal.h	217;"	d
qalcSuspendContext	src/client/qal.c	/^LPALCSUSPENDCONTEXT qalcSuspendContext;$/;"	v
qalcSuspendContext	src/client/qal.h	218;"	d
qboolean	src/master/common.h	/^typedef enum {qfalse, qtrue} qboolean;$/;"	t	typeref:enum:__anon382
qboolean	src/qcommon/q_shared.h	/^typedef enum {qfalse, qtrue}	qboolean;$/;"	t	typeref:enum:__anon456
qboolean	src/tools/asm/cmdlib.h	/^typedef enum { qfalse, qtrue } qboolean;$/;"	t	typeref:enum:__anon261
qbyte	src/master/common.h	/^typedef unsigned char qbyte;$/;"	t
qconsole_attrib	src/sys/con_win32.c	/^static WORD qconsole_attrib;$/;"	v	file:
qconsole_backgroundAttrib	src/sys/con_win32.c	/^static WORD qconsole_backgroundAttrib;$/;"	v	file:
qconsole_cursor	src/sys/con_win32.c	/^static int qconsole_cursor;$/;"	v	file:
qconsole_drawinput	src/sys/con_win32.c	/^static qboolean qconsole_drawinput = qtrue;$/;"	v	file:
qconsole_hin	src/sys/con_win32.c	/^static HANDLE qconsole_hin = INVALID_HANDLE_VALUE;$/;"	v	file:
qconsole_history	src/sys/con_win32.c	/^static char qconsole_history[ QCONSOLE_HISTORY ][ MAX_EDIT_LINE ];$/;"	v	file:
qconsole_history_lines	src/sys/con_win32.c	/^static int qconsole_history_lines = 0;$/;"	v	file:
qconsole_history_oldest	src/sys/con_win32.c	/^static int qconsole_history_oldest = 0;$/;"	v	file:
qconsole_history_pos	src/sys/con_win32.c	/^static int qconsole_history_pos = -1;$/;"	v	file:
qconsole_hout	src/sys/con_win32.c	/^static HANDLE qconsole_hout = INVALID_HANDLE_VALUE;$/;"	v	file:
qconsole_line	src/sys/con_win32.c	/^static char qconsole_line[ MAX_EDIT_LINE ];$/;"	v	file:
qconsole_linelen	src/sys/con_win32.c	/^static int qconsole_linelen = 0;$/;"	v	file:
qconsole_orig_cursorinfo	src/sys/con_win32.c	/^static CONSOLE_CURSOR_INFO qconsole_orig_cursorinfo;$/;"	v	file:
qconsole_orig_mode	src/sys/con_win32.c	/^static DWORD qconsole_orig_mode;$/;"	v	file:
qcurl_easy_cleanup	src/client/cl_curl.c	/^void (*qcurl_easy_cleanup)(CURL *curl);$/;"	v
qcurl_easy_cleanup	src/client/cl_curl.h	78;"	d
qcurl_easy_duphandle	src/client/cl_curl.c	/^CURL* (*qcurl_easy_duphandle)(CURL *curl);$/;"	v
qcurl_easy_duphandle	src/client/cl_curl.h	80;"	d
qcurl_easy_getinfo	src/client/cl_curl.c	/^CURLcode (*qcurl_easy_getinfo)(CURL *curl, CURLINFO info, ...);$/;"	v
qcurl_easy_getinfo	src/client/cl_curl.h	79;"	d
qcurl_easy_init	src/client/cl_curl.c	/^CURL* (*qcurl_easy_init)(void);$/;"	v
qcurl_easy_init	src/client/cl_curl.h	75;"	d
qcurl_easy_perform	src/client/cl_curl.c	/^CURLcode (*qcurl_easy_perform)(CURL *curl);$/;"	v
qcurl_easy_perform	src/client/cl_curl.h	77;"	d
qcurl_easy_reset	src/client/cl_curl.c	/^void (*qcurl_easy_reset)(CURL *curl);$/;"	v
qcurl_easy_reset	src/client/cl_curl.h	81;"	d
qcurl_easy_setopt	src/client/cl_curl.c	/^CURLcode (*qcurl_easy_setopt)(CURL *curl, CURLoption option, ...);$/;"	v
qcurl_easy_setopt	src/client/cl_curl.h	76;"	d
qcurl_easy_strerror	src/client/cl_curl.c	/^const char *(*qcurl_easy_strerror)(CURLcode);$/;"	v
qcurl_easy_strerror	src/client/cl_curl.h	82;"	d
qcurl_multi_add_handle	src/client/cl_curl.c	/^CURLMcode (*qcurl_multi_add_handle)(CURLM *multi_handle,$/;"	v
qcurl_multi_add_handle	src/client/cl_curl.h	85;"	d
qcurl_multi_cleanup	src/client/cl_curl.c	/^CURLMcode (*qcurl_multi_cleanup)(CURLM *multi_handle);$/;"	v
qcurl_multi_cleanup	src/client/cl_curl.h	89;"	d
qcurl_multi_fdset	src/client/cl_curl.c	/^CURLMcode (*qcurl_multi_fdset)(CURLM *multi_handle,$/;"	v
qcurl_multi_fdset	src/client/cl_curl.h	87;"	d
qcurl_multi_info_read	src/client/cl_curl.c	/^CURLMsg *(*qcurl_multi_info_read)(CURLM *multi_handle,$/;"	v
qcurl_multi_info_read	src/client/cl_curl.h	90;"	d
qcurl_multi_init	src/client/cl_curl.c	/^CURLM* (*qcurl_multi_init)(void);$/;"	v
qcurl_multi_init	src/client/cl_curl.h	84;"	d
qcurl_multi_perform	src/client/cl_curl.c	/^CURLMcode (*qcurl_multi_perform)(CURLM *multi_handle,$/;"	v
qcurl_multi_perform	src/client/cl_curl.h	88;"	d
qcurl_multi_remove_handle	src/client/cl_curl.c	/^CURLMcode (*qcurl_multi_remove_handle)(CURLM *multi_handle,$/;"	v
qcurl_multi_remove_handle	src/client/cl_curl.h	86;"	d
qcurl_multi_strerror	src/client/cl_curl.c	/^const char *(*qcurl_multi_strerror)(CURLMcode);$/;"	v
qcurl_multi_strerror	src/client/cl_curl.h	91;"	d
qcurl_version	src/client/cl_curl.c	/^char* (*qcurl_version)(void);$/;"	v
qcurl_version	src/client/cl_curl.h	73;"	d
qdir	src/tools/asm/cmdlib.c	/^char		qdir[1024];$/;"	v
qfalse	src/master/common.h	/^typedef enum {qfalse, qtrue} qboolean;$/;"	e	enum:__anon382
qfalse	src/qcommon/q_shared.h	/^typedef enum {qfalse, qtrue}	qboolean;$/;"	e	enum:__anon456
qfalse	src/tools/asm/cmdlib.h	/^typedef enum { qfalse, qtrue } qboolean;$/;"	e	enum:__anon261
qfile_gus	src/qcommon/files.c	/^typedef union qfile_gus {$/;"	u	file:
qfile_gut	src/qcommon/files.c	/^} qfile_gut;$/;"	t	typeref:union:qfile_gus	file:
qfile_us	src/qcommon/files.c	/^typedef struct qfile_us {$/;"	s	file:
qfile_ut	src/qcommon/files.c	/^} qfile_ut;$/;"	t	typeref:struct:qfile_us	file:
qftolsse	src/asm/ftola.asm	/^  qftolsse PROC$/;"	l
qftolsse	src/asm/ftola.c	/^long qftolsse(float f)$/;"	f
qftolx87	src/asm/ftola.asm	/^  qftolx87 PROC$/;"	l
qftolx87	src/asm/ftola.c	/^long qftolx87(float f)$/;"	f
qftolx87m	src/asm/ftola.asm	/^  qftolx87m macro src$/;"	m
qglAccum	src/renderercommon/qgl.h	292;"	d
qglActiveTextureARB	src/null/null_glimp.c	/^void ( * qglActiveTextureARB )( GLenum texture );$/;"	v
qglAlphaFunc	src/renderercommon/qgl.h	293;"	d
qglAreTexturesResident	src/renderercommon/qgl.h	294;"	d
qglArrayElement	src/renderercommon/qgl.h	295;"	d
qglAttachObjectARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglAttachObjectARB) (GLhandleARB containerObj, GLhandleARB obj);$/;"	v
qglBegin	src/renderercommon/qgl.h	296;"	d
qglBeginQueryARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBeginQueryARB)(GLenum target, GLuint id);$/;"	v
qglBindAttribLocationARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglBindAttribLocationARB) (GLhandleARB programObj, GLuint index, const GLcharARB * name);$/;"	v
qglBindBufferARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBindBufferARB) (GLenum target, GLuint buffer);$/;"	v
qglBindFramebufferEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBindFramebufferEXT)(GLenum target, GLuint framebuffer);$/;"	v
qglBindRenderbufferEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBindRenderbufferEXT)(GLenum target, GLuint renderbuffer);$/;"	v
qglBindTexture	src/renderercommon/qgl.h	297;"	d
qglBindVertexArrayARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBindVertexArrayARB)(GLuint array);$/;"	v
qglBitmap	src/renderercommon/qgl.h	298;"	d
qglBlendFunc	src/renderercommon/qgl.h	299;"	d
qglBlitFramebufferEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBlitFramebufferEXT)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1,$/;"	v
qglBufferDataARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBufferDataARB) (GLenum target, GLsizeiptrARB size, const GLvoid * data, GLenum usage);$/;"	v
qglBufferSubDataARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglBufferSubDataARB) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid * data);$/;"	v
qglCallList	src/renderercommon/qgl.h	300;"	d
qglCallLists	src/renderercommon/qgl.h	301;"	d
qglCheckFramebufferStatusEXT	src/renderergl2/tr_extensions.c	/^GLenum (APIENTRY * qglCheckFramebufferStatusEXT)(GLenum target);$/;"	v
qglClear	src/renderercommon/qgl.h	302;"	d
qglClearAccum	src/renderercommon/qgl.h	303;"	d
qglClearColor	src/renderercommon/qgl.h	304;"	d
qglClearDepth	src/renderercommon/qgl.h	305;"	d
qglClearIndex	src/renderercommon/qgl.h	306;"	d
qglClearStencil	src/renderercommon/qgl.h	307;"	d
qglClientActiveTextureARB	src/null/null_glimp.c	/^void ( * qglClientActiveTextureARB )( GLenum texture );$/;"	v
qglClipPlane	src/renderercommon/qgl.h	308;"	d
qglColor3b	src/renderercommon/qgl.h	309;"	d
qglColor3bv	src/renderercommon/qgl.h	310;"	d
qglColor3d	src/renderercommon/qgl.h	311;"	d
qglColor3dv	src/renderercommon/qgl.h	312;"	d
qglColor3f	src/renderercommon/qgl.h	313;"	d
qglColor3fv	src/renderercommon/qgl.h	314;"	d
qglColor3i	src/renderercommon/qgl.h	315;"	d
qglColor3iv	src/renderercommon/qgl.h	316;"	d
qglColor3s	src/renderercommon/qgl.h	317;"	d
qglColor3sv	src/renderercommon/qgl.h	318;"	d
qglColor3ub	src/renderercommon/qgl.h	319;"	d
qglColor3ubv	src/renderercommon/qgl.h	320;"	d
qglColor3ui	src/renderercommon/qgl.h	321;"	d
qglColor3uiv	src/renderercommon/qgl.h	322;"	d
qglColor3us	src/renderercommon/qgl.h	323;"	d
qglColor3usv	src/renderercommon/qgl.h	324;"	d
qglColor4b	src/renderercommon/qgl.h	325;"	d
qglColor4bv	src/renderercommon/qgl.h	326;"	d
qglColor4d	src/renderercommon/qgl.h	327;"	d
qglColor4dv	src/renderercommon/qgl.h	328;"	d
qglColor4f	src/renderercommon/qgl.h	329;"	d
qglColor4fv	src/renderercommon/qgl.h	330;"	d
qglColor4i	src/renderercommon/qgl.h	331;"	d
qglColor4iv	src/renderercommon/qgl.h	332;"	d
qglColor4s	src/renderercommon/qgl.h	333;"	d
qglColor4sv	src/renderercommon/qgl.h	334;"	d
qglColor4ub	src/renderercommon/qgl.h	335;"	d
qglColor4ubv	src/renderercommon/qgl.h	336;"	d
qglColor4ui	src/renderercommon/qgl.h	337;"	d
qglColor4uiv	src/renderercommon/qgl.h	338;"	d
qglColor4us	src/renderercommon/qgl.h	339;"	d
qglColor4usv	src/renderercommon/qgl.h	340;"	d
qglColorMask	src/renderercommon/qgl.h	341;"	d
qglColorMaterial	src/renderercommon/qgl.h	342;"	d
qglColorPointer	src/renderercommon/qgl.h	343;"	d
qglCompileShaderARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglCompileShaderARB) (GLhandleARB shaderObj);$/;"	v
qglCompressedTexImage1DARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglCompressedTexImage1DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border,$/;"	v
qglCompressedTexImage2DARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglCompressedTexImage2DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height,$/;"	v
qglCompressedTexImage3DARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglCompressedTexImage3DARB)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, $/;"	v
qglCompressedTexSubImage1DARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglCompressedTexSubImage1DARB)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, $/;"	v
qglCompressedTexSubImage2DARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglCompressedTexSubImage2DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width,$/;"	v
qglCompressedTexSubImage3DARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglCompressedTexSubImage3DARB)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset,$/;"	v
qglCopyPixels	src/renderercommon/qgl.h	344;"	d
qglCopyTexImage1D	src/renderercommon/qgl.h	345;"	d
qglCopyTexImage2D	src/renderercommon/qgl.h	346;"	d
qglCopyTexSubImage1D	src/renderercommon/qgl.h	347;"	d
qglCopyTexSubImage2D	src/renderercommon/qgl.h	348;"	d
qglCreateProgramObjectARB	src/renderergl2/tr_extensions.c	/^GLhandleARB(APIENTRY * qglCreateProgramObjectARB) (void);$/;"	v
qglCreateShaderObjectARB	src/renderergl2/tr_extensions.c	/^GLhandleARB(APIENTRY * qglCreateShaderObjectARB) (GLenum shaderType);$/;"	v
qglCullFace	src/renderercommon/qgl.h	349;"	d
qglDeleteBuffersARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglDeleteBuffersARB) (GLsizei n, const GLuint * buffers);$/;"	v
qglDeleteFramebuffersEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglDeleteFramebuffersEXT)(GLsizei n, const GLuint *framebuffers);$/;"	v
qglDeleteLists	src/renderercommon/qgl.h	350;"	d
qglDeleteObjectARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglDeleteObjectARB) (GLhandleARB obj);$/;"	v
qglDeleteQueriesARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglDeleteQueriesARB)(GLsizei n, const GLuint *ids);$/;"	v
qglDeleteRenderbuffersEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglDeleteRenderbuffersEXT)(GLsizei n, const GLuint *renderbuffers);$/;"	v
qglDeleteTextures	src/renderercommon/qgl.h	351;"	d
qglDeleteVertexArraysARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglDeleteVertexArraysARB)(GLsizei n, const GLuint *arrays);$/;"	v
qglDepthFunc	src/renderercommon/qgl.h	352;"	d
qglDepthMask	src/renderercommon/qgl.h	353;"	d
qglDepthRange	src/renderercommon/qgl.h	354;"	d
qglDetachObjectARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglDetachObjectARB) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	v
qglDisable	src/renderercommon/qgl.h	355;"	d
qglDisableClientState	src/renderercommon/qgl.h	356;"	d
qglDisableVertexAttribArrayARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglDisableVertexAttribArrayARB) (GLuint index);$/;"	v
qglDrawArrays	src/renderercommon/qgl.h	357;"	d
qglDrawBuffer	src/renderercommon/qgl.h	358;"	d
qglDrawBuffersARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglDrawBuffersARB)(GLsizei n, const GLenum *bufs);$/;"	v
qglDrawElements	src/renderercommon/qgl.h	359;"	d
qglDrawPixels	src/renderercommon/qgl.h	360;"	d
qglDrawRangeElementsEXT	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglDrawRangeElementsEXT) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	v
qglEdgeFlag	src/renderercommon/qgl.h	361;"	d
qglEdgeFlagPointer	src/renderercommon/qgl.h	362;"	d
qglEdgeFlagv	src/renderercommon/qgl.h	363;"	d
qglEnable	src/renderercommon/qgl.h	364;"	d
qglEnableClientState	src/renderercommon/qgl.h	365;"	d
qglEnableVertexAttribArrayARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglEnableVertexAttribArrayARB) (GLuint index);$/;"	v
qglEnd	src/renderercommon/qgl.h	366;"	d
qglEndList	src/renderercommon/qgl.h	367;"	d
qglEndQueryARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglEndQueryARB)(GLenum target);$/;"	v
qglEvalCoord1d	src/renderercommon/qgl.h	368;"	d
qglEvalCoord1dv	src/renderercommon/qgl.h	369;"	d
qglEvalCoord1f	src/renderercommon/qgl.h	370;"	d
qglEvalCoord1fv	src/renderercommon/qgl.h	371;"	d
qglEvalCoord2d	src/renderercommon/qgl.h	372;"	d
qglEvalCoord2dv	src/renderercommon/qgl.h	373;"	d
qglEvalCoord2f	src/renderercommon/qgl.h	374;"	d
qglEvalCoord2fv	src/renderercommon/qgl.h	375;"	d
qglEvalMesh1	src/renderercommon/qgl.h	376;"	d
qglEvalMesh2	src/renderercommon/qgl.h	377;"	d
qglEvalPoint1	src/renderercommon/qgl.h	378;"	d
qglEvalPoint2	src/renderercommon/qgl.h	379;"	d
qglFeedbackBuffer	src/renderercommon/qgl.h	380;"	d
qglFinish	src/renderercommon/qgl.h	381;"	d
qglFlush	src/renderercommon/qgl.h	382;"	d
qglFogf	src/renderercommon/qgl.h	383;"	d
qglFogfv	src/renderercommon/qgl.h	384;"	d
qglFogi	src/renderercommon/qgl.h	385;"	d
qglFogiv	src/renderercommon/qgl.h	386;"	d
qglFramebufferRenderbufferEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglFramebufferRenderbufferEXT)(GLenum target, GLenum attachment, GLenum renderbuffertarget,$/;"	v
qglFramebufferTexture1DEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglFramebufferTexture1DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture,$/;"	v
qglFramebufferTexture2DEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglFramebufferTexture2DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture,$/;"	v
qglFramebufferTexture3DEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglFramebufferTexture3DEXT)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture,$/;"	v
qglFrontFace	src/renderercommon/qgl.h	387;"	d
qglFrustum	src/renderercommon/qgl.h	388;"	d
qglGenBuffersARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGenBuffersARB) (GLsizei n, GLuint * buffers);$/;"	v
qglGenFramebuffersEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGenFramebuffersEXT)(GLsizei n, GLuint *framebuffers);$/;"	v
qglGenLists	src/renderercommon/qgl.h	389;"	d
qglGenQueriesARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGenQueriesARB)(GLsizei n, GLuint *ids);$/;"	v
qglGenRenderbuffersEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGenRenderbuffersEXT)(GLsizei n, GLuint *renderbuffers);$/;"	v
qglGenTextures	src/renderercommon/qgl.h	390;"	d
qglGenVertexArraysARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGenVertexArraysARB)(GLsizei n, GLuint *arrays);$/;"	v
qglGenerateMipmapEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGenerateMipmapEXT)(GLenum target);$/;"	v
qglGetActiveAttribARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetActiveAttribARB) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length,$/;"	v
qglGetActiveUniformARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetActiveUniformARB) (GLhandleARB programObj, GLuint index, GLsizei maxIndex, GLsizei * length,$/;"	v
qglGetAttachedObjectsARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetAttachedObjectsARB) (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count,$/;"	v
qglGetAttribLocationARB	src/renderergl2/tr_extensions.c	/^GLint(APIENTRY * qglGetAttribLocationARB) (GLhandleARB programObj, const GLcharARB * name);$/;"	v
qglGetBooleanv	src/renderercommon/qgl.h	391;"	d
qglGetBufferParameterivARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetBufferParameterivARB) (GLenum target, GLenum pname, GLint * params);$/;"	v
qglGetBufferPointervARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetBufferPointervARB) (GLenum target, GLenum pname, GLvoid * *params);$/;"	v
qglGetBufferSubDataARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetBufferSubDataARB) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid * data);$/;"	v
qglGetClipPlane	src/renderercommon/qgl.h	392;"	d
qglGetCompressedTexImageARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetCompressedTexImageARB)(GLenum target, GLint lod,$/;"	v
qglGetDoublev	src/renderercommon/qgl.h	393;"	d
qglGetError	src/renderercommon/qgl.h	394;"	d
qglGetFloatv	src/renderercommon/qgl.h	395;"	d
qglGetFramebufferAttachmentParameterivEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetFramebufferAttachmentParameterivEXT)(GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	v
qglGetHandleARB	src/renderergl2/tr_extensions.c	/^GLhandleARB(APIENTRY * qglGetHandleARB) (GLenum pname);$/;"	v
qglGetInfoLogARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetInfoLogARB) (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);$/;"	v
qglGetIntegerv	src/renderercommon/qgl.h	396;"	d
qglGetLightfv	src/renderercommon/qgl.h	397;"	d
qglGetLightiv	src/renderercommon/qgl.h	398;"	d
qglGetMapdv	src/renderercommon/qgl.h	399;"	d
qglGetMapfv	src/renderercommon/qgl.h	400;"	d
qglGetMapiv	src/renderercommon/qgl.h	401;"	d
qglGetMaterialfv	src/renderercommon/qgl.h	402;"	d
qglGetMaterialiv	src/renderercommon/qgl.h	403;"	d
qglGetObjectParameterfvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetObjectParameterfvARB) (GLhandleARB obj, GLenum pname, GLfloat * params);$/;"	v
qglGetObjectParameterivARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetObjectParameterivARB) (GLhandleARB obj, GLenum pname, GLint * params);$/;"	v
qglGetPixelMapfv	src/renderercommon/qgl.h	404;"	d
qglGetPixelMapuiv	src/renderercommon/qgl.h	405;"	d
qglGetPixelMapusv	src/renderercommon/qgl.h	406;"	d
qglGetPointerv	src/renderercommon/qgl.h	407;"	d
qglGetPolygonStipple	src/renderercommon/qgl.h	408;"	d
qglGetQueryObjectivARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetQueryObjectivARB)(GLuint id, GLenum pname, GLint *params);$/;"	v
qglGetQueryObjectuivARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetQueryObjectuivARB)(GLuint id, GLenum pname, GLuint *params);$/;"	v
qglGetQueryivARB	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetQueryivARB)(GLenum target, GLenum pname, GLint *params);$/;"	v
qglGetRenderbufferParameterivEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglGetRenderbufferParameterivEXT)(GLenum target, GLenum pname, GLint *params);$/;"	v
qglGetShaderSourceARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetShaderSourceARB) (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);$/;"	v
qglGetString	src/renderercommon/qgl.h	409;"	d
qglGetTexGendv	src/renderercommon/qgl.h	410;"	d
qglGetTexGenfv	src/renderercommon/qgl.h	411;"	d
qglGetTexGeniv	src/renderercommon/qgl.h	412;"	d
qglGetTexImage	src/renderercommon/qgl.h	413;"	d
qglGetTexLevelParameterfv	src/renderercommon/qgl.h	414;"	d
qglGetTexLevelParameteriv	src/renderercommon/qgl.h	415;"	d
qglGetTexParameterfv	src/renderercommon/qgl.h	416;"	d
qglGetTexParameteriv	src/renderercommon/qgl.h	417;"	d
qglGetUniformLocationARB	src/renderergl2/tr_extensions.c	/^GLint(APIENTRY * qglGetUniformLocationARB) (GLhandleARB programObj, const GLcharARB * name);$/;"	v
qglGetUniformfvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetUniformfvARB) (GLhandleARB programObj, GLint location, GLfloat * params);$/;"	v
qglGetUniformivARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglGetUniformivARB) (GLhandleARB programObj, GLint location, GLint * params);$/;"	v
qglHint	src/renderercommon/qgl.h	418;"	d
qglIndexMask	src/renderercommon/qgl.h	419;"	d
qglIndexPointer	src/renderercommon/qgl.h	420;"	d
qglIndexd	src/renderercommon/qgl.h	421;"	d
qglIndexdv	src/renderercommon/qgl.h	422;"	d
qglIndexf	src/renderercommon/qgl.h	423;"	d
qglIndexfv	src/renderercommon/qgl.h	424;"	d
qglIndexi	src/renderercommon/qgl.h	425;"	d
qglIndexiv	src/renderercommon/qgl.h	426;"	d
qglIndexs	src/renderercommon/qgl.h	427;"	d
qglIndexsv	src/renderercommon/qgl.h	428;"	d
qglIndexub	src/renderercommon/qgl.h	429;"	d
qglIndexubv	src/renderercommon/qgl.h	430;"	d
qglInitNames	src/renderercommon/qgl.h	431;"	d
qglInterleavedArrays	src/renderercommon/qgl.h	432;"	d
qglIsBufferARB	src/renderergl2/tr_extensions.c	/^GLboolean(APIENTRY * qglIsBufferARB) (GLuint buffer);$/;"	v
qglIsEnabled	src/renderercommon/qgl.h	433;"	d
qglIsFramebufferEXT	src/renderergl2/tr_extensions.c	/^GLboolean (APIENTRY * qglIsFramebufferEXT)(GLuint framebuffer);$/;"	v
qglIsList	src/renderercommon/qgl.h	434;"	d
qglIsQueryARB	src/renderergl2/tr_extensions.c	/^GLboolean (APIENTRY * qglIsQueryARB)(GLuint id);$/;"	v
qglIsRenderbufferEXT	src/renderergl2/tr_extensions.c	/^GLboolean (APIENTRY * qglIsRenderbufferEXT)(GLuint renderbuffer);$/;"	v
qglIsTexture	src/renderercommon/qgl.h	435;"	d
qglIsVertexArrayARB	src/renderergl2/tr_extensions.c	/^GLboolean (APIENTRY * qglIsVertexArrayARB)(GLuint array);$/;"	v
qglLightModelf	src/renderercommon/qgl.h	436;"	d
qglLightModelfv	src/renderercommon/qgl.h	437;"	d
qglLightModeli	src/renderercommon/qgl.h	438;"	d
qglLightModeliv	src/renderercommon/qgl.h	439;"	d
qglLightf	src/renderercommon/qgl.h	440;"	d
qglLightfv	src/renderercommon/qgl.h	441;"	d
qglLighti	src/renderercommon/qgl.h	442;"	d
qglLightiv	src/renderercommon/qgl.h	443;"	d
qglLineStipple	src/renderercommon/qgl.h	444;"	d
qglLineWidth	src/renderercommon/qgl.h	445;"	d
qglLinkProgramARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglLinkProgramARB) (GLhandleARB programObj);$/;"	v
qglListBase	src/renderercommon/qgl.h	446;"	d
qglLoadIdentity	src/renderercommon/qgl.h	447;"	d
qglLoadMatrixd	src/renderercommon/qgl.h	448;"	d
qglLoadMatrixf	src/renderercommon/qgl.h	449;"	d
qglLoadName	src/renderercommon/qgl.h	450;"	d
qglLockArraysEXT	src/null/null_glimp.c	/^void ( * qglLockArraysEXT)( int, int);$/;"	v
qglLogicOp	src/renderercommon/qgl.h	451;"	d
qglMap1d	src/renderercommon/qgl.h	452;"	d
qglMap1f	src/renderercommon/qgl.h	453;"	d
qglMap2d	src/renderercommon/qgl.h	454;"	d
qglMap2f	src/renderercommon/qgl.h	455;"	d
qglMapGrid1d	src/renderercommon/qgl.h	456;"	d
qglMapGrid1f	src/renderercommon/qgl.h	457;"	d
qglMapGrid2d	src/renderercommon/qgl.h	458;"	d
qglMapGrid2f	src/renderercommon/qgl.h	459;"	d
qglMaterialf	src/renderercommon/qgl.h	460;"	d
qglMaterialfv	src/renderercommon/qgl.h	461;"	d
qglMateriali	src/renderercommon/qgl.h	462;"	d
qglMaterialiv	src/renderercommon/qgl.h	463;"	d
qglMatrixMode	src/renderercommon/qgl.h	464;"	d
qglMultMatrixd	src/renderercommon/qgl.h	465;"	d
qglMultMatrixf	src/renderercommon/qgl.h	466;"	d
qglMultiDrawArraysEXT	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglMultiDrawArraysEXT) (GLenum, const GLint *, const GLsizei *, GLsizei);$/;"	v
qglMultiDrawElementsEXT	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglMultiDrawElementsEXT) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);$/;"	v
qglMultiTexCoord2fARB	src/null/null_glimp.c	/^void ( * qglMultiTexCoord2fARB )( GLenum texture, float s, float t );$/;"	v
qglNewList	src/renderercommon/qgl.h	467;"	d
qglNormal3b	src/renderercommon/qgl.h	468;"	d
qglNormal3bv	src/renderercommon/qgl.h	469;"	d
qglNormal3d	src/renderercommon/qgl.h	470;"	d
qglNormal3dv	src/renderercommon/qgl.h	471;"	d
qglNormal3f	src/renderercommon/qgl.h	472;"	d
qglNormal3fv	src/renderercommon/qgl.h	473;"	d
qglNormal3i	src/renderercommon/qgl.h	474;"	d
qglNormal3iv	src/renderercommon/qgl.h	475;"	d
qglNormal3s	src/renderercommon/qgl.h	476;"	d
qglNormal3sv	src/renderercommon/qgl.h	477;"	d
qglNormalPointer	src/renderercommon/qgl.h	478;"	d
qglOrtho	src/renderercommon/qgl.h	479;"	d
qglPassThrough	src/renderercommon/qgl.h	480;"	d
qglPixelMapfv	src/renderercommon/qgl.h	481;"	d
qglPixelMapuiv	src/renderercommon/qgl.h	482;"	d
qglPixelMapusv	src/renderercommon/qgl.h	483;"	d
qglPixelStoref	src/renderercommon/qgl.h	484;"	d
qglPixelStorei	src/renderercommon/qgl.h	485;"	d
qglPixelTransferf	src/renderercommon/qgl.h	486;"	d
qglPixelTransferi	src/renderercommon/qgl.h	487;"	d
qglPixelZoom	src/renderercommon/qgl.h	488;"	d
qglPointSize	src/renderercommon/qgl.h	489;"	d
qglPolygonMode	src/renderercommon/qgl.h	490;"	d
qglPolygonOffset	src/renderercommon/qgl.h	491;"	d
qglPolygonStipple	src/renderercommon/qgl.h	492;"	d
qglPopAttrib	src/renderercommon/qgl.h	493;"	d
qglPopClientAttrib	src/renderercommon/qgl.h	494;"	d
qglPopMatrix	src/renderercommon/qgl.h	495;"	d
qglPopName	src/renderercommon/qgl.h	496;"	d
qglPrioritizeTextures	src/renderercommon/qgl.h	497;"	d
qglPushAttrib	src/renderercommon/qgl.h	498;"	d
qglPushClientAttrib	src/renderercommon/qgl.h	499;"	d
qglPushMatrix	src/renderercommon/qgl.h	500;"	d
qglPushName	src/renderercommon/qgl.h	501;"	d
qglRasterPos2d	src/renderercommon/qgl.h	502;"	d
qglRasterPos2dv	src/renderercommon/qgl.h	503;"	d
qglRasterPos2f	src/renderercommon/qgl.h	504;"	d
qglRasterPos2fv	src/renderercommon/qgl.h	505;"	d
qglRasterPos2i	src/renderercommon/qgl.h	506;"	d
qglRasterPos2iv	src/renderercommon/qgl.h	507;"	d
qglRasterPos2s	src/renderercommon/qgl.h	508;"	d
qglRasterPos2sv	src/renderercommon/qgl.h	509;"	d
qglRasterPos3d	src/renderercommon/qgl.h	510;"	d
qglRasterPos3dv	src/renderercommon/qgl.h	511;"	d
qglRasterPos3f	src/renderercommon/qgl.h	512;"	d
qglRasterPos3fv	src/renderercommon/qgl.h	513;"	d
qglRasterPos3i	src/renderercommon/qgl.h	514;"	d
qglRasterPos3iv	src/renderercommon/qgl.h	515;"	d
qglRasterPos3s	src/renderercommon/qgl.h	516;"	d
qglRasterPos3sv	src/renderercommon/qgl.h	517;"	d
qglRasterPos4d	src/renderercommon/qgl.h	518;"	d
qglRasterPos4dv	src/renderercommon/qgl.h	519;"	d
qglRasterPos4f	src/renderercommon/qgl.h	520;"	d
qglRasterPos4fv	src/renderercommon/qgl.h	521;"	d
qglRasterPos4i	src/renderercommon/qgl.h	522;"	d
qglRasterPos4iv	src/renderercommon/qgl.h	523;"	d
qglRasterPos4s	src/renderercommon/qgl.h	524;"	d
qglRasterPos4sv	src/renderercommon/qgl.h	525;"	d
qglReadBuffer	src/renderercommon/qgl.h	526;"	d
qglReadPixels	src/renderercommon/qgl.h	527;"	d
qglRectd	src/renderercommon/qgl.h	528;"	d
qglRectdv	src/renderercommon/qgl.h	529;"	d
qglRectf	src/renderercommon/qgl.h	530;"	d
qglRectfv	src/renderercommon/qgl.h	531;"	d
qglRecti	src/renderercommon/qgl.h	532;"	d
qglRectiv	src/renderercommon/qgl.h	533;"	d
qglRects	src/renderercommon/qgl.h	534;"	d
qglRectsv	src/renderercommon/qgl.h	535;"	d
qglRenderMode	src/renderercommon/qgl.h	536;"	d
qglRenderbufferStorageEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglRenderbufferStorageEXT)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	v
qglRenderbufferStorageMultisampleEXT	src/renderergl2/tr_extensions.c	/^void (APIENTRY * qglRenderbufferStorageMultisampleEXT)(GLenum target, GLsizei samples,$/;"	v
qglRotated	src/renderercommon/qgl.h	537;"	d
qglRotatef	src/renderercommon/qgl.h	538;"	d
qglScaled	src/renderercommon/qgl.h	539;"	d
qglScalef	src/renderercommon/qgl.h	540;"	d
qglScissor	src/renderercommon/qgl.h	541;"	d
qglSelectBuffer	src/renderercommon/qgl.h	542;"	d
qglShadeModel	src/renderercommon/qgl.h	543;"	d
qglShaderSourceARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglShaderSourceARB) (GLhandleARB shaderObj, GLsizei count, const GLcharARB * *string,$/;"	v
qglStencilFunc	src/renderercommon/qgl.h	544;"	d
qglStencilMask	src/renderercommon/qgl.h	545;"	d
qglStencilOp	src/renderercommon/qgl.h	546;"	d
qglTexCoord1d	src/renderercommon/qgl.h	547;"	d
qglTexCoord1dv	src/renderercommon/qgl.h	548;"	d
qglTexCoord1f	src/renderercommon/qgl.h	549;"	d
qglTexCoord1fv	src/renderercommon/qgl.h	550;"	d
qglTexCoord1i	src/renderercommon/qgl.h	551;"	d
qglTexCoord1iv	src/renderercommon/qgl.h	552;"	d
qglTexCoord1s	src/renderercommon/qgl.h	553;"	d
qglTexCoord1sv	src/renderercommon/qgl.h	554;"	d
qglTexCoord2d	src/renderercommon/qgl.h	555;"	d
qglTexCoord2dv	src/renderercommon/qgl.h	556;"	d
qglTexCoord2f	src/renderercommon/qgl.h	557;"	d
qglTexCoord2fv	src/renderercommon/qgl.h	558;"	d
qglTexCoord2i	src/renderercommon/qgl.h	559;"	d
qglTexCoord2iv	src/renderercommon/qgl.h	560;"	d
qglTexCoord2s	src/renderercommon/qgl.h	561;"	d
qglTexCoord2sv	src/renderercommon/qgl.h	562;"	d
qglTexCoord3d	src/renderercommon/qgl.h	563;"	d
qglTexCoord3dv	src/renderercommon/qgl.h	564;"	d
qglTexCoord3f	src/renderercommon/qgl.h	565;"	d
qglTexCoord3fv	src/renderercommon/qgl.h	566;"	d
qglTexCoord3i	src/renderercommon/qgl.h	567;"	d
qglTexCoord3iv	src/renderercommon/qgl.h	568;"	d
qglTexCoord3s	src/renderercommon/qgl.h	569;"	d
qglTexCoord3sv	src/renderercommon/qgl.h	570;"	d
qglTexCoord4d	src/renderercommon/qgl.h	571;"	d
qglTexCoord4dv	src/renderercommon/qgl.h	572;"	d
qglTexCoord4f	src/renderercommon/qgl.h	573;"	d
qglTexCoord4fv	src/renderercommon/qgl.h	574;"	d
qglTexCoord4i	src/renderercommon/qgl.h	575;"	d
qglTexCoord4iv	src/renderercommon/qgl.h	576;"	d
qglTexCoord4s	src/renderercommon/qgl.h	577;"	d
qglTexCoord4sv	src/renderercommon/qgl.h	578;"	d
qglTexCoordPointer	src/renderercommon/qgl.h	579;"	d
qglTexEnvf	src/renderercommon/qgl.h	580;"	d
qglTexEnvfv	src/renderercommon/qgl.h	581;"	d
qglTexEnvi	src/renderercommon/qgl.h	582;"	d
qglTexEnviv	src/renderercommon/qgl.h	583;"	d
qglTexGend	src/renderercommon/qgl.h	584;"	d
qglTexGendv	src/renderercommon/qgl.h	585;"	d
qglTexGenf	src/renderercommon/qgl.h	586;"	d
qglTexGenfv	src/renderercommon/qgl.h	587;"	d
qglTexGeni	src/renderercommon/qgl.h	588;"	d
qglTexGeniv	src/renderercommon/qgl.h	589;"	d
qglTexImage1D	src/renderercommon/qgl.h	590;"	d
qglTexImage2D	src/renderercommon/qgl.h	591;"	d
qglTexParameterf	src/renderercommon/qgl.h	592;"	d
qglTexParameterfv	src/renderercommon/qgl.h	593;"	d
qglTexParameteri	src/renderercommon/qgl.h	594;"	d
qglTexParameteriv	src/renderercommon/qgl.h	595;"	d
qglTexSubImage1D	src/renderercommon/qgl.h	596;"	d
qglTexSubImage2D	src/renderercommon/qgl.h	597;"	d
qglTranslated	src/renderercommon/qgl.h	598;"	d
qglTranslatef	src/renderercommon/qgl.h	599;"	d
qglUniform1fARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform1fARB) (GLint location, GLfloat v0);$/;"	v
qglUniform1fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform1fvARB) (GLint location, GLsizei count, const GLfloat * value);$/;"	v
qglUniform1iARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform1iARB) (GLint location, GLint v0);$/;"	v
qglUniform2fARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform2fARB) (GLint location, GLfloat v0, GLfloat v1);$/;"	v
qglUniform2fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform2fvARB) (GLint location, GLsizei count, const GLfloat * value);$/;"	v
qglUniform2iARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform2iARB) (GLint location, GLint v0, GLint v1);$/;"	v
qglUniform2ivARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform2ivARB) (GLint location, GLsizei count, const GLint * value);$/;"	v
qglUniform3fARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform3fARB) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	v
qglUniform3fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform3fvARB) (GLint location, GLsizei count, const GLfloat * value);$/;"	v
qglUniform3iARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform3iARB) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	v
qglUniform3ivARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform3ivARB) (GLint location, GLsizei count, const GLint * value);$/;"	v
qglUniform4fARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform4fARB) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	v
qglUniform4fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform4fvARB) (GLint location, GLsizei count, const GLfloat * value);$/;"	v
qglUniform4iARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform4iARB) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	v
qglUniform4ivARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniform4ivARB) (GLint location, GLsizei count, const GLint * value);$/;"	v
qglUniformMatrix2fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniformMatrix2fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	v
qglUniformMatrix3fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniformMatrix3fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	v
qglUniformMatrix4fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUniformMatrix4fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);$/;"	v
qglUnlockArraysEXT	src/null/null_glimp.c	/^void ( * qglUnlockArraysEXT) ( void );$/;"	v
qglUseProgramObjectARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglUseProgramObjectARB) (GLhandleARB programObj);$/;"	v
qglValidateProgramARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglValidateProgramARB) (GLhandleARB programObj);$/;"	v
qglVertex2d	src/renderercommon/qgl.h	600;"	d
qglVertex2dv	src/renderercommon/qgl.h	601;"	d
qglVertex2f	src/renderercommon/qgl.h	602;"	d
qglVertex2fv	src/renderercommon/qgl.h	603;"	d
qglVertex2i	src/renderercommon/qgl.h	604;"	d
qglVertex2iv	src/renderercommon/qgl.h	605;"	d
qglVertex2s	src/renderercommon/qgl.h	606;"	d
qglVertex2sv	src/renderercommon/qgl.h	607;"	d
qglVertex3d	src/renderercommon/qgl.h	608;"	d
qglVertex3dv	src/renderercommon/qgl.h	609;"	d
qglVertex3f	src/renderercommon/qgl.h	610;"	d
qglVertex3fv	src/renderercommon/qgl.h	611;"	d
qglVertex3i	src/renderercommon/qgl.h	612;"	d
qglVertex3iv	src/renderercommon/qgl.h	613;"	d
qglVertex3s	src/renderercommon/qgl.h	614;"	d
qglVertex3sv	src/renderercommon/qgl.h	615;"	d
qglVertex4d	src/renderercommon/qgl.h	616;"	d
qglVertex4dv	src/renderercommon/qgl.h	617;"	d
qglVertex4f	src/renderercommon/qgl.h	618;"	d
qglVertex4fv	src/renderercommon/qgl.h	619;"	d
qglVertex4i	src/renderercommon/qgl.h	620;"	d
qglVertex4iv	src/renderercommon/qgl.h	621;"	d
qglVertex4s	src/renderercommon/qgl.h	622;"	d
qglVertex4sv	src/renderercommon/qgl.h	623;"	d
qglVertexAttrib4fARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglVertexAttrib4fARB) (GLuint, GLfloat, GLfloat, GLfloat, GLfloat);$/;"	v
qglVertexAttrib4fvARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglVertexAttrib4fvARB) (GLuint, const GLfloat *);$/;"	v
qglVertexAttribPointerARB	src/renderergl2/tr_extensions.c	/^void            (APIENTRY * qglVertexAttribPointerARB) (GLuint index, GLint size, GLenum type, GLboolean normalized,$/;"	v
qglVertexPointer	src/renderercommon/qgl.h	624;"	d
qglViewport	src/renderercommon/qgl.h	625;"	d
qhandle_t	src/qcommon/q_shared.h	/^typedef int		qhandle_t;$/;"	t
qint64	src/qcommon/q_shared.h	/^} qint64;$/;"	t	typeref:struct:__anon467
qkey_t	src/client/keys.h	/^} qkey_t;$/;"	t	typeref:struct:__anon98
qport	src/qcommon/net_chan.c	/^cvar_t		*qport;$/;"	v
qport	src/qcommon/qcommon.h	/^	int			qport;				\/\/ qport value to write when transmitting$/;"	m	struct:__anon422
qprintf	src/tools/asm/cmdlib.c	/^void qprintf( const char *format, ... ) {$/;"	f
qroundx87	src/asm/snapvector.asm	/^  qroundx87 macro src$/;"	m
qsnapvectorsse	src/asm/snapvector.asm	/^  qsnapvectorsse PROC$/;"	l
qsnapvectorsse	src/asm/snapvector.c	/^void qsnapvectorsse(vec3_t vec)$/;"	f
qsnapvectorx87	src/asm/snapvector.asm	/^  qsnapvectorx87 PROC$/;"	l
qsnapvectorx87	src/asm/snapvector.c	/^void qsnapvectorx87(vec3_t vec)$/;"	f
qsort	src/game/bg_lib.c	/^qsort(a, n, es, cmp)$/;"	f
qtime_s	src/qcommon/q_shared.h	/^typedef struct qtime_s {$/;"	s
qtime_t	src/qcommon/q_shared.h	/^} qtime_t;$/;"	t	typeref:struct:qtime_s
qtrue	src/master/common.h	/^typedef enum {qfalse, qtrue} qboolean;$/;"	e	enum:__anon382
qtrue	src/qcommon/q_shared.h	/^typedef enum {qfalse, qtrue}	qboolean;$/;"	e	enum:__anon456
qtrue	src/tools/asm/cmdlib.h	/^typedef enum { qfalse, qtrue } qboolean;$/;"	e	enum:__anon261
qual	src/tools/lcc/src/types.c	/^Type qual(int op, Type ty) {$/;"	f
quarterFbo	src/renderergl2/tr_local.h	/^	FBO_t                   *quarterFbo[2];$/;"	m	struct:__anon63
quarterImage	src/renderergl2/tr_local.h	/^	image_t                 *quarterImage[2];$/;"	m	struct:__anon63
querySharedCacheTableLock	src/server/sqlite3.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	src/server/sqlite3.c	55908;"	d	file:
queryTestTokenizer	src/server/sqlite3.c	/^static int queryTestTokenizer($/;"	f	file:
queryTokenizer	src/server/sqlite3.c	/^int queryTokenizer($/;"	f	file:
queuedVoipIndex	src/server/server.h	/^	int queuedVoipIndex;$/;"	m	struct:client_s
queuedVoipPackets	src/server/server.h	/^	int queuedVoipPackets;$/;"	m	struct:client_s
quicklook	src/tools/lcc/cpp/cpp.h	84;"	d
quickset	src/tools/lcc/cpp/cpp.h	85;"	d
quoteFunc	src/server/sqlite3.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
qvmcall64	src/asm/vm_x86_64.asm	/^qvmcall64 PROC$/;"	l
qvmftolsse	src/asm/ftola.asm	/^  qvmftolsse PROC$/;"	l
qvmftolsse	src/asm/ftola.c	/^int qvmftolsse(void)$/;"	f
qvmftolx87	src/asm/ftola.asm	/^  qvmftolx87 PROC$/;"	l
qvmftolx87	src/asm/ftola.c	/^int qvmftolx87(void)$/;"	f
qwglSwapIntervalEXT	src/null/null_glimp.c	/^qboolean ( * qwglSwapIntervalEXT)( int interval );$/;"	v
r	src/game/g_local.h	/^  entityShared_t    r;        \/\/ shared by both the server system and game$/;"	m	struct:gentity_s
r	src/game/g_public.h	/^  entityShared_t  r;        \/\/ shared by both the server system and game$/;"	m	struct:__anon362
r	src/server/sqlite3.c	/^    double r;           \/* Real value used when MEM_Real is set in flags *\/$/;"	m	union:Mem::MemValue	file:
r0	src/qcommon/vm_powerpc_asm.h	32;"	d
r1	src/qcommon/vm_powerpc_asm.h	33;"	d
r1	src/server/sqlite3.c	/^  i8 r1;              \/* Value to return if (lhs > rhs) *\/$/;"	m	struct:UnpackedRecord	file:
r10	src/qcommon/vm_powerpc_asm.h	42;"	d
r11	src/qcommon/vm_powerpc_asm.h	43;"	d
r12	src/qcommon/vm_powerpc_asm.h	44;"	d
r13	src/qcommon/vm_powerpc_asm.h	45;"	d
r14	src/qcommon/vm_powerpc_asm.h	46;"	d
r15	src/qcommon/vm_powerpc_asm.h	47;"	d
r16	src/qcommon/vm_powerpc_asm.h	48;"	d
r17	src/qcommon/vm_powerpc_asm.h	49;"	d
r18	src/qcommon/vm_powerpc_asm.h	50;"	d
r19	src/qcommon/vm_powerpc_asm.h	51;"	d
r2	src/qcommon/vm_interpreted.c	375;"	d	file:
r2	src/qcommon/vm_powerpc_asm.h	34;"	d
r2	src/server/sqlite3.c	/^  i8 r2;              \/* Value to return if (rhs < lhs) *\/$/;"	m	struct:UnpackedRecord	file:
r20	src/qcommon/vm_powerpc_asm.h	52;"	d
r21	src/qcommon/vm_powerpc_asm.h	53;"	d
r22	src/qcommon/vm_powerpc_asm.h	54;"	d
r23	src/qcommon/vm_powerpc_asm.h	55;"	d
r24	src/qcommon/vm_powerpc_asm.h	56;"	d
r25	src/qcommon/vm_powerpc_asm.h	57;"	d
r26	src/qcommon/vm_powerpc_asm.h	58;"	d
r27	src/qcommon/vm_powerpc_asm.h	59;"	d
r28	src/qcommon/vm_powerpc_asm.h	60;"	d
r29	src/qcommon/vm_powerpc_asm.h	61;"	d
r3	src/qcommon/vm_powerpc_asm.h	35;"	d
r30	src/qcommon/vm_powerpc_asm.h	62;"	d
r31	src/qcommon/vm_powerpc_asm.h	63;"	d
r4	src/qcommon/vm_powerpc_asm.h	36;"	d
r5	src/qcommon/vm_powerpc_asm.h	37;"	d
r6	src/qcommon/vm_powerpc_asm.h	38;"	d
r7	src/qcommon/vm_powerpc_asm.h	39;"	d
r8	src/qcommon/vm_powerpc_asm.h	40;"	d
r9	src/qcommon/vm_powerpc_asm.h	41;"	d
rCost	src/server/sqlite3.c	/^  LogEst rCost;         \/* Total cost of this path *\/$/;"	m	struct:WherePath	file:
rDATABASE	src/qcommon/vm_powerpc.c	652;"	d	file:
rDATABASE	src/qcommon/vm_sparc.c	54;"	d	file:
rDATAMASK	src/qcommon/vm_sparc.c	55;"	d	file:
rFIRST	src/qcommon/vm_powerpc.c	741;"	d	file:
rFIRST	src/qcommon/vm_sparc.c	583;"	d	file:
rPSTACK	src/qcommon/vm_powerpc.c	654;"	d	file:
rPSTACK	src/qcommon/vm_sparc.c	53;"	d	file:
rParentScore	src/server/sqlite3.c	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
rParentScore	src/server/sqlite3.h	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rRun	src/server/sqlite3.c	/^  LogEst rRun;          \/* Cost of running each loop *\/$/;"	m	struct:WhereLoop	file:
rRun	src/server/sqlite3.c	/^  LogEst rRun;        \/* Cost of running this subquery *\/$/;"	m	struct:WhereOrCost	file:
rSECOND	src/qcommon/vm_powerpc.c	743;"	d	file:
rSECOND	src/qcommon/vm_sparc.c	584;"	d	file:
rScore	src/server/sqlite3.c	/^  RtreeDValue rScore;    \/* The score for this node.  Smallest goes first. *\/$/;"	m	struct:RtreeSearchPoint	file:
rScore	src/server/sqlite3.c	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
rScore	src/server/sqlite3.h	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
rSetup	src/server/sqlite3.c	/^  LogEst rSetup;        \/* One-time setup cost (ex: create transient index) *\/$/;"	m	struct:WhereLoop	file:
rSum	src/server/sqlite3.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rTEMP	src/qcommon/vm_powerpc.c	745;"	d	file:
rTMP	src/qcommon/vm_powerpc.c	746;"	d	file:
rTMP	src/qcommon/vm_sparc.c	51;"	d	file:
rTYPE_FLOAT	src/qcommon/vm_powerpc.c	755;"	d	file:
rTYPE_STATIC	src/qcommon/vm_powerpc.c	754;"	d	file:
rUnsorted	src/server/sqlite3.c	/^  LogEst rUnsorted;     \/* Total cost of this path ignoring sorting costs *\/$/;"	m	struct:WherePath	file:
rVMDATA	src/qcommon/vm_powerpc.c	650;"	d	file:
rVMDATA	src/qcommon/vm_sparc.c	52;"	d	file:
rValue	src/server/sqlite3.c	/^    RtreeDValue rValue;             \/* Constraint value. *\/$/;"	m	union:RtreeConstraint::__anon219	file:
r_activeFlares	src/renderergl1/tr_flares.c	/^flare_t		*r_activeFlares, *r_inactiveFlares;$/;"	v
r_activeFlares	src/renderergl2/tr_flares.c	/^flare_t		*r_activeFlares, *r_inactiveFlares;$/;"	v
r_allowExtensions	src/renderergl1/tr_init.c	/^cvar_t	*r_allowExtensions;$/;"	v
r_allowExtensions	src/renderergl2/tr_init.c	/^cvar_t	*r_allowExtensions;$/;"	v
r_allowResize	src/sdl/sdl_glimp.c	/^cvar_t *r_allowResize; \/\/ make window resizable$/;"	v
r_allowSoftwareGL	src/sdl/sdl_glimp.c	/^cvar_t *r_allowSoftwareGL; \/\/ Don't abort out if a hardware visual can't be obtained$/;"	v
r_alphabits	src/renderergl1/tr_init.c	/^cvar_t	*r_alphabits;$/;"	v
r_alphabits	src/renderergl2/tr_init.c	/^cvar_t	*r_alphabits;$/;"	v
r_ambientScale	src/renderergl1/tr_init.c	/^cvar_t	*r_ambientScale;$/;"	v
r_ambientScale	src/renderergl2/tr_init.c	/^cvar_t	*r_ambientScale;$/;"	v
r_anaglyphMode	src/renderergl1/tr_init.c	/^cvar_t	*r_anaglyphMode;$/;"	v
r_anaglyphMode	src/renderergl2/tr_init.c	/^cvar_t	*r_anaglyphMode;$/;"	v
r_arb_half_float_pixel	src/renderergl2/tr_init.c	/^cvar_t  *r_arb_half_float_pixel;$/;"	v
r_arb_half_float_vertex	src/renderergl2/tr_init.c	/^cvar_t  *r_arb_half_float_vertex;$/;"	v
r_arb_seamless_cube_map	src/renderergl2/tr_init.c	/^cvar_t  *r_arb_seamless_cube_map;$/;"	v
r_arb_vertex_array_object	src/renderergl2/tr_init.c	/^cvar_t  *r_arb_vertex_array_object;$/;"	v
r_arb_vertex_type_2_10_10_10_rev	src/renderergl2/tr_init.c	/^cvar_t  *r_arb_vertex_type_2_10_10_10_rev;$/;"	v
r_autoExposure	src/renderergl2/tr_init.c	/^cvar_t  *r_autoExposure;$/;"	v
r_aviMotionJpegQuality	src/renderergl1/tr_init.c	/^cvar_t	*r_aviMotionJpegQuality;$/;"	v
r_aviMotionJpegQuality	src/renderergl2/tr_init.c	/^cvar_t	*r_aviMotionJpegQuality;$/;"	v
r_baseGloss	src/renderergl2/tr_init.c	/^cvar_t  *r_baseGloss;$/;"	v
r_baseNormalX	src/renderergl2/tr_init.c	/^cvar_t  *r_baseNormalX;$/;"	v
r_baseNormalY	src/renderergl2/tr_init.c	/^cvar_t  *r_baseNormalY;$/;"	v
r_baseParallax	src/renderergl2/tr_init.c	/^cvar_t  *r_baseParallax;$/;"	v
r_baseSpecular	src/renderergl2/tr_init.c	/^cvar_t  *r_baseSpecular;$/;"	v
r_cameraExposure	src/renderergl2/tr_init.c	/^cvar_t  *r_cameraExposure;$/;"	v
r_centerWindow	src/sdl/sdl_glimp.c	/^cvar_t *r_centerWindow;$/;"	v
r_clear	src/renderergl1/tr_init.c	/^cvar_t	*r_clear;$/;"	v
r_clear	src/renderergl2/tr_init.c	/^cvar_t	*r_clear;$/;"	v
r_colorMipLevels	src/renderergl1/tr_init.c	/^cvar_t	*r_colorMipLevels;$/;"	v
r_colorMipLevels	src/renderergl2/tr_init.c	/^cvar_t	*r_colorMipLevels;$/;"	v
r_colorbits	src/renderergl1/tr_init.c	/^cvar_t	*r_colorbits;$/;"	v
r_colorbits	src/renderergl2/tr_init.c	/^cvar_t	*r_colorbits;$/;"	v
r_cubeMapping	src/renderergl2/tr_init.c	/^cvar_t  *r_cubeMapping;$/;"	v
r_debugLight	src/renderergl1/tr_init.c	/^cvar_t	*r_debugLight;$/;"	v
r_debugLight	src/renderergl2/tr_init.c	/^cvar_t	*r_debugLight;$/;"	v
r_debugSort	src/renderergl1/tr_init.c	/^cvar_t	*r_debugSort;$/;"	v
r_debugSort	src/renderergl2/tr_init.c	/^cvar_t	*r_debugSort;$/;"	v
r_debugSurface	src/renderergl1/tr_init.c	/^cvar_t	*r_debugSurface;$/;"	v
r_debugSurface	src/renderergl2/tr_init.c	/^cvar_t	*r_debugSurface;$/;"	v
r_deluxeMapping	src/renderergl2/tr_init.c	/^cvar_t  *r_deluxeMapping;$/;"	v
r_deluxeSpecular	src/renderergl2/tr_init.c	/^cvar_t  *r_deluxeSpecular;$/;"	v
r_depthPrepass	src/renderergl2/tr_init.c	/^cvar_t  *r_depthPrepass;$/;"	v
r_depthbits	src/renderergl1/tr_init.c	/^cvar_t	*r_depthbits;$/;"	v
r_depthbits	src/renderergl2/tr_init.c	/^cvar_t	*r_depthbits;$/;"	v
r_detailTextures	src/renderergl1/tr_init.c	/^cvar_t	*r_detailTextures;$/;"	v
r_detailTextures	src/renderergl2/tr_init.c	/^cvar_t	*r_detailTextures;$/;"	v
r_directedScale	src/renderergl1/tr_init.c	/^cvar_t	*r_directedScale;$/;"	v
r_directedScale	src/renderergl2/tr_init.c	/^cvar_t	*r_directedScale;$/;"	v
r_displayRefresh	src/renderergl1/tr_init.c	/^cvar_t  *r_displayRefresh;$/;"	v
r_dlightBacks	src/renderergl1/tr_init.c	/^cvar_t	*r_dlightBacks;$/;"	v
r_dlightBacks	src/renderergl2/tr_init.c	/^cvar_t	*r_dlightBacks;$/;"	v
r_dlightMode	src/renderergl2/tr_init.c	/^cvar_t  *r_dlightMode;$/;"	v
r_drawBuffer	src/renderergl1/tr_init.c	/^cvar_t	*r_drawBuffer;$/;"	v
r_drawBuffer	src/renderergl2/tr_init.c	/^cvar_t	*r_drawBuffer;$/;"	v
r_drawSun	src/renderergl1/tr_init.c	/^cvar_t	*r_drawSun;$/;"	v
r_drawSun	src/renderergl2/tr_init.c	/^cvar_t	*r_drawSun;$/;"	v
r_drawSunRays	src/renderergl2/tr_init.c	/^cvar_t  *r_drawSunRays;$/;"	v
r_drawentities	src/renderergl1/tr_init.c	/^cvar_t	*r_drawentities;$/;"	v
r_drawentities	src/renderergl2/tr_init.c	/^cvar_t	*r_drawentities;$/;"	v
r_drawworld	src/renderergl1/tr_init.c	/^cvar_t	*r_drawworld;$/;"	v
r_drawworld	src/renderergl2/tr_init.c	/^cvar_t	*r_drawworld;$/;"	v
r_dynamiclight	src/renderergl1/tr_init.c	/^cvar_t	*r_dynamiclight;$/;"	v
r_dynamiclight	src/renderergl2/tr_init.c	/^cvar_t	*r_dynamiclight;$/;"	v
r_ext_compiled_vertex_array	src/renderergl1/tr_init.c	/^cvar_t	*r_ext_compiled_vertex_array;$/;"	v
r_ext_compiled_vertex_array	src/renderergl2/tr_init.c	/^cvar_t	*r_ext_compiled_vertex_array;$/;"	v
r_ext_compressed_textures	src/renderergl1/tr_init.c	/^cvar_t	*r_ext_compressed_textures;$/;"	v
r_ext_compressed_textures	src/renderergl2/tr_init.c	/^cvar_t	*r_ext_compressed_textures;$/;"	v
r_ext_draw_range_elements	src/renderergl2/tr_init.c	/^cvar_t  *r_ext_draw_range_elements;$/;"	v
r_ext_framebuffer_multisample	src/renderergl2/tr_init.c	/^cvar_t  *r_ext_framebuffer_multisample;$/;"	v
r_ext_framebuffer_object	src/renderergl2/tr_init.c	/^cvar_t  *r_ext_framebuffer_object;$/;"	v
r_ext_max_anisotropy	src/renderergl1/tr_init.c	/^cvar_t	*r_ext_max_anisotropy;$/;"	v
r_ext_max_anisotropy	src/renderergl2/tr_init.c	/^cvar_t	*r_ext_max_anisotropy;$/;"	v
r_ext_multi_draw_arrays	src/renderergl2/tr_init.c	/^cvar_t  *r_ext_multi_draw_arrays;$/;"	v
r_ext_multisample	src/renderergl1/tr_init.c	/^cvar_t  *r_ext_multisample;$/;"	v
r_ext_multisample	src/renderergl2/tr_init.c	/^cvar_t  *r_ext_multisample;$/;"	v
r_ext_multitexture	src/renderergl1/tr_init.c	/^cvar_t	*r_ext_multitexture;$/;"	v
r_ext_multitexture	src/renderergl2/tr_init.c	/^cvar_t	*r_ext_multitexture;$/;"	v
r_ext_texture_env_add	src/renderergl1/tr_init.c	/^cvar_t	*r_ext_texture_env_add;$/;"	v
r_ext_texture_env_add	src/renderergl2/tr_init.c	/^cvar_t	*r_ext_texture_env_add;$/;"	v
r_ext_texture_filter_anisotropic	src/renderergl1/tr_init.c	/^cvar_t	*r_ext_texture_filter_anisotropic;$/;"	v
r_ext_texture_filter_anisotropic	src/renderergl2/tr_init.c	/^cvar_t	*r_ext_texture_filter_anisotropic;$/;"	v
r_ext_texture_float	src/renderergl2/tr_init.c	/^cvar_t  *r_ext_texture_float;$/;"	v
r_externalGLSL	src/renderergl2/tr_init.c	/^cvar_t  *r_externalGLSL;$/;"	v
r_facePlaneCull	src/renderergl1/tr_init.c	/^cvar_t	*r_facePlaneCull;$/;"	v
r_facePlaneCull	src/renderergl2/tr_init.c	/^cvar_t	*r_facePlaneCull;$/;"	v
r_fastsky	src/renderergl1/tr_init.c	/^cvar_t	*r_fastsky;$/;"	v
r_fastsky	src/renderergl2/tr_init.c	/^cvar_t	*r_fastsky;$/;"	v
r_finish	src/renderergl1/tr_init.c	/^cvar_t	*r_finish;$/;"	v
r_finish	src/renderergl2/tr_init.c	/^cvar_t	*r_finish;$/;"	v
r_firstSceneDlight	src/renderergl1/tr_scene.c	/^int			r_firstSceneDlight;$/;"	v
r_firstSceneDlight	src/renderergl2/tr_scene.c	/^int			r_firstSceneDlight;$/;"	v
r_firstSceneDrawSurf	src/renderergl1/tr_scene.c	/^int			r_firstSceneDrawSurf;$/;"	v
r_firstSceneDrawSurf	src/renderergl2/tr_scene.c	/^int			r_firstSceneDrawSurf;$/;"	v
r_firstSceneEntity	src/renderergl1/tr_scene.c	/^int			r_firstSceneEntity;$/;"	v
r_firstSceneEntity	src/renderergl2/tr_scene.c	/^int			r_firstSceneEntity;$/;"	v
r_firstScenePoly	src/renderergl1/tr_scene.c	/^int			r_firstScenePoly;$/;"	v
r_firstScenePoly	src/renderergl2/tr_scene.c	/^int			r_firstScenePoly;$/;"	v
r_flareCoeff	src/renderergl1/tr_init.c	/^cvar_t	*r_flareCoeff;$/;"	v
r_flareCoeff	src/renderergl2/tr_init.c	/^cvar_t	*r_flareCoeff;$/;"	v
r_flareFade	src/renderergl1/tr_init.c	/^cvar_t	*r_flareFade;$/;"	v
r_flareFade	src/renderergl2/tr_init.c	/^cvar_t	*r_flareFade;$/;"	v
r_flareSize	src/renderergl1/tr_init.c	/^cvar_t	*r_flareSize;$/;"	v
r_flareSize	src/renderergl2/tr_init.c	/^cvar_t	*r_flareSize;$/;"	v
r_flareStructs	src/renderergl1/tr_flares.c	/^flare_t		r_flareStructs[MAX_FLARES];$/;"	v
r_flareStructs	src/renderergl2/tr_flares.c	/^flare_t		r_flareStructs[MAX_FLARES];$/;"	v
r_flares	src/renderergl1/tr_init.c	/^cvar_t	*r_flares;$/;"	v
r_flares	src/renderergl2/tr_init.c	/^cvar_t	*r_flares;$/;"	v
r_floatLightmap	src/renderergl2/tr_init.c	/^cvar_t  *r_floatLightmap;$/;"	v
r_forceAutoExposure	src/renderergl2/tr_init.c	/^cvar_t  *r_forceAutoExposure;$/;"	v
r_forceAutoExposureMax	src/renderergl2/tr_init.c	/^cvar_t  *r_forceAutoExposureMax;$/;"	v
r_forceAutoExposureMin	src/renderergl2/tr_init.c	/^cvar_t  *r_forceAutoExposureMin;$/;"	v
r_forceSun	src/renderergl2/tr_init.c	/^cvar_t  *r_forceSun;$/;"	v
r_forceSunAmbientScale	src/renderergl2/tr_init.c	/^cvar_t  *r_forceSunAmbientScale;$/;"	v
r_forceSunLightScale	src/renderergl2/tr_init.c	/^cvar_t  *r_forceSunLightScale;$/;"	v
r_forceSunMapLightScale	src/renderergl2/tr_init.c	/^cvar_t  *r_forceSunMapLightScale;$/;"	v
r_forceToneMap	src/renderergl2/tr_init.c	/^cvar_t  *r_forceToneMap;$/;"	v
r_forceToneMapAvg	src/renderergl2/tr_init.c	/^cvar_t  *r_forceToneMapAvg;$/;"	v
r_forceToneMapMax	src/renderergl2/tr_init.c	/^cvar_t  *r_forceToneMapMax;$/;"	v
r_forceToneMapMin	src/renderergl2/tr_init.c	/^cvar_t  *r_forceToneMapMin;$/;"	v
r_framebufferGamma	src/renderergl2/tr_init.c	/^cvar_t  *r_framebufferGamma;$/;"	v
r_fullbright	src/renderergl1/tr_init.c	/^cvar_t	*r_fullbright;$/;"	v
r_fullbright	src/renderergl2/tr_init.c	/^cvar_t	*r_fullbright;$/;"	v
r_fullscreen	src/renderergl1/tr_init.c	/^cvar_t	*r_fullscreen;$/;"	v
r_fullscreen	src/renderergl2/tr_init.c	/^cvar_t	*r_fullscreen;$/;"	v
r_gamma	src/renderergl1/tr_init.c	/^cvar_t	*r_gamma;$/;"	v
r_gamma	src/renderergl2/tr_init.c	/^cvar_t	*r_gamma;$/;"	v
r_genNormalMaps	src/renderergl2/tr_init.c	/^cvar_t  *r_genNormalMaps;$/;"	v
r_greyscale	src/renderergl1/tr_init.c	/^cvar_t	*r_greyscale;$/;"	v
r_greyscale	src/renderergl2/tr_init.c	/^cvar_t	*r_greyscale;$/;"	v
r_hdr	src/renderergl2/tr_init.c	/^cvar_t  *r_hdr;$/;"	v
r_height	src/renderergl1/tr_init.c	/^cvar_t	*r_height;$/;"	v
r_height	src/renderergl2/tr_init.c	/^cvar_t	*r_height;$/;"	v
r_ignore	src/renderergl1/tr_init.c	/^cvar_t	*r_ignore;$/;"	v
r_ignore	src/renderergl2/tr_init.c	/^cvar_t	*r_ignore;$/;"	v
r_ignoreDstAlpha	src/renderergl2/tr_init.c	/^cvar_t  *r_ignoreDstAlpha;$/;"	v
r_ignoreFastPath	src/renderergl1/tr_init.c	/^cvar_t	*r_ignoreFastPath;$/;"	v
r_ignoreGLErrors	src/renderergl1/tr_init.c	/^cvar_t	*r_ignoreGLErrors;$/;"	v
r_ignoreGLErrors	src/renderergl2/tr_init.c	/^cvar_t	*r_ignoreGLErrors;$/;"	v
r_ignorehwgamma	src/renderergl1/tr_init.c	/^cvar_t	*r_ignorehwgamma;$/;"	v
r_ignorehwgamma	src/renderergl2/tr_init.c	/^cvar_t	*r_ignorehwgamma;$/;"	v
r_imageUpsample	src/renderergl2/tr_init.c	/^cvar_t  *r_imageUpsample;$/;"	v
r_imageUpsampleMaxSize	src/renderergl2/tr_init.c	/^cvar_t  *r_imageUpsampleMaxSize;$/;"	v
r_imageUpsampleType	src/renderergl2/tr_init.c	/^cvar_t  *r_imageUpsampleType;$/;"	v
r_inGameVideo	src/renderergl1/tr_init.c	/^cvar_t	*r_inGameVideo;$/;"	v
r_inGameVideo	src/renderergl2/tr_init.c	/^cvar_t	*r_inGameVideo;$/;"	v
r_inactiveFlares	src/renderergl1/tr_flares.c	/^flare_t		*r_activeFlares, *r_inactiveFlares;$/;"	v
r_inactiveFlares	src/renderergl2/tr_flares.c	/^flare_t		*r_activeFlares, *r_inactiveFlares;$/;"	v
r_intensity	src/renderergl1/tr_init.c	/^cvar_t	*r_intensity;$/;"	v
r_intensity	src/renderergl2/tr_init.c	/^cvar_t	*r_intensity;$/;"	v
r_lightGamma	src/renderergl2/tr_init.c	/^cvar_t  *r_lightGamma;$/;"	v
r_lightmap	src/renderergl1/tr_init.c	/^cvar_t	*r_lightmap;$/;"	v
r_lightmap	src/renderergl2/tr_init.c	/^cvar_t	*r_lightmap;$/;"	v
r_lockpvs	src/renderergl1/tr_init.c	/^cvar_t	*r_lockpvs;$/;"	v
r_lockpvs	src/renderergl2/tr_init.c	/^cvar_t	*r_lockpvs;$/;"	v
r_lodCurveError	src/renderergl1/tr_init.c	/^cvar_t	*r_lodCurveError;$/;"	v
r_lodCurveError	src/renderergl2/tr_init.c	/^cvar_t	*r_lodCurveError;$/;"	v
r_lodbias	src/renderergl1/tr_init.c	/^cvar_t	*r_lodbias;$/;"	v
r_lodbias	src/renderergl2/tr_init.c	/^cvar_t	*r_lodbias;$/;"	v
r_lodscale	src/renderergl1/tr_init.c	/^cvar_t	*r_lodscale;$/;"	v
r_lodscale	src/renderergl2/tr_init.c	/^cvar_t	*r_lodscale;$/;"	v
r_logFile	src/renderergl1/tr_init.c	/^cvar_t	*r_logFile;$/;"	v
r_logFile	src/renderergl2/tr_init.c	/^cvar_t	*r_logFile;$/;"	v
r_mapOverBrightBits	src/renderergl1/tr_init.c	/^cvar_t	*r_mapOverBrightBits;$/;"	v
r_mapOverBrightBits	src/renderergl2/tr_init.c	/^cvar_t	*r_mapOverBrightBits;$/;"	v
r_marksOnTriangleMeshes	src/renderergl1/tr_init.c	/^cvar_t	*r_marksOnTriangleMeshes;$/;"	v
r_marksOnTriangleMeshes	src/renderergl2/tr_init.c	/^cvar_t	*r_marksOnTriangleMeshes;$/;"	v
r_materialGamma	src/renderergl2/tr_init.c	/^cvar_t  *r_materialGamma;$/;"	v
r_maxpolys	src/renderergl1/tr_init.c	/^cvar_t	*r_maxpolys;$/;"	v
r_maxpolys	src/renderergl2/tr_init.c	/^cvar_t	*r_maxpolys;$/;"	v
r_maxpolyverts	src/renderergl1/tr_init.c	/^cvar_t	*r_maxpolyverts;$/;"	v
r_maxpolyverts	src/renderergl2/tr_init.c	/^cvar_t	*r_maxpolyverts;$/;"	v
r_measureOverdraw	src/renderergl1/tr_init.c	/^cvar_t	*r_measureOverdraw;$/;"	v
r_measureOverdraw	src/renderergl2/tr_init.c	/^cvar_t	*r_measureOverdraw;$/;"	v
r_mergeLeafSurfaces	src/renderergl2/tr_init.c	/^cvar_t  *r_mergeLeafSurfaces;$/;"	v
r_mergeLightmaps	src/renderergl2/tr_init.c	/^cvar_t  *r_mergeLightmaps;$/;"	v
r_mergeMultidraws	src/renderergl2/tr_init.c	/^cvar_t  *r_mergeMultidraws;$/;"	v
r_mode	src/renderergl2/tr_init.c	/^cvar_t	*r_mode;$/;"	v
r_nobind	src/renderergl1/tr_init.c	/^cvar_t	*r_nobind;$/;"	v
r_nobind	src/renderergl2/tr_init.c	/^cvar_t	*r_nobind;$/;"	v
r_noborder	src/renderergl1/tr_init.c	/^cvar_t  *r_noborder;$/;"	v
r_noborder	src/renderergl2/tr_init.c	/^cvar_t  *r_noborder;$/;"	v
r_nocull	src/renderergl1/tr_init.c	/^cvar_t	*r_nocull;$/;"	v
r_nocull	src/renderergl2/tr_init.c	/^cvar_t	*r_nocull;$/;"	v
r_nocurves	src/renderergl1/tr_init.c	/^cvar_t	*r_nocurves;$/;"	v
r_nocurves	src/renderergl2/tr_init.c	/^cvar_t	*r_nocurves;$/;"	v
r_noportals	src/renderergl1/tr_init.c	/^cvar_t	*r_noportals;$/;"	v
r_noportals	src/renderergl2/tr_init.c	/^cvar_t	*r_noportals;$/;"	v
r_norefresh	src/renderergl1/tr_init.c	/^cvar_t	*r_norefresh;$/;"	v
r_norefresh	src/renderergl2/tr_init.c	/^cvar_t	*r_norefresh;$/;"	v
r_normalMapping	src/renderergl2/tr_init.c	/^cvar_t  *r_normalMapping;$/;"	v
r_novis	src/renderergl1/tr_init.c	/^cvar_t	*r_novis;$/;"	v
r_novis	src/renderergl2/tr_init.c	/^cvar_t	*r_novis;$/;"	v
r_numdlights	src/renderergl1/tr_scene.c	/^int			r_numdlights;$/;"	v
r_numdlights	src/renderergl2/tr_scene.c	/^int			r_numdlights;$/;"	v
r_numentities	src/renderergl1/tr_scene.c	/^int			r_numentities;$/;"	v
r_numentities	src/renderergl2/tr_scene.c	/^int			r_numentities;$/;"	v
r_numpolys	src/renderergl1/tr_scene.c	/^int			r_numpolys;$/;"	v
r_numpolys	src/renderergl2/tr_scene.c	/^int			r_numpolys;$/;"	v
r_numpolyverts	src/renderergl1/tr_scene.c	/^int			r_numpolyverts;$/;"	v
r_numpolyverts	src/renderergl2/tr_scene.c	/^int			r_numpolyverts;$/;"	v
r_offsetFactor	src/renderergl1/tr_init.c	/^cvar_t	*r_offsetFactor;$/;"	v
r_offsetFactor	src/renderergl2/tr_init.c	/^cvar_t	*r_offsetFactor;$/;"	v
r_offsetUnits	src/renderergl1/tr_init.c	/^cvar_t	*r_offsetUnits;$/;"	v
r_offsetUnits	src/renderergl2/tr_init.c	/^cvar_t	*r_offsetUnits;$/;"	v
r_overBrightBits	src/renderergl1/tr_init.c	/^cvar_t	*r_overBrightBits;$/;"	v
r_overBrightBits	src/renderergl2/tr_init.c	/^cvar_t	*r_overBrightBits;$/;"	v
r_parallaxMapping	src/renderergl2/tr_init.c	/^cvar_t  *r_parallaxMapping;$/;"	v
r_picmip	src/renderergl1/tr_init.c	/^cvar_t	*r_picmip;$/;"	v
r_picmip	src/renderergl2/tr_init.c	/^cvar_t	*r_picmip;$/;"	v
r_pixelAspect	src/renderergl1/tr_init.c	/^cvar_t	*r_pixelAspect;$/;"	v
r_pixelAspect	src/renderergl2/tr_init.c	/^cvar_t	*r_pixelAspect;$/;"	v
r_portalOnly	src/renderergl1/tr_init.c	/^cvar_t	*r_portalOnly;$/;"	v
r_portalOnly	src/renderergl2/tr_init.c	/^cvar_t	*r_portalOnly;$/;"	v
r_postProcess	src/renderergl2/tr_init.c	/^cvar_t  *r_postProcess;$/;"	v
r_primitives	src/renderergl1/tr_init.c	/^cvar_t	*r_primitives;$/;"	v
r_printShaders	src/renderergl1/tr_init.c	/^cvar_t	*r_printShaders;$/;"	v
r_printShaders	src/renderergl2/tr_init.c	/^cvar_t	*r_printShaders;$/;"	v
r_pshadowDist	src/renderergl2/tr_init.c	/^cvar_t  *r_pshadowDist;$/;"	v
r_railCoreWidth	src/renderergl1/tr_init.c	/^cvar_t	*r_railCoreWidth;$/;"	v
r_railCoreWidth	src/renderergl2/tr_init.c	/^cvar_t	*r_railCoreWidth;$/;"	v
r_railSegmentLength	src/renderergl1/tr_init.c	/^cvar_t	*r_railSegmentLength;$/;"	v
r_railSegmentLength	src/renderergl2/tr_init.c	/^cvar_t	*r_railSegmentLength;$/;"	v
r_railWidth	src/renderergl1/tr_init.c	/^cvar_t	*r_railWidth;$/;"	v
r_railWidth	src/renderergl2/tr_init.c	/^cvar_t	*r_railWidth;$/;"	v
r_roundImagesDown	src/renderergl1/tr_init.c	/^cvar_t	*r_roundImagesDown;$/;"	v
r_roundImagesDown	src/renderergl2/tr_init.c	/^cvar_t	*r_roundImagesDown;$/;"	v
r_saveFontData	src/renderergl1/tr_init.c	/^cvar_t	*r_saveFontData;$/;"	v
r_saveFontData	src/renderergl2/tr_init.c	/^cvar_t	*r_saveFontData;$/;"	v
r_screenshotJpegQuality	src/renderergl1/tr_init.c	/^cvar_t	*r_screenshotJpegQuality;$/;"	v
r_screenshotJpegQuality	src/renderergl2/tr_init.c	/^cvar_t	*r_screenshotJpegQuality;$/;"	v
r_sdlDriver	src/sdl/sdl_glimp.c	/^cvar_t *r_sdlDriver;$/;"	v
r_shadowCascadeZBias	src/renderergl2/tr_init.c	/^cvar_t  *r_shadowCascadeZBias;$/;"	v
r_shadowCascadeZFar	src/renderergl2/tr_init.c	/^cvar_t  *r_shadowCascadeZFar;$/;"	v
r_shadowCascadeZNear	src/renderergl2/tr_init.c	/^cvar_t  *r_shadowCascadeZNear;$/;"	v
r_shadowFilter	src/renderergl2/tr_init.c	/^cvar_t  *r_shadowFilter;$/;"	v
r_shadowMapSize	src/renderergl2/tr_init.c	/^cvar_t  *r_shadowMapSize;$/;"	v
r_shadows	src/renderergl1/tr_init.c	/^cvar_t	*r_shadows;$/;"	v
r_shadows	src/renderergl2/tr_init.c	/^cvar_t	*r_shadows;$/;"	v
r_showImages	src/renderergl1/tr_init.c	/^cvar_t	*r_showImages;$/;"	v
r_showImages	src/renderergl2/tr_init.c	/^cvar_t	*r_showImages;$/;"	v
r_showcluster	src/renderergl1/tr_init.c	/^cvar_t	*r_showcluster;$/;"	v
r_showcluster	src/renderergl2/tr_init.c	/^cvar_t	*r_showcluster;$/;"	v
r_shownormals	src/renderergl1/tr_init.c	/^cvar_t	*r_shownormals;$/;"	v
r_shownormals	src/renderergl2/tr_init.c	/^cvar_t	*r_shownormals;$/;"	v
r_showsky	src/renderergl1/tr_init.c	/^cvar_t	*r_showsky;$/;"	v
r_showsky	src/renderergl2/tr_init.c	/^cvar_t	*r_showsky;$/;"	v
r_showtris	src/renderergl1/tr_init.c	/^cvar_t	*r_showtris;$/;"	v
r_showtris	src/renderergl2/tr_init.c	/^cvar_t	*r_showtris;$/;"	v
r_simpleMipMaps	src/renderergl1/tr_init.c	/^cvar_t	*r_simpleMipMaps;$/;"	v
r_simpleMipMaps	src/renderergl2/tr_init.c	/^cvar_t	*r_simpleMipMaps;$/;"	v
r_singleShader	src/renderergl1/tr_init.c	/^cvar_t	*r_singleShader;$/;"	v
r_singleShader	src/renderergl2/tr_init.c	/^cvar_t	*r_singleShader;$/;"	v
r_skipBackEnd	src/renderergl1/tr_init.c	/^cvar_t	*r_skipBackEnd;$/;"	v
r_skipBackEnd	src/renderergl2/tr_init.c	/^cvar_t	*r_skipBackEnd;$/;"	v
r_specularIsMetallic	src/renderergl2/tr_init.c	/^cvar_t  *r_specularIsMetallic;$/;"	v
r_specularMapping	src/renderergl2/tr_init.c	/^cvar_t  *r_specularMapping;$/;"	v
r_speeds	src/renderergl1/tr_init.c	/^cvar_t	*r_speeds;$/;"	v
r_speeds	src/renderergl2/tr_init.c	/^cvar_t	*r_speeds;$/;"	v
r_ssao	src/renderergl2/tr_init.c	/^cvar_t  *r_ssao;$/;"	v
r_stencilbits	src/renderergl1/tr_init.c	/^cvar_t	*r_stencilbits;$/;"	v
r_stencilbits	src/renderergl2/tr_init.c	/^cvar_t	*r_stencilbits;$/;"	v
r_stereoEnabled	src/renderergl1/tr_init.c	/^cvar_t	*r_stereoEnabled;$/;"	v
r_stereoEnabled	src/renderergl2/tr_init.c	/^cvar_t	*r_stereoEnabled;$/;"	v
r_stereoSeparation	src/renderergl1/tr_init.c	/^cvar_t	*r_stereoSeparation;$/;"	v
r_stereoSeparation	src/renderergl2/tr_init.c	/^cvar_t	*r_stereoSeparation;$/;"	v
r_subdivisions	src/renderergl1/tr_init.c	/^cvar_t	*r_subdivisions;$/;"	v
r_subdivisions	src/renderergl2/tr_init.c	/^cvar_t	*r_subdivisions;$/;"	v
r_sunShadows	src/renderergl2/tr_init.c	/^cvar_t  *r_sunShadows;$/;"	v
r_sunlightMode	src/renderergl2/tr_init.c	/^cvar_t  *r_sunlightMode;$/;"	v
r_swapInterval	src/renderergl1/tr_init.c	/^cvar_t	*r_swapInterval;$/;"	v
r_swapInterval	src/renderergl2/tr_init.c	/^cvar_t	*r_swapInterval;$/;"	v
r_textureMode	src/renderergl1/tr_init.c	/^cvar_t	*r_textureMode;$/;"	v
r_textureMode	src/renderergl2/tr_init.c	/^cvar_t	*r_textureMode;$/;"	v
r_texturebits	src/renderergl1/tr_init.c	/^cvar_t	*r_texturebits;$/;"	v
r_texturebits	src/renderergl2/tr_init.c	/^cvar_t	*r_texturebits;$/;"	v
r_toneMap	src/renderergl2/tr_init.c	/^cvar_t  *r_toneMap;$/;"	v
r_tonemapGamma	src/renderergl2/tr_init.c	/^cvar_t  *r_tonemapGamma;$/;"	v
r_uiFullScreen	src/renderergl1/tr_init.c	/^cvar_t	*r_uiFullScreen;$/;"	v
r_uiFullScreen	src/renderergl2/tr_init.c	/^cvar_t	*r_uiFullScreen;$/;"	v
r_verbose	src/renderergl1/tr_init.c	/^cvar_t	*r_verbose;$/;"	v
r_verbose	src/renderergl2/tr_init.c	/^cvar_t	*r_verbose;$/;"	v
r_vertexLight	src/renderergl1/tr_init.c	/^cvar_t	*r_vertexLight;$/;"	v
r_vertexLight	src/renderergl2/tr_init.c	/^cvar_t	*r_vertexLight;$/;"	v
r_width	src/renderergl1/tr_init.c	/^cvar_t	*r_width;$/;"	v
r_width	src/renderergl2/tr_init.c	/^cvar_t	*r_width;$/;"	v
r_znear	src/renderergl1/tr_init.c	/^cvar_t	*r_znear;$/;"	v
r_znear	src/renderergl2/tr_init.c	/^cvar_t	*r_znear;$/;"	v
r_zproj	src/renderergl1/tr_init.c	/^cvar_t	*r_zproj;$/;"	v
r_zproj	src/renderergl2/tr_init.c	/^cvar_t	*r_zproj;$/;"	v
radius	src/cgame/cg_local.h	/^  pLerpValues_t     radius;$/;"	m	struct:particle_s
radius	src/cgame/cg_local.h	/^  pLerpValues_t   radius;$/;"	m	struct:baseParticle_s
radius	src/qcommon/cm_local.h	/^	float		radius;$/;"	m	struct:__anon442
radius	src/qcommon/qfiles.h	/^	float		radius;			\/\/ dist from localOrigin to corner$/;"	m	struct:__anon399
radius	src/qcommon/qfiles.h	/^	float		radius;$/;"	m	struct:md3Frame_s
radius	src/qcommon/qfiles.h	/^        float           radius;			\/\/ dist from localOrigin to corner$/;"	m	struct:__anon401
radius	src/renderercommon/iqm.h	/^    float xyradius, radius;$/;"	m	struct:iqmbounds
radius	src/renderercommon/tr_types.h	/^	float		radius;$/;"	m	struct:__anon114
radius	src/renderergl1/tr_local.h	/^	float			radius;$/;"	m	struct:__anon153
radius	src/renderergl1/tr_local.h	/^	float	radius;$/;"	m	struct:dlight_s
radius	src/renderergl2/tr_local.h	/^	float			radius;$/;"	m	struct:cullinfo_s
radius	src/renderergl2/tr_local.h	/^	float	radius;$/;"	m	struct:dlight_s
radius	src/renderergl2/tr_local.h	/^	float           radius;$/;"	m	struct:__anon50
radixBuffer	src/cgame/cg_particles.c	/^static particle_t           *radixBuffer[ MAX_PARTICLES ];$/;"	v	file:
ralloc	src/tools/lcc/src/gen.c	/^static void ralloc(Node p) {$/;"	f	file:
rand	src/game/bg_lib.c	/^int rand( void )$/;"	f
randDisplacement	src/cgame/cg_local.h	/^  vec3_t          randDisplacement;$/;"	m	struct:baseParticle_s
randFrac	src/cgame/cg_local.h	/^  float randFrac;$/;"	m	struct:pLerpValues_s
randSeed	src/game/bg_lib.c	/^static int randSeed = 0;$/;"	v	file:
random	src/game/g_local.h	/^  float             random;$/;"	m	struct:gentity_s
random	src/qcommon/q_shared.h	729;"	d
randomBlob	src/server/sqlite3.c	/^static void randomBlob($/;"	f	file:
randomFill	src/server/sqlite3.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFunc	src/server/sqlite3.c	/^static void randomFunc($/;"	f	file:
randomness	src/server/sqlite3.c	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	file:
randomnessPid	src/server/sqlite3.c	/^static pid_t randomnessPid = 0;$/;"	v	file:
range	src/tools/lcc/src/gen.c	/^int range(Node p, int lo, int hi) {$/;"	f
range	src/ui/ui_shared.h	/^  float range;                   \/\/$/;"	m	struct:editFieldDef_s
rangeMarker	src/game/g_local.h	/^  gentity_t         *rangeMarker;$/;"	m	struct:gentity_s
rangeMarkerType_t	src/game/bg_public.h	/^} rangeMarkerType_t;$/;"	t	typeref:enum:__anon338
rate	src/client/cl_avi.c	/^  int rate;$/;"	m	struct:audioFormat_s	file:
rate	src/client/snd_codec.h	/^	int rate;$/;"	m	struct:snd_info_s
rate	src/client/snd_local.h	/^	int			rate;$/;"	m	struct:__anon95
rate	src/server/server.h	/^	int				rate;				\/\/ bytes \/ second$/;"	m	struct:client_s
rateDelayed	src/server/server.h	/^	qboolean		rateDelayed;		\/\/ true if nextSnapshotTime was set based on rate instead of snapshotMsec$/;"	m	struct:client_s
rawAngles	src/cgame/cg_local.h	/^  vec3_t                rawAngles;$/;"	m	struct:centity_s
rawOrigin	src/cgame/cg_local.h	/^  vec3_t                rawOrigin;$/;"	m	struct:centity_s
rawPlayerNames	src/ui/ui_local.h	/^  char rawPlayerNames[MAX_CLIENTS][MAX_NAME_LENGTH];$/;"	m	struct:__anon518
rawTeamNames	src/ui/ui_local.h	/^  char rawTeamNames[MAX_CLIENTS][MAX_NAME_LENGTH];$/;"	m	struct:__anon518
rb_surfaceTable	src/renderergl1/tr_surface.c	/^void (*rb_surfaceTable[SF_NUM_SURFACE_TYPES])( void *) = {$/;"	v
rb_surfaceTable	src/renderergl2/tr_surface.c	/^void (*rb_surfaceTable[SF_NUM_SURFACE_TYPES])( void *) = {$/;"	v
rbuAllocateIterArrays	src/server/sqlite3.c	/^static void rbuAllocateIterArrays(sqlite3rbu *p, RbuObjIter *pIter, int nCol){$/;"	f	file:
rbuBadControlError	src/server/sqlite3.c	/^static void rbuBadControlError(sqlite3rbu *p){$/;"	f	file:
rbuCaptureDbWrite	src/server/sqlite3.c	/^static int rbuCaptureDbWrite(sqlite3rbu *pRbu, i64 iOff){$/;"	f	file:
rbuCaptureWalRead	src/server/sqlite3.c	/^static int rbuCaptureWalRead(sqlite3rbu *pRbu, i64 iOff, int iAmt){$/;"	f	file:
rbuCheckpointFrame	src/server/sqlite3.c	/^static void rbuCheckpointFrame(sqlite3rbu *p, RbuFrame *pFrame){$/;"	f	file:
rbuCreateImposterTable	src/server/sqlite3.c	/^static void rbuCreateImposterTable(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable2	src/server/sqlite3.c	/^static void rbuCreateImposterTable2(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateVfs	src/server/sqlite3.c	/^static void rbuCreateVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeleteOalFile	src/server/sqlite3.c	/^static void rbuDeleteOalFile(sqlite3rbu *p){$/;"	f	file:
rbuDeleteVfs	src/server/sqlite3.c	/^static void rbuDeleteVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeltaApply	src/server/sqlite3.c	/^static int rbuDeltaApply($/;"	f	file:
rbuDeltaChecksum	src/server/sqlite3.c	/^static unsigned int rbuDeltaChecksum(const char *zIn, size_t N){$/;"	f	file:
rbuDeltaGetInt	src/server/sqlite3.c	/^static unsigned int rbuDeltaGetInt(const char **pz, int *pLen){$/;"	f	file:
rbuDeltaOutputSize	src/server/sqlite3.c	/^static int rbuDeltaOutputSize(const char *zDelta, int lenDelta){$/;"	f	file:
rbuEditErrmsg	src/server/sqlite3.c	/^static void rbuEditErrmsg(sqlite3rbu *p){$/;"	f	file:
rbuFileSuffix3	src/server/sqlite3.c	/^static void rbuFileSuffix3(const char *zBase, char *z){$/;"	f	file:
rbuFinalize	src/server/sqlite3.c	/^static void rbuFinalize(sqlite3rbu *p, sqlite3_stmt *pStmt){$/;"	f	file:
rbuFindMaindb	src/server/sqlite3.c	/^static rbu_file *rbuFindMaindb(rbu_vfs *pRbuVfs, const char *zWal){$/;"	f	file:
rbuFossilDeltaFunc	src/server/sqlite3.c	/^static void rbuFossilDeltaFunc($/;"	f	file:
rbuFreeState	src/server/sqlite3.c	/^static void rbuFreeState(RbuState *p){$/;"	f	file:
rbuGetU32	src/server/sqlite3.c	/^static u32 rbuGetU32(u8 *aBuf){$/;"	f	file:
rbuGetUpdateStmt	src/server/sqlite3.c	/^static int rbuGetUpdateStmt($/;"	f	file:
rbuIncrSchemaCookie	src/server/sqlite3.c	/^static void rbuIncrSchemaCookie(sqlite3rbu *p){$/;"	f	file:
rbuIndexCntFunc	src/server/sqlite3.c	/^static void rbuIndexCntFunc($/;"	f	file:
rbuInitPhaseOneSteps	src/server/sqlite3.c	/^static void rbuInitPhaseOneSteps(sqlite3rbu *p){$/;"	f	file:
rbuLoadState	src/server/sqlite3.c	/^static RbuState *rbuLoadState(sqlite3rbu *p){$/;"	f	file:
rbuLockDatabase	src/server/sqlite3.c	/^static void rbuLockDatabase(sqlite3rbu *p){$/;"	f	file:
rbuMPrintf	src/server/sqlite3.c	/^static char *rbuMPrintf(sqlite3rbu *p, const char *zFmt, ...){$/;"	f	file:
rbuMPrintfExec	src/server/sqlite3.c	/^static int rbuMPrintfExec(sqlite3rbu *p, sqlite3 *db, const char *zFmt, ...){$/;"	f	file:
rbuMalloc	src/server/sqlite3.c	/^static void *rbuMalloc(sqlite3rbu *p, int nByte){$/;"	f	file:
rbuMoveOalFile	src/server/sqlite3.c	/^static void rbuMoveOalFile(sqlite3rbu *p){$/;"	f	file:
rbuObjIterCacheIndexedCols	src/server/sqlite3.c	/^static void rbuObjIterCacheIndexedCols(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheTableInfo	src/server/sqlite3.c	/^static int rbuObjIterCacheTableInfo(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterClearStatements	src/server/sqlite3.c	/^static void rbuObjIterClearStatements(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFinalize	src/server/sqlite3.c	/^static void rbuObjIterFinalize(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFirst	src/server/sqlite3.c	/^static int rbuObjIterFirst(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFreeCols	src/server/sqlite3.c	/^static void rbuObjIterFreeCols(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterGetBindlist	src/server/sqlite3.c	/^static char *rbuObjIterGetBindlist(sqlite3rbu *p, int nBind){$/;"	f	file:
rbuObjIterGetCollist	src/server/sqlite3.c	/^static char *rbuObjIterGetCollist($/;"	f	file:
rbuObjIterGetIndexCols	src/server/sqlite3.c	/^static char *rbuObjIterGetIndexCols($/;"	f	file:
rbuObjIterGetOldlist	src/server/sqlite3.c	/^static char *rbuObjIterGetOldlist($/;"	f	file:
rbuObjIterGetSetlist	src/server/sqlite3.c	/^static char *rbuObjIterGetSetlist($/;"	f	file:
rbuObjIterGetWhere	src/server/sqlite3.c	/^static char *rbuObjIterGetWhere($/;"	f	file:
rbuObjIterNext	src/server/sqlite3.c	/^static int rbuObjIterNext(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterPrepareAll	src/server/sqlite3.c	/^static int rbuObjIterPrepareAll($/;"	f	file:
rbuObjIterPrepareTmpInsert	src/server/sqlite3.c	/^static void rbuObjIterPrepareTmpInsert($/;"	f	file:
rbuOpenDatabase	src/server/sqlite3.c	/^static void rbuOpenDatabase(sqlite3rbu *p){$/;"	f	file:
rbuOpenDbhandle	src/server/sqlite3.c	/^static sqlite3 *rbuOpenDbhandle(sqlite3rbu *p, const char *zName){$/;"	f	file:
rbuSaveState	src/server/sqlite3.c	/^static void rbuSaveState(sqlite3rbu *p, int eStage){$/;"	f	file:
rbuSetupCheckpoint	src/server/sqlite3.c	/^static void rbuSetupCheckpoint(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupOal	src/server/sqlite3.c	/^static void rbuSetupOal(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuShmChecksum	src/server/sqlite3.c	/^static i64 rbuShmChecksum(sqlite3rbu *p){$/;"	f	file:
rbuStep	src/server/sqlite3.c	/^static int rbuStep(sqlite3rbu *p){$/;"	f	file:
rbuStepOneOp	src/server/sqlite3.c	/^static void rbuStepOneOp(sqlite3rbu *p, int eType){$/;"	f	file:
rbuStepType	src/server/sqlite3.c	/^static int rbuStepType(sqlite3rbu *p, const char **pzMask){$/;"	f	file:
rbuStrCompare	src/server/sqlite3.c	/^static int rbuStrCompare(const char *z1, const char *z2){$/;"	f	file:
rbuStrndup	src/server/sqlite3.c	/^static char *rbuStrndup(const char *zStr, int *pRc){$/;"	f	file:
rbuTableType	src/server/sqlite3.c	/^static void rbuTableType($/;"	f	file:
rbuTargetNameFunc	src/server/sqlite3.c	/^static void rbuTargetNameFunc($/;"	f	file:
rbuTmpInsertFunc	src/server/sqlite3.c	/^static void rbuTmpInsertFunc($/;"	f	file:
rbuUnlockShm	src/server/sqlite3.c	/^static void rbuUnlockShm(rbu_file *p){$/;"	f	file:
rbuVfsAccess	src/server/sqlite3.c	/^static int rbuVfsAccess($/;"	f	file:
rbuVfsCheckReservedLock	src/server/sqlite3.c	/^static int rbuVfsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
rbuVfsClose	src/server/sqlite3.c	/^static int rbuVfsClose(sqlite3_file *pFile){$/;"	f	file:
rbuVfsCurrentTime	src/server/sqlite3.c	/^static int rbuVfsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
rbuVfsDelete	src/server/sqlite3.c	/^static int rbuVfsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
rbuVfsDeviceCharacteristics	src/server/sqlite3.c	/^static int rbuVfsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
rbuVfsDlClose	src/server/sqlite3.c	/^static void rbuVfsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
rbuVfsDlError	src/server/sqlite3.c	/^static void rbuVfsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
rbuVfsDlOpen	src/server/sqlite3.c	/^static void *rbuVfsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
rbuVfsDlSym	src/server/sqlite3.c	/^static void (*rbuVfsDlSym($/;"	f	file:
rbuVfsFileControl	src/server/sqlite3.c	/^static int rbuVfsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
rbuVfsFileSize	src/server/sqlite3.c	/^static int rbuVfsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
rbuVfsFullPathname	src/server/sqlite3.c	/^static int rbuVfsFullPathname($/;"	f	file:
rbuVfsGetLastError	src/server/sqlite3.c	/^static int rbuVfsGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
rbuVfsLock	src/server/sqlite3.c	/^static int rbuVfsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsOpen	src/server/sqlite3.c	/^static int rbuVfsOpen($/;"	f	file:
rbuVfsRandomness	src/server/sqlite3.c	/^static int rbuVfsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
rbuVfsRead	src/server/sqlite3.c	/^static int rbuVfsRead($/;"	f	file:
rbuVfsSectorSize	src/server/sqlite3.c	/^static int rbuVfsSectorSize(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmBarrier	src/server/sqlite3.c	/^static void rbuVfsShmBarrier(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmLock	src/server/sqlite3.c	/^static int rbuVfsShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
rbuVfsShmMap	src/server/sqlite3.c	/^static int rbuVfsShmMap($/;"	f	file:
rbuVfsShmUnmap	src/server/sqlite3.c	/^static int rbuVfsShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
rbuVfsSleep	src/server/sqlite3.c	/^static int rbuVfsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
rbuVfsSync	src/server/sqlite3.c	/^static int rbuVfsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
rbuVfsTruncate	src/server/sqlite3.c	/^static int rbuVfsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
rbuVfsUnlock	src/server/sqlite3.c	/^static int rbuVfsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsWrite	src/server/sqlite3.c	/^static int rbuVfsWrite($/;"	f	file:
rbuWinUtf8ToUnicode	src/server/sqlite3.c	/^static LPWSTR rbuWinUtf8ToUnicode(const char *zFilename){$/;"	f	file:
rbuWithoutRowidPK	src/server/sqlite3.c	/^static char *rbuWithoutRowidPK(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbu_file	src/server/sqlite3.c	/^struct rbu_file {$/;"	s	file:
rbu_file	src/server/sqlite3.c	/^typedef struct rbu_file rbu_file;$/;"	t	typeref:struct:rbu_file	file:
rbu_vfs	src/server/sqlite3.c	/^struct rbu_vfs {$/;"	s	file:
rbu_vfs	src/server/sqlite3.c	/^typedef struct rbu_vfs rbu_vfs;$/;"	t	typeref:struct:rbu_vfs	file:
rc	src/server/sqlite3.c	/^  int rc;                         \/* Current error code *\/$/;"	m	struct:Fts5Index	file:
rc	src/server/sqlite3.c	/^  int rc;                         \/* Value returned by last rbu_step() call *\/$/;"	m	struct:sqlite3rbu	file:
rc	src/server/sqlite3.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	src/server/sqlite3.c	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe	file:
rc	src/server/sqlite3.c	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse	file:
rc	src/server/sqlite3.c	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon200	file:
rc	src/server/sqlite3.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
rc	src/server/sqlite3.c	/^  int rc;$/;"	m	struct:Fts5Parse	file:
rc	src/server/sqlite3.c	/^  int rc;$/;"	m	struct:TokenCtx	file:
rcApp	src/server/sqlite3.c	/^  int rcApp;              \/* errcode set by sqlite3_result_error_code() *\/$/;"	m	struct:Vdbe	file:
rcc	src/tools/lcc/doc/install.html	/^<h2><a NAME="rcc">Building the Compiler and Accessories<\/a><\/h2>$/;"	a
rconAddress	src/client/cl_main.c	/^cvar_t	*rconAddress;$/;"	v
rcon_client_password	src/client/cl_main.c	/^cvar_t	*rcon_client_password;$/;"	v
rcsid	src/game/bg_lib.c	/^static const char rcsid[] =$/;"	v	file:
rcsid	src/tools/lcc/cpp/cpp.c	/^char rcsid[] = "cpp.c - faked rcsid";$/;"	v
rcsid	src/tools/lcc/etc/lcc.c	/^static char rcsid[] = "Id: dummy rcsid";$/;"	v	file:
rcsid	src/tools/lcc/lburg/lburg.c	/^static char rcsid[] = "lburg.c - faked rcsid";$/;"	v	file:
rcsid	src/tools/lcc/src/main.c	/^static char rcsid[] = "main.c - faked rcsid";$/;"	v	file:
rd_buffer	src/qcommon/common.c	/^static char	*rd_buffer;$/;"	v	file:
rd_buffersize	src/qcommon/common.c	/^static int	rd_buffersize;$/;"	v	file:
rd_flush	src/qcommon/common.c	/^static void	(*rd_flush)( char *buffer );$/;"	v	file:
rdflags	src/renderercommon/tr_types.h	/^	int			rdflags;			\/\/ RDF_NOWORLDMODEL, etc$/;"	m	struct:__anon115
rdflags	src/renderergl1/tr_local.h	/^	int			rdflags;			\/\/ RDF_NOWORLDMODEL, etc$/;"	m	struct:__anon147
rdflags	src/renderergl2/tr_local.h	/^	int			rdflags;			\/\/ RDF_NOWORLDMODEL, etc$/;"	m	struct:__anon39
re	src/cgame/cg_local.h	/^  refEntity_t       re;     \/\/FIXME: should be pointers?$/;"	m	struct:attachment_s
re	src/client/cl_main.c	/^refexport_t	re;$/;"	v
reType	src/renderercommon/tr_types.h	/^	refEntityType_t	reType;$/;"	m	struct:__anon114
reach	src/tools/lcc/lburg/lburg.c	/^static void reach(Tree t) {$/;"	f	file:
reachable	src/tools/lcc/src/stmt.c	/^int reachable(int kind) {$/;"	f
reached	src/game/g_local.h	/^  void              (*reached)( gentity_t *self );  \/\/ movers call this when hitting endpoint$/;"	m	struct:gentity_s
reached	src/tools/lcc/lburg/lburg.h	/^	int reached;		\/* 1 iff reached from start nonterminal *\/$/;"	m	struct:nonterm
read	src/client/snd_codec.h	/^	CODEC_READ read;$/;"	m	struct:snd_codec_s
read32bits	src/server/sqlite3.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
readCoord	src/server/sqlite3.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readDbPage	src/server/sqlite3.c	/^static int readDbPage(PgHdr *pPg, u32 iFrame){$/;"	f	file:
readFloat	src/renderercommon/tr_font.c	/^float readFloat( void ) {$/;"	f
readInt	src/renderercommon/tr_font.c	/^int readInt( void ) {$/;"	f
readInt16	src/server/sqlite3.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt64	src/server/sqlite3.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readJournalHdr	src/server/sqlite3.c	/^static int readJournalHdr($/;"	f	file:
readLock	src/server/sqlite3.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readMasterJournal	src/server/sqlite3.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readOnly	src/server/sqlite3.c	/^  bft readOnly:1;         \/* True for statements that do not write *\/$/;"	m	struct:Vdbe	file:
readOnly	src/server/sqlite3.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	src/server/sqlite3.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
readPos	src/sys/con_log.c	/^static unsigned int  readPos = 0;$/;"	v	file:
readQuadInfo	src/client/cl_cin.c	/^static void readQuadInfo( byte *qData )$/;"	f	file:
readcount	src/qcommon/qcommon.h	/^	int		readcount;$/;"	m	struct:__anon418
reader	src/server/sqlite3.c	/^  Fts5LookaheadReader reader;     \/* Input iterator *\/$/;"	m	struct:Fts5NearTrimmer	file:
readpoint	src/server/sqlite3.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readsTable	src/server/sqlite3.c	/^static int readsTable(Parse *p, int iDb, Table *pTab){$/;"	f	file:
readsreg	src/tools/lcc/src/gen.c	4;"	d	file:
readySound	src/cgame/cg_local.h	/^  sfxHandle_t       readySound;$/;"	m	struct:weaponInfo_s
readyToExit	src/game/g_local.h	/^  qboolean            readyToExit;    \/\/ wishes to leave the intermission$/;"	m	struct:gclient_s
readyToExit	src/game/g_local.h	/^  qboolean          readyToExit;                  \/\/ at least one client wants to exit$/;"	m	struct:__anon316
readyToPlay	src/game/g_local.h	/^  int               readyToPlay[ NUM_TEAMS ];$/;"	m	struct:__anon316
readyToPlay	src/game/g_local.h	/^  qboolean            readyToPlay;$/;"	m	struct:__anon311
realFrametime	src/client/client.h	/^	int			realFrametime;		\/\/ ignoring pause, so console always works$/;"	m	struct:__anon90
realLight	src/cgame/cg_local.h	/^  qboolean                realLight;$/;"	m	struct:baseTrailBeam_s
realLight	src/cgame/cg_local.h	/^  qboolean        realLight;$/;"	m	struct:baseParticle_s
realTime	src/ui/ui_shared.h	/^  int        realTime;$/;"	m	struct:__anon506
realloc	src/server/sqlite3.c	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	file:
realloc64	src/server/sqlite3.c	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
realtime	src/client/client.h	/^	int			realtime;			\/\/ ignores pause$/;"	m	struct:__anon90
reason	src/game/g_admin.h	/^  char reason[ MAX_ADMIN_BAN_REASON ];$/;"	m	struct:g_admin_ban
rebuildPage	src/server/sqlite3.c	/^static int rebuildPage($/;"	f	file:
receivedAlternateMasterPackets	src/client/client.h	/^	unsigned int		receivedAlternateMasterPackets[3]; \/\/ bitfield$/;"	m	struct:__anon90
recordFunc	src/server/sqlite3.c	/^static void recordFunc($/;"	f	file:
rect	src/ui/ui_shared.c	/^  rectDef_t rect;$/;"	m	struct:__anon521	file:
rect	src/ui/ui_shared.h	/^  Rectangle rect;                 \/\/ client coord rectangle$/;"	m	struct:__anon499
rectClient	src/ui/ui_shared.h	/^  Rectangle rectClient;           \/\/ screen coord rectangle$/;"	m	struct:__anon499
rectDef_t	src/ui/ui_shared.h	/^rectDef_t;$/;"	t	typeref:struct:__anon498
rectEffects	src/ui/ui_shared.h	/^  Rectangle rectEffects;          \/\/ for various effects$/;"	m	struct:__anon499
rectEffects2	src/ui/ui_shared.h	/^  Rectangle rectEffects2;         \/\/ for various effects$/;"	m	struct:__anon499
recurseQuad	src/client/cl_cin.c	/^static void recurseQuad( long startX, long startY, long quadSize, long xOff, long yOff )$/;"	f	file:
redBuildShader	src/cgame/cg_local.h	/^  qhandle_t   redBuildShader;$/;"	m	struct:__anon251
redirectAddress	src/server/server.h	/^	netadr_t	redirectAddress;			\/\/ for rcon return messages$/;"	m	struct:__anon188
reduce	src/tools/lcc/src/gen.c	/^static void reduce(Node p, int nt) {$/;"	f	file:
ref	src/tools/lcc/src/c.h	/^	float ref;$/;"	m	struct:symbol
refEntityType_t	src/renderercommon/tr_types.h	/^} refEntityType_t;$/;"	t	typeref:enum:__anon113
refEntity_t	src/renderercommon/tr_types.h	/^} refEntity_t;$/;"	t	typeref:struct:__anon114
refPosition	src/cgame/cg_local.h	/^  vec3_t                  refPosition;$/;"	m	struct:trailBeamNode_s
refdef	src/cgame/cg_local.h	/^  refdef_t      refdef;$/;"	m	struct:__anon249
refdef	src/renderergl1/tr_local.h	/^	trRefdef_t				refdef;$/;"	m	struct:__anon163
refdef	src/renderergl1/tr_local.h	/^	trRefdef_t	refdef;$/;"	m	struct:__anon162
refdef	src/renderergl1/tr_local.h	/^	trRefdef_t	refdef;$/;"	m	struct:__anon171
refdef	src/renderergl2/tr_local.h	/^	trRefdef_t				refdef;$/;"	m	struct:__anon63
refdef	src/renderergl2/tr_local.h	/^	trRefdef_t	refdef;$/;"	m	struct:__anon62
refdef	src/renderergl2/tr_local.h	/^	trRefdef_t	refdef;$/;"	m	struct:__anon71
refdef	src/renderergl2/tr_local.h	/^	trRefdef_t	refdef;$/;"	m	struct:__anon77
refdefViewAngles	src/cgame/cg_local.h	/^  vec3_t        refdefViewAngles;                   \/\/ will be converted to refdef.viewaxis$/;"	m	struct:__anon249
refdef_t	src/renderercommon/tr_types.h	/^} refdef_t;$/;"	t	typeref:struct:__anon115
refdefex_t	src/renderergl2/tr_extratypes.h	/^} refdefex_t;$/;"	t	typeref:struct:__anon6
referenced	src/qcommon/files.c	/^	int				referenced;					\/\/ referenced file flags$/;"	m	struct:pack_s	file:
refexport_t	src/renderercommon/tr_public.h	/^} refexport_t;$/;"	t	typeref:struct:__anon108
refimport_t	src/renderercommon/tr_public.h	/^} refimport_t;$/;"	t	typeref:struct:__anon109
refinc	src/tools/lcc/src/expr.c	/^float refinc = 1.0;$/;"	v
refreshActive	src/ui/ui_local.h	/^  qboolean refreshActive;$/;"	m	struct:__anon512
refreshActive	src/ui/ui_local.h	/^  qboolean refreshActive;$/;"	m	struct:serverStatus_s
refreshtime	src/ui/ui_local.h	/^  int    refreshtime;$/;"	m	struct:serverStatus_s
refreshtime	src/ui/ui_local.h	/^  int refreshtime;$/;"	m	struct:__anon512
regA1	src/qcommon/vm_powerpc.c	/^	unsigned char regA1;$/;"	m	struct:source_instruction_s	file:
regA2	src/qcommon/vm_powerpc.c	/^	unsigned char regA2;$/;"	m	struct:source_instruction_s	file:
regCtr	src/server/sqlite3.c	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo	file:
regPos	src/qcommon/vm_powerpc.c	/^	unsigned char regPos;$/;"	m	struct:source_instruction_s	file:
regR	src/qcommon/vm_powerpc.c	/^	unsigned char regR;$/;"	m	struct:source_instruction_s	file:
regResult	src/server/sqlite3.c	/^    int regResult;    \/* Registers holding results of a co-routine *\/$/;"	m	struct:SrcList::SrcList_item	file:
regReturn	src/server/sqlite3.c	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item	file:
regReturn	src/server/sqlite3.c	/^  int regReturn;        \/* Register holding block-output return address *\/$/;"	m	struct:SortCtx	file:
regRoot	src/server/sqlite3.c	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse	file:
regRowid	src/server/sqlite3.c	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse	file:
regcount	src/tools/lcc/src/decl.c	/^static int regcount;$/;"	v	file:
regenRate	src/game/bg_public.h	/^  float     regenRate;$/;"	m	struct:__anon349
regenRate	src/game/bg_public.h	/^  int           regenRate;$/;"	m	struct:__anon353
registerFont	src/ui/ui_shared.h	/^  void ( *registerFont ) ( const char *pFontname, int pointSize, fontInfo_t *font );$/;"	m	struct:__anon506
registerModel	src/ui/ui_shared.h	/^  qhandle_t ( *registerModel ) ( const char *p );$/;"	m	struct:__anon506
registerShaderNoMip	src/ui/ui_shared.h	/^  qhandle_t ( *registerShaderNoMip ) ( const char *p );$/;"	m	struct:__anon506
registerSound	src/ui/ui_shared.h	/^  sfxHandle_t ( *registerSound )( const char *name, qboolean compressed );$/;"	m	struct:__anon506
registerTokenizer	src/server/sqlite3.c	/^int registerTokenizer($/;"	f	file:
registerTrace	src/server/sqlite3.c	/^static void registerTrace(int iReg, Mem *p){$/;"	f	file:
registered	src/cgame/cg_local.h	/^  qboolean              registered; \/\/whether or not the assets for this particle have been loaded$/;"	m	struct:baseParticleSystem_s
registered	src/cgame/cg_local.h	/^  qboolean          registered;$/;"	m	struct:weaponInfo_s
registered	src/cgame/cg_local.h	/^  qboolean        registered; \/\/whether or not the assets for this trail have been loaded$/;"	m	struct:baseTrailSystem_s
registered	src/cgame/cg_local.h	/^  qboolean    registered;$/;"	m	struct:upgradeInfo_s
registered	src/renderergl1/tr_local.h	/^	qboolean				registered;		\/\/ cleared at shutdown, set at beginRegistration$/;"	m	struct:__anon163
registered	src/renderergl2/tr_local.h	/^	qboolean				registered;		\/\/ cleared at shutdown, set at beginRegistration$/;"	m	struct:__anon63
registered	src/tools/lcc/src/config.h	/^	unsigned registered:1;$/;"	m	struct:__anon274
registeredCmds	src/cgame/cg_servercmds.c	/^static char   registeredCmds[ 8192 ]; \/\/ cmd1\\0cmd2\\0cmdn\\0\\0$/;"	v	file:
registeredFont	src/renderercommon/tr_font.c	/^static fontInfo_t registeredFont[MAX_FONTS];$/;"	v	file:
registeredFontCount	src/renderercommon/tr_font.c	/^static int registeredFontCount = 0;$/;"	v	file:
registers	src/tools/lcc/src/decl.c	/^static List autos, registers;$/;"	v	file:
regloc	src/tools/lcc/src/gen.c	/^unsigned regloc(Symbol p) {$/;"	f
regnode	src/tools/lcc/src/config.h	/^	Regnode regnode;$/;"	m	struct:__anon277
rehash	src/server/sqlite3.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
reindexDatabases	src/server/sqlite3.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexTable	src/server/sqlite3.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reinsertNodeContent	src/server/sqlite3.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
release	src/qcommon/net_chan.c	/^        int release;$/;"	m	struct:packetQueue_s	file:
releaseAllSavepoints	src/server/sqlite3.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseInodeInfo	src/server/sqlite3.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseMemArray	src/server/sqlite3.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releasePage	src/server/sqlite3.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
releasePageNotNull	src/server/sqlite3.c	/^static void releasePageNotNull(MemPage *pPage){$/;"	f	file:
release_memory	src/server/sqlite3.c	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	file:
reliableAcknowledge	src/client/client.h	/^	int			reliableAcknowledge;		\/\/ the last one the server has executed$/;"	m	struct:__anon87
reliableAcknowledge	src/server/server.h	/^	int				reliableAcknowledge;	\/\/ last acknowledged reliable message$/;"	m	struct:client_s
reliableCommands	src/client/client.h	/^	char		reliableCommands[MAX_RELIABLE_COMMANDS][MAX_STRING_CHARS];$/;"	m	struct:__anon87
reliableCommands	src/server/server.h	/^	char			reliableCommands[MAX_RELIABLE_COMMANDS][MAX_STRING_CHARS];$/;"	m	struct:client_s
reliableSent	src/server/server.h	/^	int				reliableSent;			\/\/ last sent reliable message, not necesarily acknowledged yet$/;"	m	struct:client_s
reliableSequence	src/client/client.h	/^	int			reliableSequence;$/;"	m	struct:__anon87
reliableSequence	src/server/server.h	/^	int				reliableSequence;		\/\/ last added reliable message, not necesarily sent or acknowledged yet$/;"	m	struct:client_s
relink	src/tools/lcc/src/gen.c	10;"	d	file:
reloadTableSchema	src/server/sqlite3.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
reloadTime	src/game/bg_public.h	/^  int       reloadTime;$/;"	m	struct:__anon355
relocate	src/tools/lcc/src/sym.c	/^Symbol relocate(const char *name, Table src, Table dst) {$/;"	f
relocatePage	src/server/sqlite3.c	/^static int relocatePage($/;"	f	file:
remapCount	src/game/g_utils.c	/^int remapCount = 0;$/;"	v
remappedShader	src/renderergl1/tr_local.h	/^  struct shader_s *remappedShader;                  \/\/ current shader this one is remapped too$/;"	m	struct:shader_s	typeref:struct:shader_s::shader_s
remappedShader	src/renderergl2/tr_local.h	/^  struct shader_s *remappedShader;                  \/\/ current shader this one is remapped too$/;"	m	struct:shader_s	typeref:struct:shader_s::shader_s
remappedShaders	src/game/g_utils.c	/^shaderRemap_t remappedShaders[ MAX_SHADER_REMAPS ];$/;"	v
remoteAddress	src/qcommon/qcommon.h	/^	netadr_t	remoteAddress;$/;"	m	struct:__anon422
removeElementGivenHash	src/server/sqlite3.c	/^static void removeElementGivenHash($/;"	f	file:
removeFromBlockedList	src/server/sqlite3.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromSharingList	src/server/sqlite3.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeNode	src/server/sqlite3.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
remove_diacritic	src/server/sqlite3.c	/^static int remove_diacritic(int c){$/;"	f	file:
renameParentFunc	src/server/sqlite3.c	/^static void renameParentFunc($/;"	f	file:
renameTableFunc	src/server/sqlite3.c	/^static void renameTableFunc($/;"	f	file:
renameTriggerFunc	src/server/sqlite3.c	/^static void renameTriggerFunc($/;"	f	file:
renderCommandList_t	src/renderergl1/tr_local.h	/^} renderCommandList_t;$/;"	t	typeref:struct:__anon164
renderCommandList_t	src/renderergl2/tr_local.h	/^} renderCommandList_t;$/;"	t	typeref:struct:__anon64
renderCommand_t	src/renderergl1/tr_local.h	/^} renderCommand_t;$/;"	t	typeref:enum:__anon176
renderCommand_t	src/renderergl2/tr_local.h	/^} renderCommand_t;$/;"	t	typeref:enum:__anon78
renderCubeFbo	src/renderergl2/tr_local.h	/^	FBO_t                   *renderCubeFbo;$/;"	m	struct:__anon63
renderCubeImage	src/renderergl2/tr_local.h	/^	image_t                 *renderCubeImage;$/;"	m	struct:__anon63
renderDepthImage	src/renderergl2/tr_local.h	/^	image_t					*renderDepthImage;$/;"	m	struct:__anon63
renderFbo	src/renderergl2/tr_local.h	/^	FBO_t					*renderFbo;$/;"	m	struct:__anon63
renderImage	src/renderergl2/tr_local.h	/^	image_t					*renderImage;$/;"	m	struct:__anon63
renderLogMsg	src/server/sqlite3.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
renderScene	src/ui/ui_shared.h	/^  void ( *renderScene ) ( const refdef_t *fd );$/;"	m	struct:__anon506
rendererLib	src/client/cl_main.c	/^static void	*rendererLib = NULL;$/;"	v	file:
rendererStarted	src/client/client.h	/^	qboolean	rendererStarted;$/;"	m	struct:__anon90
renderer_string	src/renderercommon/tr_types.h	/^	char					renderer_string[MAX_STRING_CHARS];$/;"	m	struct:__anon120
renderfx	src/renderercommon/tr_types.h	/^	int			renderfx;$/;"	m	struct:__anon114
renderingThirdPerson	src/cgame/cg_local.h	/^  qboolean      renderingThirdPerson;               \/\/ during deaths, chasecams, etc$/;"	m	struct:__anon249
repairRepeatDelay	src/game/bg_public.h	/^  int    repairRepeatDelay;      \/\/ Used for for the construction kit$/;"	m	struct:__anon330
repeatLength	src/cgame/cg_local.h	/^  float                   repeatLength;$/;"	m	struct:baseTrailBeam_s
repeatRate1	src/game/bg_public.h	/^  int       repeatRate1;$/;"	m	struct:__anon355
repeatRate2	src/game/bg_public.h	/^  int       repeatRate2;$/;"	m	struct:__anon355
repeatRate3	src/game/bg_public.h	/^  int       repeatRate3;$/;"	m	struct:__anon355
repeaterUseSound	src/cgame/cg_local.h	/^  sfxHandle_t repeaterUseSound;$/;"	m	struct:__anon251
repeats	src/client/keys.h	/^	int			repeats;		\/\/ if > 1, it is autorepeating$/;"	m	struct:__anon98
replace	src/tools/lcc/etc/lcc.c	/^char *replace(const char *str, int from, int to) {$/;"	f
replace	src/tools/lcc/src/c.h	/^			int replace;$/;"	m	struct:symbol::__anon296::__anon302
replace	src/tools/lcc/src/dag.c	/^static Node replace(Node p) {$/;"	f	file:
replaceFunc	src/server/sqlite3.c	/^static void replaceFunc($/;"	f	file:
replaceLarmour	src/cgame/cg_local.h	/^  qhandle_t replaceLarmour; \/\/ temporary fix$/;"	m	struct:__anon251
report	src/tools/asm/q3asm.c	/^static int report (const char *fmt, ...)$/;"	f	file:
reportError	src/server/sqlite3.c	/^static int reportError(int iErr, int lineno, const char *zType){$/;"	f	file:
reprune	src/tools/lcc/src/gen.c	/^static int reprune(Node *pp, int k, int n, Node p) {$/;"	f	file:
requate	src/tools/lcc/src/gen.c	/^static int requate(Node q) {$/;"	f	file:
reserved	src/renderercommon/tr_image_pcx.c	/^	char	reserved;$/;"	m	struct:__anon124	file:
reserved	src/server/sqlite3.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reserved0	src/renderercommon/tr_image_bmp.c	/^	unsigned reserved0;$/;"	m	struct:__anon110	file:
reset	src/server/sqlite3.c	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
reset	src/tools/lcc/src/dag.c	/^static void reset(void) {$/;"	f	file:
resetAccumulator	src/server/sqlite3.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resetAndCollectError	src/server/sqlite3.c	/^static int resetAndCollectError(sqlite3_stmt *pStmt, char **pzErrmsg){$/;"	f	file:
resetString	src/qcommon/q_shared.h	/^	char			*resetString;		\/\/ cvar_restart will reset to this value$/;"	m	struct:cvar_s
reset_auto_extension	src/server/sqlite3.c	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines	file:
resetonfeederchange	src/ui/ui_shared.h	/^  qboolean resetonfeederchange;$/;"	m	struct:listBoxDef_s
resizeIndexObject	src/server/sqlite3.c	/^static int resizeIndexObject(sqlite3 *db, Index *pIdx, int N){$/;"	f	file:
resolutionIndex	src/ui/ui_local.h	/^  int           resolutionIndex;$/;"	m	struct:__anon518
resolution_t	src/ui/ui_local.h	/^resolution_t;$/;"	t	typeref:struct:__anon517
resolutions	src/ui/ui_local.h	/^  resolution_t  resolutions[ MAX_RESOLUTIONS ];$/;"	m	struct:__anon518
resolveAlias	src/server/sqlite3.c	/^static void resolveAlias($/;"	f	file:
resolveAsName	src/server/sqlite3.c	/^static int resolveAsName($/;"	f	file:
resolveAttachExpr	src/server/sqlite3.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveCompoundOrderBy	src/server/sqlite3.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveExprStep	src/server/sqlite3.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveOrderByTermToExprList	src/server/sqlite3.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderGroupBy	src/server/sqlite3.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOutOfRangeError	src/server/sqlite3.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveP2Values	src/server/sqlite3.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveSelectStep	src/server/sqlite3.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
respawn	src/game/g_client.c	/^void respawn( gentity_t *ent )$/;"	f
respawnTime	src/game/g_local.h	/^  int                 respawnTime;      \/\/ can respawn when time > this$/;"	m	struct:gclient_s
restartTeam	src/game/g_local.h	/^  team_t            restartTeam; \/\/for !restart keepteams and !restart switchteams$/;"	m	struct:__anon310
restartTime	src/server/server.h	/^	int				restartTime;$/;"	m	struct:__anon184
restarted	src/game/g_local.h	/^  qboolean          restarted;                    \/\/ waiting for a map_restart to fire$/;"	m	struct:__anon316
restartedServerId	src/server/server.h	/^	int				restartedServerId;	\/\/ serverId before a map_restart$/;"	m	struct:__anon184
restarting	src/server/server.h	/^	qboolean		restarting;			\/\/ if true, send configstring changes during SS_LOADING$/;"	m	struct:__anon184
restoreCursorPosition	src/server/sqlite3.c	56613;"	d	file:
restricted	src/server/server.h	/^	qboolean			restricted; \/\/ if true, don't send to clientList$/;"	m	struct:configString_s
result_blob	src/server/sqlite3.c	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_blob64	src/server/sqlite3.c	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
result_double	src/server/sqlite3.c	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	file:
result_error	src/server/sqlite3.c	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error16	src/server/sqlite3.c	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_code	src/server/sqlite3.c	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_nomem	src/server/sqlite3.c	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_toobig	src/server/sqlite3.c	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_int	src/server/sqlite3.c	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_int64	src/server/sqlite3.c	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
result_null	src/server/sqlite3.c	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_subtype	src/server/sqlite3.c	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines	file:
result_text	src/server/sqlite3.c	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16	src/server/sqlite3.c	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16be	src/server/sqlite3.c	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16le	src/server/sqlite3.c	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text64	src/server/sqlite3.c	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
result_value	src/server/sqlite3.c	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob	src/server/sqlite3.c	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob64	src/server/sqlite3.c	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
resynch	src/tools/lcc/src/input.c	/^static void resynch(void) {$/;"	f	file:
retRangeStart	src/server/sqlite3.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
retcode	src/tools/lcc/src/stmt.c	/^void retcode(Tree p) {$/;"	f
retrieved	src/client/cl_main.c	/^	qboolean retrieved;$/;"	m	struct:serverStatus_s	file:
returnSingleInt	src/server/sqlite3.c	/^static void returnSingleInt(Vdbe *v, const char *zLabel, i64 value){$/;"	f	file:
returnSingleText	src/server/sqlite3.c	/^static void returnSingleText($/;"	f	file:
returns	src/tools/lcc/src/c.h	/^	List returns;$/;"	m	struct:__anon284
retv	src/tools/lcc/src/decl.c	/^Symbol retv;		\/* return value location for structs *\/$/;"	v
retype	src/tools/lcc/src/expr.c	/^Tree retype(Tree p, Type ty) {$/;"	f
reusable	src/server/sqlite3.c	/^    unsigned reusable :1;   \/* Constant expression is reusable *\/$/;"	m	struct:ExprList::ExprList_item	file:
reuse	src/tools/lcc/src/gen.c	/^static Node reuse(Node p, int nt) {$/;"	f	file:
revLoop	src/server/sqlite3.c	/^  Bitmask revLoop;      \/* aLoop[]s that should be reversed for ORDER BY *\/$/;"	m	struct:WherePath	file:
revMask	src/server/sqlite3.c	/^  Bitmask revMask;          \/* Mask of ORDER BY terms that need reversing *\/$/;"	m	struct:WhereInfo	file:
reversed	src/game/bg_public.h	/^  int   reversed;     \/\/ true if animation is reversed$/;"	m	struct:animation_s
rewardCount	src/cgame/cg_local.h	/^  int           rewardCount[ MAX_REWARDSTACK ];$/;"	m	struct:__anon249
rewardShader	src/cgame/cg_local.h	/^  qhandle_t     rewardShader[ MAX_REWARDSTACK ];$/;"	m	struct:__anon249
rewardSound	src/cgame/cg_local.h	/^  qhandle_t     rewardSound[ MAX_REWARDSTACK ];$/;"	m	struct:__anon249
rewardStack	src/cgame/cg_local.h	/^  int           rewardStack;$/;"	m	struct:__anon249
rewardTime	src/cgame/cg_local.h	/^  int           rewardTime;$/;"	m	struct:__anon249
rewardTime	src/game/g_local.h	/^  int                 rewardTime;       \/\/ clear the EF_AWARD_IMPRESSIVE, etc when time > this$/;"	m	struct:gclient_s
rewrite	src/tools/lcc/src/gen.c	/^static void rewrite(Node p) {$/;"	f	file:
rgbGen	src/renderergl1/tr_local.h	/^	colorGen_t		rgbGen;$/;"	m	struct:__anon142
rgbGen	src/renderergl2/tr_local.h	/^	colorGen_t		rgbGen;$/;"	m	struct:__anon26
rgbWave	src/renderergl1/tr_local.h	/^	waveForm_t		rgbWave;$/;"	m	struct:__anon142
rgbWave	src/renderergl2/tr_local.h	/^	waveForm_t		rgbWave;$/;"	m	struct:__anon26
rgba	src/renderergl1/tr_local.h	/^	GLboolean rgba[4];$/;"	m	struct:__anon174
rgba	src/renderergl2/tr_local.h	/^	GLboolean rgba[4];$/;"	m	struct:__anon74
ri	src/renderergl1/tr_main.c	/^refimport_t	ri;$/;"	v
ri	src/renderergl2/tr_main.c	/^refimport_t	ri;$/;"	v
right	src/client/snd_local.h	/^	int			right;$/;"	m	struct:__anon92
right	src/game/bg_local.h	/^  vec3_t    forward, right, up;$/;"	m	struct:__anon324
right	src/game/g_weapon.c	/^static  vec3_t  forward, right, up;$/;"	v	file:
right	src/qcommon/qcommon.h	/^	struct	nodetype *left, *right, *parent; \/* tree structure *\/ $/;"	m	struct:nodetype	typeref:struct:nodetype::
right	src/tools/lcc/lburg/lburg.h	/^	Tree left, right;	\/* operands *\/$/;"	m	struct:tree
rightMoveTime	src/cgame/cg_local.h	/^  int           rightMoveTime;$/;"	m	struct:__anon249
rightkid	src/tools/lcc/src/expr.c	/^Tree rightkid(Tree p) {$/;"	f
rightmove	src/qcommon/q_shared.h	/^	signed char	forwardmove, rightmove, upmove;$/;"	m	struct:usercmd_s
rightvol	src/client/snd_local.h	/^	int			rightvol;		\/\/ 0-255 volume after spatialization$/;"	m	struct:__anon94
rint	src/game/bg_lib.c	/^double rint( double v )$/;"	f
rm	src/tools/lcc/etc/lcc.c	/^static void rm(List list) {$/;"	f	file:
rmap	src/tools/lcc/src/config.h	/^	Symbol (*rmap)(int);$/;"	m	struct:__anon273
rmlist	src/tools/lcc/etc/lcc.c	/^static List rmlist;		\/* list of files to remove *\/$/;"	v	file:
rmtypes	src/tools/lcc/src/types.c	/^void rmtypes(int lev) {$/;"	f
robustFchown	src/server/sqlite3.c	/^static int robustFchown(int fd, uid_t uid, gid_t gid){$/;"	f	file:
robust_close	src/server/sqlite3.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_flock	src/server/sqlite3.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	src/server/sqlite3.c	29751;"	d	file:
robust_ftruncate	src/server/sqlite3.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_open	src/server/sqlite3.c	/^static int robust_open(const char *z, int f, mode_t m){$/;"	f	file:
rollback_hook	src/server/sqlite3.c	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
root	src/tools/lcc/src/tree.c	/^Tree root(Tree p) {$/;"	f
root1	src/tools/lcc/src/tree.c	/^static Tree root1(Tree p) {$/;"	f	file:
rootOnly	src/server/sqlite3.c	/^  u8 rootOnly;                    \/* True for a root-only reader *\/$/;"	m	struct:Fts3SegReader	file:
roqF0	src/client/cl_cin.c	/^	long				roqF0;$/;"	m	struct:__anon100	file:
roqF1	src/client/cl_cin.c	/^	long				roqF1;$/;"	m	struct:__anon100	file:
roqFPS	src/client/cl_cin.c	/^	long				roqFPS;$/;"	m	struct:__anon100	file:
roq_flags	src/client/cl_cin.c	/^	long				roq_flags;$/;"	m	struct:__anon100	file:
roq_id	src/client/cl_cin.c	/^	unsigned int		roq_id;$/;"	m	struct:__anon100	file:
rotAngle	src/cgame/cg_local.h	/^  float     rotAngle;$/;"	m	struct:__anon240
rotAxis	src/cgame/cg_local.h	/^  vec3_t    rotAxis;$/;"	m	struct:__anon240
rotate	src/renderercommon/iqm.h	/^    float translate[3], rotate[4], scale[3];$/;"	m	struct:iqmjoint
rotateSpeed	src/renderergl1/tr_local.h	/^	float			rotateSpeed;$/;"	m	struct:__anon140
rotateSpeed	src/renderergl2/tr_local.h	/^	float			rotateSpeed;$/;"	m	struct:__anon22
rotation	src/cgame/cg_local.h	/^  pLerpValues_t     rotation;$/;"	m	struct:particle_s
rotation	src/cgame/cg_local.h	/^  pLerpValues_t   rotation;$/;"	m	struct:baseParticle_s
rotation	src/renderercommon/tr_types.h	/^	float		rotation;$/;"	m	struct:__anon114
rotationSpeed	src/ui/ui_shared.h	/^  int rotationSpeed;$/;"	m	struct:modelDef_s
rotations	src/game/g_maprotation.c	/^  mapRotation_t   rotations[ MAX_MAP_ROTATIONS ];$/;"	m	struct:mapRotations_s	file:
rotatorAngle	src/game/g_local.h	/^  float             rotatorAngle;$/;"	m	struct:gentity_s
round	src/game/bg_lib.c	/^static long round (LDOUBLE value)$/;"	f	file:
roundFunc	src/server/sqlite3.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
roundup	src/tools/lcc/src/c.h	31;"	d
roundup	src/tools/lcc/src/c.h	32;"	d
rover	src/qcommon/common.c	/^	memblock_t	*rover;$/;"	m	struct:__anon449	file:
rowSetEntryAlloc	src/server/sqlite3.c	/^static struct RowSetEntry *rowSetEntryAlloc(RowSet *p){$/;"	f	file:
rowSetEntryMerge	src/server/sqlite3.c	/^static struct RowSetEntry *rowSetEntryMerge($/;"	f	file:
rowSetEntrySort	src/server/sqlite3.c	/^static struct RowSetEntry *rowSetEntrySort(struct RowSetEntry *pIn){$/;"	f	file:
rowSetListToTree	src/server/sqlite3.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetNDeepTree	src/server/sqlite3.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetToList	src/server/sqlite3.c	/^static void rowSetToList(RowSet *p){$/;"	f	file:
rowSetTreeToList	src/server/sqlite3.c	/^static void rowSetTreeToList($/;"	f	file:
rowid	src/server/sqlite3.c	/^  i64 rowid;                      \/* This table's current rowid value *\/$/;"	m	struct:Fts5VocabCursor	file:
rowidWrite	src/server/sqlite3.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rowlen	src/tools/lcc/cpp/cpp.h	142;"	d
rsFlags	src/server/sqlite3.c	/^  u16 rsFlags;                   \/* Various flags *\/$/;"	m	struct:RowSet	file:
rserr_t	src/sdl/sdl_glimp.c	/^} rserr_t;$/;"	t	typeref:enum:__anon380	file:
rtarget	src/tools/lcc/src/gen.c	/^void rtarget(Node p, int n, Symbol r) {$/;"	f
rtreeBestIndex	src/server/sqlite3.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeCallbackConstraint	src/server/sqlite3.c	/^static int rtreeCallbackConstraint($/;"	f	file:
rtreeClose	src/server/sqlite3.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeColumn	src/server/sqlite3.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeConnect	src/server/sqlite3.c	/^static int rtreeConnect($/;"	f	file:
rtreeCreate	src/server/sqlite3.c	/^static int rtreeCreate($/;"	f	file:
rtreeDeleteRowid	src/server/sqlite3.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDestroy	src/server/sqlite3.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	src/server/sqlite3.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeEnqueue	src/server/sqlite3.c	/^static RtreeSearchPoint *rtreeEnqueue($/;"	f	file:
rtreeEof	src/server/sqlite3.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeFilter	src/server/sqlite3.c	/^static int rtreeFilter($/;"	f	file:
rtreeFreeCallback	src/server/sqlite3.c	/^static void rtreeFreeCallback(void *p){$/;"	f	file:
rtreeInit	src/server/sqlite3.c	/^static int rtreeInit($/;"	f	file:
rtreeInsertCell	src/server/sqlite3.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeLeafConstraint	src/server/sqlite3.c	/^static void rtreeLeafConstraint($/;"	f	file:
rtreeMatchArgFree	src/server/sqlite3.c	/^static void rtreeMatchArgFree(void *pArg){$/;"	f	file:
rtreeModule	src/server/sqlite3.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeNext	src/server/sqlite3.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeNodeOfFirstSearchPoint	src/server/sqlite3.c	/^static RtreeNode *rtreeNodeOfFirstSearchPoint(RtreeCursor *pCur, int *pRC){$/;"	f	file:
rtreeNonleafConstraint	src/server/sqlite3.c	/^static void rtreeNonleafConstraint($/;"	f	file:
rtreeOpen	src/server/sqlite3.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreeQueryStat1	src/server/sqlite3.c	/^static int rtreeQueryStat1(sqlite3 *db, Rtree *pRtree){$/;"	f	file:
rtreeReference	src/server/sqlite3.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeRelease	src/server/sqlite3.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRename	src/server/sqlite3.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRowid	src/server/sqlite3.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeSearchPointCompare	src/server/sqlite3.c	/^static int rtreeSearchPointCompare($/;"	f	file:
rtreeSearchPointFirst	src/server/sqlite3.c	/^static RtreeSearchPoint *rtreeSearchPointFirst(RtreeCursor *pCur){$/;"	f	file:
rtreeSearchPointNew	src/server/sqlite3.c	/^static RtreeSearchPoint *rtreeSearchPointNew($/;"	f	file:
rtreeSearchPointPop	src/server/sqlite3.c	/^static void rtreeSearchPointPop(RtreeCursor *p){$/;"	f	file:
rtreeSearchPointSwap	src/server/sqlite3.c	/^static void rtreeSearchPointSwap(RtreeCursor *p, int i, int j){$/;"	f	file:
rtreeSqlInit	src/server/sqlite3.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeStepToLeaf	src/server/sqlite3.c	/^static int rtreeStepToLeaf(RtreeCursor *pCur){$/;"	f	file:
rtreeUpdate	src/server/sqlite3.c	/^static int rtreeUpdate($/;"	f	file:
rtreeValueDown	src/server/sqlite3.c	/^static RtreeValue rtreeValueDown(sqlite3_value *v){$/;"	f	file:
rtreeValueUp	src/server/sqlite3.c	/^static RtreeValue rtreeValueUp(sqlite3_value *v){$/;"	f	file:
rtreedepth	src/server/sqlite3.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	src/server/sqlite3.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rule	src/tools/lcc/lburg/lburg.c	/^Rule rule(char *id, Tree pattern, char *template, char *code) {$/;"	f
rule	src/tools/lcc/lburg/lburg.h	/^struct rule {		\/* rules: *\/$/;"	s
rules	src/tools/lcc/lburg/gram.y	/^rules	: \/* lambda *\/$/;"	l
rules	src/tools/lcc/lburg/lburg.c	/^static Rule rules;$/;"	v	file:
rules	src/tools/lcc/lburg/lburg.h	/^	Rule rules;		\/* rules w\/nonterminal on lhs *\/$/;"	m	struct:nonterm
rules	src/tools/lcc/lburg/lburg.h	/^	Rule rules;		\/* rules whose pattern starts with term *\/$/;"	m	struct:term
runCinematicFrame	src/ui/ui_shared.h	/^  void ( *runCinematicFrame )( int handle );$/;"	m	struct:__anon506
runOnlyOnce	src/server/sqlite3.c	/^  bft runOnlyOnce:1;      \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe	file:
runScript	src/ui/ui_shared.h	/^  void ( *runScript )( char **p );$/;"	m	struct:__anon506
rvalue	src/tools/lcc/src/expr.c	/^Tree rvalue(Tree p) {$/;"	f
s	src/game/g_local.h	/^  entityState_t     s;        \/\/ communicated by server to clients$/;"	m	struct:gentity_s
s	src/game/g_public.h	/^  entityState_t s;        \/\/ communicated by server to clients$/;"	m	struct:__anon362
s	src/qcommon/q_shared.h	/^  float s;          \/\/ x offset in image where glyph starts$/;"	m	struct:__anon478
s	src/server/server.h	/^	char					*s;$/;"	m	struct:configString_s
s	src/server/sqlite3.c	/^  double s;          \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	src/server/sqlite3.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
s	src/tools/lcc/src/c.h	/^		} s;$/;"	m	union:symbol::__anon296	typeref:struct:symbol::__anon296::__anon298
s1	src/renderergl1/tr_local.h	/^	float	s1, t1;$/;"	m	struct:__anon170
s1	src/renderergl2/tr_local.h	/^	float	s1, t1;$/;"	m	struct:__anon70
s2	src/qcommon/q_shared.h	/^  float s2;$/;"	m	struct:__anon478
s2	src/renderergl1/tr_local.h	/^	float	s2, t2;$/;"	m	struct:__anon170
s2	src/renderergl2/tr_local.h	/^	float	s2, t2;$/;"	m	struct:__anon70
sArg	src/server/sqlite3.c	/^  Token sArg;               \/* Complete text of a module argument *\/$/;"	m	struct:Parse	file:
sColMap	src/server/sqlite3.c	/^  struct sColMap {      \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey	file:
sFts5Api	src/server/sqlite3.c	/^static const Fts5ExtensionApi sFts5Api = {$/;"	v	file:
sLastToken	src/server/sqlite3.c	/^  Token sLastToken;         \/* The last token parsed *\/$/;"	m	struct:Parse	file:
sList	src/cgame/cg_local.h	/^  smooth_t      sList[ MAXSMOOTHS ];                \/\/ WW smoothing$/;"	m	struct:__anon249
sList	src/cgame/cg_local.h	/^  smooth_t    sList[ MAXSMOOTHS ];$/;"	m	struct:__anon241
sMaskSet	src/server/sqlite3.c	/^  WhereMaskSet sMaskSet;    \/* Map cursor numbers to bitmasks *\/$/;"	m	struct:WhereInfo	file:
sNameToken	src/server/sqlite3.c	/^  Token sNameToken;         \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse	file:
sParse	src/server/sqlite3.c	/^  JsonParse sParse;          \/* Parse of the input JSON *\/$/;"	m	struct:JsonEachCursor	file:
sPoint	src/server/sqlite3.c	/^  RtreeSearchPoint sPoint;          \/* Cached next search point *\/$/;"	m	struct:RtreeCursor	file:
sPragmaNames	src/server/sqlite3.c	/^static const struct sPragmaNames {$/;"	s	file:
sWC	src/server/sqlite3.c	/^  WhereClause sWC;          \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo	file:
s_alAvailableDevices	src/client/snd_openal.c	/^cvar_t *s_alAvailableDevices;$/;"	v
s_alAvailableInputDevices	src/client/snd_openal.c	/^cvar_t *s_alAvailableInputDevices;$/;"	v
s_alCapture	src/client/snd_openal.c	/^static cvar_t *s_alCapture;$/;"	v	file:
s_alDevice	src/client/snd_openal.c	/^cvar_t *s_alDevice;$/;"	v
s_alDopplerFactor	src/client/snd_openal.c	/^cvar_t *s_alDopplerFactor;$/;"	v
s_alDopplerSpeed	src/client/snd_openal.c	/^cvar_t *s_alDopplerSpeed;$/;"	v
s_alDriver	src/client/snd_openal.c	/^cvar_t *s_alDriver;$/;"	v
s_alGain	src/client/snd_openal.c	/^cvar_t *s_alGain;$/;"	v
s_alGraceDistance	src/client/snd_openal.c	/^cvar_t *s_alGraceDistance;$/;"	v
s_alInputDevice	src/client/snd_openal.c	/^cvar_t *s_alInputDevice;$/;"	v
s_alMaxDistance	src/client/snd_openal.c	/^cvar_t *s_alMaxDistance;$/;"	v
s_alMinDistance	src/client/snd_openal.c	/^cvar_t *s_alMinDistance;$/;"	v
s_alPrecache	src/client/snd_openal.c	/^cvar_t *s_alPrecache;$/;"	v
s_alRolloff	src/client/snd_openal.c	/^cvar_t *s_alRolloff;$/;"	v
s_alSources	src/client/snd_openal.c	/^cvar_t *s_alSources;$/;"	v
s_backend	src/client/snd_main.c	/^cvar_t *s_backend;$/;"	v
s_backgroundLoop	src/client/snd_dma.c	/^static char		s_backgroundLoop[MAX_QPATH];$/;"	v	file:
s_backgroundLoop	src/client/snd_openal.c	/^static char s_backgroundLoop[MAX_QPATH];$/;"	v	file:
s_backgroundStream	src/client/snd_dma.c	/^snd_stream_t	*s_backgroundStream = NULL;$/;"	v
s_channels	src/client/snd_dma.c	/^channel_t   s_channels[MAX_CHANNELS];$/;"	v
s_cloudTexCoords	src/renderergl1/tr_sky.c	/^static float s_cloudTexCoords[6][SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1][2];$/;"	v	file:
s_cloudTexCoords	src/renderergl2/tr_sky.c	/^static float s_cloudTexCoords[6][SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1][2];$/;"	v	file:
s_cloudTexP	src/renderergl1/tr_sky.c	/^static float s_cloudTexP[6][SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1];$/;"	v	file:
s_cloudTexP	src/renderergl2/tr_sky.c	/^static float s_cloudTexP[6][SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1];$/;"	v	file:
s_doppler	src/client/snd_main.c	/^cvar_t *s_doppler;$/;"	v
s_flipMatrix	src/renderergl1/tr_backend.c	/^static float	s_flipMatrix[16] = {$/;"	v	file:
s_flipMatrix	src/renderergl1/tr_main.c	/^static float	s_flipMatrix[16] = {$/;"	v	file:
s_flipMatrix	src/renderergl2/tr_backend.c	/^static float	s_flipMatrix[16] = {$/;"	v	file:
s_flipMatrix	src/renderergl2/tr_main.c	/^static float	s_flipMatrix[16] = {$/;"	v	file:
s_gammatable	src/renderergl1/tr_image.c	/^static unsigned char s_gammatable[256];$/;"	v	file:
s_gammatable	src/renderergl2/tr_image.c	/^static unsigned char s_gammatable[256];$/;"	v	file:
s_hunkData	src/qcommon/common.c	/^static	byte	*s_hunkData = NULL;$/;"	v	file:
s_hunkTotal	src/qcommon/common.c	/^static	int		s_hunkTotal;$/;"	v	file:
s_intensitytable	src/renderergl1/tr_image.c	/^static byte			 s_intensitytable[256];$/;"	v	file:
s_intensitytable	src/renderergl2/tr_image.c	/^static byte			 s_intensitytable[256];$/;"	v	file:
s_knownSfx	src/client/snd_dma.c	/^sfx_t		s_knownSfx[MAX_SFX];$/;"	v
s_mixPreStep	src/client/snd_dma.c	/^cvar_t		*s_mixPreStep;$/;"	v
s_mixahead	src/client/snd_dma.c	/^cvar_t		*s_mixahead;$/;"	v
s_musicVolume	src/client/snd_main.c	/^cvar_t *s_musicVolume;$/;"	v
s_muteWhenMinimized	src/client/snd_main.c	/^cvar_t *s_muteWhenMinimized;$/;"	v
s_muteWhenUnfocused	src/client/snd_main.c	/^cvar_t *s_muteWhenUnfocused;$/;"	v
s_muted	src/client/snd_main.c	/^cvar_t *s_muted;$/;"	v
s_noise_perm	src/renderercommon/tr_noise.c	/^static int s_noise_perm[NOISE_SIZE];$/;"	v	file:
s_noise_table	src/renderercommon/tr_noise.c	/^static float s_noise_table[NOISE_SIZE];$/;"	v	file:
s_numSfx	src/client/snd_dma.c	/^int			s_numSfx = 0;$/;"	v
s_paintedtime	src/client/snd_dma.c	/^int   		s_paintedtime; 		\/\/ sample PAIRS$/;"	v
s_rawend	src/client/snd_dma.c	/^int						s_rawend[MAX_RAW_STREAMS];$/;"	v
s_rawsamples	src/client/snd_dma.c	/^portable_samplepair_t s_rawsamples[MAX_RAW_STREAMS][MAX_RAW_SAMPLES];$/;"	v
s_sdlBits	src/sdl/sdl_snd.c	/^cvar_t *s_sdlBits;$/;"	v
s_sdlChannels	src/sdl/sdl_snd.c	/^cvar_t *s_sdlChannels;$/;"	v
s_sdlDevSamps	src/sdl/sdl_snd.c	/^cvar_t *s_sdlDevSamps;$/;"	v
s_sdlMixSamps	src/sdl/sdl_snd.c	/^cvar_t *s_sdlMixSamps;$/;"	v
s_sdlSpeed	src/sdl/sdl_snd.c	/^cvar_t *s_sdlSpeed;$/;"	v
s_shaderText	src/renderergl1/tr_shader.c	/^static char *s_shaderText;$/;"	v	file:
s_shaderText	src/renderergl2/tr_shader.c	/^static char *s_shaderText;$/;"	v	file:
s_show	src/client/snd_dma.c	/^cvar_t		*s_show;$/;"	v
s_skyPoints	src/renderergl1/tr_sky.c	/^static vec3_t	s_skyPoints[SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1];$/;"	v	file:
s_skyPoints	src/renderergl2/tr_sky.c	/^static vec3_t	s_skyPoints[SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1];$/;"	v	file:
s_skyTexCoords	src/renderergl1/tr_sky.c	/^static float	s_skyTexCoords[SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1][2];$/;"	v	file:
s_skyTexCoords	src/renderergl2/tr_sky.c	/^static float	s_skyTexCoords[SKY_SUBDIVISIONS+1][SKY_SUBDIVISIONS+1][2];$/;"	v	file:
s_smallZoneTotal	src/qcommon/common.c	/^static	int		s_smallZoneTotal;$/;"	v	file:
s_soundMuted	src/client/snd_dma.c	/^static		qboolean	s_soundMuted;$/;"	v	file:
s_soundStarted	src/client/snd_dma.c	/^static int	s_soundStarted;$/;"	v	file:
s_soundtime	src/client/snd_dma.c	/^int			s_soundtime;		\/\/ sample PAIRS$/;"	v
s_testsound	src/client/snd_dma.c	/^cvar_t		*s_testsound;$/;"	v
s_volume	src/client/snd_main.c	/^cvar_t *s_volume;$/;"	v
s_worldData	src/renderergl1/tr_bsp.c	/^static	world_t		s_worldData;$/;"	v	file:
s_worldData	src/renderergl2/tr_bsp.c	/^static	world_t		s_worldData;$/;"	v	file:
s_zoneTotal	src/qcommon/common.c	/^static	int		s_zoneTotal;$/;"	v	file:
sa_family_t	src/qcommon/net_ip.c	/^typedef unsigned short sa_family_t;$/;"	t	file:
sa_family_t	src/qcommon/net_ip.c	45;"	d	file:
safe_isalnum	src/server/sqlite3.c	166515;"	d	file:
safe_isdigit	src/server/sqlite3.c	166514;"	d	file:
safe_isspace	src/server/sqlite3.c	166546;"	d	file:
safety_level	src/server/sqlite3.c	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db	file:
salign	src/tools/lcc/src/gen.c	/^int dalign, salign;$/;"	v
sample	src/client/snd_local.h	/^    short	sample;		\/* Previous output value *\/$/;"	m	struct:adpcm_state
sampleClear	src/server/sqlite3.c	/^static void sampleClear(sqlite3 *db, Stat4Sample *p){$/;"	f	file:
sampleCopy	src/server/sqlite3.c	/^static void sampleCopy(Stat4Accum *p, Stat4Sample *pTo, Stat4Sample *pFrom){$/;"	f	file:
sampleInsert	src/server/sqlite3.c	/^static void sampleInsert(Stat4Accum *p, Stat4Sample *pNew, int nEqZero){$/;"	f	file:
sampleIsBetter	src/server/sqlite3.c	/^static int sampleIsBetter($/;"	f	file:
sampleIsBetterPost	src/server/sqlite3.c	/^static int sampleIsBetterPost($/;"	f	file:
samplePushPrevious	src/server/sqlite3.c	/^static void samplePushPrevious(Stat4Accum *p, int iChng){$/;"	f	file:
sampleSetRowid	src/server/sqlite3.c	/^static void sampleSetRowid(sqlite3 *db, Stat4Sample *p, int n, const u8 *pData){$/;"	f	file:
sampleSetRowidInt64	src/server/sqlite3.c	/^static void sampleSetRowidInt64(sqlite3 *db, Stat4Sample *p, i64 iRowid){$/;"	f	file:
sampleSize	src/client/cl_avi.c	/^  int sampleSize;$/;"	m	struct:audioFormat_s	file:
samplebits	src/client/snd_local.h	/^	int			samplebits;$/;"	m	struct:__anon93
samples	src/client/snd_codec.h	/^	int samples;$/;"	m	struct:snd_info_s
samples	src/client/snd_local.h	/^	int			samples;				\/\/ mono samples in buffer$/;"	m	struct:__anon93
samples	src/client/snd_local.h	/^	int			samples;$/;"	m	struct:__anon95
samplesPerLine	src/client/cl_cin.c	/^	long				samplesPerLine;$/;"	m	struct:__anon100	file:
samplesPerPixel	src/client/cl_cin.c	/^	long				samplesPerPixel;				\/\/ defaults to 2$/;"	m	struct:__anon100	file:
saveAllCursors	src/server/sqlite3.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveCursorKey	src/server/sqlite3.c	/^static int saveCursorKey(BtCursor *pCur){$/;"	f	file:
saveCursorPosition	src/server/sqlite3.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
saveCursorsOnList	src/server/sqlite3.c	/^static int SQLITE_NOINLINE saveCursorsOnList($/;"	f	file:
savedCmd	src/qcommon/cmd.c	/^static cmdContext_t		savedCmd;$/;"	v	file:
savedNQueryLoop	src/server/sqlite3.c	/^  int savedNQueryLoop;      \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
savedPmoveStates	src/cgame/cg_local.h	/^  playerState_t savedPmoveStates[ NUM_SAVED_STATES ];$/;"	m	struct:__anon249
saved_cnt	src/server/sqlite3.c	/^static int saved_cnt;$/;"	v	file:
saved_icount	src/qcommon/vm_sparc.c	/^	int			saved_icount;$/;"	m	struct:func_info	file:
sawToothTable	src/renderergl1/tr_local.h	/^	float					sawToothTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon163
sawToothTable	src/renderergl2/tr_local.h	/^	float					sawToothTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon63
saymode_t	src/game/bg_public.h	/^} saymode_t;$/;"	t	typeref:enum:__anon347
sc	src/asm/snd_mixa.s	/^#define sc		8+16$/;"	d
scale	src/renderercommon/iqm.h	/^    float translate[3], rotate[4], scale[3];$/;"	m	struct:iqmjoint
scale	src/renderergl1/tr_local.h	/^	float			scale[2];			\/\/ s *= scale[0]$/;"	m	struct:__anon140
scale	src/renderergl2/tr_local.h	/^	float			scale[2];			\/\/ s *= scale[0]$/;"	m	struct:__anon22
scale	src/ui/ui_shared.c	/^  float     scale;$/;"	m	struct:__anon521	file:
scaleGain	src/client/snd_openal.c	/^	float		scaleGain;		\/\/ Last gain value for this source. 0 if muted.$/;"	m	struct:src_s	file:
scaleWithCharge	src/cgame/cg_local.h	/^  float           scaleWithCharge;$/;"	m	struct:baseParticle_s
scannerBlipShader	src/cgame/cg_local.h	/^  qhandle_t   scannerBlipShader;$/;"	m	struct:__anon251
scannerLineShader	src/cgame/cg_local.h	/^  qhandle_t   scannerLineShader;$/;"	m	struct:__anon251
scannerShader	src/cgame/cg_local.h	/^  qhandle_t   scannerShader;$/;"	m	struct:__anon251
scatter	src/tools/lcc/src/string.c	/^static int scatter[] = {	\/* map characters to random values *\/$/;"	v	file:
sceneCount	src/renderergl1/tr_local.h	/^	int						sceneCount;		\/\/ incremented every scene$/;"	m	struct:__anon163
sceneCount	src/renderergl2/tr_local.h	/^	int						sceneCount;		\/\/ incremented every scene$/;"	m	struct:__anon63
schemaFlags	src/server/sqlite3.c	/^  u16 schemaFlags;     \/* Flags associated with this schema *\/$/;"	m	struct:Schema	file:
schemaIsValid	src/server/sqlite3.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schema_cookie	src/server/sqlite3.c	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema	file:
sclass	src/tools/lcc/src/c.h	/^	int sclass;$/;"	m	struct:symbol
scon	src/tools/lcc/src/lex.c	/^static void *scon(int q, void *put(int c, void *cl), void *cl) {$/;"	f	file:
scope	src/tools/lcc/src/c.h	/^	int scope;$/;"	m	struct:symbol
scope_id	src/qcommon/qcommon.h	/^	unsigned long	scope_id;	\/\/ Needed for IPv6 link-local addresses$/;"	m	struct:__anon421
score	src/cgame/cg_local.h	/^  int         score;                      \/\/ updated by score servercmds$/;"	m	struct:__anon243
score	src/cgame/cg_local.h	/^  int       score;$/;"	m	struct:__anon242
score	src/game/g_local.h	/^  int               score;$/;"	m	struct:namelog_s
scoreBoardShowing	src/cgame/cg_local.h	/^  qboolean      scoreBoardShowing;$/;"	m	struct:__anon249
scoreFadeTime	src/cgame/cg_local.h	/^  int           scoreFadeTime;$/;"	m	struct:__anon249
score_t	src/cgame/cg_local.h	/^} score_t;$/;"	t	typeref:struct:__anon242
scores	src/cgame/cg_local.h	/^  score_t       scores[MAX_CLIENTS];$/;"	m	struct:__anon249
scores1	src/cgame/cg_local.h	/^  int           scores1, scores2;   \/\/ from configstrings$/;"	m	struct:__anon253
scores2	src/cgame/cg_local.h	/^  int           scores1, scores2;   \/\/ from configstrings$/;"	m	struct:__anon253
scoresRequestTime	src/cgame/cg_local.h	/^  int           scoresRequestTime;$/;"	m	struct:__anon249
scr_initialized	src/client/cl_scrn.c	/^qboolean	scr_initialized;		\/\/ ready to draw$/;"	v
scratchAllocOut	src/server/sqlite3.c	/^static int scratchAllocOut = 0;$/;"	v	file:
scratchImage	src/renderergl1/tr_local.h	/^	image_t					*scratchImage[32];$/;"	m	struct:__anon163
scratchImage	src/renderergl2/tr_local.h	/^	image_t					*scratchImage[32];$/;"	m	struct:__anon63
screenDelta	src/client/cl_cin.c	/^	long				screenDelta;$/;"	m	struct:__anon100	file:
screenShadowFbo	src/renderergl2/tr_local.h	/^	FBO_t					*screenShadowFbo;$/;"	m	struct:__anon63
screenShadowImage	src/renderergl2/tr_local.h	/^	image_t                 *screenShadowImage;$/;"	m	struct:__anon63
screenSsaoFbo	src/renderergl2/tr_local.h	/^	FBO_t					*screenSsaoFbo;$/;"	m	struct:__anon63
screenSsaoImage	src/renderergl2/tr_local.h	/^	image_t                 *screenSsaoImage;$/;"	m	struct:__anon63
screenXBias	src/cgame/cg_local.h	/^  float         screenXBias;$/;"	m	struct:__anon253
screenXScale	src/cgame/cg_local.h	/^  float         screenXScale;           \/\/ derived from glconfig$/;"	m	struct:__anon253
screenYScale	src/cgame/cg_local.h	/^  float         screenYScale;$/;"	m	struct:__anon253
screenshotCommand_t	src/renderergl1/tr_local.h	/^} screenshotCommand_t;$/;"	t	typeref:struct:__anon172
screenshotCommand_t	src/renderergl2/tr_local.h	/^} screenshotCommand_t;$/;"	t	typeref:struct:__anon72
script	src/qcommon/parse.c	/^  script_t *script;       \/\/script the indent was in$/;"	m	struct:indent_s	file:
scriptCommandCount	src/ui/ui_shared.c	/^static size_t scriptCommandCount = ARRAY_LEN( commandList );$/;"	v	file:
scriptDef_t	src/ui/ui_shared.h	/^scriptDef_t;$/;"	t	typeref:struct:__anon497
script_p	src/qcommon/parse.c	/^  char *script_p;                 \/\/current pointer in the script$/;"	m	struct:script_s	file:
script_s	src/qcommon/parse.c	/^typedef struct script_s$/;"	s	file:
script_t	src/qcommon/parse.c	/^} script_t;$/;"	t	typeref:struct:script_s	file:
scriptstack	src/qcommon/parse.c	/^  script_t *scriptstack;        \/\/stack with scripts of the source$/;"	m	struct:source_s	file:
scroll	src/qcommon/qcommon.h	/^	int		scroll;$/;"	m	struct:__anon425
scroll	src/renderergl1/tr_local.h	/^	float			scroll[2];			\/\/ s' = s + scroll[0] * time$/;"	m	struct:__anon140
scroll	src/renderergl2/tr_local.h	/^	float			scroll[2];			\/\/ s' = s + scroll[0] * time$/;"	m	struct:__anon22
scrollBar	src/ui/ui_shared.h	/^  qhandle_t scrollBar;$/;"	m	struct:__anon504
scrollBarArrowDown	src/ui/ui_shared.h	/^  qhandle_t scrollBarArrowDown;$/;"	m	struct:__anon504
scrollBarArrowLeft	src/ui/ui_shared.h	/^  qhandle_t scrollBarArrowLeft;$/;"	m	struct:__anon504
scrollBarArrowRight	src/ui/ui_shared.h	/^  qhandle_t scrollBarArrowRight;$/;"	m	struct:__anon504
scrollBarArrowUp	src/ui/ui_shared.h	/^  qhandle_t scrollBarArrowUp;$/;"	m	struct:__anon504
scrollBarThumb	src/ui/ui_shared.h	/^  qhandle_t scrollBarThumb;$/;"	m	struct:__anon504
scrollDir	src/ui/ui_shared.c	/^  qboolean scrollDir;$/;"	m	struct:scrollInfo_s	file:
scrollInfo	src/ui/ui_shared.c	/^static scrollInfo_t scrollInfo;$/;"	v	file:
scrollInfo_s	src/ui/ui_shared.c	/^typedef struct scrollInfo_s$/;"	s	file:
scrollInfo_t	src/ui/ui_shared.c	/^scrollInfo_t;$/;"	t	typeref:struct:scrollInfo_s	file:
scrollKey	src/ui/ui_shared.c	/^  int scrollKey;$/;"	m	struct:scrollInfo_s	file:
seamlessCubeMap	src/renderergl2/tr_local.h	/^	qboolean seamlessCubeMap;$/;"	m	struct:__anon60
searchPath	src/qcommon/vm_local.h	/^	void	*searchPath;				\/\/ hint for FS_ReadFileDir()$/;"	m	struct:vm_s
searchWith	src/server/sqlite3.c	/^static struct Cte *searchWith($/;"	f	file:
searchpath_s	src/qcommon/files.c	/^typedef struct searchpath_s {$/;"	s	file:
searchpath_t	src/qcommon/files.c	/^} searchpath_t;$/;"	t	typeref:struct:searchpath_s	file:
secondsAlive	src/game/g_local.h	/^  int                 secondsAlive;       \/\/ time player has been alive in seconds$/;"	m	struct:__anon311
sectorSize	src/server/sqlite3.c	/^  int sectorSize;                     \/* Device sector size *\/$/;"	m	struct:unixFile	file:
sectorSize	src/server/sqlite3.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
seekAndRead	src/server/sqlite3.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	src/server/sqlite3.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekAndWriteFd	src/server/sqlite3.c	/^static int seekAndWriteFd($/;"	f	file:
seekOp	src/server/sqlite3.c	/^  u8 seekOp;            \/* Most recent seek operation on this cursor *\/$/;"	m	struct:VdbeCursor	file:
seekResult	src/server/sqlite3.c	/^  int seekResult;       \/* Result of previous sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
seg	src/tools/lcc/src/c.h	/^		int seg;$/;"	m	union:symbol::__anon296
segment	src/tools/asm/q3asm.c	/^	segment_t	*segment;$/;"	m	struct:symbol_s	file:
segment	src/tools/asm/q3asm.c	/^segment_t	segment[NUM_SEGMENTS];$/;"	v
segment	src/tools/lcc/src/bytecode.c	/^static void I(segment)(int n) {$/;"	f	file:
segment	src/tools/lcc/src/c.h	/^void (*segment)(int);$/;"	m	struct:interface
segment	src/tools/lcc/src/null.c	/^static void I(segment)(int s) {}$/;"	f	file:
segment	src/tools/lcc/src/symbolic.c	/^static void I(segment)(int s) {$/;"	f	file:
segmentBase	src/tools/asm/q3asm.c	/^	int		segmentBase;		\/\/ only valid on second pass$/;"	m	struct:__anon267	file:
segmentName_t	src/tools/asm/q3asm.c	/^} segmentName_t;$/;"	t	typeref:enum:__anon266	file:
segmentTime	src/cgame/cg_local.h	/^  int                     segmentTime;$/;"	m	struct:baseTrailBeam_s
segment_t	src/tools/asm/q3asm.c	/^} segment_t;$/;"	t	typeref:struct:__anon267	file:
selFlags	src/server/sqlite3.c	/^  u32 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select	file:
selectAddSubqueryTypeInfo	src/server/sqlite3.c	/^static void selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectCursor	src/cgame/cg_local.h	/^  qhandle_t   selectCursor;$/;"	m	struct:__anon251
selectExpander	src/server/sqlite3.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectInnerLoop	src/server/sqlite3.c	/^static void selectInnerLoop($/;"	f	file:
selectNodeIsConstant	src/server/sqlite3.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectOpName	src/server/sqlite3.c	/^static const char *selectOpName(int id){$/;"	f	file:
selectPopWith	src/server/sqlite3.c	/^static void selectPopWith(Walker *pWalker, Select *p){$/;"	f	file:
selectPopWith	src/server/sqlite3.c	114692;"	d	file:
selectSound	src/cgame/cg_local.h	/^  sfxHandle_t selectSound;$/;"	m	struct:__anon251
selectedScore	src/cgame/cg_local.h	/^  int           selectedScore;$/;"	m	struct:__anon249
semXCheckReservedLock	src/server/sqlite3.c	/^static int semXCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semXClose	src/server/sqlite3.c	/^static int semXClose(sqlite3_file *id) {$/;"	f	file:
semXLock	src/server/sqlite3.c	/^static int semXLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXUnlock	src/server/sqlite3.c	/^static int semXUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
send	src/qcommon/huffman.c	/^static void send(node_t *node, node_t *child, byte *fout) {$/;"	f	file:
send	src/qcommon/net_chan.c	/^	int			get, send;$/;"	m	struct:__anon448	file:
sender	src/server/server.h	/^	int sender;$/;"	m	struct:voipServerPacket_s
sentity_s	src/client/snd_openal.c	/^typedef struct sentity_s$/;"	s	file:
sentity_t	src/client/snd_openal.c	/^} sentity_t;$/;"	t	typeref:struct:sentity_s	file:
separateCache	src/server/sqlite3.c	/^  int separateCache;             \/* Use a new PGroup for each PCache *\/$/;"	m	struct:PCacheGlobal	file:
seqCount	src/server/sqlite3.c	/^  i64 seqCount;         \/* Sequence counter *\/$/;"	m	struct:VdbeCursor	file:
sequence	src/server/server.h	/^	int sequence;$/;"	m	struct:voipServerPacket_s
serialGet	src/server/sqlite3.c	/^static u32 SQLITE_NOINLINE serialGet($/;"	f	file:
server	src/ui/ui_local.h	/^  pendingServer_t server[MAX_SERVERSTATUSREQUESTS];$/;"	m	struct:__anon510
serverAddress	src/client/client.h	/^	netadr_t	serverAddress;$/;"	m	struct:__anon87
serverCommandNum	src/client/client.h	/^	int				serverCommandNum;		\/\/ execute all commands up to this before$/;"	m	struct:__anon84
serverCommandSequence	src/cgame/cg_local.h	/^  int           serverCommandSequence;                \/\/ snapshot becomes current$/;"	m	struct:__anon258
serverCommandSequence	src/cgame/cg_local.h	/^  int           serverCommandSequence;  \/\/ reliable command stream counter$/;"	m	struct:__anon253
serverCommandSequence	src/cgame/cg_public.h	/^  int           serverCommandSequence;                \/\/ snapshot becomes current$/;"	m	struct:__anon228
serverCommandSequence	src/client/client.h	/^	int			serverCommandSequence;$/;"	m	struct:__anon87
serverCommandSequence	src/client/client.h	/^  int           serverCommandSequence;                \/\/ snapshot becomes current$/;"	m	struct:__anon83
serverCommands	src/client/client.h	/^	char		serverCommands[MAX_RELIABLE_COMMANDS][MAX_STRING_CHARS];$/;"	m	struct:__anon87
serverFilter_s	src/ui/ui_local.h	/^typedef struct serverFilter_s$/;"	s
serverFilter_t	src/ui/ui_local.h	/^serverFilter_t;$/;"	t	typeref:struct:serverFilter_s
serverId	src/client/client.h	/^	int			serverId;			\/\/ included in each client message so the server$/;"	m	struct:__anon86
serverId	src/server/server.h	/^	int				serverId;			\/\/ changes each server start$/;"	m	struct:__anon184
serverInfo_t	src/client/client.h	/^} serverInfo_t;$/;"	t	typeref:struct:__anon89
serverMessage	src/client/client.h	/^	char		serverMessage[MAX_STRING_TOKENS];	\/\/ for display on connection dialog$/;"	m	struct:__anon87
serverMessageSequence	src/client/client.h	/^	int			serverMessageSequence;$/;"	m	struct:__anon87
serverNum	src/ui/ui_local.h	/^  int      serverNum;$/;"	m	struct:__anon509
serverSortField_t	src/ui/ui_public.h	/^serverSortField_t;$/;"	t	typeref:enum:__anon495
serverState_t	src/server/server.h	/^} serverState_t;$/;"	t	typeref:enum:__anon183
serverStatic_t	src/server/server.h	/^} serverStatic_t;$/;"	t	typeref:struct:__anon188
serverStatus	src/ui/ui_local.h	/^  serverStatus_t serverStatus;$/;"	m	struct:__anon518
serverStatusAddress	src/ui/ui_local.h	/^  char serverStatusAddress[MAX_ADDRESSLENGTH];$/;"	m	struct:__anon518
serverStatusCount	src/client/cl_main.c	/^int serverStatusCount;$/;"	v
serverStatusCvar_t	src/ui/ui_main.c	/^serverStatusCvar_t;$/;"	t	typeref:struct:__anon491	file:
serverStatusCvars	src/ui/ui_main.c	/^serverStatusCvar_t serverStatusCvars[] = {$/;"	v
serverStatusInfo	src/ui/ui_local.h	/^  serverStatusInfo_t serverStatusInfo;$/;"	m	struct:__anon518
serverStatusInfo_t	src/ui/ui_local.h	/^serverStatusInfo_t;$/;"	t	typeref:struct:__anon511
serverStatus_s	src/client/cl_main.c	/^typedef struct serverStatus_s$/;"	s	file:
serverStatus_s	src/ui/ui_local.h	/^typedef struct serverStatus_s$/;"	s
serverStatus_t	src/client/cl_main.c	/^} serverStatus_t;$/;"	t	typeref:struct:serverStatus_s	file:
serverStatus_t	src/ui/ui_local.h	/^serverStatus_t;$/;"	t	typeref:struct:serverStatus_s
serverTime	src/cgame/cg_local.h	/^  int           serverTime;                           \/\/ server time the message is valid for (in msec)$/;"	m	struct:__anon258
serverTime	src/cgame/cg_public.h	/^  int           serverTime;                           \/\/ server time the message is valid for (in msec)$/;"	m	struct:__anon228
serverTime	src/client/client.h	/^	int				serverTime;		\/\/ server time the message is valid for (in msec)$/;"	m	struct:__anon84
serverTime	src/client/client.h	/^	int			serverTime;			\/\/ may be paused during play$/;"	m	struct:__anon86
serverTime	src/client/client.h	/^  int           serverTime;                           \/\/ server time the message is valid for (in msec)$/;"	m	struct:__anon83
serverTime	src/qcommon/q_shared.h	/^	int				serverTime;$/;"	m	struct:usercmd_s
serverTimeDelta	src/client/client.h	/^	int			serverTimeDelta;	\/\/ cl.serverTime = cls.realtime + cl.serverTimeDelta$/;"	m	struct:__anon86
server_s	src/master/servers.h	/^typedef struct server_s$/;"	s
server_t	src/master/servers.h	/^} server_t;$/;"	t	typeref:struct:server_s
server_t	src/server/server.h	/^} server_t;$/;"	t	typeref:struct:__anon184
servername	src/client/client.h	/^	char		servername[MAX_OSPATH];		\/\/ name of server from original connect (used by reconnect)$/;"	m	struct:__anon87
servername	src/ui/ui_public.h	/^  char      servername[MAX_STRING_CHARS];$/;"	m	struct:__anon492
servers	src/master/servers.c	/^static server_t* servers = NULL;$/;"	v	file:
sess	src/game/g_local.h	/^  clientSession_t     sess;$/;"	m	struct:gclient_s
set	src/tools/lcc/src/config.h	/^	short set;$/;"	m	struct:__anon275
setAllColumnNames	src/server/sqlite3.c	/^static void setAllColumnNames($/;"	f	file:
setAllPagerFlags	src/server/sqlite3.c	/^static void setAllPagerFlags(sqlite3 *db){$/;"	f	file:
setAllPagerFlags	src/server/sqlite3.c	107882;"	d	file:
setArraysOnce	src/renderergl1/tr_shade.c	/^static qboolean	setArraysOnce;$/;"	v	file:
setBinding	src/ui/ui_shared.h	/^  void ( *setBinding )( int keynum, const char *binding );$/;"	m	struct:__anon506
setCVar	src/ui/ui_shared.h	/^  void ( *setCVar )( const char *cvar, const char *value );$/;"	m	struct:__anon506
setChildPtrmaps	src/server/sqlite3.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	src/server/sqlite3.c	59491;"	d	file:
setColor	src/ui/ui_shared.h	/^  void ( *setColor ) ( const vec4_t v );$/;"	m	struct:__anon506
setColorCommand_t	src/renderergl1/tr_local.h	/^} setColorCommand_t;$/;"	t	typeref:struct:__anon165
setColorCommand_t	src/renderergl2/tr_local.h	/^} setColorCommand_t;$/;"	t	typeref:struct:__anon65
setDateTimeToCurrent	src/server/sqlite3.c	/^static int setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDestPgsz	src/server/sqlite3.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setEstimatedRows	src/server/sqlite3.c	/^static void setEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
setJoinExpr	src/server/sqlite3.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setLikeOptFlag	src/server/sqlite3.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setMaster	src/server/sqlite3.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setOneColumnName	src/server/sqlite3.c	/^static void setOneColumnName(Vdbe *v, const char *z){$/;"	f	file:
setOverstrikeMode	src/ui/ui_shared.h	/^  void ( *setOverstrikeMode )( qboolean b );$/;"	m	struct:__anon506
setPageReferenced	src/server/sqlite3.c	/^static void setPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
setPendingFd	src/server/sqlite3.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setResultStrOrError	src/server/sqlite3.c	/^static void setResultStrOrError($/;"	f	file:
setSectorSize	src/server/sqlite3.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSharedCacheTableLock	src/server/sqlite3.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	src/server/sqlite3.c	55909;"	d	file:
setStrAccumError	src/server/sqlite3.c	/^static void setStrAccumError(StrAccum *p, u8 eError){$/;"	f	file:
set_authorizer	src/server/sqlite3.c	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
set_auxdata	src/server/sqlite3.c	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
setempty	src/tools/lcc/cpp/tokens.c	/^setempty(Tokenrow *trp)$/;"	f
setobjname	src/tools/lcc/cpp/include.c	/^setobjname(char *f)$/;"	f
setreg	src/tools/lcc/src/gen.c	/^void setreg(Node p, Symbol r) {$/;"	f
setsource	src/tools/lcc/cpp/lex.c	/^setsource(char *name, int fd, char *str)$/;"	f
setsrc	src/tools/lcc/src/gen.c	6;"	d	file:
setup	src/tools/lcc/cpp/unix.c	/^setup(int argc, char **argv)$/;"	f
setupLookaside	src/server/sqlite3.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
setupQuad	src/client/cl_cin.c	/^static void setupQuad( long xOff, long yOff )$/;"	f	file:
setup_kwtab	src/tools/lcc/cpp/nlist.c	/^setup_kwtab(void)$/;"	f
sfoldcnst	src/tools/lcc/src/simp.c	42;"	d	file:
sfx	src/client/snd_local.h	/^	sfx_t		*sfx;$/;"	m	struct:loopSound_s
sfx	src/client/snd_openal.c	/^	sfxHandle_t	sfx;			\/\/ Sound effect in use$/;"	m	struct:src_s	file:
sfxHandle_t	src/qcommon/q_shared.h	/^typedef int		sfxHandle_t;$/;"	t
sfxHash	src/client/snd_dma.c	/^static	sfx_t		*sfxHash[LOOP_HASH];$/;"	v	file:
sfxScratchBuffer	src/client/snd_mem.c	/^short *sfxScratchBuffer = NULL;$/;"	v
sfxScratchIndex	src/client/snd_mem.c	/^int	   sfxScratchIndex = 0;$/;"	v
sfxScratchPointer	src/client/snd_mem.c	/^sfx_t *sfxScratchPointer = NULL;$/;"	v
sfx_s	src/client/snd_local.h	/^typedef struct sfx_s {$/;"	s
sfx_t	src/client/snd_local.h	/^} sfx_t;$/;"	t	typeref:struct:sfx_s
shader	src/cgame/cg_local.h	/^  qhandle_t               shader;$/;"	m	struct:baseTrailBeam_s
shader	src/client/cl_cin.c	/^	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;$/;"	m	struct:__anon100	file:
shader	src/qcommon/q_shared.h	/^  qhandle_t shader;$/;"	m	struct:__anon482
shader	src/qcommon/qfiles.h	/^	char		shader[MAX_QPATH];$/;"	m	struct:__anon397
shader	src/qcommon/qfiles.h	/^	char		shader[MAX_QPATH];$/;"	m	struct:__anon408
shader	src/qcommon/qfiles.h	/^	char		shader[MAX_QPATH];$/;"	m	struct:__anon414
shader	src/renderergl1/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:__anon148
shader	src/renderergl1/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:__anon170
shader	src/renderergl1/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:shaderCommands_s
shader	src/renderergl1/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:srfIQModel_s
shader	src/renderergl1/tr_local.h	/^	struct shader_s		*shader;$/;"	m	struct:msurface_s	typeref:struct:msurface_s::shader_s
shader	src/renderergl1/tr_shader.c	/^static	shader_t		shader;$/;"	v	file:
shader	src/renderergl2/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:__anon40
shader	src/renderergl2/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:__anon70
shader	src/renderergl2/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:shaderCommands_s
shader	src/renderergl2/tr_local.h	/^	shader_t	*shader;$/;"	m	struct:srfIQModel_s
shader	src/renderergl2/tr_local.h	/^	struct shader_s		*shader;$/;"	m	struct:msurface_s	typeref:struct:msurface_s::shader_s
shader	src/renderergl2/tr_shader.c	/^static	shader_t		shader;$/;"	v	file:
shaderColorEnum_t	src/cgame/cg_local.h	/^} shaderColorEnum_t;$/;"	t	typeref:enum:__anon255
shaderCommands_s	src/renderergl1/tr_local.h	/^typedef struct shaderCommands_s $/;"	s
shaderCommands_s	src/renderergl2/tr_local.h	/^typedef struct shaderCommands_s $/;"	s
shaderCommands_t	src/renderergl1/tr_local.h	/^} shaderCommands_t;$/;"	t	typeref:struct:shaderCommands_s
shaderCommands_t	src/renderergl2/tr_local.h	/^} shaderCommands_t;$/;"	t	typeref:struct:shaderCommands_s
shaderIndex	src/qcommon/qfiles.h	/^	int				shaderIndex;	\/\/ for in-game use$/;"	m	struct:__anon389
shaderIndex	src/qcommon/qfiles.h	/^	int			shaderIndex;	\/\/ for in-game use$/;"	m	struct:__anon397
shaderIndexes	src/renderergl2/tr_local.h	/^	int				*shaderIndexes;$/;"	m	struct:mdvSurface_s
shaderName	src/cgame/cg_local.h	/^  char                    shaderName[ MAX_QPATH ];$/;"	m	struct:baseTrailBeam_s
shaderName	src/qcommon/q_shared.h	/^  char shaderName[32];$/;"	m	struct:__anon478
shaderNames	src/cgame/cg_local.h	/^  char            shaderNames[ MAX_PS_SHADER_FRAMES ][ MAX_QPATH ];$/;"	m	struct:baseParticle_s
shaderNum	src/qcommon/cm_local.h	/^	int						shaderNum;$/;"	m	struct:__anon436
shaderNum	src/qcommon/cm_local.h	/^	int			shaderNum;		\/\/ the shader that determined the contents$/;"	m	struct:__anon437
shaderNum	src/qcommon/qfiles.h	/^	int			shaderNum;		\/\/ the shader that determines the contents flags$/;"	m	struct:__anon413
shaderNum	src/qcommon/qfiles.h	/^	int			shaderNum;$/;"	m	struct:__anon412
shaderNum	src/qcommon/qfiles.h	/^	int			shaderNum;$/;"	m	struct:__anon417
shaderProgram_s	src/renderergl2/tr_local.h	/^typedef struct shaderProgram_s$/;"	s
shaderProgram_t	src/renderergl2/tr_local.h	/^} shaderProgram_t;$/;"	t	typeref:struct:shaderProgram_s
shaderRGBA	src/renderercommon/tr_types.h	/^	byte		shaderRGBA[4];		\/\/ colors used by rgbgen entity shaders$/;"	m	struct:__anon114
shaderRemap_t	src/game/g_utils.c	/^} shaderRemap_t;$/;"	t	typeref:struct:__anon373	file:
shaderSort_t	src/renderergl1/tr_local.h	/^} shaderSort_t;$/;"	t	typeref:enum:__anon130
shaderSort_t	src/renderergl2/tr_local.h	/^} shaderSort_t;$/;"	t	typeref:enum:__anon11
shaderStage_t	src/renderergl1/tr_local.h	/^} shaderStage_t;$/;"	t	typeref:struct:__anon142
shaderStage_t	src/renderergl2/tr_local.h	/^} shaderStage_t;$/;"	t	typeref:struct:__anon26
shaderTexCoord	src/renderercommon/tr_types.h	/^	float		shaderTexCoord[2];	\/\/ texture coordinates used by tcMod entity modifiers$/;"	m	struct:__anon114
shaderTextHashTable	src/renderergl1/tr_shader.c	/^static char **shaderTextHashTable[MAX_SHADERTEXT_HASH];$/;"	v	file:
shaderTextHashTable	src/renderergl2/tr_shader.c	/^static char **shaderTextHashTable[MAX_SHADERTEXT_HASH];$/;"	v	file:
shaderTime	src/renderercommon/tr_types.h	/^	float		shaderTime;			\/\/ subtracted from refdef time to control effect start times$/;"	m	struct:__anon114
shaderTime	src/renderergl1/tr_local.h	/^	float		shaderTime;$/;"	m	struct:shaderCommands_s
shaderTime	src/renderergl2/tr_local.h	/^	float		shaderTime;$/;"	m	struct:shaderCommands_s
shader_s	src/renderergl1/tr_local.h	/^typedef struct shader_s {$/;"	s
shader_s	src/renderergl2/tr_local.h	/^typedef struct shader_s {$/;"	s
shader_t	src/renderergl1/tr_local.h	/^} shader_t;$/;"	t	typeref:struct:shader_s
shader_t	src/renderergl2/tr_local.h	/^} shader_t;$/;"	t	typeref:struct:shader_s
shaders	src/cgame/cg_local.h	/^  qhandle_t       shaders[ MAX_PS_SHADER_FRAMES ];$/;"	m	struct:baseParticle_s
shaders	src/qcommon/cm_local.h	/^	dshader_t	*shaders;$/;"	m	struct:__anon440
shaders	src/renderergl1/tr_local.h	/^	dshader_t	*shaders;$/;"	m	struct:__anon157
shaders	src/renderergl1/tr_local.h	/^	shader_t				*shaders[MAX_SHADERS];$/;"	m	struct:__anon163
shaders	src/renderergl2/tr_local.h	/^	dshader_t	*shaders;$/;"	m	struct:__anon49
shaders	src/renderergl2/tr_local.h	/^	shader_t				*shaders[MAX_SHADERS];$/;"	m	struct:__anon63
shadowColor	src/ui/ui_shared.h	/^  vec4_t shadowColor;$/;"	m	struct:__anon504
shadowCubemaps	src/renderergl2/tr_local.h	/^	image_t                 *shadowCubemaps[MAX_DLIGHTS];$/;"	m	struct:__anon63
shadowFadeClamp	src/ui/ui_shared.h	/^  float shadowFadeClamp;$/;"	m	struct:__anon504
shadowMarkShader	src/cgame/cg_local.h	/^  qhandle_t   shadowMarkShader;$/;"	m	struct:__anon251
shadowPlane	src/renderercommon/tr_types.h	/^	float		shadowPlane;		\/\/ projection shadows go here, stencils go slightly lower$/;"	m	struct:__anon114
shadowScale	src/game/bg_public.h	/^  float     shadowScale;$/;"	m	struct:__anon350
shadowShader	src/renderergl1/tr_local.h	/^	shader_t				*shadowShader;$/;"	m	struct:__anon163
shadowShader	src/renderergl2/tr_local.h	/^	shader_t				*shadowShader;$/;"	m	struct:__anon63
shadowX	src/ui/ui_shared.h	/^  float shadowX;$/;"	m	struct:__anon504
shadowXyz	src/renderergl1/tr_shadows.c	/^static	vec3_t		shadowXyz[SHADER_MAX_VERTEXES];$/;"	v	file:
shadowXyz	src/renderergl2/tr_shadows.c	/^static	vec3_t		shadowXyz[SHADER_MAX_VERTEXES];$/;"	v	file:
shadowY	src/ui/ui_shared.h	/^  float shadowY;$/;"	m	struct:__anon504
shadowmapShader	src/renderergl2/tr_local.h	/^	shaderProgram_t shadowmapShader;$/;"	m	struct:__anon63
shadowmaskShader	src/renderergl2/tr_local.h	/^	shaderProgram_t shadowmaskShader;$/;"	m	struct:__anon63
sharable	src/server/sqlite3.c	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree	file:
shared	src/server/sqlite3.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
sharedByte	src/server/sqlite3.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedCacheEnabled	src/server/sqlite3.c	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config	file:
sharedEntity_t	src/game/g_public.h	/^} sharedEntity_t;$/;"	t	typeref:struct:__anon362
sharedLockByte	src/server/sqlite3.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedMask	src/server/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	src/server/sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedMask	src/server/sqlite3.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
sharedTraps_t	src/qcommon/qcommon.h	/^} sharedTraps_t;$/;"	t	typeref:enum:__anon424
shift	src/qcommon/vm_powerpc_asm.c	/^	int shift;$/;"	m	struct:powerpc_operand	file:
shiftedEntityNum	src/renderergl1/tr_local.h	/^	int						shiftedEntityNum;	\/\/ currentEntityNum << QSORT_REFENTITYNUM_SHIFT$/;"	m	struct:__anon163
shiftedEntityNum	src/renderergl2/tr_local.h	/^	int						shiftedEntityNum;	\/\/ currentEntityNum << QSORT_REFENTITYNUM_SHIFT$/;"	m	struct:__anon63
short	src/tools/lcc/lburg/gram.c	153;"	d	file:
shortestMatch	src/qcommon/common.c	/^static char shortestMatch[MAX_TOKEN_CHARS];$/;"	v	file:
shortmetric	src/tools/lcc/src/c.h	/^	Metrics shortmetric;$/;"	m	struct:interface
shorttype	src/tools/lcc/src/types.c	/^Type shorttype;			\/* signed short int *\/$/;"	v
shotgunFire	src/game/g_weapon.c	/^void shotgunFire( gentity_t *ent )$/;"	f
shoulderOffsets	src/game/bg_public.h	/^  vec3_t    shoulderOffsets;$/;"	m	struct:__anon350
showScores	src/cgame/cg_local.h	/^  qboolean      showScores;$/;"	m	struct:__anon249
showdrop	src/qcommon/net_chan.c	/^cvar_t		*showdrop;$/;"	v
showpackets	src/qcommon/net_chan.c	/^cvar_t		*showpackets;$/;"	v
shrunkTime	src/game/g_local.h	/^  int               shrunkTime;         \/\/ time when a barricade shrunk or zero$/;"	m	struct:gentity_s
shtree	src/tools/lcc/src/enode.c	/^Tree shtree(int op, Tree l, Tree r) {$/;"	f
si	src/client/snd_main.c	/^static soundInterface_t si;$/;"	v	file:
si	src/qcommon/vm_powerpc.c	/^		signed int si;$/;"	m	union:source_instruction_s::__anon453	file:
si	src/qcommon/vm_sparc.c	/^		signed int	si;$/;"	m	union:src_insn::__anon484	file:
sides	src/qcommon/cm_local.h	/^	cbrushside_t	*sides;$/;"	m	struct:__anon437
sign	src/renderergl2/tr_extramath.c	/^		unsigned int sign:1;$/;"	m	struct:f16_u::__anon5	file:
sign	src/renderergl2/tr_extramath.c	/^		unsigned int sign:1;$/;"	m	struct:f32_u::__anon4	file:
signbits	src/qcommon/cm_patch.h	/^	int		signbits;		\/\/ signx + (signy<<1) + (signz<<2), used as lookup during collision$/;"	m	struct:__anon486
signbits	src/qcommon/q_shared.h	/^	byte	signbits;		\/\/ signx + (signy<<1) + (signz<<2), used as lookup during collision$/;"	m	struct:cplane_s
signedchar	src/tools/lcc/src/types.c	/^Type signedchar;		\/* signed char *\/$/;"	v
signedint	src/tools/lcc/src/types.c	/^Type signedint(Type ty) {$/;"	f
signedptr	src/tools/lcc/src/types.c	/^Type signedptr;			\/* signed type to hold void* *\/$/;"	v
silent	src/client/cl_cin.c	/^	qboolean			looping, holdAtEnd, dirty, alterGameState, silent, shader;$/;"	m	struct:__anon100	file:
silent	src/game/g_admin.h	/^  qboolean silent;$/;"	m	struct:__anon375
simpleClose	src/server/sqlite3.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleCreate	src/server/sqlite3.c	/^static int simpleCreate($/;"	f	file:
simpleDelim	src/server/sqlite3.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDestroy	src/server/sqlite3.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleNext	src/server/sqlite3.c	/^static int simpleNext($/;"	f	file:
simpleOpen	src/server/sqlite3.c	/^static int simpleOpen($/;"	f	file:
simpleTokenizerModule	src/server/sqlite3.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simple_tokenizer	src/server/sqlite3.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	src/server/sqlite3.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer_cursor	src/server/sqlite3.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	src/server/sqlite3.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simplify	src/tools/lcc/src/simp.c	/^Tree simplify(int op, Type ty, Tree l, Tree r) {$/;"	f
sinTable	src/renderergl1/tr_local.h	/^	float					sinTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon163
sinTable	src/renderergl2/tr_local.h	/^	float					sinTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon63
singleClient	src/game/g_public.h	/^  int     singleClient;   \/\/ only send to this client when SVF_SINGLECLIENT is set$/;"	m	struct:__anon361
size	src/client/snd_codec.h	/^	int size;$/;"	m	struct:snd_info_s
size	src/client/snd_local.h	/^    int						size;$/;"	m	struct:sndBuffer_s
size	src/game/bg_alloc.c	/^  int cookie, size;        \/\/ Size includes node (obviously)$/;"	m	struct:freeMemNode_s	file:
size	src/qcommon/cm_local.h	/^	vec3_t			size[2];	\/\/ size of the box being swept through the model$/;"	m	struct:__anon443
size	src/qcommon/common.c	/^	int		size;			\/\/ total bytes malloced, including header$/;"	m	struct:__anon449	file:
size	src/qcommon/common.c	/^	int		size;           \/\/ including the header and possibly tiny fragments$/;"	m	struct:memblock_s	file:
size	src/qcommon/common.c	/^	int		size;$/;"	m	struct:__anon450	file:
size	src/qcommon/common.c	/^	int size;$/;"	m	struct:hunkblock_s	file:
size	src/renderercommon/iqm.h	/^    unsigned int size;$/;"	m	struct:iqmvertexarray
size	src/renderercommon/tr_image_jpg.c	/^  int	size;$/;"	m	struct:__anon111	file:
size	src/tools/lcc/src/c.h	/^			int size;$/;"	m	struct:code::__anon291::__anon295
size	src/tools/lcc/src/c.h	/^	int size;$/;"	m	struct:swtch
size	src/tools/lcc/src/c.h	/^	int size;$/;"	m	struct:type
size	src/tools/lcc/src/c.h	/^	unsigned char size, align, outofline;$/;"	m	struct:metrics
size	src/tools/lcc/src/prof.c	/^	int size;$/;"	m	struct:map	file:
size	src/tools/lcc/src/profio.c	/^	int size;			\/* size of counts[] *\/$/;"	m	struct:file	file:
size4x	src/server/sqlite3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon204::__anon205	file:
sizeCursor	src/cgame/cg_local.h	/^  qhandle_t   sizeCursor;$/;"	m	struct:__anon251
size_t	src/game/bg_lib.h	/^typedef unsigned int size_t;$/;"	t
sizeop	src/tools/lcc/src/c.h	18;"	d
sizingHud	src/cgame/cg_local.h	/^  qboolean      sizingHud;$/;"	m	struct:__anon253
sj_first	src/qcommon/vm_powerpc.c	/^static symbolic_jump_t *sj_first = NULL, *sj_last = NULL;$/;"	v	file:
sj_last	src/qcommon/vm_powerpc.c	/^static symbolic_jump_t *sj_first = NULL, *sj_last = NULL;$/;"	v	file:
sjfd	src/server/sqlite3.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
skinName	src/cgame/cg_local.h	/^  char        skinName[ MAX_QPATH ];$/;"	m	struct:__anon243
skinName	src/game/bg_public.h	/^  char      skinName[ MAX_QPATH ];$/;"	m	struct:__anon350
skinNum	src/renderercommon/tr_types.h	/^	int			skinNum;			\/\/ inline skin index$/;"	m	struct:__anon114
skinSurface_t	src/renderergl1/tr_local.h	/^} skinSurface_t;$/;"	t	typeref:struct:__anon148
skinSurface_t	src/renderergl2/tr_local.h	/^} skinSurface_t;$/;"	t	typeref:struct:__anon40
skin_s	src/renderergl1/tr_local.h	/^typedef struct skin_s {$/;"	s
skin_s	src/renderergl2/tr_local.h	/^typedef struct skin_s {$/;"	s
skin_t	src/renderergl1/tr_local.h	/^} skin_t;$/;"	t	typeref:struct:skin_s
skin_t	src/renderergl2/tr_local.h	/^} skin_t;$/;"	t	typeref:struct:skin_s
skins	src/renderergl1/tr_local.h	/^	skin_t					*skins[MAX_SKINS];$/;"	m	struct:__anon163
skins	src/renderergl2/tr_local.h	/^	skin_t					*skins[MAX_SKINS];$/;"	m	struct:__anon63
skip	src/qcommon/parse.c	/^  int skip;                     \/\/ > 0 if skipping conditional code$/;"	m	struct:source_s	file:
skip	src/qcommon/parse.c	/^  int skip;               \/\/true if skipping current indent$/;"	m	struct:indent_s	file:
skipFlag	src/server/sqlite3.c	/^  u8 skipFlag;            \/* Skip accumulator loading if true *\/$/;"	m	struct:sqlite3_context	file:
skipNext	src/server/sqlite3.c	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive.$/;"	m	struct:BtCursor	file:
skipping	src/tools/lcc/cpp/cpp.c	/^int	skipping;$/;"	v
skipto	src/tools/lcc/src/error.c	/^void skipto(int tok, char set[]) {$/;"	f
sky	src/renderergl1/tr_local.h	/^	skyParms_t	sky;$/;"	m	struct:shader_s
sky	src/renderergl2/tr_local.h	/^	skyParms_t	sky;$/;"	m	struct:shader_s
skyParms_t	src/renderergl1/tr_local.h	/^} skyParms_t;$/;"	t	typeref:struct:__anon145
skyParms_t	src/renderergl2/tr_local.h	/^} skyParms_t;$/;"	t	typeref:struct:__anon29
skyRenderedThisView	src/renderergl1/tr_local.h	/^	qboolean	skyRenderedThisView;	\/\/ flag for drawing sun$/;"	m	struct:__anon162
skyRenderedThisView	src/renderergl2/tr_local.h	/^	qboolean	skyRenderedThisView;	\/\/ flag for drawing sun$/;"	m	struct:__anon62
sky_clip	src/renderergl1/tr_sky.c	/^static vec3_t sky_clip[6] = $/;"	v	file:
sky_clip	src/renderergl2/tr_sky.c	/^static vec3_t sky_clip[6] = $/;"	v	file:
sky_max	src/renderergl1/tr_sky.c	/^static float	sky_min, sky_max;$/;"	v	file:
sky_max	src/renderergl2/tr_sky.c	/^static float	sky_min, sky_max;$/;"	v	file:
sky_maxs	src/renderergl1/tr_sky.c	/^static float	sky_mins[2][6], sky_maxs[2][6];$/;"	v	file:
sky_maxs	src/renderergl2/tr_sky.c	/^static float	sky_mins[2][6], sky_maxs[2][6];$/;"	v	file:
sky_min	src/renderergl1/tr_sky.c	/^static float	sky_min, sky_max;$/;"	v	file:
sky_min	src/renderergl2/tr_sky.c	/^static float	sky_min, sky_max;$/;"	v	file:
sky_mins	src/renderergl1/tr_sky.c	/^static float	sky_mins[2][6], sky_maxs[2][6];$/;"	v	file:
sky_mins	src/renderergl2/tr_sky.c	/^static float	sky_mins[2][6], sky_maxs[2][6];$/;"	v	file:
sky_texorder	src/renderergl1/tr_sky.c	/^static int	sky_texorder[6] = {0,2,1,3,4,5};$/;"	v	file:
sky_texorder	src/renderergl2/tr_sky.c	/^static int	sky_texorder[6] = {0,2,1,3,4,5};$/;"	v	file:
sl	src/server/sv_sqlite.c	/^sqlite3      *sl = NULL;$/;"	v
sl_bind	src/server/sv_sqlite.c	/^int sl_bind( sqlite3_stmt *stmt, qboolean reset ) {$/;"	f
sl_bind_blob	src/server/sv_sqlite.c	/^int sl_bind_blob( const void *value, int len ) {$/;"	f
sl_bind_double	src/server/sv_sqlite.c	/^int sl_bind_double( double value ) {$/;"	f
sl_bind_int	src/server/sv_sqlite.c	/^int sl_bind_int( int value ) {$/;"	f
sl_bind_int64	src/server/sv_sqlite.c	/^int sl_bind_int64( int64_t value ) {$/;"	f
sl_bind_null	src/server/sv_sqlite.c	/^int sl_bind_null( void ) {$/;"	f
sl_bind_offset	src/server/sv_sqlite.c	/^int           sl_bind_offset = 1;$/;"	v
sl_bind_text	src/server/sv_sqlite.c	/^int sl_bind_text( const char *value, int len ) {$/;"	f
sl_bind_text16	src/server/sv_sqlite.c	/^int sl_bind_text16( const void *value, int len ) {$/;"	f
sl_bind_zeroblob	src/server/sv_sqlite.c	/^int sl_bind_zeroblob( int len ) {$/;"	f
sl_changes	src/server/sv_sqlite.c	/^int64_t sl_changes( void ) {$/;"	f
sl_close	src/server/sv_sqlite.c	/^int sl_close( char *data, int *steps ){$/;"	f
sl_close_sl	src/server/sv_sqlite.c	/^void sl_close_sl( void ) {$/;"	f
sl_exec	src/server/sv_sqlite.c	/^int sl_exec( char *data, int *steps ) {$/;"	f
sl_exec_w	src/server/sv_sqlite.c	/^int sl_exec_w( const char *sql ) {$/;"	f
sl_execs	src/server/sv_database.c	/^sl_execs_t sl_execs[ ] = {$/;"	v
sl_execs_count	src/server/sv_database.c	/^size_t sl_execs_count = SL_ARRAY_SIZE( sl_execs );$/;"	v
sl_execs_t	src/server/sv_sqlite.h	/^typedef const char *sl_execs_t;$/;"	t
sl_lastrow	src/server/sv_sqlite.c	/^int64_t sl_lastrow( void ) {$/;"	f
sl_mem_close	src/server/sv_sqlite.c	/^int sl_mem_close( void ) {$/;"	f
sl_mem_load	src/server/sv_sqlite.c	/^int sl_mem_load( const char *uriname ) {$/;"	f
sl_mem_name	src/server/sv_sqlite.c	/^const char   *sl_mem_name = NULL;$/;"	v
sl_open	src/server/sv_sqlite.c	/^int sl_open( char *data, int *steps ) {$/;"	f
sl_prep	src/server/sv_sqlite.c	/^int sl_prep( const char *sql, sqlite3_stmt **stmt ) {$/;"	f
sl_queries	src/server/sv_database.c	/^sl_queries_t sl_queries[ DB_COUNT ] = {$/;"	v
sl_queries_count	src/server/sv_database.c	/^size_t sl_queries_count = SL_ARRAY_SIZE( sl_queries );$/;"	v
sl_queries_t	src/server/sv_sqlite.h	/^typedef int (*sl_queries_t)( char *data, int *steps );$/;"	t
sl_query	src/server/sv_sqlite.c	/^int sl_query( dbArray_t type, char *data, int *steps ) {$/;"	f
sl_result_blob	src/server/sv_sqlite.c	/^int sl_result_blob( void **value ) {$/;"	f
sl_result_double	src/server/sv_sqlite.c	/^double sl_result_double( void ) {$/;"	f
sl_result_int	src/server/sv_sqlite.c	/^int sl_result_int( void ) {$/;"	f
sl_result_int64	src/server/sv_sqlite.c	/^int64_t sl_result_int64( void ) {$/;"	f
sl_result_offset	src/server/sv_sqlite.c	/^int           sl_result_offset = 0;$/;"	v
sl_result_text	src/server/sv_sqlite.c	/^int sl_result_text( char **value ) {$/;"	f
sl_result_text16	src/server/sv_sqlite.c	/^int sl_result_text16( void **value ) {$/;"	f
sl_selected_stmt	src/server/sv_sqlite.c	/^sqlite3_stmt *sl_selected_stmt = NULL;$/;"	v
sl_statements	src/server/sv_database.c	/^sl_statements_s sl_statements[ ] = {$/;"	v
sl_statements_count	src/server/sv_database.c	/^size_t sl_statements_count = SL_ARRAY_SIZE( sl_statements );$/;"	v
sl_statements_s	src/server/sv_sqlite.h	/^} sl_statements_s;$/;"	t	typeref:struct:__anon191
sl_step	src/server/sv_sqlite.c	/^int sl_step( qboolean query ) {$/;"	f
sleep	src/server/sqlite3.c	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	file:
sleepObj	src/server/sqlite3.c	/^static HANDLE sleepObj = NULL;$/;"	v	file:
sliderBar	src/ui/ui_shared.h	/^  qhandle_t sliderBar;$/;"	m	struct:__anon504
sliderThumb	src/ui/ui_shared.h	/^  qhandle_t sliderThumb;$/;"	m	struct:__anon504
slot	src/game/g_local.h	/^  int               slot;$/;"	m	struct:namelog_s
slots	src/game/bg_public.h	/^  int       slots;$/;"	m	struct:__anon355
slots	src/game/bg_public.h	/^  int       slots;$/;"	m	struct:__anon356
slowBlobFire	src/game/g_weapon.c	/^void slowBlobFire( gentity_t *ent )$/;"	f
smallFont	src/ui/ui_shared.h	/^  fontInfo_t smallFont;$/;"	m	struct:__anon504
smallFontScale	src/ui/ui_shared.h	/^  float      smallFontScale;$/;"	m	struct:__anon506
smallzone	src/qcommon/common.c	/^memzone_t	*smallzone;$/;"	v
smooth_t	src/cgame/cg_local.h	/^} smooth_t;$/;"	t	typeref:struct:__anon240
smootheddouble	src/client/cl_cin.c	/^	qboolean			half, smootheddouble, inMemory;$/;"	m	struct:__anon100	file:
snap	src/cgame/cg_local.h	/^  snapshot_t    *snap;                              \/\/ cg.snap->serverTime <= cg.time$/;"	m	struct:__anon249
snap	src/client/client.h	/^	clSnapshot_t	snap;			\/\/ latest received from server$/;"	m	struct:__anon86
snapFlagServerBit	src/server/server.h	/^	int			snapFlagServerBit;			\/\/ ^= SNAPFLAG_SERVERCOUNT every SV_SpawnServer()$/;"	m	struct:__anon188
snapFlags	src/cgame/cg_local.h	/^  int           snapFlags;                            \/\/ SNAPFLAG_RATE_DELAYED, etc$/;"	m	struct:__anon258
snapFlags	src/cgame/cg_public.h	/^  int           snapFlags;                            \/\/ SNAPFLAG_RATE_DELAYED, etc$/;"	m	struct:__anon228
snapFlags	src/client/client.h	/^	int				snapFlags;		\/\/ rate delayed and dropped commands$/;"	m	struct:__anon84
snapFlags	src/client/client.h	/^  int           snapFlags;                            \/\/ SNAPFLAG_RATE_DELAYED, etc$/;"	m	struct:__anon83
snapShotTime	src/cgame/cg_local.h	/^  int                   snapShotTime;     \/\/ last time this entity was found in a snapshot$/;"	m	struct:centity_s
snapshotCount	src/cgame/cg_draw.c	/^  int snapshotCount;$/;"	m	struct:__anon226	file:
snapshotCounter	src/server/server.h	/^	int				snapshotCounter;	\/\/ incremented for each snapshot built$/;"	m	struct:__anon184
snapshotCounter	src/server/server.h	/^	int			snapshotCounter;	\/\/ used to prevent double adding from portal views$/;"	m	struct:svEntity_s
snapshotEntities	src/server/server.h	/^	entityState_t	*snapshotEntities;		\/\/ [numSnapshotEntities]$/;"	m	struct:__anon188
snapshotEntities	src/server/sv_snapshot.c	/^	int		snapshotEntities[MAX_SNAPSHOT_ENTITIES];	$/;"	m	struct:__anon223	file:
snapshotEntityNumbers_t	src/server/sv_snapshot.c	/^} snapshotEntityNumbers_t;$/;"	t	typeref:struct:__anon223	file:
snapshotFlags	src/cgame/cg_draw.c	/^  int snapshotFlags[ LAG_SAMPLES ];$/;"	m	struct:__anon226	file:
snapshotMsec	src/server/server.h	/^	int				snapshotMsec;		\/\/ requests a snapshot every snapshotMsec unless rate choked$/;"	m	struct:client_s
snapshotSamples	src/cgame/cg_draw.c	/^  int snapshotSamples[ LAG_SAMPLES ];$/;"	m	struct:__anon226	file:
snapshot_t	src/cgame/cg_public.h	/^} snapshot_t;$/;"	t	typeref:struct:__anon228
snapshots	src/client/client.h	/^	clSnapshot_t	snapshots[PACKET_BACKUP];$/;"	m	struct:__anon86
sndBuffer	src/client/snd_local.h	/^} sndBuffer;$/;"	t	typeref:struct:sndBuffer_s
sndBuffer_s	src/client/snd_local.h	/^typedef	struct sndBuffer_s {$/;"	s
sndChunk	src/client/snd_local.h	/^	short					sndChunk[SND_CHUNK_SIZE];$/;"	m	struct:sndBuffer_s
snd_codec_s	src/client/snd_codec.h	/^struct snd_codec_s$/;"	s
snd_codec_t	src/client/snd_codec.h	/^typedef struct snd_codec_s snd_codec_t;$/;"	t	typeref:struct:snd_codec_s
snd_fry	src/game/g_local.h	/^  int               snd_fry;                      \/\/ sound index for standing in lava$/;"	m	struct:__anon316
snd_info_s	src/client/snd_codec.h	/^typedef struct snd_info_s$/;"	s
snd_info_t	src/client/snd_codec.h	/^} snd_info_t;$/;"	t	typeref:struct:snd_info_s
snd_inited	src/sdl/sdl_snd.c	/^qboolean snd_inited = qfalse;$/;"	v
snd_linear_count	src/client/snd_mix.c	/^int      snd_linear_count;$/;"	v
snd_out	src/client/snd_mix.c	/^short*   snd_out;$/;"	v
snd_p	src/client/snd_mix.c	/^int*     snd_p;  $/;"	v
snd_stream_s	src/client/snd_codec.h	/^typedef struct snd_stream_s$/;"	s
snd_stream_t	src/client/snd_codec.h	/^} snd_stream_t;$/;"	t	typeref:struct:snd_stream_s
snd_vol	src/client/snd_mix.c	/^static int snd_vol;$/;"	v	file:
snprintf	src/master/common.h	82;"	d
snprintf	src/server/sqlite3.c	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
so	src/qcommon/vm_powerpc_asm.h	110;"	d
sock	src/qcommon/qcommon.h	/^	netsrc_t	sock;$/;"	m	struct:__anon422
socketError	src/qcommon/net_ip.c	55;"	d	file:
socketError	src/qcommon/net_ip.c	91;"	d	file:
socklen_t	src/master/master.c	/^typedef int socklen_t;$/;"	t	file:
socklen_t	src/qcommon/net_ip.c	/^typedef int socklen_t;$/;"	t	file:
socksBuf	src/qcommon/net_ip.c	/^static char socksBuf[4096];$/;"	v	file:
socksRelayAddr	src/qcommon/net_ip.c	/^static struct sockaddr	socksRelayAddr;$/;"	v	typeref:struct:sockaddr	file:
soft_heap_limit	src/server/sqlite3.c	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit64	src/server/sqlite3.c	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
solid	src/cgame/cg_local.h	/^	int		solid;			\/\/ for client side prediction, trap_linkentity sets this properly$/;"	m	struct:__anon257
solid	src/client/client.h	/^	int		solid;			\/\/ for client side prediction, trap_linkentity sets this properly$/;"	m	struct:alternateEntityState_s
solid	src/qcommon/q_shared.h	/^	int		solid;			\/\/ for client side prediction, trap_linkentity sets this properly$/;"	m	struct:entityState_s
solidBox	src/ui/ui_shared.h	/^  qhandle_t solidBox;$/;"	m	struct:__anon504
sort	src/renderergl1/tr_local.h	/^	float		sort;					\/\/ lower numbered shaders draw before higher numbered$/;"	m	struct:shader_s
sort	src/renderergl1/tr_local.h	/^	unsigned			sort;			\/\/ bit combination for fast compares$/;"	m	struct:drawSurf_s
sort	src/renderergl2/tr_local.h	/^	float		sort;					\/\/ lower numbered shaders draw before higher numbered$/;"	m	struct:shader_s
sort	src/renderergl2/tr_local.h	/^	float sort;$/;"	m	struct:pshadow_s
sort	src/renderergl2/tr_local.h	/^	unsigned int		sort;			\/\/ bit combination for fast compares$/;"	m	struct:drawSurf_s
sortDir	src/ui/ui_local.h	/^  int    sortDir;$/;"	m	struct:serverStatus_s
sortFlags	src/server/sqlite3.c	/^  u8 sortFlags;         \/* Zero or more SORTFLAG_* bits *\/$/;"	m	struct:SortCtx	file:
sortKey	src/cgame/cg_local.h	/^  int               sortKey;$/;"	m	struct:particle_s
sortKey	src/ui/ui_local.h	/^  int    sortKey;$/;"	m	struct:serverStatus_s
sortOrder	src/server/sqlite3.c	/^    u8 sortOrder;           \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item	file:
sort_symbols	src/tools/asm/q3asm.c	/^static void sort_symbols ()$/;"	f	file:
sorted	src/server/sqlite3.c	/^  u8 sorted;                \/* True if really sorted (not just grouped) *\/$/;"	m	struct:WhereInfo	file:
sorted	src/ui/ui_local.h	/^  qboolean sorted;$/;"	m	struct:serverStatus_s
sortedClients	src/game/g_local.h	/^  int               sortedClients[MAX_CLIENTS];   \/\/ sorted by score$/;"	m	struct:__anon316
sortedIndex	src/renderergl1/tr_local.h	/^	int			sortedIndex;			\/\/ this shader == tr.sortedShaders[sortedIndex]$/;"	m	struct:shader_s
sortedIndex	src/renderergl2/tr_local.h	/^	int			sortedIndex;			\/\/ this shader == tr.sortedShaders[sortedIndex]$/;"	m	struct:shader_s
sortedParticles	src/cgame/cg_particles.c	/^static particle_t           *sortedParticles[ MAX_PARTICLES ];$/;"	v	file:
sortedShaders	src/renderergl1/tr_local.h	/^	shader_t				*sortedShaders[MAX_SHADERS];$/;"	m	struct:__anon163
sortedShaders	src/renderergl2/tr_local.h	/^	shader_t				*sortedShaders[MAX_SHADERS];$/;"	m	struct:__anon63
sortingIdx	src/server/sqlite3.c	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo	file:
sortingIdxPTab	src/server/sqlite3.c	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo	file:
sound	src/cgame/cg_local.h	/^  sfxHandle_t sound;$/;"	m	struct:__anon244
sound1to2	src/game/g_local.h	/^  int               sound1to2;$/;"	m	struct:gentity_s
sound2to1	src/game/g_local.h	/^  int               sound2to1;$/;"	m	struct:gentity_s
soundBuffer	src/cgame/cg_local.h	/^  qhandle_t     soundBuffer[ MAX_SOUNDBUFFER ];$/;"	m	struct:__anon249
soundBufferIn	src/cgame/cg_local.h	/^  int           soundBufferIn;$/;"	m	struct:__anon249
soundBufferOut	src/cgame/cg_local.h	/^  int           soundBufferOut;$/;"	m	struct:__anon249
soundChannel_t	src/qcommon/q_shared.h	/^} soundChannel_t;$/;"	t	typeref:enum:__anon473
soundChannels	src/client/snd_local.h	/^	int			soundChannels;$/;"	m	struct:sfx_s
soundCompressed	src/client/snd_local.h	/^	qboolean		soundCompressed;		\/\/ not in Memory$/;"	m	struct:sfx_s
soundCompressionMethod	src/client/snd_local.h	/^	int				soundCompressionMethod;	$/;"	m	struct:sfx_s
soundData	src/client/snd_local.h	/^	sndBuffer		*soundData;$/;"	m	struct:sfx_s
soundInterface_t	src/client/snd_local.h	/^} soundInterface_t;$/;"	t	typeref:struct:__anon96
soundLength	src/client/snd_local.h	/^	int 			soundLength;$/;"	m	struct:sfx_s
soundLoop	src/game/g_local.h	/^  int               soundLoop;$/;"	m	struct:gentity_s
soundName	src/client/snd_local.h	/^	char 			soundName[MAX_QPATH];$/;"	m	struct:sfx_s
soundName	src/ui/ui_shared.h	/^  const char *soundName;            \/\/ background loop sound for menu$/;"	m	struct:__anon503
soundPos1	src/game/g_local.h	/^  int               soundPos1;$/;"	m	struct:gentity_s
soundPos2	src/game/g_local.h	/^  int               soundPos2;$/;"	m	struct:gentity_s
soundRegistered	src/client/client.h	/^	qboolean	soundRegistered;$/;"	m	struct:__anon90
soundStarted	src/client/client.h	/^	qboolean	soundStarted;$/;"	m	struct:__anon90
soundTime	src/cgame/cg_local.h	/^  int           soundTime;$/;"	m	struct:__anon249
sound_t	src/cgame/cg_local.h	/^} sound_t;$/;"	t	typeref:struct:__anon244
soundexFunc	src/server/sqlite3.c	/^static void soundexFunc($/;"	f	file:
sounds	src/cgame/cg_local.h	/^  sfxHandle_t sounds[ MAX_CUSTOM_SOUNDS ];$/;"	m	struct:__anon243
sounds	src/cgame/cg_local.h	/^  sound_t     sounds[ MAX_BUILDABLE_ANIMATIONS ];$/;"	m	struct:__anon245
source	src/tools/lcc/cpp/cpp.h	/^typedef struct source {$/;"	s
sourceFile	src/tools/lcc/src/bytecode.c	/^static char	*sourceFile;$/;"	v	file:
sourceFiles	src/qcommon/parse.c	/^source_t *sourceFiles[MAX_SOURCEFILES];$/;"	v
sourceLine	src/tools/lcc/src/bytecode.c	/^static int sourceLine;$/;"	v	file:
sourceOps	src/tools/asm/q3asm.c	/^sourceOps_t		sourceOps[] = {$/;"	v
sourceOps_t	src/tools/asm/q3asm.c	/^} sourceOps_t;$/;"	t	typeref:struct:__anon268	file:
sourcePtr	src/tools/lcc/src/bytecode.c	/^static char *sourcePtr;$/;"	v	file:
source_instruction_s	src/qcommon/vm_powerpc.c	/^struct source_instruction_s {$/;"	s	file:
source_instruction_t	src/qcommon/vm_powerpc.c	/^typedef struct source_instruction_s source_instruction_t;$/;"	t	typeref:struct:source_instruction_s	file:
source_s	src/qcommon/parse.c	/^typedef struct source_s$/;"	s	file:
source_t	src/qcommon/parse.c	/^} source_t;$/;"	t	typeref:struct:source_s	file:
sourceid	src/server/sqlite3.c	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines	file:
sourceidFunc	src/server/sqlite3.c	/^static void sourceidFunc($/;"	f	file:
spDemoRecording	src/client/client.h	/^	qboolean	spDemoRecording;$/;"	m	struct:__anon87
space	src/tools/lcc/src/bytecode.c	/^static void I(space)(int n) {$/;"	f	file:
space	src/tools/lcc/src/c.h	/^void (*space)(int);$/;"	m	struct:interface
space	src/tools/lcc/src/null.c	/^static void I(space)(int n) {}$/;"	f	file:
space	src/tools/lcc/src/symbolic.c	/^static void I(space)(int n) {$/;"	f	file:
spanBinaryExpr	src/server/sqlite3.c	/^  static void spanBinaryExpr($/;"	f	file:
spanExpr	src/server/sqlite3.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token t){$/;"	f	file:
spanSet	src/server/sqlite3.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanUnaryPostfix	src/server/sqlite3.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPrefix	src/server/sqlite3.c	/^  static void spanUnaryPrefix($/;"	f	file:
sparc_assemble	src/qcommon/vm_sparc.c	/^static unsigned int sparc_assemble(enum sparc_iname iname, const int argc, const int *argv)$/;"	f	file:
sparc_compute_code	src/qcommon/vm_sparc.c	/^static void sparc_compute_code(vm_t *vm, struct func_info * const fp)$/;"	f	file:
sparc_iname	src/qcommon/vm_sparc.c	/^enum sparc_iname {$/;"	g	file:
sparc_opcode	src/qcommon/vm_sparc.c	/^struct sparc_opcode {$/;"	s	file:
sparc_opcodes	src/qcommon/vm_sparc.c	/^static const struct sparc_opcode sparc_opcodes[] = {$/;"	v	typeref:struct:sparc_opcode	file:
sparc_push_data	src/qcommon/vm_sparc.c	/^static unsigned int sparc_push_data(struct func_info * const fp, unsigned int val)$/;"	f	file:
spawn	src/game/g_spawn.c	/^  void  (*spawn)(gentity_t *ent);$/;"	m	struct:__anon368	file:
spawn	src/tools/lcc/etc/lcc.c	/^static int spawn(const char *cmdname, char **argv) {$/;"	f	file:
spawnBlockTime	src/game/g_local.h	/^  int               spawnBlockTime;     \/\/ timer for anti spawn block$/;"	m	struct:gentity_s
spawnQueue_s	src/game/g_local.h	/^typedef struct spawnQueue_s$/;"	s
spawnQueue_t	src/game/g_local.h	/^} spawnQueue_t;$/;"	t	typeref:struct:spawnQueue_s
spawnTime	src/cgame/cg_local.h	/^  int           spawnTime;                          \/\/ fovwarp$/;"	m	struct:__anon249
spawnVarChars	src/game/g_local.h	/^  char              spawnVarChars[ MAX_SPAWN_VARS_CHARS ];$/;"	m	struct:__anon316
spawnVars	src/game/g_local.h	/^  char              *spawnVars[ MAX_SPAWN_VARS ][ 2 ];  \/\/ key \/ value pairs$/;"	m	struct:__anon316
spawn_t	src/game/g_spawn.c	/^} spawn_t;$/;"	t	typeref:struct:__anon368	file:
spawned	src/game/g_local.h	/^  qboolean          spawned;            \/\/ whether or not this buildable has finished spawning$/;"	m	struct:gentity_s
spawnflags	src/game/g_local.h	/^  int               spawnflags;     \/\/ set in QuakeEd$/;"	m	struct:gentity_s
spawning	src/game/g_local.h	/^  qboolean          spawning;                     \/\/ the G_Spawn*() functions are valid$/;"	m	struct:__anon316
spawns	src/game/g_spawn.c	/^spawn_t spawns[ ] =$/;"	v
spec	src/tools/lcc/lburg/gram.y	/^spec	: decls PPERCENT rules		{ yylineno = 0; }$/;"	l
specific	src/tools/lcc/src/c.h	20;"	d
specifier	src/tools/lcc/src/decl.c	/^static Type specifier(int *sclass) {$/;"	f	file:
spectatorClient	src/game/g_local.h	/^  int               spectatorClient;  \/\/ for chasecam and follow mode$/;"	m	struct:__anon310
spectatorList	src/cgame/cg_local.h	/^  char          spectatorList[ MAX_STRING_CHARS ];  \/\/ list of names$/;"	m	struct:__anon249
spectatorOffset	src/cgame/cg_local.h	/^  float         spectatorOffset;                    \/\/ current offset from start$/;"	m	struct:__anon249
spectatorState	src/game/g_local.h	/^  spectatorState_t  spectatorState;$/;"	m	struct:__anon310
spectatorState_t	src/game/bg_public.h	/^} spectatorState_t;$/;"	t	typeref:enum:__anon346
spectatorTime	src/cgame/cg_local.h	/^  int           spectatorTime;                      \/\/ next time to offset$/;"	m	struct:__anon249
spectatorTime	src/game/g_local.h	/^  int               spectatorTime;    \/\/ for determining next-in-line to play$/;"	m	struct:__anon310
specularScale	src/renderergl2/tr_local.h	/^	vec4_t specularScale;$/;"	m	struct:__anon26
speed	src/cgame/cg_local.h	/^	int			speed;$/;"	m	struct:__anon256
speed	src/client/client.h	/^	int			speed;$/;"	m	struct:alternatePlayerState_s
speed	src/client/snd_local.h	/^	int			speed;$/;"	m	struct:__anon93
speed	src/game/bg_public.h	/^  float     speed;$/;"	m	struct:__anon349
speed	src/game/g_local.h	/^  float             speed;$/;"	m	struct:gentity_s
speed	src/qcommon/msg.c	/^	int			speed;$/;"	m	struct:alternatePlayerState_s	file:
speed	src/qcommon/q_shared.h	/^	int			speed;$/;"	m	struct:playerState_s
speedSampleTimes	src/cgame/cg_draw.c	/^int speedSampleTimes[ SPEEDOMETER_NUM_SAMPLES ];$/;"	v
speedSamples	src/cgame/cg_draw.c	/^float speedSamples[ SPEEDOMETER_NUM_SAMPLES ];$/;"	v
speexDecoder	src/client/client.h	/^	void *speexDecoder[MAX_CLIENTS];$/;"	m	struct:__anon87
speexDecoderBits	src/client/client.h	/^	SpeexBits speexDecoderBits[MAX_CLIENTS];$/;"	m	struct:__anon87
speexEncoder	src/client/client.h	/^	void *speexEncoder;$/;"	m	struct:__anon87
speexEncoderBits	src/client/client.h	/^	SpeexBits speexEncoderBits;$/;"	m	struct:__anon87
speexFrameSize	src/client/client.h	/^	int speexFrameSize;$/;"	m	struct:__anon87
speexInitialized	src/client/client.h	/^	qboolean speexInitialized;$/;"	m	struct:__anon87
speexPreprocessor	src/client/client.h	/^	SpeexPreprocessState *speexPreprocessor;$/;"	m	struct:__anon87
speexSampleRate	src/client/client.h	/^	int speexSampleRate;$/;"	m	struct:__anon87
sphere	src/qcommon/cm_local.h	/^	sphere_t		sphere;		\/\/ sphere for oriendted capsule collision$/;"	m	struct:__anon443
sphereModel	src/cgame/cg_local.h	/^  qhandle_t   sphereModel;$/;"	m	struct:__anon251
sphere_t	src/qcommon/cm_local.h	/^} sphere_t;$/;"	t	typeref:struct:__anon442
sphericalCone240Model	src/cgame/cg_local.h	/^  qhandle_t   sphericalCone240Model;$/;"	m	struct:__anon251
sphericalCone64Model	src/cgame/cg_local.h	/^  qhandle_t   sphericalCone64Model;$/;"	m	struct:__anon251
spill	src/tools/lcc/src/gen.c	/^void spill(unsigned mask, int n, Node here) {$/;"	f
spillee	src/tools/lcc/src/gen.c	/^static Symbol spillee(Symbol set, unsigned mask[], Node here) {$/;"	f	file:
spillr	src/tools/lcc/src/gen.c	/^static void spillr(Symbol r, Node here) {$/;"	f	file:
spills	src/tools/lcc/src/config.h	/^	unsigned spills:1;$/;"	m	struct:__anon274
splashDamage	src/game/bg_public.h	/^  int           splashDamage;$/;"	m	struct:__anon353
splashDamage	src/game/g_local.h	/^  int               splashDamage; \/\/ quad will increase this without increasing radius$/;"	m	struct:gentity_s
splashMethodOfDeath	src/game/g_local.h	/^  int               splashMethodOfDeath;$/;"	m	struct:gentity_s
splashRadius	src/game/bg_public.h	/^  int           splashRadius;$/;"	m	struct:__anon353
splashRadius	src/game/g_local.h	/^  int               splashRadius;$/;"	m	struct:gentity_s
splitNodeStartree	src/server/sqlite3.c	/^static int splitNodeStartree($/;"	f	file:
sql	src/server/sqlite3.c	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
sqlite3	src/server/sqlite3.c	/^struct sqlite3 {$/;"	s	file:
sqlite3	src/server/sqlite3.c	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3	file:
sqlite3	src/server/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3AbsInt32	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AbsInt32(int x){$/;"	f
sqlite3AddCheckConstraint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCollateType	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddColumn	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumn(Parse *pParse, Token *pName, Token *pType){$/;"	f
sqlite3AddDefaultValue	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddInt64	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddNotNull	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddPrimaryKey	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddPrimaryKey($/;"	f
sqlite3AffinityType	src/server/sqlite3.c	/^SQLITE_PRIVATE char sqlite3AffinityType(const char *zIn, u8 *pszEst){$/;"	f
sqlite3AllocateIndexObject	src/server/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3AllocateIndexObject($/;"	f
sqlite3AlterBeginAddColumn	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterFinishAddColumn	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterRenameTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterRenameTable($/;"	f
sqlite3AnalysisLoad	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3Analyze	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3AnalyzeFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AnalyzeFunctions(void){$/;"	f
sqlite3ApiExit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3Apis	src/server/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = { 0 };$/;"	v	file:
sqlite3Apis	src/server/sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3AppendChar	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AppendChar(StrAccum *p, int N, char c){$/;"	f
sqlite3ArrayAllocate	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ArrayAllocate($/;"	f
sqlite3AtoF	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3Atoi	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi64	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Attach	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3AuthCheck	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	src/server/sqlite3.c	14656;"	d	file:
sqlite3AuthContextPop	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	src/server/sqlite3.c	14658;"	d	file:
sqlite3AuthContextPush	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	src/server/sqlite3.c	14657;"	d	file:
sqlite3AuthRead	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthRead($/;"	f
sqlite3AuthRead	src/server/sqlite3.c	14655;"	d	file:
sqlite3AuthReadCol	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthReadCol($/;"	f
sqlite3AutoExtList	src/server/sqlite3.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	src/server/sqlite3.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoLoadExtensions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3Autoext	src/server/sqlite3.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoincrementBegin	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	src/server/sqlite3.c	14460;"	d	file:
sqlite3AutoincrementEnd	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	src/server/sqlite3.c	14461;"	d	file:
sqlite3BackupRestart	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupUpdate	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BeginBenignMalloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	src/server/sqlite3.c	14973;"	d	file:
sqlite3BeginTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTrigger	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTrigger($/;"	f
sqlite3BeginWriteOperation	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BenignMallocHooks	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BenignMallocHooks($/;"	f
sqlite3BinaryCompareCollSeq	src/server/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BitvecBuiltinTest	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecCreate	src/server/sqlite3.c	/^SQLITE_PRIVATE Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecDestroy	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecSet	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSize	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecTest	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTestNotNull	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTestNotNull(Bitvec *p, u32 i){$/;"	f
sqlite3BlobCompare	src/server/sqlite3.c	/^static SQLITE_NOINLINE int sqlite3BlobCompare(const Mem *pB1, const Mem *pB2){$/;"	f	file:
sqlite3BlockedList	src/server/sqlite3.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BtreeBeginStmt	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginTrans	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeCheckpoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeClearCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClearTableOfCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTableOfCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClose	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeCloseCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCommit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommitPhaseOne	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseTwo	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeCopyFile	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCreateTable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursorHasHint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasHint(BtCursor *pCsr, unsigned int mask){$/;"	f
sqlite3BtreeCursorHasMoved	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasMoved(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorHint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorHint(BtCursor *pCur, int eHintType, ...){$/;"	f
sqlite3BtreeCursorHintFlags	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorHintFlags(BtCursor *pCur, unsigned x){$/;"	f
sqlite3BtreeCursorIsValid	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorRestore	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorRestore(BtCursor *pCur, int *pDifferentRow){$/;"	f
sqlite3BtreeCursorSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorZero	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeData	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeData(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeDataFetch	src/server/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreeDataFetch(BtCursor *pCur, u32 *pAmt){$/;"	f
sqlite3BtreeDataSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDataSize(BtCursor *pCur, u32 *pSize){$/;"	f
sqlite3BtreeDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDelete(BtCursor *pCur, u8 flags){$/;"	f
sqlite3BtreeDropTable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeEnter	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	src/server/sqlite3.c	10651;"	d	file:
sqlite3BtreeEnterAll	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	src/server/sqlite3.c	10652;"	d	file:
sqlite3BtreeEnterCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	src/server/sqlite3.c	10654;"	d	file:
sqlite3BtreeEof	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeFirst	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeGetAutoVacuum	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetFilename	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetMeta	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetOptimalReserve	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetOptimalReserve(Btree *p){$/;"	f
sqlite3BtreeGetPageSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetReserveNoMutex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetReserveNoMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsAllMutexes	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	src/server/sqlite3.c	10674;"	d	file:
sqlite3BtreeHoldsMutex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	src/server/sqlite3.c	10673;"	d	file:
sqlite3BtreeIncrVacuum	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeIncrblobCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeIncrblobCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeInsert	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeInsert($/;"	f
sqlite3BtreeIntegrityCheck	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIsInBackup	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeIsReadonly	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsReadonly(Btree *p){$/;"	f
sqlite3BtreeKey	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKey(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeKeyFetch	src/server/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreeKeyFetch(BtCursor *pCur, u32 *pAmt){$/;"	f
sqlite3BtreeKeySize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKeySize(BtCursor *pCur, i64 *pSize){$/;"	f
sqlite3BtreeLast	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLastPage	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLeave	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	src/server/sqlite3.c	10669;"	d	file:
sqlite3BtreeLeaveAll	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	src/server/sqlite3.c	10671;"	d	file:
sqlite3BtreeLeaveCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	src/server/sqlite3.c	10670;"	d	file:
sqlite3BtreeLockTable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeMaxPageCount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMovetoUnpacked	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeNewDb	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNewDb(Btree *p){$/;"	f
sqlite3BtreeNext	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNext(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeOpen($/;"	f
sqlite3BtreePager	src/server/sqlite3.c	/^SQLITE_PRIVATE Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePrevious	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePrevious(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreePutData	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreeRollback	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeRollback(Btree *p, int tripCode, int writeOnly){$/;"	f
sqlite3BtreeSavepoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSchema	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchemaLocked	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSecureDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSetAutoVacuum	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetCacheSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetMmapLimit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetMmapLimit(Btree *p, sqlite3_int64 szMmap){$/;"	f
sqlite3BtreeSetPageSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetPagerFlags	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPagerFlags($/;"	f
sqlite3BtreeSetSpillSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetSpillSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetVersion	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSharable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	src/server/sqlite3.c	10653;"	d	file:
sqlite3BtreeTripAllCursors	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode, int writeOnly){$/;"	f
sqlite3BtreeUpdateMeta	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3BuiltinFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE FuncDefHash sqlite3BuiltinFunctions;$/;"	v
sqlite3CantopenError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CantopenError(int lineno){$/;"	f
sqlite3ChangeCookie	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3CheckCollSeq	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckObjectName	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3Checkpoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3ClearStatTables	src/server/sqlite3.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3ClearTempRegCache	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ClearTempRegCache(Parse *pParse){$/;"	f
sqlite3Close	src/server/sqlite3.c	/^static int sqlite3Close(sqlite3 *db, int forceZombie){$/;"	f	file:
sqlite3CloseExtensions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	src/server/sqlite3.c	14855;"	d	file:
sqlite3CloseSavepoints	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CodeDropTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeDropTable(Parse *pParse, Table *pTab, int iDb, int isView){$/;"	f
sqlite3CodeOnce	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeOnce(Parse *pParse){$/;"	f
sqlite3CodeRowTrigger	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTrigger	src/server/sqlite3.c	14637;"	d	file:
sqlite3CodeRowTriggerDirect	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeRowTriggerDirect	src/server/sqlite3.c	14638;"	d	file:
sqlite3CodeSubselect	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeSubselect($/;"	f
sqlite3CodeVerifyNamedSchema	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifySchema	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3CollapseDatabaseArray	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CollapseDatabaseArray(sqlite3 *db){$/;"	f
sqlite3ColumnDefault	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3ColumnOfIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE i16 sqlite3ColumnOfIndex(Index *pIdx, i16 iCol){$/;"	f
sqlite3ColumnPropertiesFromName	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnPropertiesFromName(Table *pTab, Column *pCol){$/;"	f
sqlite3ColumnPropertiesFromName	src/server/sqlite3.c	14405;"	d	file:
sqlite3ColumnType	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3ColumnType(Column *pCol, char *zDflt){$/;"	f
sqlite3ColumnsFromExprList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ColumnsFromExprList($/;"	f
sqlite3CommitInternalChanges	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CompareAffinity	src/server/sqlite3.c	/^SQLITE_PRIVATE char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompleteInsertion	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CompleteInsertion($/;"	f
sqlite3Config	src/server/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	src/server/sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config;$/;"	v	typeref:struct:Sqlite3Config
sqlite3ConnectionBlocked	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	src/server/sqlite3.c	15019;"	d	file:
sqlite3ConnectionClosed	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	src/server/sqlite3.c	15021;"	d	file:
sqlite3ConnectionUnlocked	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	src/server/sqlite3.c	15020;"	d	file:
sqlite3CorruptError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CorruptError(int lineno){$/;"	f
sqlite3Coverage	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Coverage(int x){$/;"	f
sqlite3CreateColumnExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateForeignKey	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateForeignKey($/;"	f
sqlite3CreateFunc	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3CreateFunc($/;"	f
sqlite3CreateIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3CreateIndex($/;"	f
sqlite3CreateView	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateView($/;"	f
sqlite3CtypeMap	src/server/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3CtypeMap	src/server/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[];$/;"	v
sqlite3DbFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocRaw	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRaw(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRawNN	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocZero	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocZero(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMaskAllZero	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMaskAllZero(yDbMask m){$/;"	f
sqlite3DbNameToBtree	src/server/sqlite3.c	/^SQLITE_PRIVATE Btree *sqlite3DbNameToBtree(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3DbRealloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbRealloc(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbReallocOrFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbStrDup	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrNDup	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrNDup(sqlite3 *db, const char *z, u64 n){$/;"	f
sqlite3DbstatRegister	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbstatRegister(sqlite3 *db){ return SQLITE_OK; }$/;"	f
sqlite3DbstatRegister	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbstatRegister(sqlite3 *db){$/;"	f
sqlite3DebugPrintf	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DecOrHexToI64	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3DecOrHexToI64(const char *z, i64 *pOut){$/;"	f
sqlite3DefaultMutex	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultRowEst	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DeferForeignKey	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeleteColumnNames	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteFrom	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteFrom($/;"	f
sqlite3DeleteIndexSamples	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTrigger	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTrigger	src/server/sqlite3.c	14634;"	d	file:
sqlite3DeleteTriggerStep	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3Dequote	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Dequote(char *z){$/;"	f
sqlite3Detach	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3DropIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTrigger	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTriggerPtr	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3DropTriggerPtr	src/server/sqlite3.c	14635;"	d	file:
sqlite3EndBenignMalloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	src/server/sqlite3.c	14974;"	d	file:
sqlite3EndTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndTable($/;"	f
sqlite3ErrName	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrName(int rc){$/;"	f
sqlite3ErrStr	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3Error	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Error(sqlite3 *db, int err_code){$/;"	f
sqlite3ErrorFinish	src/server/sqlite3.c	/^static SQLITE_NOINLINE void  sqlite3ErrorFinish(sqlite3 *db, int err_code){$/;"	f	file:
sqlite3ErrorMsg	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ErrorWithMsg	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorWithMsg(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ExpirePreparedStatements	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3Expr	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3Expr($/;"	f
sqlite3ExprAddCollateString	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAddCollateString(Parse *pParse, Expr *pExpr, const char *zC){$/;"	f
sqlite3ExprAddCollateToken	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAddCollateToken($/;"	f
sqlite3ExprAffinity	src/server/sqlite3.c	/^SQLITE_PRIVATE char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAlloc	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAnalyzeAggList	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggregates	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnd	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAssignVarNumber	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprAttachSubtrees	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprCacheAffinityChange	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCachePinRegister	src/server/sqlite3.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePop	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePop(Parse *pParse){$/;"	f
sqlite3ExprCachePush	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCacheRemove	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheStore	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCanBeNull	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCheckHeight	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	src/server/sqlite3.c	15008;"	d	file:
sqlite3ExprCode	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAtInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeAtInit($/;"	f
sqlite3ExprCodeCopy	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeCopy(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeExprList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeFactorable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeFactorable(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeGetColumn	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumnOfTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeGetColumnToReg	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnToReg($/;"	f
sqlite3ExprCodeIN	src/server/sqlite3.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeLoadIndexColumn	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeLoadIndexColumn($/;"	f
sqlite3ExprCodeMove	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeTarget	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTemp	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCollSeq	src/server/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCompare(Expr *pA, Expr *pB, int iTab){$/;"	f
sqlite3ExprContainsSubquery	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprContainsSubquery(Expr *p){$/;"	f
sqlite3ExprDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDup	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprFunction	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprIfFalse	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfFalseDup	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalseDup(Parse *pParse, Expr *pExpr, int dest,int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprImpliesExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprImpliesExpr(Expr *pE1, Expr *pE2, int iTab){$/;"	f
sqlite3ExprIsConstant	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantOrFunction	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantOrFunction(Expr *p, u8 isInit){$/;"	f
sqlite3ExprIsInteger	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprIsTableConstant	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsTableConstant(Expr *p, int iCur){$/;"	f
sqlite3ExprListAppend	src/server/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListCheckLength	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprListCompare(ExprList *pA, ExprList *pB, int iTab){$/;"	f
sqlite3ExprListDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDup	src/server/sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListFlags	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3ExprListFlags(const ExprList *pList){$/;"	f
sqlite3ExprListSetName	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetSortOrder	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSortOrder(ExprList *p, int iSortOrder){$/;"	f
sqlite3ExprListSetSpan	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprNeedsNoAffinityChange	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprSetHeightAndFlags	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprSetHeightAndFlags(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSkipCollate	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSkipCollate(Expr *pExpr){$/;"	f
sqlite3ExprWalkNoop	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f
sqlite3FaultSim	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FaultSim(int iTest){$/;"	f
sqlite3FaultSim	src/server/sqlite3.c	14420;"	d	file:
sqlite3FileSuffix3	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FileSuffix3	src/server/sqlite3.c	14745;"	d	file:
sqlite3FindCollSeq	src/server/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindDb	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDbName	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindFunction	src/server/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindInIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindInIndex(Parse *pParse, Expr *pX, u32 inFlags, int *prRhsHasNull){$/;"	f
sqlite3FindIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindTable	src/server/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FinishCoding	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishTrigger	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishTrigger($/;"	f
sqlite3FixExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExpr($/;"	f
sqlite3FixExprList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExprList($/;"	f
sqlite3FixInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FixInit($/;"	f
sqlite3FixSelect	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSelect($/;"	f
sqlite3FixSrcList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSrcList($/;"	f
sqlite3FixTriggerStep	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixTriggerStep($/;"	f
sqlite3FkActions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkActions($/;"	f
sqlite3FkActions	src/server/sqlite3.c	14943;"	d	file:
sqlite3FkCheck	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkCheck($/;"	f
sqlite3FkCheck	src/server/sqlite3.c	14944;"	d	file:
sqlite3FkDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	src/server/sqlite3.c	14953;"	d	file:
sqlite3FkDropTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	src/server/sqlite3.c	14945;"	d	file:
sqlite3FkLocateIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkLocateIndex($/;"	f
sqlite3FkLocateIndex	src/server/sqlite3.c	14954;"	d	file:
sqlite3FkOldmask	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	src/server/sqlite3.c	14946;"	d	file:
sqlite3FkReferences	src/server/sqlite3.c	/^SQLITE_PRIVATE FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkRequired	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkRequired($/;"	f
sqlite3FkRequired	src/server/sqlite3.c	14947;"	d	file:
sqlite3Fts3AllSegdirs	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3Always	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Always(int b) { assert( b ); return b; }$/;"	f
sqlite3Fts3CacheDeferredDoclists	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3CacheDeferredDoclists	src/server/sqlite3.c	138591;"	d	file:
sqlite3Fts3Corrupt	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Corrupt(){$/;"	f
sqlite3Fts3CreateStatTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3CreateStatTable(int *pRc, Fts3Table *p){$/;"	f
sqlite3Fts3DeferToken	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferToken	src/server/sqlite3.c	138590;"	d	file:
sqlite3Fts3DeferredTokenList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3DeferredTokenList	src/server/sqlite3.c	138593;"	d	file:
sqlite3Fts3Dequote	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3DoclistNext	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistNext($/;"	f
sqlite3Fts3DoclistPrev	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3ErrMsg	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ErrMsg(char **pzErr, const char *zFormat, ...){$/;"	f
sqlite3Fts3EvalPhraseCleanup	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhrasePoslist	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhraseStats	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3EvalTestDeferred	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalTestDeferred(Fts3Cursor *pCsr, int *pRc){$/;"	f
sqlite3Fts3ExprFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ExprFree(Fts3Expr *pDel){$/;"	f
sqlite3Fts3ExprInitTestInterface	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprParse	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3FirstFilter	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3FirstFilter($/;"	f
sqlite3Fts3FreeDeferredDoclists	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredDoclists	src/server/sqlite3.c	138592;"	d	file:
sqlite3Fts3FreeDeferredTokens	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	src/server/sqlite3.c	138589;"	d	file:
sqlite3Fts3GetVarint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint(const char *p, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint32	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3HashClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashFind	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFindElem	src/server/sqlite3.c	/^SQLITE_PRIVATE Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInsert	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3IcuTokenizerModule	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3Incrmerge	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Incrmerge(Fts3Table *p, int nMerge, int nMin){$/;"	f
sqlite3Fts3Init	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitHashTable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitTok	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTok(sqlite3 *db, Fts3Hash *pHash){$/;"	f
sqlite3Fts3InitTokenizer	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3IsIdChar	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3MIBufferFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3MIBufferFree(MatchinfoBuffer *p){$/;"	f
sqlite3Fts3Matchinfo	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3MaxLevel	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MaxLevel(Fts3Table *p, int *pnMax){$/;"	f
sqlite3Fts3MsrIncrNext	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrRestart	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrStart	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrOvfl	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3Never	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Never(int b)  { assert( !b ); return b; }$/;"	f
sqlite3Fts3NextToken	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3Offsets	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3OpenTokenizer	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3OpenTokenizer($/;"	f
sqlite3Fts3Optimize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PorterTokenizerModule	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PutVarint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3ReadBlock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3SegReaderCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderFinish	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderNew	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderPending	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderStart	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStep	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegmentsClose	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SelectDocsize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDoctotal	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SimpleTokenizerModule	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3Snippet	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3UnicodeTokenizer	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3UnicodeTokenizer(sqlite3_tokenizer_module const **ppModule){$/;"	f
sqlite3Fts3UpdateMethod	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3VarintLen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3Fts5AuxInit	src/server/sqlite3.c	/^static int sqlite3Fts5AuxInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5BufferAppendBlob	src/server/sqlite3.c	/^static void sqlite3Fts5BufferAppendBlob($/;"	f	file:
sqlite3Fts5BufferAppendPrintf	src/server/sqlite3.c	/^static void sqlite3Fts5BufferAppendPrintf($/;"	f	file:
sqlite3Fts5BufferAppendString	src/server/sqlite3.c	/^static void sqlite3Fts5BufferAppendString($/;"	f	file:
sqlite3Fts5BufferAppendVarint	src/server/sqlite3.c	/^static void sqlite3Fts5BufferAppendVarint(int *pRc, Fts5Buffer *pBuf, i64 iVal){$/;"	f	file:
sqlite3Fts5BufferFree	src/server/sqlite3.c	/^static void sqlite3Fts5BufferFree(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferSet	src/server/sqlite3.c	/^static void sqlite3Fts5BufferSet($/;"	f	file:
sqlite3Fts5BufferSize	src/server/sqlite3.c	/^static int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){$/;"	f	file:
sqlite3Fts5BufferZero	src/server/sqlite3.c	/^static void sqlite3Fts5BufferZero(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5ConfigDeclareVtab	src/server/sqlite3.c	/^static int sqlite3Fts5ConfigDeclareVtab(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigFree	src/server/sqlite3.c	/^static void sqlite3Fts5ConfigFree(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigLoad	src/server/sqlite3.c	/^static int sqlite3Fts5ConfigLoad(Fts5Config *pConfig, int iCookie){$/;"	f	file:
sqlite3Fts5ConfigParse	src/server/sqlite3.c	/^static int sqlite3Fts5ConfigParse($/;"	f	file:
sqlite3Fts5ConfigParseRank	src/server/sqlite3.c	/^static int sqlite3Fts5ConfigParseRank($/;"	f	file:
sqlite3Fts5ConfigSetValue	src/server/sqlite3.c	/^static int sqlite3Fts5ConfigSetValue($/;"	f	file:
sqlite3Fts5Corrupt	src/server/sqlite3.c	/^static int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }$/;"	f	file:
sqlite3Fts5CreateTable	src/server/sqlite3.c	/^static int sqlite3Fts5CreateTable($/;"	f	file:
sqlite3Fts5Dequote	src/server/sqlite3.c	/^static void sqlite3Fts5Dequote(char *z){$/;"	f	file:
sqlite3Fts5DropAll	src/server/sqlite3.c	/^static int sqlite3Fts5DropAll(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ExprCheckPoslists	src/server/sqlite3.c	/^static void sqlite3Fts5ExprCheckPoslists(Fts5Expr *pExpr, i64 iRowid){$/;"	f	file:
sqlite3Fts5ExprClearEof	src/server/sqlite3.c	/^static void sqlite3Fts5ExprClearEof(Fts5Expr *pExpr){$/;"	f	file:
sqlite3Fts5ExprClearPoslists	src/server/sqlite3.c	/^static Fts5PoslistPopulator *sqlite3Fts5ExprClearPoslists(Fts5Expr *pExpr, int bLive){$/;"	f	file:
sqlite3Fts5ExprClonePhrase	src/server/sqlite3.c	/^static int sqlite3Fts5ExprClonePhrase($/;"	f	file:
sqlite3Fts5ExprEof	src/server/sqlite3.c	/^static int sqlite3Fts5ExprEof(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprFirst	src/server/sqlite3.c	/^static int sqlite3Fts5ExprFirst(Fts5Expr *p, Fts5Index *pIdx, i64 iFirst, int bDesc){$/;"	f	file:
sqlite3Fts5ExprFree	src/server/sqlite3.c	/^static void sqlite3Fts5ExprFree(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprInit	src/server/sqlite3.c	/^static int sqlite3Fts5ExprInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5ExprNew	src/server/sqlite3.c	/^static int sqlite3Fts5ExprNew($/;"	f	file:
sqlite3Fts5ExprNext	src/server/sqlite3.c	/^static int sqlite3Fts5ExprNext(Fts5Expr *p, i64 iLast){$/;"	f	file:
sqlite3Fts5ExprPhraseCollist	src/server/sqlite3.c	/^static int sqlite3Fts5ExprPhraseCollist($/;"	f	file:
sqlite3Fts5ExprPhraseCount	src/server/sqlite3.c	/^static int sqlite3Fts5ExprPhraseCount(Fts5Expr *pExpr){$/;"	f	file:
sqlite3Fts5ExprPhraseSize	src/server/sqlite3.c	/^static int sqlite3Fts5ExprPhraseSize(Fts5Expr *pExpr, int iPhrase){$/;"	f	file:
sqlite3Fts5ExprPopulatePoslists	src/server/sqlite3.c	/^static int sqlite3Fts5ExprPopulatePoslists($/;"	f	file:
sqlite3Fts5ExprPoslist	src/server/sqlite3.c	/^static int sqlite3Fts5ExprPoslist(Fts5Expr *pExpr, int iPhrase, const u8 **pa){$/;"	f	file:
sqlite3Fts5ExprRowid	src/server/sqlite3.c	/^static i64 sqlite3Fts5ExprRowid(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5Get32	src/server/sqlite3.c	/^static int sqlite3Fts5Get32(const u8 *aBuf){$/;"	f	file:
sqlite3Fts5GetTokenizer	src/server/sqlite3.c	/^static int sqlite3Fts5GetTokenizer($/;"	f	file:
sqlite3Fts5GetVarint	src/server/sqlite3.c	/^static u8 sqlite3Fts5GetVarint(const unsigned char *p, u64 *v){$/;"	f	file:
sqlite3Fts5GetVarint32	src/server/sqlite3.c	/^static int sqlite3Fts5GetVarint32(const unsigned char *p, u32 *v){$/;"	f	file:
sqlite3Fts5GetVarintLen	src/server/sqlite3.c	/^static int sqlite3Fts5GetVarintLen(u32 iVal){$/;"	f	file:
sqlite3Fts5HashClear	src/server/sqlite3.c	/^static void sqlite3Fts5HashClear(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashFree	src/server/sqlite3.c	/^static void sqlite3Fts5HashFree(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashNew	src/server/sqlite3.c	/^static int sqlite3Fts5HashNew(Fts5Config *pConfig, Fts5Hash **ppNew, int *pnByte){$/;"	f	file:
sqlite3Fts5HashQuery	src/server/sqlite3.c	/^static int sqlite3Fts5HashQuery($/;"	f	file:
sqlite3Fts5HashScanEntry	src/server/sqlite3.c	/^static void sqlite3Fts5HashScanEntry($/;"	f	file:
sqlite3Fts5HashScanEof	src/server/sqlite3.c	/^static int sqlite3Fts5HashScanEof(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanInit	src/server/sqlite3.c	/^static int sqlite3Fts5HashScanInit($/;"	f	file:
sqlite3Fts5HashScanNext	src/server/sqlite3.c	/^static void sqlite3Fts5HashScanNext(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashWrite	src/server/sqlite3.c	/^static int sqlite3Fts5HashWrite($/;"	f	file:
sqlite3Fts5IndexBeginWrite	src/server/sqlite3.c	/^static int sqlite3Fts5IndexBeginWrite(Fts5Index *p, int bDelete, i64 iRowid){$/;"	f	file:
sqlite3Fts5IndexCharlenToBytelen	src/server/sqlite3.c	/^static int sqlite3Fts5IndexCharlenToBytelen($/;"	f	file:
sqlite3Fts5IndexClose	src/server/sqlite3.c	/^static int sqlite3Fts5IndexClose(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexEntryCksum	src/server/sqlite3.c	/^static u64 sqlite3Fts5IndexEntryCksum($/;"	f	file:
sqlite3Fts5IndexFromCsrid	src/server/sqlite3.c	/^static Fts5Index *sqlite3Fts5IndexFromCsrid($/;"	f	file:
sqlite3Fts5IndexGetAverages	src/server/sqlite3.c	/^static int sqlite3Fts5IndexGetAverages(Fts5Index *p, i64 *pnRow, i64 *anSize){$/;"	f	file:
sqlite3Fts5IndexInit	src/server/sqlite3.c	/^static int sqlite3Fts5IndexInit(sqlite3 *db){$/;"	f	file:
sqlite3Fts5IndexIntegrityCheck	src/server/sqlite3.c	/^static int sqlite3Fts5IndexIntegrityCheck(Fts5Index *p, u64 cksum){$/;"	f	file:
sqlite3Fts5IndexLoadConfig	src/server/sqlite3.c	/^static int sqlite3Fts5IndexLoadConfig(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexMerge	src/server/sqlite3.c	/^static int sqlite3Fts5IndexMerge(Fts5Index *p, int nMerge){$/;"	f	file:
sqlite3Fts5IndexOpen	src/server/sqlite3.c	/^static int sqlite3Fts5IndexOpen($/;"	f	file:
sqlite3Fts5IndexOptimize	src/server/sqlite3.c	/^static int sqlite3Fts5IndexOptimize(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexQuery	src/server/sqlite3.c	/^static int sqlite3Fts5IndexQuery($/;"	f	file:
sqlite3Fts5IndexReads	src/server/sqlite3.c	/^static int sqlite3Fts5IndexReads(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReinit	src/server/sqlite3.c	/^static int sqlite3Fts5IndexReinit(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReset	src/server/sqlite3.c	/^static int sqlite3Fts5IndexReset(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexRollback	src/server/sqlite3.c	/^static int sqlite3Fts5IndexRollback(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexSetAverages	src/server/sqlite3.c	/^static int sqlite3Fts5IndexSetAverages(Fts5Index *p, const u8 *pData, int nData){$/;"	f	file:
sqlite3Fts5IndexSetCookie	src/server/sqlite3.c	/^static int sqlite3Fts5IndexSetCookie(Fts5Index *p, int iNew){$/;"	f	file:
sqlite3Fts5IndexSync	src/server/sqlite3.c	/^static int sqlite3Fts5IndexSync(Fts5Index *p, int bCommit){$/;"	f	file:
sqlite3Fts5IndexWrite	src/server/sqlite3.c	/^static int sqlite3Fts5IndexWrite($/;"	f	file:
sqlite3Fts5Init	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts5Init(sqlite3 *db){$/;"	f
sqlite3Fts5IsBareword	src/server/sqlite3.c	/^static int sqlite3Fts5IsBareword(char t){$/;"	f	file:
sqlite3Fts5IterClose	src/server/sqlite3.c	/^static void sqlite3Fts5IterClose(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterEof	src/server/sqlite3.c	169589;"	d	file:
sqlite3Fts5IterNext	src/server/sqlite3.c	/^static int sqlite3Fts5IterNext(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNextFrom	src/server/sqlite3.c	/^static int sqlite3Fts5IterNextFrom(Fts5IndexIter *pIndexIter, i64 iMatch){$/;"	f	file:
sqlite3Fts5IterNextScan	src/server/sqlite3.c	/^static int sqlite3Fts5IterNextScan(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterTerm	src/server/sqlite3.c	/^static const char *sqlite3Fts5IterTerm(Fts5IndexIter *pIndexIter, int *pn){$/;"	f	file:
sqlite3Fts5MallocZero	src/server/sqlite3.c	/^static void *sqlite3Fts5MallocZero(int *pRc, int nByte){$/;"	f	file:
sqlite3Fts5Mprintf	src/server/sqlite3.c	/^static char *sqlite3Fts5Mprintf(int *pRc, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseColset	src/server/sqlite3.c	/^static Fts5Colset *sqlite3Fts5ParseColset($/;"	f	file:
sqlite3Fts5ParseError	src/server/sqlite3.c	/^static void sqlite3Fts5ParseError(Fts5Parse *pParse, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseFinished	src/server/sqlite3.c	/^static void sqlite3Fts5ParseFinished(Fts5Parse *pParse, Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseImplicitAnd	src/server/sqlite3.c	/^static Fts5ExprNode *sqlite3Fts5ParseImplicitAnd($/;"	f	file:
sqlite3Fts5ParseNear	src/server/sqlite3.c	/^static void sqlite3Fts5ParseNear(Fts5Parse *pParse, Fts5Token *pTok){$/;"	f	file:
sqlite3Fts5ParseNearset	src/server/sqlite3.c	/^static Fts5ExprNearset *sqlite3Fts5ParseNearset($/;"	f	file:
sqlite3Fts5ParseNearsetFree	src/server/sqlite3.c	/^static void sqlite3Fts5ParseNearsetFree(Fts5ExprNearset *pNear){$/;"	f	file:
sqlite3Fts5ParseNode	src/server/sqlite3.c	/^static Fts5ExprNode *sqlite3Fts5ParseNode($/;"	f	file:
sqlite3Fts5ParseNodeFree	src/server/sqlite3.c	/^static void sqlite3Fts5ParseNodeFree(Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParsePhraseFree	src/server/sqlite3.c	/^static void sqlite3Fts5ParsePhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
sqlite3Fts5ParseSetColset	src/server/sqlite3.c	/^static void sqlite3Fts5ParseSetColset($/;"	f	file:
sqlite3Fts5ParseSetDistance	src/server/sqlite3.c	/^static void sqlite3Fts5ParseSetDistance($/;"	f	file:
sqlite3Fts5ParseTerm	src/server/sqlite3.c	/^static Fts5ExprPhrase *sqlite3Fts5ParseTerm($/;"	f	file:
sqlite3Fts5Parser	src/server/sqlite3.c	/^static void sqlite3Fts5Parser($/;"	f	file:
sqlite3Fts5ParserARG_FETCH	src/server/sqlite3.c	170181;"	d	file:
sqlite3Fts5ParserARG_PDECL	src/server/sqlite3.c	170180;"	d	file:
sqlite3Fts5ParserARG_SDECL	src/server/sqlite3.c	170179;"	d	file:
sqlite3Fts5ParserARG_STORE	src/server/sqlite3.c	170182;"	d	file:
sqlite3Fts5ParserAlloc	src/server/sqlite3.c	/^static void *sqlite3Fts5ParserAlloc(void *(*mallocProc)(fts5YYMALLOCARGTYPE)){$/;"	f	file:
sqlite3Fts5ParserFTS5TOKENTYPE	src/server/sqlite3.c	170166;"	d	file:
sqlite3Fts5ParserFree	src/server/sqlite3.c	/^static void sqlite3Fts5ParserFree($/;"	f	file:
sqlite3Fts5ParserStackPeak	src/server/sqlite3.c	/^static int sqlite3Fts5ParserStackPeak(void *p){$/;"	f	file:
sqlite3Fts5ParserTrace	src/server/sqlite3.c	/^static void sqlite3Fts5ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f	file:
sqlite3Fts5PoslistNext64	src/server/sqlite3.c	/^static int sqlite3Fts5PoslistNext64($/;"	f	file:
sqlite3Fts5PoslistReaderInit	src/server/sqlite3.c	/^static int sqlite3Fts5PoslistReaderInit($/;"	f	file:
sqlite3Fts5PoslistReaderNext	src/server/sqlite3.c	/^static int sqlite3Fts5PoslistReaderNext(Fts5PoslistReader *pIter){$/;"	f	file:
sqlite3Fts5PoslistSafeAppend	src/server/sqlite3.c	/^static void sqlite3Fts5PoslistSafeAppend($/;"	f	file:
sqlite3Fts5PoslistWriterAppend	src/server/sqlite3.c	/^static int sqlite3Fts5PoslistWriterAppend($/;"	f	file:
sqlite3Fts5Put32	src/server/sqlite3.c	/^static void sqlite3Fts5Put32(u8 *aBuf, int iVal){$/;"	f	file:
sqlite3Fts5PutVarint	src/server/sqlite3.c	/^static int sqlite3Fts5PutVarint(unsigned char *p, u64 v){$/;"	f	file:
sqlite3Fts5StorageClose	src/server/sqlite3.c	/^static int sqlite3Fts5StorageClose(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageConfigValue	src/server/sqlite3.c	/^static int sqlite3Fts5StorageConfigValue($/;"	f	file:
sqlite3Fts5StorageContentInsert	src/server/sqlite3.c	/^static int sqlite3Fts5StorageContentInsert($/;"	f	file:
sqlite3Fts5StorageDelete	src/server/sqlite3.c	/^static int sqlite3Fts5StorageDelete(Fts5Storage *p, i64 iDel, sqlite3_value **apVal){$/;"	f	file:
sqlite3Fts5StorageDeleteAll	src/server/sqlite3.c	/^static int sqlite3Fts5StorageDeleteAll(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageDocsize	src/server/sqlite3.c	/^static int sqlite3Fts5StorageDocsize(Fts5Storage *p, i64 iRowid, int *aCol){$/;"	f	file:
sqlite3Fts5StorageIndexInsert	src/server/sqlite3.c	/^static int sqlite3Fts5StorageIndexInsert($/;"	f	file:
sqlite3Fts5StorageIntegrity	src/server/sqlite3.c	/^static int sqlite3Fts5StorageIntegrity(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageMerge	src/server/sqlite3.c	/^static int sqlite3Fts5StorageMerge(Fts5Storage *p, int nMerge){$/;"	f	file:
sqlite3Fts5StorageOpen	src/server/sqlite3.c	/^static int sqlite3Fts5StorageOpen($/;"	f	file:
sqlite3Fts5StorageOptimize	src/server/sqlite3.c	/^static int sqlite3Fts5StorageOptimize(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRebuild	src/server/sqlite3.c	/^static int sqlite3Fts5StorageRebuild(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRename	src/server/sqlite3.c	/^static int sqlite3Fts5StorageRename(Fts5Storage *pStorage, const char *zName){$/;"	f	file:
sqlite3Fts5StorageReset	src/server/sqlite3.c	/^static int sqlite3Fts5StorageReset(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRollback	src/server/sqlite3.c	/^static int sqlite3Fts5StorageRollback(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRowCount	src/server/sqlite3.c	/^static int sqlite3Fts5StorageRowCount(Fts5Storage *p, i64 *pnRow){$/;"	f	file:
sqlite3Fts5StorageSize	src/server/sqlite3.c	/^static int sqlite3Fts5StorageSize(Fts5Storage *p, int iCol, i64 *pnToken){$/;"	f	file:
sqlite3Fts5StorageStmt	src/server/sqlite3.c	/^static int sqlite3Fts5StorageStmt($/;"	f	file:
sqlite3Fts5StorageStmtRelease	src/server/sqlite3.c	/^static void sqlite3Fts5StorageStmtRelease($/;"	f	file:
sqlite3Fts5StorageSync	src/server/sqlite3.c	/^static int sqlite3Fts5StorageSync(Fts5Storage *p, int bCommit){$/;"	f	file:
sqlite3Fts5Strndup	src/server/sqlite3.c	/^static char *sqlite3Fts5Strndup(int *pRc, const char *pIn, int nIn){$/;"	f	file:
sqlite3Fts5TermsetAdd	src/server/sqlite3.c	/^static int sqlite3Fts5TermsetAdd($/;"	f	file:
sqlite3Fts5TermsetFree	src/server/sqlite3.c	/^static void sqlite3Fts5TermsetFree(Fts5Termset *p){$/;"	f	file:
sqlite3Fts5TermsetNew	src/server/sqlite3.c	/^static int sqlite3Fts5TermsetNew(Fts5Termset **pp){$/;"	f	file:
sqlite3Fts5Tokenize	src/server/sqlite3.c	/^static int sqlite3Fts5Tokenize($/;"	f	file:
sqlite3Fts5TokenizerInit	src/server/sqlite3.c	/^static int sqlite3Fts5TokenizerInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5UnicodeFold	src/server/sqlite3.c	/^static int sqlite3Fts5UnicodeFold(int c, int bRemoveDiacritic){$/;"	f	file:
sqlite3Fts5UnicodeIsalnum	src/server/sqlite3.c	/^static int sqlite3Fts5UnicodeIsalnum(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsdiacritic	src/server/sqlite3.c	/^static int sqlite3Fts5UnicodeIsdiacritic(int c){$/;"	f	file:
sqlite3Fts5VocabInit	src/server/sqlite3.c	/^static int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3FtsUnicodeFold	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeFold(int c, int bRemoveDiacritic){$/;"	f
sqlite3FtsUnicodeIsalnum	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeIsalnum(int c){$/;"	f
sqlite3FtsUnicodeIsdiacritic	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeIsdiacritic(int c){$/;"	f
sqlite3FunctionUsesThisSrc	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3FunctionUsesThisSrc(Expr *pExpr, SrcList *pSrcList){$/;"	f
sqlite3GenerateConstraintChecks	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateIndexKey	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateRowDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowIndexDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3Get4byte	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3GetBoolean	src/server/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetBoolean(const char *z, u8 dflt){$/;"	f
sqlite3GetCollSeq	src/server/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetFuncCollSeq	src/server/sqlite3.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetInt32	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetTempRange	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempReg	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetToken	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetVTable	src/server/sqlite3.c	/^SQLITE_PRIVATE VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVTable	src/server/sqlite3.c	14878;"	d	file:
sqlite3GetVarint	src/server/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint32	src/server/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVdbe	src/server/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GlobalConfig	src/server/sqlite3.c	10260;"	d	file:
sqlite3GlobalConfig	src/server/sqlite3.c	10266;"	d	file:
sqlite3HaltConstraint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HaltConstraint($/;"	f
sqlite3HashClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashFind	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashFind(const Hash *pH, const char *pKey){$/;"	f
sqlite3HashInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInsert	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){$/;"	f
sqlite3HeaderSizeBtree	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizeBtree(void){ return ROUND8(sizeof(MemPage)); }$/;"	f
sqlite3HeaderSizePcache	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizePcache(void){ return ROUND8(sizeof(PgHdr)); }$/;"	f
sqlite3HeaderSizePcache1	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizePcache1(void){ return ROUND8(sizeof(PgHdr1)); }$/;"	f
sqlite3HeapNearlyFull	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HexToBlob	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToInt	src/server/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3HexToInt(int h){$/;"	f
sqlite3Hooks	src/server/sqlite3.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hwtime	src/server/sqlite3.c	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	src/server/sqlite3.c	/^SQLITE_PRIVATE   sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3IcuInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IdListAppend	src/server/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDup	src/server/sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3InRhsIsConstant	src/server/sqlite3.c	/^static int sqlite3InRhsIsConstant(Expr *pIn){$/;"	f	file:
sqlite3IndexAffinityOk	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityStr	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3IndexAffinityStr(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3IndexColumnAffinity	src/server/sqlite3.c	/^static char sqlite3IndexColumnAffinity(sqlite3 *db, Index *pIdx, int iCol){$/;"	f	file:
sqlite3IndexedByLookup	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3Init	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3InitCallback	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitInfo	src/server/sqlite3.c	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3	file:
sqlite3InitOne	src/server/sqlite3.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3Insert	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Insert($/;"	f
sqlite3InsertBuiltinFuncs	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3InsertBuiltinFuncs($/;"	f
sqlite3IntFloatCompare	src/server/sqlite3.c	/^static int sqlite3IntFloatCompare(i64 i, double r){$/;"	f	file:
sqlite3IntTokens	src/server/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[] = {$/;"	v
sqlite3IntTokens	src/server/sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[];$/;"	v
sqlite3InvalidFunction	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3InvalidFunction($/;"	f
sqlite3InvokeBusyHandler	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3IoTrace	src/server/sqlite3.c	/^SQLITE_API SQLITE_EXTERN void (SQLITE_CDECL *sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IoTrace	src/server/sqlite3.c	/^SQLITE_API void (SQLITE_CDECL *sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoerrnomemError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IoerrnomemError(int lineno){$/;"	f
sqlite3IsEbcdicIdChar	src/server/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsEbcdicIdChar	src/server/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[];$/;"	v
sqlite3IsIdChar	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsIdChar(u8 c){ return IdChar(c); }$/;"	f
sqlite3IsLikeFunction	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsNaN	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNaN	src/server/sqlite3.c	14326;"	d	file:
sqlite3IsNumericAffinity	src/server/sqlite3.c	12589;"	d	file:
sqlite3IsReadOnly	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsRowid	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsRowid(const char *z){$/;"	f
sqlite3IsToplevel	src/server/sqlite3.c	14631;"	d	file:
sqlite3IsToplevel	src/server/sqlite3.c	14641;"	d	file:
sqlite3Isalnum	src/server/sqlite3.c	14224;"	d	file:
sqlite3Isalnum	src/server/sqlite3.c	14232;"	d	file:
sqlite3Isalpha	src/server/sqlite3.c	14225;"	d	file:
sqlite3Isalpha	src/server/sqlite3.c	14233;"	d	file:
sqlite3Isdigit	src/server/sqlite3.c	14226;"	d	file:
sqlite3Isdigit	src/server/sqlite3.c	14234;"	d	file:
sqlite3Isspace	src/server/sqlite3.c	14223;"	d	file:
sqlite3Isspace	src/server/sqlite3.c	14231;"	d	file:
sqlite3Isxdigit	src/server/sqlite3.c	14227;"	d	file:
sqlite3Isxdigit	src/server/sqlite3.c	14235;"	d	file:
sqlite3JoinType	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JournalCreate	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalIsInMemory	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalIsInMemory(sqlite3_file *p){$/;"	f
sqlite3JournalModename	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalOpen($/;"	f
sqlite3JournalSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3Json1Init	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Json1Init(sqlite3 *db){$/;"	f
sqlite3KeyInfoAlloc	src/server/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoAlloc(sqlite3 *db, int N, int X){$/;"	f
sqlite3KeyInfoIsWriteable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeyInfoIsWriteable(KeyInfo *p){ return p->nRef==1; }$/;"	f
sqlite3KeyInfoOfIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoOfIndex(Parse *pParse, Index *pIdx){$/;"	f
sqlite3KeyInfoRef	src/server/sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoRef(KeyInfo *p){$/;"	f
sqlite3KeyInfoUnref	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3KeyInfoUnref(KeyInfo *p){$/;"	f
sqlite3KeywordCode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3LeaveMutexAndCloseZombie	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3LeaveMutexAndCloseZombie(sqlite3 *db){$/;"	f
sqlite3LimitWhere	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3LimitWhere($/;"	f
sqlite3LoadExtension	src/server/sqlite3.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LocateCollSeq	src/server/sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateTable	src/server/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTable($/;"	f
sqlite3LocateTableItem	src/server/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTableItem($/;"	f
sqlite3LockAndPrepare	src/server/sqlite3.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3LogEst	src/server/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEst(u64 x){$/;"	f
sqlite3LogEstAdd	src/server/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEstAdd(LogEst a, LogEst b){$/;"	f
sqlite3LogEstFromDouble	src/server/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEstFromDouble(double x){$/;"	f
sqlite3LogEstToInt	src/server/sqlite3.c	/^SQLITE_PRIVATE u64 sqlite3LogEstToInt(LogEst x){$/;"	f
sqlite3MPrintf	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3Malloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Malloc(u64 n){$/;"	f
sqlite3MallocAlarm	src/server/sqlite3.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocEnd	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocInit(void){$/;"	f
sqlite3MallocMutex	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MallocMutex(void){$/;"	f
sqlite3MallocSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocZero	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3MallocZero(u64 n){$/;"	f
sqlite3MatchSpanName	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MatchSpanName($/;"	f
sqlite3MaterializeView	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MaterializeView($/;"	f
sqlite3MayAbort	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MemCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemFree	src/server/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	src/server/sqlite3.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemGetMemsys3	src/server/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys5	src/server/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetWin32	src/server/sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemInit	src/server/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	src/server/sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemJournalOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemMalloc	src/server/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	src/server/sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemRealloc	src/server/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	src/server/sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRoundup	src/server/sqlite3.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	src/server/sqlite3.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemSetDefault	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemShutdown	src/server/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	src/server/sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemSize	src/server/sqlite3.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemSize	src/server/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	src/server/sqlite3.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemdebugBacktrace	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktraceCallback	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugDump	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugHasType	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	src/server/sqlite3.c	15076;"	d	file:
sqlite3MemdebugMallocCount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugNoType	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	src/server/sqlite3.c	15077;"	d	file:
sqlite3MemdebugSetType	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	src/server/sqlite3.c	15075;"	d	file:
sqlite3MemdebugSettitle	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSync	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSync(){$/;"	f
sqlite3MemoryBarrier	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	src/server/sqlite3.c	14311;"	d	file:
sqlite3Memsys3Dump	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3MemsysGetHeader	src/server/sqlite3.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MisuseError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MulInt64	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MultiWrite	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MutexAlloc	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	src/server/sqlite3.c	11950;"	d	file:
sqlite3MutexEnd	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	src/server/sqlite3.c	11952;"	d	file:
sqlite3MutexInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexInit(void){ $/;"	f
sqlite3MutexInit	src/server/sqlite3.c	11951;"	d	file:
sqlite3NameFromToken	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NestedParse	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NoTempsInRange	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3NoTempsInRange(Parse *pParse, int iFirst, int iLast){$/;"	f
sqlite3NomemError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3NomemError(int lineno){$/;"	f
sqlite3NoopMutex	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3OSTrace	src/server/sqlite3.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OomClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OomClear(sqlite3 *db){$/;"	f
sqlite3OomFault	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OomFault(sqlite3 *db){$/;"	f
sqlite3OpcodeName	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeProperty	src/server/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpcodeProperty	src/server/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[];$/;"	v
sqlite3OpenMasterTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenTable($/;"	f
sqlite3OpenTableAndIndices	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTempDatabase	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OsAccess	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsAccess($/;"	f
sqlite3OsCheckReservedLock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsClose	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsCloseFree	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCurrentTimeInt64	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDeviceCharacteristics	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDlClose	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlError	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlSym	src/server/sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsFetch	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFetch(sqlite3_file *id, i64 iOff, int iAmt, void **pp){$/;"	f
sqlite3OsFileControl	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControlHint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsFileControlHint(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFullPathname	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFullPathname($/;"	f
sqlite3OsGetLastError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsGetLastError(sqlite3_vfs *pVfs){$/;"	f
sqlite3OsInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsInit(void){$/;"	f
sqlite3OsLock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpen($/;"	f
sqlite3OsOpenMalloc	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpenMalloc($/;"	f
sqlite3OsRandomness	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRead	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsSectorSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmLock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmMap	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmMap($/;"	f
sqlite3OsShmUnmap	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsSleep	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSync	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsTruncate	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsUnfetch	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnfetch(sqlite3_file *id, i64 iOff, void *p){$/;"	f
sqlite3OsUnlock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsWrite	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3PCacheBufferSetup	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCacheSetDefault	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3PExpr($/;"	f
sqlite3PageFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PageFree(void *p){$/;"	f
sqlite3PageMalloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PagerAlignReserve	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerAlignReserve(Pager *pDest, Pager *pSrc){$/;"	f
sqlite3PagerBackupPtr	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBegin	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerCacheStat	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerCacheStat(Pager *pPager, int eStat, int reset, int *pnVal){$/;"	f
sqlite3PagerCheckpoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCheckpoint(Pager *pPager, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3PagerClearCache	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerClearCache(Pager *pPager){$/;"	f
sqlite3PagerClose	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerClose(Pager *pPager){$/;"	f
sqlite3PagerCloseWal	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCloseWal(Pager *pPager){$/;"	f
sqlite3PagerCodec	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCommitPhaseOne	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseTwo	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerDataVersion	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3PagerDataVersion(Pager *pPager){$/;"	f
sqlite3PagerDontWrite	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerExclusiveLock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerFile	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFilename	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerFilename(Pager *pPager, int nullIfMemDb){$/;"	f
sqlite3PagerFlush	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerFlush(Pager *pPager){$/;"	f
sqlite3PagerGet	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGet($/;"	f
sqlite3PagerGetCodec	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetData	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetJournalMode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	src/server/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIswriteable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerJournalSizeLimit	src/server/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalname	src/server/sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerJrnlFile	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerJrnlFile(Pager *pPager){$/;"	f
sqlite3PagerLockingMode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLookup	src/server/sqlite3.c	/^SQLITE_PRIVATE DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerMaxPageCount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMemUsed	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMovepage	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerOkToChangeJournalMode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpen($/;"	f
sqlite3PagerOpenSavepoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenWal	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenWal($/;"	f
sqlite3PagerPageRefcount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPagecount	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagenumber	src/server/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerReadFileheader	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerRef	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRefcount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRekey	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRekey(DbPage *pPg, Pgno iNew, u16 flags){$/;"	f
sqlite3PagerRollback	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerSavepoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSetBusyhandler	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetCachesize	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCodec	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetFlags	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetFlags($/;"	f
sqlite3PagerSetJournalMode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetMmapLimit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetMmapLimit(Pager *pPager, sqlite3_int64 szMmap){$/;"	f
sqlite3PagerSetPagesize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetSpillsize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetSpillsize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSharedLock	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerShrink	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerShrink(Pager *pPager){$/;"	f
sqlite3PagerSnapshotGet	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotGet(Pager *pPager, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3PagerSnapshotOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotOpen(Pager *pPager, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3PagerState	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerState(Pager *pPager){$/;"	f
sqlite3PagerStats	src/server/sqlite3.c	/^SQLITE_PRIVATE int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerSync	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSync(Pager *pPager, const char *zMaster){$/;"	f
sqlite3PagerTempSpace	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTruncateImage	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerUnref	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerUnrefNotNull	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnrefNotNull(DbPage *pPg){$/;"	f
sqlite3PagerVfs	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalFramesize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalFramesize(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWrite	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWrite(PgHdr *pPg){$/;"	f
sqlite3ParseToplevel	src/server/sqlite3.c	14630;"	d	file:
sqlite3ParseToplevel	src/server/sqlite3.c	14640;"	d	file:
sqlite3ParseUri	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParseUri($/;"	f
sqlite3Parser	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Parser($/;"	f
sqlite3ParserARG_FETCH	src/server/sqlite3.c	128596;"	d	file:
sqlite3ParserARG_PDECL	src/server/sqlite3.c	128595;"	d	file:
sqlite3ParserARG_SDECL	src/server/sqlite3.c	128594;"	d	file:
sqlite3ParserARG_STORE	src/server/sqlite3.c	128597;"	d	file:
sqlite3ParserAlloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ParserAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
sqlite3ParserFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserFree($/;"	f
sqlite3ParserReset	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserReset(Parse *pParse){$/;"	f
sqlite3ParserStackPeak	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserTOKENTYPE	src/server/sqlite3.c	128573;"	d	file:
sqlite3ParserTrace	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3Pcache1Mutex	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3Pcache1Mutex(void){$/;"	f
sqlite3PcacheCleanAll	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClose	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	src/server/sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDrop	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheFetch	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_pcache_page *sqlite3PcacheFetch($/;"	f
sqlite3PcacheFetchFinish	src/server/sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheFetchFinish($/;"	f
sqlite3PcacheFetchStress	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheFetchStress($/;"	f
sqlite3PcacheGetCachesize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheInitialize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheIterateDirty	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheMakeClean	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMove	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheOpen($/;"	f
sqlite3PcachePageRefcount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePagecount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcacheRef	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRefCount	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRelease	src/server/sqlite3.c	/^SQLITE_PRIVATE void SQLITE_NOINLINE sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheReleaseMemory	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheSetCachesize	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetPageSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheSetSpillsize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSetSpillsize(PCache *p, int mxPage){$/;"	f
sqlite3PcacheShrink	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShrink(PCache *pCache){$/;"	f
sqlite3PcacheShutdown	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheStats	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheStats($/;"	f
sqlite3PcacheTruncate	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PendingByte	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte;$/;"	v
sqlite3Pragma	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Pragma($/;"	f
sqlite3Prepare	src/server/sqlite3.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare16	src/server/sqlite3.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3PrimaryKeyIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3PrimaryKeyIndex(Table *pTab){$/;"	f
sqlite3Prng	src/server/sqlite3.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3PrngRestoreState	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngSaveState	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngType	src/server/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3Put4byte	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3PutVarint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3ReadSchema	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3Realloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Realloc(void *pOld, u64 nBytes){$/;"	f
sqlite3RefillIndex	src/server/sqlite3.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RegisterBuiltinFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterBuiltinFunctions(void){$/;"	f
sqlite3RegisterDateTimeFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterLikeFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3RegisterPerConnectionBuiltinFunctions	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterPerConnectionBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3Reindex	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ReleaseTempRange	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempReg	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3Reprepare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3ResetAllSchemasOfConnection	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetAllSchemasOfConnection(sqlite3 *db){$/;"	f
sqlite3ResetOneSchema	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetOneSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResolveExprListNames	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprListNames( $/;"	f
sqlite3ResolveExprNames	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprNames( $/;"	f
sqlite3ResolveOrderGroupBy	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolvePartIdxLabel	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolvePartIdxLabel(Parse *pParse, int iLabel){$/;"	f
sqlite3ResolveSelectNames	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelectNames($/;"	f
sqlite3ResolveSelfReference	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelfReference($/;"	f
sqlite3ResultSetOfSelect	src/server/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3RollbackAll	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackAll(sqlite3 *db, int tripCode){$/;"	f
sqlite3RollbackTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RootPageMoved	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RowSetClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetInit	src/server/sqlite3.c	/^SQLITE_PRIVATE RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInsert	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetNext	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetTest	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetTest(RowSet *pRowSet, int iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RowidConstraint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowidConstraint($/;"	f
sqlite3RtreeInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RunParser	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunVacuum	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db){$/;"	f
sqlite3SafetyCheckOk	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SavedPrng	src/server/sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Savepoint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3SchemaClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaGet	src/server/sqlite3.c	/^SQLITE_PRIVATE Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaMutexHeld	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	src/server/sqlite3.c	10675;"	d	file:
sqlite3SchemaToIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3ScratchFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchMalloc	src/server/sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3SectorSize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SectorSize(sqlite3_file *pFile){$/;"	f
sqlite3Select	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Select($/;"	f
sqlite3SelectAddColumnTypeAndCollation	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectAddColumnTypeAndCollation($/;"	f
sqlite3SelectAddTypeInfo	src/server/sqlite3.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDestInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDup	src/server/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectExpand	src/server/sqlite3.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExprHeight	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	src/server/sqlite3.c	15007;"	d	file:
sqlite3SelectNew	src/server/sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectNew($/;"	f
sqlite3SelectPrep	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectPrep($/;"	f
sqlite3SelectSetName	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectSetName(Select *p, const char *zName){$/;"	f
sqlite3SelectSetName	src/server/sqlite3.c	14594;"	d	file:
sqlite3SelectTrace	src/server/sqlite3.c	/^\/***\/ int sqlite3SelectTrace = 0;$/;"	v
sqlite3SelectWrongNumTermsError	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectWrongNumTermsError(Parse *pParse, Select *p){$/;"	f
sqlite3SetHasNullFlag	src/server/sqlite3.c	/^static void sqlite3SetHasNullFlag(Vdbe *v, int iCur, int regHasNull){$/;"	f	file:
sqlite3SetString	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SetString(char **pz, sqlite3 *db, const char *zNew){$/;"	f
sqlite3SharedCacheList	src/server/sqlite3.c	/^SQLITE_PRIVATE BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	src/server/sqlite3.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SkipAccumulatorLoad	src/server/sqlite3.c	/^static void sqlite3SkipAccumulatorLoad(sqlite3_context *context){$/;"	f	file:
sqlite3SmallTypeSizes	src/server/sqlite3.c	/^static const u8 sqlite3SmallTypeSizes[] = {$/;"	v	file:
sqlite3SrcListAppend	src/server/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppendFromTerm	src/server/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAssignCursors	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDup	src/server/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListEnlarge	src/server/sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListFuncArgs	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListFuncArgs(Parse *pParse, SrcList *p, ExprList *pList){$/;"	f
sqlite3SrcListIndexedBy	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListLookup	src/server/sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListShiftJoinType	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3StackAllocRaw	src/server/sqlite3.c	14284;"	d	file:
sqlite3StackAllocRaw	src/server/sqlite3.c	14288;"	d	file:
sqlite3StackAllocZero	src/server/sqlite3.c	14285;"	d	file:
sqlite3StackAllocZero	src/server/sqlite3.c	14289;"	d	file:
sqlite3StackFree	src/server/sqlite3.c	14286;"	d	file:
sqlite3StackFree	src/server/sqlite3.c	14290;"	d	file:
sqlite3StartTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StartTable($/;"	f
sqlite3Stat	src/server/sqlite3.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3Stat4Column	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4Column($/;"	f
sqlite3Stat4ProbeFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Stat4ProbeFree(UnpackedRecord *pRec){$/;"	f
sqlite3Stat4ProbeSetValue	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4ProbeSetValue($/;"	f
sqlite3Stat4ValueFromExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4ValueFromExpr($/;"	f
sqlite3StatType	src/server/sqlite3.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	src/server/sqlite3.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatValueType	src/server/sqlite3.c	/^typedef sqlite3_int64 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	src/server/sqlite3.c	/^typedef u32 sqlite3StatValueType;$/;"	t	file:
sqlite3StatusDown	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusDown(int op, int N){$/;"	f
sqlite3StatusHighwater	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusHighwater(int op, int X){$/;"	f
sqlite3StatusUp	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusUp(int op, int N){$/;"	f
sqlite3StatusValue	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3StatusValue(int op){$/;"	f
sqlite3Step	src/server/sqlite3.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3StmtCurrentTime	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3StmtCurrentTime(sqlite3_context *p){$/;"	f
sqlite3StrAccumAppend	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumAppendAll	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppendAll(StrAccum *p, const char *z){$/;"	f
sqlite3StrAccumEnlarge	src/server/sqlite3.c	/^static int sqlite3StrAccumEnlarge(StrAccum *p, int N){$/;"	f	file:
sqlite3StrAccumFinish	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumReset	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrBINARY	src/server/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3StrBINARY[] = "BINARY";$/;"	v
sqlite3StrBINARY	src/server/sqlite3.c	/^SQLITE_PRIVATE const char sqlite3StrBINARY[];$/;"	v
sqlite3StrICmp	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrNICmp	src/server/sqlite3.c	14248;"	d	file:
sqlite3StringToId	src/server/sqlite3.c	/^static void sqlite3StringToId(Expr *p){$/;"	f	file:
sqlite3Strlen30	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Strlen30(const char *z){$/;"	f
sqlite3SubInt64	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3SystemError	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3SystemError(sqlite3 *db, int rc){$/;"	f
sqlite3TableAffinity	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableAffinity(Vdbe *v, Table *pTab, int iReg){$/;"	f
sqlite3TableLock	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableLock($/;"	f
sqlite3TableLock	src/server/sqlite3.c	14861;"	d	file:
sqlite3TempInMemory	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3ThreadCreate	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ThreadCreate($/;"	f
sqlite3ThreadJoin	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ThreadJoin(SQLiteThread *p, void **ppOut){$/;"	f
sqlite3ThreadProc	src/server/sqlite3.c	/^static unsigned __stdcall sqlite3ThreadProc($/;"	f	file:
sqlite3TokenInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TokenInit(Token *p, char *z){$/;"	f
sqlite3Tolower	src/server/sqlite3.c	14228;"	d	file:
sqlite3Tolower	src/server/sqlite3.c	14236;"	d	file:
sqlite3Toupper	src/server/sqlite3.c	14222;"	d	file:
sqlite3Toupper	src/server/sqlite3.c	14230;"	d	file:
sqlite3TransferBindings	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TreeViewExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewExpr(TreeView *pView, const Expr *pExpr, u8 moreToFollow){$/;"	f
sqlite3TreeViewExprList	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewExprList($/;"	f
sqlite3TreeViewItem	src/server/sqlite3.c	/^static void sqlite3TreeViewItem(TreeView *p, const char *zLabel,u8 moreFollows){$/;"	f	file:
sqlite3TreeViewLine	src/server/sqlite3.c	/^static void sqlite3TreeViewLine(TreeView *p, const char *zFormat, ...){$/;"	f	file:
sqlite3TreeViewPop	src/server/sqlite3.c	/^static void sqlite3TreeViewPop(TreeView *p){$/;"	f	file:
sqlite3TreeViewPush	src/server/sqlite3.c	/^static TreeView *sqlite3TreeViewPush(TreeView *p, u8 moreToFollow){$/;"	f	file:
sqlite3TreeViewSelect	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewSelect(TreeView *pView, const Select *p, u8 moreToFollow){$/;"	f
sqlite3TreeViewWith	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewWith(TreeView *pView, const With *pWith, u8 moreToFollow){$/;"	f
sqlite3TriggerColmask	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerColmask	src/server/sqlite3.c	14642;"	d	file:
sqlite3TriggerDeleteStep	src/server/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerInsertStep	src/server/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerList	src/server/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerList	src/server/sqlite3.c	14639;"	d	file:
sqlite3TriggerSelectStep	src/server/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerUpdateStep	src/server/sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggersExist	src/server/sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggersExist($/;"	f
sqlite3TriggersExist	src/server/sqlite3.c	14633;"	d	file:
sqlite3TwoPartName	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3TwoPartName($/;"	f
sqlite3UniqueConstraint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UniqueConstraint($/;"	f
sqlite3UnlinkAndDeleteIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteTable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	src/server/sqlite3.c	14636;"	d	file:
sqlite3Update	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Update($/;"	f
sqlite3UpperToLower	src/server/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UpperToLower	src/server/sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[];$/;"	v
sqlite3UserAuthTable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3UserAuthTable(const char *zTable){$/;"	f
sqlite3Utf16ByteLen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16to8	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf8CharLen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8Read	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8Read	src/server/sqlite3.c	100870;"	d	file:
sqlite3Utf8To8	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8Trans1	src/server/sqlite3.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3UtfSelfTest	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3UtfSelfTest(void){$/;"	f
sqlite3VMPrintf	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VXPrintf	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VXPrintf($/;"	f
sqlite3Vacuum	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3Vacuum(Parse *pParse){$/;"	f
sqlite3ValueApplyAffinity	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueBytes	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueFree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFromExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueFromExpr($/;"	f
sqlite3ValueNew	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueSetNull	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetNull(sqlite3_value *p){$/;"	f
sqlite3ValueSetStr	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetStr($/;"	f
sqlite3ValueText	src/server/sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3VarintLen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VdbeAddOp0	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp1	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp2	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp3	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp4	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4Dup8	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Dup8($/;"	f
sqlite3VdbeAddOp4Int	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOpList	src/server/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeAddOpList($/;"	f
sqlite3VdbeAddParseSchemaOp	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAllocUnpackedRecord	src/server/sqlite3.c	/^SQLITE_PRIVATE UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAssertMayAbort	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeChangeEncoding	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeOpcode	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeOpcode(Vdbe *p, u32 addr, u8 iNewOpcode){$/;"	f
sqlite3VdbeChangeP1	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP4	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP5	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u8 p5){$/;"	f
sqlite3VdbeChangeToNoop	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeCheckFk	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckFk	src/server/sqlite3.c	16366;"	d	file:
sqlite3VdbeCheckMemInvariants	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckMemInvariants(Mem *p){$/;"	f
sqlite3VdbeClearObject	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeClearObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeCloseStatement	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeComment	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeCountChanges	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCreate	src/server/sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3VdbeCreate(Parse *pParse){$/;"	f
sqlite3VdbeCurrentAddr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCursorMoveto	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorMoveto(VdbeCursor **pp, int *piCol){$/;"	f
sqlite3VdbeCursorRestore	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorRestore(VdbeCursor *p){$/;"	f
sqlite3VdbeDb	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDeleteAuxData	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteAuxData(sqlite3 *db, AuxData **pp, int iOp, int mask){$/;"	f
sqlite3VdbeDeletePriorOpcode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeDeletePriorOpcode(Vdbe *p, u8 op){$/;"	f
sqlite3VdbeEndCoroutine	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEndCoroutine(Vdbe *v, int regYield){$/;"	f
sqlite3VdbeEnter	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeEnter	src/server/sqlite3.c	16349;"	d	file:
sqlite3VdbeError	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeError(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeExec	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeExec($/;"	f
sqlite3VdbeExpandSql	src/server/sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeFinalize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFindCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE RecordCompare sqlite3VdbeFindCompare(UnpackedRecord *p){$/;"	f
sqlite3VdbeFrameDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameRestore	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFreeCursor	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeGetBoundValue	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3VdbeGetBoundValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeGetOp	src/server/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGoto	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeGoto(Vdbe *p, int iDest){$/;"	f
sqlite3VdbeHalt	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	src/server/sqlite3.c	15039;"	d	file:
sqlite3VdbeIdxKeyCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxRowid	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIntValue	src/server/sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeJumpHere	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeLeave	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLeave	src/server/sqlite3.c	16355;"	d	file:
sqlite3VdbeLinkSubProgram	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeList($/;"	f
sqlite3VdbeLoadString	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeLoadString(Vdbe *p, int iDest, const char *zStr){$/;"	f
sqlite3VdbeMakeLabel	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMakeLabel(Vdbe *v){$/;"	f
sqlite3VdbeMakeReady	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMemAboutToChange	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemAboutToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemCast	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemCast(Mem *pMem, u8 aff, u8 encoding){$/;"	f
sqlite3VdbeMemClearAndResize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){$/;"	f
sqlite3VdbeMemCopy	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemExpandBlob	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemExpandBlob	src/server/sqlite3.c	16380;"	d	file:
sqlite3VdbeMemFinalize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFromBtree	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemGrow	src/server/sqlite3.c	/^SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){$/;"	f
sqlite3VdbeMemHandleBom	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemInit(Mem *pMem, sqlite3 *db, u16 flags){$/;"	f
sqlite3VdbeMemIntegerify	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMove	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemNulTerminate	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemPrettyPrint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemRealify	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRelease	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemSetDouble	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetDouble	src/server/sqlite3.c	16309;"	d	file:
sqlite3VdbeMemSetInt64	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetNull	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetStr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetZeroBlob	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemShallowCopy	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemStringify	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemStringify(Mem *pMem, u8 enc, u8 bForce){$/;"	f
sqlite3VdbeMemTooBig	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTranslate	src/server/sqlite3.c	/^SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeMultiLoad	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMultiLoad(Vdbe *p, int iDest, const char *zTypes, ...){$/;"	f
sqlite3VdbeNoopComment	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeOneByteSerialTypeLen	src/server/sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3VdbeOneByteSerialTypeLen(u8 serial_type){$/;"	f
sqlite3VdbeParameterIndex	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbePrintOp	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintSql	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbeRealValue	src/server/sqlite3.c	/^SQLITE_PRIVATE double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRecordCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordCompareWithSkip	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompareWithSkip($/;"	f
sqlite3VdbeRecordUnpack	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeReset	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResolveLabel	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResolveLabel(Vdbe *v, int x){$/;"	f
sqlite3VdbeReusable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeReusable(Vdbe *p){$/;"	f
sqlite3VdbeRewind	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeScanStatus	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeScanStatus($/;"	f
sqlite3VdbeScanStatus	src/server/sqlite3.c	11192;"	d	file:
sqlite3VdbeSerialGet	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialPut	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialPut(u8 *buf, Mem *pMem, u32 serial_type){$/;"	f
sqlite3VdbeSerialType	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialType(Mem *pMem, int file_format, u32 *pLen){$/;"	f
sqlite3VdbeSerialTypeLen	src/server/sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSetChanges	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetColName	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetLineNumber	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetLineNumber(Vdbe *v, int iLine){$/;"	f
sqlite3VdbeSetNumCols	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetP4KeyInfo	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetP4KeyInfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3VdbeSetSql	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, int isPrepareV2){$/;"	f
sqlite3VdbeSetVarmask	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSorterClose	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterCompare	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterInit($/;"	f
sqlite3VdbeSorterNext	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterNext(sqlite3 *db, const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterReset	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterReset(sqlite3 *db, VdbeSorter *pSorter){$/;"	f
sqlite3VdbeSorterRewind	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRewind(const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRowkey	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRowkey(const VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterWrite	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSwap	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeTakeOpArray	src/server/sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTransferError	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeTransferError(Vdbe *p){$/;"	f
sqlite3VdbeUsesBtree	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeVerifyNoMallocRequired(Vdbe *p, int N){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	src/server/sqlite3.c	11072;"	d	file:
sqlite3ViewGetColumnNames	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	src/server/sqlite3.c	14447;"	d	file:
sqlite3VtabArgExtend	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabBegin	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBeginParse	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabBeginParse($/;"	f
sqlite3VtabCallConnect	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallCreate	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallDestroy	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabClear	src/server/sqlite3.c	14869;"	d	file:
sqlite3VtabCommit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabCommit	src/server/sqlite3.c	14872;"	d	file:
sqlite3VtabDisconnect	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabDisconnect(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabEponymousTableClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabEponymousTableClear(sqlite3 *db, Module *pMod){$/;"	f
sqlite3VtabEponymousTableInit	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabEponymousTableInit(Parse *pParse, Module *pMod){$/;"	f
sqlite3VtabFinishParse	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabImportErrmsg	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabImportErrmsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f
sqlite3VtabInSync	src/server/sqlite3.c	14873;"	d	file:
sqlite3VtabInSync	src/server/sqlite3.c	14891;"	d	file:
sqlite3VtabLock	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabLock	src/server/sqlite3.c	14874;"	d	file:
sqlite3VtabMakeWritable	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabOverloadFunction	src/server/sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabRollback	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabRollback	src/server/sqlite3.c	14871;"	d	file:
sqlite3VtabSavepoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSavepoint	src/server/sqlite3.c	14877;"	d	file:
sqlite3VtabSync	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSync(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VtabSync	src/server/sqlite3.c	14870;"	d	file:
sqlite3VtabUnlock	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlock	src/server/sqlite3.c	14875;"	d	file:
sqlite3VtabUnlockList	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3VtabUnlockList	src/server/sqlite3.c	14876;"	d	file:
sqlite3WalBeginReadTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	src/server/sqlite3.c	43902;"	d	file:
sqlite3WalBeginWriteTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	src/server/sqlite3.c	43905;"	d	file:
sqlite3WalCallback	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	src/server/sqlite3.c	43912;"	d	file:
sqlite3WalCheckpoint	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	src/server/sqlite3.c	43911;"	d	file:
sqlite3WalClose	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalClose($/;"	f
sqlite3WalClose	src/server/sqlite3.c	43901;"	d	file:
sqlite3WalDbsize	src/server/sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	src/server/sqlite3.c	43904;"	d	file:
sqlite3WalDefaultHook	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalDefaultHook($/;"	f
sqlite3WalEndReadTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	src/server/sqlite3.c	43903;"	d	file:
sqlite3WalEndWriteTransaction	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	src/server/sqlite3.c	43906;"	d	file:
sqlite3WalExclusiveMode	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	src/server/sqlite3.c	43913;"	d	file:
sqlite3WalFile	src/server/sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3WalFile(Wal *pWal){$/;"	f
sqlite3WalFile	src/server/sqlite3.c	43917;"	d	file:
sqlite3WalFindFrame	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFindFrame($/;"	f
sqlite3WalFindFrame	src/server/sqlite3.c	43916;"	d	file:
sqlite3WalFrames	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFrames($/;"	f
sqlite3WalFrames	src/server/sqlite3.c	43910;"	d	file:
sqlite3WalFramesize	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFramesize(Wal *pWal){$/;"	f
sqlite3WalFramesize	src/server/sqlite3.c	43915;"	d	file:
sqlite3WalHeapMemory	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	src/server/sqlite3.c	43914;"	d	file:
sqlite3WalLimit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	src/server/sqlite3.c	43900;"	d	file:
sqlite3WalOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalOpen($/;"	f
sqlite3WalOpen	src/server/sqlite3.c	43899;"	d	file:
sqlite3WalReadFrame	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalReadFrame($/;"	f
sqlite3WalSavepoint	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	src/server/sqlite3.c	43908;"	d	file:
sqlite3WalSavepointUndo	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	src/server/sqlite3.c	43909;"	d	file:
sqlite3WalSnapshotGet	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSnapshotGet(Wal *pWal, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3WalSnapshotOpen	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSnapshotOpen(Wal *pWal, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3WalTrace	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalTrace = 0;$/;"	v
sqlite3WalUndo	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	src/server/sqlite3.c	43907;"	d	file:
sqlite3WalkExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExprList	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkSelect	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WhereAddScanStatus	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereAddScanStatus($/;"	f
sqlite3WhereAddScanStatus	src/server/sqlite3.c	120370;"	d	file:
sqlite3WhereBegin	src/server/sqlite3.c	/^SQLITE_PRIVATE WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereBreakLabel	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereBreakLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereClauseClear	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClauseClear(WhereClause *pWC){$/;"	f
sqlite3WhereClauseInit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClauseInit($/;"	f
sqlite3WhereCodeOneLoopStart	src/server/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereCodeOneLoopStart($/;"	f
sqlite3WhereContinueLabel	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereContinueLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereEnd	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereExplainOneScan	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereExplainOneScan($/;"	f
sqlite3WhereExplainOneScan	src/server/sqlite3.c	120360;"	d	file:
sqlite3WhereExprAnalyze	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereExprAnalyze($/;"	f
sqlite3WhereExprListUsage	src/server/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereExprListUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f
sqlite3WhereExprUsage	src/server/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereExprUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f
sqlite3WhereFindTerm	src/server/sqlite3.c	/^SQLITE_PRIVATE WhereTerm *sqlite3WhereFindTerm($/;"	f
sqlite3WhereGetMask	src/server/sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereGetMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f
sqlite3WhereIsDistinct	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsDistinct(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsOrdered	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsOrdered(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsSorted	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsSorted(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOkOnePass	src/server/sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereOkOnePass(WhereInfo *pWInfo, int *aiCur){$/;"	f
sqlite3WhereOutputRowCount	src/server/sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3WhereOutputRowCount(WhereInfo *pWInfo){$/;"	f
sqlite3WhereSplit	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereSplit(WhereClause *pWC, Expr *pExpr, u8 op){$/;"	f
sqlite3WhereTabFuncArgs	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereTabFuncArgs($/;"	f
sqlite3WhereTrace	src/server/sqlite3.c	/^\/***\/ int sqlite3WhereTrace = 0;$/;"	v
sqlite3WhereTrace	src/server/sqlite3.c	/^\/***\/ int sqlite3WhereTrace;$/;"	v
sqlite3Win32Wait	src/server/sqlite3.c	/^SQLITE_PRIVATE DWORD sqlite3Win32Wait(HANDLE hObject){$/;"	f
sqlite3WithAdd	src/server/sqlite3.c	/^SQLITE_PRIVATE With *sqlite3WithAdd($/;"	f
sqlite3WithDelete	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WithDelete(sqlite3 *db, With *pWith){$/;"	f
sqlite3WithDelete	src/server/sqlite3.c	14925;"	d	file:
sqlite3WithPush	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3WithPush(Parse *pParse, With *pWith, u8 bFree){$/;"	f
sqlite3WithPush	src/server/sqlite3.c	14924;"	d	file:
sqlite3XPrintf	src/server/sqlite3.c	/^SQLITE_PRIVATE void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3_aggregate_context	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_context	src/server/sqlite3.c	106162;"	d	file:
sqlite3_aggregate_count	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_aggregate_count	src/server/sqlite3.c	106164;"	d	file:
sqlite3_api_routines	src/server/sqlite3.c	/^struct sqlite3_api_routines {$/;"	s	file:
sqlite3_api_routines	src/server/sqlite3.c	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines	file:
sqlite3_auto_extension	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_auto_extension(void (*xInit)(void)){$/;"	f
sqlite3_auto_extension	src/server/sqlite3.c	106367;"	d	file:
sqlite3_backup	src/server/sqlite3.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	src/server/sqlite3.c	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup	file:
sqlite3_backup	src/server/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup_finish	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	src/server/sqlite3.c	106328;"	d	file:
sqlite3_backup_init	src/server/sqlite3.c	/^SQLITE_API sqlite3_backup *SQLITE_STDCALL sqlite3_backup_init($/;"	f
sqlite3_backup_init	src/server/sqlite3.c	106329;"	d	file:
sqlite3_backup_pagecount	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	src/server/sqlite3.c	106330;"	d	file:
sqlite3_backup_remaining	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	src/server/sqlite3.c	106331;"	d	file:
sqlite3_backup_step	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	src/server/sqlite3.c	106332;"	d	file:
sqlite3_bind_blob	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_blob($/;"	f
sqlite3_bind_blob	src/server/sqlite3.c	106166;"	d	file:
sqlite3_bind_blob64	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_blob64($/;"	f
sqlite3_bind_blob64	src/server/sqlite3.c	106368;"	d	file:
sqlite3_bind_double	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_double	src/server/sqlite3.c	106167;"	d	file:
sqlite3_bind_int	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int	src/server/sqlite3.c	106168;"	d	file:
sqlite3_bind_int64	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_int64	src/server/sqlite3.c	106169;"	d	file:
sqlite3_bind_null	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_null	src/server/sqlite3.c	106170;"	d	file:
sqlite3_bind_parameter_count	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_count	src/server/sqlite3.c	106171;"	d	file:
sqlite3_bind_parameter_index	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_index	src/server/sqlite3.c	106172;"	d	file:
sqlite3_bind_parameter_name	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_name	src/server/sqlite3.c	106173;"	d	file:
sqlite3_bind_text	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_text( $/;"	f
sqlite3_bind_text	src/server/sqlite3.c	106174;"	d	file:
sqlite3_bind_text16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_text16($/;"	f
sqlite3_bind_text16	src/server/sqlite3.c	106175;"	d	file:
sqlite3_bind_text16	src/server/sqlite3.c	106438;"	d	file:
sqlite3_bind_text64	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_text64( $/;"	f
sqlite3_bind_text64	src/server/sqlite3.c	106369;"	d	file:
sqlite3_bind_value	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_value	src/server/sqlite3.c	106176;"	d	file:
sqlite3_bind_zeroblob	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob	src/server/sqlite3.c	106293;"	d	file:
sqlite3_bind_zeroblob	src/server/sqlite3.c	106499;"	d	file:
sqlite3_bind_zeroblob64	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_zeroblob64(sqlite3_stmt *pStmt, int i, sqlite3_uint64 n){$/;"	f
sqlite3_bind_zeroblob64	src/server/sqlite3.c	106383;"	d	file:
sqlite3_blob	src/server/sqlite3.c	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob	file:
sqlite3_blob	src/server/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob_bytes	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_bytes	src/server/sqlite3.c	106294;"	d	file:
sqlite3_blob_bytes	src/server/sqlite3.c	106500;"	d	file:
sqlite3_blob_close	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	src/server/sqlite3.c	106295;"	d	file:
sqlite3_blob_close	src/server/sqlite3.c	106501;"	d	file:
sqlite3_blob_open	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_open($/;"	f
sqlite3_blob_open	src/server/sqlite3.c	106296;"	d	file:
sqlite3_blob_open	src/server/sqlite3.c	106502;"	d	file:
sqlite3_blob_read	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_read	src/server/sqlite3.c	106297;"	d	file:
sqlite3_blob_read	src/server/sqlite3.c	106503;"	d	file:
sqlite3_blob_reopen	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_reopen	src/server/sqlite3.c	106349;"	d	file:
sqlite3_blob_reopen	src/server/sqlite3.c	106505;"	d	file:
sqlite3_blob_write	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blob_write	src/server/sqlite3.c	106298;"	d	file:
sqlite3_blob_write	src/server/sqlite3.c	106504;"	d	file:
sqlite3_busy_handler	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	src/server/sqlite3.c	106177;"	d	file:
sqlite3_busy_timeout	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	src/server/sqlite3.c	106178;"	d	file:
sqlite3_callback	src/server/sqlite3.c	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t	file:
sqlite3_callback	src/server/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_cancel_auto_extension	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_cancel_auto_extension(void (*xInit)(void)){$/;"	f
sqlite3_cancel_auto_extension	src/server/sqlite3.c	106370;"	d	file:
sqlite3_changes	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	src/server/sqlite3.c	106179;"	d	file:
sqlite3_clear_bindings	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_clear_bindings	src/server/sqlite3.c	106292;"	d	file:
sqlite3_close	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_close(sqlite3 *db){ return sqlite3Close(db,0); }$/;"	f
sqlite3_close	src/server/sqlite3.c	106180;"	d	file:
sqlite3_close_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_close_v2(sqlite3 *db){ return sqlite3Close(db,1); }$/;"	f
sqlite3_close_v2	src/server/sqlite3.c	106353;"	d	file:
sqlite3_collation_needed	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	src/server/sqlite3.c	106181;"	d	file:
sqlite3_collation_needed16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	src/server/sqlite3.c	106182;"	d	file:
sqlite3_collation_needed16	src/server/sqlite3.c	106439;"	d	file:
sqlite3_column_blob	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_blob	src/server/sqlite3.c	106183;"	d	file:
sqlite3_column_bytes	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	src/server/sqlite3.c	106184;"	d	file:
sqlite3_column_bytes16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	src/server/sqlite3.c	106185;"	d	file:
sqlite3_column_count	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_count	src/server/sqlite3.c	106186;"	d	file:
sqlite3_column_database_name	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name	src/server/sqlite3.c	106187;"	d	file:
sqlite3_column_database_name	src/server/sqlite3.c	106425;"	d	file:
sqlite3_column_database_name16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	src/server/sqlite3.c	106188;"	d	file:
sqlite3_column_database_name16	src/server/sqlite3.c	106426;"	d	file:
sqlite3_column_database_name16	src/server/sqlite3.c	106457;"	d	file:
sqlite3_column_decltype	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	src/server/sqlite3.c	106189;"	d	file:
sqlite3_column_decltype	src/server/sqlite3.c	106469;"	d	file:
sqlite3_column_decltype16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	src/server/sqlite3.c	106190;"	d	file:
sqlite3_column_decltype16	src/server/sqlite3.c	106440;"	d	file:
sqlite3_column_decltype16	src/server/sqlite3.c	106468;"	d	file:
sqlite3_column_double	src/server/sqlite3.c	/^SQLITE_API double SQLITE_STDCALL sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_double	src/server/sqlite3.c	106191;"	d	file:
sqlite3_column_int	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	src/server/sqlite3.c	106192;"	d	file:
sqlite3_column_int64	src/server/sqlite3.c	/^SQLITE_API sqlite_int64 SQLITE_STDCALL sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	src/server/sqlite3.c	106193;"	d	file:
sqlite3_column_name	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name	src/server/sqlite3.c	106194;"	d	file:
sqlite3_column_name16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	src/server/sqlite3.c	106195;"	d	file:
sqlite3_column_name16	src/server/sqlite3.c	106441;"	d	file:
sqlite3_column_origin_name	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	src/server/sqlite3.c	106196;"	d	file:
sqlite3_column_origin_name	src/server/sqlite3.c	106429;"	d	file:
sqlite3_column_origin_name16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	src/server/sqlite3.c	106197;"	d	file:
sqlite3_column_origin_name16	src/server/sqlite3.c	106430;"	d	file:
sqlite3_column_origin_name16	src/server/sqlite3.c	106459;"	d	file:
sqlite3_column_table_name	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	src/server/sqlite3.c	106198;"	d	file:
sqlite3_column_table_name	src/server/sqlite3.c	106427;"	d	file:
sqlite3_column_table_name16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	src/server/sqlite3.c	106199;"	d	file:
sqlite3_column_table_name16	src/server/sqlite3.c	106428;"	d	file:
sqlite3_column_table_name16	src/server/sqlite3.c	106458;"	d	file:
sqlite3_column_text	src/server/sqlite3.c	/^SQLITE_API const unsigned char *SQLITE_STDCALL sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text	src/server/sqlite3.c	106200;"	d	file:
sqlite3_column_text16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	src/server/sqlite3.c	106201;"	d	file:
sqlite3_column_text16	src/server/sqlite3.c	106442;"	d	file:
sqlite3_column_type	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	src/server/sqlite3.c	106202;"	d	file:
sqlite3_column_value	src/server/sqlite3.c	/^SQLITE_API sqlite3_value *SQLITE_STDCALL sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	src/server/sqlite3.c	106203;"	d	file:
sqlite3_commit_hook	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	src/server/sqlite3.c	106204;"	d	file:
sqlite3_compileoption_get	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	src/server/sqlite3.c	106333;"	d	file:
sqlite3_compileoption_used	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	src/server/sqlite3.c	106334;"	d	file:
sqlite3_complete	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	src/server/sqlite3.c	106205;"	d	file:
sqlite3_complete	src/server/sqlite3.c	106463;"	d	file:
sqlite3_complete16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	src/server/sqlite3.c	106206;"	d	file:
sqlite3_complete16	src/server/sqlite3.c	106443;"	d	file:
sqlite3_complete16	src/server/sqlite3.c	106464;"	d	file:
sqlite3_config	src/server/sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_config(int op, ...){$/;"	f
sqlite3_context	src/server/sqlite3.c	/^struct sqlite3_context {$/;"	s	file:
sqlite3_context	src/server/sqlite3.c	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context	file:
sqlite3_context	src/server/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context_db_handle	src/server/sqlite3.c	/^SQLITE_API sqlite3 *SQLITE_STDCALL sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_context_db_handle	src/server/sqlite3.c	106322;"	d	file:
sqlite3_create_collation	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_collation($/;"	f
sqlite3_create_collation	src/server/sqlite3.c	106207;"	d	file:
sqlite3_create_collation16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	src/server/sqlite3.c	106208;"	d	file:
sqlite3_create_collation16	src/server/sqlite3.c	106444;"	d	file:
sqlite3_create_collation_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	src/server/sqlite3.c	106299;"	d	file:
sqlite3_create_function	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_function($/;"	f
sqlite3_create_function	src/server/sqlite3.c	106209;"	d	file:
sqlite3_create_function16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_function16($/;"	f
sqlite3_create_function16	src/server/sqlite3.c	106210;"	d	file:
sqlite3_create_function16	src/server/sqlite3.c	106445;"	d	file:
sqlite3_create_function_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	src/server/sqlite3.c	106335;"	d	file:
sqlite3_create_module	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_module($/;"	f
sqlite3_create_module	src/server/sqlite3.c	106211;"	d	file:
sqlite3_create_module	src/server/sqlite3.c	106477;"	d	file:
sqlite3_create_module_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_module_v2($/;"	f
sqlite3_create_module_v2	src/server/sqlite3.c	106212;"	d	file:
sqlite3_create_module_v2	src/server/sqlite3.c	106478;"	d	file:
sqlite3_current_time	src/server/sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_data_count	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_count	src/server/sqlite3.c	106213;"	d	file:
sqlite3_data_directory	src/server/sqlite3.c	/^SQLITE_API char *sqlite3_data_directory = 0;$/;"	v
sqlite3_data_directory	src/server/sqlite3.c	/^SQLITE_API char *sqlite3_data_directory;$/;"	v
sqlite3_data_directory	src/server/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_data_directory;$/;"	v
sqlite3_db_cacheflush	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_cacheflush(sqlite3 *db){$/;"	f
sqlite3_db_cacheflush	src/server/sqlite3.c	106390;"	d	file:
sqlite3_db_config	src/server/sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	src/server/sqlite3.c	106336;"	d	file:
sqlite3_db_filename	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_db_filename(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_filename	src/server/sqlite3.c	106354;"	d	file:
sqlite3_db_handle	src/server/sqlite3.c	/^SQLITE_API sqlite3 *SQLITE_STDCALL sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_handle	src/server/sqlite3.c	106214;"	d	file:
sqlite3_db_mutex	src/server/sqlite3.c	/^SQLITE_API sqlite3_mutex *SQLITE_STDCALL sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	src/server/sqlite3.c	106337;"	d	file:
sqlite3_db_readonly	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_readonly(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_readonly	src/server/sqlite3.c	106355;"	d	file:
sqlite3_db_release_memory	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_release_memory(sqlite3 *db){$/;"	f
sqlite3_db_release_memory	src/server/sqlite3.c	106356;"	d	file:
sqlite3_db_status	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_status($/;"	f
sqlite3_db_status	src/server/sqlite3.c	106338;"	d	file:
sqlite3_debug_mutex	src/server/sqlite3.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	src/server/sqlite3.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_declare_vtab	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_declare_vtab	src/server/sqlite3.c	106215;"	d	file:
sqlite3_declare_vtab	src/server/sqlite3.c	106479;"	d	file:
sqlite3_destructor_type	src/server/sqlite3.c	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t	file:
sqlite3_destructor_type	src/server/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_diskfull	src/server/sqlite3.c	/^SQLITE_API int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull_pending	src/server/sqlite3.c	/^SQLITE_API int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_enable_load_extension	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_shared_cache	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	src/server/sqlite3.c	106216;"	d	file:
sqlite3_enable_shared_cache	src/server/sqlite3.c	106485;"	d	file:
sqlite3_errcode	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	src/server/sqlite3.c	106217;"	d	file:
sqlite3_errmsg	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	src/server/sqlite3.c	106218;"	d	file:
sqlite3_errmsg16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	src/server/sqlite3.c	106219;"	d	file:
sqlite3_errmsg16	src/server/sqlite3.c	106446;"	d	file:
sqlite3_errstr	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_errstr(int rc){$/;"	f
sqlite3_errstr	src/server/sqlite3.c	106357;"	d	file:
sqlite3_exec	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_exec($/;"	f
sqlite3_exec	src/server/sqlite3.c	106220;"	d	file:
sqlite3_expired	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	src/server/sqlite3.c	106222;"	d	file:
sqlite3_extended_errcode	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	src/server/sqlite3.c	106339;"	d	file:
sqlite3_extended_result_codes	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	src/server/sqlite3.c	106323;"	d	file:
sqlite3_file	src/server/sqlite3.c	/^struct sqlite3_file {$/;"	s	file:
sqlite3_file	src/server/sqlite3.c	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file	file:
sqlite3_file	src/server/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	src/server/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file_control	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	src/server/sqlite3.c	106300;"	d	file:
sqlite3_finalize	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_finalize	src/server/sqlite3.c	106224;"	d	file:
sqlite3_found_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_found_count = 0;$/;"	v
sqlite3_free	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_free(void *p){$/;"	f
sqlite3_free	src/server/sqlite3.c	106225;"	d	file:
sqlite3_free_table	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_free_table($/;"	f
sqlite3_free_table	src/server/sqlite3.c	106226;"	d	file:
sqlite3_free_table	src/server/sqlite3.c	106494;"	d	file:
sqlite3_fts3_enable_parentheses	src/server/sqlite3.c	/^SQLITE_API int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	src/server/sqlite3.c	144984;"	d	file:
sqlite3_fts3_enable_parentheses	src/server/sqlite3.c	144986;"	d	file:
sqlite3_fts5_may_be_corrupt	src/server/sqlite3.c	/^SQLITE_API int sqlite3_fts5_may_be_corrupt = 1;$/;"	v
sqlite3_fullsync_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_get_autocommit	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	src/server/sqlite3.c	106227;"	d	file:
sqlite3_get_auxdata	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_auxdata	src/server/sqlite3.c	106228;"	d	file:
sqlite3_get_table	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_get_table($/;"	f
sqlite3_get_table	src/server/sqlite3.c	106229;"	d	file:
sqlite3_get_table	src/server/sqlite3.c	106495;"	d	file:
sqlite3_get_table_cb	src/server/sqlite3.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_global_recover	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	src/server/sqlite3.c	106231;"	d	file:
sqlite3_hostid_num	src/server/sqlite3.c	/^SQLITE_API int sqlite3_hostid_num = 0;$/;"	v
sqlite3_index_constraint	src/server/sqlite3.c	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint	src/server/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	src/server/sqlite3.c	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint_usage	src/server/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	src/server/sqlite3.c	/^struct sqlite3_index_info {$/;"	s	file:
sqlite3_index_info	src/server/sqlite3.c	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info	file:
sqlite3_index_info	src/server/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	src/server/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	src/server/sqlite3.c	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_orderby	src/server/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_initialize	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_initialize(void){$/;"	f
sqlite3_int64	src/server/sqlite3.c	/^typedef sqlite_int64 sqlite3_int64;$/;"	t	file:
sqlite3_int64	src/server/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_interrupt	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	src/server/sqlite3.c	106233;"	d	file:
sqlite3_interrupt_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_io_error_benign	src/server/sqlite3.c	/^SQLITE_API int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_hardhit	src/server/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hit	src/server/sqlite3.c	/^SQLITE_API int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_pending	src/server/sqlite3.c	/^SQLITE_API int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_persist	src/server/sqlite3.c	/^SQLITE_API int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_methods	src/server/sqlite3.c	/^struct sqlite3_io_methods {$/;"	s	file:
sqlite3_io_methods	src/server/sqlite3.c	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods	file:
sqlite3_io_methods	src/server/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	src/server/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_last_insert_rowid	src/server/sqlite3.c	/^SQLITE_API sqlite_int64 SQLITE_STDCALL sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	src/server/sqlite3.c	106234;"	d	file:
sqlite3_libversion	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	src/server/sqlite3.c	106235;"	d	file:
sqlite3_libversion_number	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	src/server/sqlite3.c	106236;"	d	file:
sqlite3_like_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_like_count = 0;$/;"	v
sqlite3_limit	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	src/server/sqlite3.c	106324;"	d	file:
sqlite3_load_extension	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_load_extension($/;"	f
sqlite3_load_extension	src/server/sqlite3.c	106371;"	d	file:
sqlite3_log	src/server/sqlite3.c	/^SQLITE_API void SQLITE_CDECL sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	src/server/sqlite3.c	106340;"	d	file:
sqlite3_malloc	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	src/server/sqlite3.c	106237;"	d	file:
sqlite3_malloc64	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_malloc64(sqlite3_uint64 n){$/;"	f
sqlite3_malloc64	src/server/sqlite3.c	106372;"	d	file:
sqlite3_max_blobsize	src/server/sqlite3.c	/^SQLITE_API int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_mem_methods	src/server/sqlite3.c	/^struct sqlite3_mem_methods {$/;"	s	file:
sqlite3_mem_methods	src/server/sqlite3.c	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods	file:
sqlite3_mem_methods	src/server/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	src/server/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_memdebug_vfs_oom_test	src/server/sqlite3.c	/^SQLITE_API int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memory_alarm	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_memory_alarm($/;"	f
sqlite3_memory_highwater	src/server/sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	src/server/sqlite3.c	106301;"	d	file:
sqlite3_memory_used	src/server/sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	src/server/sqlite3.c	106302;"	d	file:
sqlite3_module	src/server/sqlite3.c	/^struct sqlite3_module {$/;"	s	file:
sqlite3_module	src/server/sqlite3.c	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module	file:
sqlite3_module	src/server/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	src/server/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mprintf	src/server/sqlite3.c	/^SQLITE_API char *SQLITE_CDECL sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	src/server/sqlite3.c	106238;"	d	file:
sqlite3_msize	src/server/sqlite3.c	/^SQLITE_API sqlite3_uint64 SQLITE_STDCALL sqlite3_msize(void *p){$/;"	f
sqlite3_msize	src/server/sqlite3.c	106373;"	d	file:
sqlite3_mutex	src/server/sqlite3.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	src/server/sqlite3.c	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex	file:
sqlite3_mutex	src/server/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_alloc	src/server/sqlite3.c	/^SQLITE_API sqlite3_mutex *SQLITE_STDCALL sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	src/server/sqlite3.c	106303;"	d	file:
sqlite3_mutex_alloc	src/server/sqlite3.c	11943;"	d	file:
sqlite3_mutex_enter	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	src/server/sqlite3.c	106304;"	d	file:
sqlite3_mutex_enter	src/server/sqlite3.c	11945;"	d	file:
sqlite3_mutex_free	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	src/server/sqlite3.c	106305;"	d	file:
sqlite3_mutex_free	src/server/sqlite3.c	11944;"	d	file:
sqlite3_mutex_held	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	src/server/sqlite3.c	11948;"	d	file:
sqlite3_mutex_leave	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	src/server/sqlite3.c	106306;"	d	file:
sqlite3_mutex_leave	src/server/sqlite3.c	11947;"	d	file:
sqlite3_mutex_methods	src/server/sqlite3.c	/^struct sqlite3_mutex_methods {$/;"	s	file:
sqlite3_mutex_methods	src/server/sqlite3.c	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods	file:
sqlite3_mutex_methods	src/server/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	src/server/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_notheld	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	src/server/sqlite3.c	11949;"	d	file:
sqlite3_mutex_try	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	src/server/sqlite3.c	106307;"	d	file:
sqlite3_mutex_try	src/server/sqlite3.c	11946;"	d	file:
sqlite3_next_stmt	src/server/sqlite3.c	/^SQLITE_API sqlite3_stmt *SQLITE_STDCALL sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_next_stmt	src/server/sqlite3.c	106325;"	d	file:
sqlite3_open	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_open($/;"	f
sqlite3_open	src/server/sqlite3.c	106239;"	d	file:
sqlite3_open16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_open16($/;"	f
sqlite3_open16	src/server/sqlite3.c	106240;"	d	file:
sqlite3_open16	src/server/sqlite3.c	106447;"	d	file:
sqlite3_open_file_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_open_v2($/;"	f
sqlite3_open_v2	src/server/sqlite3.c	106308;"	d	file:
sqlite3_opentemp_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_os_end	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_end(void){ $/;"	f
sqlite3_os_end	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_end(void){$/;"	f
sqlite3_os_init	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_init(void){ $/;"	f
sqlite3_os_init	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_init(void){$/;"	f
sqlite3_os_type	src/server/sqlite3.c	/^SQLITE_API LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	src/server/sqlite3.c	/^static LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v	file:
sqlite3_overload_function	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_overload_function($/;"	f
sqlite3_overload_function	src/server/sqlite3.c	106289;"	d	file:
sqlite3_pager_readdb_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_writedb_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writej_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pcache	src/server/sqlite3.c	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache	file:
sqlite3_pcache	src/server/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	src/server/sqlite3.c	/^struct sqlite3_pcache_methods {$/;"	s	file:
sqlite3_pcache_methods	src/server/sqlite3.c	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods	file:
sqlite3_pcache_methods	src/server/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	src/server/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods2	src/server/sqlite3.c	/^struct sqlite3_pcache_methods2 {$/;"	s	file:
sqlite3_pcache_methods2	src/server/sqlite3.c	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2	file:
sqlite3_pcache_methods2	src/server/sqlite3.h	/^struct sqlite3_pcache_methods2 {$/;"	s
sqlite3_pcache_methods2	src/server/sqlite3.h	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2
sqlite3_pcache_page	src/server/sqlite3.c	/^struct sqlite3_pcache_page {$/;"	s	file:
sqlite3_pcache_page	src/server/sqlite3.c	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page	file:
sqlite3_pcache_page	src/server/sqlite3.h	/^struct sqlite3_pcache_page {$/;"	s
sqlite3_pcache_page	src/server/sqlite3.h	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page
sqlite3_prepare	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare($/;"	f
sqlite3_prepare	src/server/sqlite3.c	106241;"	d	file:
sqlite3_prepare16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare16($/;"	f
sqlite3_prepare16	src/server/sqlite3.c	106242;"	d	file:
sqlite3_prepare16	src/server/sqlite3.c	106448;"	d	file:
sqlite3_prepare16_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	src/server/sqlite3.c	106244;"	d	file:
sqlite3_prepare16_v2	src/server/sqlite3.c	106291;"	d	file:
sqlite3_prepare16_v2	src/server/sqlite3.c	106449;"	d	file:
sqlite3_prepare_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	src/server/sqlite3.c	106243;"	d	file:
sqlite3_prepare_v2	src/server/sqlite3.c	106290;"	d	file:
sqlite3_profile	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_profile($/;"	f
sqlite3_profile	src/server/sqlite3.c	106245;"	d	file:
sqlite3_profile	src/server/sqlite3.c	106489;"	d	file:
sqlite3_progress_handler	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	src/server/sqlite3.c	106246;"	d	file:
sqlite3_progress_handler	src/server/sqlite3.c	106473;"	d	file:
sqlite3_randomness	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	src/server/sqlite3.c	106321;"	d	file:
sqlite3_realloc	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	src/server/sqlite3.c	106247;"	d	file:
sqlite3_realloc64	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_realloc64(void *pOld, sqlite3_uint64 n){$/;"	f
sqlite3_realloc64	src/server/sqlite3.c	106374;"	d	file:
sqlite3_release_memory	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	src/server/sqlite3.c	106309;"	d	file:
sqlite3_reset	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset	src/server/sqlite3.c	106248;"	d	file:
sqlite3_reset_auto_extension	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_reset_auto_extension	src/server/sqlite3.c	106375;"	d	file:
sqlite3_result_blob	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_blob($/;"	f
sqlite3_result_blob	src/server/sqlite3.c	106249;"	d	file:
sqlite3_result_blob64	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_blob64($/;"	f
sqlite3_result_blob64	src/server/sqlite3.c	106376;"	d	file:
sqlite3_result_double	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_double	src/server/sqlite3.c	106250;"	d	file:
sqlite3_result_error	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error	src/server/sqlite3.c	106251;"	d	file:
sqlite3_result_error16	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error16	src/server/sqlite3.c	106252;"	d	file:
sqlite3_result_error16	src/server/sqlite3.c	106450;"	d	file:
sqlite3_result_error_code	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_code	src/server/sqlite3.c	106319;"	d	file:
sqlite3_result_error_nomem	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_nomem	src/server/sqlite3.c	106310;"	d	file:
sqlite3_result_error_toobig	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	src/server/sqlite3.c	106311;"	d	file:
sqlite3_result_int	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int	src/server/sqlite3.c	106253;"	d	file:
sqlite3_result_int64	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_int64	src/server/sqlite3.c	106254;"	d	file:
sqlite3_result_null	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_null	src/server/sqlite3.c	106255;"	d	file:
sqlite3_result_subtype	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_subtype(sqlite3_context *pCtx, unsigned int eSubtype){$/;"	f
sqlite3_result_subtype	src/server/sqlite3.c	106386;"	d	file:
sqlite3_result_text	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text($/;"	f
sqlite3_result_text	src/server/sqlite3.c	106256;"	d	file:
sqlite3_result_text16	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text16($/;"	f
sqlite3_result_text16	src/server/sqlite3.c	106257;"	d	file:
sqlite3_result_text16	src/server/sqlite3.c	106451;"	d	file:
sqlite3_result_text16be	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text16be($/;"	f
sqlite3_result_text16be	src/server/sqlite3.c	106258;"	d	file:
sqlite3_result_text16be	src/server/sqlite3.c	106452;"	d	file:
sqlite3_result_text16le	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text16le($/;"	f
sqlite3_result_text16le	src/server/sqlite3.c	106259;"	d	file:
sqlite3_result_text16le	src/server/sqlite3.c	106453;"	d	file:
sqlite3_result_text64	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text64($/;"	f
sqlite3_result_text64	src/server/sqlite3.c	106377;"	d	file:
sqlite3_result_value	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_value	src/server/sqlite3.c	106260;"	d	file:
sqlite3_result_zeroblob	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob	src/server/sqlite3.c	106318;"	d	file:
sqlite3_result_zeroblob64	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_result_zeroblob64(sqlite3_context *pCtx, u64 n){$/;"	f
sqlite3_result_zeroblob64	src/server/sqlite3.c	106382;"	d	file:
sqlite3_rollback_hook	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	src/server/sqlite3.c	106261;"	d	file:
sqlite3_rtree_dbl	src/server/sqlite3.c	/^  typedef double sqlite3_rtree_dbl;$/;"	t	file:
sqlite3_rtree_dbl	src/server/sqlite3.c	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t	file:
sqlite3_rtree_dbl	src/server/sqlite3.h	/^  typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	src/server/sqlite3.h	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_geometry	src/server/sqlite3.c	/^struct sqlite3_rtree_geometry {$/;"	s	file:
sqlite3_rtree_geometry	src/server/sqlite3.c	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry	file:
sqlite3_rtree_geometry	src/server/sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	src/server/sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry_callback	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_rtree_geometry_callback($/;"	f
sqlite3_rtree_query_callback	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_rtree_query_callback($/;"	f
sqlite3_rtree_query_info	src/server/sqlite3.c	/^struct sqlite3_rtree_query_info {$/;"	s	file:
sqlite3_rtree_query_info	src/server/sqlite3.c	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info	file:
sqlite3_rtree_query_info	src/server/sqlite3.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	src/server/sqlite3.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_search_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_search_count = 0;$/;"	v
sqlite3_set_authorizer	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	src/server/sqlite3.c	106262;"	d	file:
sqlite3_set_authorizer	src/server/sqlite3.c	106434;"	d	file:
sqlite3_set_auxdata	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_set_auxdata($/;"	f
sqlite3_set_auxdata	src/server/sqlite3.c	106263;"	d	file:
sqlite3_shutdown	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_shutdown(void){$/;"	f
sqlite3_sleep	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	src/server/sqlite3.c	106312;"	d	file:
sqlite3_snapshot	src/server/sqlite3.c	/^typedef struct sqlite3_snapshot sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot	file:
sqlite3_snapshot	src/server/sqlite3.h	/^typedef struct sqlite3_snapshot sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot
sqlite3_snapshot_free	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_snapshot_free(sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3_snapshot_get	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_snapshot_get($/;"	f
sqlite3_snapshot_open	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_snapshot_open($/;"	f
sqlite3_snprintf	src/server/sqlite3.c	/^SQLITE_API char *SQLITE_CDECL sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	src/server/sqlite3.c	106264;"	d	file:
sqlite3_soft_heap_limit	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	src/server/sqlite3.c	106313;"	d	file:
sqlite3_soft_heap_limit64	src/server/sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	src/server/sqlite3.c	106341;"	d	file:
sqlite3_sort_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_sort_count = 0;$/;"	v
sqlite3_sourceid	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	src/server/sqlite3.c	106342;"	d	file:
sqlite3_sql	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_sql	src/server/sqlite3.c	106326;"	d	file:
sqlite3_status	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status	src/server/sqlite3.c	106327;"	d	file:
sqlite3_status64	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_status64($/;"	f
sqlite3_status64	src/server/sqlite3.c	106388;"	d	file:
sqlite3_step	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_step	src/server/sqlite3.c	106265;"	d	file:
sqlite3_stmt	src/server/sqlite3.c	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt	file:
sqlite3_stmt	src/server/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt_busy	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_busy(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_busy	src/server/sqlite3.c	106358;"	d	file:
sqlite3_stmt_readonly	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_readonly	src/server/sqlite3.c	106359;"	d	file:
sqlite3_stmt_scanstatus	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_scanstatus($/;"	f
sqlite3_stmt_scanstatus_reset	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_stmt_scanstatus_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_status	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_stmt_status	src/server/sqlite3.c	106343;"	d	file:
sqlite3_strglob	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_strglob(const char *zGlobPattern, const char *zString){$/;"	f
sqlite3_strglob	src/server/sqlite3.c	106378;"	d	file:
sqlite3_stricmp	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stricmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3_stricmp	src/server/sqlite3.c	106360;"	d	file:
sqlite3_strlike	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){$/;"	f
sqlite3_strlike	src/server/sqlite3.c	106389;"	d	file:
sqlite3_strnicmp	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_strnicmp	src/server/sqlite3.c	106344;"	d	file:
sqlite3_sync_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_sync_count = 0;$/;"	v
sqlite3_syscall_ptr	src/server/sqlite3.c	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t	file:
sqlite3_syscall_ptr	src/server/sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_system_errno	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_system_errno(sqlite3 *db){$/;"	f
sqlite3_system_errno	src/server/sqlite3.c	106392;"	d	file:
sqlite3_table_column_metadata	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	src/server/sqlite3.c	106266;"	d	file:
sqlite3_temp_directory	src/server/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	src/server/sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory;$/;"	v
sqlite3_temp_directory	src/server/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	src/server/sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	src/server/sqlite3.c	106320;"	d	file:
sqlite3_thread_cleanup	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	src/server/sqlite3.c	106267;"	d	file:
sqlite3_threadsafe	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	src/server/sqlite3.c	106317;"	d	file:
sqlite3_tokenizer	src/server/sqlite3.c	/^struct sqlite3_tokenizer {$/;"	s	file:
sqlite3_tokenizer	src/server/sqlite3.c	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer	file:
sqlite3_tokenizer_cursor	src/server/sqlite3.c	/^struct sqlite3_tokenizer_cursor {$/;"	s	file:
sqlite3_tokenizer_cursor	src/server/sqlite3.c	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor	file:
sqlite3_tokenizer_module	src/server/sqlite3.c	/^struct sqlite3_tokenizer_module {$/;"	s	file:
sqlite3_tokenizer_module	src/server/sqlite3.c	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module	file:
sqlite3_total_changes	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	src/server/sqlite3.c	106268;"	d	file:
sqlite3_trace	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_trace(sqlite3 *db, void (*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	src/server/sqlite3.c	106269;"	d	file:
sqlite3_trace	src/server/sqlite3.c	106490;"	d	file:
sqlite3_transfer_bindings	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_transfer_bindings	src/server/sqlite3.c	106271;"	d	file:
sqlite3_uint64	src/server/sqlite3.c	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t	file:
sqlite3_uint64	src/server/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_unlock_notify	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	src/server/sqlite3.c	106345;"	d	file:
sqlite3_update_hook	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_update_hook($/;"	f
sqlite3_update_hook	src/server/sqlite3.c	106273;"	d	file:
sqlite3_uri_boolean	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){$/;"	f
sqlite3_uri_boolean	src/server/sqlite3.c	106361;"	d	file:
sqlite3_uri_int64	src/server/sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_uri_int64($/;"	f
sqlite3_uri_int64	src/server/sqlite3.c	106362;"	d	file:
sqlite3_uri_parameter	src/server/sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_uri_parameter	src/server/sqlite3.c	106363;"	d	file:
sqlite3_uri_vsnprintf	src/server/sqlite3.c	106364;"	d	file:
sqlite3_user_data	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_data	src/server/sqlite3.c	106274;"	d	file:
sqlite3_userauth	src/server/sqlite3.c	/^struct sqlite3_userauth {$/;"	s	file:
sqlite3_userauth	src/server/sqlite3.c	/^typedef struct sqlite3_userauth sqlite3_userauth;$/;"	t	typeref:struct:sqlite3_userauth	file:
sqlite3_value	src/server/sqlite3.c	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem	file:
sqlite3_value	src/server/sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value_blob	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_blob	src/server/sqlite3.c	106275;"	d	file:
sqlite3_value_bytes	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	src/server/sqlite3.c	106276;"	d	file:
sqlite3_value_bytes16	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	src/server/sqlite3.c	106277;"	d	file:
sqlite3_value_double	src/server/sqlite3.c	/^SQLITE_API double SQLITE_STDCALL sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	src/server/sqlite3.c	106278;"	d	file:
sqlite3_value_dup	src/server/sqlite3.c	/^SQLITE_API sqlite3_value *SQLITE_STDCALL sqlite3_value_dup(const sqlite3_value *pOrig){$/;"	f
sqlite3_value_dup	src/server/sqlite3.c	106380;"	d	file:
sqlite3_value_free	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_value_free(sqlite3_value *pOld){$/;"	f
sqlite3_value_free	src/server/sqlite3.c	106381;"	d	file:
sqlite3_value_int	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int	src/server/sqlite3.c	106279;"	d	file:
sqlite3_value_int64	src/server/sqlite3.c	/^SQLITE_API sqlite_int64 SQLITE_STDCALL sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	src/server/sqlite3.c	106280;"	d	file:
sqlite3_value_numeric_type	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	src/server/sqlite3.c	106281;"	d	file:
sqlite3_value_subtype	src/server/sqlite3.c	/^SQLITE_API unsigned int SQLITE_STDCALL sqlite3_value_subtype(sqlite3_value *pVal){$/;"	f
sqlite3_value_subtype	src/server/sqlite3.c	106385;"	d	file:
sqlite3_value_text	src/server/sqlite3.c	/^SQLITE_API const unsigned char *SQLITE_STDCALL sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	src/server/sqlite3.c	106282;"	d	file:
sqlite3_value_text16	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16	src/server/sqlite3.c	106283;"	d	file:
sqlite3_value_text16	src/server/sqlite3.c	106454;"	d	file:
sqlite3_value_text16be	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16be	src/server/sqlite3.c	106284;"	d	file:
sqlite3_value_text16be	src/server/sqlite3.c	106455;"	d	file:
sqlite3_value_text16le	src/server/sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	src/server/sqlite3.c	106285;"	d	file:
sqlite3_value_text16le	src/server/sqlite3.c	106456;"	d	file:
sqlite3_value_type	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_value_type	src/server/sqlite3.c	106286;"	d	file:
sqlite3_version	src/server/sqlite3.c	/^SQLITE_API const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_version	src/server/sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	src/server/sqlite3.c	/^struct sqlite3_vfs {$/;"	s	file:
sqlite3_vfs	src/server/sqlite3.c	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs	file:
sqlite3_vfs	src/server/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	src/server/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs_find	src/server/sqlite3.c	/^SQLITE_API sqlite3_vfs *SQLITE_STDCALL sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	src/server/sqlite3.c	106314;"	d	file:
sqlite3_vfs_register	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	src/server/sqlite3.c	106315;"	d	file:
sqlite3_vfs_unregister	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	src/server/sqlite3.c	106316;"	d	file:
sqlite3_vmprintf	src/server/sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	src/server/sqlite3.c	106287;"	d	file:
sqlite3_vsnprintf	src/server/sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vsnprintf	src/server/sqlite3.c	106288;"	d	file:
sqlite3_vtab	src/server/sqlite3.c	/^struct sqlite3_vtab {$/;"	s	file:
sqlite3_vtab	src/server/sqlite3.c	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab	file:
sqlite3_vtab	src/server/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	src/server/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_config	src/server/sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_config	src/server/sqlite3.c	106350;"	d	file:
sqlite3_vtab_config	src/server/sqlite3.c	106480;"	d	file:
sqlite3_vtab_cursor	src/server/sqlite3.c	/^struct sqlite3_vtab_cursor {$/;"	s	file:
sqlite3_vtab_cursor	src/server/sqlite3.c	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor	file:
sqlite3_vtab_cursor	src/server/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	src/server/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_on_conflict	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_vtab_on_conflict	src/server/sqlite3.c	106351;"	d	file:
sqlite3_vtab_on_conflict	src/server/sqlite3.c	106481;"	d	file:
sqlite3_wal_autocheckpoint	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	src/server/sqlite3.c	106346;"	d	file:
sqlite3_wal_checkpoint	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	src/server/sqlite3.c	106347;"	d	file:
sqlite3_wal_checkpoint_v2	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_checkpoint_v2	src/server/sqlite3.c	106365;"	d	file:
sqlite3_wal_hook	src/server/sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	src/server/sqlite3.c	106348;"	d	file:
sqlite3_win32_compact_heap	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_compact_heap(LPUINT pnLargest){$/;"	f
sqlite3_win32_is_nt	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_is_nt(void){$/;"	f
sqlite3_win32_mbcs_to_utf8	src/server/sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_mbcs_to_utf8(const char *zFilename){$/;"	f
sqlite3_win32_reset_heap	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_reset_heap(){$/;"	f
sqlite3_win32_set_directory	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_set_directory(DWORD type, LPCWSTR zValue){$/;"	f
sqlite3_win32_sleep	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_win32_sleep(DWORD milliseconds){$/;"	f
sqlite3_win32_utf8_to_mbcs	src/server/sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_utf8_to_mbcs(const char *zFilename){$/;"	f
sqlite3_win32_write_debug	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_win32_write_debug(const char *zBuf, int nBuf){$/;"	f
sqlite3_xauth	src/server/sqlite3.c	/^  typedef int (*sqlite3_xauth)(void*,int,const char*,const char*,const char*,$/;"	t	file:
sqlite3_xferopt_count	src/server/sqlite3.c	/^SQLITE_API int sqlite3_xferopt_count;$/;"	v
sqlite3one	src/server/sqlite3.c	/^  const int sqlite3one = 1;$/;"	v
sqlite3one	src/server/sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one = 1;$/;"	v
sqlite3rbu	src/server/sqlite3.c	/^struct sqlite3rbu {$/;"	s	file:
sqlite3rbu	src/server/sqlite3.c	/^typedef struct sqlite3rbu sqlite3rbu;$/;"	t	typeref:struct:sqlite3rbu	file:
sqlite3rbu_bp_progress	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3rbu_bp_progress(sqlite3rbu *p, int *pnOne, int *pnTwo){$/;"	f
sqlite3rbu_close	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_close(sqlite3rbu *p, char **pzErrmsg){$/;"	f
sqlite3rbu_create_vfs	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_create_vfs(const char *zName, const char *zParent){$/;"	f
sqlite3rbu_db	src/server/sqlite3.c	/^SQLITE_API sqlite3 *SQLITE_STDCALL sqlite3rbu_db(sqlite3rbu *pRbu, int bRbu){$/;"	f
sqlite3rbu_destroy_vfs	src/server/sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3rbu_destroy_vfs(const char *zName){$/;"	f
sqlite3rbu_open	src/server/sqlite3.c	/^SQLITE_API sqlite3rbu *SQLITE_STDCALL sqlite3rbu_open($/;"	f
sqlite3rbu_progress	src/server/sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3rbu_progress(sqlite3rbu *pRbu){$/;"	f
sqlite3rbu_savestate	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_savestate(sqlite3rbu *p){$/;"	f
sqlite3rbu_step	src/server/sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_step(sqlite3rbu *p){$/;"	f
sqliteAuthBadReturnCode	src/server/sqlite3.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteDefaultBusyCallback	src/server/sqlite3.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteErrorFromPosixError	src/server/sqlite3.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteHashData	src/server/sqlite3.c	9604;"	d	file:
sqliteHashFirst	src/server/sqlite3.c	9602;"	d	file:
sqliteHashNext	src/server/sqlite3.c	9603;"	d	file:
sqliteProcessJoin	src/server/sqlite3.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteViewResetAll	src/server/sqlite3.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	src/server/sqlite3.c	96731;"	d	file:
sqlite_int64	src/server/sqlite3.c	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t	file:
sqlite_int64	src/server/sqlite3.c	/^  typedef __int64 sqlite_int64;$/;"	t	file:
sqlite_int64	src/server/sqlite3.c	/^  typedef long long int sqlite_int64;$/;"	t	file:
sqlite_int64	src/server/sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	src/server/sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	src/server/sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_uint64	src/server/sqlite3.c	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t	file:
sqlite_uint64	src/server/sqlite3.c	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t	file:
sqlite_uint64	src/server/sqlite3.c	/^  typedef unsigned long long int sqlite_uint64;$/;"	t	file:
sqlite_uint64	src/server/sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	src/server/sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	src/server/sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
sqlstmt	src/server/sv_sqlite.h	/^  const char *sqlstmt;$/;"	m	struct:__anon191
sqrTable	src/client/cl_cin.c	/^	short				sqrTable[256];$/;"	m	struct:__anon99	file:
squareTable	src/renderergl1/tr_local.h	/^	float					squareTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon163
squareTable	src/renderergl2/tr_local.h	/^	float					squareTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon63
srand	src/game/bg_lib.c	/^void srand( unsigned seed )$/;"	f
src	src/tools/lcc/src/c.h	/^			Coordinate src;$/;"	m	struct:code::__anon291::__anon294
src	src/tools/lcc/src/c.h	/^	Coordinate src;$/;"	m	struct:symbol
src	src/tools/lcc/src/lex.c	/^Coordinate src;		\/* current source coordinate *\/$/;"	v
src	src/tools/lcc/src/prof.c	/^	union coordinate src;$/;"	m	struct:func	typeref:union:func::coordinate	file:
src1_reg_flags	src/qcommon/vm_sparc.c	/^	unsigned char		src1_reg_flags;$/;"	m	struct:src_insn	file:
src2_reg_flags	src/qcommon/vm_sparc.c	/^	unsigned char		src2_reg_flags;$/;"	m	struct:src_insn	file:
srcActiveCnt	src/client/snd_openal.c	/^static int srcActiveCnt = 0;$/;"	v	file:
srcAllocated	src/client/snd_openal.c	/^	qboolean						srcAllocated; \/\/ If a src_t has been allocated to this entity$/;"	m	struct:sentity_s	file:
srcCount	src/client/snd_openal.c	/^static int srcCount = 0;$/;"	v	file:
srcHandle_t	src/client/snd_local.h	/^typedef int srcHandle_t;$/;"	t
srcIndex	src/client/snd_openal.c	/^	int							srcIndex;$/;"	m	struct:sentity_s	file:
srcList	src/client/snd_openal.c	/^static src_t srcList[MAX_SRC];$/;"	v	file:
src_insn	src/qcommon/vm_sparc.c	/^struct src_insn {$/;"	s	file:
src_s	src/client/snd_openal.c	/^typedef struct src_s$/;"	s	file:
src_t	src/client/snd_openal.c	/^} src_t;$/;"	t	typeref:struct:src_s	file:
srcfp	src/tools/lcc/src/main.c	/^static FILE *srcfp;		\/* stream for current file, if non-NULL *\/$/;"	v	file:
srcpos	src/tools/lcc/src/main.c	/^static int srcpos;		\/* position of srcfp, if srcfp is non-NULL *\/$/;"	v	file:
srfBspSurface_s	src/renderergl2/tr_local.h	/^typedef struct srfBspSurface_s$/;"	s
srfBspSurface_t	src/renderergl2/tr_local.h	/^} srfBspSurface_t;$/;"	t	typeref:struct:srfBspSurface_s
srfFlare_s	src/renderergl1/tr_local.h	/^typedef struct srfFlare_s {$/;"	s
srfFlare_s	src/renderergl2/tr_local.h	/^typedef struct srfFlare_s {$/;"	s
srfFlare_t	src/renderergl1/tr_local.h	/^} srfFlare_t;$/;"	t	typeref:struct:srfFlare_s
srfFlare_t	src/renderergl2/tr_local.h	/^} srfFlare_t;$/;"	t	typeref:struct:srfFlare_s
srfGridMesh_s	src/renderergl1/tr_local.h	/^typedef struct srfGridMesh_s {$/;"	s
srfGridMesh_t	src/renderergl1/tr_local.h	/^} srfGridMesh_t;$/;"	t	typeref:struct:srfGridMesh_s
srfIQModel_s	src/renderergl1/tr_local.h	/^typedef struct srfIQModel_s {$/;"	s
srfIQModel_s	src/renderergl2/tr_local.h	/^typedef struct srfIQModel_s {$/;"	s
srfIQModel_t	src/renderergl1/tr_local.h	/^} srfIQModel_t;$/;"	t	typeref:struct:srfIQModel_s
srfIQModel_t	src/renderergl2/tr_local.h	/^} srfIQModel_t;$/;"	t	typeref:struct:srfIQModel_s
srfPoly_s	src/renderergl1/tr_local.h	/^typedef struct srfPoly_s {$/;"	s
srfPoly_s	src/renderergl2/tr_local.h	/^typedef struct srfPoly_s {$/;"	s
srfPoly_t	src/renderergl1/tr_local.h	/^} srfPoly_t;$/;"	t	typeref:struct:srfPoly_s
srfPoly_t	src/renderergl2/tr_local.h	/^} srfPoly_t;$/;"	t	typeref:struct:srfPoly_s
srfSurfaceFace_t	src/renderergl1/tr_local.h	/^} srfSurfaceFace_t;$/;"	t	typeref:struct:__anon152
srfTriangles_t	src/renderergl1/tr_local.h	/^} srfTriangles_t;$/;"	t	typeref:struct:__anon153
srfVaoMdvMesh_s	src/renderergl2/tr_local.h	/^typedef struct srfVaoMdvMesh_s$/;"	s
srfVaoMdvMesh_t	src/renderergl2/tr_local.h	/^} srfVaoMdvMesh_t;$/;"	t	typeref:struct:srfVaoMdvMesh_s
srfVert_t	src/renderergl2/tr_local.h	/^} srfVert_t;$/;"	t	typeref:struct:__anon45
srfVert_t_cleared	src/renderergl2/tr_local.h	906;"	d
srfVert_t_cleared	src/renderergl2/tr_local.h	908;"	d
ss	src/qcommon/vm_powerpc.c	/^		signed short ss[2];$/;"	m	union:source_instruction_s::__anon453	file:
ss	src/qcommon/vm_sparc.c	/^		signed short	ss[2];$/;"	m	union:src_insn::__anon484	file:
ssaoShader	src/renderergl2/tr_local.h	/^	shaderProgram_t ssaoShader;$/;"	m	struct:__anon63
sscanf	src/game/bg_lib.c	/^int sscanf( const char *buffer, const char *fmt, ... )$/;"	f
ssemask	src/asm/snapvector.c	/^static unsigned char ssemask[16] __attribute__((aligned(16))) =$/;"	v	file:
st	src/qcommon/qfiles.h	/^	float		st[2];$/;"	m	struct:__anon391
st	src/qcommon/qfiles.h	/^	float		st[2];$/;"	m	struct:__anon415
st	src/renderercommon/tr_types.h	/^	float		st[2];$/;"	m	struct:__anon112
st	src/renderergl2/tr_local.h	/^	float           st[2];$/;"	m	struct:__anon54
st	src/renderergl2/tr_local.h	/^	mdvSt_t        *st;$/;"	m	struct:mdvSurface_s
st	src/renderergl2/tr_local.h	/^	vec2_t          st;$/;"	m	struct:__anon45
stabIR	src/tools/lcc/src/main.c	/^static Interface stabIR;$/;"	v	file:
stabblock	src/tools/lcc/src/c.h	/^void (*stabblock)(int, int, Symbol*);$/;"	m	struct:interface
stabblock	src/tools/lcc/src/null.c	/^static void I(stabblock)(int brace, int lev, Symbol *p) {}$/;"	f	file:
stabblock	src/tools/lcc/src/symbolic.c	/^static void I(stabblock)(int brace, int lev, Symbol *p) {}$/;"	f	file:
stabend	src/tools/lcc/src/c.h	/^void (*stabend)  (Coordinate *, Symbol, Coordinate **, Symbol *, Symbol *);$/;"	m	struct:interface
stabend	src/tools/lcc/src/main.c	/^static void stabend(Coordinate *cp, Symbol p, Coordinate **cpp, Symbol *sp, Symbol *stab) {$/;"	f	file:
stabend	src/tools/lcc/src/null.c	/^static void I(stabend)(Coordinate *cp, Symbol p, Coordinate **cpp, Symbol *sp, Symbol *stab) {}$/;"	f	file:
stabend	src/tools/lcc/src/symbolic.c	/^static void I(stabend)(Coordinate *cp, Symbol p, Coordinate **cpp, Symbol *sp, Symbol *stab) {$/;"	f	file:
stabfend	src/tools/lcc/src/c.h	/^void (*stabfend) (Symbol, int);$/;"	m	struct:interface
stabfend	src/tools/lcc/src/null.c	/^static void I(stabfend)(Symbol p, int lineno) {}$/;"	f	file:
stabfend	src/tools/lcc/src/symbolic.c	/^static void I(stabfend)(Symbol p, int lineno) {}$/;"	f	file:
stabinit	src/tools/lcc/src/c.h	/^void (*stabinit) (char *, int, char *[]);$/;"	m	struct:interface
stabinit	src/tools/lcc/src/null.c	/^static void I(stabinit)(char *file, int argc, char *argv[]) {}$/;"	f	file:
stabinit	src/tools/lcc/src/symbolic.c	/^static void I(stabinit)(char *file, int argc, char *argv[]) {}$/;"	f	file:
stabline	src/tools/lcc/src/bytecode.c	/^static void I(stabline)(Coordinate *cp) {$/;"	f	file:
stabline	src/tools/lcc/src/c.h	/^void (*stabline) (Coordinate *);$/;"	m	struct:interface
stabline	src/tools/lcc/src/main.c	/^static void stabline(Coordinate *cp) {$/;"	f	file:
stabline	src/tools/lcc/src/null.c	/^static void I(stabline)(Coordinate *cp) {}$/;"	f	file:
stabline	src/tools/lcc/src/symbolic.c	/^static void I(stabline)(Coordinate *cp) {$/;"	f	file:
stabsym	src/tools/lcc/src/c.h	/^void (*stabsym)  (Symbol);$/;"	m	struct:interface
stabsym	src/tools/lcc/src/null.c	/^static void I(stabsym)(Symbol p) {}$/;"	f	file:
stabsym	src/tools/lcc/src/symbolic.c	/^static void I(stabsym)(Symbol p) {}$/;"	f	file:
stabtype	src/tools/lcc/src/c.h	/^void (*stabtype) (Symbol);$/;"	m	struct:interface
stabtype	src/tools/lcc/src/null.c	/^static void I(stabtype)(Symbol p) {}$/;"	f	file:
stabtype	src/tools/lcc/src/symbolic.c	/^static void I(stabtype)(Symbol p) {}$/;"	f	file:
stackBase	src/tools/asm/q3asm.c	/^	int		stackBase;$/;"	m	struct:__anon265	file:
stackBottom	src/qcommon/vm_local.h	/^	int			stackBottom;		\/\/ if programStack < stackBottom, error$/;"	m	struct:vm_s
stackSize	src/tools/asm/q3asm.c	/^	int		stackSize;$/;"	m	struct:__anon265	file:
stackSize	src/tools/asm/q3asm.c	/^int		stackSize = 0x10000;$/;"	v
stack_space	src/qcommon/vm_sparc.c	/^	int			stack_space;$/;"	m	struct:func_info	file:
stackable	src/game/bg_public.h	/^  qboolean      stackable;$/;"	m	struct:__anon353
stackable	src/game/bg_public.h	/^  qboolean  stackable;$/;"	m	struct:__anon349
stageStage	src/game/g_local.h	/^  stage_t           stageStage;$/;"	m	struct:gentity_s
stageTeam	src/game/g_local.h	/^  team_t            stageTeam;$/;"	m	struct:gentity_s
stageType_t	src/renderergl2/tr_local.h	/^} stageType_t;$/;"	t	typeref:enum:__anon25
stageVars	src/renderergl1/tr_local.h	/^typedef struct stageVars$/;"	s
stageVars	src/renderergl2/tr_local.h	/^typedef struct stageVars$/;"	s
stageVars_t	src/renderergl1/tr_local.h	/^} stageVars_t;$/;"	t	typeref:struct:stageVars
stageVars_t	src/renderergl2/tr_local.h	/^} stageVars_t;$/;"	t	typeref:struct:stageVars
stage_t	src/game/bg_public.h	/^} stage_t;$/;"	t	typeref:enum:__anon351
stages	src/game/bg_public.h	/^  int           stages;$/;"	m	struct:__anon353
stages	src/game/bg_public.h	/^  int       stages;$/;"	m	struct:__anon349
stages	src/game/bg_public.h	/^  int       stages;$/;"	m	struct:__anon355
stages	src/game/bg_public.h	/^  int       stages;$/;"	m	struct:__anon356
stages	src/renderergl1/tr_local.h	/^	shaderStage_t	*stages[MAX_SHADER_STAGES];		$/;"	m	struct:shader_s
stages	src/renderergl1/tr_shader.c	/^static	shaderStage_t	stages[MAX_SHADER_STAGES];		$/;"	v	file:
stages	src/renderergl2/tr_local.h	/^	shaderStage_t	*stages[MAX_SHADER_STAGES];		$/;"	m	struct:shader_s
stages	src/renderergl2/tr_shader.c	/^static	shaderStage_t	stages[MAX_SHADER_STAGES];		$/;"	v	file:
star_oh	src/server/sqlite3.c	/^static int star_oh(const char *z){$/;"	f	file:
start	src/client/client.h	/^	int			start;$/;"	m	struct:__anon88
start	src/qcommon/cm_local.h	/^	vec3_t			start;$/;"	m	struct:__anon443
start	src/server/sv_world.c	/^	const float	*start;$/;"	m	struct:__anon182	file:
start	src/tools/lcc/lburg/lburg.c	/^static Nonterm start = 0;$/;"	v	file:
start	src/ui/ui_local.h	/^  int    start;$/;"	m	struct:__anon508
startBackgroundTrack	src/ui/ui_shared.h	/^  void ( *startBackgroundTrack )( const char *intro, const char *loop );$/;"	m	struct:__anon506
startEndFlag	src/server/sqlite3.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startLocalSound	src/ui/ui_shared.h	/^  void ( *startLocalSound )( sfxHandle_t sfx, int channelNum );$/;"	m	struct:__anon506
startLoopingSound	src/client/snd_openal.c	/^	qboolean				startLoopingSound;$/;"	m	struct:sentity_s	file:
startPos	src/ui/ui_shared.h	/^  int startPos;$/;"	m	struct:listBoxDef_s
startRadius	src/qcommon/cm_local.h	/^	float		startRadius;$/;"	m	struct:__anon441
startSample	src/client/snd_local.h	/^	int			startSample;	\/\/ START_SAMPLE_IMMEDIATE = set immediately on next mix$/;"	m	struct:__anon94
startTime	src/client/cl_cin.c	/^	unsigned int		startTime;$/;"	m	struct:__anon100	file:
startTime	src/client/cl_main.c	/^	int time, startTime;$/;"	m	struct:serverStatus_s	file:
startTime	src/game/g_local.h	/^  int               startTime;                    \/\/ level.time the map was started$/;"	m	struct:__anon316
startTime	src/server/sqlite3.c	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe	file:
startTime	src/ui/ui_local.h	/^  int      startTime;$/;"	m	struct:__anon509
startTime	src/ui/ui_main.c	/^int startTime;$/;"	v
startWeapon	src/game/bg_public.h	/^  weapon_t  startWeapon;$/;"	m	struct:__anon349
start_emit	src/qcommon/vm_sparc.c	/^static void start_emit(struct func_info * const fp, int i_count)$/;"	f	file:
startsolid	src/qcommon/q_shared.h	/^	qboolean	startsolid;	\/\/ if true, the initial point was in a solid area$/;"	m	struct:__anon470
stat4Destructor	src/server/sqlite3.c	/^static void stat4Destructor(void *pOld){$/;"	f	file:
stat4ValueFromExpr	src/server/sqlite3.c	/^static int stat4ValueFromExpr($/;"	f	file:
statBestIndex	src/server/sqlite3.c	/^static int statBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
statClearPage	src/server/sqlite3.c	/^static void statClearPage(StatPage *p){$/;"	f	file:
statClose	src/server/sqlite3.c	/^static int statClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statColumn	src/server/sqlite3.c	/^static int statColumn($/;"	f	file:
statConnect	src/server/sqlite3.c	/^static int statConnect($/;"	f	file:
statDecodePage	src/server/sqlite3.c	/^static int statDecodePage(Btree *pBt, StatPage *p){$/;"	f	file:
statDisconnect	src/server/sqlite3.c	/^static int statDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
statEof	src/server/sqlite3.c	/^static int statEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statFilter	src/server/sqlite3.c	/^static int statFilter($/;"	f	file:
statGet	src/server/sqlite3.c	/^static void statGet($/;"	f	file:
statGetFuncdef	src/server/sqlite3.c	/^static const FuncDef statGetFuncdef = {$/;"	v	file:
statIndex_t	src/game/bg_public.h	/^} statIndex_t;$/;"	t	typeref:enum:__anon331
statInit	src/server/sqlite3.c	/^static void statInit($/;"	f	file:
statInitFuncdef	src/server/sqlite3.c	/^static const FuncDef statInitFuncdef = {$/;"	v	file:
statMutex	src/server/sqlite3.c	/^static const char statMutex[] = {$/;"	v	file:
statNext	src/server/sqlite3.c	/^static int statNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statOpen	src/server/sqlite3.c	/^static int statOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
statPush	src/server/sqlite3.c	/^static void statPush($/;"	f	file:
statPushFuncdef	src/server/sqlite3.c	/^static const FuncDef statPushFuncdef = {$/;"	v	file:
statResetCsr	src/server/sqlite3.c	/^static void statResetCsr(StatCursor *pCsr){$/;"	f	file:
statRowid	src/server/sqlite3.c	/^static int statRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
statSizeAndOffset	src/server/sqlite3.c	/^static void statSizeAndOffset(StatCursor *pCsr){$/;"	f	file:
state	src/client/client.h	/^	connstate_t	state;				\/\/ connection status$/;"	m	struct:__anon87
state	src/qcommon/puff.c	/^struct state {$/;"	s	file:
state	src/server/server.h	/^	clientState_t	state;$/;"	m	struct:client_s
state	src/server/server.h	/^	serverState_t	state;$/;"	m	struct:__anon184
state	src/tools/lcc/cpp/lex.c	/^	int	state;		\/* if in this state *\/$/;"	m	struct:fsm	file:
state	src/tools/lcc/cpp/lex.c	/^enum state {$/;"	g	file:
state	src/tools/lcc/src/config.h	/^	void *state;$/;"	m	struct:__anon274
stateBits	src/renderergl1/tr_local.h	/^	unsigned		stateBits;					\/\/ GLS_xxxx mask$/;"	m	struct:__anon142
stateBits	src/renderergl2/tr_local.h	/^	unsigned		stateBits;					\/\/ GLS_xxxx mask$/;"	m	struct:__anon26
stateHead	src/cgame/cg_local.h	/^  int           stateHead, stateTail;$/;"	m	struct:__anon249
stateTail	src/cgame/cg_local.h	/^  int           stateHead, stateTail;$/;"	m	struct:__anon249
statement	src/tools/lcc/src/stmt.c	/^void statement(int loop, Swtch swp, int lev) {$/;"	f
stateno	src/server/sqlite3.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	src/server/sqlite3.c	/^  fts5YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:fts5yyStackEntry	file:
staticValid	src/cgame/cg_local.h	/^  qboolean          staticValid;$/;"	m	struct:attachment_s
stats	src/cgame/cg_local.h	/^	int			stats[MAX_STATS];$/;"	m	struct:__anon256
stats	src/client/client.h	/^	int			stats[MAX_STATS];$/;"	m	struct:alternatePlayerState_s
stats	src/qcommon/msg.c	/^	int			stats[MAX_STATS];$/;"	m	struct:alternatePlayerState_s	file:
stats	src/qcommon/q_shared.h	/^	int			stats[MAX_STATS];$/;"	m	struct:playerState_s
status	src/cgame/cg_local.h	/^  qboolean  status;        \/\/flare is visble?$/;"	m	struct:lightFlareStatus_s
status	src/client/cl_cin.c	/^	e_status			status;$/;"	m	struct:__anon100	file:
status	src/server/sqlite3.c	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
status64	src/server/sqlite3.c	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines	file:
stdinIsATTY	src/sys/sys_unix.c	/^qboolean stdinIsATTY;$/;"	v
stdin_active	src/sys/con_tty.c	/^static qboolean stdin_active;$/;"	v	file:
stem	src/server/sqlite3.c	/^static int stem($/;"	f	file:
stencilBits	src/renderercommon/tr_types.h	/^	int						colorBits, depthBits, stencilBits;$/;"	m	struct:__anon120
stencilBuffer	src/renderergl2/tr_fbo.h	/^	uint32_t        stencilBuffer;$/;"	m	struct:FBO_s
stencilFormat	src/renderergl2/tr_fbo.h	/^	int             stencilFormat;$/;"	m	struct:FBO_s
step	src/server/sqlite3.c	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stepChange	src/cgame/cg_local.h	/^  float         stepChange;                         \/\/ for stair up smoothing$/;"	m	struct:__anon249
stepTime	src/cgame/cg_local.h	/^  int           stepTime;$/;"	m	struct:__anon249
step_list	src/server/sqlite3.c	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger	file:
stepsizeTable	src/client/snd_adpcm.c	/^static int stepsizeTable[89] = {$/;"	v	file:
steptime	src/game/bg_public.h	/^  int       steptime;$/;"	m	struct:__anon349
stereoEnabled	src/renderercommon/tr_types.h	/^	qboolean				stereoEnabled;$/;"	m	struct:__anon120
stereoFrame	src/renderergl1/tr_local.h	/^	stereoFrame_t	stereoFrame;$/;"	m	struct:__anon147
stereoFrame	src/renderergl1/tr_local.h	/^	stereoFrame_t	stereoFrame;$/;"	m	struct:__anon150
stereoFrame	src/renderergl2/tr_local.h	/^	stereoFrame_t	stereoFrame;$/;"	m	struct:__anon39
stereoFrame	src/renderergl2/tr_local.h	/^	stereoFrame_t	stereoFrame;$/;"	m	struct:__anon43
stereoFrame_t	src/renderercommon/tr_types.h	/^} stereoFrame_t;$/;"	t	typeref:enum:__anon116
stick	src/sdl/sdl_input.c	/^static SDL_Joystick *stick = NULL;$/;"	v	file:
stick_state	src/sdl/sdl_input.c	/^} stick_state;$/;"	v	typeref:struct:__anon379
stickySpec	src/game/g_local.h	/^  qboolean            stickySpec;         \/\/ don't stop spectating a player after they get killed$/;"	m	struct:__anon311
stmt	src/server/sv_sqlite.h	/^  sqlite3_stmt **stmt;$/;"	m	struct:__anon191
stmt_busy	src/server/sqlite3.c	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stmt_readonly	src/server/sqlite3.c	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stmt_status	src/server/sqlite3.c	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
stmtlabel	src/tools/lcc/src/stmt.c	/^static void stmtlabel(void) {$/;"	f	file:
stmtlabs	src/tools/lcc/src/stmt.c	/^Table stmtlabs;$/;"	v
stopBackgroundTrack	src/ui/ui_shared.h	/^  void ( *stopBackgroundTrack )( void );$/;"	m	struct:__anon506
stopCinematic	src/ui/ui_shared.h	/^  void ( *stopCinematic )( int handle );$/;"	m	struct:__anon506
stopSpeed	src/game/bg_public.h	/^  float     stopSpeed;$/;"	m	struct:__anon349
storeLastErrno	src/server/sqlite3.c	/^static void storeLastErrno(unixFile *pFile, int error){$/;"	f	file:
storeLeafs	src/qcommon/cm_local.h	/^	void	(*storeLeafs)( struct leafList_s *ll, int nodenum );$/;"	m	struct:leafList_s
stored	src/qcommon/puff.c	/^local int32_t stored(struct state *s)$/;"	f
storedGlState	src/renderergl2/tr_local.h	/^	uint32_t    storedGlState;$/;"	m	struct:__anon57
str	src/game/g_admin.h	/^  char str[ 44 ];$/;"	m	struct:__anon376
str	src/server/sqlite3.c	/^  StrAccum str;      \/* The string being accumulated *\/$/;"	m	struct:Explain	file:
str	src/tools/lcc/etc/lcc.c	/^	char *str;		\/* option or file name *\/$/;"	m	struct:list	file:
str	src/tools/lcc/src/string.c	/^	char *str;$/;"	m	struct:string	file:
str	src/ui/ui_shared.c	/^  const char *str;$/;"	m	struct:stringDef_s	file:
strDef	src/ui/ui_shared.h	/^  qboolean strDef;$/;"	m	struct:multiDef_s
strHandle	src/ui/ui_shared.c	/^static stringDef_t *strHandle[HASH_TABLE_SIZE];$/;"	v	file:
strHandleCount	src/ui/ui_shared.c	/^static int strHandleCount = 0;$/;"	v	file:
strHash	src/server/sqlite3.c	/^static unsigned int strHash(const char *z){$/;"	f	file:
strPool	src/ui/ui_shared.c	/^static char strPool[STRING_POOL_SIZE];$/;"	v	file:
strPoolIndex	src/ui/ui_shared.c	/^static int strPoolIndex = 0;$/;"	v	file:
strcat	src/game/bg_lib.c	/^char *strcat( char *strDestination, const char *strSource )$/;"	f
strchr	src/game/bg_lib.c	/^char *strchr( const char *string, int c )$/;"	f
strcmp	src/game/bg_lib.c	/^int strcmp( const char *string1, const char *string2 )$/;"	f
strcpy	src/game/bg_lib.c	/^char *strcpy( char *strDestination, const char *strSource )$/;"	f
streamBufIndex	src/client/snd_openal.c	/^static int streamBufIndex[MAX_RAW_STREAMS];$/;"	v	file:
streamBuffers	src/client/snd_openal.c	/^static ALuint streamBuffers[MAX_RAW_STREAMS][MAX_STREAM_BUFFERS];$/;"	v	file:
streamNumBuffers	src/client/snd_openal.c	/^static int streamNumBuffers[MAX_RAW_STREAMS];$/;"	v	file:
streamPlaying	src/client/snd_openal.c	/^static qboolean streamPlaying[MAX_RAW_STREAMS];$/;"	v	file:
streamSourceHandles	src/client/snd_openal.c	/^static srcHandle_t streamSourceHandles[MAX_RAW_STREAMS];$/;"	v	file:
streamSources	src/client/snd_openal.c	/^static ALuint streamSources[MAX_RAW_STREAMS];$/;"	v	file:
streamed	src/qcommon/files.c	/^	qboolean	streamed;$/;"	m	struct:__anon455	file:
stretchPicCommand_t	src/renderergl1/tr_local.h	/^} stretchPicCommand_t;$/;"	t	typeref:struct:__anon170
stretchPicCommand_t	src/renderergl2/tr_local.h	/^} stretchPicCommand_t;$/;"	t	typeref:struct:__anon70
strftimeFunc	src/server/sqlite3.c	/^static void strftimeFunc($/;"	f	file:
strglob	src/server/sqlite3.c	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
strgtr	src/sys/sys_win32.c	/^static qboolean strgtr(const char *s0, const char *s1)$/;"	f	file:
stricmp	src/server/sqlite3.c	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
stride	src/renderergl2/tr_local.h	/^	uint32_t stride;$/;"	m	struct:vaoAttrib_s
string	src/client/cl_main.c	/^	char string[BIG_INFO_STRING];$/;"	m	struct:serverStatus_s	file:
string	src/qcommon/parse.c	/^  char string[MAX_TOKEN_CHARS]; \/\/available token$/;"	m	struct:token_s	file:
string	src/qcommon/q_shared.h	/^	char			*string;$/;"	m	struct:cvar_s
string	src/qcommon/q_shared.h	/^	char		string[MAX_CVAR_VALUE_STRING];$/;"	m	struct:__anon468
string	src/qcommon/q_shared.h	/^	char string[MAX_TOKENLENGTH];$/;"	m	struct:pc_token_s
string	src/tools/lcc/lburg/gram.c	/^	char *string;$/;"	m	union:YYSTYPE	file:
string	src/tools/lcc/src/string.c	/^char *string(const char *str) {$/;"	f
string	src/tools/lcc/src/string.c	/^static struct string {$/;"	s	file:
stringData	src/qcommon/q_shared.h	/^	char		stringData[MAX_GAMESTATE_CHARS];$/;"	m	struct:__anon474
stringDef_s	src/ui/ui_shared.c	/^typedef struct stringDef_s$/;"	s	file:
stringDef_t	src/ui/ui_shared.c	/^stringDef_t;$/;"	t	typeref:struct:stringDef_s	file:
stringFormat	src/sdl/sdl_snd.c	/^	char		*stringFormat;$/;"	m	struct:__anon381	file:
stringOffsets	src/qcommon/q_shared.h	/^	int			stringOffsets[MAX_CONFIGSTRINGS];$/;"	m	struct:__anon474
stringd	src/tools/lcc/src/string.c	/^char *stringd(long n) {$/;"	f
stringf	src/tools/lcc/etc/lcc.c	/^char *stringf(const char *fmt, ...) {$/;"	f
stringf	src/tools/lcc/lburg/lburg.c	/^static char *stringf(char *fmt, ...) {$/;"	f	file:
stringf	src/tools/lcc/src/output.c	/^char *stringf(const char *fmt, ...) {$/;"	f
stringify	src/tools/lcc/cpp/macro.c	/^stringify(Tokenrow *vp)$/;"	f
stringn	src/tools/lcc/src/string.c	/^char *stringn(const char *str, int len) {$/;"	f
stristr	src/ui/ui_main.c	/^static char *stristr( char *str, char *charset )$/;"	f	file:
strlen	src/game/bg_lib.c	/^size_t strlen( const char *string )$/;"	f
strlike	src/server/sqlite3.c	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines	file:
strlower	src/tools/asm/cmdlib.c	/^char *strlower (char *start)$/;"	f
strnicmp	src/server/sqlite3.c	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
strrchr	src/game/bg_lib.c	/^char *strrchr( const char *string, int c )$/;"	f
strsave	src/tools/lcc/etc/lcc.c	/^char *strsave(const char *str) {$/;"	f
strstr	src/game/bg_lib.c	/^char *strstr( const char *string, const char *strCharSet )$/;"	f
strtod	src/game/bg_lib.c	/^double strtod( const char *nptr, char **endptr )$/;"	f
strtol	src/game/bg_lib.c	/^long strtol( const char *nptr, char **endptr, int base )$/;"	f
structarg	src/tools/lcc/src/c.h	/^	unsigned structarg:1;$/;"	m	struct:symbol
structdcl	src/tools/lcc/src/decl.c	/^static Type structdcl(int op) {$/;"	f	file:
structmetric	src/tools/lcc/src/c.h	/^	Metrics structmetric;$/;"	m	struct:interface
strupr	src/tools/asm/cmdlib.c	/^char *strupr (char *start)$/;"	f
style	src/ui/ui_shared.h	/^  int style;                      \/\/$/;"	m	struct:__anon499
subImageCommand_t	src/renderergl1/tr_local.h	/^} subImageCommand_t;$/;"	t	typeref:struct:__anon167
subImageCommand_t	src/renderergl2/tr_local.h	/^} subImageCommand_t;$/;"	t	typeref:struct:__anon67
subd	src/tools/lcc/src/simp.c	/^static int subd(double x, double y, double min, double max, int needconst) {$/;"	f	file:
subi	src/tools/lcc/src/simp.c	/^static int subi(long x, long y, long min, long max, int needconst) {$/;"	f	file:
subjInMemory	src/server/sqlite3.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjRequiresPage	src/server/sqlite3.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	src/server/sqlite3.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
subjournalPageIfRequired	src/server/sqlite3.c	/^static int subjournalPageIfRequired(PgHdr *pPg){$/;"	f	file:
sublimeMarkedBuildables	src/cgame/cg_local.h	/^  qboolean      sublimeMarkedBuildables;  \/\/ make marked buildables non-solid$/;"	m	struct:__anon253
submission_chunk	src/client/snd_local.h	/^	int			submission_chunk;		\/\/ don't mix less than this #$/;"	m	struct:__anon93
substExpr	src/server/sqlite3.c	/^static Expr *substExpr($/;"	f	file:
substExprList	src/server/sqlite3.c	/^static void substExprList($/;"	f	file:
substSelect	src/server/sqlite3.c	/^static void substSelect($/;"	f	file:
substargs	src/tools/lcc/cpp/macro.c	/^substargs(Nlist *np, Tokenrow *rtr, Tokenrow **atr)$/;"	f
substrFunc	src/server/sqlite3.c	/^static void substrFunc($/;"	f	file:
subtree	src/tools/lcc/src/enode.c	/^static Tree subtree(int op, Tree l, Tree r) {$/;"	f	file:
subtype	src/qcommon/parse.c	/^  int subtype;                  \/\/last read token sub type$/;"	m	struct:token_s	file:
subtype	src/qcommon/q_shared.h	/^	int subtype;$/;"	m	struct:pc_token_s
suddenDeathBeginTime	src/game/g_local.h	/^  int               suddenDeathBeginTime;$/;"	m	struct:__anon316
suddenDeathWarning	src/game/g_local.h	/^  timeWarning_t     suddenDeathWarning;$/;"	m	struct:__anon316
suffix	src/tools/lcc/etc/lcc.c	/^int suffix(char *name, char *tails[], int n) {$/;"	f
suffixes	src/tools/lcc/etc/bytecode.c	/^char *suffixes[] = { ".c", ".i", ".asm", ".o", ".out", 0 };$/;"	v
suicideTime	src/game/g_local.h	/^  int               suicideTime;                    \/\/ when the client will suicide$/;"	m	struct:gentity_s
sumFinalize	src/server/sqlite3.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumStep	src/server/sqlite3.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
sunAmbCol	src/renderergl2/tr_extratypes.h	/^	float           sunAmbCol[3];$/;"	m	struct:__anon6
sunAmbCol	src/renderergl2/tr_local.h	/^	float       sunAmbCol[4];$/;"	m	struct:__anon39
sunCol	src/renderergl2/tr_extratypes.h	/^	float           sunCol[3];$/;"	m	struct:__anon6
sunCol	src/renderergl2/tr_local.h	/^	float       sunCol[4];$/;"	m	struct:__anon39
sunDir	src/renderergl2/tr_extratypes.h	/^	float           sunDir[3];$/;"	m	struct:__anon6
sunDir	src/renderergl2/tr_local.h	/^	float       sunDir[4];$/;"	m	struct:__anon39
sunDirection	src/renderergl1/tr_local.h	/^	vec3_t					sunDirection;$/;"	m	struct:__anon163
sunDirection	src/renderergl2/tr_local.h	/^	vec3_t					sunDirection;$/;"	m	struct:__anon63
sunFlareQuery	src/renderergl2/tr_local.h	/^	GLuint					sunFlareQuery[2];$/;"	m	struct:__anon63
sunFlareQueryActive	src/renderergl2/tr_local.h	/^	qboolean				sunFlareQueryActive[2];$/;"	m	struct:__anon63
sunFlareQueryIndex	src/renderergl2/tr_local.h	/^	int						sunFlareQueryIndex;$/;"	m	struct:__anon63
sunFlareShader	src/renderergl2/tr_local.h	/^	shader_t				*sunFlareShader;$/;"	m	struct:__anon63
sunLight	src/renderergl1/tr_local.h	/^	vec3_t					sunLight;			\/\/ from the sky shader for this level$/;"	m	struct:__anon163
sunLight	src/renderergl2/tr_local.h	/^	vec3_t					sunLight;			\/\/ from the sky shader for this level$/;"	m	struct:__anon63
sunRaysFbo	src/renderergl2/tr_local.h	/^	FBO_t					*sunRaysFbo;$/;"	m	struct:__anon63
sunRaysImage	src/renderergl2/tr_local.h	/^	image_t					*sunRaysImage;$/;"	m	struct:__anon63
sunShader	src/renderergl1/tr_local.h	/^	shader_t				*sunShader;$/;"	m	struct:__anon163
sunShader	src/renderergl2/tr_local.h	/^	shader_t				*sunShader;$/;"	m	struct:__anon63
sunShadowDepthImage	src/renderergl2/tr_local.h	/^	image_t					*sunShadowDepthImage[4];$/;"	m	struct:__anon63
sunShadowFbo	src/renderergl2/tr_local.h	/^	FBO_t					*sunShadowFbo[4];$/;"	m	struct:__anon63
sunShadowMvp	src/renderergl2/tr_local.h	/^	float       sunShadowMvp[4][16];$/;"	m	struct:__anon39
sunShadowScale	src/renderergl2/tr_local.h	/^	float                   sunShadowScale;$/;"	m	struct:__anon63
sunShadows	src/renderergl2/tr_local.h	/^	qboolean                sunShadows;$/;"	m	struct:__anon63
super	src/tools/lcc/src/expr.c	/^static Type super(Type ty) {$/;"	f	file:
suppressErr	src/server/sqlite3.c	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3	file:
surface	src/renderergl1/tr_flares.c	/^	void		*surface;$/;"	m	struct:flare_s	file:
surface	src/renderergl1/tr_local.h	/^	float		surface[4];$/;"	m	struct:__anon149
surface	src/renderergl1/tr_local.h	/^	surfaceType_t		*surface;		\/\/ any of surface*_t$/;"	m	struct:drawSurf_s
surface	src/renderergl2/tr_flares.c	/^	void		*surface;$/;"	m	struct:flare_s	file:
surface	src/renderergl2/tr_local.h	/^	float		surface[4];$/;"	m	struct:__anon41
surface	src/renderergl2/tr_local.h	/^	surfaceType_t		*surface;		\/\/ any of surface*_t$/;"	m	struct:drawSurf_s
surfaceFlags	src/qcommon/cm_local.h	/^	int						surfaceFlags;$/;"	m	struct:__anon436
surfaceFlags	src/qcommon/cm_local.h	/^	int			surfaceFlags;$/;"	m	struct:__anon438
surfaceFlags	src/qcommon/q_shared.h	/^	int			surfaceFlags;	\/\/ surface hit$/;"	m	struct:__anon470
surfaceFlags	src/qcommon/qfiles.h	/^	int			surfaceFlags;$/;"	m	struct:__anon408
surfaceFlags	src/renderergl1/tr_local.h	/^	int			surfaceFlags;			\/\/ if explicitlyDefined, this will have SURF_* flags$/;"	m	struct:shader_s
surfaceFlags	src/renderergl1/tr_shader.c	/^	int		clearSolid, surfaceFlags, contents;$/;"	m	struct:__anon126	file:
surfaceFlags	src/renderergl2/tr_local.h	/^	int			surfaceFlags;			\/\/ if explicitlyDefined, this will have SURF_* flags$/;"	m	struct:shader_s
surfaceFlags	src/renderergl2/tr_shader.c	/^	int		clearSolid, surfaceFlags, contents;$/;"	m	struct:__anon7	file:
surfacePlane	src/qcommon/cm_patch.h	/^	int			surfacePlane;$/;"	m	struct:__anon487
surfaceType	src/qcommon/qfiles.h	/^	int			surfaceType;$/;"	m	struct:__anon417
surfaceType	src/renderergl1/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:__anon152
surfaceType	src/renderergl1/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:__anon153
surfaceType	src/renderergl1/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfFlare_s
surfaceType	src/renderergl1/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfGridMesh_s
surfaceType	src/renderergl1/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfIQModel_s
surfaceType	src/renderergl1/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfPoly_s
surfaceType	src/renderergl2/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfFlare_s
surfaceType	src/renderergl2/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfIQModel_s
surfaceType	src/renderergl2/tr_local.h	/^	surfaceType_t	surfaceType;$/;"	m	struct:srfPoly_s
surfaceType	src/renderergl2/tr_local.h	/^	surfaceType_t   surfaceType;$/;"	m	struct:mdvSurface_s
surfaceType	src/renderergl2/tr_local.h	/^	surfaceType_t   surfaceType;$/;"	m	struct:srfBspSurface_s
surfaceType	src/renderergl2/tr_local.h	/^	surfaceType_t   surfaceType;$/;"	m	struct:srfVaoMdvMesh_s
surfaceType_t	src/renderergl1/tr_local.h	/^} surfaceType_t;$/;"	t	typeref:enum:__anon151
surfaceType_t	src/renderergl2/tr_local.h	/^} surfaceType_t;$/;"	t	typeref:enum:__anon44
surfaces	src/qcommon/cm_local.h	/^	cPatch_t	**surfaces;			\/\/ non-patches will be NULL$/;"	m	struct:__anon440
surfaces	src/renderergl1/tr_local.h	/^	msurface_t	*surfaces;$/;"	m	struct:__anon157
surfaces	src/renderergl1/tr_local.h	/^	skinSurface_t	*surfaces[MD3_MAX_SURFACES];$/;"	m	struct:skin_s
surfaces	src/renderergl1/tr_local.h	/^	struct srfIQModel_s	*surfaces;$/;"	m	struct:__anon154	typeref:struct:__anon154::srfIQModel_s
surfaces	src/renderergl2/tr_local.h	/^	mdvSurface_t   *surfaces;$/;"	m	struct:mdvModel_s
surfaces	src/renderergl2/tr_local.h	/^	msurface_t	*surfaces;$/;"	m	struct:__anon49
surfaces	src/renderergl2/tr_local.h	/^	skinSurface_t	*surfaces[MD3_MAX_SURFACES];$/;"	m	struct:skin_s
surfaces	src/renderergl2/tr_local.h	/^	struct srfIQModel_s	*surfaces;$/;"	m	struct:__anon46	typeref:struct:__anon46::srfIQModel_s
surfacesDlightBits	src/renderergl2/tr_local.h	/^	int         *surfacesDlightBits;$/;"	m	struct:__anon49
surfacesPshadowBits	src/renderergl2/tr_local.h	/^	int			*surfacesPshadowBits;$/;"	m	struct:__anon49
surfacesViewCount	src/renderergl2/tr_local.h	/^	int         *surfacesViewCount;$/;"	m	struct:__anon49
surrenderTeam	src/game/g_local.h	/^  team_t            surrenderTeam;$/;"	m	struct:__anon316
sv	src/server/sv_main.c	/^server_t		sv;					\/\/ local server$/;"	v
svEntities	src/server/server.h	/^	svEntity_t		svEntities[MAX_GENTITIES];$/;"	m	struct:__anon184
svEntity_s	src/server/server.h	/^typedef struct svEntity_s {$/;"	s
svEntity_t	src/server/server.h	/^} svEntity_t;$/;"	t	typeref:struct:svEntity_s
svFlags	src/game/g_public.h	/^  int     svFlags;        \/\/ SVF_NOCLIENT, SVF_BROADCAST, etc.$/;"	m	struct:__anon361
sv_allowDownload	src/client/client.h	/^	int		sv_allowDownload;$/;"	m	struct:__anon87
sv_allowDownload	src/server/sv_main.c	/^cvar_t	*sv_allowDownload;$/;"	v
sv_banFile	src/server/sv_main.c	/^cvar_t	*sv_banFile;$/;"	v
sv_dlRate	src/server/sv_main.c	/^cvar_t	*sv_dlRate;$/;"	v
sv_dlURL	src/client/client.h	/^	char		sv_dlURL[MAX_CVAR_VALUE_STRING];$/;"	m	struct:__anon87
sv_fps	src/server/sv_main.c	/^cvar_t	*sv_fps = NULL;			\/\/ time rate for running non-clients$/;"	v
sv_hostname	src/server/sv_main.c	/^cvar_t	*sv_hostname;$/;"	v
sv_killserver	src/server/sv_main.c	/^cvar_t	*sv_killserver;			\/\/ menu system can set to 1 to shut server down$/;"	v
sv_lanForceRate	src/server/sv_main.c	/^cvar_t	*sv_lanForceRate; \/\/ dedicated 1 (LAN) server forces local client rates to 99999 (bug #491)$/;"	v
sv_mapChecksum	src/server/sv_main.c	/^cvar_t	*sv_mapChecksum;$/;"	v
sv_mapname	src/server/sv_main.c	/^cvar_t	*sv_mapname;$/;"	v
sv_masters	src/server/sv_main.c	/^cvar_t	*sv_masters[3][MAX_MASTER_SERVERS];	\/\/ master server IP addresses$/;"	v
sv_maxPing	src/server/sv_main.c	/^cvar_t	*sv_maxPing;$/;"	v
sv_maxRate	src/server/sv_main.c	/^cvar_t	*sv_maxRate;$/;"	v
sv_maxclients	src/server/sv_main.c	/^cvar_t	*sv_maxclients;$/;"	v
sv_minPing	src/server/sv_main.c	/^cvar_t	*sv_minPing;$/;"	v
sv_minRate	src/server/sv_main.c	/^cvar_t	*sv_minRate;$/;"	v
sv_numworldSectors	src/server/sv_world.c	/^int			sv_numworldSectors;$/;"	v
sv_packetdelay	src/qcommon/common.c	/^cvar_t  *sv_packetdelay;$/;"	v
sv_padPackets	src/server/sv_main.c	/^cvar_t	*sv_padPackets;			\/\/ add nop bytes to messages$/;"	v
sv_paused	src/qcommon/common.c	/^cvar_t	*sv_paused;$/;"	v
sv_privateClients	src/server/sv_main.c	/^cvar_t	*sv_privateClients;		\/\/ number of clients reserved for password$/;"	v
sv_privatePassword	src/server/sv_main.c	/^cvar_t	*sv_privatePassword;		\/\/ password for the privateClient slots$/;"	v
sv_pure	src/server/sv_main.c	/^cvar_t	*sv_pure;$/;"	v
sv_rconPassword	src/server/sv_main.c	/^cvar_t	*sv_rconPassword;		\/\/ password for remote server commands$/;"	v
sv_reconnectlimit	src/server/sv_main.c	/^cvar_t	*sv_reconnectlimit;		\/\/ minimum seconds between connect messages$/;"	v
sv_serverid	src/server/sv_main.c	/^cvar_t	*sv_serverid;$/;"	v
sv_showloss	src/server/sv_main.c	/^cvar_t	*sv_showloss;			\/\/ report when usercmds are lost$/;"	v
sv_timeout	src/server/sv_main.c	/^cvar_t	*sv_timeout;			\/\/ seconds without any message$/;"	v
sv_voip	src/server/sv_main.c	/^cvar_t *sv_voip;$/;"	v
sv_worldSectors	src/server/sv_world.c	/^worldSector_t	sv_worldSectors[AREA_NODES];$/;"	v
sv_zombietime	src/server/sv_main.c	/^cvar_t	*sv_zombietime;			\/\/ seconds to sink messages after disconnect$/;"	v
svc_EOF	src/qcommon/qcommon.h	/^	svc_EOF,$/;"	e	enum:svc_ops_e
svc_bad	src/qcommon/qcommon.h	/^	svc_bad,$/;"	e	enum:svc_ops_e
svc_baseline	src/qcommon/qcommon.h	/^	svc_baseline,				\/\/ only in gamestate messages$/;"	e	enum:svc_ops_e
svc_configstring	src/qcommon/qcommon.h	/^	svc_configstring,			\/\/ [short] [string] only in gamestate messages$/;"	e	enum:svc_ops_e
svc_download	src/qcommon/qcommon.h	/^	svc_download,				\/\/ [short] size [size bytes]$/;"	e	enum:svc_ops_e
svc_gamestate	src/qcommon/qcommon.h	/^	svc_gamestate,$/;"	e	enum:svc_ops_e
svc_nop	src/qcommon/qcommon.h	/^	svc_nop,$/;"	e	enum:svc_ops_e
svc_ops_e	src/qcommon/qcommon.h	/^enum svc_ops_e {$/;"	g
svc_serverCommand	src/qcommon/qcommon.h	/^	svc_serverCommand,			\/\/ [string] to be executed by client game module$/;"	e	enum:svc_ops_e
svc_snapshot	src/qcommon/qcommon.h	/^	svc_snapshot,$/;"	e	enum:svc_ops_e
svc_strings	src/client/cl_parse.c	/^char *svc_strings[256] = {$/;"	v
svc_voip	src/qcommon/qcommon.h	/^	svc_voip,     \/\/ not wrapped in USE_VOIP, so this value is reserved.$/;"	e	enum:svc_ops_e
svcmd	src/game/g_svcmds.c	/^struct svcmd$/;"	s	file:
svcmds	src/game/g_svcmds.c	/^} svcmds[ ] = {$/;"	v	typeref:struct:svcmd
svcommands	src/cgame/cg_servercmds.c	/^static consoleCommand_t svcommands[ ] =$/;"	v	file:
svs	src/server/sv_main.c	/^serverStatic_t	svs;				\/\/ persistant server info$/;"	v
swap	src/game/bg_lib.c	106;"	d	file:
swap	src/qcommon/huffman.c	/^static void swap (huff_t* huff, node_t *node1, node_t *node2) { $/;"	f	file:
swap	src/tools/lcc/src/gen.c	/^int swap;$/;"	v
swapBuffersCommand_t	src/renderergl1/tr_local.h	/^} swapBuffersCommand_t;$/;"	t	typeref:struct:__anon168
swapBuffersCommand_t	src/renderergl2/tr_local.h	/^} swapBuffersCommand_t;$/;"	t	typeref:struct:__anon68
swapMixedEndianFloat	src/server/sqlite3.c	71266;"	d	file:
swapMixedEndianFloat	src/server/sqlite3.c	71268;"	d	file:
swapcode	src/game/bg_lib.c	81;"	d	file:
swapfunc	src/game/bg_lib.c	/^swapfunc(a, b, n, swaptype)$/;"	f	file:
swaplist	src/qcommon/huffman.c	/^static void swaplist(node_t *node1, node_t *node2) {$/;"	f	file:
swcode	src/tools/lcc/src/stmt.c	/^void swcode(Swtch swp, int b[], int lb, int ub) {$/;"	f
swgen	src/tools/lcc/src/stmt.c	/^void swgen(Swtch swp) {$/;"	f
switchLockProxyPath	src/server/sqlite3.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
switchTeamTime	src/game/g_local.h	/^  int                 switchTeamTime;   \/\/ time the player switched teams$/;"	m	struct:gclient_s
swstmt	src/tools/lcc/src/stmt.c	/^static void swstmt(int loop, int lab, int lev) {$/;"	f	file:
swtch	src/tools/lcc/src/c.h	/^		} swtch;$/;"	m	union:code::__anon291	typeref:struct:code::__anon291::__anon295
swtch	src/tools/lcc/src/c.h	/^struct swtch {$/;"	s
swtoseg	src/tools/lcc/src/init.c	/^void swtoseg(int seg) {$/;"	f
sym	src/tools/lcc/lburg/lburg.c	/^	} sym;$/;"	m	struct:entry	typeref:union:entry::__anon270	file:
sym	src/tools/lcc/src/c.h	/^			Symbol sym;$/;"	m	struct:code::__anon291::__anon293
sym	src/tools/lcc/src/c.h	/^			Symbol sym;$/;"	m	struct:code::__anon291::__anon295
sym	src/tools/lcc/src/c.h	/^		Symbol sym;$/;"	m	union:tree::__anon304
sym	src/tools/lcc/src/c.h	/^		Symbol sym;$/;"	m	union:type::__anon306
sym	src/tools/lcc/src/c.h	/^	Symbol sym;$/;"	m	struct:swtch
sym	src/tools/lcc/src/sym.c	/^		struct symbol sym;$/;"	m	struct:table::entry	typeref:struct:table::entry::symbol	file:
symName	src/qcommon/vm_local.h	/^	char	symName[1];		\/\/ variable sized$/;"	m	struct:vmSymbol_s
symValue	src/qcommon/vm_local.h	/^	int		symValue;$/;"	m	struct:vmSymbol_s
symbol	src/qcommon/puff.c	/^    int16_t *symbol;      \/* canonically ordered symbols *\/$/;"	m	struct:huffman	file:
symbol	src/qcommon/qcommon.h	/^	int		symbol;$/;"	m	struct:nodetype
symbol	src/tools/lcc/src/c.h	/^struct symbol {$/;"	s
symbol_s	src/tools/asm/q3asm.c	/^typedef struct symbol_s {$/;"	s	file:
symbol_t	src/tools/asm/q3asm.c	/^} symbol_t;$/;"	t	typeref:struct:symbol_s	file:
symbolic64IR	src/tools/lcc/src/symbolic.c	/^Interface symbolic64IR = {$/;"	v
symbolicIR	src/tools/lcc/src/symbolic.c	/^Interface symbolicIR = {$/;"	v
symbolic_jump	src/qcommon/vm_powerpc.c	/^struct symbolic_jump {$/;"	s	file:
symbolic_jump_t	src/qcommon/vm_powerpc.c	/^typedef struct symbolic_jump symbolic_jump_t;$/;"	t	typeref:struct:symbolic_jump	file:
symbols	src/qcommon/vm_local.h	/^	struct vmSymbol_s	*symbols;$/;"	m	struct:vm_s	typeref:struct:vm_s::vmSymbol_s
symbols	src/tools/asm/q3asm.c	/^symbol_t	*symbols;$/;"	v
symbols	src/tools/lcc/doc/4.html	/^<h2><a NAME="symbols">5.3 Symbols<\/a><\/h2>$/;"	a
symbols	src/tools/lcc/src/sym.c	/^List loci, symbols;$/;"	v
symlist_cmp	src/tools/asm/q3asm.c	/^static int symlist_cmp (const void *e1, const void *e2)$/;"	f	file:
syms	src/tools/lcc/src/c.h	/^ 	Symbol syms[3];$/;"	m	struct:node
symtable	src/tools/asm/q3asm.c	/^hashtable_t *symtable;$/;"	v
symtablelen	src/tools/asm/q3asm.c	/^int symtablelen = DEFAULT_HASHTABLE_SIZE;$/;"	v
syncFlags	src/server/sqlite3.c	/^  int syncFlags;               \/* Flags for the fsync *\/$/;"	m	struct:WalWriter	file:
syncFlags	src/server/sqlite3.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncFlags	src/server/sqlite3.c	/^  u8 syncFlags;              \/* Flags to use to sync header writes *\/$/;"	m	struct:Wal	file:
syncHeader	src/server/sqlite3.c	/^  u8 syncHeader;             \/* Fsync the WAL header if true *\/$/;"	m	struct:Wal	file:
syncJournal	src/server/sqlite3.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
syntax	src/game/g_admin.h	/^  char *syntax;  \/\/ used in \/adminhelp$/;"	m	struct:__anon375
synthCollSeq	src/server/sqlite3.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
sysEventType_t	src/qcommon/qcommon.h	/^} sysEventType_t;$/;"	t	typeref:enum:__anon427
sysEvent_t	src/qcommon/qcommon.h	/^} sysEvent_t;$/;"	t	typeref:struct:__anon428
sys_curtime	src/null/null_main.c	/^int			sys_curtime;$/;"	v
sys_timeBase	src/sys/sys_unix.c	/^unsigned long sys_timeBase = 0;$/;"	v
sys_timeBase	src/sys/sys_win32.c	/^int sys_timeBase;$/;"	v
syscall	src/cgame/cg_syscalls.c	/^static intptr_t (QDECL *syscall)( intptr_t arg, ... ) = (intptr_t (QDECL *)( intptr_t, ...))-1;$/;"	v	file:
syscall	src/game/g_syscalls.c	/^static intptr_t (QDECL *syscall)( intptr_t arg, ... ) = (intptr_t (QDECL *)( intptr_t, ...))-1;$/;"	v	file:
syscall	src/ui/ui_syscalls.c	/^static intptr_t ( QDECL *syscall )( intptr_t arg, ... ) = ( intptr_t ( QDECL * )( intptr_t, ... ) ) - 1;$/;"	v	file:
systemCall	src/qcommon/vm_local.h	/^    intptr_t			(*systemCall)( intptr_t *parms );$/;"	m	struct:vm_s
system_errno	src/server/sqlite3.c	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
sz	src/server/sqlite3.c	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside	file:
szAlloc	src/server/sqlite3.c	/^  int szAlloc;                        \/* Total size of one pcache line *\/$/;"	m	struct:PCache1	file:
szAtom	src/server/sqlite3.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szCache	src/server/sqlite3.c	/^  int szCache;                        \/* Configured cache size *\/$/;"	m	struct:PCache	file:
szCell	src/server/sqlite3.c	/^  u16 *szCell;            \/* Local size of all cells in apCell[] *\/$/;"	m	struct:CellArray	file:
szChunk	src/server/sqlite3.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	src/server/sqlite3.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szCol	src/server/sqlite3.c	/^  int szCol;                      \/* Size of column value in tokens *\/$/;"	m	struct:Fts5InsertCtx	file:
szCol	src/server/sqlite3.c	/^  int szCol;$/;"	m	struct:Fts5IntegrityCtx	file:
szEst	src/server/sqlite3.c	/^  u8 szEst;        \/* Estimated size of value in this column. sizeof(INT)==1 *\/$/;"	m	struct:Column	file:
szExtra	src/server/sqlite3.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szExtra	src/server/sqlite3.c	/^  int szExtra;                        \/* sizeof(MemPage)+sizeof(PgHdr) *\/$/;"	m	struct:PCache1	file:
szFirstBlock	src/server/sqlite3.c	/^  int szFirstBlock;          \/* Size of first block written to WAL file *\/$/;"	m	struct:Wal	file:
szIdxRow	src/server/sqlite3.c	/^  LogEst szIdxRow;         \/* Estimated average row size in bytes *\/$/;"	m	struct:Index	file:
szLeaf	src/server/sqlite3.c	/^  int szLeaf;                     \/* Size of leaf without page-index *\/$/;"	m	struct:Fts5Data	file:
szLookaside	src/server/sqlite3.c	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config	file:
szMalloc	src/server/sqlite3.c	/^  int szMalloc;       \/* Size of the zMalloc allocation *\/$/;"	m	struct:Mem	file:
szMaster	src/server/sqlite3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szMmap	src/server/sqlite3.c	/^  i64 szMmap;                   \/* Default mmap_size setting *\/$/;"	m	struct:sqlite3	file:
szMmap	src/server/sqlite3.c	/^  sqlite3_int64 szMmap;             \/* mmap() space per open file *\/$/;"	m	struct:Sqlite3Config	file:
szMmap	src/server/sqlite3.c	/^  sqlite3_int64 szMmap;       \/* Desired maximum mmap size *\/$/;"	m	struct:Pager	file:
szOpAlloc	src/server/sqlite3.c	/^  int szOpAlloc;       \/* Bytes of memory space allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse	file:
szOsFile	src/server/sqlite3.c	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	file:
szOsFile	src/server/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
szPMA	src/server/sqlite3.c	/^  int szPMA;                      \/* Size of pList as PMA in bytes *\/$/;"	m	struct:SorterList	file:
szPage	src/server/sqlite3.c	/^  int szPage;                         \/* Size of database content section *\/$/;"	m	struct:PCache1	file:
szPage	src/server/sqlite3.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	src/server/sqlite3.c	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
szPage	src/server/sqlite3.c	/^  int szPage;                     \/* Value of 'pgSize' column *\/$/;"	m	struct:StatCursor	file:
szPage	src/server/sqlite3.c	/^  int szPage;                  \/* Size of one page *\/$/;"	m	struct:WalWriter	file:
szPage	src/server/sqlite3.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	src/server/sqlite3.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szPma	src/server/sqlite3.c	/^  u32 szPma;                        \/* Maximum Sorter PMA size *\/$/;"	m	struct:Sqlite3Config	file:
szRegion	src/server/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	src/server/sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szRow	src/server/sqlite3.c	/^  u32 szRow;            \/* Byte available in aRow *\/$/;"	m	struct:VdbeCursor	file:
szScratch	src/server/sqlite3.c	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config	file:
szSlot	src/server/sqlite3.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
szSpill	src/server/sqlite3.c	/^  int szSpill;                        \/* Size before spilling occurs *\/$/;"	m	struct:PCache	file:
szTabRow	src/server/sqlite3.c	/^  LogEst szTabRow;     \/* Estimated size of each table row in bytes *\/$/;"	m	struct:Table	file:
t	src/client/cl_cin.c	/^	long				t[2];$/;"	m	struct:__anon100	file:
t	src/qcommon/q_shared.h	/^  float t;          \/\/ y offset in image where glyph starts$/;"	m	struct:__anon478
t	src/tools/lcc/cpp/cpp.h	/^	uchar	*t;$/;"	m	struct:token
t	src/tools/lcc/lburg/lburg.c	/^		struct term t;$/;"	m	union:entry::__anon270	typeref:struct:entry::__anon270::term	file:
t	src/tools/lcc/src/c.h	/^		} t;$/;"	m	union:symbol::__anon296	typeref:struct:symbol::__anon296::__anon302
t	src/tools/lcc/src/lex.c	/^int t;$/;"	v
t1	src/renderergl1/tr_local.h	/^	float	s1, t1;$/;"	m	struct:__anon170
t1	src/renderergl2/tr_local.h	/^	float	s1, t1;$/;"	m	struct:__anon70
t2	src/qcommon/q_shared.h	/^  float t2;$/;"	m	struct:__anon478
t2	src/renderergl1/tr_local.h	/^	float	s2, t2;$/;"	m	struct:__anon170
t2	src/renderergl2/tr_local.h	/^	float	s2, t2;$/;"	m	struct:__anon70
tRowcnt	src/server/sqlite3.c	/^ typedef u32 tRowcnt;    \/* 32-bit is the default *\/$/;"	t	file:
tRowcnt	src/server/sqlite3.c	/^ typedef u64 tRowcnt;    \/* 64-bit only if requested at compile-time *\/$/;"	t	file:
tabFlags	src/server/sqlite3.c	/^  u8 tabFlags;         \/* Mask of TF_* values *\/$/;"	m	struct:Table	file:
tabTnct	src/server/sqlite3.c	/^  int tabTnct;    \/* Ephemeral table used for DISTINCT processing *\/$/;"	m	struct:DistinctCtx	file:
table	src/server/sqlite3.c	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger	file:
table	src/tools/asm/q3asm.c	/^  hashchain_t **table;$/;"	m	struct:hashtable_s	file:
table	src/tools/lcc/lburg/lburg.c	/^} *table[211];$/;"	v	typeref:struct:entry
table	src/tools/lcc/src/c.h	/^			Symbol table;$/;"	m	struct:code::__anon291::__anon295
table	src/tools/lcc/src/sym.c	/^Table table(Table tp, int level) {$/;"	f
table	src/tools/lcc/src/sym.c	/^struct table {$/;"	s	file:
tableAndColumnIndex	src/server/sqlite3.c	/^static int tableAndColumnIndex($/;"	f	file:
tableOfTrigger	src/server/sqlite3.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
table_column_metadata	src/server/sqlite3.c	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
tag	src/qcommon/common.c	/^	int     tag;            \/\/ a tag of 0 is a free block$/;"	m	struct:memblock_s	file:
tagName	src/cgame/cg_local.h	/^  char              tagName[ MAX_STRING_CHARS ];$/;"	m	struct:attachment_s
tagNames	src/renderergl2/tr_local.h	/^	mdvTagName_t   *tagNames;$/;"	m	struct:mdvModel_s
tagValid	src/cgame/cg_local.h	/^  qboolean          tagValid;$/;"	m	struct:attachment_s
tags	src/renderergl2/tr_local.h	/^	mdvTag_t       *tags;$/;"	m	struct:mdvModel_s
tail	src/game/g_playmap.h	/^  int head, tail, numEntries;$/;"	m	struct:playMapQueue_s
tail	src/tools/lcc/src/dag.c	/^static Node *tail;$/;"	v	file:
tail	src/tools/lcc/src/symbolic.c	/^static Node *tail;$/;"	v	file:
takedamage	src/game/g_local.h	/^  qboolean          takedamage;$/;"	m	struct:gentity_s
talkSound	src/cgame/cg_local.h	/^  sfxHandle_t talkSound;$/;"	m	struct:__anon251
tan	src/game/bg_lib.c	/^double tan( double x )$/;"	f
tangent	src/renderergl2/tr_local.h	/^	vec3_t          tangent;$/;"	m	struct:__anon53
tangent	src/renderergl2/tr_local.h	/^	vec4_t          tangent;$/;"	m	struct:__anon45
tangents	src/renderergl1/tr_local.h	/^	float		*tangents;$/;"	m	struct:__anon154
tangents	src/renderergl2/tr_local.h	/^	float		*tangents;$/;"	m	struct:__anon46
target	src/game/g_local.h	/^  char              *target;$/;"	m	struct:gentity_s
target	src/game/g_maprotation.c	/^  struct node_s       *target;$/;"	m	struct:condition_s	typeref:struct:condition_s::node_s	file:
target	src/tools/lcc/src/config.h	/^	void (*target)(Node);$/;"	m	struct:__anon273
targetFbo	src/renderergl2/tr_local.h	/^	FBO_t		*targetFbo;$/;"	m	struct:__anon43
targetFboCubemapIndex	src/renderergl2/tr_local.h	/^	int         targetFboCubemapIndex;$/;"	m	struct:__anon43
targetFboLayer	src/renderergl2/tr_local.h	/^	int         targetFboLayer;$/;"	m	struct:__anon43
targetLevelsFbo	src/renderergl2/tr_local.h	/^	FBO_t					*targetLevelsFbo;$/;"	m	struct:__anon63
targetLevelsImage	src/renderergl2/tr_local.h	/^	image_t					*targetLevelsImage;$/;"	m	struct:__anon63
targetShaderName	src/game/g_local.h	/^  char              *targetShaderName;$/;"	m	struct:gentity_s
targetShaderNewName	src/game/g_local.h	/^  char              *targetShaderNewName;$/;"	m	struct:gentity_s
targetSrcList	src/server/sqlite3.c	/^static SrcList *targetSrcList($/;"	f	file:
target_alien_win_use	src/game/g_target.c	/^void target_alien_win_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
target_ent	src/game/g_local.h	/^  gentity_t         *target_ent;$/;"	m	struct:gentity_s
target_human_win_use	src/game/g_target.c	/^void target_human_win_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
target_hurt_use	src/game/g_target.c	/^void target_hurt_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
target_kill_use	src/game/g_target.c	/^void target_kill_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
target_relay_use	src/game/g_target.c	/^void target_relay_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
target_rumble_think	src/game/g_target.c	/^void target_rumble_think( gentity_t *self )$/;"	f
target_rumble_use	src/game/g_target.c	/^void target_rumble_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
target_teleporter_use	src/game/g_target.c	/^void target_teleporter_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
targetname	src/game/g_local.h	/^  char              *targetname;$/;"	m	struct:gentity_s
targets	src/game/g_local.h	/^  gentity_t     *targets[ LEVEL2_AREAZAP_MAX_TARGETS ];$/;"	m	struct:zap_s
tauntTimer	src/qcommon/q_shared.h	/^	int			tauntTimer;		\/\/ don't allow another taunt until this runs out$/;"	m	struct:playerState_s
tblHash	src/server/sqlite3.c	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema	file:
tcGen	src/renderergl1/tr_local.h	/^	texCoordGen_t	tcGen;$/;"	m	struct:__anon141
tcGen	src/renderergl2/tr_local.h	/^	texCoordGen_t	tcGen;$/;"	m	struct:__anon23
tcGenVectors	src/renderergl1/tr_local.h	/^	vec3_t			tcGenVectors[2];$/;"	m	struct:__anon141
tcGenVectors	src/renderergl2/tr_local.h	/^	vec3_t			tcGenVectors[2];$/;"	m	struct:__anon23
tcScale	src/renderergl1/tr_local.h	/^	float		tcScale;				\/\/ texture coordinate vector scales$/;"	m	struct:__anon149
tcScale	src/renderergl2/tr_local.h	/^	float		tcScale;				\/\/ texture coordinate vector scales$/;"	m	struct:__anon41
team	src/cgame/cg_local.h	/^  int       team;$/;"	m	struct:__anon242
team	src/cgame/cg_local.h	/^  team_t      team;$/;"	m	struct:__anon243
team	src/game/bg_public.h	/^  int                    team;$/;"	m	struct:voiceTrack_s
team	src/game/bg_public.h	/^  team_t        team;$/;"	m	struct:__anon353
team	src/game/bg_public.h	/^  team_t    team;$/;"	m	struct:__anon355
team	src/game/bg_public.h	/^  team_t    team;$/;"	m	struct:__anon356
team	src/game/g_local.h	/^  char              *team;$/;"	m	struct:gentity_s
team	src/game/g_local.h	/^  team_t            team;$/;"	m	struct:namelog_s
team	src/ui/ui_local.h	/^    team_t      team;$/;"	m	union:__anon515::__anon516
teamAttributes_t	src/game/bg_public.h	/^} teamAttributes_t;$/;"	t	typeref:struct:__anon352
teamChangeTime	src/game/g_local.h	/^  int                 teamChangeTime;     \/\/ level.time of last team change$/;"	m	struct:__anon311
teamClientNums	src/ui/ui_local.h	/^  int teamClientNums[MAX_CLIENTS];$/;"	m	struct:__anon518
teamCount	src/ui/ui_local.h	/^  int         teamCount;$/;"	m	struct:__anon518
teamIndex	src/ui/ui_local.h	/^  int         teamIndex;$/;"	m	struct:__anon518
teamInfo	src/game/g_local.h	/^  int                 teamInfo;           \/\/ level.time of team overlay update (disabled = 0)$/;"	m	struct:__anon311
teamList	src/ui/ui_local.h	/^  menuItem_t  teamList[ 4 ];$/;"	m	struct:__anon518
teamNames	src/ui/ui_local.h	/^  char teamNames[MAX_CLIENTS][MAX_NAME_LENGTH];$/;"	m	struct:__anon518
teamOverlayMode_t	src/cgame/cg_draw.c	/^} teamOverlayMode_t;$/;"	t	typeref:enum:__anon224	file:
teamOverlayShader	src/cgame/cg_local.h	/^  qhandle_t   teamOverlayShader;$/;"	m	struct:__anon251
teamOverlaySort_t	src/cgame/cg_draw.c	/^} teamOverlaySort_t;$/;"	t	typeref:enum:__anon225	file:
teamPlayerIndex	src/ui/ui_local.h	/^  int teamPlayerIndex;$/;"	m	struct:__anon518
teamScores	src/cgame/cg_local.h	/^  int           teamScores[ 2 ];$/;"	m	struct:__anon249
teamScores	src/game/g_local.h	/^  int               teamScores[ NUM_TEAMS ];$/;"	m	struct:__anon316
teamSelection	src/game/g_local.h	/^  team_t              teamSelection;      \/\/ player team (copied to ps.stats[ STAT_TEAM ])$/;"	m	struct:__anon311
team_t	src/game/bg_public.h	/^} team_t;$/;"	t	typeref:enum:__anon325
teamchain	src/game/g_local.h	/^  gentity_t         *teamchain;   \/\/ next entity in team$/;"	m	struct:gentity_s
teaminfoReceievedTime	src/cgame/cg_local.h	/^  int teaminfoReceievedTime;$/;"	m	struct:__anon253
teammaster	src/game/g_local.h	/^  gentity_t         *teammaster;  \/\/ master of the team$/;"	m	struct:gentity_s
teleportFlag	src/cgame/cg_local.h	/^  int                   teleportFlag;$/;"	m	struct:centity_s
temp	src/qcommon/common.c	/^	int		temp;$/;"	m	struct:__anon451	file:
tempFile	src/server/sqlite3.c	/^  u8 tempFile;                \/* zFilename is a temporary or immutable file *\/$/;"	m	struct:Pager	file:
tempHighwater	src/qcommon/common.c	/^	int		tempHighwater;$/;"	m	struct:__anon451	file:
tempReg	src/server/sqlite3.c	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache	file:
temp_store	src/server/sqlite3.c	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3	file:
tempdir	src/tools/lcc/etc/lcc.c	/^char *tempdir = TEMPDIR;	\/* directory for temporary files *\/$/;"	v
tempid	src/tools/lcc/src/sym.c	/^static int tempid;$/;"	v	file:
tempname	src/tools/lcc/etc/lcc.c	/^char *tempname(char *suffix) {$/;"	f
temporary	src/tools/lcc/src/c.h	/^	unsigned temporary:1;$/;"	m	struct:symbol
temporary	src/tools/lcc/src/sym.c	/^Symbol temporary(int scls, Type ty) {$/;"	f
term	src/server/sqlite3.c	/^  Blob term;                      \/* Current term *\/$/;"	m	struct:NodeReader	file:
term	src/server/sqlite3.c	/^  Fts5Buffer term;                \/* Buffer containing previous term on page *\/$/;"	m	struct:Fts5PageWriter	file:
term	src/server/sqlite3.c	/^  Fts5Buffer term;                \/* Current term *\/$/;"	m	struct:Fts5SegIter	file:
term	src/server/sqlite3.c	/^  Fts5Buffer term;                \/* Current value of 'term' column *\/$/;"	m	struct:Fts5VocabCursor	file:
term	src/tools/lcc/lburg/lburg.c	/^Term term(char *id, int esn) {$/;"	f
term	src/tools/lcc/lburg/lburg.h	/^struct term {		\/* terminals: *\/$/;"	s
termCanDriveIndex	src/server/sqlite3.c	/^static int termCanDriveIndex($/;"	f	file:
termIsEquivalence	src/server/sqlite3.c	/^static int termIsEquivalence(Parse *pParse, Expr *pExpr){$/;"	f	file:
term_destination	src/renderercommon/tr_image_jpg.c	/^static void term_destination(j_compress_ptr cinfo)$/;"	f	file:
terms	src/tools/lcc/lburg/lburg.c	/^static Term terms;$/;"	v	file:
teslaFire	src/game/g_weapon.c	/^void teslaFire( gentity_t *self )$/;"	f
teslaZapTS	src/cgame/cg_local.h	/^  qhandle_t   teslaZapTS;$/;"	m	struct:__anon251
tess	src/renderergl1/tr_shade.c	/^shaderCommands_t	tess;$/;"	v
tess	src/renderergl2/tr_shade.c	/^shaderCommands_t	tess;$/;"	v
test	src/tools/lcc/src/error.c	/^void test(int tok, char set[]) {$/;"	f
testFunc	src/server/sqlite3.c	/^static void testFunc($/;"	f	file:
testGun	src/cgame/cg_local.h	/^  qboolean      testGun;$/;"	m	struct:__anon249
testLateralCollision	src/qcommon/cm_local.h	/^	qboolean		testLateralCollision; \/\/ whether or not to test for lateral collision$/;"	m	struct:__anon443
testModelBarrelEntity	src/cgame/cg_local.h	/^  refEntity_t   testModelBarrelEntity;$/;"	m	struct:__anon249
testModelBarrelName	src/cgame/cg_local.h	/^  char          testModelBarrelName[MAX_QPATH];$/;"	m	struct:__anon249
testModelEntity	src/cgame/cg_local.h	/^  refEntity_t   testModelEntity;$/;"	m	struct:__anon249
testModelName	src/cgame/cg_local.h	/^  char          testModelName[MAX_QPATH];$/;"	m	struct:__anon249
testPS	src/cgame/cg_particles.c	/^static particleSystem_t *testPS;$/;"	v	file:
testPSHandle	src/cgame/cg_particles.c	/^static qhandle_t        testPSHandle;$/;"	v	file:
testPrintFloat	src/cgame/cg_syscalls.c	/^void    testPrintFloat( char *string, float f )$/;"	f
testPrintInt	src/cgame/cg_syscalls.c	/^void    testPrintInt( char *string, int i )$/;"	f
testTS	src/cgame/cg_trails.c	/^static trailSystem_t  *testTS;$/;"	v	file:
testTSHandle	src/cgame/cg_trails.c	/^static qhandle_t      testTSHandle;$/;"	v	file:
test_addop_breakpoint	src/server/sqlite3.c	/^static void test_addop_breakpoint(void){$/;"	f	file:
test_control	src/server/sqlite3.c	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	file:
test_fts3_node_chunk_threshold	src/server/sqlite3.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunksize	src/server/sqlite3.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
testcase	src/server/sqlite3.c	138226;"	d	file:
testcase	src/server/sqlite3.c	169282;"	d	file:
testcase	src/server/sqlite3.c	9395;"	d	file:
testcase	src/server/sqlite3.c	9397;"	d	file:
testcubeShader	src/renderergl2/tr_local.h	/^	shaderProgram_t testcubeShader;$/;"	m	struct:__anon63
texCoordGen_t	src/renderergl1/tr_local.h	/^} texCoordGen_t;$/;"	t	typeref:enum:__anon135
texCoordGen_t	src/renderergl2/tr_local.h	/^} texCoordGen_t;$/;"	t	typeref:enum:__anon17
texCoords	src/qcommon/qfiles.h	/^	vec2_t		texCoords;$/;"	m	struct:__anon395
texEnv	src/renderergl1/tr_local.h	/^	int			texEnv[2];$/;"	m	struct:__anon160
texEnv	src/renderergl2/tr_local.h	/^	int			texEnv[2];$/;"	m	struct:__anon57
texModInfo_t	src/renderergl1/tr_local.h	/^} texModInfo_t;$/;"	t	typeref:struct:__anon140
texModInfo_t	src/renderergl2/tr_local.h	/^} texModInfo_t;$/;"	t	typeref:struct:__anon22
texMod_t	src/renderergl1/tr_local.h	/^} texMod_t;$/;"	t	typeref:enum:__anon138
texMod_t	src/renderergl2/tr_local.h	/^} texMod_t;$/;"	t	typeref:enum:__anon20
texMods	src/renderergl1/tr_local.h	/^	texModInfo_t	*texMods;$/;"	m	struct:__anon141
texMods	src/renderergl1/tr_shader.c	/^static	texModInfo_t	texMods[MAX_SHADER_STAGES][TR_MAX_TEXMODS];$/;"	v	file:
texMods	src/renderergl2/tr_local.h	/^	texModInfo_t	*texMods;$/;"	m	struct:__anon23
texMods	src/renderergl2/tr_shader.c	/^static	texModInfo_t	texMods[MAX_SHADER_STAGES][TR_MAX_TEXMODS];$/;"	v	file:
texcoords	src/renderergl1/tr_local.h	/^	float		*texcoords;$/;"	m	struct:__anon154
texcoords	src/renderergl1/tr_local.h	/^	vec2_t		texcoords[NUM_TEXTURE_BUNDLES][SHADER_MAX_VERTEXES];$/;"	m	struct:stageVars
texcoords	src/renderergl2/tr_local.h	/^	float		*texcoords;$/;"	m	struct:__anon46
texcoords	src/renderergl2/tr_local.h	/^	vec2_t		texcoords[NUM_TEXTURE_BUNDLES][SHADER_MAX_VERTEXES];$/;"	m	struct:stageVars
texnum	src/renderercommon/tr_common.h	/^	GLuint		texnum;					\/\/ gl texture binding$/;"	m	struct:image_s
texpr	src/tools/lcc/src/tree.c	/^Tree texpr(Tree (*f)(int), int tok, int a) {$/;"	f
text	src/client/cl_console.c	/^	short	text[CON_TEXTSIZE];$/;"	m	struct:__anon102	file:
text	src/game/bg_public.h	/^  char                   *text;$/;"	m	struct:voiceTrack_s
text	src/renderercommon/tr_types.h	/^	char		text[MAX_RENDER_STRINGS][MAX_RENDER_STRING_LENGTH];$/;"	m	struct:__anon115
text	src/renderergl1/tr_local.h	/^	char		text[MAX_RENDER_STRINGS][MAX_RENDER_STRING_LENGTH];$/;"	m	struct:__anon147
text	src/renderergl2/tr_local.h	/^	char		text[MAX_RENDER_STRINGS][MAX_RENDER_STRING_LENGTH];$/;"	m	struct:__anon39
text	src/ui/ui_local.h	/^    const char  *text;$/;"	m	union:__anon515::__anon516
text	src/ui/ui_local.h	/^  char text[MAX_NEWS_LINES][MAX_NEWS_LINEWIDTH];$/;"	m	struct:__anon512
text	src/ui/ui_local.h	/^  char text[MAX_SERVERSTATUS_TEXT];$/;"	m	struct:__anon511
text	src/ui/ui_local.h	/^  const char    *text;$/;"	m	struct:__anon515
text	src/ui/ui_shared.c	/^  char      text[ MAX_WRAP_TEXT * MAX_WRAP_LINES ];$/;"	m	struct:__anon521	file:
text	src/ui/ui_shared.h	/^  const char *text;              \/\/ display text$/;"	m	struct:itemDef_s
textFont	src/ui/ui_shared.h	/^  fontInfo_t textFont;$/;"	m	struct:__anon504
textRect	src/ui/ui_shared.h	/^  Rectangle textRect;            \/\/ rectangle the text ( if any ) consumes$/;"	m	struct:itemDef_s
textStyle	src/ui/ui_shared.h	/^  int textStyle;                 \/\/ ( optional ) style, normal and shadowed are it for now$/;"	m	struct:itemDef_s
textalignment	src/ui/ui_shared.h	/^  int textalignment;             \/\/ ( optional ) alignment for text within rect based on text width$/;"	m	struct:itemDef_s
textalignx	src/ui/ui_shared.h	/^  float textalignx;              \/\/ ( optional ) text alignment x coord$/;"	m	struct:itemDef_s
textaligny	src/ui/ui_shared.h	/^  float textaligny;              \/\/ ( optional ) text alignment x coord$/;"	m	struct:itemDef_s
textscale	src/ui/ui_shared.h	/^  float textscale;               \/\/ scale percentage from 72pts$/;"	m	struct:itemDef_s
textureBundle_t	src/renderergl1/tr_local.h	/^} textureBundle_t;$/;"	t	typeref:struct:__anon141
textureBundle_t	src/renderergl2/tr_local.h	/^} textureBundle_t;$/;"	t	typeref:struct:__anon23
textureColorShader	src/renderergl2/tr_local.h	/^	shaderProgram_t textureColorShader;$/;"	m	struct:__anon63
textureCompression	src/renderercommon/tr_types.h	/^	textureCompression_t	textureCompression;$/;"	m	struct:__anon120
textureCompression	src/renderergl2/tr_local.h	/^	textureCompressionRef_t textureCompression;$/;"	m	struct:__anon60
textureCompressionRef_t	src/renderergl2/tr_local.h	/^} textureCompressionRef_t;$/;"	t	typeref:enum:__anon59
textureCompression_t	src/renderercommon/tr_types.h	/^} textureCompression_t;$/;"	t	typeref:enum:__anon117
textureCoord	src/cgame/cg_local.h	/^  float                   textureCoord;$/;"	m	struct:trailBeamNode_s
textureDepthImage	src/renderergl2/tr_local.h	/^	image_t					*textureDepthImage;$/;"	m	struct:__anon63
textureEnvAddAvailable	src/renderercommon/tr_types.h	/^	qboolean				textureEnvAddAvailable;$/;"	m	struct:__anon120
textureFilterAnisotropic	src/renderercommon/tr_types.h	/^	qboolean				textureFilterAnisotropic;$/;"	m	struct:__anon120
textureFilterAnisotropic	src/renderergl2/tr_init.c	/^qboolean    textureFilterAnisotropic = qfalse;$/;"	v
textureFloat	src/renderergl2/tr_local.h	/^	qboolean textureFloat;$/;"	m	struct:__anon60
textureMode_t	src/renderergl1/tr_image.c	/^} textureMode_t;$/;"	t	typeref:struct:__anon178	file:
textureMode_t	src/renderergl2/tr_image.c	/^} textureMode_t;$/;"	t	typeref:struct:__anon80	file:
textureNonPowerOfTwo	src/renderergl2/tr_local.h	/^	qboolean textureNonPowerOfTwo;$/;"	m	struct:__anon60
textureScratchFbo	src/renderergl2/tr_local.h	/^	FBO_t					*textureScratchFbo[2];$/;"	m	struct:__anon63
textureScratchImage	src/renderergl2/tr_local.h	/^	image_t					*textureScratchImage[2];$/;"	m	struct:__anon63
textureType	src/cgame/cg_local.h	/^  trailBeamTextureType_t  textureType;$/;"	m	struct:baseTrailBeam_s
textvalignment	src/ui/ui_shared.h	/^  int textvalignment;            \/\/ ( optional ) alignment for text within rect based on text width$/;"	m	struct:itemDef_s
tfps	src/client/cl_cin.c	/^	long				tfps;$/;"	m	struct:__anon100	file:
thesfx	src/client/snd_local.h	/^	sfx_t		*thesfx;		\/\/ sfx structure$/;"	m	struct:__anon94
think	src/game/g_local.h	/^  void              (*think)( gentity_t *self );$/;"	m	struct:gentity_s
thirdPersonOnly	src/cgame/cg_local.h	/^  qboolean              thirdPersonOnly;$/;"	m	struct:baseParticleSystem_s
thirdPersonOnly	src/cgame/cg_local.h	/^  qboolean        thirdPersonOnly;$/;"	m	struct:baseTrailSystem_s
thisFrameTeleport	src/cgame/cg_local.h	/^  qboolean      thisFrameTeleport;$/;"	m	struct:__anon249
thread_cleanup	src/server/sqlite3.c	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	file:
threadid	src/server/sqlite3.c	27816;"	d	file:
threadid	src/server/sqlite3.c	27818;"	d	file:
throwGrenade	src/game/g_weapon.c	/^void throwGrenade( gentity_t *ent )$/;"	f
tid	src/server/sqlite3.c	/^  pthread_t tid;                 \/* Thread ID *\/$/;"	m	struct:SQLiteThread	file:
tid	src/server/sqlite3.c	/^  void *tid;               \/* The thread handle *\/$/;"	m	struct:SQLiteThread	file:
time	src/cgame/cg_local.h	/^	int		time;$/;"	m	struct:__anon257
time	src/cgame/cg_local.h	/^  float     time;$/;"	m	struct:__anon240
time	src/cgame/cg_local.h	/^  int               time;$/;"	m	struct:markPoly_s
time	src/cgame/cg_local.h	/^  int           time;                               \/\/ this is the time value that the client$/;"	m	struct:__anon249
time	src/cgame/cg_local.h	/^  int       time;$/;"	m	struct:__anon242
time	src/cgame/cg_local.h	/^  int time;$/;"	m	struct:__anon247
time	src/client/cl_main.c	/^	int time, startTime;$/;"	m	struct:serverStatus_s	file:
time	src/client/client.h	/^	int			time;$/;"	m	struct:__anon88
time	src/client/client.h	/^	int		time;$/;"	m	struct:alternateEntityState_s
time	src/game/g_local.h	/^  int               time;                         \/\/ in msec$/;"	m	struct:__anon316
time	src/game/g_local.h	/^  int          time;$/;"	m	struct:__anon315
time	src/qcommon/q_shared.h	/^	int		time;$/;"	m	struct:entityState_s
time	src/renderercommon/tr_types.h	/^	int			time;$/;"	m	struct:__anon115
time	src/renderergl1/tr_local.h	/^	int			time;				\/\/ time in milliseconds for shader effects and other time dependent rendering issues$/;"	m	struct:__anon147
time	src/renderergl2/tr_local.h	/^	int			time;				\/\/ time in milliseconds for shader effects and other time dependent rendering issues$/;"	m	struct:__anon39
time	src/server/server.h	/^	int				time;$/;"	m	struct:__anon184
time	src/server/server.h	/^	int			time;						\/\/ will be strictly increasing across level changes$/;"	m	struct:__anon188
time	src/server/server.h	/^	int			time;				\/\/ time the last packet was sent to the autherize server$/;"	m	struct:__anon187
time100	src/game/g_local.h	/^  int                 time100;          \/\/ timer for 100ms interval events$/;"	m	struct:gclient_s
time1000	src/game/g_local.h	/^  int                 time1000;         \/\/ timer for one second interval events$/;"	m	struct:gclient_s
time1000	src/game/g_local.h	/^  int               time1000;           \/\/ timer evaluated every second$/;"	m	struct:gentity_s
time10000	src/game/g_local.h	/^  int                 time10000;        \/\/ timer for ten second interval events$/;"	m	struct:gclient_s
time2	src/cgame/cg_local.h	/^	int		time2;$/;"	m	struct:__anon257
time2	src/client/client.h	/^	int		time2;$/;"	m	struct:alternateEntityState_s
time2	src/qcommon/q_shared.h	/^	int		time2;$/;"	m	struct:entityState_s
timeDemoBaseTime	src/client/client.h	/^	int			timeDemoBaseTime;	\/\/ each frame will be at this time + frameNum * 50$/;"	m	struct:__anon87
timeDemoDurations	src/client/client.h	/^	unsigned char	timeDemoDurations[ MAX_TIMEDEMO_DURATIONS ];	\/\/ log of frame durations$/;"	m	struct:__anon87
timeDemoFrames	src/client/client.h	/^	int			timeDemoFrames;		\/\/ counter of rendered frames$/;"	m	struct:__anon87
timeDemoLastFrame	src/client/client.h	/^	int			timeDemoLastFrame;\/\/ time the last frame was rendered$/;"	m	struct:__anon87
timeDemoMaxDuration	src/client/client.h	/^	int			timeDemoMaxDuration;	\/\/ maximum frame duration$/;"	m	struct:__anon87
timeDemoMinDuration	src/client/client.h	/^	int			timeDemoMinDuration;	\/\/ minimum frame duration$/;"	m	struct:__anon87
timeDemoStart	src/client/client.h	/^	int			timeDemoStart;		\/\/ cls.realtime before first frame$/;"	m	struct:__anon87
timeFunc	src/server/sqlite3.c	/^static void timeFunc($/;"	f	file:
timeLeft	src/cgame/cg_local.h	/^  int                     timeLeft;$/;"	m	struct:trailBeamNode_s
timeLimitInitialized	src/game/g_local.h	/^  qboolean          timeLimitInitialized;$/;"	m	struct:__anon316
timeMod	src/cgame/cg_local.h	/^  float     timeMod;$/;"	m	struct:__anon240
timeOffset	src/game/g_utils.c	/^  float timeOffset;$/;"	m	struct:__anon373	file:
timeOffset	src/renderergl1/tr_local.h	/^  float timeOffset;                                 \/\/ current time offset for this shader$/;"	m	struct:shader_s
timeOffset	src/renderergl2/tr_local.h	/^  float timeOffset;                                 \/\/ current time offset for this shader$/;"	m	struct:shader_s
timeResidual	src/server/server.h	/^	int				timeResidual;		\/\/ <= 1000 \/ sv_frame->value$/;"	m	struct:__anon184
timeToLive	src/game/g_local.h	/^  int           timeToLive;$/;"	m	struct:zap_s
timeWarning_t	src/game/g_local.h	/^} timeWarning_t;$/;"	t	typeref:enum:__anon313
time_backend	src/qcommon/common.c	/^int		time_backend;		\/\/ renderer backend time$/;"	v
time_frontend	src/qcommon/common.c	/^int		time_frontend;		\/\/ renderer frontend time$/;"	v
time_game	src/qcommon/common.c	/^int		time_game;$/;"	v
time_outside_vm	src/qcommon/vm_powerpc.c	/^static clock_t time_outside_vm = 0;$/;"	v	file:
time_total_vm	src/qcommon/vm_powerpc.c	/^static clock_t time_total_vm = 0;$/;"	v	file:
timelimit	src/cgame/cg_local.h	/^  int           timelimit;$/;"	m	struct:__anon253
timelimitWarning	src/game/g_local.h	/^  timeWarning_t     timelimitWarning;$/;"	m	struct:__anon316
timelimitWarnings	src/cgame/cg_local.h	/^  int           timelimitWarnings;                  \/\/ 5 min, 1 min, overtime$/;"	m	struct:__anon249
timeout	src/master/servers.h	/^	time_t timeout;$/;"	m	struct:server_s
timeoutCount	src/server/server.h	/^	int				timeoutCount;		\/\/ must timeout a few frames in a row so debugging doesn't break$/;"	m	struct:client_s
timeoutcount	src/client/client.h	/^	int			timeoutcount;		\/\/ it requres several frames in a timeout condition$/;"	m	struct:__anon86
timerResolution	src/sys/sys_win32.c	/^static UINT timerResolution = 0;$/;"	v	file:
timestamp	src/game/g_local.h	/^  int               timestamp;      \/\/ body queue sinking, etc$/;"	m	struct:gentity_s
tiny	src/game/bg_lib.c	/^tiny    =  1.0e-30,$/;"	v	file:
tkCREATE	src/server/sqlite3.c	132889;"	d	file:
tkEND	src/server/sqlite3.c	132892;"	d	file:
tkEXPLAIN	src/server/sqlite3.c	132888;"	d	file:
tkOTHER	src/server/sqlite3.c	132886;"	d	file:
tkSEMI	src/server/sqlite3.c	132884;"	d	file:
tkTEMP	src/server/sqlite3.c	132890;"	d	file:
tkTRIGGER	src/server/sqlite3.c	132891;"	d	file:
tkWS	src/server/sqlite3.c	132885;"	d	file:
tm_hour	src/qcommon/q_shared.h	/^	int tm_hour;    \/* hours since midnight - [0,23] *\/$/;"	m	struct:qtime_s
tm_isdst	src/qcommon/q_shared.h	/^	int tm_isdst;   \/* daylight savings time flag *\/$/;"	m	struct:qtime_s
tm_mday	src/qcommon/q_shared.h	/^	int tm_mday;    \/* day of the month - [1,31] *\/$/;"	m	struct:qtime_s
tm_min	src/qcommon/q_shared.h	/^	int tm_min;     \/* minutes after the hour - [0,59] *\/$/;"	m	struct:qtime_s
tm_mon	src/qcommon/q_shared.h	/^	int tm_mon;     \/* months since January - [0,11] *\/$/;"	m	struct:qtime_s
tm_sec	src/qcommon/q_shared.h	/^	int tm_sec;     \/* seconds after the minute - [0,59] *\/$/;"	m	struct:qtime_s
tm_wday	src/qcommon/q_shared.h	/^	int tm_wday;    \/* days since Sunday - [0,6] *\/$/;"	m	struct:qtime_s
tm_yday	src/qcommon/q_shared.h	/^	int tm_yday;    \/* days since January 1 - [0,365] *\/$/;"	m	struct:qtime_s
tm_year	src/qcommon/q_shared.h	/^	int tm_year;    \/* years since 1900 *\/$/;"	m	struct:qtime_s
tmask	src/server/sqlite3.c	104593;"	d	file:
tmask	src/tools/lcc/src/gen.c	/^unsigned tmask[2];$/;"	v
tmpnode	src/tools/lcc/src/dag.c	/^static Node tmpnode(Node p) {$/;"	f	file:
tnode	src/tools/lcc/src/decl.c	/^static Type tnode(int op, Type type) {$/;"	f	file:
tnum	src/server/sqlite3.c	/^  int tnum;                \/* DB Page containing root of this index *\/$/;"	m	struct:Index	file:
tnum	src/server/sqlite3.c	/^  int tnum;            \/* Root BTree page for this table *\/$/;"	m	struct:Table	file:
to	src/master/servers.h	/^	struct sockaddr_in to;$/;"	m	struct:addrmap_s	typeref:struct:addrmap_s::sockaddr_in
to	src/qcommon/net_chan.c	/^        netadr_t to;$/;"	m	struct:packetQueue_s	file:
to_string	src/master/servers.h	/^	char* to_string;$/;"	m	struct:addrmap_s
toc	src/qcommon/vm_powerpc.c	/^	void *toc;$/;"	m	struct:__anon452	file:
token	src/qcommon/parse.c	/^  token_t token;                  \/\/available token$/;"	m	struct:script_s	file:
token	src/qcommon/parse.c	/^  token_t token;                \/\/last read token$/;"	m	struct:source_s	file:
token	src/server/sqlite3.c	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram	file:
token	src/server/sqlite3.c	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame	file:
token	src/tools/asm/q3asm.c	/^char	token[MAX_LINE_LENGTH];$/;"	v
token	src/tools/lcc/cpp/cpp.h	/^typedef struct token {$/;"	s
token	src/tools/lcc/src/lex.c	/^char *token;		\/* current token *\/$/;"	v
token_s	src/qcommon/parse.c	/^typedef struct token_s$/;"	s	file:
token_t	src/qcommon/parse.c	/^} token_t;$/;"	t	typeref:struct:token_s	file:
tokenavailable	src/qcommon/parse.c	/^  int tokenavailable;             \/\/set by UnreadLastToken$/;"	m	struct:script_s	file:
tokenized	src/qcommon/cmd.c	/^	char	tokenized[ BIG_INFO_STRING + MAX_STRING_TOKENS ];	\/\/ will have 0 bytes inserted$/;"	m	struct:cmdContext_s	file:
tokenizer	src/server/sqlite3.c	/^  fts5_tokenizer tokenizer;       \/* Parent tokenizer module *\/$/;"	m	struct:PorterTokenizer	file:
tokenrow	src/tools/lcc/cpp/cpp.h	/^typedef struct tokenrow {$/;"	s
tokens	src/qcommon/parse.c	/^  token_t *tokens;              \/\/tokens to read first$/;"	m	struct:source_s	file:
tokens	src/qcommon/parse.c	/^  token_t *tokens;            \/\/macro tokens (possibly containing parm tokens)$/;"	m	struct:define_s	file:
tokkind	src/tools/lcc/cpp/lex.c	/^int	tokkind[256];$/;"	v
toktype	src/tools/lcc/cpp/cpp.h	/^enum toktype { END, UNCLASS, NAME, NUMBER, STRING, CCON, NL, WS, DSHARP,$/;"	g
tokval	src/tools/lcc/cpp/eval.c	/^tokval(Token *tp)$/;"	f
tolower	src/game/bg_lib.c	/^int tolower( int c )$/;"	f
toneMinAvgMaxLevel	src/renderergl2/tr_local.h	/^	vec3_t                  toneMinAvgMaxLevel;$/;"	m	struct:__anon63
toneMinAvgMaxLinear	src/renderergl2/tr_local.h	/^	float       toneMinAvgMaxLinear[3];$/;"	m	struct:__anon39
tonemapShader	src/renderergl2/tr_local.h	/^	shaderProgram_t tonemapShader;$/;"	m	struct:__anon63
top	src/qcommon/q_shared.h	/^  int top;          \/\/ top of glyph in buffer$/;"	m	struct:__anon478
torso	src/cgame/cg_local.h	/^  lerpFrame_t legs, torso, nonseg, weapon;$/;"	m	struct:__anon241
torsoAnim	src/cgame/cg_local.h	/^	int			torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:__anon256
torsoAnim	src/cgame/cg_local.h	/^	int		torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:__anon257
torsoAnim	src/client/client.h	/^	int			torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:alternatePlayerState_s
torsoAnim	src/client/client.h	/^	int		torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:alternateEntityState_s
torsoAnim	src/qcommon/msg.c	/^	int			torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:alternatePlayerState_s	file:
torsoAnim	src/qcommon/q_shared.h	/^	int			torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:playerState_s
torsoAnim	src/qcommon/q_shared.h	/^	int		torsoAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:entityState_s
torsoModel	src/cgame/cg_local.h	/^  qhandle_t   torsoModel;$/;"	m	struct:__anon243
torsoSkin	src/cgame/cg_local.h	/^  qhandle_t   torsoSkin;$/;"	m	struct:__anon243
torsoTimer	src/cgame/cg_local.h	/^	int			torsoTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:__anon256
torsoTimer	src/client/client.h	/^	int			torsoTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:alternatePlayerState_s
torsoTimer	src/qcommon/msg.c	/^	int			torsoTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:alternatePlayerState_s	file:
torsoTimer	src/qcommon/q_shared.h	/^	int			torsoTimer;		\/\/ don't change low priority animations until this runs out$/;"	m	struct:playerState_s
totalAlloc	src/server/sqlite3.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalBytes	src/client/cl_avi.c	/^  int totalBytes;$/;"	m	struct:audioFormat_s	file:
totalExcess	src/server/sqlite3.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalFinalize	src/server/sqlite3.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
totalInUse	src/client/snd_mem.c	/^static	int totalInUse = 0;$/;"	v	file:
totalN	src/qcommon/md4.c	/^	uint32_t totalN;$/;"	m	struct:mdfour	file:
totalParticles	src/cgame/cg_local.h	/^  int                   totalParticles;$/;"	m	struct:particleEjector_s
totalParticles	src/cgame/cg_local.h	/^  int             totalParticles;         \/\/can be infinite$/;"	m	struct:baseParticleEjector_s
totalParticlesRandFrac	src/cgame/cg_local.h	/^  float           totalParticlesRandFrac;$/;"	m	struct:baseParticleEjector_s
total_changes	src/server/sqlite3.c	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
total_changes	src/server/sqlite3.c	/^static void total_changes($/;"	f	file:
totallines	src/client/cl_console.c	/^	int		totallines;		\/\/ total lines in console scrollback$/;"	m	struct:__anon102	file:
tottok	src/tools/lcc/cpp/lex.c	/^int	tottok;$/;"	v
touch	src/game/g_local.h	/^  void              (*touch)( gentity_t *self, gentity_t *other, trace_t *trace );$/;"	m	struct:gentity_s
touchents	src/game/bg_public.h	/^  int           touchents[ MAXTOUCH ];$/;"	m	struct:pmove_s
toupper	src/game/bg_lib.c	/^int toupper( int c )$/;"	f
tp	src/tools/lcc/cpp/cpp.h	/^	Token	*tp;		\/* current one to scan *\/$/;"	m	struct:tokenrow
tr	src/renderergl1/tr_main.c	/^trGlobals_t		tr;$/;"	v
tr	src/renderergl2/tr_main.c	/^trGlobals_t		tr;$/;"	v
trBase	src/qcommon/q_shared.h	/^	vec3_t	trBase;$/;"	m	struct:__anon476
trDelta	src/qcommon/q_shared.h	/^	vec3_t	trDelta;			\/\/ velocity, etc$/;"	m	struct:__anon476
trDuration	src/qcommon/q_shared.h	/^	int		trDuration;			\/\/ if non 0, trTime + trDuration = stop time$/;"	m	struct:__anon476
trGlobals_t	src/renderergl1/tr_local.h	/^} trGlobals_t;$/;"	t	typeref:struct:__anon163
trGlobals_t	src/renderergl2/tr_local.h	/^} trGlobals_t;$/;"	t	typeref:struct:__anon63
trRefEntity_t	src/renderergl1/tr_local.h	/^} trRefEntity_t;$/;"	t	typeref:struct:__anon128
trRefEntity_t	src/renderergl2/tr_local.h	/^} trRefEntity_t;$/;"	t	typeref:struct:__anon8
trRefdef_t	src/renderergl1/tr_local.h	/^} trRefdef_t;$/;"	t	typeref:struct:__anon147
trRefdef_t	src/renderergl2/tr_local.h	/^} trRefdef_t;$/;"	t	typeref:struct:__anon39
trTime	src/qcommon/q_shared.h	/^	int		trTime;$/;"	m	struct:__anon476
trType	src/qcommon/q_shared.h	/^	trType_t	trType;$/;"	m	struct:__anon476
trType_t	src/qcommon/q_shared.h	/^} trType_t;$/;"	t	typeref:enum:__anon475
tr_tm	src/server/sqlite3.c	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger	file:
trace	src/game/bg_public.h	/^  void          (*trace)( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs,$/;"	m	struct:pmove_s
trace	src/qcommon/cm_local.h	/^	trace_t			trace;		\/\/ returned from trace call$/;"	m	struct:__anon443
trace	src/server/sqlite3.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	src/server/sqlite3.c	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	file:
trace	src/server/sqlite3.c	/^  volatile int trace;        \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	src/server/sv_world.c	/^	trace_t		trace;$/;"	m	struct:__anon182	file:
traceType_t	src/qcommon/q_shared.h	/^} traceType_t;$/;"	t	typeref:enum:__anon469
traceWork_t	src/qcommon/cm_local.h	/^} traceWork_t;$/;"	t	typeref:struct:__anon443
trace_init	src/tools/lcc/src/trace.c	/^void trace_init(int argc, char *argv[]) {$/;"	f
trace_t	src/qcommon/q_shared.h	/^} trace_t;$/;"	t	typeref:struct:__anon470
tracecall	src/tools/lcc/src/trace.c	/^static void tracecall(Symbol printer, Symbol f) {$/;"	f	file:
tracefinis	src/tools/lcc/src/trace.c	/^static void tracefinis(Symbol printer) {$/;"	f	file:
tracemask	src/game/bg_public.h	/^  int           tracemask;      \/\/ collide against these types of surfaces$/;"	m	struct:pmove_s
tracerShader	src/cgame/cg_local.h	/^  qhandle_t   tracerShader;$/;"	m	struct:__anon251
tracerSound	src/cgame/cg_local.h	/^  sfxHandle_t tracerSound;$/;"	m	struct:__anon251
tracereturn	src/tools/lcc/src/trace.c	/^static void tracereturn(Symbol printer, Symbol f, Tree e) {$/;"	f	file:
tracevalue	src/tools/lcc/src/trace.c	/^static void tracevalue(Tree e, int lev) {$/;"	f	file:
track	src/game/bg_public.h	/^  sfxHandle_t            track;$/;"	m	struct:voiceTrack_s
trackChange	src/game/g_main.c	/^  qboolean  trackChange;       \/\/ track this variable, and announce if changed$/;"	m	struct:__anon371	file:
tracks	src/game/bg_public.h	/^  voiceTrack_t      *tracks;$/;"	m	struct:voiceCmd_s
trailBeamNode_s	src/cgame/cg_local.h	/^typedef struct trailBeamNode_s$/;"	s
trailBeamNode_t	src/cgame/cg_local.h	/^} trailBeamNode_t;$/;"	t	typeref:struct:trailBeamNode_s
trailBeamTextureType_t	src/cgame/cg_local.h	/^} trailBeamTextureType_t;$/;"	t	typeref:enum:__anon239
trailBeam_s	src/cgame/cg_local.h	/^typedef struct trailBeam_s$/;"	s
trailBeam_t	src/cgame/cg_local.h	/^} trailBeam_t;$/;"	t	typeref:struct:trailBeam_s
trailBeams	src/cgame/cg_trails.c	/^static trailBeam_t        trailBeams[ MAX_TRAIL_BEAMS ];$/;"	v	file:
trailSystem_s	src/cgame/cg_local.h	/^typedef struct trailSystem_s$/;"	s
trailSystem_t	src/cgame/cg_local.h	/^} trailSystem_t;$/;"	t	typeref:struct:trailSystem_s
trailSystems	src/cgame/cg_trails.c	/^static trailSystem_t      trailSystems[ MAX_TRAIL_SYSTEMS ];$/;"	v	file:
trailTime	src/cgame/cg_local.h	/^  int                   trailTime;        \/\/ so missile trails can handle dropped initial packets$/;"	m	struct:centity_s
traj	src/game/bg_public.h	/^  trType_t      traj;$/;"	m	struct:__anon353
trajectory_t	src/qcommon/q_shared.h	/^} trajectory_t;$/;"	t	typeref:struct:__anon476
trampleBuildablesHit	src/game/g_local.h	/^  int                 trampleBuildablesHit[ MAX_TRAMPLE_BUILDABLES_TRACKED ];$/;"	m	struct:gclient_s
trampleBuildablesHitPos	src/game/g_local.h	/^  int                 trampleBuildablesHitPos;$/;"	m	struct:gclient_s
transCntrChng	src/server/sqlite3.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
transferJoinMarkings	src/server/sqlite3.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferParseError	src/server/sqlite3.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transfer_bindings	src/server/sqlite3.c	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
transformMatrix	src/renderergl2/tr_local.h	/^	float		transformMatrix[16];$/;"	m	struct:__anon9
transformed	src/renderergl1/tr_local.h	/^	vec3_t	transformed;		\/\/ origin in local coordinate system$/;"	m	struct:dlight_s
transformed	src/renderergl2/tr_local.h	/^	vec3_t	transformed;		\/\/ origin in local coordinate system$/;"	m	struct:dlight_s
translate	src/renderercommon/iqm.h	/^    float translate[3], rotate[4], scale[3];$/;"	m	struct:iqmjoint
translate	src/renderergl1/tr_local.h	/^	float			translate[2];		\/\/ t' = s * m[0][1] + t * m[0][1] + trans[1]$/;"	m	struct:__anon140
translate	src/renderergl2/tr_local.h	/^	float			translate[2];		\/\/ t' = s * m[0][1] + t * m[0][1] + trans[1]$/;"	m	struct:__anon22
translateColumnToCopy	src/server/sqlite3.c	/^static void translateColumnToCopy($/;"	f	file:
translateP	src/server/sqlite3.c	/^static int translateP(char c, const Op *pOp){$/;"	f	file:
transparentTest	src/game/bg_public.h	/^  qboolean      transparentTest;$/;"	m	struct:__anon353
trap_AddCommand	src/cgame/cg_syscalls.c	/^void  trap_AddCommand( const char *cmdName )$/;"	f
trap_AddCommand	src/game/g_syscalls.c	/^void trap_AddCommand( const char *cmdName )$/;"	f
trap_AdjustAreaPortalState	src/game/g_syscalls.c	/^void trap_AdjustAreaPortalState( gentity_t *ent, qboolean open )$/;"	f
trap_AreasConnected	src/game/g_syscalls.c	/^qboolean trap_AreasConnected( int area1, int area2 )$/;"	f
trap_Argc	src/cgame/cg_syscalls.c	/^int trap_Argc( void )$/;"	f
trap_Argc	src/game/g_syscalls.c	/^int   trap_Argc( void )$/;"	f
trap_Argc	src/ui/ui_syscalls.c	/^int trap_Argc( void )$/;"	f
trap_Args	src/cgame/cg_syscalls.c	/^void  trap_Args( char *buffer, int bufferLength )$/;"	f
trap_Argv	src/cgame/cg_syscalls.c	/^void  trap_Argv( int n, char *buffer, int bufferLength )$/;"	f
trap_Argv	src/game/g_syscalls.c	/^void  trap_Argv( int n, char *buffer, int bufferLength )$/;"	f
trap_Argv	src/ui/ui_syscalls.c	/^void trap_Argv( int n, char *buffer, int bufferLength )$/;"	f
trap_CIN_DrawCinematic	src/cgame/cg_syscalls.c	/^void trap_CIN_DrawCinematic( int handle )$/;"	f
trap_CIN_DrawCinematic	src/ui/ui_syscalls.c	/^void trap_CIN_DrawCinematic ( int handle )$/;"	f
trap_CIN_PlayCinematic	src/cgame/cg_syscalls.c	/^int trap_CIN_PlayCinematic( const char *arg0, int xpos, int ypos, int width, int height, int bits )$/;"	f
trap_CIN_PlayCinematic	src/ui/ui_syscalls.c	/^int trap_CIN_PlayCinematic( const char *arg0, int xpos, int ypos, int width, int height, int bits )$/;"	f
trap_CIN_RunCinematic	src/cgame/cg_syscalls.c	/^e_status trap_CIN_RunCinematic( int handle )$/;"	f
trap_CIN_RunCinematic	src/ui/ui_syscalls.c	/^e_status trap_CIN_RunCinematic ( int handle )$/;"	f
trap_CIN_SetExtents	src/cgame/cg_syscalls.c	/^void trap_CIN_SetExtents( int handle, int x, int y, int w, int h )$/;"	f
trap_CIN_SetExtents	src/ui/ui_syscalls.c	/^void trap_CIN_SetExtents ( int handle, int x, int y, int w, int h )$/;"	f
trap_CIN_StopCinematic	src/cgame/cg_syscalls.c	/^e_status trap_CIN_StopCinematic( int handle )$/;"	f
trap_CIN_StopCinematic	src/ui/ui_syscalls.c	/^e_status trap_CIN_StopCinematic( int handle )$/;"	f
trap_CM_BiSphereTrace	src/cgame/cg_syscalls.c	/^void trap_CM_BiSphereTrace( trace_t *results, const vec3_t start,$/;"	f
trap_CM_BoxTrace	src/cgame/cg_syscalls.c	/^void  trap_CM_BoxTrace( trace_t *results, const vec3_t start, const vec3_t end,$/;"	f
trap_CM_CapsuleTrace	src/cgame/cg_syscalls.c	/^void  trap_CM_CapsuleTrace( trace_t *results, const vec3_t start, const vec3_t end,$/;"	f
trap_CM_InlineModel	src/cgame/cg_syscalls.c	/^clipHandle_t trap_CM_InlineModel( int index )$/;"	f
trap_CM_LerpTag	src/ui/ui_syscalls.c	/^int trap_CM_LerpTag( orientation_t *tag, clipHandle_t mod, int startFrame, int endFrame, float frac, const char *tagName )$/;"	f
trap_CM_LoadMap	src/cgame/cg_syscalls.c	/^void  trap_CM_LoadMap( const char *mapname )$/;"	f
trap_CM_MarkFragments	src/cgame/cg_syscalls.c	/^int   trap_CM_MarkFragments( int numPoints, const vec3_t *points,$/;"	f
trap_CM_NumInlineModels	src/cgame/cg_syscalls.c	/^int   trap_CM_NumInlineModels( void )$/;"	f
trap_CM_PointContents	src/cgame/cg_syscalls.c	/^int   trap_CM_PointContents( const vec3_t p, clipHandle_t model )$/;"	f
trap_CM_TempBoxModel	src/cgame/cg_syscalls.c	/^clipHandle_t trap_CM_TempBoxModel( const vec3_t mins, const vec3_t maxs )$/;"	f
trap_CM_TempCapsuleModel	src/cgame/cg_syscalls.c	/^clipHandle_t trap_CM_TempCapsuleModel( const vec3_t mins, const vec3_t maxs )$/;"	f
trap_CM_TransformedBiSphereTrace	src/cgame/cg_syscalls.c	/^void trap_CM_TransformedBiSphereTrace( trace_t *results, const vec3_t start,$/;"	f
trap_CM_TransformedBoxTrace	src/cgame/cg_syscalls.c	/^void  trap_CM_TransformedBoxTrace( trace_t *results, const vec3_t start, const vec3_t end,$/;"	f
trap_CM_TransformedCapsuleTrace	src/cgame/cg_syscalls.c	/^void  trap_CM_TransformedCapsuleTrace( trace_t *results, const vec3_t start, const vec3_t end,$/;"	f
trap_CM_TransformedPointContents	src/cgame/cg_syscalls.c	/^int   trap_CM_TransformedPointContents( const vec3_t p, clipHandle_t model, const vec3_t origin,$/;"	f
trap_Cmd_ExecuteText	src/ui/ui_syscalls.c	/^void trap_Cmd_ExecuteText( int exec_when, const char *text )$/;"	f
trap_Cvar_Create	src/ui/ui_syscalls.c	/^void trap_Cvar_Create( const char *var_name, const char *var_value, int flags )$/;"	f
trap_Cvar_InfoStringBuffer	src/ui/ui_syscalls.c	/^void trap_Cvar_InfoStringBuffer( int bit, char *buffer, int bufsize )$/;"	f
trap_Cvar_Register	src/cgame/cg_syscalls.c	/^void trap_Cvar_Register( vmCvar_t *vmCvar, const char *varName, const char *defaultValue, int flags )$/;"	f
trap_Cvar_Register	src/game/g_syscalls.c	/^void  trap_Cvar_Register( vmCvar_t *cvar, const char *var_name, const char *value, int flags )$/;"	f
trap_Cvar_Register	src/ui/ui_syscalls.c	/^void trap_Cvar_Register( vmCvar_t *cvar, const char *var_name, const char *value, int flags )$/;"	f
trap_Cvar_Reset	src/ui/ui_syscalls.c	/^void trap_Cvar_Reset( const char *name )$/;"	f
trap_Cvar_Set	src/cgame/cg_syscalls.c	/^void trap_Cvar_Set( const char *var_name, const char *value )$/;"	f
trap_Cvar_Set	src/game/g_syscalls.c	/^void trap_Cvar_Set( const char *var_name, const char *value )$/;"	f
trap_Cvar_Set	src/ui/ui_syscalls.c	/^void trap_Cvar_Set( const char *var_name, const char *value )$/;"	f
trap_Cvar_SetValue	src/ui/ui_syscalls.c	/^void trap_Cvar_SetValue( const char *var_name, float value )$/;"	f
trap_Cvar_Update	src/cgame/cg_syscalls.c	/^void trap_Cvar_Update( vmCvar_t *vmCvar )$/;"	f
trap_Cvar_Update	src/game/g_syscalls.c	/^void  trap_Cvar_Update( vmCvar_t *cvar )$/;"	f
trap_Cvar_Update	src/ui/ui_syscalls.c	/^void trap_Cvar_Update( vmCvar_t *cvar )$/;"	f
trap_Cvar_VariableIntegerValue	src/game/g_syscalls.c	/^int trap_Cvar_VariableIntegerValue( const char *var_name )$/;"	f
trap_Cvar_VariableStringBuffer	src/cgame/cg_syscalls.c	/^void trap_Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize )$/;"	f
trap_Cvar_VariableStringBuffer	src/game/g_syscalls.c	/^void trap_Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize )$/;"	f
trap_Cvar_VariableStringBuffer	src/ui/ui_syscalls.c	/^void trap_Cvar_VariableStringBuffer( const char *var_name, char *buffer, int bufsize )$/;"	f
trap_Cvar_VariableValue	src/ui/ui_syscalls.c	/^float trap_Cvar_VariableValue( const char *var_name )$/;"	f
trap_DropClient	src/game/g_syscalls.c	/^void trap_DropClient( int clientNum, const char *reason )$/;"	f
trap_EntitiesInBox	src/game/g_syscalls.c	/^int trap_EntitiesInBox( const vec3_t mins, const vec3_t maxs, int *list, int maxcount )$/;"	f
trap_EntityContact	src/game/g_syscalls.c	/^qboolean trap_EntityContact( const vec3_t mins, const vec3_t maxs, const gentity_t *ent )$/;"	f
trap_EntityContactCapsule	src/game/g_syscalls.c	/^qboolean trap_EntityContactCapsule( const vec3_t mins, const vec3_t maxs, const gentity_t *ent )$/;"	f
trap_Error	src/cgame/cg_syscalls.c	/^void trap_Error( const char *fmt )$/;"	f
trap_Error	src/game/g_syscalls.c	/^void  trap_Error( const char *fmt )$/;"	f
trap_Error	src/ui/ui_syscalls.c	/^void trap_Error( const char *string )$/;"	f
trap_FS_FCloseFile	src/cgame/cg_syscalls.c	/^void  trap_FS_FCloseFile( fileHandle_t f )$/;"	f
trap_FS_FCloseFile	src/game/g_syscalls.c	/^void  trap_FS_FCloseFile( fileHandle_t f )$/;"	f
trap_FS_FCloseFile	src/ui/ui_syscalls.c	/^void trap_FS_FCloseFile( fileHandle_t f )$/;"	f
trap_FS_FOpenFile	src/cgame/cg_syscalls.c	/^int trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode )$/;"	f
trap_FS_FOpenFile	src/game/g_syscalls.c	/^int   trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode )$/;"	f
trap_FS_FOpenFile	src/ui/ui_syscalls.c	/^int trap_FS_FOpenFile( const char *qpath, fileHandle_t *f, fsMode_t mode )$/;"	f
trap_FS_GetFileList	src/cgame/cg_syscalls.c	/^int trap_FS_GetFileList( const char *path, const char *extension, char *listbuf, int bufsize )$/;"	f
trap_FS_GetFileList	src/game/g_syscalls.c	/^int trap_FS_GetFileList(  const char *path, const char *extension, char *listbuf, int bufsize )$/;"	f
trap_FS_GetFileList	src/ui/ui_syscalls.c	/^int trap_FS_GetFileList(  const char *path, const char *extension, char *listbuf, int bufsize )$/;"	f
trap_FS_GetFilteredFiles	src/game/g_syscalls.c	/^int trap_FS_GetFilteredFiles( const char *path, const char *extension, char *filter, char *listbuf, int bufsize )$/;"	f
trap_FS_Read	src/cgame/cg_syscalls.c	/^int  trap_FS_Read( void *buffer, int len, fileHandle_t f )$/;"	f
trap_FS_Read	src/game/g_syscalls.c	/^int  trap_FS_Read( void *buffer, int len, fileHandle_t f )$/;"	f
trap_FS_Read	src/ui/ui_syscalls.c	/^void trap_FS_Read( void *buffer, int len, fileHandle_t f )$/;"	f
trap_FS_Seek	src/cgame/cg_syscalls.c	/^void trap_FS_Seek( fileHandle_t f, long offset, fsOrigin_t origin )$/;"	f
trap_FS_Seek	src/ui/ui_syscalls.c	/^int trap_FS_Seek( fileHandle_t f, long offset, int origin )$/;"	f
trap_FS_Write	src/cgame/cg_syscalls.c	/^void trap_FS_Write( const void *buffer, int len, fileHandle_t f )$/;"	f
trap_FS_Write	src/game/g_syscalls.c	/^void  trap_FS_Write( const void *buffer, int len, fileHandle_t f )$/;"	f
trap_FS_Write	src/ui/ui_syscalls.c	/^void trap_FS_Write( const void *buffer, int len, fileHandle_t f )$/;"	f
trap_GetClientState	src/ui/ui_syscalls.c	/^void trap_GetClientState( uiClientState_t *state )$/;"	f
trap_GetClipboardData	src/ui/ui_syscalls.c	/^void trap_GetClipboardData( char *buf, int bufsize )$/;"	f
trap_GetConfigString	src/ui/ui_syscalls.c	/^int trap_GetConfigString( int index, char* buff, int buffsize )$/;"	f
trap_GetConfigstring	src/game/g_syscalls.c	/^void trap_GetConfigstring( int num, char *buffer, int bufferSize )$/;"	f
trap_GetCurrentCmdNumber	src/cgame/cg_syscalls.c	/^int trap_GetCurrentCmdNumber( void )$/;"	f
trap_GetCurrentSnapshotNumber	src/cgame/cg_syscalls.c	/^void trap_GetCurrentSnapshotNumber( int *snapshotNumber, int *serverTime )$/;"	f
trap_GetDemoName	src/cgame/cg_syscalls.c	/^void trap_GetDemoName( char *buffer, int size )$/;"	f
trap_GetDemoPos	src/cgame/cg_syscalls.c	/^int trap_GetDemoPos( void )$/;"	f
trap_GetDemoState	src/cgame/cg_syscalls.c	/^int trap_GetDemoState( void )$/;"	f
trap_GetEntityToken	src/game/g_syscalls.c	/^qboolean trap_GetEntityToken( char *buffer, int bufferSize )$/;"	f
trap_GetGameState	src/cgame/cg_syscalls.c	/^void trap_GetGameState( gameState_t *gamestate )$/;"	f
trap_GetGlconfig	src/cgame/cg_syscalls.c	/^void trap_GetGlconfig( glconfig_t *glconfig )$/;"	f
trap_GetGlconfig	src/ui/ui_syscalls.c	/^void trap_GetGlconfig( glconfig_t *glconfig )$/;"	f
trap_GetNews	src/ui/ui_main.c	/^qboolean trap_GetNews( qboolean force )$/;"	f
trap_GetNews	src/ui/ui_syscalls.c	/^qboolean trap_GetNews( qboolean force )$/;"	f
trap_GetServerCommand	src/cgame/cg_syscalls.c	/^qboolean  trap_GetServerCommand( int serverCommandNumber )$/;"	f
trap_GetServerinfo	src/game/g_syscalls.c	/^void trap_GetServerinfo( char *buffer, int bufferSize )$/;"	f
trap_GetSnapshot	src/cgame/cg_syscalls.c	/^qboolean  trap_GetSnapshot( int snapshotNumber, moduleAlternateSnapshot_t *snapshot )$/;"	f
trap_GetUserCmd	src/cgame/cg_syscalls.c	/^qboolean  trap_GetUserCmd( int cmdNumber, usercmd_t *ucmd )$/;"	f
trap_GetUsercmd	src/game/g_syscalls.c	/^void trap_GetUsercmd( int clientNum, usercmd_t *cmd )$/;"	f
trap_GetUserinfo	src/game/g_syscalls.c	/^void trap_GetUserinfo( int num, char *buffer, int bufferSize )$/;"	f
trap_InPVS	src/game/g_syscalls.c	/^qboolean trap_InPVS( const vec3_t p1, const vec3_t p2 )$/;"	f
trap_InPVSIgnorePortals	src/game/g_syscalls.c	/^qboolean trap_InPVSIgnorePortals( const vec3_t p1, const vec3_t p2 )$/;"	f
trap_Key_ClearStates	src/ui/ui_syscalls.c	/^void trap_Key_ClearStates( void )$/;"	f
trap_Key_GetBindingBuf	src/cgame/cg_syscalls.c	/^void trap_Key_GetBindingBuf( int keynum, char *buf, int buflen ) {$/;"	f
trap_Key_GetBindingBuf	src/ui/ui_syscalls.c	/^void trap_Key_GetBindingBuf( int keynum, char *buf, int buflen )$/;"	f
trap_Key_GetCatcher	src/cgame/cg_syscalls.c	/^int trap_Key_GetCatcher( void )$/;"	f
trap_Key_GetCatcher	src/ui/ui_syscalls.c	/^int trap_Key_GetCatcher( void )$/;"	f
trap_Key_GetKey	src/cgame/cg_syscalls.c	/^int trap_Key_GetKey( const char *binding )$/;"	f
trap_Key_GetOverstrikeMode	src/cgame/cg_main.c	/^qboolean trap_Key_GetOverstrikeMode( void )$/;"	f
trap_Key_GetOverstrikeMode	src/cgame/cg_syscalls.c	/^qboolean trap_Key_GetOverstrikeMode( void ) {$/;"	f
trap_Key_GetOverstrikeMode	src/ui/ui_syscalls.c	/^qboolean trap_Key_GetOverstrikeMode( void )$/;"	f
trap_Key_IsDown	src/cgame/cg_syscalls.c	/^qboolean trap_Key_IsDown( int keynum )$/;"	f
trap_Key_IsDown	src/ui/ui_syscalls.c	/^qboolean trap_Key_IsDown( int keynum )$/;"	f
trap_Key_KeynumToStringBuf	src/cgame/cg_syscalls.c	/^void trap_Key_KeynumToStringBuf( int keynum, char *buf, int buflen ) {$/;"	f
trap_Key_KeynumToStringBuf	src/ui/ui_syscalls.c	/^void trap_Key_KeynumToStringBuf( int keynum, char *buf, int buflen )$/;"	f
trap_Key_SetBinding	src/cgame/cg_syscalls.c	/^void trap_Key_SetBinding( int keynum, const char *binding ) {$/;"	f
trap_Key_SetBinding	src/ui/ui_syscalls.c	/^void trap_Key_SetBinding( int keynum, const char *binding )$/;"	f
trap_Key_SetCatcher	src/cgame/cg_syscalls.c	/^void trap_Key_SetCatcher( int catcher )$/;"	f
trap_Key_SetCatcher	src/ui/ui_syscalls.c	/^void trap_Key_SetCatcher( int catcher )$/;"	f
trap_Key_SetOverstrikeMode	src/cgame/cg_main.c	/^void trap_Key_SetOverstrikeMode( qboolean state )$/;"	f
trap_Key_SetOverstrikeMode	src/cgame/cg_syscalls.c	/^void trap_Key_SetOverstrikeMode( qboolean state ) {$/;"	f
trap_Key_SetOverstrikeMode	src/ui/ui_syscalls.c	/^void trap_Key_SetOverstrikeMode( qboolean state )$/;"	f
trap_LAN_AddServer	src/ui/ui_syscalls.c	/^int trap_LAN_AddServer( int source, const char *name, const char *addr )$/;"	f
trap_LAN_ClearPing	src/ui/ui_syscalls.c	/^void trap_LAN_ClearPing( int n )$/;"	f
trap_LAN_CompareServers	src/ui/ui_syscalls.c	/^int trap_LAN_CompareServers( int source, int sortKey, int sortDir, int s1, int s2 )$/;"	f
trap_LAN_GetPing	src/ui/ui_syscalls.c	/^void trap_LAN_GetPing( int n, char *buf, int buflen, int *pingtime )$/;"	f
trap_LAN_GetPingInfo	src/ui/ui_syscalls.c	/^void trap_LAN_GetPingInfo( int n, char *buf, int buflen )$/;"	f
trap_LAN_GetPingQueueCount	src/ui/ui_syscalls.c	/^int trap_LAN_GetPingQueueCount( void )$/;"	f
trap_LAN_GetServerAddressString	src/ui/ui_syscalls.c	/^void trap_LAN_GetServerAddressString( int source, int n, char *buf, int buflen )$/;"	f
trap_LAN_GetServerCount	src/ui/ui_syscalls.c	/^int  trap_LAN_GetServerCount( int source )$/;"	f
trap_LAN_GetServerInfo	src/ui/ui_syscalls.c	/^void trap_LAN_GetServerInfo( int source, int n, char *buf, int buflen )$/;"	f
trap_LAN_GetServerPing	src/ui/ui_syscalls.c	/^int trap_LAN_GetServerPing( int source, int n )$/;"	f
trap_LAN_LoadCachedServers	src/ui/ui_syscalls.c	/^void trap_LAN_LoadCachedServers( void )$/;"	f
trap_LAN_MarkServerVisible	src/ui/ui_syscalls.c	/^void trap_LAN_MarkServerVisible( int source, int n, qboolean visible )$/;"	f
trap_LAN_RemoveServer	src/ui/ui_syscalls.c	/^void trap_LAN_RemoveServer( int source, const char *addr )$/;"	f
trap_LAN_ResetPings	src/ui/ui_syscalls.c	/^void trap_LAN_ResetPings( int n )$/;"	f
trap_LAN_SaveCachedServers	src/ui/ui_syscalls.c	/^void trap_LAN_SaveCachedServers( void )$/;"	f
trap_LAN_ServerIsVisible	src/ui/ui_syscalls.c	/^int trap_LAN_ServerIsVisible( int source, int n )$/;"	f
trap_LAN_ServerStatus	src/ui/ui_syscalls.c	/^int trap_LAN_ServerStatus( const char *serverAddress, char *serverStatus, int maxLen )$/;"	f
trap_LAN_UpdateVisiblePings	src/ui/ui_syscalls.c	/^qboolean trap_LAN_UpdateVisiblePings( int source )$/;"	f
trap_LinkEntity	src/game/g_syscalls.c	/^void trap_LinkEntity( gentity_t *ent )$/;"	f
trap_LiteralArgs	src/cgame/cg_syscalls.c	/^void  trap_LiteralArgs( char *buffer, int bufferLength )$/;"	f
trap_LocateGameData	src/game/g_syscalls.c	/^void trap_LocateGameData( gentity_t *gEnts, int numGEntities, int sizeofGEntity_t,$/;"	f
trap_MemoryRemaining	src/cgame/cg_syscalls.c	/^int trap_MemoryRemaining( void )$/;"	f
trap_MemoryRemaining	src/ui/ui_syscalls.c	/^int trap_MemoryRemaining( void )$/;"	f
trap_Milliseconds	src/cgame/cg_syscalls.c	/^int trap_Milliseconds( void )$/;"	f
trap_Milliseconds	src/game/g_syscalls.c	/^int   trap_Milliseconds( void )$/;"	f
trap_Milliseconds	src/ui/ui_syscalls.c	/^int trap_Milliseconds( void )$/;"	f
trap_Parse_AddGlobalDefine	src/cgame/cg_syscalls.c	/^int trap_Parse_AddGlobalDefine( char *define )$/;"	f
trap_Parse_AddGlobalDefine	src/game/g_syscalls.c	/^int trap_Parse_AddGlobalDefine( char *define )$/;"	f
trap_Parse_AddGlobalDefine	src/ui/ui_syscalls.c	/^int trap_Parse_AddGlobalDefine( char *define )$/;"	f
trap_Parse_FreeSource	src/cgame/cg_syscalls.c	/^int trap_Parse_FreeSource( int handle )$/;"	f
trap_Parse_FreeSource	src/game/g_syscalls.c	/^int trap_Parse_FreeSource( int handle )$/;"	f
trap_Parse_FreeSource	src/ui/ui_syscalls.c	/^int trap_Parse_FreeSource( int handle )$/;"	f
trap_Parse_LoadSource	src/cgame/cg_syscalls.c	/^int trap_Parse_LoadSource( const char *filename )$/;"	f
trap_Parse_LoadSource	src/game/g_syscalls.c	/^int trap_Parse_LoadSource( const char *filename )$/;"	f
trap_Parse_LoadSource	src/ui/ui_syscalls.c	/^int trap_Parse_LoadSource( const char *filename )$/;"	f
trap_Parse_ReadToken	src/cgame/cg_syscalls.c	/^int trap_Parse_ReadToken( int handle, pc_token_t *pc_token )$/;"	f
trap_Parse_ReadToken	src/game/g_syscalls.c	/^int trap_Parse_ReadToken( int handle, pc_token_t *pc_token )$/;"	f
trap_Parse_ReadToken	src/ui/ui_syscalls.c	/^int trap_Parse_ReadToken( int handle, pc_token_t *pc_token )$/;"	f
trap_Parse_SourceFileAndLine	src/cgame/cg_syscalls.c	/^int trap_Parse_SourceFileAndLine( int handle, char *filename, int *line )$/;"	f
trap_Parse_SourceFileAndLine	src/game/g_syscalls.c	/^int trap_Parse_SourceFileAndLine( int handle, char *filename, int *line )$/;"	f
trap_Parse_SourceFileAndLine	src/ui/ui_syscalls.c	/^int trap_Parse_SourceFileAndLine( int handle, char *filename, int *line )$/;"	f
trap_PointContents	src/game/g_syscalls.c	/^int trap_PointContents( const vec3_t point, int passEntityNum )$/;"	f
trap_Print	src/cgame/cg_syscalls.c	/^void trap_Print( const char *fmt )$/;"	f
trap_Print	src/game/g_syscalls.c	/^void  trap_Print( const char *fmt )$/;"	f
trap_Print	src/ui/ui_syscalls.c	/^void trap_Print( const char *string )$/;"	f
trap_Query	src/game/g_syscalls.c	/^int trap_Query( dbArray_t type, char *data, int *steps )$/;"	f
trap_R_AddAdditiveLightToScene	src/cgame/cg_syscalls.c	/^void  trap_R_AddAdditiveLightToScene( const vec3_t org, float intensity, float r, float g, float b )$/;"	f
trap_R_AddLightToScene	src/cgame/cg_syscalls.c	/^void  trap_R_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b )$/;"	f
trap_R_AddLightToScene	src/ui/ui_syscalls.c	/^void trap_R_AddLightToScene( const vec3_t org, float intensity, float r, float g, float b )$/;"	f
trap_R_AddPolyToScene	src/cgame/cg_syscalls.c	/^void trap_R_AddPolyToScene( qhandle_t hShader , int numVerts, const polyVert_t *verts )$/;"	f
trap_R_AddPolyToScene	src/ui/ui_syscalls.c	/^void trap_R_AddPolyToScene( qhandle_t hShader , int numVerts, const polyVert_t *verts )$/;"	f
trap_R_AddPolysToScene	src/cgame/cg_syscalls.c	/^void trap_R_AddPolysToScene( qhandle_t hShader , int numVerts, const polyVert_t *verts, int num )$/;"	f
trap_R_AddRefEntityToScene	src/cgame/cg_syscalls.c	/^void  trap_R_AddRefEntityToScene( const refEntity_t *re )$/;"	f
trap_R_AddRefEntityToScene	src/ui/ui_syscalls.c	/^void trap_R_AddRefEntityToScene( const refEntity_t *re )$/;"	f
trap_R_ClearScene	src/cgame/cg_syscalls.c	/^void  trap_R_ClearScene( void )$/;"	f
trap_R_ClearScene	src/ui/ui_syscalls.c	/^void trap_R_ClearScene( void )$/;"	f
trap_R_DrawStretchPic	src/cgame/cg_syscalls.c	/^void  trap_R_DrawStretchPic( float x, float y, float w, float h,$/;"	f
trap_R_DrawStretchPic	src/ui/ui_syscalls.c	/^void trap_R_DrawStretchPic( float x, float y, float w, float h, float s1, float t1, float s2, float t2, qhandle_t hShader )$/;"	f
trap_R_LerpTag	src/cgame/cg_syscalls.c	/^int   trap_R_LerpTag( orientation_t *tag, clipHandle_t mod, int startFrame, int endFrame,$/;"	f
trap_R_LightForPoint	src/cgame/cg_syscalls.c	/^int trap_R_LightForPoint( vec3_t point, vec3_t ambientLight, vec3_t directedLight, vec3_t lightDir )$/;"	f
trap_R_LoadWorldMap	src/cgame/cg_syscalls.c	/^void  trap_R_LoadWorldMap( const char *mapname )$/;"	f
trap_R_ModelBounds	src/cgame/cg_syscalls.c	/^void  trap_R_ModelBounds( clipHandle_t model, vec3_t mins, vec3_t maxs ) {$/;"	f
trap_R_ModelBounds	src/ui/ui_syscalls.c	/^void  trap_R_ModelBounds( clipHandle_t model, vec3_t mins, vec3_t maxs )$/;"	f
trap_R_RegisterFont	src/cgame/cg_syscalls.c	/^void trap_R_RegisterFont( const char *fontName, int pointSize, fontInfo_t *font )$/;"	f
trap_R_RegisterFont	src/ui/ui_syscalls.c	/^void trap_R_RegisterFont( const char *fontName, int pointSize, fontInfo_t *font )$/;"	f
trap_R_RegisterModel	src/cgame/cg_syscalls.c	/^qhandle_t trap_R_RegisterModel( const char *name )$/;"	f
trap_R_RegisterModel	src/ui/ui_syscalls.c	/^qhandle_t trap_R_RegisterModel( const char *name )$/;"	f
trap_R_RegisterShader	src/cgame/cg_syscalls.c	/^qhandle_t trap_R_RegisterShader( const char *name )$/;"	f
trap_R_RegisterShaderNoMip	src/cgame/cg_syscalls.c	/^qhandle_t trap_R_RegisterShaderNoMip( const char *name )$/;"	f
trap_R_RegisterShaderNoMip	src/ui/ui_syscalls.c	/^qhandle_t trap_R_RegisterShaderNoMip( const char *name )$/;"	f
trap_R_RegisterSkin	src/cgame/cg_syscalls.c	/^qhandle_t trap_R_RegisterSkin( const char *name )$/;"	f
trap_R_RegisterSkin	src/ui/ui_syscalls.c	/^qhandle_t trap_R_RegisterSkin( const char *name )$/;"	f
trap_R_RemapShader	src/cgame/cg_syscalls.c	/^void  trap_R_RemapShader( const char *oldShader, const char *newShader, const char *timeOffset )$/;"	f
trap_R_RemapShader	src/ui/ui_syscalls.c	/^void  trap_R_RemapShader( const char *oldShader, const char *newShader, const char *timeOffset )$/;"	f
trap_R_RenderScene	src/cgame/cg_syscalls.c	/^void  trap_R_RenderScene( const refdef_t *fd )$/;"	f
trap_R_RenderScene	src/ui/ui_syscalls.c	/^void trap_R_RenderScene( const refdef_t *fd )$/;"	f
trap_R_SetClipRegion	src/cgame/cg_main.c	/^void trap_R_SetClipRegion( const float *region )$/;"	f
trap_R_SetClipRegion	src/cgame/cg_syscalls.c	/^void  trap_R_SetClipRegion( const float *region )$/;"	f
trap_R_SetClipRegion	src/ui/ui_main.c	/^void trap_R_SetClipRegion( const float *region )$/;"	f
trap_R_SetClipRegion	src/ui/ui_syscalls.c	/^void  trap_R_SetClipRegion( const float *region )$/;"	f
trap_R_SetColor	src/cgame/cg_syscalls.c	/^void  trap_R_SetColor( const float *rgba )$/;"	f
trap_R_SetColor	src/ui/ui_syscalls.c	/^void trap_R_SetColor( const float *rgba )$/;"	f
trap_R_inPVS	src/cgame/cg_syscalls.c	/^qboolean trap_R_inPVS( const vec3_t p1, const vec3_t p2 )$/;"	f
trap_RealTime	src/cgame/cg_syscalls.c	/^int trap_RealTime(qtime_t *qtime)$/;"	f
trap_RealTime	src/game/g_syscalls.c	/^int trap_RealTime( qtime_t *qtime )$/;"	f
trap_RealTime	src/ui/ui_syscalls.c	/^int trap_RealTime( qtime_t *qtime )$/;"	f
trap_RemoveCommand	src/cgame/cg_syscalls.c	/^void  trap_RemoveCommand( const char *cmdName )$/;"	f
trap_RemoveCommand	src/game/g_syscalls.c	/^void trap_RemoveCommand( const char *cmdName )$/;"	f
trap_S_AddLoopingSound	src/cgame/cg_syscalls.c	/^void  trap_S_AddLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx )$/;"	f
trap_S_AddRealLoopingSound	src/cgame/cg_syscalls.c	/^void  trap_S_AddRealLoopingSound( int entityNum, const vec3_t origin, const vec3_t velocity, sfxHandle_t sfx )$/;"	f
trap_S_ClearLoopingSounds	src/cgame/cg_syscalls.c	/^void  trap_S_ClearLoopingSounds( qboolean killall )$/;"	f
trap_S_RegisterSound	src/cgame/cg_syscalls.c	/^sfxHandle_t trap_S_RegisterSound( const char *sample, qboolean compressed )$/;"	f
trap_S_RegisterSound	src/ui/ui_syscalls.c	/^sfxHandle_t  trap_S_RegisterSound( const char *sample, qboolean compressed )$/;"	f
trap_S_Respatialize	src/cgame/cg_syscalls.c	/^void  trap_S_Respatialize( int entityNum, const vec3_t origin, vec3_t axis[3], int inwater )$/;"	f
trap_S_SoundDuration	src/cgame/cg_main.c	/^int trap_S_SoundDuration( sfxHandle_t handle )$/;"	f
trap_S_SoundDuration	src/cgame/cg_syscalls.c	/^int trap_S_SoundDuration( sfxHandle_t handle )$/;"	f
trap_S_StartBackgroundTrack	src/cgame/cg_syscalls.c	/^void  trap_S_StartBackgroundTrack( const char *intro, const char *loop )$/;"	f
trap_S_StartBackgroundTrack	src/ui/ui_syscalls.c	/^void trap_S_StartBackgroundTrack( const char *intro, const char *loop )$/;"	f
trap_S_StartLocalSound	src/cgame/cg_syscalls.c	/^void  trap_S_StartLocalSound( sfxHandle_t sfx, int channelNum )$/;"	f
trap_S_StartLocalSound	src/ui/ui_syscalls.c	/^void trap_S_StartLocalSound( sfxHandle_t sfx, int channelNum )$/;"	f
trap_S_StartSound	src/cgame/cg_syscalls.c	/^void  trap_S_StartSound( vec3_t origin, int entityNum, int entchannel, sfxHandle_t sfx )$/;"	f
trap_S_StopBackgroundTrack	src/cgame/cg_syscalls.c	/^void  trap_S_StopBackgroundTrack( void )$/;"	f
trap_S_StopBackgroundTrack	src/ui/ui_syscalls.c	/^void trap_S_StopBackgroundTrack( void )$/;"	f
trap_S_StopLoopingSound	src/cgame/cg_syscalls.c	/^void  trap_S_StopLoopingSound( int entityNum )$/;"	f
trap_S_UpdateEntityPosition	src/cgame/cg_syscalls.c	/^void  trap_S_UpdateEntityPosition( int entityNum, const vec3_t origin )$/;"	f
trap_SendClientCommand	src/cgame/cg_syscalls.c	/^void  trap_SendClientCommand( const char *s )$/;"	f
trap_SendConsoleCommand	src/cgame/cg_syscalls.c	/^void  trap_SendConsoleCommand( const char *text )$/;"	f
trap_SendConsoleCommand	src/game/g_syscalls.c	/^void  trap_SendConsoleCommand( int exec_when, const char *text )$/;"	f
trap_SendServerCommand	src/game/g_syscalls.c	/^void trap_SendServerCommand( int clientNum, const char *text )$/;"	f
trap_SetBrushModel	src/game/g_syscalls.c	/^void trap_SetBrushModel( gentity_t *ent, const char *name )$/;"	f
trap_SetConfigstring	src/game/g_syscalls.c	/^void trap_SetConfigstring( int num, const char *string )$/;"	f
trap_SetConfigstringRestrictions	src/game/g_syscalls.c	/^void trap_SetConfigstringRestrictions( int num, const clientList_t *clientList )$/;"	f
trap_SetPbClStatus	src/ui/ui_syscalls.c	/^void trap_SetPbClStatus( int status )$/;"	f
trap_SetUserCmdValue	src/cgame/cg_syscalls.c	/^void    trap_SetUserCmdValue( int stateValue, float sensitivityScale )$/;"	f
trap_SetUserinfo	src/game/g_syscalls.c	/^void trap_SetUserinfo( int num, const char *buffer )$/;"	f
trap_SnapVector	src/cgame/cg_syscalls.c	/^void trap_SnapVector( float *v )$/;"	f
trap_SnapVector	src/game/g_syscalls.c	/^void trap_SnapVector( float *v )$/;"	f
trap_Trace	src/game/g_syscalls.c	/^void trap_Trace( trace_t *results, const vec3_t start, const vec3_t mins,$/;"	f
trap_TraceCapsule	src/game/g_syscalls.c	/^void trap_TraceCapsule( trace_t *results, const vec3_t start, const vec3_t mins, const vec3_t maxs, const vec3_t end, int passEntityNum, int contentmask )$/;"	f
trap_UnlinkEntity	src/game/g_syscalls.c	/^void trap_UnlinkEntity( gentity_t *ent )$/;"	f
trap_UpdateScreen	src/cgame/cg_syscalls.c	/^void  trap_UpdateScreen( void )$/;"	f
trap_UpdateScreen	src/ui/ui_syscalls.c	/^void trap_UpdateScreen( void )$/;"	f
tree	src/qcommon/qcommon.h	/^	node_t*		tree;$/;"	m	struct:__anon432
tree	src/tools/lcc/lburg/gram.c	/^	Tree tree;$/;"	m	union:YYSTYPE	file:
tree	src/tools/lcc/lburg/gram.y	/^tree	: ID                            { $$ = tree($1,  0,  0); }$/;"	l
tree	src/tools/lcc/lburg/lburg.c	/^Tree tree(char *id, Tree left, Tree right) {$/;"	f
tree	src/tools/lcc/lburg/lburg.h	/^struct tree {		\/* tree patterns: *\/$/;"	s
tree	src/tools/lcc/src/c.h	/^struct tree {$/;"	s
tree	src/tools/lcc/src/tree.c	/^Tree tree(int op, Type type, Tree left, Tree right) {$/;"	f
triangleTable	src/renderergl1/tr_local.h	/^	float					triangleTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon163
triangleTable	src/renderergl2/tr_local.h	/^	float					triangleTable[FUNCTABLE_SIZE];$/;"	m	struct:__anon63
triangles	src/renderergl1/tr_local.h	/^	int		*triangles;$/;"	m	struct:__anon154
triangles	src/renderergl2/tr_local.h	/^	int		*triangles;$/;"	m	struct:__anon46
trigHash	src/server/sqlite3.c	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema	file:
triggerGravity	src/game/g_local.h	/^  int               triggerGravity;                 \/\/ gravity for this trigger$/;"	m	struct:gentity_s
triggerStepAllocate	src/server/sqlite3.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
trigger_always_think	src/game/g_trigger.c	/^void trigger_always_think( gentity_t *ent )$/;"	f
trigger_ammo_touch	src/game/g_trigger.c	/^void trigger_ammo_touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
trigger_buildable_match	src/game/g_trigger.c	/^qboolean trigger_buildable_match( gentity_t *self, gentity_t *activator )$/;"	f
trigger_buildable_touch	src/game/g_trigger.c	/^void trigger_buildable_touch( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
trigger_buildable_trigger	src/game/g_trigger.c	/^void trigger_buildable_trigger( gentity_t *self, gentity_t *activator )$/;"	f
trigger_buildable_use	src/game/g_trigger.c	/^void trigger_buildable_use( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
trigger_check_wait	src/game/g_trigger.c	/^void trigger_check_wait( gentity_t *self )$/;"	f
trigger_class_match	src/game/g_trigger.c	/^qboolean trigger_class_match( gentity_t *self, gentity_t *activator )$/;"	f
trigger_class_touch	src/game/g_trigger.c	/^void trigger_class_touch( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
trigger_class_trigger	src/game/g_trigger.c	/^void trigger_class_trigger( gentity_t *self, gentity_t *activator )$/;"	f
trigger_class_use	src/game/g_trigger.c	/^void trigger_class_use( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
trigger_equipment_match	src/game/g_trigger.c	/^qboolean trigger_equipment_match( gentity_t *self, gentity_t *activator )$/;"	f
trigger_equipment_touch	src/game/g_trigger.c	/^void trigger_equipment_touch( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
trigger_equipment_trigger	src/game/g_trigger.c	/^void trigger_equipment_trigger( gentity_t *self, gentity_t *activator )$/;"	f
trigger_equipment_use	src/game/g_trigger.c	/^void trigger_equipment_use( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
trigger_gravity_touch	src/game/g_trigger.c	/^void trigger_gravity_touch( gentity_t *ent, gentity_t *other, trace_t *trace )$/;"	f
trigger_gravity_use	src/game/g_trigger.c	/^void trigger_gravity_use( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
trigger_heal_touch	src/game/g_trigger.c	/^void trigger_heal_touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
trigger_heal_use	src/game/g_trigger.c	/^void trigger_heal_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
trigger_push_touch	src/game/g_trigger.c	/^void trigger_push_touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
trigger_stage_use	src/game/g_trigger.c	/^void trigger_stage_use( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
trigger_teleporter_touch	src/game/g_trigger.c	/^void trigger_teleporter_touch( gentity_t *self, gentity_t *other, trace_t *trace )$/;"	f
trigger_teleporter_use	src/game/g_trigger.c	/^void trigger_teleporter_use( gentity_t *ent, gentity_t *other, gentity_t *activator )$/;"	f
trigger_win	src/game/g_trigger.c	/^void trigger_win( gentity_t *self, gentity_t *other, gentity_t *activator )$/;"	f
trigraph	src/tools/lcc/cpp/lex.c	/^trigraph(Source *s)$/;"	f
trimFunc	src/server/sqlite3.c	/^static void trimFunc($/;"	f	file:
truncateOnCommit	src/server/sqlite3.c	/^  u8 truncateOnCommit;       \/* True to truncate WAL file on commit *\/$/;"	m	struct:Wal	file:
truthProb	src/server/sqlite3.c	/^  LogEst truthProb;       \/* Probability of truth for this expression *\/$/;"	m	struct:WhereTerm	file:
ts	src/server/sqlite3.c	/^  struct Fts5TransactionState ts;$/;"	m	struct:Fts5Table	typeref:struct:Fts5Table::Fts5TransactionState	file:
tsym	src/tools/lcc/src/lex.c	/^Symbol tsym;		\/* symbol table entry for current token *\/$/;"	v
ttob	src/tools/lcc/src/types.c	/^int ttob(Type ty) {$/;"	f
ttyEditLines	src/sys/con_tty.c	/^static field_t ttyEditLines[ CON_HISTORY ];$/;"	v	file:
ttycon_hide	src/sys/con_tty.c	/^static int ttycon_hide = 0;$/;"	v	file:
ttycon_on	src/sys/con_tty.c	/^static qboolean ttycon_on = qfalse;$/;"	v	file:
ttycon_show_overdue	src/sys/con_tty.c	/^static int ttycon_show_overdue = 0;$/;"	v	file:
turretAim	src/game/g_local.h	/^  vec3_t            turretAim;          \/\/ aim vector for turrets$/;"	m	struct:gentity_s
turretAimRate	src/game/g_local.h	/^  vec3_t            turretAimRate;      \/\/ track turn speed for norfenturrets$/;"	m	struct:gentity_s
turretFireSpeed	src/game/bg_public.h	/^  int           turretFireSpeed;$/;"	m	struct:__anon353
turretProjType	src/game/bg_public.h	/^  weapon_t      turretProjType;$/;"	m	struct:__anon353
turretRange	src/game/bg_public.h	/^  int           turretRange;$/;"	m	struct:__anon353
turretSpinupSound	src/cgame/cg_local.h	/^  sfxHandle_t turretSpinupSound;$/;"	m	struct:__anon251
turretSpinupTime	src/game/g_local.h	/^  int               turretSpinupTime;   \/\/ spinup delay for norfenturrets$/;"	m	struct:gentity_s
tv	src/game/g_utils.c	/^float *tv( float x, float y, float z )$/;"	f
tval	src/tools/lcc/src/lex.c	/^static struct symbol tval;$/;"	v	typeref:struct:symbol	file:
two	src/game/bg_lib.c	/^two     =  2.0,$/;"	v	file:
two24	src/game/bg_lib.c	/^two24   =  16777216.0,  \/* 0x4b800000 *\/$/;"	v	file:
two25	src/game/bg_lib.c	/^two25   =  3.355443200e+07, \/* 0x4c000000 *\/$/;"	v	file:
twom25	src/game/bg_lib.c	/^twom25  =  2.9802322388e-08,  \/* 0x33000000 *\/$/;"	v	file:
type	src/cgame/cg_local.h	/^  attachmentType_t  type;$/;"	m	struct:attachment_s
type	src/game/g_admin.h	/^  } type;$/;"	m	struct:__anon376	typeref:enum:__anon376::__anon377
type	src/game/g_maprotation.c	/^  nodeType_t    type;$/;"	m	struct:node_s	file:
type	src/game/g_spawn.c	/^  fieldtype_t type;$/;"	m	struct:__anon367	file:
type	src/qcommon/cm_local.h	/^	traceType_t	type;$/;"	m	struct:__anon443
type	src/qcommon/net_ip.c	/^	netadrtype_t type;$/;"	m	struct:__anon489	file:
type	src/qcommon/parse.c	/^  int type;                     \/\/last read token type$/;"	m	struct:token_s	file:
type	src/qcommon/parse.c	/^  int type;               \/\/indent type$/;"	m	struct:indent_s	file:
type	src/qcommon/q_shared.h	/^	byte	type;			\/\/ for fast side tests: 0,1,2 = axial, 3 = nonaxial$/;"	m	struct:cplane_s
type	src/qcommon/q_shared.h	/^	int type;$/;"	m	struct:pc_token_s
type	src/qcommon/qcommon.h	/^	netadrtype_t	type;$/;"	m	struct:__anon421
type	src/renderercommon/iqm.h	/^    unsigned int type;$/;"	m	struct:iqmvertexarray
type	src/renderercommon/tr_common.h	/^	imgType_t   type;$/;"	m	struct:image_s
type	src/renderergl1/tr_local.h	/^	modtype_t	type;$/;"	m	struct:model_s
type	src/renderergl1/tr_local.h	/^	texMod_t		type;$/;"	m	struct:__anon140
type	src/renderergl2/tr_glsl.c	/^	int type;$/;"	m	struct:uniformInfo_s	file:
type	src/renderergl2/tr_local.h	/^	int             type;$/;"	m	struct:cullinfo_s
type	src/renderergl2/tr_local.h	/^	modtype_t	type;$/;"	m	struct:model_s
type	src/renderergl2/tr_local.h	/^	stageType_t     type;$/;"	m	struct:__anon26
type	src/renderergl2/tr_local.h	/^	texMod_t		type;$/;"	m	struct:__anon22
type	src/renderergl2/tr_local.h	/^	uint32_t type;$/;"	m	struct:vaoAttrib_s
type	src/server/server.h	/^	netadrtype_t	type;$/;"	m	struct:leakyBucket_s
type	src/server/sqlite3.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
type	src/server/sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
type	src/tools/lcc/cpp/cpp.h	/^	unsigned char	type;$/;"	m	struct:token
type	src/tools/lcc/cpp/eval.c	/^	int	type;$/;"	m	struct:value	file:
type	src/tools/lcc/src/c.h	/^	Type type;$/;"	m	struct:field
type	src/tools/lcc/src/c.h	/^	Type type;$/;"	m	struct:symbol
type	src/tools/lcc/src/c.h	/^	Type type;$/;"	m	struct:tree
type	src/tools/lcc/src/c.h	/^	Type type;$/;"	m	struct:type
type	src/tools/lcc/src/c.h	/^struct type {$/;"	s
type	src/tools/lcc/src/types.c	/^	struct type type;$/;"	m	struct:entry	typeref:struct:entry::type	file:
type	src/tools/lcc/src/types.c	/^static Type type(int op, Type ty, int size, int align, void *sym) {$/;"	f	file:
type	src/ui/ui_local.h	/^  infoType_t    type;$/;"	m	struct:__anon515
type	src/ui/ui_shared.c	/^  exprType_t  type;$/;"	m	struct:exprToken_s	file:
type	src/ui/ui_shared.h	/^  int type;                      \/\/ text, button, radiobutton, checkbox, textfield, listbox, combo$/;"	m	struct:itemDef_s
typeData	src/ui/ui_shared.h	/^  } typeData;                    \/\/ type specific data pointers$/;"	m	struct:itemDef_s	typeref:union:itemDef_s::__anon502
typeMask	src/server/sqlite3.c	/^  u8 typeMask;$/;"	m	struct:VdbeSorter	file:
type_init	src/tools/lcc/src/types.c	/^void type_init(int argc, char *argv[]) {$/;"	f
typeerror	src/tools/lcc/src/enode.c	/^void typeerror(int op, Tree l, Tree r) {$/;"	f
typename	src/tools/lcc/src/decl.c	/^Type typename(void) {$/;"	f
typeno	src/tools/lcc/src/c.h	/^	unsigned short typeno;$/;"	m	struct:__anon282
typeofFunc	src/server/sqlite3.c	/^static void typeofFunc($/;"	f	file:
types	src/tools/lcc/src/c.h	/^			Table identifiers, types;$/;"	m	struct:code::__anon291::__anon292
types	src/tools/lcc/src/sym.c	/^Table types       = &tys;$/;"	v
typestab	src/tools/lcc/src/dag.c	/^static void typestab(Symbol p, void *cl) {$/;"	f	file:
typestab	src/tools/lcc/src/main.c	/^static void typestab(Symbol p, void *cl) {$/;"	f	file:
typestring	src/tools/lcc/src/types.c	/^char *typestring(Type ty, char *str) {$/;"	f
typetable	src/tools/lcc/src/types.c	/^} *typetable[128];$/;"	v	typeref:struct:entry	file:
tys	src/tools/lcc/src/sym.c	/^	tys = { GLOBAL };$/;"	v	typeref:struct:	file:
tz	src/server/sqlite3.c	/^  int tz;            \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
tzSet	src/server/sqlite3.c	/^  char tzSet;        \/* Timezone was set explicitly *\/$/;"	m	struct:DateTime	file:
u	src/game/g_maprotation.c	/^  } u;$/;"	m	struct:node_s	typeref:union:node_s::__anon323	file:
u	src/server/sqlite3.c	/^    } u;$/;"	m	struct:ExprList::ExprList_item	typeref:union:ExprList::ExprList_item::__anon196	file:
u	src/server/sqlite3.c	/^  u32 u;             \/* Unsigned for byte-order conversions *\/$/;"	m	union:RtreeCoord	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon207	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon194	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:FuncDef	typeref:union:FuncDef::__anon193	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:JsonNode	typeref:union:JsonNode::__anon220	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:Mem	typeref:union:Mem::MemValue	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon204	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:RtreeConstraint	typeref:union:RtreeConstraint::__anon219	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:SorterRecord	typeref:union:SorterRecord::__anon208	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:Stat4Sample	typeref:union:Stat4Sample::__anon209	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon201	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon210	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:WhereLoop	typeref:union:WhereLoop::__anon212	file:
u	src/server/sqlite3.c	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon215	file:
u	src/tools/lcc/src/c.h	/^	unsigned long u;$/;"	m	union:value
u	src/tools/lcc/src/c.h	/^	} u;$/;"	m	struct:code	typeref:union:code::__anon291
u	src/tools/lcc/src/c.h	/^	} u;$/;"	m	struct:symbol	typeref:union:symbol::__anon296
u	src/tools/lcc/src/c.h	/^	} u;$/;"	m	struct:tree	typeref:union:tree::__anon304
u	src/tools/lcc/src/c.h	/^	} u;$/;"	m	struct:type	typeref:union:type::__anon306
u	src/tools/lcc/src/prof.c	/^	union coordinate u[200];$/;"	m	struct:map	typeref:union:map::coordinate	file:
u	src/tools/lcc/src/prof.c	/^	} u;$/;"	m	struct:callsite	typeref:union:callsite::coordinate	file:
u	src/ui/ui_shared.c	/^  } u;$/;"	m	struct:exprToken_s	typeref:union:exprToken_s::__anon520	file:
u1	src/server/sqlite3.c	/^    } u1;$/;"	m	struct:SrcList::SrcList_item	typeref:union:SrcList::SrcList_item::__anon199	file:
u1	src/server/sqlite3.c	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon192	file:
u16	src/server/sqlite3.c	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t	file:
u16	src/server/sqlite3.c	/^typedef unsigned short u16;$/;"	t	file:
u32	src/server/sqlite3.c	/^  typedef unsigned int u32;$/;"	t	file:
u32	src/server/sqlite3.c	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	src/server/sqlite3.c	/^typedef unsigned int   u32;$/;"	t	file:
u32	src/server/sqlite3.c	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	src/server/sqlite3.c	/^typedef unsigned int u32;$/;"	t	file:
u64	src/server/sqlite3.c	/^  typedef sqlite3_uint64 u64;$/;"	t	file:
u64	src/server/sqlite3.c	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t	file:
u64	src/server/sqlite3.c	/^typedef sqlite3_uint64 u64;$/;"	t	file:
u64	src/server/sqlite3.c	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t	file:
u8	src/server/sqlite3.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	src/server/sqlite3.c	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t	file:
u8	src/server/sqlite3.c	/^typedef unsigned char  u8;$/;"	t	file:
u8	src/server/sqlite3.c	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t	file:
u8	src/server/sqlite3.c	/^typedef unsigned char u8;$/;"	t	file:
uTemp	src/server/sqlite3.c	/^  u32 uTemp;          \/* Transient storage for serial_type in OP_MakeRecord *\/$/;"	m	struct:Mem	file:
uTriggers	src/game/g_local.h	/^  upgrade_t         uTriggers[ UP_NUM_UPGRADES ];   \/\/ which upgrades are triggers$/;"	m	struct:gentity_s
uc	src/server/sqlite3.c	/^  } uc;$/;"	m	struct:VdbeCursor	typeref:union:VdbeCursor::__anon202	file:
uchar	src/tools/lcc/cpp/cpp.h	/^typedef unsigned char uchar;$/;"	t
ucmd_t	src/server/sv_client.c	/^} ucmd_t;$/;"	t	typeref:struct:__anon190	file:
ucmds	src/server/sv_client.c	/^static ucmd_t ucmds[] = {$/;"	v	file:
ufoldcnst	src/tools/lcc/src/simp.c	41;"	d	file:
ui	src/qcommon/q_shared.h	/^	unsigned int ui;$/;"	m	union:__anon457
ui	src/tools/lcc/src/c.h	/^	unsigned int ui;$/;"	m	union:__anon283
uiClientState_t	src/ui/ui_public.h	/^uiClientState_t;$/;"	t	typeref:struct:__anon492
uiDC	src/ui/ui_local.h	/^  displayContextDef_t uiDC;$/;"	m	struct:__anon518
uiExport_t	src/ui/ui_public.h	/^uiExport_t;$/;"	t	typeref:enum:__anon496
uiImport_t	src/ui/ui_public.h	/^uiImport_t;$/;"	t	typeref:enum:__anon493
uiInfo	src/ui/ui_main.c	/^uiInfo_t uiInfo;$/;"	v
uiInfo_t	src/ui/ui_local.h	/^uiInfo_t;$/;"	t	typeref:struct:__anon518
uiInterface	src/client/cl_ui.c	/^int uiInterface;$/;"	v
uiMenuCommand_t	src/ui/ui_public.h	/^uiMenuCommand_t;$/;"	t	typeref:enum:__anon494
uiProbingJB	src/client/cl_ui.c	/^static jmp_buf uiProbingJB;$/;"	v	file:
uiStarted	src/client/client.h	/^	qboolean	uiStarted;$/;"	m	struct:__anon90
uiTick	src/client/libmumblelink.c	/^	uint32_t uiTick;$/;"	m	struct:__anon104	file:
uiVersion	src/client/libmumblelink.c	/^	uint32_t uiVersion;$/;"	m	struct:__anon104	file:
ui_alienTeamVoteActive	src/cgame/cg_main.c	/^vmCvar_t  ui_alienTeamVoteActive;$/;"	v
ui_arenaInfos	src/ui/ui_gameinfo.c	/^static char   *ui_arenaInfos[MAX_ARENAS];$/;"	v	file:
ui_bigFont	src/ui/ui_main.c	/^vmCvar_t  ui_bigFont;$/;"	v
ui_botInfos	src/ui/ui_gameinfo.c	/^static char   *ui_botInfos[MAX_BOTS];$/;"	v	file:
ui_browserShowEmpty	src/ui/ui_main.c	/^vmCvar_t  ui_browserShowEmpty;$/;"	v
ui_browserShowFull	src/ui/ui_main.c	/^vmCvar_t  ui_browserShowFull;$/;"	v
ui_carriage	src/cgame/cg_main.c	/^vmCvar_t  ui_carriage;$/;"	v
ui_chatCommands	src/ui/ui_main.c	/^vmCvar_t  ui_chatCommands;$/;"	v
ui_currentClass	src/cgame/cg_main.c	/^vmCvar_t  ui_currentClass;$/;"	v
ui_dedicated	src/ui/ui_main.c	/^vmCvar_t  ui_dedicated;$/;"	v
ui_developer	src/ui/ui_main.c	/^vmCvar_t  ui_developer;$/;"	v
ui_dialog	src/cgame/cg_main.c	/^vmCvar_t  ui_dialog;$/;"	v
ui_emoticons	src/ui/ui_main.c	/^vmCvar_t  ui_emoticons;$/;"	v
ui_findPlayer	src/ui/ui_main.c	/^vmCvar_t  ui_findPlayer;$/;"	v
ui_humanTeamVoteActive	src/cgame/cg_main.c	/^vmCvar_t  ui_humanTeamVoteActive;$/;"	v
ui_lastServerRefresh_0	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_0;$/;"	v
ui_lastServerRefresh_0_time	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_0_time;$/;"	v
ui_lastServerRefresh_1	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_1;$/;"	v
ui_lastServerRefresh_1_time	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_1_time;$/;"	v
ui_lastServerRefresh_2	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_2;$/;"	v
ui_lastServerRefresh_2_time	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_2_time;$/;"	v
ui_lastServerRefresh_3	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_3;$/;"	v
ui_lastServerRefresh_3_time	src/ui/ui_main.c	/^vmCvar_t  ui_lastServerRefresh_3_time;$/;"	v
ui_netSource	src/ui/ui_main.c	/^vmCvar_t  ui_netSource;$/;"	v
ui_numArenas	src/ui/ui_gameinfo.c	/^static int    ui_numArenas;$/;"	v	file:
ui_numBots	src/ui/ui_gameinfo.c	/^int       ui_numBots;$/;"	v
ui_selectedMap	src/ui/ui_main.c	/^vmCvar_t  ui_selectedMap;$/;"	v
ui_serverStatusTimeOut	src/ui/ui_main.c	/^vmCvar_t  ui_serverStatusTimeOut;$/;"	v
ui_smallFont	src/ui/ui_main.c	/^vmCvar_t  ui_smallFont;$/;"	v
ui_stages	src/cgame/cg_main.c	/^vmCvar_t  ui_stages;$/;"	v
ui_textWrapCache	src/ui/ui_main.c	/^vmCvar_t  ui_textWrapCache;$/;"	v
ui_voteActive	src/cgame/cg_main.c	/^vmCvar_t  ui_voteActive;$/;"	v
ui_warmup	src/cgame/cg_main.c	/^vmCvar_t  ui_warmup;$/;"	v
ui_winner	src/ui/ui_main.c	/^vmCvar_t  ui_winner;$/;"	v
uicmd	src/ui/ui_atoms.c	/^struct uicmd$/;"	s	file:
uid	src/tools/lcc/src/symbolic.c	/^static int off, maxoff, uid = 0, verbose = 0, html = 0;$/;"	v	file:
uint16_t	src/game/bg_lib.h	/^typedef unsigned short uint16_t;$/;"	t
uint16_t	src/qcommon/q_shared.h	/^  typedef unsigned __int16 uint16_t;$/;"	t
uint32_t	src/client/libmumblelink.c	26;"	d	file:
uint32_t	src/game/bg_lib.h	/^typedef unsigned  long uint32_t;$/;"	t
uint32_t	src/qcommon/q_shared.h	/^  typedef unsigned __int32 uint32_t;$/;"	t
uint64_t	src/qcommon/q_shared.h	/^  typedef unsigned __int64 uint64_t;$/;"	t
uint8_t	src/game/bg_lib.h	/^typedef unsigned  char uint8_t;$/;"	t
uint8_t	src/qcommon/q_shared.h	/^  typedef unsigned __int8 uint8_t;$/;"	t
uivm	src/client/cl_ui.c	/^vm_t *uivm;$/;"	v
unLockFlag	src/server/sqlite3.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
unary	src/tools/lcc/src/expr.c	/^static Tree unary(void) {$/;"	f	file:
uncondAlienWin	src/game/g_local.h	/^  qboolean          uncondAlienWin;$/;"	m	struct:__anon316
uncondHumanWin	src/game/g_local.h	/^  qboolean          uncondHumanWin;$/;"	m	struct:__anon316
undag	src/tools/lcc/src/dag.c	/^static Node undag(Node forest) {$/;"	f	file:
unicodeAddExceptions	src/server/sqlite3.c	/^static int unicodeAddExceptions($/;"	f	file:
unicodeClose	src/server/sqlite3.c	/^static int unicodeClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
unicodeCreate	src/server/sqlite3.c	/^static int unicodeCreate($/;"	f	file:
unicodeDestroy	src/server/sqlite3.c	/^static int unicodeDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
unicodeFunc	src/server/sqlite3.c	/^static void unicodeFunc($/;"	f	file:
unicodeIsAlnum	src/server/sqlite3.c	/^static int unicodeIsAlnum(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsException	src/server/sqlite3.c	/^static int unicodeIsException(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeNext	src/server/sqlite3.c	/^static int unicodeNext($/;"	f	file:
unicodeOpen	src/server/sqlite3.c	/^static int unicodeOpen($/;"	f	file:
unicode_cursor	src/server/sqlite3.c	/^struct unicode_cursor {$/;"	s	file:
unicode_cursor	src/server/sqlite3.c	/^typedef struct unicode_cursor unicode_cursor;$/;"	t	typeref:struct:unicode_cursor	file:
unicode_tokenizer	src/server/sqlite3.c	/^struct unicode_tokenizer {$/;"	s	file:
unicode_tokenizer	src/server/sqlite3.c	/^typedef struct unicode_tokenizer unicode_tokenizer;$/;"	t	typeref:struct:unicode_tokenizer	file:
uniformBuffer	src/renderergl2/tr_local.h	/^	char  *uniformBuffer;$/;"	m	struct:shaderProgram_s
uniformBufferOffsets	src/renderergl2/tr_local.h	/^	short uniformBufferOffsets[UNIFORM_COUNT]; \/\/ max 32767\/64=511 uniforms$/;"	m	struct:shaderProgram_s
uniformInfo_s	src/renderergl2/tr_glsl.c	/^typedef struct uniformInfo_s$/;"	s	file:
uniformInfo_t	src/renderergl2/tr_glsl.c	/^uniformInfo_t;$/;"	t	typeref:struct:uniformInfo_s	file:
uniform_t	src/renderergl2/tr_local.h	/^} uniform_t;$/;"	t	typeref:enum:__anon38
uniforms	src/renderergl2/tr_local.h	/^	GLint uniforms[UNIFORM_COUNT];$/;"	m	struct:shaderProgram_s
uniformsInfo	src/renderergl2/tr_glsl.c	/^static uniformInfo_t uniformsInfo[] =$/;"	v	file:
unionhideset	src/tools/lcc/cpp/hideset.c	/^unionhideset(int hs1, int hs2)$/;"	f
uniqNotNull	src/server/sqlite3.c	/^  unsigned uniqNotNull:1;  \/* True if UNIQUE and NOT NULL for all columns *\/$/;"	m	struct:Index	file:
unique	src/qcommon/files.c	/^	qboolean	unique;$/;"	m	struct:qfile_us	file:
uniqueTest	src/game/bg_public.h	/^  qboolean      uniqueTest;$/;"	m	struct:__anon353
unix	src/tools/lcc/doc/install.html	/^<h2><a NAME="unix">Installation on UNIX<\/a><\/h2>$/;"	a
unixAccess	src/server/sqlite3.c	/^static int unixAccess($/;"	f	file:
unixCheckReservedLock	src/server/sqlite3.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixClose	src/server/sqlite3.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixCurrentTime	src/server/sqlite3.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTime	src/server/sqlite3.c	33773;"	d	file:
unixCurrentTimeInt64	src/server/sqlite3.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixDelete	src/server/sqlite3.c	/^static int unixDelete($/;"	f	file:
unixDeviceCharacteristics	src/server/sqlite3.c	/^static int unixDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
unixDlClose	src/server/sqlite3.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	src/server/sqlite3.c	33639;"	d	file:
unixDlError	src/server/sqlite3.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	src/server/sqlite3.c	33637;"	d	file:
unixDlOpen	src/server/sqlite3.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	src/server/sqlite3.c	33636;"	d	file:
unixDlSym	src/server/sqlite3.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	src/server/sqlite3.c	33638;"	d	file:
unixEnterMutex	src/server/sqlite3.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixFetch	src/server/sqlite3.c	/^static int unixFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
unixFile	src/server/sqlite3.c	/^struct unixFile {$/;"	s	file:
unixFile	src/server/sqlite3.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFileControl	src/server/sqlite3.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileId	src/server/sqlite3.c	/^struct unixFileId {$/;"	s	file:
unixFileLock	src/server/sqlite3.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileSize	src/server/sqlite3.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFullPathname	src/server/sqlite3.c	/^static int unixFullPathname($/;"	f	file:
unixGetLastError	src/server/sqlite3.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetSystemCall	src/server/sqlite3.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetTempname	src/server/sqlite3.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixGetpagesize	src/server/sqlite3.c	/^static int unixGetpagesize(void){$/;"	f	file:
unixInodeInfo	src/server/sqlite3.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	src/server/sqlite3.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixLeaveMutex	src/server/sqlite3.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLock	src/server/sqlite3.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLogError	src/server/sqlite3.c	28627;"	d	file:
unixLogErrorAtLine	src/server/sqlite3.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixMapfile	src/server/sqlite3.c	/^static int unixMapfile(unixFile *pFd, i64 nMap){$/;"	f	file:
unixModeBit	src/server/sqlite3.c	/^static void unixModeBit(unixFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
unixMutexHeld	src/server/sqlite3.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixNextSystemCall	src/server/sqlite3.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixOpen	src/server/sqlite3.c	/^static int unixOpen($/;"	f	file:
unixOpenSharedMemory	src/server/sqlite3.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixRandomness	src/server/sqlite3.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRead	src/server/sqlite3.c	/^static int unixRead($/;"	f	file:
unixRemapfile	src/server/sqlite3.c	/^static void unixRemapfile($/;"	f	file:
unixSectorSize	src/server/sqlite3.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSectorSize	src/server/sqlite3.c	/^static int unixSectorSize(sqlite3_file *id){$/;"	f	file:
unixSetSystemCall	src/server/sqlite3.c	/^static int unixSetSystemCall($/;"	f	file:
unixShm	src/server/sqlite3.c	/^struct unixShm {$/;"	s	file:
unixShm	src/server/sqlite3.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShmBarrier	src/server/sqlite3.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	src/server/sqlite3.c	32202;"	d	file:
unixShmLock	src/server/sqlite3.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	src/server/sqlite3.c	32201;"	d	file:
unixShmMap	src/server/sqlite3.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	src/server/sqlite3.c	32200;"	d	file:
unixShmNode	src/server/sqlite3.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	src/server/sqlite3.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmPurge	src/server/sqlite3.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmRegionPerMap	src/server/sqlite3.c	/^static int unixShmRegionPerMap(void){$/;"	f	file:
unixShmSystemLock	src/server/sqlite3.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmUnmap	src/server/sqlite3.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	src/server/sqlite3.c	32203;"	d	file:
unixSleep	src/server/sqlite3.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSync	src/server/sqlite3.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixTempFileDir	src/server/sqlite3.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTruncate	src/server/sqlite3.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixUnfetch	src/server/sqlite3.c	/^static int unixUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
unixUnlock	src/server/sqlite3.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixUnmapfile	src/server/sqlite3.c	/^static void unixUnmapfile(unixFile *pFd){$/;"	f	file:
unixWrite	src/server/sqlite3.c	/^static int unixWrite($/;"	f	file:
unix_syscall	src/server/sqlite3.c	/^static struct unix_syscall {$/;"	s	file:
unlaggedBackup	src/game/g_local.h	/^  unlagged_t          unlaggedBackup;$/;"	m	struct:gclient_s
unlaggedCalc	src/game/g_local.h	/^  unlagged_t          unlaggedCalc;$/;"	m	struct:gclient_s
unlaggedHist	src/game/g_local.h	/^  unlagged_t          unlaggedHist[ MAX_UNLAGGED_MARKERS ];$/;"	m	struct:gclient_s
unlaggedIndex	src/game/g_local.h	/^  int unlaggedIndex;$/;"	m	struct:__anon316
unlaggedTime	src/game/g_local.h	/^  int                 unlaggedTime;$/;"	m	struct:gclient_s
unlaggedTimes	src/game/g_local.h	/^  int unlaggedTimes[ MAX_UNLAGGED_MARKERS ];$/;"	m	struct:__anon316
unlagged_s	src/game/g_local.h	/^typedef struct unlagged_s {$/;"	s
unlagged_t	src/game/g_local.h	/^} unlagged_t;$/;"	t	typeref:struct:unlagged_s
unlikely	src/server/sqlite3.c	9514;"	d	file:
unlinkAfterEvent	src/game/g_local.h	/^  qboolean          unlinkAfterEvent;$/;"	m	struct:gentity_s
unlist	src/tools/lcc/src/dag.c	/^static void unlist(void) {$/;"	f	file:
unlockBtreeIfUnused	src/server/sqlite3.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeMutex	src/server/sqlite3.c	/^static void SQLITE_NOINLINE unlockBtreeMutex(Btree *p){$/;"	f	file:
unlock_notify	src/server/sqlite3.c	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
unpack_data	src/qcommon/packing.c	/^char *unpack_data;$/;"	v
unpack_float	src/qcommon/packing.c	/^int unpack_float( float *out ) {$/;"	f
unpack_int	src/qcommon/packing.c	/^int unpack_int( int *out ) {$/;"	f
unpack_max	src/qcommon/packing.c	/^int unpack_max;$/;"	v
unpack_start	src/qcommon/packing.c	/^void unpack_start( char *data, int max ) {$/;"	f
unpack_text	src/qcommon/packing.c	/^int unpack_text( int size, char *out, int max) {$/;"	f
unpack_text2	src/qcommon/packing.c	/^int unpack_text2( char *out, int max ) {$/;"	f
unpack_text3	src/qcommon/packing.c	/^char *unpack_text3( void ) {$/;"	f
unqual	src/tools/lcc/src/c.h	39;"	d
unsentBuffer	src/qcommon/qcommon.h	/^	byte		unsentBuffer[MAX_MSGLEN];$/;"	m	struct:__anon422
unsentFragmentStart	src/qcommon/qcommon.h	/^	int			unsentFragmentStart;$/;"	m	struct:__anon422
unsentFragments	src/qcommon/qcommon.h	/^	qboolean	unsentFragments;$/;"	m	struct:__anon422
unsentLength	src/qcommon/qcommon.h	/^	int			unsentLength;$/;"	m	struct:__anon422
unsetsource	src/tools/lcc/cpp/lex.c	/^unsetsource(void)$/;"	f
unsigned_char	src/tools/lcc/src/c.h	/^	unsigned unsigned_char:1;$/;"	m	struct:interface
unsignedchar	src/tools/lcc/src/types.c	/^Type unsignedchar;		\/* unsigned char *\/$/;"	v
unsignedlong	src/tools/lcc/src/types.c	/^Type unsignedlong;		\/* unsigned long int *\/$/;"	v
unsignedlonglong	src/tools/lcc/src/types.c	/^Type unsignedlonglong;		\/* unsigned long long int *\/$/;"	v
unsignedptr	src/tools/lcc/src/types.c	/^Type unsignedptr;		\/* unsigned type to hold void* *\/$/;"	v
unsignedshort	src/tools/lcc/src/types.c	/^Type unsignedshort;		\/* unsigned short int *\/$/;"	v
unsignedtype	src/tools/lcc/src/types.c	/^Type unsignedtype;		\/* unsigned int *\/$/;"	v
untestedTerms	src/server/sqlite3.c	/^  u8 untestedTerms;         \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo	file:
unused	src/server/sqlite3.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
up	src/game/bg_local.h	/^  vec3_t    forward, right, up;$/;"	m	struct:__anon324
up	src/game/g_weapon.c	/^static  vec3_t  forward, right, up;$/;"	v	file:
up	src/tools/lcc/src/c.h	/^	Symbol up;$/;"	m	struct:symbol
upMoveTime	src/cgame/cg_local.h	/^  int           upMoveTime;$/;"	m	struct:__anon249
upcalls	src/tools/lcc/doc/4.html	/^<h2><a NAME="upcalls">5.12 Upcalls<\/a><\/h2>$/;"	a
updateAccumulator	src/server/sqlite3.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateAnglesTime	src/game/bg_public.h	/^  int    updateAnglesTime;$/;"	m	struct:__anon330
updateChallenge	src/client/client.h	/^	char		updateChallenge[MAX_TOKEN_CHARS];$/;"	m	struct:__anon90
updateInfoString	src/client/client.h	/^	char		updateInfoString[MAX_INFO_STRING];$/;"	m	struct:__anon90
updateInfoString	src/ui/ui_public.h	/^  char      updateInfoString[MAX_STRING_CHARS];$/;"	m	struct:__anon492
updateMapping	src/server/sqlite3.c	/^static int updateMapping($/;"	f	file:
updateMaxBlobsize	src/server/sqlite3.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateServer	src/client/client.h	/^	netadr_t	updateServer;$/;"	m	struct:__anon90
updateVirtualTable	src/server/sqlite3.c	/^static void updateVirtualTable($/;"	f	file:
update_hook	src/server/sqlite3.c	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines	file:
upgrade	src/cgame/cg_local.h	/^  int         upgrade; $/;"	m	struct:__anon243
upgrade	src/cgame/cg_local.h	/^  upgrade_t upgrade;$/;"	m	struct:__anon242
upgrade	src/ui/ui_local.h	/^    upgrade_t   upgrade;$/;"	m	union:__anon515::__anon516
upgradeAttributes_t	src/game/bg_public.h	/^} upgradeAttributes_t;$/;"	t	typeref:struct:__anon356
upgradeClassIconShader	src/cgame/cg_local.h	/^  qhandle_t   upgradeClassIconShader;$/;"	m	struct:__anon251
upgradeIcon	src/cgame/cg_local.h	/^  qhandle_t   upgradeIcon;$/;"	m	struct:upgradeInfo_s
upgradeInfo_s	src/cgame/cg_local.h	/^typedef struct upgradeInfo_s$/;"	s
upgradeInfo_t	src/cgame/cg_local.h	/^} upgradeInfo_t;$/;"	t	typeref:struct:upgradeInfo_s
upgrade_t	src/game/bg_public.h	/^} upgrade_t;$/;"	t	typeref:enum:__anon336
upgrades	src/game/bg_misc.c	/^  upgrade_t         upgrades[ UP_NUM_UPGRADES ];$/;"	m	struct:gameElements_s	file:
upgrades	src/ui/ui_local.h	/^  int         upgrades;$/;"	m	struct:__anon518
uploadHeight	src/renderercommon/tr_common.h	/^	int			uploadWidth, uploadHeight;	\/\/ after power of two and picmip but not including clamp to MAX_TEXTURE_SIZE$/;"	m	struct:image_s
uploadWidth	src/renderercommon/tr_common.h	/^	int			uploadWidth, uploadHeight;	\/\/ after power of two and picmip but not including clamp to MAX_TEXTURE_SIZE$/;"	m	struct:image_s
upmove	src/qcommon/q_shared.h	/^	signed char	forwardmove, rightmove, upmove;$/;"	m	struct:usercmd_s
upperFunc	src/server/sqlite3.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
uptr	src/server/sqlite3.c	/^  typedef u32 uptr;$/;"	t	file:
uptr	src/server/sqlite3.c	/^  typedef u64 uptr;$/;"	t	file:
uptr	src/server/sqlite3.c	/^  typedef uintptr_t uptr;$/;"	t	file:
uri_boolean	src/server/sqlite3.c	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
uri_int64	src/server/sqlite3.c	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
uri_parameter	src/server/sqlite3.c	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
us	src/qcommon/vm_powerpc.c	/^		unsigned short us[2];$/;"	m	union:source_instruction_s::__anon453	file:
us	src/qcommon/vm_sparc.c	/^		unsigned short	us[2];$/;"	m	union:src_insn::__anon484	file:
usable	src/game/bg_public.h	/^  qboolean      usable;$/;"	m	struct:__anon353
usable	src/game/bg_public.h	/^  qboolean  usable;$/;"	m	struct:__anon356
usable	src/server/sqlite3.c	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
usable	src/server/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usableSize	src/server/sqlite3.c	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared	file:
use	src/game/g_local.h	/^  void              (*use)( gentity_t *self, gentity_t *other, gentity_t *activator );$/;"	m	struct:gentity_s
use	src/tools/lcc/src/sym.c	/^void use(Symbol p, Coordinate src) {$/;"	f
useInternalVao	src/renderergl2/tr_local.h	/^	qboolean    useInternalVao;$/;"	m	struct:shaderCommands_s
useJournal	src/server/sqlite3.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useRandomRowid	src/server/sqlite3.c	/^  Bool useRandomRowid:1;\/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor	file:
useSortingIdx	src/server/sqlite3.c	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo	file:
useUnlagged	src/game/g_local.h	/^  qboolean            useUnlagged;$/;"	m	struct:__anon311
usecount	src/tools/lcc/src/config.h	/^	int usecount;$/;"	m	struct:__anon277
used	src/cgame/cg_local.h	/^  qboolean                used;$/;"	m	struct:trailBeamNode_s
used	src/game/g_local.h	/^  qboolean      used;$/;"	m	struct:zap_s
used	src/game/g_local.h	/^  qboolean    used;$/;"	m	struct:unlagged_s
used	src/qcommon/common.c	/^	int		used;			\/\/ total bytes used$/;"	m	struct:__anon449	file:
used	src/renderergl1/tr_local.h	/^	int		used;$/;"	m	struct:__anon164
used	src/renderergl2/tr_local.h	/^	int		used;$/;"	m	struct:__anon64
usedAsColumnCache	src/server/sqlite3.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
usedmask	src/tools/lcc/src/gen.c	/^unsigned usedmask[2];$/;"	v
user_data	src/server/sqlite3.c	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
usercmd_s	src/qcommon/q_shared.h	/^typedef struct usercmd_s {$/;"	s
usercmd_t	src/qcommon/q_shared.h	/^} usercmd_t;$/;"	t	typeref:struct:usercmd_s
userinfo	src/server/server.h	/^	char			userinfo[MAX_INFO_STRING];		\/\/ name, etc$/;"	m	struct:client_s
uses	src/tools/lcc/src/c.h	/^	List uses;$/;"	m	struct:symbol
uses	src/tools/lcc/src/gen.c	/^static int uses(Node p, Regnode rn) {$/;"	f	file:
usesBuildPointZone	src/game/g_local.h	/^  int               usesBuildPointZone;             \/\/ does it use a zone?$/;"	m	struct:gentity_s
usesEnergy	src/game/bg_public.h	/^  qboolean  usesEnergy;$/;"	m	struct:__anon355
usesSpriteMissle	src/cgame/cg_local.h	/^  qboolean    usesSpriteMissle;$/;"	m	struct:weaponInfoMode_s
usesStmtJournal	src/server/sqlite3.c	/^  bft usesStmtJournal:1;  \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe	file:
usingSocks	src/qcommon/net_ip.c	/^static qboolean usingSocks = qfalse;$/;"	v	file:
v	src/qcommon/q_shared.h	/^	float	v[3];$/;"	m	struct:__anon462
v	src/server/sqlite3.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v	src/server/sqlite3.c	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame	file:
v	src/server/sqlite3.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
v	src/tools/lcc/src/c.h	/^			Value v;$/;"	m	struct:symbol::__anon296::__anon300
v	src/tools/lcc/src/c.h	/^		Value v;$/;"	m	union:tree::__anon304
v	src/ui/ui_local.h	/^  } v;$/;"	m	struct:__anon515	typeref:union:__anon515::__anon516
v1	src/server/sqlite3.c	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk	file:
v2	src/server/sqlite3.c	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk	file:
vRes	src/renderercommon/tr_image_bmp.c	/^	unsigned vRes;$/;"	m	struct:__anon110	file:
v_dmg_pitch	src/cgame/cg_local.h	/^  float         v_dmg_pitch;$/;"	m	struct:__anon249
v_dmg_roll	src/cgame/cg_local.h	/^  float         v_dmg_roll;$/;"	m	struct:__anon249
v_dmg_time	src/cgame/cg_local.h	/^  float         v_dmg_time;$/;"	m	struct:__anon249
va	src/qcommon/q_shared.c	/^char	* QDECL va( char *format, ... ) {$/;"	f
va_arg	src/game/bg_lib.h	40;"	d
va_end	src/game/bg_lib.h	41;"	d
va_list	src/game/bg_lib.h	/^typedef char *  va_list;$/;"	t
va_start	src/game/bg_lib.h	39;"	d
vacuumFinalize	src/server/sqlite3.c	/^static int vacuumFinalize(sqlite3 *db, sqlite3_stmt *pStmt, char **pzErrMsg){$/;"	f	file:
val	src/asm/matha.s	/^#define	val	4$/;"	d
val	src/tools/lcc/cpp/cpp.h	/^	char	val;		\/* value as preprocessor name *\/$/;"	m	struct:nlist
val	src/tools/lcc/cpp/eval.c	/^	long	val;$/;"	m	struct:value	file:
val	src/tools/lcc/cpp/nlist.c	/^	int	val;$/;"	m	struct:kwtab	file:
val	src/ui/ui_shared.c	/^    float val;$/;"	m	union:exprToken_s::__anon520	file:
valid	src/cgame/cg_local.h	/^  qboolean              valid;$/;"	m	struct:centity_s
valid	src/cgame/cg_local.h	/^  qboolean              valid;$/;"	m	struct:particleEjector_s
valid	src/cgame/cg_local.h	/^  qboolean              valid;$/;"	m	struct:particleSystem_s
valid	src/cgame/cg_local.h	/^  qboolean            valid;$/;"	m	struct:trailSystem_s
valid	src/cgame/cg_local.h	/^  qboolean          valid;$/;"	m	struct:particle_s
valid	src/cgame/cg_local.h	/^  qboolean          valid;$/;"	m	struct:trailBeam_s
valid	src/client/client.h	/^	qboolean		valid;			\/\/ cleared if delta parsing was invalid$/;"	m	struct:__anon84
valid	src/ui/ui_local.h	/^  qboolean  valid;$/;"	m	struct:__anon509
validHMS	src/server/sqlite3.c	/^  char validHMS;     \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validJD	src/server/sqlite3.c	/^  char validJD;      \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validPPS	src/cgame/cg_local.h	/^  qboolean      validPPS;                           \/\/ clear until the first call to CG_PredictPlayerState$/;"	m	struct:__anon249
validTZ	src/server/sqlite3.c	/^  char validTZ;      \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validYMD	src/server/sqlite3.c	/^  char validYMD;     \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
valid_bo	src/qcommon/vm_powerpc_asm.c	/^valid_bo (long value, int dialect, int extract)$/;"	f	file:
validate	src/qcommon/q_shared.h	/^	qboolean	validate;$/;"	m	struct:cvar_s
vals	src/tools/lcc/cpp/eval.c	/^struct value vals[NSTAK], *vp;$/;"	v	typeref:struct:value
value	src/game/bg_lib.c	/^  float value;$/;"	m	union:__anon372	file:
value	src/game/bg_public.h	/^  int           value;$/;"	m	struct:__anon353
value	src/game/bg_public.h	/^  int       value;$/;"	m	struct:__anon349
value	src/qcommon/q_shared.h	/^	float			value;				\/\/ atof( string )$/;"	m	struct:cvar_s
value	src/qcommon/q_shared.h	/^	float		value;$/;"	m	struct:__anon468
value	src/server/sqlite3.c	/^  struct {int value; int mask;} yy207;$/;"	m	struct:__anon216::__anon217	file:
value	src/tools/asm/q3asm.c	/^	int		value;$/;"	m	struct:symbol_s	file:
value	src/tools/lcc/cpp/eval.c	/^struct value {$/;"	s	file:
value	src/tools/lcc/src/c.h	/^		int value;$/;"	m	union:symbol::__anon296
value	src/tools/lcc/src/c.h	/^typedef union value {$/;"	u
value	src/tools/lcc/src/expr.c	/^Tree value(Tree p) {$/;"	f
value	src/ui/ui_shared.c	/^  float value;$/;"	m	struct:__anon523	file:
valueBytes	src/server/sqlite3.c	/^static SQLITE_NOINLINE int valueBytes(sqlite3_value *pVal, u8 enc){$/;"	f	file:
valueFromExpr	src/server/sqlite3.c	/^static int valueFromExpr($/;"	f	file:
valueFromFunction	src/server/sqlite3.c	/^static int valueFromFunction($/;"	f	file:
valueFromFunction	src/server/sqlite3.c	67567;"	d	file:
valueNew	src/server/sqlite3.c	/^static sqlite3_value *valueNew(sqlite3 *db, struct ValueNewStat4Ctx *p){$/;"	f	file:
valueToText	src/server/sqlite3.c	/^static SQLITE_NOINLINE const void *valueToText(sqlite3_value* pVal, u8 enc){$/;"	f	file:
value_blob	src/server/sqlite3.c	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes	src/server/sqlite3.c	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes16	src/server/sqlite3.c	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_double	src/server/sqlite3.c	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_dup	src/server/sqlite3.c	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_free	src/server/sqlite3.c	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int	src/server/sqlite3.c	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int64	src/server/sqlite3.c	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_numeric_type	src/server/sqlite3.c	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_s	src/qcommon/parse.c	/^typedef struct value_s$/;"	s	file:
value_subtype	src/server/sqlite3.c	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_t	src/qcommon/parse.c	/^} value_t;$/;"	t	typeref:struct:value_s	file:
value_text	src/server/sqlite3.c	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16	src/server/sqlite3.c	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16be	src/server/sqlite3.c	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16le	src/server/sqlite3.c	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_type	src/server/sqlite3.c	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
values	src/client/cl_scrn.c	/^static	float		values[1024];$/;"	v	file:
values	src/tools/lcc/src/c.h	/^			long *values;$/;"	m	struct:code::__anon291::__anon295
values	src/tools/lcc/src/c.h	/^	long *values;$/;"	m	struct:swtch
vangles	src/cgame/cg_local.h	/^  vec3_t    vangles;$/;"	m	struct:__anon246
vanillaQ3Compatibility	src/tools/asm/q3asm.c	/^	qboolean vanillaQ3Compatibility;$/;"	m	struct:options_s	file:
vao	src/renderergl2/tr_local.h	/^	uint32_t        vao;$/;"	m	struct:vao_s
vao	src/renderergl2/tr_local.h	/^	vao_t          *vao;$/;"	m	struct:srfBspSurface_s
vao	src/renderergl2/tr_local.h	/^	vao_t          *vao;$/;"	m	struct:srfVaoMdvMesh_s
vao	src/renderergl2/tr_local.h	/^	vao_t       *vao;$/;"	m	struct:shaderCommands_s
vaoAttrib_s	src/renderergl2/tr_local.h	/^typedef struct vaoAttrib_s$/;"	s
vaoAttrib_t	src/renderergl2/tr_local.h	/^vaoAttrib_t;$/;"	t	typeref:struct:vaoAttrib_s
vaoSurfaces	src/renderergl2/tr_local.h	/^	srfVaoMdvMesh_t  *vaoSurfaces;$/;"	m	struct:mdvModel_s
vaoUsage_t	src/renderergl2/tr_local.h	/^} vaoUsage_t;$/;"	t	typeref:enum:__anon10
vao_s	src/renderergl2/tr_local.h	/^typedef struct vao_s$/;"	s
vao_t	src/renderergl2/tr_local.h	/^} vao_t;$/;"	t	typeref:struct:vao_s
vaos	src/renderergl2/tr_local.h	/^	vao_t					*vaos[MAX_VAOS];$/;"	m	struct:__anon63
var	src/tools/lcc/src/c.h	/^		Symbol var;$/;"	m	union:code::__anon291
variadic	src/tools/lcc/src/types.c	/^int variadic(Type ty) {$/;"	f
vbl	src/tools/lcc/src/config.h	/^	Symbol vbl;$/;"	m	struct:__anon275
vcall	src/tools/lcc/src/enode.c	/^Tree vcall(Symbol func, Type ty, ...) {$/;"	f
vdbeAssertFieldCountWithinLimits	src/server/sqlite3.c	/^static void vdbeAssertFieldCountWithinLimits($/;"	f	file:
vdbeAssertFieldCountWithinLimits	src/server/sqlite3.c	71682;"	d	file:
vdbeChangeP4Full	src/server/sqlite3.c	/^static void SQLITE_NOINLINE vdbeChangeP4Full($/;"	f	file:
vdbeClrCopy	src/server/sqlite3.c	/^static SQLITE_NOINLINE void vdbeClrCopy(Mem *pTo, const Mem *pFrom, int eType){$/;"	f	file:
vdbeCommit	src/server/sqlite3.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeCompareMemString	src/server/sqlite3.c	/^static int vdbeCompareMemString($/;"	f	file:
vdbeFreeOpArray	src/server/sqlite3.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeIncrBgPopulate	src/server/sqlite3.c	/^static int vdbeIncrBgPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrFree	src/server/sqlite3.c	/^static void vdbeIncrFree(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrMergerNew	src/server/sqlite3.c	/^static int vdbeIncrMergerNew($/;"	f	file:
vdbeIncrMergerSetThreads	src/server/sqlite3.c	/^static void vdbeIncrMergerSetThreads(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulate	src/server/sqlite3.c	/^static int vdbeIncrPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulateThread	src/server/sqlite3.c	/^static void *vdbeIncrPopulateThread(void *pCtx){$/;"	f	file:
vdbeIncrSwap	src/server/sqlite3.c	/^static int vdbeIncrSwap(IncrMerger *pIncr){$/;"	f	file:
vdbeInvokeSqllog	src/server/sqlite3.c	/^static void vdbeInvokeSqllog(Vdbe *v){$/;"	f	file:
vdbeInvokeSqllog	src/server/sqlite3.c	70806;"	d	file:
vdbeLeave	src/server/sqlite3.c	/^static SQLITE_NOINLINE void vdbeLeave(Vdbe *p){$/;"	f	file:
vdbeMemAddTerminator	src/server/sqlite3.c	/^static SQLITE_NOINLINE int vdbeMemAddTerminator(Mem *pMem){$/;"	f	file:
vdbeMemClear	src/server/sqlite3.c	/^static SQLITE_NOINLINE void vdbeMemClear(Mem *p){$/;"	f	file:
vdbeMemClearExternAndSetNull	src/server/sqlite3.c	/^static SQLITE_NOINLINE void vdbeMemClearExternAndSetNull(Mem *p){$/;"	f	file:
vdbeMemFromBtreeResize	src/server/sqlite3.c	/^static SQLITE_NOINLINE int vdbeMemFromBtreeResize($/;"	f	file:
vdbeMergeEngineCompare	src/server/sqlite3.c	/^static void vdbeMergeEngineCompare($/;"	f	file:
vdbeMergeEngineFree	src/server/sqlite3.c	/^static void vdbeMergeEngineFree(MergeEngine *pMerger){$/;"	f	file:
vdbeMergeEngineInit	src/server/sqlite3.c	/^static int vdbeMergeEngineInit($/;"	f	file:
vdbeMergeEngineLevel0	src/server/sqlite3.c	/^static int vdbeMergeEngineLevel0($/;"	f	file:
vdbeMergeEngineNew	src/server/sqlite3.c	/^static MergeEngine *vdbeMergeEngineNew(int nReader){$/;"	f	file:
vdbeMergeEngineStep	src/server/sqlite3.c	/^static int vdbeMergeEngineStep($/;"	f	file:
vdbePmaReadBlob	src/server/sqlite3.c	/^static int vdbePmaReadBlob($/;"	f	file:
vdbePmaReadVarint	src/server/sqlite3.c	/^static int vdbePmaReadVarint(PmaReader *p, u64 *pnOut){$/;"	f	file:
vdbePmaReaderBgIncrInit	src/server/sqlite3.c	/^static void *vdbePmaReaderBgIncrInit(void *pCtx){$/;"	f	file:
vdbePmaReaderClear	src/server/sqlite3.c	/^static void vdbePmaReaderClear(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderIncrInit	src/server/sqlite3.c	/^static int vdbePmaReaderIncrInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrMergeInit	src/server/sqlite3.c	/^static int vdbePmaReaderIncrMergeInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderInit	src/server/sqlite3.c	/^static int vdbePmaReaderInit($/;"	f	file:
vdbePmaReaderNext	src/server/sqlite3.c	/^static int vdbePmaReaderNext(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderSeek	src/server/sqlite3.c	/^static int vdbePmaReaderSeek($/;"	f	file:
vdbePmaWriteBlob	src/server/sqlite3.c	/^static void vdbePmaWriteBlob(PmaWriter *p, u8 *pData, int nData){$/;"	f	file:
vdbePmaWriteVarint	src/server/sqlite3.c	/^static void vdbePmaWriteVarint(PmaWriter *p, u64 iVal){$/;"	f	file:
vdbePmaWriterFinish	src/server/sqlite3.c	/^static int vdbePmaWriterFinish(PmaWriter *p, i64 *piEof){$/;"	f	file:
vdbePmaWriterInit	src/server/sqlite3.c	/^static void vdbePmaWriterInit($/;"	f	file:
vdbeRecordCompareDebug	src/server/sqlite3.c	/^static int vdbeRecordCompareDebug($/;"	f	file:
vdbeRecordCompareInt	src/server/sqlite3.c	/^static int vdbeRecordCompareInt($/;"	f	file:
vdbeRecordCompareString	src/server/sqlite3.c	/^static int vdbeRecordCompareString($/;"	f	file:
vdbeRecordDecodeInt	src/server/sqlite3.c	/^static i64 vdbeRecordDecodeInt(u32 serial_type, const u8 *aKey){$/;"	f	file:
vdbeReleaseAndSetInt64	src/server/sqlite3.c	/^static SQLITE_NOINLINE void vdbeReleaseAndSetInt64(Mem *pMem, i64 val){$/;"	f	file:
vdbeSafety	src/server/sqlite3.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	src/server/sqlite3.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSortAllocUnpacked	src/server/sqlite3.c	/^static int vdbeSortAllocUnpacked(SortSubtask *pTask){$/;"	f	file:
vdbeSortSubtaskCleanup	src/server/sqlite3.c	/^static void vdbeSortSubtaskCleanup(sqlite3 *db, SortSubtask *pTask){$/;"	f	file:
vdbeSorterAddToTree	src/server/sqlite3.c	/^static int vdbeSorterAddToTree($/;"	f	file:
vdbeSorterBlockDebug	src/server/sqlite3.c	/^static void vdbeSorterBlockDebug($/;"	f	file:
vdbeSorterBlockDebug	src/server/sqlite3.c	82932;"	d	file:
vdbeSorterCompare	src/server/sqlite3.c	/^static int vdbeSorterCompare($/;"	f	file:
vdbeSorterCompareInt	src/server/sqlite3.c	/^static int vdbeSorterCompareInt($/;"	f	file:
vdbeSorterCompareTail	src/server/sqlite3.c	/^static int vdbeSorterCompareTail($/;"	f	file:
vdbeSorterCompareText	src/server/sqlite3.c	/^static int vdbeSorterCompareText($/;"	f	file:
vdbeSorterCreateThread	src/server/sqlite3.c	/^static int vdbeSorterCreateThread($/;"	f	file:
vdbeSorterExtendFile	src/server/sqlite3.c	/^static void vdbeSorterExtendFile(sqlite3 *db, sqlite3_file *pFd, i64 nByte){$/;"	f	file:
vdbeSorterExtendFile	src/server/sqlite3.c	83123;"	d	file:
vdbeSorterFlushPMA	src/server/sqlite3.c	/^static int vdbeSorterFlushPMA(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterFlushThread	src/server/sqlite3.c	/^static void *vdbeSorterFlushThread(void *pCtx){$/;"	f	file:
vdbeSorterGetCompare	src/server/sqlite3.c	/^static SorterCompare vdbeSorterGetCompare(VdbeSorter *p){$/;"	f	file:
vdbeSorterJoinAll	src/server/sqlite3.c	/^static int vdbeSorterJoinAll(VdbeSorter *pSorter, int rcin){$/;"	f	file:
vdbeSorterJoinAll	src/server/sqlite3.c	82992;"	d	file:
vdbeSorterJoinThread	src/server/sqlite3.c	/^static int vdbeSorterJoinThread(SortSubtask *pTask){$/;"	f	file:
vdbeSorterJoinThread	src/server/sqlite3.c	82993;"	d	file:
vdbeSorterListToPMA	src/server/sqlite3.c	/^static int vdbeSorterListToPMA(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterMapFile	src/server/sqlite3.c	/^static int vdbeSorterMapFile(SortSubtask *pTask, SorterFile *pFile, u8 **pp){$/;"	f	file:
vdbeSorterMerge	src/server/sqlite3.c	/^static void vdbeSorterMerge($/;"	f	file:
vdbeSorterMergeTreeBuild	src/server/sqlite3.c	/^static int vdbeSorterMergeTreeBuild($/;"	f	file:
vdbeSorterOpenTempFile	src/server/sqlite3.c	/^static int vdbeSorterOpenTempFile($/;"	f	file:
vdbeSorterPopulateDebug	src/server/sqlite3.c	/^static void vdbeSorterPopulateDebug($/;"	f	file:
vdbeSorterPopulateDebug	src/server/sqlite3.c	82931;"	d	file:
vdbeSorterRecordFree	src/server/sqlite3.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRewindDebug	src/server/sqlite3.c	/^static void vdbeSorterRewindDebug(const char *zEvent){$/;"	f	file:
vdbeSorterRewindDebug	src/server/sqlite3.c	82930;"	d	file:
vdbeSorterRowkey	src/server/sqlite3.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterSetupMerge	src/server/sqlite3.c	/^static int vdbeSorterSetupMerge(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterSort	src/server/sqlite3.c	/^static int vdbeSorterSort(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterTreeDepth	src/server/sqlite3.c	/^static int vdbeSorterTreeDepth(int nPMA){$/;"	f	file:
vdbeSorterWorkDebug	src/server/sqlite3.c	/^static void vdbeSorterWorkDebug(SortSubtask *pTask, const char *zEvent){$/;"	f	file:
vdbeSorterWorkDebug	src/server/sqlite3.c	82929;"	d	file:
vdbeTakeBranch	src/server/sqlite3.c	/^  static void vdbeTakeBranch(int iSrcLine, u8 I, u8 M){$/;"	f	file:
vdbeUnbind	src/server/sqlite3.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
vdbeVComment	src/server/sqlite3.c	/^static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){$/;"	f	file:
vec2_t	src/qcommon/q_shared.h	/^typedef vec_t vec2_t[2];$/;"	t
vec2_t	src/tools/asm/mathlib.h	/^typedef vec_t vec2_t[3];$/;"	t
vec3_origin	src/qcommon/q_math.c	/^vec3_t	vec3_origin = {0,0,0};$/;"	v
vec3_t	src/qcommon/q_shared.h	/^typedef vec_t vec3_t[3];$/;"	t
vec3_t	src/tools/asm/mathlib.h	/^typedef vec_t vec3_t[3];$/;"	t
vec3struct_t	src/qcommon/q_shared.h	/^} vec3struct_t;$/;"	t	typeref:struct:__anon462
vec4_t	src/qcommon/q_shared.h	/^typedef vec_t vec4_t[4];$/;"	t
vec4_t	src/tools/asm/mathlib.h	/^typedef vec_t vec4_t[4];$/;"	t
vec5_t	src/qcommon/q_shared.h	/^typedef vec_t vec5_t[5];$/;"	t
vec_t	src/qcommon/q_shared.h	/^typedef float vec_t;$/;"	t
vec_t	src/tools/asm/mathlib.h	/^typedef double vec_t;$/;"	t
vec_t	src/tools/asm/mathlib.h	/^typedef float vec_t;$/;"	t
vecswap	src/game/bg_lib.c	114;"	d	file:
vectoangles	src/qcommon/q_math.c	/^void vectoangles( const vec3_t value1, vec3_t angles ) {$/;"	f
vectoyaw	src/game/g_utils.c	/^float vectoyaw( const vec3_t vec )$/;"	f
velMoveType	src/cgame/cg_local.h	/^  pMoveType_t     velMoveType;$/;"	m	struct:baseParticle_s
velMoveValues	src/cgame/cg_local.h	/^  pMoveValues_t   velMoveValues;$/;"	m	struct:baseParticle_s
velocity	src/cgame/cg_local.h	/^	vec3_t		velocity;$/;"	m	struct:__anon256
velocity	src/cgame/cg_local.h	/^  vec3_t            velocity;$/;"	m	struct:particle_s
velocity	src/client/client.h	/^	vec3_t		velocity;$/;"	m	struct:alternatePlayerState_s
velocity	src/client/snd_local.h	/^	vec3_t		velocity;$/;"	m	struct:loopSound_s
velocity	src/qcommon/msg.c	/^	vec3_t		velocity;$/;"	m	struct:alternatePlayerState_s	file:
velocity	src/qcommon/q_shared.h	/^	vec3_t		velocity;$/;"	m	struct:playerState_s
vendor_string	src/renderercommon/tr_types.h	/^	char					vendor_string[MAX_STRING_CHARS];$/;"	m	struct:__anon120
verbose	src/tools/asm/cmdlib.c	/^qboolean verbose = qfalse;$/;"	v
verbose	src/tools/asm/q3asm.c	/^	qboolean verbose;$/;"	m	struct:options_s	file:
verbose	src/tools/lcc/cpp/unix.c	/^int	verbose;$/;"	v
verbose	src/tools/lcc/etc/lcc.c	/^static int verbose;		\/* incremented for each -v *\/$/;"	v	file:
verbose	src/tools/lcc/src/symbolic.c	/^static int off, maxoff, uid = 0, verbose = 0, html = 0;$/;"	v	file:
verifyDbFile	src/server/sqlite3.c	/^static void verifyDbFile(unixFile *pFile){$/;"	f	file:
version	src/qcommon/qfiles.h	/^	int			version;$/;"	m	struct:__anon393
version	src/qcommon/qfiles.h	/^	int			version;$/;"	m	struct:__anon404
version	src/qcommon/qfiles.h	/^	int			version;$/;"	m	struct:__anon406
version	src/renderercommon/iqm.h	/^    unsigned int version;$/;"	m	struct:iqmheader
version	src/renderercommon/tr_image_pcx.c	/^	char	version;$/;"	m	struct:__anon124	file:
versionFunc	src/server/sqlite3.c	/^static void versionFunc($/;"	f	file:
version_string	src/renderercommon/tr_types.h	/^	char					version_string[MAX_STRING_CHARS];$/;"	m	struct:__anon120
vertex	src/renderercommon/iqm.h	/^    unsigned int vertex[3];$/;"	m	struct:iqmtriangle
vertexAnimation	src/renderergl2/tr_local.h	/^	qboolean        vertexAnimation;$/;"	m	struct:__anon57
vertexArrayObject	src/renderergl2/tr_local.h	/^	qboolean vertexArrayObject;$/;"	m	struct:__anon60
vertexAttribs	src/renderergl2/tr_local.h	/^	int         vertexAttribs;          \/\/ not all shaders will need all data to be gathered$/;"	m	struct:shader_s
vertexAttribsEnabled	src/renderergl2/tr_local.h	/^	uint32_t        vertexAttribsEnabled;  \/\/ global if no VAOs, tess only otherwise$/;"	m	struct:__anon57
vertexAttribsInterpolation	src/renderergl2/tr_local.h	/^	float           vertexAttribsInterpolation;$/;"	m	struct:__anon57
vertexColors	src/renderergl2/tr_local.h	/^	vec4_t			vertexColors;$/;"	m	struct:__anon45
vertexShader	src/renderergl2/tr_local.h	/^	GLhandleARB     vertexShader;$/;"	m	struct:shaderProgram_s
vertexes2D	src/renderergl1/tr_local.h	/^	qboolean	vertexes2D;		\/\/ shader needs to be finished$/;"	m	struct:__anon162
vertexes2D	src/renderergl2/tr_local.h	/^	qboolean	vertexes2D;		\/\/ shader needs to be finished$/;"	m	struct:__anon62
vertexesSize	src/renderergl2/tr_local.h	/^	int             vertexesSize;	\/\/ amount of memory data allocated for all vertices in bytes$/;"	m	struct:vao_s
vertexesVBO	src/renderergl2/tr_local.h	/^	uint32_t        vertexesVBO;$/;"	m	struct:vao_s
verticalMargin	src/cgame/cg_local.h	/^  float         verticalMargin;$/;"	m	struct:__anon252
verts	src/cgame/cg_local.h	/^  polyVert_t        verts[ MAX_VERTS_ON_POLY ];$/;"	m	struct:markPoly_s
verts	src/renderercommon/tr_types.h	/^	polyVert_t			*verts;$/;"	m	struct:poly_s
verts	src/renderergl1/tr_local.h	/^	drawVert_t		*verts;$/;"	m	struct:__anon153
verts	src/renderergl1/tr_local.h	/^	drawVert_t		verts[1];		\/\/ variable sized$/;"	m	struct:srfGridMesh_s
verts	src/renderergl1/tr_local.h	/^	polyVert_t		*verts;$/;"	m	struct:srfPoly_s
verts	src/renderergl2/tr_local.h	/^	mdvVertex_t    *verts;$/;"	m	struct:mdvSurface_s
verts	src/renderergl2/tr_local.h	/^	polyVert_t		*verts;$/;"	m	struct:srfPoly_s
verts	src/renderergl2/tr_local.h	/^	srfVert_t      *verts;$/;"	m	struct:srfBspSurface_s
vfields	src/tools/lcc/src/c.h	/^			unsigned vfields:1;$/;"	m	struct:symbol::__anon296::__anon298
vfprint	src/tools/lcc/src/output.c	/^void vfprint(FILE *f, char *bp, const char *fmt, va_list ap) {$/;"	f
vfsFlags	src/server/sqlite3.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsList	src/server/sqlite3.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	src/server/sqlite3.c	18211;"	d	file:
vfsUnlink	src/server/sqlite3.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfs_find	src/server/sqlite3.c	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_register	src/server/sqlite3.c	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	file:
vfs_unregister	src/server/sqlite3.c	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	file:
viaCoroutine	src/server/sqlite3.c	/^      unsigned viaCoroutine :1;  \/* Implemented as a co-routine *\/$/;"	m	struct:SrcList::SrcList_item::__anon198	file:
vidHeight	src/renderercommon/tr_types.h	/^	int						vidWidth, vidHeight;$/;"	m	struct:__anon120
vidRestartTime	src/sdl/sdl_input.c	/^static int vidRestartTime = 0;$/;"	v	file:
vidWidth	src/renderercommon/tr_types.h	/^	int						vidWidth, vidHeight;$/;"	m	struct:__anon120
videoFrameCommand_t	src/renderergl1/tr_local.h	/^} videoFrameCommand_t;$/;"	t	typeref:struct:__anon173
videoFrameCommand_t	src/renderergl2/tr_local.h	/^} videoFrameCommand_t;$/;"	t	typeref:struct:__anon73
videoMapHandle	src/renderergl1/tr_local.h	/^	int				videoMapHandle;$/;"	m	struct:__anon141
videoMapHandle	src/renderergl2/tr_local.h	/^	int				videoMapHandle;$/;"	m	struct:__anon23
viewBloodShader	src/cgame/cg_local.h	/^  qhandle_t   viewBloodShader;$/;"	m	struct:__anon251
viewCluster	src/renderergl1/tr_local.h	/^	int						viewCluster;$/;"	m	struct:__anon163
viewCluster	src/renderergl2/tr_local.h	/^	int						viewCluster;$/;"	m	struct:__anon63
viewCount	src/renderergl1/tr_local.h	/^	int						viewCount;		\/\/ incremented every view (twice a scene if portaled)$/;"	m	struct:__anon163
viewCount	src/renderergl1/tr_local.h	/^	int					viewCount;		\/\/ if == tr.viewCount, already added$/;"	m	struct:msurface_s
viewCount	src/renderergl2/tr_local.h	/^	int						viewCount;		\/\/ incremented every view (twice a scene if portaled)$/;"	m	struct:__anon63
viewOrigin	src/renderergl1/tr_local.h	/^	vec3_t		viewOrigin;		\/\/ viewParms->or.origin in local coordinates$/;"	m	struct:__anon129
viewOrigin	src/renderergl2/tr_local.h	/^	vec3_t		viewOrigin;		\/\/ viewParms->or.origin in local coordinates$/;"	m	struct:__anon9
viewOrigin	src/renderergl2/tr_local.h	/^	vec3_t viewOrigin;$/;"	m	struct:pshadow_s
viewParmFlags_t	src/renderergl2/tr_local.h	/^} viewParmFlags_t;$/;"	t	typeref:enum:__anon42
viewParms	src/renderergl1/tr_local.h	/^	viewParms_t				viewParms;$/;"	m	struct:__anon163
viewParms	src/renderergl1/tr_local.h	/^	viewParms_t	viewParms;$/;"	m	struct:__anon162
viewParms	src/renderergl1/tr_local.h	/^	viewParms_t	viewParms;$/;"	m	struct:__anon171
viewParms	src/renderergl2/tr_local.h	/^	viewParms_t				viewParms;$/;"	m	struct:__anon63
viewParms	src/renderergl2/tr_local.h	/^	viewParms_t	viewParms;$/;"	m	struct:__anon62
viewParms	src/renderergl2/tr_local.h	/^	viewParms_t	viewParms;$/;"	m	struct:__anon71
viewParms	src/renderergl2/tr_local.h	/^	viewParms_t	viewParms;$/;"	m	struct:__anon77
viewParms_t	src/renderergl1/tr_local.h	/^} viewParms_t;$/;"	t	typeref:struct:__anon150
viewParms_t	src/renderergl2/tr_local.h	/^} viewParms_t;$/;"	t	typeref:struct:__anon43
viewRadius	src/renderergl2/tr_local.h	/^	float viewRadius;$/;"	m	struct:pshadow_s
viewSurfaces	src/renderergl2/tr_local.h	/^	int         *viewSurfaces;$/;"	m	struct:__anon49
viewangles	src/cgame/cg_local.h	/^	vec3_t		viewangles;		\/\/ for fixed views$/;"	m	struct:__anon256
viewangles	src/client/client.h	/^	vec3_t		viewangles;		\/\/ for fixed views$/;"	m	struct:alternatePlayerState_s
viewangles	src/client/client.h	/^	vec3_t		viewangles;$/;"	m	struct:__anon86
viewangles	src/qcommon/msg.c	/^	vec3_t		viewangles;		\/\/ for fixed views$/;"	m	struct:alternatePlayerState_s	file:
viewangles	src/qcommon/q_shared.h	/^	vec3_t		viewangles;		\/\/ for fixed views$/;"	m	struct:playerState_s
viewaxis	src/renderercommon/tr_types.h	/^	vec3_t		viewaxis[3];		\/\/ transformation matrix$/;"	m	struct:__anon115
viewaxis	src/renderergl1/tr_local.h	/^	vec3_t		viewaxis[3];		\/\/ transformation matrix$/;"	m	struct:__anon147
viewaxis	src/renderergl2/tr_local.h	/^	vec3_t		viewaxis[3];		\/\/ transformation matrix$/;"	m	struct:__anon39
viewheight	src/cgame/cg_local.h	/^	int			viewheight;$/;"	m	struct:__anon256
viewheight	src/client/client.h	/^	int			viewheight;$/;"	m	struct:alternatePlayerState_s
viewheight	src/game/bg_public.h	/^  int       viewheight;$/;"	m	struct:__anon350
viewheight	src/qcommon/msg.c	/^	int			viewheight;$/;"	m	struct:alternatePlayerState_s	file:
viewheight	src/qcommon/q_shared.h	/^	int			viewheight;$/;"	m	struct:playerState_s
vieworg	src/renderercommon/tr_types.h	/^	vec3_t		vieworg;$/;"	m	struct:__anon115
vieworg	src/renderergl1/tr_local.h	/^	vec3_t		vieworg;$/;"	m	struct:__anon147
vieworg	src/renderergl2/tr_local.h	/^	vec3_t		vieworg;$/;"	m	struct:__anon39
viewportHeight	src/renderergl1/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon150
viewportHeight	src/renderergl2/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon43
viewportWidth	src/renderergl1/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon150
viewportWidth	src/renderergl2/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon43
viewportX	src/renderergl1/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon150
viewportX	src/renderergl2/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon43
viewportY	src/renderergl1/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon150
viewportY	src/renderergl2/tr_local.h	/^	int			viewportX, viewportY, viewportWidth, viewportHeight;$/;"	m	struct:__anon43
vimm	src/qcommon/vm_sparc.c	/^static void vimm(unsigned int val, int bits, int shift, int sgned, int arg_index)$/;"	f	file:
vis	src/renderergl1/tr_local.h	/^	const byte	*vis;			\/\/ may be passed in by CM_LoadMap to save space$/;"	m	struct:__anon157
vis	src/renderergl2/tr_local.h	/^	const byte	*vis;			\/\/ may be passed in by CM_LoadMap to save space$/;"	m	struct:__anon49
visBounds	src/renderergl1/tr_local.h	/^	vec3_t		visBounds[2];$/;"	m	struct:__anon150
visBounds	src/renderergl2/tr_local.h	/^	vec3_t		visBounds[2];$/;"	m	struct:__anon43
visClusters	src/renderergl2/tr_local.h	/^	int						visClusters[MAX_VISCOUNTS];$/;"	m	struct:__anon63
visCount	src/renderergl1/tr_local.h	/^	int						visCount;		\/\/ incremented every time a new vis cluster is entered$/;"	m	struct:__anon163
visCounts	src/renderergl2/tr_local.h	/^	int						visCounts[MAX_VISCOUNTS];	\/\/ incremented every time a new vis cluster is entered$/;"	m	struct:__anon63
visCounts	src/renderergl2/tr_local.h	/^	int             visCounts[MAX_VISCOUNTS];	\/\/ node needs to be traversed if current$/;"	m	struct:mnode_s
visIndex	src/renderergl2/tr_local.h	/^	int						visIndex;$/;"	m	struct:__anon63
vised	src/qcommon/cm_local.h	/^	qboolean	vised;			\/\/ if false, visibility is just a single cluster of ffs$/;"	m	struct:__anon440
visframe	src/renderergl1/tr_local.h	/^	int			visframe;		\/\/ node needs to be traversed if current$/;"	m	struct:mnode_s
visibility	src/qcommon/cm_local.h	/^	byte		*visibility;$/;"	m	struct:__anon440
visible	src/cgame/cg_local.h	/^  qboolean  visible;       \/\/ Status is visble?$/;"	m	struct:buildableStatus_s
visible	src/client/client.h	/^	qboolean	visible;$/;"	m	struct:__anon89
visible	src/renderergl1/tr_flares.c	/^	qboolean	visible;			\/\/ state of last test$/;"	m	struct:flare_s	file:
visible	src/renderergl2/tr_flares.c	/^	qboolean	visible;			\/\/ state of last test$/;"	m	struct:flare_s	file:
visibleSide	src/qcommon/qfiles.h	/^	int			visibleSide;	\/\/ the brush side that ray tests need to clip against (-1 == none)$/;"	m	struct:__anon414
visit	src/tools/lcc/src/dag.c	/^static Node visit(Node p, int listed) {$/;"	f	file:
visit	src/tools/lcc/src/symbolic.c	/^static int visit(Node p, int n) {$/;"	f	file:
vislines	src/client/cl_console.c	/^	int		vislines;		\/\/ in scanlines$/;"	m	struct:__anon102	file:
vmCvar	src/cgame/cg_main.c	/^  vmCvar_t  *vmCvar;$/;"	m	struct:__anon260	file:
vmCvar	src/game/g_main.c	/^  vmCvar_t  *vmCvar;$/;"	m	struct:__anon371	file:
vmCvar	src/ui/ui_main.c	/^  vmCvar_t  *vmCvar;$/;"	m	struct:__anon490	file:
vmCvar_t	src/qcommon/q_shared.h	/^} vmCvar_t;$/;"	t	typeref:struct:__anon468
vmHeader_t	src/qcommon/qfiles.h	/^} vmHeader_t;$/;"	t	typeref:struct:__anon387
vmInterpret_t	src/qcommon/qcommon.h	/^} vmInterpret_t;$/;"	t	typeref:enum:__anon423
vmMagic	src/qcommon/qfiles.h	/^	int		vmMagic;$/;"	m	struct:__anon387
vmMain	src/cgame/cg_main.c	/^Q_EXPORT intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3,$/;"	f
vmMain	src/game/g_main.c	/^Q_EXPORT intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3, int arg4,$/;"	f
vmMain	src/ui/ui_main.c	/^Q_EXPORT intptr_t vmMain( int command, int arg0, int arg1, int arg2, int arg3,$/;"	f
vmSymbol_s	src/qcommon/vm_local.h	/^typedef struct vmSymbol_s {$/;"	s
vmSymbol_t	src/qcommon/vm_local.h	/^} vmSymbol_t;$/;"	t	typeref:struct:vmSymbol_s
vmTable	src/qcommon/vm.c	/^vm_t	vmTable[MAX_VM];$/;"	v
vm_arg	src/qcommon/vm_x86.c	/^intptr_t vm_arg;$/;"	v
vm_data_t	src/qcommon/vm_powerpc.c	/^} vm_data_t;$/;"	t	typeref:struct:VM_Data	file:
vm_data_t	src/qcommon/vm_sparc.c	/^} vm_data_t;$/;"	t	typeref:struct:VM_Data	file:
vm_debugLevel	src/qcommon/vm.c	/^int		vm_debugLevel;$/;"	v
vm_opInfo	src/qcommon/vm_powerpc.c	/^static const unsigned char vm_opInfo[256] =$/;"	v	file:
vm_opInfo	src/qcommon/vm_sparc.c	/^static const unsigned char vm_opInfo[256] =$/;"	v	file:
vm_opStackBase	src/qcommon/vm_x86.c	/^int *vm_opStackBase;$/;"	v
vm_opStackOfs	src/qcommon/vm_x86.c	/^uint8_t vm_opStackOfs;$/;"	v
vm_programStack	src/qcommon/vm_x86.c	/^int vm_programStack;$/;"	v
vm_s	src/qcommon/vm_local.h	/^struct vm_s {$/;"	s
vm_syscallNum	src/qcommon/vm_x86.c	/^int vm_syscallNum;$/;"	v
vm_t	src/qcommon/qcommon.h	/^typedef struct vm_s vm_t;$/;"	t	typeref:struct:vm_s
vmask	src/tools/lcc/src/gen.c	/^unsigned vmask[2];$/;"	v
vmprintf	src/server/sqlite3.c	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vmptr_t	src/qcommon/vm_local.h	/^typedef int	vmptr_t;$/;"	t
voice	src/cgame/cg_local.h	/^  char        voice[ MAX_VOICE_NAME_LEN ];$/;"	m	struct:__anon243
voice	src/game/g_local.h	/^  char                voice[ MAX_VOICE_NAME_LEN ];$/;"	m	struct:__anon311
voiceChannel_t	src/game/bg_public.h	/^} voiceChannel_t;$/;"	t	typeref:enum:__anon358
voiceChatBufferIn	src/cgame/cg_local.h	/^  int           voiceChatBufferIn;$/;"	m	struct:__anon249
voiceChatBufferOut	src/cgame/cg_local.h	/^  int           voiceChatBufferOut;$/;"	m	struct:__anon249
voiceChatTime	src/cgame/cg_local.h	/^  int           voiceChatTime;$/;"	m	struct:__anon249
voiceCmd_s	src/game/bg_public.h	/^typedef struct voiceCmd_s$/;"	s
voiceCmd_t	src/game/bg_public.h	/^} voiceCmd_t;$/;"	t	typeref:struct:voiceCmd_s
voiceEnthusiasm	src/game/g_local.h	/^  float               voiceEnthusiasm;$/;"	m	struct:gclient_s
voiceTime	src/cgame/cg_local.h	/^  int         voiceTime;$/;"	m	struct:__anon243
voiceTrack_s	src/game/bg_public.h	/^typedef struct voiceTrack_s$/;"	s
voiceTrack_t	src/game/bg_public.h	/^} voiceTrack_t;$/;"	t	typeref:struct:voiceTrack_s
voice_s	src/game/bg_public.h	/^typedef struct voice_s$/;"	s
voice_t	src/game/bg_public.h	/^} voice_t;$/;"	t	typeref:struct:voice_s
voices	src/cgame/cg_local.h	/^  voice_t       *voices;$/;"	m	struct:__anon253
voices	src/game/g_local.h	/^  voice_t           *voices;$/;"	m	struct:__anon316
voidFunction	src/ui/ui_shared.c	/^void voidFunction( void *var )$/;"	f
voidFunction2	src/ui/ui_shared.c	/^qboolean voidFunction2( itemDef_t *var1, int var2 )$/;"	f
voidptype	src/tools/lcc/src/types.c	/^Type voidptype;			\/* void* *\/$/;"	v
voidtype	src/tools/lcc/src/types.c	/^Type voidtype;			\/* basic types: void *\/$/;"	v
voipEnabled	src/client/client.h	/^	qboolean voipEnabled;$/;"	m	struct:__anon87
voipFlags	src/client/client.h	/^	uint8_t voipFlags;$/;"	m	struct:__anon87
voipGain	src/client/client.h	/^	float voipGain[MAX_CLIENTS];$/;"	m	struct:__anon87
voipIgnore	src/client/client.h	/^	qboolean voipIgnore[MAX_CLIENTS];$/;"	m	struct:__anon87
voipIncomingGeneration	src/client/client.h	/^	byte voipIncomingGeneration[MAX_CLIENTS];$/;"	m	struct:__anon87
voipIncomingSequence	src/client/client.h	/^	int voipIncomingSequence[MAX_CLIENTS];$/;"	m	struct:__anon87
voipMuteAll	src/client/client.h	/^	qboolean voipMuteAll;$/;"	m	struct:__anon87
voipOutgoingData	src/client/client.h	/^	byte voipOutgoingData[1024];$/;"	m	struct:__anon87
voipOutgoingDataFrames	src/client/client.h	/^	int voipOutgoingDataFrames;$/;"	m	struct:__anon87
voipOutgoingDataSize	src/client/client.h	/^	int voipOutgoingDataSize;$/;"	m	struct:__anon87
voipOutgoingGeneration	src/client/client.h	/^	byte voipOutgoingGeneration;$/;"	m	struct:__anon87
voipOutgoingSequence	src/client/client.h	/^	int voipOutgoingSequence;$/;"	m	struct:__anon87
voipPacket	src/server/server.h	/^	voipServerPacket_t *voipPacket[VOIP_QUEUE_LENGTH];$/;"	m	struct:client_s
voipPower	src/client/client.h	/^	float voipPower;$/;"	m	struct:__anon87
voipServerPacket_s	src/server/server.h	/^typedef struct voipServerPacket_s$/;"	s
voipServerPacket_t	src/server/server.h	/^} voipServerPacket_t;$/;"	t	typeref:struct:voipServerPacket_s
voipTargets	src/client/client.h	/^	uint8_t voipTargets[(MAX_CLIENTS + 7) \/ 8];$/;"	m	struct:__anon87
vote	src/game/g_local.h	/^  int                 vote;$/;"	m	struct:__anon311
voteActive	src/cgame/cg_local.h	/^  int           voteActive[ NUM_TEAMS ]; \/\/ Total number of active clients during a vote$/;"	m	struct:__anon253
voteAlarmPlay	src/cgame/cg_local.h	/^  qboolean      voteAlarmPlay[ NUM_TEAMS ];$/;"	m	struct:__anon253
voteAlarmSound	src/cgame/cg_local.h	/^  sfxHandle_t voteAlarmSound;$/;"	m	struct:__anon251
voteCaller	src/cgame/cg_local.h	/^  char          voteCaller[ NUM_TEAMS ][ MAX_NAME_LENGTH ];$/;"	m	struct:__anon253
voteCaller	src/game/g_local.h	/^  gclient_t         *voteCaller[ NUM_TEAMS ];     \/\/ client that called the vote$/;"	m	struct:__anon316
voteCast	src/cgame/cg_local.h	/^  int           voteCast[ NUM_TEAMS ];   \/\/ Total number of yes and no votes combined$/;"	m	struct:__anon253
voteCount	src/game/g_local.h	/^  int               voteCount;$/;"	m	struct:namelog_s
voteDelay	src/game/g_local.h	/^  int               voteDelay[ NUM_TEAMS ];       \/\/ it doesn't make sense to always delay vote execution$/;"	m	struct:__anon316
voteDisplayString	src/game/g_local.h	/^  char              voteDisplayString[ NUM_TEAMS ][ MAX_STRING_CHARS ];$/;"	m	struct:__anon316
voteExecuteTime	src/game/g_local.h	/^  int               voteExecuteTime[ NUM_TEAMS ]; \/\/ time the vote is executed$/;"	m	struct:__anon316
voteFailed	src/cgame/cg_local.h	/^  sfxHandle_t voteFailed;$/;"	m	struct:__anon251
voteModified	src/cgame/cg_local.h	/^  qboolean      voteModified[ NUM_TEAMS ]; \/\/ beep whenever changed$/;"	m	struct:__anon253
voteNo	src/game/g_local.h	/^  int               voteNo[ NUM_TEAMS ];$/;"	m	struct:__anon316
voteNow	src/cgame/cg_local.h	/^  sfxHandle_t voteNow;$/;"	m	struct:__anon251
votePassed	src/cgame/cg_local.h	/^  sfxHandle_t votePassed;$/;"	m	struct:__anon251
voteString	src/cgame/cg_local.h	/^  char          voteString[ NUM_VOTE_STRINGS ][ NUM_TEAMS ][ MAX_STRING_TOKENS ];$/;"	m	struct:__anon253
voteString	src/game/g_local.h	/^  char              voteString[ NUM_TEAMS ][ MAX_STRING_CHARS ];$/;"	m	struct:__anon316
voteString_t	src/qcommon/q_shared.h	/^} voteString_t;$/;"	t	typeref:enum:__anon466
voteThreshold	src/game/g_local.h	/^  int               voteThreshold[ NUM_TEAMS ];   \/\/ need at least this percent to pass$/;"	m	struct:__anon316
voteTime	src/cgame/cg_local.h	/^  int           voteTime[ NUM_TEAMS ];$/;"	m	struct:__anon253
voteTime	src/game/g_local.h	/^  int               voteTime[ NUM_TEAMS ];        \/\/ level.time vote was called$/;"	m	struct:__anon316
voteType	src/game/g_local.h	/^  vote_t            voteType[ NUM_TEAMS ];$/;"	m	struct:__anon316
voteYes	src/game/g_local.h	/^  int               voteYes[ NUM_TEAMS ];$/;"	m	struct:__anon316
vote_t	src/game/bg_public.h	/^} vote_t;$/;"	t	typeref:enum:__anon360
voted	src/game/g_local.h	/^  int                 voted;$/;"	m	struct:__anon311
voterInactivityTime	src/game/g_local.h	/^  int                 voterInactivityTime;   \/\/ doesn't count a client in vote results when time > this$/;"	m	struct:__anon311
vp	src/tools/lcc/cpp/cpp.h	/^	Tokenrow *vp;		\/* value as macro *\/$/;"	m	struct:nlist
vp	src/tools/lcc/cpp/eval.c	/^struct value vals[NSTAK], *vp;$/;"	v	typeref:struct:
vq2	src/client/cl_cin.c	/^static	unsigned short		vq2[256*16*4];$/;"	v	file:
vq4	src/client/cl_cin.c	/^static	unsigned short		vq4[256*64*4];$/;"	v	file:
vq8	src/client/cl_cin.c	/^static	unsigned short		vq8[256*256*4];$/;"	v	file:
vreport	src/tools/asm/q3asm.c	/^static int vreport (const char* fmt, va_list vp)$/;"	f	file:
vres	src/renderercommon/tr_image_pcx.c	/^	unsigned short	hres,vres;$/;"	m	struct:__anon124	file:
vscreensize	src/renderercommon/tr_image_pcx.c	/^	unsigned short	hscreensize, vscreensize;$/;"	m	struct:__anon124	file:
vsnprintf	src/server/sqlite3.c	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vtab	src/server/sqlite3.c	/^    } vtab;$/;"	m	union:WhereLoop::__anon212	typeref:struct:WhereLoop::__anon212::__anon214	file:
vtabBestIndex	src/server/sqlite3.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabCallConstructor	src/server/sqlite3.c	/^static int vtabCallConstructor($/;"	f	file:
vtabDisconnectAll	src/server/sqlite3.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabOnConflict	src/server/sqlite3.c	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3	file:
vtab_config	src/server/sqlite3.c	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines	file:
vtab_on_conflict	src/server/sqlite3.c	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
vtoa	src/tools/lcc/src/sym.c	/^char *vtoa(Type ty, Value v) {$/;"	f
vtos	src/game/g_utils.c	/^char *vtos( const vec3_t v )$/;"	f
vxworksFileId	src/server/sqlite3.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileList	src/server/sqlite3.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFindFileId	src/server/sqlite3.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksIoFinder	src/server/sqlite3.c	/^  *(*const vxworksIoFinder)(const char*,unixFile*) = vxworksIoFinderImpl;$/;"	v	file:
vxworksIoFinderImpl	src/server/sqlite3.c	/^static const sqlite3_io_methods *vxworksIoFinderImpl($/;"	f	file:
vxworksReleaseFileId	src/server/sqlite3.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksSimplifyName	src/server/sqlite3.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
w	src/renderergl1/tr_local.h	/^	float	w, h;$/;"	m	struct:__anon170
w	src/renderergl2/tr_local.h	/^	float	w, h;$/;"	m	struct:__anon70
w	src/renderergl2/tr_vbo.c	/^		signed int w:2;$/;"	m	struct:pack10_u::__anon1	file:
w	src/renderergl2/tr_vbo.c	/^		signed int w:8;$/;"	m	struct:pack8_u::__anon2	file:
w	src/ui/ui_local.h	/^  int w;$/;"	m	struct:__anon517
w	src/ui/ui_shared.h	/^  float w;    \/\/ width$/;"	m	struct:__anon498
wTriggers	src/game/g_local.h	/^  weapon_t          wTriggers[ WP_NUM_WEAPONS ];    \/\/ which weapons are triggers$/;"	m	struct:gentity_s
wait	src/game/g_local.h	/^  float             wait;$/;"	m	struct:gentity_s
wakeMarkShader	src/cgame/cg_local.h	/^  qhandle_t   wakeMarkShader;$/;"	m	struct:__anon251
walBusyLock	src/server/sqlite3.c	/^static int walBusyLock($/;"	f	file:
walCheckpoint	src/server/sqlite3.c	/^static int walCheckpoint($/;"	f	file:
walChecksumBytes	src/server/sqlite3.c	/^static void walChecksumBytes($/;"	f	file:
walCkptInfo	src/server/sqlite3.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCleanupHash	src/server/sqlite3.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walDecodeFrame	src/server/sqlite3.c	/^static int walDecodeFrame($/;"	f	file:
walEncodeFrame	src/server/sqlite3.c	/^static void walEncodeFrame($/;"	f	file:
walFrameOffset	src/server/sqlite3.c	51782;"	d	file:
walFramePage	src/server/sqlite3.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePgno	src/server/sqlite3.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walHash	src/server/sqlite3.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHashGet	src/server/sqlite3.c	/^static int walHashGet($/;"	f	file:
walIndexAppend	src/server/sqlite3.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexClose	src/server/sqlite3.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexHdr	src/server/sqlite3.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexPage	src/server/sqlite3.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexReadHdr	src/server/sqlite3.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexRecover	src/server/sqlite3.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexTryHdr	src/server/sqlite3.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexWriteHdr	src/server/sqlite3.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIteratorFree	src/server/sqlite3.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorInit	src/server/sqlite3.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorNext	src/server/sqlite3.c	/^static int walIteratorNext($/;"	f	file:
walLimitSize	src/server/sqlite3.c	/^static void walLimitSize(Wal *pWal, i64 nMax){$/;"	f	file:
walLockExclusive	src/server/sqlite3.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockName	src/server/sqlite3.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockShared	src/server/sqlite3.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walMerge	src/server/sqlite3.c	/^static void walMerge($/;"	f	file:
walMergesort	src/server/sqlite3.c	/^static void walMergesort($/;"	f	file:
walNextHash	src/server/sqlite3.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walPagesize	src/server/sqlite3.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walRestartHdr	src/server/sqlite3.c	/^static void walRestartHdr(Wal *pWal, u32 salt1){$/;"	f	file:
walRestartLog	src/server/sqlite3.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walRewriteChecksums	src/server/sqlite3.c	/^static int walRewriteChecksums(Wal *pWal, u32 iLast){$/;"	f	file:
walShmBarrier	src/server/sqlite3.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walSyncFlags	src/server/sqlite3.c	/^  u8 walSyncFlags;            \/* SYNC_NORMAL or SYNC_FULL for wal writes *\/$/;"	m	struct:Pager	file:
walTryBeginRead	src/server/sqlite3.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walUnlockExclusive	src/server/sqlite3.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockShared	src/server/sqlite3.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walWriteOneFrame	src/server/sqlite3.c	/^static int walWriteOneFrame($/;"	f	file:
walWriteToLog	src/server/sqlite3.c	/^static int walWriteToLog($/;"	f	file:
wal_autocheckpoint	src/server/sqlite3.c	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint	src/server/sqlite3.c	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint_v2	src/server/sqlite3.c	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines	file:
wal_hook	src/server/sqlite3.c	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
walk	src/tools/lcc/src/dag.c	/^void walk(Tree tp, int tlab, int flab) {$/;"	f
walkExpr	src/server/sqlite3.c	/^static SQLITE_NOINLINE int walkExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
walkerDepth	src/server/sqlite3.c	/^  int walkerDepth;                          \/* Number of subqueries *\/$/;"	m	struct:Walker	file:
walking	src/game/bg_local.h	/^  qboolean  walking;$/;"	m	struct:__anon324
wantToLock	src/server/sqlite3.c	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree	file:
wants_argb	src/tools/lcc/src/c.h	/^	unsigned wants_argb:1;$/;"	m	struct:interface
wants_callb	src/tools/lcc/src/c.h	/^	unsigned wants_callb:1;$/;"	m	struct:interface
wants_dag	src/tools/lcc/src/c.h	/^	unsigned wants_dag:1;$/;"	m	struct:interface
warmup	src/cgame/cg_local.h	/^  qboolean      warmup;                 \/\/ Is it currently pre-game warmup?$/;"	m	struct:__anon253
warmup1Time	src/game/g_local.h	/^  int               warmup1Time;                  \/\/ 3 minute warmup timeout$/;"	m	struct:__anon316
warmup2Time	src/game/g_local.h	/^  int               warmup2Time;                  \/\/ 1 minute warmup timeout$/;"	m	struct:__anon316
warn	src/tools/lcc/src/tree.c	/^static int warn;$/;"	v	file:
warnCount	src/game/g_admin.h	/^  int warnCount;$/;"	m	struct:g_admin_ban
warning	src/tools/lcc/src/error.c	/^void warning(const char *fmt, ...) {$/;"	f
wasDeadLastFrame	src/cgame/cg_local.h	/^  qboolean      wasDeadLastFrame;$/;"	m	struct:__anon249
wasPressed	src/client/client.h	/^	qboolean	wasPressed;		\/\/ set when down, not cleared when up$/;"	m	struct:__anon91
wasrefused	src/server/server.h	/^	qboolean	wasrefused;$/;"	m	struct:__anon187
waterlevel	src/game/bg_public.h	/^  int           waterlevel;$/;"	m	struct:pmove_s
waterlevel	src/game/g_local.h	/^  int               waterlevel;$/;"	m	struct:gentity_s
watertype	src/game/bg_public.h	/^  int           watertype;$/;"	m	struct:pmove_s
watertype	src/game/g_local.h	/^  int               watertype;$/;"	m	struct:gentity_s
watrInSound	src/cgame/cg_local.h	/^  sfxHandle_t watrInSound;$/;"	m	struct:__anon251
watrOutSound	src/cgame/cg_local.h	/^  sfxHandle_t watrOutSound;$/;"	m	struct:__anon251
watrUnSound	src/cgame/cg_local.h	/^  sfxHandle_t watrUnSound;$/;"	m	struct:__anon251
wav_codec	src/client/snd_codec_wav.c	/^snd_codec_t wav_codec =$/;"	v
wave	src/renderergl1/tr_local.h	/^	waveForm_t		wave;$/;"	m	struct:__anon140
wave	src/renderergl2/tr_local.h	/^	waveForm_t		wave;$/;"	m	struct:__anon22
waveForm_t	src/renderergl1/tr_local.h	/^} waveForm_t;$/;"	t	typeref:struct:__anon137
waveForm_t	src/renderergl2/tr_local.h	/^} waveForm_t;$/;"	t	typeref:struct:__anon19
wavinfo_t	src/client/snd_local.h	/^} wavinfo_t;$/;"	t	typeref:struct:__anon95
wbp	src/tools/lcc/cpp/tokens.c	/^static char *wbp = wbuf;$/;"	v	file:
wbuf	src/tools/lcc/cpp/tokens.c	/^static char wbuf[2*OBS];$/;"	v	file:
wc	src/server/sqlite3.c	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo	file:
wc	src/server/sqlite3.c	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo	file:
wcbuf	src/tools/lcc/src/lex.c	/^static unsigned int wcbuf[BUFSIZE+1];$/;"	v	file:
wcput	src/tools/lcc/src/lex.c	/^static void *wcput(int c, void *cl) {$/;"	f	file:
wctrlFlags	src/server/sqlite3.c	/^  u16 wctrlFlags;           \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo	file:
wd	src/tools/lcc/cpp/nlist.c	/^char	wd[128];$/;"	v
weapon	src/cgame/cg_local.h	/^	int			weapon;			\/\/ copied to entityState_t->weapon$/;"	m	struct:__anon256
weapon	src/cgame/cg_local.h	/^	int		weapon;			\/\/ determines weapon and flash model, etc$/;"	m	struct:__anon257
weapon	src/cgame/cg_local.h	/^  lerpFrame_t legs, torso, nonseg, weapon;$/;"	m	struct:__anon241
weapon	src/cgame/cg_local.h	/^  weapon_t  weapon;$/;"	m	struct:__anon242
weapon	src/client/client.h	/^	int			weapon;			\/\/ copied to entityState_t->weapon$/;"	m	struct:alternatePlayerState_s
weapon	src/client/client.h	/^	int		weapon;			\/\/ determines weapon and flash model, etc$/;"	m	struct:alternateEntityState_s
weapon	src/game/bg_public.h	/^  int                    weapon;$/;"	m	struct:voiceTrack_s
weapon	src/qcommon/msg.c	/^	int			weapon;			\/\/ copied to entityState_t->weapon$/;"	m	struct:alternatePlayerState_s	file:
weapon	src/qcommon/q_shared.h	/^	byte			weapon;           \/\/ weapon $/;"	m	struct:usercmd_s
weapon	src/qcommon/q_shared.h	/^	int			weapon;			\/\/ copied to entityState_t->weapon$/;"	m	struct:playerState_s
weapon	src/qcommon/q_shared.h	/^	int		weapon;			\/\/ determines weapon and flash model, etc$/;"	m	struct:entityState_s
weapon	src/ui/ui_local.h	/^    weapon_t    weapon;$/;"	m	union:__anon515::__anon516
weapon1Firing	src/cgame/cg_local.h	/^  qboolean      weapon1Firing;$/;"	m	struct:__anon249
weapon1Time	src/cgame/cg_local.h	/^  int           weapon1Time;                        \/\/ time when BUTTON_ATTACK went t->f f->t$/;"	m	struct:__anon249
weapon2Firing	src/cgame/cg_local.h	/^  qboolean      weapon2Firing;$/;"	m	struct:__anon249
weapon2Time	src/cgame/cg_local.h	/^  int           weapon2Time;                        \/\/ time when BUTTON_ATTACK2 went t->f f->t$/;"	m	struct:__anon249
weapon3Firing	src/cgame/cg_local.h	/^  qboolean      weapon3Firing;$/;"	m	struct:__anon249
weapon3Time	src/cgame/cg_local.h	/^  int           weapon3Time;                        \/\/ time when BUTTON_USE_HOLDABLE went t->f f->t$/;"	m	struct:__anon249
weaponAnim	src/qcommon/q_shared.h	/^	int			weaponAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:playerState_s
weaponAnim	src/qcommon/q_shared.h	/^	int		weaponAnim;		\/\/ mask off ANIM_TOGGLEBIT$/;"	m	struct:entityState_s
weaponAnimNumber_t	src/game/bg_public.h	/^} weaponAnimNumber_t;$/;"	t	typeref:enum:__anon344
weaponAnimation	src/cgame/cg_local.h	/^  int           weaponAnimation;$/;"	m	struct:__anon249
weaponAnimationTime	src/cgame/cg_local.h	/^  int           weaponAnimationTime;$/;"	m	struct:__anon249
weaponAttributes_t	src/game/bg_public.h	/^} weaponAttributes_t;$/;"	t	typeref:struct:__anon355
weaponEmptyClick	src/cgame/cg_local.h	/^  sfxHandle_t weaponEmptyClick;$/;"	m	struct:__anon251
weaponIcon	src/cgame/cg_local.h	/^  qhandle_t         weaponIcon;$/;"	m	struct:weaponInfo_s
weaponInfoMode_s	src/cgame/cg_local.h	/^typedef struct weaponInfoMode_s$/;"	s
weaponInfoMode_t	src/cgame/cg_local.h	/^} weaponInfoMode_t;$/;"	t	typeref:struct:weaponInfoMode_s
weaponInfo_s	src/cgame/cg_local.h	/^typedef struct weaponInfo_s$/;"	s
weaponInfo_t	src/cgame/cg_local.h	/^} weaponInfo_t;$/;"	t	typeref:struct:weaponInfo_s
weaponMidpoint	src/cgame/cg_local.h	/^  vec3_t            weaponMidpoint;   \/\/ so it will rotate centered instead of by tag$/;"	m	struct:weaponInfo_s
weaponMode_t	src/game/bg_public.h	/^} weaponMode_t;$/;"	t	typeref:enum:__anon334
weaponModel	src/cgame/cg_local.h	/^  qhandle_t         weaponModel;$/;"	m	struct:weaponInfo_s
weaponModel3rdPerson	src/cgame/cg_local.h	/^  qhandle_t         weaponModel3rdPerson;$/;"	m	struct:weaponInfo_s
weaponSelect	src/cgame/cg_local.h	/^  int           weaponSelect;$/;"	m	struct:__anon249
weaponSelectTime	src/cgame/cg_local.h	/^  int           weaponSelectTime;$/;"	m	struct:__anon249
weaponTime	src/cgame/cg_local.h	/^	int			weaponTime;$/;"	m	struct:__anon256
weaponTime	src/client/client.h	/^	int			weaponTime;$/;"	m	struct:alternatePlayerState_s
weaponTime	src/qcommon/msg.c	/^	int			weaponTime;$/;"	m	struct:alternatePlayerState_s	file:
weaponTime	src/qcommon/q_shared.h	/^	int			weaponTime;$/;"	m	struct:playerState_s
weapon_t	src/game/bg_public.h	/^} weapon_t;$/;"	t	typeref:enum:__anon335
weapons	src/game/bg_misc.c	/^  weapon_t          weapons[ WP_NUM_WEAPONS ];$/;"	m	struct:gameElements_s	file:
weapons	src/ui/ui_local.h	/^  int         weapons;$/;"	m	struct:__anon518
weaponstate	src/cgame/cg_local.h	/^	int			weaponstate;$/;"	m	struct:__anon256
weaponstate	src/client/client.h	/^	int			weaponstate;$/;"	m	struct:alternatePlayerState_s
weaponstate	src/qcommon/msg.c	/^	int			weaponstate;$/;"	m	struct:alternatePlayerState_s	file:
weaponstate	src/qcommon/q_shared.h	/^	int			weaponstate;$/;"	m	struct:playerState_s
weaponstate_t	src/game/bg_public.h	/^} weaponstate_t;$/;"	t	typeref:enum:__anon329
weight	src/qcommon/qcommon.h	/^	int		weight;$/;"	m	struct:nodetype
weights	src/qcommon/qfiles.h	/^	mdrWeight_t	weights[1];		\/\/ variable sized$/;"	m	struct:__anon395
wflag	src/tools/lcc/src/error.c	/^int wflag;		\/* != 0 to suppress warning messages *\/$/;"	v
where	src/tools/lcc/src/tree.c	/^int where = STMT;$/;"	v
whereAndInfoDelete	src/server/sqlite3.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereClauseInsert	src/server/sqlite3.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u16 wtFlags){$/;"	f	file:
whereCombineDisjuncts	src/server/sqlite3.c	/^static void whereCombineDisjuncts($/;"	f	file:
whereEqualScanEst	src/server/sqlite3.c	/^static int whereEqualScanEst($/;"	f	file:
whereForeignKeys	src/server/sqlite3.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereInScanEst	src/server/sqlite3.c	/^static int whereInScanEst($/;"	f	file:
whereInfoFree	src/server/sqlite3.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereKeyStats	src/server/sqlite3.c	/^static int whereKeyStats($/;"	f	file:
whereLikeOptimizationStringFixup	src/server/sqlite3.c	/^static void whereLikeOptimizationStringFixup($/;"	f	file:
whereLikeOptimizationStringFixup	src/server/sqlite3.c	121014;"	d	file:
whereLoopAddAll	src/server/sqlite3.c	/^static int whereLoopAddAll(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereLoopAddBtree	src/server/sqlite3.c	/^static int whereLoopAddBtree($/;"	f	file:
whereLoopAddBtreeIndex	src/server/sqlite3.c	/^static int whereLoopAddBtreeIndex($/;"	f	file:
whereLoopAddOr	src/server/sqlite3.c	/^static int whereLoopAddOr($/;"	f	file:
whereLoopAddVirtual	src/server/sqlite3.c	/^static int whereLoopAddVirtual($/;"	f	file:
whereLoopAddVirtualOne	src/server/sqlite3.c	/^static int whereLoopAddVirtualOne($/;"	f	file:
whereLoopAdjustCost	src/server/sqlite3.c	/^static void whereLoopAdjustCost(const WhereLoop *p, WhereLoop *pTemplate){$/;"	f	file:
whereLoopCheaperProperSubset	src/server/sqlite3.c	/^static int whereLoopCheaperProperSubset($/;"	f	file:
whereLoopClear	src/server/sqlite3.c	/^static void whereLoopClear(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClearUnion	src/server/sqlite3.c	/^static void whereLoopClearUnion(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopDelete	src/server/sqlite3.c	/^static void whereLoopDelete(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopFindLesser	src/server/sqlite3.c	/^static WhereLoop **whereLoopFindLesser($/;"	f	file:
whereLoopInit	src/server/sqlite3.c	/^static void whereLoopInit(WhereLoop *p){$/;"	f	file:
whereLoopInsert	src/server/sqlite3.c	/^static int whereLoopInsert(WhereLoopBuilder *pBuilder, WhereLoop *pTemplate){$/;"	f	file:
whereLoopOutputAdjust	src/server/sqlite3.c	/^static void whereLoopOutputAdjust($/;"	f	file:
whereLoopPrint	src/server/sqlite3.c	/^static void whereLoopPrint(WhereLoop *p, WhereClause *pWC){$/;"	f	file:
whereLoopResize	src/server/sqlite3.c	/^static int whereLoopResize(sqlite3 *db, WhereLoop *p, int n){$/;"	f	file:
whereLoopXfer	src/server/sqlite3.c	/^static int whereLoopXfer(sqlite3 *db, WhereLoop *pTo, WhereLoop *pFrom){$/;"	f	file:
whereNthSubterm	src/server/sqlite3.c	/^static WhereTerm *whereNthSubterm(WhereTerm *pTerm, int N){$/;"	f	file:
whereOrInfoDelete	src/server/sqlite3.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrInsert	src/server/sqlite3.c	/^static int whereOrInsert($/;"	f	file:
whereOrMove	src/server/sqlite3.c	/^static void whereOrMove(WhereOrSet *pDest, WhereOrSet *pSrc){$/;"	f	file:
whereOrName	src/server/sqlite3.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
wherePathName	src/server/sqlite3.c	/^static const char *wherePathName(WherePath *pPath, int nLoop, WhereLoop *pLast){$/;"	f	file:
wherePathSatisfiesOrderBy	src/server/sqlite3.c	/^static i8 wherePathSatisfiesOrderBy($/;"	f	file:
wherePathSolver	src/server/sqlite3.c	/^static int wherePathSolver(WhereInfo *pWInfo, LogEst nRowEst){$/;"	f	file:
whereRangeAdjust	src/server/sqlite3.c	/^static LogEst whereRangeAdjust(WhereTerm *pTerm, LogEst nNew){$/;"	f	file:
whereRangeScanEst	src/server/sqlite3.c	/^static int whereRangeScanEst($/;"	f	file:
whereRangeSkipScanEst	src/server/sqlite3.c	/^static int whereRangeSkipScanEst($/;"	f	file:
whereScanInit	src/server/sqlite3.c	/^static WhereTerm *whereScanInit($/;"	f	file:
whereScanNext	src/server/sqlite3.c	/^static WhereTerm *whereScanNext(WhereScan *pScan){$/;"	f	file:
whereShortCut	src/server/sqlite3.c	/^static int whereShortCut(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereSortingCost	src/server/sqlite3.c	/^static LogEst whereSortingCost($/;"	f	file:
whereTempTriggers	src/server/sqlite3.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
whereTermPrint	src/server/sqlite3.c	/^static void whereTermPrint(WhereTerm *pTerm, int iTerm){$/;"	f	file:
whereUsablePartialIndex	src/server/sqlite3.c	/^static int whereUsablePartialIndex(int iTab, WhereClause *pWC, Expr *pWhere){$/;"	f	file:
whilestmt	src/tools/lcc/src/stmt.c	/^static void whilestmt(int lab, Swtch swp, int lev) {$/;"	f	file:
whiteImage	src/renderergl1/tr_local.h	/^	image_t					*whiteImage;			\/\/ full of 0xff$/;"	m	struct:__anon163
whiteImage	src/renderergl2/tr_local.h	/^	image_t					*whiteImage;			\/\/ full of 0xff$/;"	m	struct:__anon63
whiteShader	src/cgame/cg_local.h	/^  qhandle_t   whiteShader;$/;"	m	struct:__anon251
whiteShader	src/client/client.h	/^	qhandle_t	whiteShader;$/;"	m	struct:__anon90
whiteShader	src/ui/ui_shared.h	/^  qhandle_t  whiteShader;$/;"	m	struct:__anon506
whitespace_p	src/qcommon/parse.c	/^  char *whitespace_p;             \/\/begin of the white space$/;"	m	struct:script_s	file:
whitespace_p	src/qcommon/parse.c	/^  char *whitespace_p;           \/\/start of white space before token$/;"	m	struct:token_s	file:
widechar	src/tools/lcc/src/types.c	/^Type widechar;			\/* unsigned type that represents wchar_t *\/$/;"	v
width	src/client/cl_avi.c	/^  int           width, height;$/;"	m	struct:aviFileData_s	file:
width	src/client/cl_cin.c	/^	int					xpos, ypos, width, height;$/;"	m	struct:__anon100	file:
width	src/client/snd_codec.h	/^	int width;$/;"	m	struct:snd_info_s
width	src/client/snd_local.h	/^	int			width;$/;"	m	struct:__anon95
width	src/qcommon/cm_patch.h	/^	int			width;$/;"	m	struct:__anon488
width	src/qcommon/q_shared.h	/^  int       width;$/;"	m	struct:__anon482
width	src/renderercommon/tr_common.h	/^	int			width, height;				\/\/ source image$/;"	m	struct:image_s
width	src/renderercommon/tr_image_bmp.c	/^	unsigned width;$/;"	m	struct:__anon110	file:
width	src/renderercommon/tr_image_tga.c	/^	unsigned short	x_origin, y_origin, width, height;$/;"	m	struct:_TargaHeader	file:
width	src/renderercommon/tr_types.h	/^	int			x, y, width, height;$/;"	m	struct:__anon115
width	src/renderergl1/tr_local.h	/^	int						width;$/;"	m	struct:__anon173
width	src/renderergl1/tr_local.h	/^	int				width, height;$/;"	m	struct:srfGridMesh_s
width	src/renderergl1/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon147
width	src/renderergl1/tr_local.h	/^	int		width;$/;"	m	struct:__anon167
width	src/renderergl1/tr_local.h	/^	int width;$/;"	m	struct:__anon172
width	src/renderergl2/tr_fbo.h	/^	int             width;$/;"	m	struct:FBO_s
width	src/renderergl2/tr_local.h	/^	int						width;$/;"	m	struct:__anon73
width	src/renderergl2/tr_local.h	/^	int				width, height;$/;"	m	struct:srfBspSurface_s
width	src/renderergl2/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon39
width	src/renderergl2/tr_local.h	/^	int		width;$/;"	m	struct:__anon67
width	src/renderergl2/tr_local.h	/^	int width;$/;"	m	struct:__anon72
width	src/sdl/sdl_icon.h	/^  unsigned int 	 width;$/;"	m	struct:__anon378
width	src/tools/asm/cmdlib.h	/^	int		count, width, height;$/;"	m	struct:__anon262
width	src/ui/ui_shared.h	/^  int width;$/;"	m	struct:columnInfo_s
widthInChars	src/qcommon/qcommon.h	/^	int		widthInChars;$/;"	m	struct:__anon425
widthLodError	src/renderergl1/tr_local.h	/^	float			*widthLodError;$/;"	m	struct:srfGridMesh_s
widthLodError	src/renderergl2/tr_local.h	/^	float			*widthLodError;$/;"	m	struct:srfBspSurface_s
wildcard	src/tools/lcc/src/config.h	/^	Symbol *wildcard;$/;"	m	struct:__anon277
wim	src/cgame/cg_local.h	/^  weaponInfoMode_t  wim[ WPM_NUM_WEAPONMODES ];$/;"	m	struct:weaponInfo_s
win32	src/tools/lcc/doc/install.html	/^<h2><a NAME="win32">Installation on Windows NT 4.0 or Windows 95\/98<\/a><\/h2>$/;"	a
winAccess	src/server/sqlite3.c	/^static int winAccess($/;"	f	file:
winCheckReservedLock	src/server/sqlite3.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winClose	src/server/sqlite3.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winConvertFromUtf8Filename	src/server/sqlite3.c	/^static void *winConvertFromUtf8Filename(const char *zFilename){$/;"	f	file:
winConvertToUtf8Filename	src/server/sqlite3.c	/^static char *winConvertToUtf8Filename(const void *zFilename){$/;"	f	file:
winCurrentTime	src/server/sqlite3.c	/^static int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f	file:
winCurrentTimeInt64	src/server/sqlite3.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winDelete	src/server/sqlite3.c	/^static int winDelete($/;"	f	file:
winDeviceCharacteristics	src/server/sqlite3.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDlClose	src/server/sqlite3.c	/^static void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
winDlClose	src/server/sqlite3.c	40693;"	d	file:
winDlError	src/server/sqlite3.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	src/server/sqlite3.c	40691;"	d	file:
winDlOpen	src/server/sqlite3.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	src/server/sqlite3.c	40690;"	d	file:
winDlSym	src/server/sqlite3.c	/^static void (*winDlSym(sqlite3_vfs *pVfs,void *pH,const char *zSym))(void){$/;"	f	file:
winDlSym	src/server/sqlite3.c	40692;"	d	file:
winFetch	src/server/sqlite3.c	/^static int winFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
winFile	src/server/sqlite3.c	/^struct winFile {$/;"	s	file:
winFile	src/server/sqlite3.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFileControl	src/server/sqlite3.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileSize	src/server/sqlite3.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFullPathname	src/server/sqlite3.c	/^static int winFullPathname($/;"	f	file:
winGetDirSep	src/server/sqlite3.c	35474;"	d	file:
winGetLastError	src/server/sqlite3.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winGetLastErrorMsg	src/server/sqlite3.c	/^static int winGetLastErrorMsg(DWORD lastErrno, int nBuf, char *zBuf){$/;"	f	file:
winGetReadLock	src/server/sqlite3.c	/^static int winGetReadLock(winFile *pFile){$/;"	f	file:
winGetSystemCall	src/server/sqlite3.c	/^static sqlite3_syscall_ptr winGetSystemCall($/;"	f	file:
winGetTempname	src/server/sqlite3.c	/^static int winGetTempname(sqlite3_vfs *pVfs, char **pzBuf){$/;"	f	file:
winIoMethod	src/server/sqlite3.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winIoerrCanRetry1	src/server/sqlite3.c	37257;"	d	file:
winIoerrRetry	src/server/sqlite3.c	/^static int winIoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
winIoerrRetryDelay	src/server/sqlite3.c	/^static int winIoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
winIsDir	src/server/sqlite3.c	/^static int winIsDir(const void *zConverted){$/;"	f	file:
winIsDirSep	src/server/sqlite3.c	35459;"	d	file:
winIsDriveLetterAndColon	src/server/sqlite3.c	/^static BOOL winIsDriveLetterAndColon($/;"	f	file:
winIsVerbatimPathname	src/server/sqlite3.c	/^static BOOL winIsVerbatimPathname($/;"	f	file:
winLock	src/server/sqlite3.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLockFile	src/server/sqlite3.c	/^static BOOL winLockFile($/;"	f	file:
winLogError	src/server/sqlite3.c	37200;"	d	file:
winLogErrorAtLine	src/server/sqlite3.c	/^static int winLogErrorAtLine($/;"	f	file:
winLogIoerr	src/server/sqlite3.c	/^static void winLogIoerr(int nRetry, int lineno){$/;"	f	file:
winMakeEndInDirSep	src/server/sqlite3.c	/^static int winMakeEndInDirSep(int nBuf, char *zBuf){$/;"	f	file:
winMapfile	src/server/sqlite3.c	/^static int winMapfile(winFile *pFd, sqlite3_int64 nByte){$/;"	f	file:
winMbcsToUnicode	src/server/sqlite3.c	/^static LPWSTR winMbcsToUnicode(const char *zFilename){$/;"	f	file:
winMemAssertMagic	src/server/sqlite3.c	35708;"	d	file:
winMemAssertMagic	src/server/sqlite3.c	35710;"	d	file:
winMemAssertMagic1	src/server/sqlite3.c	35706;"	d	file:
winMemAssertMagic2	src/server/sqlite3.c	35707;"	d	file:
winMemData	src/server/sqlite3.c	/^struct winMemData {$/;"	s	file:
winMemData	src/server/sqlite3.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemFree	src/server/sqlite3.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemGetDataPtr	src/server/sqlite3.c	35713;"	d	file:
winMemGetHeap	src/server/sqlite3.c	35714;"	d	file:
winMemGetOwned	src/server/sqlite3.c	35715;"	d	file:
winMemInit	src/server/sqlite3.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemMalloc	src/server/sqlite3.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemRealloc	src/server/sqlite3.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRoundup	src/server/sqlite3.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemShutdown	src/server/sqlite3.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemSize	src/server/sqlite3.c	/^static int winMemSize(void *p){$/;"	f	file:
winModeBit	src/server/sqlite3.c	/^static void winModeBit(winFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
winMutexAlloc	src/server/sqlite3.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexEnd	src/server/sqlite3.c	/^static int winMutexEnd(void){$/;"	f	file:
winMutexEnter	src/server/sqlite3.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	src/server/sqlite3.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	src/server/sqlite3.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexInit	src/server/sqlite3.c	/^static int winMutexInit(void){$/;"	f	file:
winMutexLeave	src/server/sqlite3.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	src/server/sqlite3.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld2	src/server/sqlite3.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexTry	src/server/sqlite3.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutex_isInit	src/server/sqlite3.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_isNt	src/server/sqlite3.c	/^static int winMutex_isNt = -1; \/* <0 means "need to query" *\/$/;"	v	file:
winMutex_lock	src/server/sqlite3.c	/^static LONG SQLITE_WIN32_VOLATILE winMutex_lock = 0;$/;"	v	file:
winMutex_staticMutexes	src/server/sqlite3.c	/^static sqlite3_mutex winMutex_staticMutexes[] = {$/;"	v	file:
winNextSystemCall	src/server/sqlite3.c	/^static const char *winNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
winOpen	src/server/sqlite3.c	/^static int winOpen($/;"	f	file:
winOpenSharedMemory	src/server/sqlite3.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winRandomness	src/server/sqlite3.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRead	src/server/sqlite3.c	/^static int winRead($/;"	f	file:
winRetryIoerr	src/server/sqlite3.c	/^static int winRetryIoerr(int *pnRetry, DWORD *pError){$/;"	f	file:
winSectorSize	src/server/sqlite3.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winSeekFile	src/server/sqlite3.c	/^static int winSeekFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
winSetSystemCall	src/server/sqlite3.c	/^static int winSetSystemCall($/;"	f	file:
winShm	src/server/sqlite3.c	/^struct winShm {$/;"	s	file:
winShm	src/server/sqlite3.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShmBarrier	src/server/sqlite3.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	src/server/sqlite3.c	39329;"	d	file:
winShmEnterMutex	src/server/sqlite3.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmLeaveMutex	src/server/sqlite3.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLock	src/server/sqlite3.c	/^static int winShmLock($/;"	f	file:
winShmLock	src/server/sqlite3.c	39328;"	d	file:
winShmMap	src/server/sqlite3.c	/^static int winShmMap($/;"	f	file:
winShmMap	src/server/sqlite3.c	39327;"	d	file:
winShmMutexHeld	src/server/sqlite3.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmNode	src/server/sqlite3.c	/^struct winShmNode {$/;"	s	file:
winShmNode	src/server/sqlite3.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNodeList	src/server/sqlite3.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmPurge	src/server/sqlite3.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmSystemLock	src/server/sqlite3.c	/^static int winShmSystemLock($/;"	f	file:
winShmUnmap	src/server/sqlite3.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	src/server/sqlite3.c	39330;"	d	file:
winSleep	src/server/sqlite3.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSync	src/server/sqlite3.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSysInfo	src/server/sqlite3.c	/^static SYSTEM_INFO winSysInfo;$/;"	v	file:
winTruncate	src/server/sqlite3.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winUnfetch	src/server/sqlite3.c	/^static int winUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
winUnicodeToMbcs	src/server/sqlite3.c	/^static char *winUnicodeToMbcs(LPCWSTR zWideFilename){$/;"	f	file:
winUnicodeToUtf8	src/server/sqlite3.c	/^static char *winUnicodeToUtf8(LPCWSTR zWideFilename){$/;"	f	file:
winUnlock	src/server/sqlite3.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winUnlockFile	src/server/sqlite3.c	/^static BOOL winUnlockFile($/;"	f	file:
winUnlockReadLock	src/server/sqlite3.c	/^static int winUnlockReadLock(winFile *pFile){$/;"	f	file:
winUnmapfile	src/server/sqlite3.c	/^static int winUnmapfile(winFile *pFile){$/;"	f	file:
winUtf8ToUnicode	src/server/sqlite3.c	/^static LPWSTR winUtf8ToUnicode(const char *zFilename){$/;"	f	file:
winWrite	src/server/sqlite3.c	/^static int winWrite($/;"	f	file:
win_mem_data	src/server/sqlite3.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
win_syscall	src/server/sqlite3.c	/^static struct win_syscall {$/;"	s	file:
winceCreateLock	src/server/sqlite3.c	/^static int winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceDestroyLock	src/server/sqlite3.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceLock	src/server/sqlite3.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	src/server/sqlite3.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLockFile	src/server/sqlite3.c	/^static BOOL winceLockFile($/;"	f	file:
winceMutexAcquire	src/server/sqlite3.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexRelease	src/server/sqlite3.c	37356;"	d	file:
winceUnlockFile	src/server/sqlite3.c	/^static BOOL winceUnlockFile($/;"	f	file:
winding	src/qcommon/cm_local.h	/^	winding_t			*winding;$/;"	m	struct:__anon436
winding_t	src/qcommon/cm_polylib.h	/^} winding_t;$/;"	t	typeref:struct:__anon386
window	src/ui/ui_shared.h	/^  Window window;                 \/\/ common positional, border, style, layout info$/;"	m	struct:itemDef_s
window	src/ui/ui_shared.h	/^  Window window;$/;"	m	struct:__anon503
windowAspect	src/renderercommon/tr_types.h	/^	float					windowAspect;$/;"	m	struct:__anon120
windowDef_t	src/ui/ui_shared.h	/^windowDef_t;$/;"	t	typeref:struct:__anon499
windowX	src/renderergl1/tr_flares.c	/^	int			windowX, windowY;$/;"	m	struct:flare_s	file:
windowX	src/renderergl2/tr_flares.c	/^	int			windowX, windowY;$/;"	m	struct:flare_s	file:
windowY	src/renderergl1/tr_flares.c	/^	int			windowX, windowY;$/;"	m	struct:flare_s	file:
windowY	src/renderergl2/tr_flares.c	/^	int			windowX, windowY;$/;"	m	struct:flare_s	file:
winsockInitialized	src/qcommon/net_ip.c	/^static qboolean	winsockInitialized = qfalse;$/;"	v	file:
winsockdata	src/qcommon/net_ip.c	/^static WSADATA	winsockdata;$/;"	v	file:
withDup	src/server/sqlite3.c	/^static With *withDup(sqlite3 *db, With *p){$/;"	f	file:
withDup	src/server/sqlite3.c	87625;"	d	file:
withExpand	src/server/sqlite3.c	/^static int withExpand($/;"	f	file:
wm_BroadcastCommand	src/tools/asm/cmdlib.c	/^UINT wm_BroadcastCommand = -1;$/;"	v
word	src/game/bg_lib.c	/^  unsigned int word;$/;"	m	union:__anon372	file:
world	src/renderergl1/tr_local.h	/^	orientationr_t	world;$/;"	m	struct:__anon150
world	src/renderergl1/tr_local.h	/^	world_t					*world;$/;"	m	struct:__anon163
world	src/renderergl2/tr_local.h	/^	orientationr_t	world;$/;"	m	struct:__anon43
world	src/renderergl2/tr_local.h	/^	world_t					*world;$/;"	m	struct:__anon63
worldDeluxeMapping	src/renderergl2/tr_local.h	/^	qboolean				worldDeluxeMapping;$/;"	m	struct:__anon63
worldEntity	src/renderergl1/tr_local.h	/^	trRefEntity_t			worldEntity;		\/\/ point currentEntity at this when rendering world$/;"	m	struct:__anon163
worldEntity	src/renderergl2/tr_local.h	/^	trRefEntity_t			worldEntity;		\/\/ point currentEntity at this when rendering world$/;"	m	struct:__anon63
worldMapLoaded	src/renderergl1/tr_local.h	/^	qboolean				worldMapLoaded;$/;"	m	struct:__anon163
worldMapLoaded	src/renderergl2/tr_local.h	/^	qboolean				worldMapLoaded;$/;"	m	struct:__anon63
worldSector	src/server/server.h	/^	struct worldSector_s *worldSector;$/;"	m	struct:svEntity_s	typeref:struct:svEntity_s::worldSector_s
worldSector_s	src/server/sv_world.c	/^typedef struct worldSector_s {$/;"	s	file:
worldSector_t	src/server/sv_world.c	/^} worldSector_t;$/;"	t	typeref:struct:worldSector_s	file:
world_t	src/renderergl1/tr_local.h	/^} world_t;$/;"	t	typeref:struct:__anon157
world_t	src/renderergl2/tr_local.h	/^} world_t;$/;"	t	typeref:struct:__anon49
wrFlag	src/server/sqlite3.c	/^  u8 wrFlag;            \/* The wrFlag argument to sqlite3BtreeCursor() *\/$/;"	m	struct:VdbeCursor	file:
wrapCache	src/ui/ui_shared.c	/^static wrapCache_t  wrapCache[ MAX_WRAP_CACHE ];$/;"	v	file:
wrapCache_t	src/ui/ui_shared.c	/^} wrapCache_t;$/;"	t	typeref:struct:__anon521	file:
wrapHeight	src/qcommon/cm_patch.h	/^	qboolean	wrapHeight;$/;"	m	struct:__anon488
wrapWidth	src/qcommon/cm_patch.h	/^	qboolean	wrapWidth;$/;"	m	struct:__anon488
write32bits	src/server/sqlite3.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
writeCoord	src/server/sqlite3.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeInt16	src/server/sqlite3.c	/^static int writeInt16(u8 *p, int i){$/;"	f	file:
writeInt64	src/server/sqlite3.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeJournalHdr	src/server/sqlite3.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeLock	src/server/sqlite3.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeMapFile	src/tools/asm/q3asm.c	/^	qboolean writeMapFile;$/;"	m	struct:options_s	file:
writeMask	src/server/sqlite3.c	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse	file:
writeMasterJournal	src/server/sqlite3.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
writePos	src/sys/con_log.c	/^static unsigned int  writePos = 0;$/;"	v	file:
writedir	src/tools/asm/cmdlib.c	/^char		writedir[1024];$/;"	v
writer	src/server/sqlite3.c	/^  Fts5PageWriter writer;          \/* PageWriter object *\/$/;"	m	struct:Fts5SegWriter	file:
writer	src/server/sqlite3.c	/^  Fts5PoslistWriter writer;       \/* Writer context *\/$/;"	m	struct:Fts5NearTrimmer	file:
writer	src/server/sqlite3.c	/^  Fts5PoslistWriter writer;$/;"	m	struct:Fts5PoslistPopulator	file:
writer	src/server/sqlite3.c	/^  Fts5SegWriter writer; $/;"	m	struct:Fts5FlushCtx	file:
wsFlags	src/server/sqlite3.c	/^  u32 wsFlags;          \/* WHERE_* flags describing the plan *\/$/;"	m	struct:WhereLoop	file:
wsdAutoext	src/server/sqlite3.c	107044;"	d	file:
wsdAutoext	src/server/sqlite3.c	107047;"	d	file:
wsdAutoextInit	src/server/sqlite3.c	107042;"	d	file:
wsdAutoextInit	src/server/sqlite3.c	107046;"	d	file:
wsdHooks	src/server/sqlite3.c	18351;"	d	file:
wsdHooks	src/server/sqlite3.c	18354;"	d	file:
wsdHooksInit	src/server/sqlite3.c	18349;"	d	file:
wsdHooksInit	src/server/sqlite3.c	18353;"	d	file:
wsdPrng	src/server/sqlite3.c	24489;"	d	file:
wsdStat	src/server/sqlite3.c	16429;"	d	file:
wsdStat	src/server/sqlite3.c	16432;"	d	file:
wsdStatInit	src/server/sqlite3.c	16428;"	d	file:
wsdStatInit	src/server/sqlite3.c	16431;"	d	file:
wslen	src/tools/lcc/cpp/cpp.h	/^	unsigned int	wslen;$/;"	m	struct:token
wstab	src/tools/lcc/cpp/tokens.c	/^static const char wstab[] = {$/;"	v	file:
wt1	src/client/snd_wavelet.c	/^void wt1(float a[], unsigned long n, int isign)$/;"	f
wtFlags	src/server/sqlite3.c	/^  u16 wtFlags;            \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm	file:
x	src/client/cl_console.c	/^	int		x;				\/\/ offset in current line for next print$/;"	m	struct:__anon102	file:
x	src/renderercommon/tr_types.h	/^	int			x, y, width, height;$/;"	m	struct:__anon115
x	src/renderergl1/tr_local.h	/^	float	x, y;$/;"	m	struct:__anon170
x	src/renderergl1/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon147
x	src/renderergl1/tr_local.h	/^	int x;$/;"	m	struct:__anon172
x	src/renderergl2/tr_local.h	/^	float	x, y;$/;"	m	struct:__anon70
x	src/renderergl2/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon39
x	src/renderergl2/tr_local.h	/^	int x;$/;"	m	struct:__anon72
x	src/renderergl2/tr_vbo.c	/^		signed int x:10;$/;"	m	struct:pack10_u::__anon1	file:
x	src/renderergl2/tr_vbo.c	/^		signed int x:8;$/;"	m	struct:pack8_u::__anon2	file:
x	src/server/sqlite3.c	/^      } x;$/;"	m	union:ExprList::ExprList_item::__anon196	typeref:struct:ExprList::ExprList_item::__anon196::__anon197	file:
x	src/server/sqlite3.c	/^  fts5_tokenizer x;               \/* Tokenizer functions *\/$/;"	m	struct:Fts5TokenizerModule	file:
x	src/server/sqlite3.c	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon195	file:
x	src/tools/lcc/src/c.h	/^			Env x;$/;"	m	struct:code::__anon291::__anon292
x	src/tools/lcc/src/c.h	/^	Xinterface x;$/;"	m	struct:interface
x	src/tools/lcc/src/c.h	/^	Xnode x;$/;"	m	struct:node
x	src/tools/lcc/src/c.h	/^	Xsymbol x;$/;"	m	struct:symbol
x	src/tools/lcc/src/c.h	/^	Xtype x;$/;"	m	struct:type
x	src/tools/lcc/src/c.h	/^	unsigned x, y;$/;"	m	struct:coord
x	src/tools/lcc/src/c.h	/^	void *x;$/;"	m	struct:list
x	src/tools/lcc/src/prof.c	/^		struct { unsigned int index:6,x:10,y:16; } be;$/;"	m	struct:callsite::coordinate::__anon272	file:
x	src/tools/lcc/src/prof.c	/^		struct { unsigned int y:16,x:10,index:6; } le;$/;"	m	struct:callsite::coordinate::__anon271	file:
x	src/tools/lcc/src/profio.c	/^			int x, y;$/;"	m	struct:file::func::caller	file:
x	src/tools/lcc/src/profio.c	/^	int x, y;			\/* source coordinate *\/$/;"	m	struct:count	file:
x	src/ui/ui_shared.h	/^  float x;    \/\/ horiz position$/;"	m	struct:__anon498
xAccess	src/server/sqlite3.c	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	file:
xAccess	src/server/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xAdvance	src/server/sqlite3.c	/^    int (*xAdvance)(BtCursor *, int *);$/;"	m	union:VdbeOp::p4union	file:
xAuth	src/server/sqlite3.c	/^  sqlite3_xauth xAuth;          \/* Access authorization function *\/$/;"	m	struct:sqlite3	file:
xBacktrace	src/server/sqlite3.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon203	file:
xBegin	src/server/sqlite3.c	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xBegin	src/server/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBenignBegin	src/server/sqlite3.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	src/server/sqlite3.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBestIndex	src/server/sqlite3.c	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	file:
xBestIndex	src/server/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xBusyHandler	src/server/sqlite3.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xCachesize	src/server/sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	file:
xCachesize	src/server/sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2	file:
xCachesize	src/server/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCachesize	src/server/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2
xCellSize	src/server/sqlite3.c	/^  u16 (*xCellSize)(MemPage*,u8*);             \/* cellSizePtr method *\/$/;"	m	struct:MemPage	file:
xCheckReservedLock	src/server/sqlite3.c	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	file:
xCheckReservedLock	src/server/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xClose	src/server/sqlite3.c	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xClose	src/server/sqlite3.c	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module	file:
xClose	src/server/sqlite3.c	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xClose	src/server/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	src/server/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xCmp	src/server/sqlite3.c	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq	file:
xCodec	src/server/sqlite3.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodecFree	src/server/sqlite3.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	src/server/sqlite3.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCollNeeded	src/server/sqlite3.c	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3	file:
xCollNeeded16	src/server/sqlite3.c	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3	file:
xColumn	src/server/sqlite3.c	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	file:
xColumn	src/server/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xColumnCount	src/server/sqlite3.c	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnCount	src/server/sqlite3.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	src/server/sqlite3.c	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnSize	src/server/sqlite3.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnText	src/server/sqlite3.c	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnText	src/server/sqlite3.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	src/server/sqlite3.c	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnTotalSize	src/server/sqlite3.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xCommit	src/server/sqlite3.c	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xCommit	src/server/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xCommitCallback	src/server/sqlite3.c	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xCompare	src/server/sqlite3.c	/^  SorterCompare xCompare;         \/* Compare function to use *\/$/;"	m	struct:SortSubtask	file:
xCond	src/server/sqlite3.c	/^  int (*xCond)(char *zStem, int nStem);$/;"	m	struct:PorterRule	file:
xConnect	src/server/sqlite3.c	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xConnect	src/server/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	src/server/sqlite3.c	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module	file:
xCreate	src/server/sqlite3.c	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xCreate	src/server/sqlite3.c	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer	file:
xCreate	src/server/sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	file:
xCreate	src/server/sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2	file:
xCreate	src/server/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	src/server/sqlite3.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	src/server/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCreate	src/server/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2
xCreateFunction	src/server/sqlite3.c	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api	file:
xCreateFunction	src/server/sqlite3.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateTokenizer	src/server/sqlite3.c	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api	file:
xCreateTokenizer	src/server/sqlite3.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCurrentTime	src/server/sqlite3.c	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTime	src/server/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	src/server/sqlite3.c	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTimeInt64	src/server/sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDel	src/server/sqlite3.c	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq	file:
xDel	src/server/sqlite3.c	/^  void (*xDel)(void*);\/* Destructor for Mem.z - only valid if MEM_Dyn *\/$/;"	m	struct:Mem	file:
xDelUser	src/server/sqlite3.c	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
xDelUser	src/server/sqlite3.c	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
xDelUser	src/server/sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	src/server/sqlite3.h	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelete	src/server/sqlite3.c	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	file:
xDelete	src/server/sqlite3.c	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer	file:
xDelete	src/server/sqlite3.c	/^  void (*xDelete)(void *);        \/* Destructor for the aux data *\/$/;"	m	struct:AuxData	file:
xDelete	src/server/sqlite3.c	/^  void(*xDelete)(void*);          \/* Destructor *\/$/;"	m	struct:Fts5Auxdata	file:
xDelete	src/server/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDelete	src/server/sqlite3.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDestroy	src/server/sqlite3.c	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module	file:
xDestroy	src/server/sqlite3.c	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDestroy	src/server/sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xDestroy	src/server/sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xDestroy	src/server/sqlite3.c	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module	file:
xDestroy	src/server/sqlite3.c	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor	file:
xDestroy	src/server/sqlite3.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5Auxiliary	file:
xDestroy	src/server/sqlite3.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5TokenizerModule	file:
xDestroy	src/server/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	src/server/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDestroy	src/server/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xDestructor	src/server/sqlite3.c	/^  void (*xDestructor)(void*);$/;"	m	struct:RtreeGeomCallback	file:
xDeviceCharacteristics	src/server/sqlite3.c	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xDeviceCharacteristics	src/server/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	src/server/sqlite3.c	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDisconnect	src/server/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	src/server/sqlite3.c	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	file:
xDlClose	src/server/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	src/server/sqlite3.c	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	file:
xDlError	src/server/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	src/server/sqlite3.c	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	file:
xDlOpen	src/server/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	src/server/sqlite3.c	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xEof	src/server/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xExprCallback	src/server/sqlite3.c	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker	file:
xFetch	src/server/sqlite3.c	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods	file:
xFetch	src/server/sqlite3.c	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2	file:
xFetch	src/server/sqlite3.c	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	file:
xFetch	src/server/sqlite3.h	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods
xFetch	src/server/sqlite3.h	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2
xFetch	src/server/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFileControl	src/server/sqlite3.c	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	file:
xFileControl	src/server/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	src/server/sqlite3.c	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	file:
xFileSize	src/server/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	src/server/sqlite3.c	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	file:
xFilter	src/server/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFinalize	src/server/sqlite3.c	/^  void (*xFinalize)(sqlite3_context*);                  \/* Agg finalizer *\/$/;"	m	struct:FuncDef	file:
xFindFunction	src/server/sqlite3.c	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	file:
xFindFunction	src/server/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFindTokenizer	src/server/sqlite3.c	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api	file:
xFindTokenizer	src/server/sqlite3.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFree	src/server/sqlite3.c	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xFree	src/server/sqlite3.c	/^static void xFree(void *p){$/;"	f	file:
xFree	src/server/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFreeSchema	src/server/sqlite3.c	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared	file:
xFullPathname	src/server/sqlite3.c	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xFullPathname	src/server/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xFunc	src/server/sqlite3.c	/^  fts5_extension_function xFunc;  \/* Callback function *\/$/;"	m	struct:Fts5Auxiliary	file:
xFunc	src/server/sqlite3.c	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler	file:
xGeom	src/server/sqlite3.c	/^    int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*);$/;"	m	union:RtreeConstraint::__anon219	file:
xGeom	src/server/sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*);$/;"	m	struct:RtreeGeomCallback	file:
xGetAuxdata	src/server/sqlite3.c	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi	file:
xGetAuxdata	src/server/sqlite3.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetLastError	src/server/sqlite3.c	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	file:
xGetLastError	src/server/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	src/server/sqlite3.c	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xGetSystemCall	src/server/sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	src/server/sqlite3.c	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xInit	src/server/sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xInit	src/server/sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xInit	src/server/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	src/server/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xInit	src/server/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xInst	src/server/sqlite3.c	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xInst	src/server/sqlite3.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInstCount	src/server/sqlite3.c	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi	file:
xInstCount	src/server/sqlite3.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xLanguageid	src/server/sqlite3.c	/^  int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid);$/;"	m	struct:sqlite3_tokenizer_module	file:
xLock	src/server/sqlite3.c	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xLock	src/server/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xLog	src/server/sqlite3.c	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config	file:
xMalloc	src/server/sqlite3.c	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	file:
xMalloc	src/server/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	src/server/sqlite3.c	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexAlloc	src/server/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	src/server/sqlite3.c	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnd	src/server/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	src/server/sqlite3.c	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnter	src/server/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	src/server/sqlite3.c	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexFree	src/server/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	src/server/sqlite3.c	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexHeld	src/server/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	src/server/sqlite3.c	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexInit	src/server/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	src/server/sqlite3.c	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexLeave	src/server/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	src/server/sqlite3.c	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexNotheld	src/server/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	src/server/sqlite3.c	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexTry	src/server/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNext	src/server/sqlite3.c	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module	file:
xNext	src/server/sqlite3.c	/^  int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64);$/;"	m	struct:Fts5ExprNode	file:
xNext	src/server/sqlite3.c	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xNext	src/server/sqlite3.c	/^  void (*xNext)(Fts5Index*, Fts5SegIter*, int*);$/;"	m	struct:Fts5SegIter	file:
xNext	src/server/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextSystemCall	src/server/sqlite3.c	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xNextSystemCall	src/server/sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOpen	src/server/sqlite3.c	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module	file:
xOpen	src/server/sqlite3.c	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	file:
xOpen	src/server/sqlite3.c	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	file:
xOpen	src/server/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	src/server/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xPagecount	src/server/sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xPagecount	src/server/sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xPagecount	src/server/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xPagecount	src/server/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xParseCell	src/server/sqlite3.c	/^  void (*xParseCell)(MemPage*,u8*,CellInfo*); \/* btreeParseCell method *\/$/;"	m	struct:MemPage	file:
xPhraseCount	src/server/sqlite3.c	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseCount	src/server/sqlite3.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	src/server/sqlite3.c	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirst	src/server/sqlite3.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	src/server/sqlite3.c	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirstColumn	src/server/sqlite3.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	src/server/sqlite3.c	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNext	src/server/sqlite3.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	src/server/sqlite3.c	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNextColumn	src/server/sqlite3.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	src/server/sqlite3.c	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseSize	src/server/sqlite3.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xProfile	src/server/sqlite3.c	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3	file:
xProgress	src/server/sqlite3.c	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3	file:
xQueryFunc	src/server/sqlite3.c	/^    int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	union:RtreeConstraint::__anon219	file:
xQueryFunc	src/server/sqlite3.c	/^  int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	struct:RtreeGeomCallback	file:
xQueryPhrase	src/server/sqlite3.c	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi	file:
xQueryPhrase	src/server/sqlite3.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xRandomness	src/server/sqlite3.c	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xRandomness	src/server/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	src/server/sqlite3.c	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xRead	src/server/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	src/server/sqlite3.c	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRealloc	src/server/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xReiniter	src/server/sqlite3.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xRekey	src/server/sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2	file:
xRekey	src/server/sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	file:
xRekey	src/server/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2
xRekey	src/server/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	src/server/sqlite3.c	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRelease	src/server/sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	src/server/sqlite3.c	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	file:
xRename	src/server/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRollback	src/server/sqlite3.c	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xRollback	src/server/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackCallback	src/server/sqlite3.c	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xRollbackTo	src/server/sqlite3.c	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRollbackTo	src/server/sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRoundup	src/server/sqlite3.c	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRoundup	src/server/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowCount	src/server/sqlite3.c	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi	file:
xRowCount	src/server/sqlite3.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowid	src/server/sqlite3.c	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	file:
xRowid	src/server/sqlite3.c	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xRowid	src/server/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xRowid	src/server/sqlite3.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xSFunc	src/server/sqlite3.c	/^  void (*xSFunc)(sqlite3_context*,int,sqlite3_value**); \/* func or agg-step *\/$/;"	m	struct:FuncDef	file:
xSavepoint	src/server/sqlite3.c	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xSavepoint	src/server/sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	src/server/sqlite3.c	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xSectorSize	src/server/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSelectCallback	src/server/sqlite3.c	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSelectCallback2	src/server/sqlite3.c	/^  void (*xSelectCallback2)(Walker*,Select*);\/* Second callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSetAuxdata	src/server/sqlite3.c	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi	file:
xSetAuxdata	src/server/sqlite3.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetOutputs	src/server/sqlite3.c	/^  void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*);$/;"	m	struct:Fts5Iter	file:
xSetSystemCall	src/server/sqlite3.c	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs	file:
xSetSystemCall	src/server/sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShmBarrier	src/server/sqlite3.c	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xShmBarrier	src/server/sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	src/server/sqlite3.c	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xShmLock	src/server/sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	src/server/sqlite3.c	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods	file:
xShmMap	src/server/sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	src/server/sqlite3.c	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods	file:
xShmUnmap	src/server/sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShrink	src/server/sqlite3.c	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xShrink	src/server/sqlite3.h	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xShutdown	src/server/sqlite3.c	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xShutdown	src/server/sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xShutdown	src/server/sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xShutdown	src/server/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	src/server/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xShutdown	src/server/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xSize	src/server/sqlite3.c	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xSize	src/server/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSkip	src/qcommon/q_shared.h	/^  int xSkip;        \/\/ x adjustment$/;"	m	struct:__anon478
xSleep	src/server/sqlite3.c	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	file:
xSleep	src/server/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSqllog	src/server/sqlite3.c	/^  void(*xSqllog)(void*,sqlite3*,const char*, int);$/;"	m	struct:Sqlite3Config	file:
xStart	src/ui/ui_shared.c	/^  float xStart;$/;"	m	struct:scrollInfo_s	file:
xStress	src/server/sqlite3.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xSync	src/server/sqlite3.c	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xSync	src/server/sqlite3.c	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xSync	src/server/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	src/server/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTask	src/server/sqlite3.c	/^  void *(*xTask)(void*);         \/* The thread routine *\/$/;"	m	struct:SQLiteThread	file:
xTask	src/server/sqlite3.c	/^  void *(*xTask)(void*);   \/* The routine to run as a thread *\/$/;"	m	struct:SQLiteThread	file:
xTestCallback	src/server/sqlite3.c	/^  int (*xTestCallback)(int);        \/* Invoked by sqlite3FaultSim() *\/$/;"	m	struct:Sqlite3Config	file:
xToken	src/server/sqlite3.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:PorterContext	file:
xTokenize	src/server/sqlite3.c	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi	file:
xTokenize	src/server/sqlite3.c	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer	file:
xTokenize	src/server/sqlite3.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	src/server/sqlite3.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTrace	src/server/sqlite3.c	/^  void (*xTrace)(void*,const char*);        \/* Trace function *\/$/;"	m	struct:sqlite3	file:
xTruncate	src/server/sqlite3.c	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	file:
xTruncate	src/server/sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	file:
xTruncate	src/server/sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2	file:
xTruncate	src/server/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	src/server/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xTruncate	src/server/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2
xUnfetch	src/server/sqlite3.c	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods	file:
xUnfetch	src/server/sqlite3.h	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods
xUnlock	src/server/sqlite3.c	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xUnlock	src/server/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnlockNotify	src/server/sqlite3.c	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3	file:
xUnpin	src/server/sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2	file:
xUnpin	src/server/sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	file:
xUnpin	src/server/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2
xUnpin	src/server/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	src/server/sqlite3.c	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	file:
xUpdate	src/server/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUpdateCallback	src/server/sqlite3.c	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3	file:
xUserData	src/server/sqlite3.c	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xUserData	src/server/sqlite3.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xVdbeBranch	src/server/sqlite3.c	/^  void (*xVdbeBranch)(void*,int iSrcLine,u8 eThis,u8 eMx);  \/* Callback *\/$/;"	m	struct:Sqlite3Config	file:
xWalCallback	src/server/sqlite3.c	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3	file:
xWrite	src/server/sqlite3.c	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xWrite	src/server/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
x_origin	src/renderercommon/tr_image_tga.c	/^	unsigned short	x_origin, y_origin, width, height;$/;"	m	struct:_TargaHeader	file:
xadjust	src/client/cl_console.c	/^	float	xadjust;		\/\/ for wide aspect screens$/;"	m	struct:__anon102	file:
xcommand_t	src/qcommon/qcommon.h	/^typedef void (*xcommand_t) (void);$/;"	t
xcvtcnst	src/tools/lcc/src/simp.c	17;"	d	file:
xferCompatibleIndex	src/server/sqlite3.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferOptimization	src/server/sqlite3.c	/^static int xferOptimization($/;"	f	file:
xfoldcnst	src/tools/lcc/src/simp.c	11;"	d	file:
xmax	src/renderercommon/tr_image_pcx.c	/^	unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:__anon124	file:
xmin	src/renderercommon/tr_image_pcx.c	/^	unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:__anon124	file:
xorMemory	src/server/sqlite3.c	/^static void xorMemory(EntropyGatherer *p, unsigned char *x, int sz){$/;"	f	file:
xpos	src/client/cl_cin.c	/^	int					xpos, ypos, width, height;$/;"	m	struct:__anon100	file:
xref	src/tools/lcc/src/main.c	/^int xref;		\/* != 0 for cross-reference data *\/$/;"	v
xscale	src/ui/ui_shared.h	/^  float      xscale;$/;"	m	struct:__anon506
xsize	src/client/cl_cin.c	/^	unsigned int		xsize, ysize, maxsize, minsize;$/;"	m	struct:__anon100	file:
xstages	src/renderergl1/tr_local.h	/^	shaderStage_t	**xstages;$/;"	m	struct:shaderCommands_s
xstages	src/renderergl2/tr_local.h	/^	shaderStage_t	**xstages;$/;"	m	struct:shaderCommands_s
xt	src/tools/lcc/src/c.h	/^	void *xt;$/;"	m	struct:__anon282
xthreadsafe	src/server/sqlite3.c	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	file:
xx	src/tools/lcc/etc/lcc.c	587;"	d	file:
xx	src/tools/lcc/etc/lcc.c	590;"	d	file:
xx	src/tools/lcc/src/c.h	175;"	d
xx	src/tools/lcc/src/enode.c	14;"	d	file:
xx	src/tools/lcc/src/error.c	8;"	d	file:
xx	src/tools/lcc/src/expr.c	10;"	d	file:
xx	src/tools/lcc/src/expr.c	494;"	d	file:
xx	src/tools/lcc/src/expr.c	511;"	d	file:
xx	src/tools/lcc/src/expr.c	5;"	d	file:
xx	src/tools/lcc/src/output.c	105;"	d	file:
xx	src/tools/lcc/src/symbolic.c	225;"	d	file:
xx	src/tools/lcc/src/symbolic.c	251;"	d	file:
xx	src/tools/lcc/src/symbolic.c	63;"	d	file:
xx	src/tools/lcc/src/symbolic.c	86;"	d	file:
xx	src/tools/lcc/src/token.h	132;"	d
xx	src/tools/lcc/src/types.c	101;"	d	file:
xx	src/tools/lcc/src/types.c	115;"	d	file:
xx	src/tools/lcc/src/types.c	117;"	d	file:
xx	src/tools/lcc/src/types.c	132;"	d	file:
xx	src/tools/lcc/src/types.c	146;"	d	file:
xx	src/tools/lcc/src/types.c	159;"	d	file:
xx	src/tools/lcc/src/types.c	162;"	d	file:
xx	src/tools/lcc/src/types.c	169;"	d	file:
xx	src/tools/lcc/src/types.c	383;"	d	file:
xx	src/tools/lcc/src/types.c	387;"	d	file:
xx	src/tools/lcc/src/types.c	448;"	d	file:
xx	src/tools/lcc/src/types.c	478;"	d	file:
xxinit	src/tools/lcc/src/types.c	/^static Type xxinit(int op, char *name, Metrics m) {$/;"	f	file:
xyradius	src/renderercommon/iqm.h	/^    float xyradius, radius;$/;"	m	struct:iqmbounds
xyspeed	src/cgame/cg_local.h	/^  float         xyspeed;$/;"	m	struct:__anon249
xyspeed	src/game/bg_public.h	/^  float         xyspeed;$/;"	m	struct:pmove_s
xyz	src/qcommon/qfiles.h	/^	short		xyz[3];$/;"	m	struct:__anon392
xyz	src/qcommon/qfiles.h	/^	vec3_t		xyz;$/;"	m	struct:__anon415
xyz	src/renderercommon/tr_types.h	/^	vec3_t		xyz;$/;"	m	struct:__anon112
xyz	src/renderergl2/tr_local.h	/^	vec3_t          xyz;$/;"	m	struct:__anon45
xyz	src/renderergl2/tr_local.h	/^	vec3_t          xyz;$/;"	m	struct:__anon53
y	src/renderercommon/tr_types.h	/^	int			x, y, width, height;$/;"	m	struct:__anon115
y	src/renderergl1/tr_local.h	/^	float	x, y;$/;"	m	struct:__anon170
y	src/renderergl1/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon147
y	src/renderergl1/tr_local.h	/^	int y;$/;"	m	struct:__anon172
y	src/renderergl2/tr_local.h	/^	float	x, y;$/;"	m	struct:__anon70
y	src/renderergl2/tr_local.h	/^	int			x, y, width, height;$/;"	m	struct:__anon39
y	src/renderergl2/tr_local.h	/^	int y;$/;"	m	struct:__anon72
y	src/renderergl2/tr_vbo.c	/^		signed int y:10;$/;"	m	struct:pack10_u::__anon1	file:
y	src/renderergl2/tr_vbo.c	/^		signed int y:8;$/;"	m	struct:pack8_u::__anon2	file:
y	src/tools/lcc/src/c.h	/^	unsigned x, y;$/;"	m	struct:coord
y	src/tools/lcc/src/prof.c	/^		struct { unsigned int index:6,x:10,y:16; } be;$/;"	m	struct:callsite::coordinate::__anon272	file:
y	src/tools/lcc/src/prof.c	/^		struct { unsigned int y:16,x:10,index:6; } le;$/;"	m	struct:callsite::coordinate::__anon271	file:
y	src/tools/lcc/src/profio.c	/^			int x, y;$/;"	m	struct:file::func::caller	file:
y	src/tools/lcc/src/profio.c	/^	int x, y;			\/* source coordinate *\/$/;"	m	struct:count	file:
y	src/ui/ui_shared.h	/^  float y;    \/\/ vert position$/;"	m	struct:__anon498
yColCache	src/server/sqlite3.c	/^  struct yColCache {$/;"	s	struct:Parse	file:
yDbMask	src/server/sqlite3.c	/^  typedef unsigned char yDbMask[(SQLITE_MAX_ATTACHED+9)\/8];$/;"	t	file:
yDbMask	src/server/sqlite3.c	/^  typedef unsigned int yDbMask;$/;"	t	file:
yStart	src/ui/ui_shared.c	/^  float yStart;$/;"	m	struct:scrollInfo_s	file:
y_origin	src/renderercommon/tr_image_tga.c	/^	unsigned short	x_origin, y_origin, width, height;$/;"	m	struct:_TargaHeader	file:
yawAngle	src/cgame/cg_local.h	/^  float       yawAngle;$/;"	m	struct:__anon235
yawing	src/cgame/cg_local.h	/^  qboolean    yawing;$/;"	m	struct:__anon235
ymax	src/renderercommon/tr_image_pcx.c	/^	unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:__anon124	file:
ymin	src/renderercommon/tr_image_pcx.c	/^	unsigned short	xmin,ymin,xmax,ymax;$/;"	m	struct:__anon124	file:
ynVar	src/server/sqlite3.c	/^typedef i16 ynVar;$/;"	t	file:
ynVar	src/server/sqlite3.c	/^typedef int ynVar;$/;"	t	file:
ypos	src/client/cl_cin.c	/^	int					xpos, ypos, width, height;$/;"	m	struct:__anon100	file:
yscale	src/ui/ui_shared.h	/^  float      yscale;$/;"	m	struct:__anon506
ysize	src/client/cl_cin.c	/^	unsigned int		xsize, ysize, maxsize, minsize;$/;"	m	struct:__anon100	file:
yuv_to_rgb	src/client/cl_cin.c	/^static unsigned short yuv_to_rgb( long y, long u, long v )$/;"	f	file:
yuv_to_rgb24	src/client/cl_cin.c	/^static unsigned int yuv_to_rgb24( long y, long u, long v )$/;"	f	file:
yy	src/tools/lcc/src/c.h	176;"	d
yy	src/tools/lcc/src/enode.c	15;"	d	file:
yy	src/tools/lcc/src/error.c	9;"	d	file:
yy	src/tools/lcc/src/expr.c	11;"	d	file:
yy	src/tools/lcc/src/expr.c	6;"	d	file:
yy	src/tools/lcc/src/output.c	106;"	d	file:
yy	src/tools/lcc/src/token.h	133;"	d
yy0	src/server/sqlite3.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon216	file:
yy122	src/server/sqlite3.c	/^  Expr* yy122;$/;"	m	union:__anon216	file:
yy159	src/server/sqlite3.c	/^  Select* yy159;$/;"	m	union:__anon216	file:
yy180	src/server/sqlite3.c	/^  IdList* yy180;$/;"	m	union:__anon216	file:
yy207	src/server/sqlite3.c	/^  struct {int value; int mask;} yy207;$/;"	m	union:__anon216	typeref:struct:__anon216::__anon217	file:
yy318	src/server/sqlite3.c	/^  struct LikeOp yy318;$/;"	m	union:__anon216	typeref:struct:__anon216::LikeOp	file:
yy327	src/server/sqlite3.c	/^  TriggerStep* yy327;$/;"	m	union:__anon216	file:
yy331	src/server/sqlite3.c	/^  With* yy331;$/;"	m	union:__anon216	file:
yy342	src/server/sqlite3.c	/^  ExprSpan yy342;$/;"	m	union:__anon216	file:
yy347	src/server/sqlite3.c	/^  SrcList* yy347;$/;"	m	union:__anon216	file:
yy392	src/server/sqlite3.c	/^  int yy392;$/;"	m	union:__anon216	file:
yy410	src/server/sqlite3.c	/^  struct TrigEvent yy410;$/;"	m	union:__anon216	typeref:struct:__anon216::TrigEvent	file:
yy442	src/server/sqlite3.c	/^  ExprList* yy442;$/;"	m	union:__anon216	file:
yy64	src/server/sqlite3.c	/^  struct LimitVal yy64;$/;"	m	union:__anon216	typeref:struct:__anon216::LimitVal	file:
yyBEGIN	src/tools/lcc/src/symbolic.c	/^static const char *yyBEGIN(const char *tag) {$/;"	f	file:
yyEND	src/tools/lcc/src/symbolic.c	/^static void yyEND(const char *tag) {$/;"	f	file:
yyFallback	src/server/sqlite3.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyGrowStack	src/server/sqlite3.c	/^static void yyGrowStack(yyParser *p){$/;"	f	file:
yyParser	src/server/sqlite3.c	/^struct yyParser {$/;"	s	file:
yyParser	src/server/sqlite3.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	src/server/sqlite3.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon218	file:
yyRuleName	src/server/sqlite3.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	src/server/sqlite3.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	src/server/sqlite3.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackOverflow	src/server/sqlite3.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyTokenName	src/server/sqlite3.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTraceFILE	src/server/sqlite3.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTracePrompt	src/server/sqlite3.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTraceShift	src/server/sqlite3.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	src/server/sqlite3.c	130038;"	d	file:
yy_accept	src/server/sqlite3.c	/^static void yy_accept($/;"	f	file:
yy_action	src/server/sqlite3.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	src/server/sqlite3.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	src/server/sqlite3.c	/^static void yy_destructor($/;"	f	file:
yy_find_reduce_action	src/server/sqlite3.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	src/server/sqlite3.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_lookahead	src/server/sqlite3.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	src/server/sqlite3.c	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	src/server/sqlite3.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_reduce	src/server/sqlite3.c	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	src/server/sqlite3.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_reduce_print	src/tools/lcc/lburg/gram.c	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_shift	src/server/sqlite3.c	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	src/server/sqlite3.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_stack_print	src/tools/lcc/lburg/gram.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_symbol_print	src/tools/lcc/lburg/gram.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	src/tools/lcc/lburg/gram.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_syntax_error	src/server/sqlite3.c	/^static void yy_syntax_error($/;"	f	file:
yyalloc	src/tools/lcc/lburg/gram.c	/^union yyalloc$/;"	u	file:
yychar	src/tools/lcc/lburg/gram.c	/^int yychar;$/;"	v
yycheck	src/tools/lcc/lburg/gram.c	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yyclearin	src/tools/lcc/lburg/gram.c	566;"	d	file:
yydebug	src/tools/lcc/lburg/gram.c	/^int yydebug;$/;"	v
yydefact	src/tools/lcc/lburg/gram.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	src/tools/lcc/lburg/gram.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	src/tools/lcc/lburg/gram.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyerrcnt	src/server/sqlite3.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrok	src/tools/lcc/lburg/gram.c	565;"	d	file:
yyerror	src/tools/lcc/lburg/gram.c	/^void yyerror(char *fmt, ...) {$/;"	f
yyidx	src/server/sqlite3.c	/^  int yyidx;                    \/* Index of top element in stack *\/$/;"	m	struct:yyParser	file:
yyidxMax	src/server/sqlite3.c	/^  int yyidxMax;                 \/* Maximum value of yyidx *\/$/;"	m	struct:yyParser	file:
yyinit	src/server/sqlite3.c	/^  int yyinit;$/;"	m	union:__anon216	file:
yylex	src/tools/lcc/lburg/gram.c	/^int yylex(void) {$/;"	f
yylineno	src/tools/lcc/lburg/gram.c	/^static int yylineno = 0;$/;"	v	file:
yylval	src/tools/lcc/lburg/gram.c	/^YYSTYPE yylval;$/;"	v
yynerrs	src/tools/lcc/lburg/gram.c	/^int yynerrs;$/;"	v
yypact	src/tools/lcc/lburg/gram.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypact_value_is_default	src/tools/lcc/lburg/gram.c	478;"	d	file:
yyparse	src/tools/lcc/lburg/gram.c	/^yyparse (void)$/;"	f
yypgoto	src/tools/lcc/lburg/gram.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yyr1	src/tools/lcc/lburg/gram.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	src/tools/lcc/lburg/gram.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrline	src/tools/lcc/lburg/gram.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyss_alloc	src/tools/lcc/lburg/gram.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystack	src/server/sqlite3.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystksz	src/server/sqlite3.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yystos	src/tools/lcc/lburg/gram.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	src/tools/lcc/lburg/gram.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	src/tools/lcc/lburg/gram.c	767;"	d	file:
yystrlen	src/tools/lcc/lburg/gram.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	src/tools/lcc/lburg/gram.c	751;"	d	file:
yysyntax_error	src/tools/lcc/lburg/gram.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	src/tools/lcc/lburg/gram.c	/^static const yytype_int8 yytable[] =$/;"	v	file:
yytable_value_is_error	src/tools/lcc/lburg/gram.c	483;"	d	file:
yytestcase	src/server/sqlite3.c	128331;"	d	file:
yytestcase	src/server/sqlite3.c	128620;"	d	file:
yytname	src/tools/lcc/lburg/gram.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	src/tools/lcc/lburg/gram.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	src/tools/lcc/lburg/gram.c	/^  enum yytokentype$/;"	g	file:
yytoknum	src/tools/lcc/lburg/gram.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	src/tools/lcc/lburg/gram.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	src/tools/lcc/lburg/gram.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	src/tools/lcc/lburg/gram.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	src/tools/lcc/lburg/gram.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	src/tools/lcc/lburg/gram.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	src/tools/lcc/lburg/gram.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	src/tools/lcc/lburg/gram.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	src/tools/lcc/lburg/gram.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	src/tools/lcc/lburg/gram.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs_alloc	src/tools/lcc/lburg/gram.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywarn	src/tools/lcc/lburg/gram.c	/^void yywarn(char *fmt, ...) {$/;"	f
z	src/qcommon/files.c	/^	unzFile		z;$/;"	m	union:qfile_gus	file:
z	src/renderergl2/tr_vbo.c	/^		signed int z:10;$/;"	m	struct:pack10_u::__anon1	file:
z	src/renderergl2/tr_vbo.c	/^		signed int z:8;$/;"	m	struct:pack8_u::__anon2	file:
z	src/server/sqlite3.c	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::p4union	file:
z	src/server/sqlite3.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	src/server/sqlite3.c	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken	file:
z	src/server/sqlite3.c	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:Mem	file:
z	src/server/sqlite3.c	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token	file:
zAlias	src/server/sqlite3.c	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item	file:
zAuthContext	src/server/sqlite3.c	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext	file:
zAuthContext	src/server/sqlite3.c	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse	file:
zAuthPW	src/server/sqlite3.c	/^  char *zAuthPW;                \/* Password used to authenticate *\/$/;"	m	struct:sqlite3_userauth	file:
zAuthUser	src/server/sqlite3.c	/^  char *zAuthUser;              \/* User name used to authenticate *\/$/;"	m	struct:sqlite3_userauth	file:
zBase	src/server/sqlite3.c	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum	file:
zBase	src/server/sqlite3.c	/^  char zBase[100];   \/* Initial space *\/$/;"	m	struct:Explain	file:
zBuf	src/server/sqlite3.c	/^  char *zBuf;              \/* Append JSON content here *\/$/;"	m	struct:JsonString	file:
zBuffer	src/server/sqlite3.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zCanonicalName	src/server/sqlite3.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zChunk	src/server/sqlite3.c	/^  u8 zChunk[8];                   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zClose	src/server/sqlite3.c	/^  const char *zClose;             \/* Closing highlight *\/$/;"	m	struct:HighlightContext	file:
zCol	src/server/sqlite3.c	/^    char *zCol;           \/* Name of column in zTo.  If NULL use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap	file:
zColAff	src/server/sqlite3.c	/^  char *zColAff;           \/* String defining the affinity of each column *\/$/;"	m	struct:Index	file:
zColAff	src/server/sqlite3.c	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table	file:
zColl	src/server/sqlite3.c	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column	file:
zCollName	src/server/sqlite3.c	/^  const char *zCollName;     \/* Required collating sequence, if not NULL *\/$/;"	m	struct:WhereScan	file:
zComment	src/server/sqlite3.c	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp	file:
zContent	src/server/sqlite3.c	/^  char *zContent;                 \/* content table *\/ $/;"	m	struct:Fts5Config	file:
zContentExprlist	src/server/sqlite3.c	/^  char *zContentExprlist;$/;"	m	struct:Fts5Config	file:
zContentRowid	src/server/sqlite3.c	/^  char *zContentRowid;            \/* "content_rowid=" option value *\/ $/;"	m	struct:Fts5Config	file:
zContentTbl	src/server/sqlite3.c	/^  char *zContentTbl;              \/* content=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zCteErr	src/server/sqlite3.c	/^    const char *zCteErr;            \/* Error message for circular references *\/$/;"	m	struct:With::Cte	file:
zData	src/server/sqlite3.c	/^  u8 *zData;                  \/* Content of the node, as should be on disk *\/$/;"	m	struct:RtreeNode	file:
zDataTbl	src/server/sqlite3.c	/^  char *zDataTbl;                 \/* Name of %_data table *\/$/;"	m	struct:Fts5Index	file:
zDataTbl	src/server/sqlite3.c	/^  const char *zDataTbl;           \/* Name of rbu db table (or null) *\/$/;"	m	struct:RbuObjIter	file:
zDatabase	src/server/sqlite3.c	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zDatabase	src/server/sqlite3.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDb	src/server/sqlite3.c	/^  char *zDb;                      \/* Database holding FTS index (e.g. "main") *\/$/;"	m	struct:Fts5Config	file:
zDb	src/server/sqlite3.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	src/server/sqlite3.c	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table	file:
zDb	src/server/sqlite3.c	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer	file:
zDel	src/server/sqlite3.c	/^  char *zDel;                     \/* Delete this when closing file *\/$/;"	m	struct:rbu_file	file:
zDeleteOnClose	src/server/sqlite3.c	/^  LPWSTR zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zEnd	src/server/sqlite3.c	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan	file:
zErr	src/server/sqlite3.c	/^  char *zErr;$/;"	m	struct:Fts5Parse	file:
zErrMsg	src/server/sqlite3.c	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	file:
zErrMsg	src/server/sqlite3.c	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe	file:
zErrMsg	src/server/sqlite3.c	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse	file:
zErrMsg	src/server/sqlite3.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrMsg	src/server/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zErrmsg	src/server/sqlite3.c	/^  char *zErrmsg;                  \/* Error message if rc!=SQLITE_OK *\/$/;"	m	struct:sqlite3rbu	file:
zFar	src/renderergl1/tr_local.h	/^	float		zFar;$/;"	m	struct:__anon150
zFar	src/renderergl2/tr_local.h	/^	float		zFar;$/;"	m	struct:__anon43
zFilename	src/server/sqlite3.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFilename	src/server/sqlite3.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	src/server/sqlite3.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFts5Db	src/server/sqlite3.c	/^  char *zFts5Db;                  \/* Db containing fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Tbl	src/server/sqlite3.c	/^  char *zFts5Tbl;                 \/* Name of fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFunc	src/server/sqlite3.c	/^  char *zFunc;                    \/* Function name (nul-terminated) *\/$/;"	m	struct:Fts5Auxiliary	file:
zIdx	src/server/sqlite3.c	/^  char *zIdx;$/;"	m	struct:RbuState	file:
zIdx	src/server/sqlite3.c	/^  const char *zIdx;               \/* Name of target db index (or null) *\/$/;"	m	struct:RbuObjIter	file:
zIn	src/server/sqlite3.c	/^  const char *zIn;                \/* Input text *\/$/;"	m	struct:HighlightContext	file:
zIndexedBy	src/server/sqlite3.c	/^      char *zIndexedBy;    \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	union:SrcList::SrcList_item::__anon199	file:
zInput	src/server/sqlite3.c	/^  char *zInput;                   \/* Input string *\/$/;"	m	struct:Fts3tokCursor	file:
zInput	src/server/sqlite3.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zJContent	src/server/sqlite3.c	/^    const char *zJContent; \/* Content for INT, REAL, and STRING *\/$/;"	m	union:JsonNode::__anon220	file:
zJournal	src/server/sqlite3.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJournal	src/server/sqlite3.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:MemJournal	file:
zJson	src/server/sqlite3.c	/^  char *zJson;               \/* Input JSON *\/$/;"	m	struct:JsonEachCursor	file:
zJson	src/server/sqlite3.c	/^  const char *zJson; \/* Original JSON string *\/$/;"	m	struct:JsonParse	file:
zKey	src/server/sqlite3.c	/^  char zKey[8];                   \/* Nul-terminated entry key *\/$/;"	m	struct:Fts5HashEntry	file:
zLanguageid	src/server/sqlite3.c	/^  char *zLanguageid;              \/* languageid=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zLeTerm	src/server/sqlite3.c	/^  char *zLeTerm;                  \/* (term <= $zLeTerm) paramater, or NULL *\/$/;"	m	struct:Fts5VocabCursor	file:
zLocale	src/server/sqlite3.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zMagicHeader	src/server/sqlite3.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMalloc	src/server/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	src/server/sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	src/server/sqlite3.c	/^  char *zMalloc;      \/* Space to hold MEM_Str or MEM_Blob if szMalloc>0 *\/$/;"	m	struct:Mem	file:
zMask	src/server/sqlite3.c	/^  char *zMask;                    \/* Copy of update mask used with pUpdate *\/$/;"	m	struct:RbuUpdateStmt	file:
zMatchinfo	src/server/sqlite3.c	/^  char *zMatchinfo;$/;"	m	struct:MatchinfoBuffer	file:
zName	src/server/sqlite3.c	/^    char *zName;                    \/* Name of this CTE *\/$/;"	m	struct:With::Cte	file:
zName	src/server/sqlite3.c	/^    char *zName;            \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zName	src/server/sqlite3.c	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item	file:
zName	src/server/sqlite3.c	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zName	src/server/sqlite3.c	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint	file:
zName	src/server/sqlite3.c	/^  char *zName;                    \/* Name of FTS index *\/$/;"	m	struct:Fts5Config	file:
zName	src/server/sqlite3.c	/^  char *zName;                    \/* Name of table or index *\/$/;"	m	struct:ScanStatus	file:
zName	src/server/sqlite3.c	/^  char *zName;                    \/* Name of tokenizer *\/$/;"	m	struct:Fts5TokenizerModule	file:
zName	src/server/sqlite3.c	/^  char *zName;                    \/* Value of 'name' column *\/$/;"	m	struct:StatCursor	file:
zName	src/server/sqlite3.c	/^  char *zName;                \/* Name of r-tree table *\/ $/;"	m	struct:Rtree	file:
zName	src/server/sqlite3.c	/^  char *zName;             \/* Name of this index *\/$/;"	m	struct:Index	file:
zName	src/server/sqlite3.c	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger	file:
zName	src/server/sqlite3.c	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq	file:
zName	src/server/sqlite3.c	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table	file:
zName	src/server/sqlite3.c	/^  char *zName;         \/* Name of this database *\/$/;"	m	struct:Db	file:
zName	src/server/sqlite3.c	/^  char *zName;     \/* Name of this column, \\000, then the type *\/$/;"	m	struct:Column	file:
zName	src/server/sqlite3.c	/^  const char *const zName;  \/* Name of pragma *\/$/;"	m	struct:sPragmaNames	file:
zName	src/server/sqlite3.c	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module	file:
zName	src/server/sqlite3.c	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table	file:
zName	src/server/sqlite3.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:unix_syscall	file:
zName	src/server/sqlite3.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:win_syscall	file:
zName	src/server/sqlite3.c	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	file:
zName	src/server/sqlite3.c	/^  const char *zName;   \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zName	src/server/sqlite3.c	/^  const char *zName;   \/* SQL name of the function. *\/$/;"	m	struct:FuncDef	file:
zName	src/server/sqlite3.c	/^  const char *zName;$/;"	m	struct:Fts5Enum	file:
zName	src/server/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
zNear	src/renderergl2/tr_local.h	/^	float       zNear;$/;"	m	struct:__anon43
zOffset	src/game/bg_public.h	/^  float     zOffset;$/;"	m	struct:__anon350
zOffset	src/game/bg_public.h	/^  float     zOffset;$/;"	m	struct:__anon354
zOpen	src/server/sqlite3.c	/^  const char *zOpen;              \/* Opening highlight *\/$/;"	m	struct:HighlightContext	file:
zOut	src/server/sqlite3.c	/^  char *zOut;                     \/* Output value *\/$/;"	m	struct:HighlightContext	file:
zOutput	src/server/sqlite3.c	/^  const char *zOutput;$/;"	m	struct:PorterRule	file:
zPagetype	src/server/sqlite3.c	/^  char *zPagetype;                \/* Value of 'pagetype' column *\/$/;"	m	struct:StatCursor	file:
zPath	src/server/sqlite3.c	/^  char *zPath;                    \/* Path to this page *\/$/;"	m	struct:StatPage	file:
zPath	src/server/sqlite3.c	/^  char *zPath;                    \/* Value of 'path' column *\/$/;"	m	struct:StatCursor	file:
zPath	src/server/sqlite3.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	src/server/sqlite3.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPfx	src/server/sqlite3.c	/^  const char *zPfx; \/* Error message prefix *\/$/;"	m	struct:IntegrityCk	file:
zPool	src/server/sqlite3.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zRank	src/server/sqlite3.c	/^  char *zRank;                    \/* Custom rank function *\/$/;"	m	struct:Fts5Cursor	file:
zRank	src/server/sqlite3.c	/^  char *zRank;                    \/* Name of rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	src/server/sqlite3.c	/^  char *zRankArgs;                \/* Arguments to rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	src/server/sqlite3.c	/^  char *zRankArgs;                \/* Custom rank function args *\/$/;"	m	struct:Fts5Cursor	file:
zRbu	src/server/sqlite3.c	/^  char *zRbu;                     \/* Path to rbu db *\/$/;"	m	struct:sqlite3rbu	file:
zReadExprlist	src/server/sqlite3.c	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table	file:
zRoot	src/server/sqlite3.c	/^  char *zRoot;               \/* Path by which to filter zJson *\/$/;"	m	struct:JsonEachCursor	file:
zSegmentsTbl	src/server/sqlite3.c	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table	file:
zSelName	src/server/sqlite3.c	/^  char zSelName[12];     \/* Symbolic name of this SELECT use for debugging *\/$/;"	m	struct:Select	file:
zSpace	src/server/sqlite3.c	/^  char zSpace[100];        \/* Initial static space *\/$/;"	m	struct:JsonString	file:
zSpan	src/server/sqlite3.c	/^    char *zSpan;            \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zSql	src/server/sqlite3.c	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe	file:
zStart	src/server/sqlite3.c	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan	file:
zState	src/server/sqlite3.c	/^  char *zState;                   \/* Path to state db (or NULL if zRbu) *\/$/;"	m	struct:sqlite3rbu	file:
zStateDb	src/server/sqlite3.c	/^  char zStateDb[5];               \/* Db name for state ("stat" or "main") *\/$/;"	m	struct:sqlite3rbu	file:
zStop	src/server/sqlite3.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zSuffix	src/server/sqlite3.c	/^  const char *zSuffix;$/;"	m	struct:PorterRule	file:
zTail	src/server/sqlite3.c	/^  const char *zTail;        \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse	file:
zTarget	src/server/sqlite3.c	/^  char *zTarget;                  \/* Path to target db *\/$/;"	m	struct:sqlite3rbu	file:
zTarget	src/server/sqlite3.c	/^  char *zTarget;       \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep	file:
zTbl	src/server/sqlite3.c	/^  char *zTbl;$/;"	m	struct:RbuState	file:
zTbl	src/server/sqlite3.c	/^  const char *zTbl;               \/* Name of target db table *\/$/;"	m	struct:RbuObjIter	file:
zTerm	src/server/sqlite3.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	src/server/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	src/server/sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	src/server/sqlite3.c	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
zTerm	src/server/sqlite3.c	/^  char *zTerm;                    \/* nul-terminated term *\/$/;"	m	struct:Fts5ExprTerm	file:
zTerm	src/server/sqlite3.c	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter	file:
zText	src/server/sqlite3.c	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum	file:
zTitle	src/server/sqlite3.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon203	file:
zTo	src/server/sqlite3.c	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey	file:
zToken	src/server/sqlite3.c	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon194	file:
zToken	src/server/sqlite3.c	/^  char *zToken;                   \/* storage for current token *\/$/;"	m	struct:unicode_cursor	file:
zToken	src/server/sqlite3.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	src/server/sqlite3.c	/^  const char *zToken;             \/* Current 'token' value *\/$/;"	m	struct:Fts3tokCursor	file:
zType	src/server/sqlite3.c	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
zVfsName	src/server/sqlite3.c	/^  const char *zVfsName;           \/* Name of automatically created rbu vfs *\/$/;"	m	struct:sqlite3rbu	file:
zWal	src/server/sqlite3.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWal	src/server/sqlite3.c	/^  const char *zWal;               \/* Wal filename for this main db file *\/$/;"	m	struct:rbu_file	file:
zWalName	src/server/sqlite3.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWriteExprlist	src/server/sqlite3.c	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table	file:
zap_s	src/game/g_local.h	/^typedef struct zap_s$/;"	s
zap_t	src/game/g_local.h	/^} zap_t;$/;"	t	typeref:struct:zap_s
zaps	src/game/g_weapon.c	/^zap_t zaps[ MAX_ZAPS ];$/;"	v
zero	src/game/bg_lib.c	/^zero    =  0.0,$/;"	v	file:
zeroJournalHdr	src/server/sqlite3.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroPage	src/server/sqlite3.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroblobFunc	src/server/sqlite3.c	/^static void zeroblobFunc($/;"	f	file:
zerofield	src/tools/lcc/src/simp.c	27;"	d	file:
zipFile	src/qcommon/files.c	/^	qboolean	zipFile;$/;"	m	struct:__anon455	file:
zipFileLen	src/qcommon/files.c	/^	int			zipFileLen;$/;"	m	struct:__anon455	file:
zipFilePos	src/qcommon/files.c	/^	int			zipFilePos;$/;"	m	struct:__anon455	file:
zonedebug_s	src/qcommon/common.c	/^typedef struct zonedebug_s {$/;"	s	file:
zonedebug_t	src/qcommon/common.c	/^} zonedebug_t;$/;"	t	typeref:struct:zonedebug_s	file:
zoomFov	src/game/bg_public.h	/^  float     zoomFov;$/;"	m	struct:__anon355
zoomSensitivity	src/cgame/cg_local.h	/^  float         zoomSensitivity;$/;"	m	struct:__anon249
zoomTime	src/cgame/cg_local.h	/^  int           zoomTime;$/;"	m	struct:__anon249
zoomed	src/cgame/cg_local.h	/^  qboolean      zoomed;$/;"	m	struct:__anon249
